{"version":3,"file":"LLMIcon-CUYaTADE.js","sources":["../../node_modules/vite-plugin-node-polyfills/shims/global/dist/index.js","../../src/services/database/types/llm.ts","../../node_modules/@langchain/core/dist/utils/fast-json-patch/src/duplex.js","../../node_modules/@cfworker/json-schema/dist/esm/deep-compare-strict.js","../../src/services/local-llm/utils/stream.ts","../../src/services/local-llm/hooks/use-local-llm-info.ts","../../src/services/local-llm/hooks/use-unload-local-llm.ts","../../src/services/local-llm/hooks/use-local-llm.ts","../../node_modules/reflect-metadata/Reflect.js","../../node_modules/typeorm/browser/platform/BrowserPlatformTools.js","../../node_modules/typeorm/browser/util/ObjectUtils.js","../../node_modules/typeorm/browser/error/TypeORMError.js","../../node_modules/typeorm/browser/error/LockNotSupportedOnGivenDriverError.js","../../node_modules/typeorm/browser/error/UpdateValuesMissingError.js","../../node_modules/typeorm/browser/util/InstanceChecker.js","../../node_modules/typeorm/browser/error/EntityNotFoundError.js","../../node_modules/typeorm/browser/error/OptimisticLockVersionMismatchError.js","../../node_modules/typeorm/browser/error/LimitOnUpdateNotSupportedError.js","../../node_modules/typeorm/browser/error/MissingDeleteDateColumnError.js","../../node_modules/typeorm/browser/error/ReturningStatementNotSupportedError.js","../../node_modules/typeorm/browser/error/EntityPropertyNotFoundError.js","../../node_modules/typeorm/browser/error/NoVersionOrUpdateDateColumnError.js","../../node_modules/typeorm/browser/error/InsertValuesMissingError.js","../../node_modules/typeorm/browser/error/OptimisticLockCanNotBeUsedError.js","../../node_modules/typeorm/browser/error/FindRelationsNotFoundError.js","../../node_modules/typeorm/browser/error/PessimisticLockTransactionRequiredError.js","../../node_modules/typeorm/browser/error/OffsetWithoutLimitNotSupportedError.js","../../node_modules/typeorm/browser/query-builder/Alias.js","../../node_modules/typeorm/browser/query-builder/QueryBuilderUtils.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/sha.js/hash.js","../../node_modules/sha.js/sha.js","../../node_modules/sha.js/sha1.js","../../node_modules/sha.js/sha256.js","../../node_modules/sha.js/sha224.js","../../node_modules/sha.js/sha512.js","../../node_modules/sha.js/sha384.js","../../node_modules/sha.js/index.js","../../node_modules/typeorm/browser/util/StringUtils.js","../../node_modules/typeorm/browser/util/VersionUtils.js","../../node_modules/typeorm/browser/driver/DriverUtils.js","../../node_modules/typeorm/browser/query-builder/JoinAttribute.js","../../node_modules/typeorm/browser/query-builder/relation-id/RelationIdAttribute.js","../../node_modules/typeorm/browser/query-builder/relation-count/RelationCountAttribute.js","../../node_modules/typeorm/browser/query-builder/QueryExpressionMap.js","../../node_modules/typeorm/browser/query-builder/Brackets.js","../../node_modules/typeorm/browser/util/ApplyValueTransformers.js","../../node_modules/typeorm/browser/find-options/FindOperator.js","../../node_modules/typeorm/browser/find-options/operator/In.js","../../node_modules/typeorm/browser/util/escapeRegExp.js","../../node_modules/typeorm/browser/query-builder/QueryBuilder.js","../../node_modules/typeorm/browser/query-builder/result/DeleteResult.js","../../node_modules/typeorm/browser/query-builder/DeleteQueryBuilder.js","../../node_modules/typeorm/node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/typeorm/node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/typeorm/node_modules/uuid/dist/esm-browser/native.js","../../node_modules/typeorm/node_modules/uuid/dist/esm-browser/v4.js","../../node_modules/typeorm/browser/subscriber/BroadcasterResult.js","../../node_modules/typeorm/browser/query-builder/result/InsertResult.js","../../node_modules/typeorm/browser/query-builder/ReturningResultsEntityUpdator.js","../../node_modules/typeorm/browser/query-builder/InsertQueryBuilder.js","../../node_modules/typeorm/browser/query-builder/RelationUpdater.js","../../node_modules/typeorm/browser/query-builder/RelationRemover.js","../../node_modules/typeorm/browser/query-builder/RelationQueryBuilder.js","../../node_modules/typeorm/browser/util/OrmUtils.js","../../node_modules/typeorm/browser/query-builder/transformer/RawSqlResultsToEntityTransformer.js","../../node_modules/typeorm/browser/query-builder/relation-id/RelationIdLoader.js","../../node_modules/typeorm/browser/query-builder/RelationIdLoader.js","../../node_modules/typeorm/browser/query-builder/relation-id/RelationIdMetadataToAttributeTransformer.js","../../node_modules/typeorm/browser/query-builder/relation-count/RelationCountLoader.js","../../node_modules/typeorm/browser/query-builder/relation-count/RelationCountMetadataToAttributeTransformer.js","../../node_modules/typeorm/browser/find-options/FindOptionsUtils.js","../../node_modules/typeorm/browser/query-builder/SelectQueryBuilder.js","../../node_modules/typeorm/browser/query-builder/result/UpdateResult.js","../../node_modules/typeorm/browser/query-builder/SoftDeleteQueryBuilder.js","../../node_modules/typeorm/browser/query-builder/UpdateQueryBuilder.js","../../node_modules/typeorm/browser/query-builder/index.js","../../node_modules/typeorm/browser/driver/types/MetadataTableType.js","../../node_modules/debug/node_modules/ms/index.js","../../node_modules/debug/src/common.js","../../node_modules/debug/src/browser.js","../../node_modules/typeorm/browser/data-source/DataSource.js","../../src/hooks/mutations/use-load-model.ts","../../node_modules/input-otp/dist/index.mjs","../../src/lib/shadcn/ui/input-otp.tsx","../../src/components/dialogs/SessionPassphraseDialog/index.tsx","../../src/utils/aes.ts","../../src/utils/passphrase.ts","../../src/hooks/use-modal-ref.ts","../../node_modules/@langchain/core/dist/prompt_values.js","../../node_modules/@langchain/openai/node_modules/openai/internal/tslib.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/utils/uuid.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/errors.mjs","../../node_modules/@langchain/openai/node_modules/openai/core/error.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/utils/values.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/utils/sleep.mjs","../../node_modules/@langchain/openai/node_modules/openai/version.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/detect-platform.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/shims.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/request-options.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/qs/formats.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/qs/utils.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/qs/stringify.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/utils/bytes.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/decoders/line.mjs","../../node_modules/@langchain/openai/node_modules/openai/core/streaming.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/utils/log.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/parse.mjs","../../node_modules/@langchain/openai/node_modules/openai/core/api-promise.mjs","../../node_modules/@langchain/openai/node_modules/openai/core/pagination.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/uploads.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/to-file.mjs","../../node_modules/@langchain/openai/node_modules/openai/core/resource.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/utils/path.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/chat/completions/messages.mjs","../../node_modules/@langchain/openai/node_modules/openai/lib/RunnableFunction.mjs","../../node_modules/@langchain/openai/node_modules/openai/lib/chatCompletionUtils.mjs","../../node_modules/@langchain/openai/node_modules/openai/lib/EventStream.mjs","../../node_modules/@langchain/openai/node_modules/openai/lib/parser.mjs","../../node_modules/@langchain/openai/node_modules/openai/lib/AbstractChatCompletionRunner.mjs","../../node_modules/@langchain/openai/node_modules/openai/lib/ChatCompletionRunner.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/partial-json-parser/parser.mjs","../../node_modules/@langchain/openai/node_modules/openai/lib/ChatCompletionStream.mjs","../../node_modules/@langchain/openai/node_modules/openai/lib/ChatCompletionStreamingRunner.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/chat/completions/completions.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/chat/chat.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/headers.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/audio/speech.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/audio/transcriptions.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/audio/translations.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/audio/audio.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/batches.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/beta/assistants.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/beta/realtime/sessions.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/beta/realtime/transcription-sessions.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/beta/realtime/realtime.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/beta/threads/messages.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/beta/threads/runs/steps.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/utils/base64.mjs","../../node_modules/@langchain/openai/node_modules/openai/internal/utils/env.mjs","../../node_modules/@langchain/openai/node_modules/openai/lib/AssistantStream.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/beta/threads/runs/runs.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/beta/threads/threads.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/beta/beta.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/completions.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/containers/files/content.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/containers/files/files.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/containers/containers.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/embeddings.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/evals/runs/output-items.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/evals/runs/runs.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/evals/evals.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/files.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/fine-tuning/methods.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/fine-tuning/alpha/graders.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/fine-tuning/alpha/alpha.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/fine-tuning/jobs/jobs.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/fine-tuning/fine-tuning.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/graders/grader-models.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/graders/graders.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/images.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/models.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/moderations.mjs","../../node_modules/@langchain/openai/node_modules/openai/lib/ResponsesParser.mjs","../../node_modules/@langchain/openai/node_modules/openai/lib/responses/ResponseStream.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/responses/input-items.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/responses/responses.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/uploads/parts.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/uploads/uploads.mjs","../../node_modules/@langchain/openai/node_modules/openai/lib/Util.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/vector-stores/file-batches.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/vector-stores/files.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/vector-stores/vector-stores.mjs","../../node_modules/@langchain/openai/node_modules/openai/resources/webhooks.mjs","../../node_modules/@langchain/openai/node_modules/openai/client.mjs","../../node_modules/@langchain/openai/node_modules/zod/dist/esm/v4/core/core.js","../../node_modules/@langchain/openai/node_modules/zod/dist/esm/v4/core/util.js","../../node_modules/@langchain/openai/node_modules/zod/dist/esm/v4/core/errors.js","../../node_modules/@langchain/openai/node_modules/zod/dist/esm/v4/core/parse.js","../../node_modules/@langchain/openai/node_modules/zod/dist/esm/v4/core/registries.js","../../node_modules/@langchain/openai/node_modules/zod/dist/esm/v4/core/to-json-schema.js","../../node_modules/@langchain/core/dist/utils/js-sha1/hash.js","../../node_modules/@langchain/core/dist/caches/base.js","../../node_modules/@langchain/core/dist/language_models/base.js","../../node_modules/@langchain/core/dist/runnables/passthrough.js","../../node_modules/@langchain/core/dist/language_models/chat_models.js","../../node_modules/@langchain/core/dist/output_parsers/base.js","../../node_modules/@langchain/core/dist/output_parsers/transform.js","../../node_modules/@langchain/core/dist/output_parsers/structured.js","../../node_modules/@langchain/core/dist/output_parsers/json.js","../../node_modules/@langchain/core/dist/output_parsers/openai_tools/json_output_tools_parsers.js","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/Options.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/util.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/Refs.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/errorMessages.mjs","../../node_modules/@langchain/openai/node_modules/zod/dist/esm/v3/helpers/util.js","../../node_modules/@langchain/openai/node_modules/zod/dist/esm/v3/ZodError.js","../../node_modules/@langchain/openai/node_modules/zod/dist/esm/v3/helpers/errorUtil.js","../../node_modules/@langchain/openai/node_modules/zod/dist/esm/v3/types.js","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/any.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/array.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/bigint.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/boolean.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/branded.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/catch.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/date.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/default.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/effects.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/enum.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/intersection.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/literal.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/string.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/record.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/map.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/nativeEnum.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/never.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/null.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/union.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/nullable.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/number.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/object.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/optional.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/pipeline.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/promise.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/set.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/tuple.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/undefined.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/unknown.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/readonly.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parseDef.mjs","../../node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/zodToJsonSchema.mjs","../../node_modules/@langchain/openai/node_modules/openai/helpers/zod.mjs","../../node_modules/@langchain/openai/dist/utils/azure.js","../../node_modules/@langchain/core/dist/tools/types.js","../../node_modules/@langchain/core/dist/utils/function_calling.js","../../node_modules/@langchain/openai/dist/utils/errors.js","../../node_modules/@langchain/openai/dist/utils/openai.js","../../node_modules/@langchain/openai/dist/utils/openai-format-fndef.js","../../node_modules/@langchain/openai/dist/utils/tools.js","../../node_modules/@langchain/openai/dist/chat_models.js","../../node_modules/groq-sdk/version.mjs","../../node_modules/groq-sdk/_shims/registry.mjs","../../node_modules/groq-sdk/_shims/MultipartBody.mjs","../../node_modules/groq-sdk/_shims/web-runtime.mjs","../../node_modules/groq-sdk/_shims/index.mjs","../../node_modules/groq-sdk/error.mjs","../../node_modules/groq-sdk/lib/streaming.mjs","../../node_modules/groq-sdk/uploads.mjs","../../node_modules/groq-sdk/core.mjs","../../node_modules/groq-sdk/resource.mjs","../../node_modules/groq-sdk/resources/audio/speech.mjs","../../node_modules/groq-sdk/resources/audio/transcriptions.mjs","../../node_modules/groq-sdk/resources/audio/translations.mjs","../../node_modules/groq-sdk/resources/audio/audio.mjs","../../node_modules/groq-sdk/resources/batches.mjs","../../node_modules/groq-sdk/resources/chat/completions.mjs","../../node_modules/groq-sdk/resources/chat/chat.mjs","../../node_modules/groq-sdk/resources/completions.mjs","../../node_modules/groq-sdk/resources/embeddings.mjs","../../node_modules/groq-sdk/resources/files.mjs","../../node_modules/groq-sdk/resources/models.mjs","../../node_modules/groq-sdk/index.mjs","../../node_modules/@langchain/groq/dist/chat_models.js","../../node_modules/@google/generative-ai/dist/index.mjs","../../node_modules/@langchain/google-genai/dist/utils/zod_to_genai_parameters.js","../../node_modules/@langchain/google-genai/node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/@langchain/google-genai/node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/@langchain/google-genai/node_modules/uuid/dist/esm-browser/native.js","../../node_modules/@langchain/google-genai/node_modules/uuid/dist/esm-browser/v4.js","../../node_modules/@langchain/google-genai/dist/utils/common.js","../../node_modules/@langchain/google-genai/dist/output_parsers.js","../../node_modules/@langchain/google-genai/dist/utils/tools.js","../../node_modules/@langchain/google-genai/dist/chat_models.js","../../node_modules/zod/lib/index.mjs","../../src/utils/schema-format.ts","../../src/hooks/mutations/use-confirm-passphrase.ts","../../src/hooks/mutations/use-langchain-llm.ts","../../src/hooks/mutations/use-llm.ts","../../src/assets/svgs/snowflake.svg?react","../../src/assets/svgs/gemma.svg?react","../../src/assets/svgs/phi.svg?react","../../src/assets/svgs/meta.svg?react","../../src/assets/svgs/mistral.svg?react","../../src/assets/images/qwen.webp","../../src/assets/images/smollm.png","../../src/assets/images/stablelm.png","../../src/assets/images/nomic.webp","../../src/assets/images/joshua.webp","../../src/assets/images/deepseek.png","../../src/assets/images/redpajama.png","../../src/assets/svgs/openai_dark.svg?react","../../src/assets/svgs/openai_light.svg?react","../../src/components/atoms/LLMIcon.tsx"],"sourcesContent":["const global = globalThis || void 0 || self;\n\nexport { global as default, global };\n//# sourceMappingURL=index.js.map\n","export enum LLMStatusEnum {\n  Started = 'started',\n  Downloading = 'downloading',\n  Downloaded = 'downloaded',\n  Loading = 'loading',\n  Loaded = 'loaded',\n}\n\nexport enum LLMModelTypeEnum {\n  LLM = 'LLM',\n  embedding = 'embedding',\n  VLM = 'VLM',\n}\n\nexport enum LLMProviderEnum {\n  WebLLM = 'WebLLM',\n  Wllama = 'Wllama',\n  OpenAI = 'OpenAI',\n  Groq = 'Groq',\n  GoogleGenerativeAI = 'GoogleGenerativeAI',\n}\n","// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2013-2021 Joachim Wester\n * MIT license\n */\nimport { _deepClone, _objectKeys, escapePathComponent, hasOwnProperty, } from \"./helpers.js\";\nimport { applyPatch } from \"./core.js\";\nvar beforeDict = new WeakMap();\nclass Mirror {\n    constructor(obj) {\n        Object.defineProperty(this, \"obj\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.obj = obj;\n    }\n}\nclass ObserverInfo {\n    constructor(callback, observer) {\n        Object.defineProperty(this, \"callback\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.callback = callback;\n        this.observer = observer;\n    }\n}\nfunction getMirror(obj) {\n    return beforeDict.get(obj);\n}\nfunction getObserverFromMirror(mirror, callback) {\n    return mirror.observers.get(callback);\n}\nfunction removeObserverFromMirror(mirror, observer) {\n    mirror.observers.delete(observer.callback);\n}\n/**\n * Detach an observer from an object\n */\nexport function unobserve(root, observer) {\n    observer.unobserve();\n}\n/**\n * Observes changes made to an object, which can then be retrieved using generate\n */\nexport function observe(obj, callback) {\n    var patches = [];\n    var observer;\n    var mirror = getMirror(obj);\n    if (!mirror) {\n        mirror = new Mirror(obj);\n        beforeDict.set(obj, mirror);\n    }\n    else {\n        const observerInfo = getObserverFromMirror(mirror, callback);\n        observer = observerInfo && observerInfo.observer;\n    }\n    if (observer) {\n        return observer;\n    }\n    observer = {};\n    mirror.value = _deepClone(obj);\n    if (callback) {\n        observer.callback = callback;\n        observer.next = null;\n        var dirtyCheck = () => {\n            generate(observer);\n        };\n        var fastCheck = () => {\n            clearTimeout(observer.next);\n            observer.next = setTimeout(dirtyCheck);\n        };\n        if (typeof window !== \"undefined\") {\n            //not Node\n            window.addEventListener(\"mouseup\", fastCheck);\n            window.addEventListener(\"keyup\", fastCheck);\n            window.addEventListener(\"mousedown\", fastCheck);\n            window.addEventListener(\"keydown\", fastCheck);\n            window.addEventListener(\"change\", fastCheck);\n        }\n    }\n    observer.patches = patches;\n    observer.object = obj;\n    observer.unobserve = () => {\n        generate(observer);\n        clearTimeout(observer.next);\n        removeObserverFromMirror(mirror, observer);\n        if (typeof window !== \"undefined\") {\n            window.removeEventListener(\"mouseup\", fastCheck);\n            window.removeEventListener(\"keyup\", fastCheck);\n            window.removeEventListener(\"mousedown\", fastCheck);\n            window.removeEventListener(\"keydown\", fastCheck);\n            window.removeEventListener(\"change\", fastCheck);\n        }\n    };\n    mirror.observers.set(callback, new ObserverInfo(callback, observer));\n    return observer;\n}\n/**\n * Generate an array of patches from an observer\n */\nexport function generate(observer, invertible = false) {\n    var mirror = beforeDict.get(observer.object);\n    _generate(mirror.value, observer.object, observer.patches, \"\", invertible);\n    if (observer.patches.length) {\n        applyPatch(mirror.value, observer.patches);\n    }\n    var temp = observer.patches;\n    if (temp.length > 0) {\n        observer.patches = [];\n        if (observer.callback) {\n            observer.callback(temp);\n        }\n    }\n    return temp;\n}\n// Dirty check if obj is different from mirror, generate patches and update mirror\nfunction _generate(mirror, obj, patches, path, invertible) {\n    if (obj === mirror) {\n        return;\n    }\n    if (typeof obj.toJSON === \"function\") {\n        obj = obj.toJSON();\n    }\n    var newKeys = _objectKeys(obj);\n    var oldKeys = _objectKeys(mirror);\n    var changed = false;\n    var deleted = false;\n    //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n    for (var t = oldKeys.length - 1; t >= 0; t--) {\n        var key = oldKeys[t];\n        var oldVal = mirror[key];\n        if (hasOwnProperty(obj, key) &&\n            !(obj[key] === undefined &&\n                oldVal !== undefined &&\n                Array.isArray(obj) === false)) {\n            var newVal = obj[key];\n            if (typeof oldVal == \"object\" &&\n                oldVal != null &&\n                typeof newVal == \"object\" &&\n                newVal != null &&\n                Array.isArray(oldVal) === Array.isArray(newVal)) {\n                _generate(oldVal, newVal, patches, path + \"/\" + escapePathComponent(key), invertible);\n            }\n            else {\n                if (oldVal !== newVal) {\n                    changed = true;\n                    if (invertible) {\n                        patches.push({\n                            op: \"test\",\n                            path: path + \"/\" + escapePathComponent(key),\n                            value: _deepClone(oldVal),\n                        });\n                    }\n                    patches.push({\n                        op: \"replace\",\n                        path: path + \"/\" + escapePathComponent(key),\n                        value: _deepClone(newVal),\n                    });\n                }\n            }\n        }\n        else if (Array.isArray(mirror) === Array.isArray(obj)) {\n            if (invertible) {\n                patches.push({\n                    op: \"test\",\n                    path: path + \"/\" + escapePathComponent(key),\n                    value: _deepClone(oldVal),\n                });\n            }\n            patches.push({\n                op: \"remove\",\n                path: path + \"/\" + escapePathComponent(key),\n            });\n            deleted = true; // property has been deleted\n        }\n        else {\n            if (invertible) {\n                patches.push({ op: \"test\", path, value: mirror });\n            }\n            patches.push({ op: \"replace\", path, value: obj });\n            changed = true;\n        }\n    }\n    if (!deleted && newKeys.length == oldKeys.length) {\n        return;\n    }\n    for (var t = 0; t < newKeys.length; t++) {\n        var key = newKeys[t];\n        if (!hasOwnProperty(mirror, key) && obj[key] !== undefined) {\n            patches.push({\n                op: \"add\",\n                path: path + \"/\" + escapePathComponent(key),\n                value: _deepClone(obj[key]),\n            });\n        }\n    }\n}\n/**\n * Create an array of patches from the differences in two objects\n */\nexport function compare(tree1, tree2, invertible = false) {\n    var patches = [];\n    _generate(tree1, tree2, patches, \"\", invertible);\n    return patches;\n}\n","export function deepCompareStrict(a, b) {\n    const typeofa = typeof a;\n    if (typeofa !== typeof b) {\n        return false;\n    }\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b)) {\n            return false;\n        }\n        const length = a.length;\n        if (length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < length; i++) {\n            if (!deepCompareStrict(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (typeofa === 'object') {\n        if (!a || !b) {\n            return a === b;\n        }\n        const aKeys = Object.keys(a);\n        const bKeys = Object.keys(b);\n        const length = aKeys.length;\n        if (length !== bKeys.length) {\n            return false;\n        }\n        for (const k of aKeys) {\n            if (!deepCompareStrict(a[k], b[k])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return a === b;\n}\n","import type { BaseChatModel } from '@langchain/core/language_models/chat_models'\nimport type { BaseMessageChunk } from '@langchain/core/messages'\n\nexport const handleStream = async (\n  streamResponse:\n    | Awaited<ReturnType<BaseChatModel['stream']>>\n    | AsyncGenerator<Awaited<ReturnType<BaseChatModel['stream']>>>,\n  onMessageUpdate?: (data: { content: string; chunk: BaseMessageChunk }) => void,\n) => {\n  let content = ''\n  let response = ''\n  let lastChunk\n  const chunks: string[] = []\n  await streamResponse\n  for await (const chunk of streamResponse) {\n    if (!chunk) {\n      continue\n    }\n    if (Array.isArray(chunk)) {\n      chunks.push(...chunk.map((c) => c.content))\n      if (chunks?.length) {\n        response = chunks.join('')\n        onMessageUpdate?.({\n          chunk: chunk as BaseMessageChunk,\n          content: response,\n        })\n      }\n    } else {\n      content = typeof chunk === 'object' && 'content' in chunk ? `${chunk.content}` : `${chunk}`\n\n      onMessageUpdate?.({\n        chunk: chunk as BaseMessageChunk,\n        content,\n      })\n    }\n    lastChunk = chunk as BaseMessageChunk\n  }\n  return {\n    lastChunk,\n    content,\n  }\n}\n","import { useCallback } from 'react'\nimport { LLMProviderEnum } from 'src/services/database/types'\nimport { useLocalLLMState } from 'src/services/local-llm'\n\nexport const useLocalLLMInfo = () => {\n  const getCurrentModelInfo = useLocalLLMState((state) => state.getCurrentModelInfo)\n\n  const handleGetCurrentModelInfo = useCallback(\n    async (provider: `${LLMProviderEnum}`) => {\n      switch (provider) {\n        case LLMProviderEnum.WebLLM:\n          return getCurrentModelInfo()\n        default:\n          // No need to get info\n          return\n      }\n    },\n    [getCurrentModelInfo],\n  )\n\n  return {\n    getCurrentModelInfo: handleGetCurrentModelInfo,\n  }\n}\n","import { useCallback } from 'react'\nimport { LLMProviderEnum } from 'src/services/database/types'\nimport { useLocalLLMState } from 'src/services/local-llm'\n\nexport const useUnloadLocalLLM = () => {\n  const unLoadModel = useLocalLLMState((state) => state.unLoadModel)\n\n  const handleUnLoadModel = useCallback(\n    async (provider: `${LLMProviderEnum}`) => {\n      switch (provider) {\n        case LLMProviderEnum.WebLLM:\n          return unLoadModel()\n        default:\n          // No need to get info\n          return\n      }\n    },\n    [unLoadModel],\n  )\n\n  return {\n    unLoadModel: handleUnLoadModel,\n  }\n}\n","import { useCallback } from 'react'\nimport { AIMessage, BaseMessage, BaseMessageChunk } from '@langchain/core/messages'\nimport type { LLM, Schema, SchemaItem } from 'src/services/database/types'\nimport { logWarn } from 'src/utils/logger'\n\nimport { handleStream } from '../utils/stream'\nimport { useLocalLLMState } from '../state'\nimport { useLocalLLMInfo } from './use-local-llm-info'\nimport { useUnloadLocalLLM } from './use-unload-local-llm'\nimport { stream as wllamaStreamInner } from '../wllama'\n\ntype StreamType = {\n  schemas?: Schema[]\n  tools?: {\n    name: string\n    description: string\n    schemaItems: SchemaItem[]\n  }[]\n  onMessageUpdate?: (data: { content: string; chunk: BaseMessageChunk | BaseMessage }) => void\n  onMessageFinish?: (data: { content: string; lastChunk?: BaseMessageChunk | BaseMessage }) => void\n  llm?: LLM\n}\nexport const useLocalLLM = () => {\n  const toolsCallingStream = useLocalLLMState((state) => state.toolsCallingStream)\n  const structuredStream = useLocalLLMState((state) => state.structuredStream)\n  const stream = useLocalLLMState((state) => state.stream)\n  const { unLoadModel } = useUnloadLocalLLM()\n  const { getCurrentModelInfo } = useLocalLLMInfo()\n\n  const webLLMStream = useCallback(\n    async (messages: BaseMessage[], info?: StreamType) => {\n      const { tools, schemas, onMessageUpdate, onMessageFinish } = info || {}\n      let streamResponse: ReturnType<typeof stream> | ReturnType<typeof structuredStream>\n      if (!info?.llm) {\n        throw new Error('LLM is not found')\n      }\n\n      const modelInfo = await getCurrentModelInfo?.(info?.llm?.provider)\n      if (!modelInfo) {\n        throw new Error('Model is not found')\n      }\n\n      if (schemas?.length) {\n        if (schemas && schemas?.length > 1) {\n          // Not supported\n          logWarn('Multiple schemas are not supported. Only the first schema will be used.')\n        }\n        streamResponse = structuredStream(schemas?.[0]?.schema_items || [], messages, {\n          provider: info?.llm?.provider,\n        })\n      } else if (tools?.length) {\n        streamResponse = toolsCallingStream(tools, messages, {\n          provider: info?.llm?.provider,\n        })\n      } else {\n        streamResponse = stream(messages, {\n          provider: info?.llm?.provider,\n        })\n      }\n\n      if (!streamResponse) {\n        throw new Error('Stream is not supported')\n      }\n\n      const { lastChunk, content } = await handleStream(streamResponse, onMessageUpdate)\n      onMessageFinish?.({\n        content,\n        lastChunk,\n      })\n      return {\n        lastChunk,\n        content,\n      }\n    },\n    [getCurrentModelInfo, stream, structuredStream, toolsCallingStream],\n  )\n\n  const wllamaStream = useCallback(\n    async (messages: BaseMessage[], info?: StreamType) => {\n      let content = ''\n      let lastChunk: BaseMessage | undefined\n      const { tools, schemas, onMessageUpdate, onMessageFinish } = info || {}\n      if (!info?.llm) {\n        throw new Error('LLM is not found')\n      }\n\n      const modelInfo = await getCurrentModelInfo?.(info?.llm?.provider)\n      if (modelInfo) {\n        unLoadModel?.(info?.llm?.provider)\n      }\n\n      if (schemas?.length) {\n        if (schemas && schemas?.length > 1) {\n          // Not supported\n          logWarn('Multiple schemas are not supported. Only the first schema will be used.')\n        }\n        throw new Error('Structured stream is not supported')\n      } else if (tools?.length) {\n        throw new Error('Tools calling stream is not supported')\n      } else {\n        const response = await wllamaStreamInner(messages, {\n          onNewToken: (_token, _piece, newToken) => {\n            content += newToken\n            onMessageUpdate?.({\n              content: content,\n              chunk: new AIMessage(newToken),\n            })\n          },\n        })\n        content = `${response.content}`\n        lastChunk = response\n      }\n      onMessageFinish?.({\n        content,\n        lastChunk,\n      })\n      return {\n        lastChunk,\n        content,\n      }\n    },\n    [getCurrentModelInfo, stream, structuredStream, toolsCallingStream, unLoadModel],\n  )\n\n  const llmStream = useCallback(\n    async (messages: BaseMessage[], info?: StreamType) => {\n      switch (info?.llm?.provider) {\n        case 'WebLLM':\n          return webLLMStream(messages, info)\n        case 'Wllama':\n          return wllamaStream(messages, info)\n        default:\n          return\n      }\n    },\n    [webLLMStream, wllamaStream],\n  )\n\n  return {\n    stream: llmStream,\n  }\n}\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof globalThis === \"object\" ? globalThis :\n            typeof global === \"object\" ? global :\n                typeof self === \"object\" ? self :\n                    typeof this === \"object\" ? this :\n                        sloppyModeThis();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect !== \"undefined\") {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter, root);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                if (previous)\n                    previous(key, value);\n            };\n        }\n        function functionThis() {\n            try {\n                return Function(\"return this;\")();\n            }\n            catch (_) { }\n        }\n        function indirectEvalThis() {\n            try {\n                return (void 0, eval)(\"(function() { return this; })()\");\n            }\n            catch (_) { }\n        }\n        function sloppyModeThis() {\n            return functionThis() || indirectEvalThis();\n        }\n    })(function (exporter, root) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n        var metadataRegistry = GetOrCreateMetadataRegistry();\n        var metadataProvider = CreateMetadataProvider(metadataRegistry);\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return;\n            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ true);\n            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var provider = GetMetadataProvider(O, P, /*create*/ false);\n            if (!provider) {\n                return [];\n            }\n            return provider.OrdinaryOwnMetadataKeys(O, P);\n        }\n        // 6 ECMAScript Data Types and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        function SameValueZero(x, y) {\n            return x === y || x !== x && y !== y;\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // Global metadata registry\n        // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n        /**\n         * Creates a registry used to allow multiple `reflect-metadata` providers.\n         */\n        function CreateMetadataRegistry() {\n            var fallback;\n            if (!IsUndefined(registrySymbol) &&\n                typeof root.Reflect !== \"undefined\" &&\n                !(registrySymbol in root.Reflect) &&\n                typeof root.Reflect.defineMetadata === \"function\") {\n                // interoperate with older version of `reflect-metadata` that did not support a registry.\n                fallback = CreateFallbackProvider(root.Reflect);\n            }\n            var first;\n            var second;\n            var rest;\n            var targetProviderMap = new _WeakMap();\n            var registry = {\n                registerProvider: registerProvider,\n                getProvider: getProvider,\n                setProvider: setProvider,\n            };\n            return registry;\n            function registerProvider(provider) {\n                if (!Object.isExtensible(registry)) {\n                    throw new Error(\"Cannot add provider to a frozen registry.\");\n                }\n                switch (true) {\n                    case fallback === provider: break;\n                    case IsUndefined(first):\n                        first = provider;\n                        break;\n                    case first === provider: break;\n                    case IsUndefined(second):\n                        second = provider;\n                        break;\n                    case second === provider: break;\n                    default:\n                        if (rest === undefined)\n                            rest = new _Set();\n                        rest.add(provider);\n                        break;\n                }\n            }\n            function getProviderNoCache(O, P) {\n                if (!IsUndefined(first)) {\n                    if (first.isProviderFor(O, P))\n                        return first;\n                    if (!IsUndefined(second)) {\n                        if (second.isProviderFor(O, P))\n                            return first;\n                        if (!IsUndefined(rest)) {\n                            var iterator = GetIterator(rest);\n                            while (true) {\n                                var next = IteratorStep(iterator);\n                                if (!next) {\n                                    return undefined;\n                                }\n                                var provider = IteratorValue(next);\n                                if (provider.isProviderFor(O, P)) {\n                                    IteratorClose(iterator);\n                                    return provider;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n                    return fallback;\n                }\n                return undefined;\n            }\n            function getProvider(O, P) {\n                var providerMap = targetProviderMap.get(O);\n                var provider;\n                if (!IsUndefined(providerMap)) {\n                    provider = providerMap.get(P);\n                }\n                if (!IsUndefined(provider)) {\n                    return provider;\n                }\n                provider = getProviderNoCache(O, P);\n                if (!IsUndefined(provider)) {\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return provider;\n            }\n            function hasProvider(provider) {\n                if (IsUndefined(provider))\n                    throw new TypeError();\n                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n            }\n            function setProvider(O, P, provider) {\n                if (!hasProvider(provider)) {\n                    throw new Error(\"Metadata provider not registered.\");\n                }\n                var existingProvider = getProvider(O, P);\n                if (existingProvider !== provider) {\n                    if (!IsUndefined(existingProvider)) {\n                        return false;\n                    }\n                    var providerMap = targetProviderMap.get(O);\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return true;\n            }\n        }\n        /**\n         * Gets or creates the shared registry of metadata providers.\n         */\n        function GetOrCreateMetadataRegistry() {\n            var metadataRegistry;\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                metadataRegistry = root.Reflect[registrySymbol];\n            }\n            if (IsUndefined(metadataRegistry)) {\n                metadataRegistry = CreateMetadataRegistry();\n            }\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                Object.defineProperty(root.Reflect, registrySymbol, {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: metadataRegistry\n                });\n            }\n            return metadataRegistry;\n        }\n        function CreateMetadataProvider(registry) {\n            // [[Metadata]] internal slot\n            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n            var metadata = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var targetMetadata = metadata.get(O);\n                    if (IsUndefined(targetMetadata))\n                        return false;\n                    return targetMetadata.has(P);\n                },\n                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,\n            };\n            metadataRegistry.registerProvider(provider);\n            return provider;\n            function GetOrCreateMetadataMap(O, P, Create) {\n                var targetMetadata = metadata.get(O);\n                var createdTargetMetadata = false;\n                if (IsUndefined(targetMetadata)) {\n                    if (!Create)\n                        return undefined;\n                    targetMetadata = new _Map();\n                    metadata.set(O, targetMetadata);\n                    createdTargetMetadata = true;\n                }\n                var metadataMap = targetMetadata.get(P);\n                if (IsUndefined(metadataMap)) {\n                    if (!Create)\n                        return undefined;\n                    metadataMap = new _Map();\n                    targetMetadata.set(P, metadataMap);\n                    if (!registry.setProvider(O, P, provider)) {\n                        targetMetadata.delete(P);\n                        if (createdTargetMetadata) {\n                            metadata.delete(O);\n                        }\n                        throw new Error(\"Wrong provider for target.\");\n                    }\n                }\n                return metadataMap;\n            }\n            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                return ToBoolean(metadataMap.has(MetadataKey));\n            }\n            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return undefined;\n                return metadataMap.get(MetadataKey);\n            }\n            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n                metadataMap.set(MetadataKey, MetadataValue);\n            }\n            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n            function OrdinaryOwnMetadataKeys(O, P) {\n                var keys = [];\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return keys;\n                var keysObj = metadataMap.keys();\n                var iterator = GetIterator(keysObj);\n                var k = 0;\n                while (true) {\n                    var next = IteratorStep(iterator);\n                    if (!next) {\n                        keys.length = k;\n                        return keys;\n                    }\n                    var nextValue = IteratorValue(next);\n                    try {\n                        keys[k] = nextValue;\n                    }\n                    catch (e) {\n                        try {\n                            IteratorClose(iterator);\n                        }\n                        finally {\n                            throw e;\n                        }\n                    }\n                    k++;\n                }\n            }\n            function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                if (!metadataMap.delete(MetadataKey))\n                    return false;\n                if (metadataMap.size === 0) {\n                    var targetMetadata = metadata.get(O);\n                    if (!IsUndefined(targetMetadata)) {\n                        targetMetadata.delete(P);\n                        if (targetMetadata.size === 0) {\n                            metadata.delete(targetMetadata);\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        function CreateFallbackProvider(reflect) {\n            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;\n            var metadataOwner = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var metadataPropertySet = metadataOwner.get(O);\n                    if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {\n                        return true;\n                    }\n                    if (getOwnMetadataKeys(O, P).length) {\n                        if (IsUndefined(metadataPropertySet)) {\n                            metadataPropertySet = new _Set();\n                            metadataOwner.set(O, metadataPropertySet);\n                        }\n                        metadataPropertySet.add(P);\n                        return true;\n                    }\n                    return false;\n                },\n                OrdinaryDefineOwnMetadata: defineMetadata,\n                OrdinaryHasOwnMetadata: hasOwnMetadata,\n                OrdinaryGetOwnMetadata: getOwnMetadata,\n                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n                OrdinaryDeleteMetadata: deleteMetadata,\n            };\n            return provider;\n        }\n        /**\n         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n         * then this module's metadata provider is assigned to the object.\n         */\n        function GetMetadataProvider(O, P, Create) {\n            var registeredProvider = metadataRegistry.getProvider(O, P);\n            if (!IsUndefined(registeredProvider)) {\n                return registeredProvider;\n            }\n            if (Create) {\n                if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n                    return metadataProvider;\n                }\n                throw new Error(\"Illegal state.\");\n            }\n            return undefined;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            var Map = /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (SameValueZero(key, this._cacheKey)) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (!SameValueZero(this._cacheKey, key)) {\n                        this._cacheIndex = -1;\n                        for (var i = 0; i < this._keys.length; i++) {\n                            if (SameValueZero(this._keys[i], key)) {\n                                this._cacheIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            return Map;\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            var Set = /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.keys(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n            return Set;\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    var array = new Uint8Array(size);\n                    if (typeof crypto !== \"undefined\") {\n                        crypto.getRandomValues(array);\n                    }\n                    else if (typeof msCrypto !== \"undefined\") {\n                        msCrypto.getRandomValues(array);\n                    }\n                    else {\n                        FillRandomBytes(array, size);\n                    }\n                    return array;\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","/**\n * Browser's implementation of the platform-specific tools.\n *\n * This file gonna replace PlatformTools for browser environment.\n * For node.js environment this class is not getting packaged.\n * Don't use methods of this class in the code, use PlatformTools methods instead.\n */\nimport { Buffer } from \"buffer\";\nexport class PlatformTools {\n    /**\n     * Gets global variable where global stuff can be stored.\n     */\n    static getGlobalVariable() {\n        if (typeof window !== \"undefined\") {\n            return window;\n        }\n        else {\n            // NativeScript uses global, not window\n            return global;\n        }\n    }\n    /**\n     * Loads (\"require\"-s) given file or package.\n     * This operation only supports on node platform\n     */\n    static load(name) {\n        if (this.type === \"browser\")\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: require(\"${name}\").`);\n        return \"\";\n    }\n    /**\n     * Normalizes given path. Does \"path.normalize\".\n     */\n    static pathNormalize(pathStr) {\n        if (this.type === \"browser\")\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: path.normalize(\"${pathStr}\").`);\n        return \"\";\n    }\n    /**\n     * Gets file extension. Does \"path.extname\".\n     */\n    static pathExtname(pathStr) {\n        if (this.type === \"browser\")\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: path.extname(\"${pathStr}\").`);\n        return \"\";\n    }\n    /**\n     * Resolved given path. Does \"path.resolve\".\n     */\n    static pathResolve(pathStr) {\n        if (this.type === \"browser\")\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: path.resolve(\"${pathStr}\").`);\n        return \"\";\n    }\n    /**\n     * Synchronously checks if file exist. Does \"fs.existsSync\".\n     */\n    static fileExist(pathStr) {\n        if (this.type === \"browser\")\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.existsSync(\"${pathStr}\").`);\n        return false;\n    }\n    static dotenv(pathStr) {\n        if (this.type === \"browser\")\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: dotenv.config({ path: \"${pathStr}\" }).`);\n    }\n    /**\n     * Gets environment variable.\n     */\n    static getEnvVariable(name) {\n        // if (this.type === \"browser\")\n        //     throw new Error(`This option/function is not supported in the browser environment. Failed operation: process.env[\"${name}\"].`);\n        return undefined;\n    }\n    static readFileSync(filename) {\n        if (this.type === \"browser\")\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.readFileSync(\"${filename}\").`);\n        return null;\n    }\n    static appendFileSync(filename, data) {\n        if (this.type === \"browser\")\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.appendFileSync(\"${filename}\").`);\n    }\n    static writeFile(path, data) {\n        if (this.type === \"browser\")\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.writeFile(\"${path}\").`);\n        return Promise.reject(null);\n    }\n    /**\n     * Highlights sql string to be print in the console.\n     */\n    static highlightSql(sql) {\n        return sql;\n    }\n    /**\n     * Highlights json string to be print in the console.\n     */\n    static highlightJson(json) {\n        return json;\n    }\n    /**\n     * Logging functions needed by AdvancedConsoleLogger (but here without chalk)\n     */\n    static logInfo(prefix, info) {\n        console.info(prefix + \" \", info);\n    }\n    static logError(prefix, error) {\n        console.error(prefix + \" \", error);\n    }\n    static logWarn(prefix, warning) {\n        console.warn(prefix + \" \", warning);\n    }\n    static log(message) {\n        console.log(message);\n    }\n    static warn(message) {\n        return message;\n    }\n}\n/**\n * Type of the currently running platform.\n */\nPlatformTools.type = \"browser\";\n/**\n * These classes are needed for stream operations or\n * in the mongodb driver. Both aren't supported in the browser.\n */\nexport class EventEmitter {\n}\nexport class Readable {\n}\nexport class Writable {\n}\nif (typeof window !== \"undefined\") {\n    window.Buffer = Buffer;\n}\n// NativeScript uses global, not window\nif (typeof global !== \"undefined\" && typeof require !== \"undefined\") {\n    global.Buffer = require(\"buffer/\").Buffer;\n}\n\n//# sourceMappingURL=BrowserPlatformTools.js.map\n","export class ObjectUtils {\n    /**\n     * Checks if given value is an object.\n     * We cannot use instanceof because it has problems when running on different contexts.\n     * And we don't simply use typeof because typeof null === \"object\".\n     */\n    static isObject(val) {\n        return val !== null && typeof val === \"object\";\n    }\n    /**\n     * Checks if given value is an object.\n     * We cannot use instanceof because it has problems when running on different contexts.\n     * And we don't simply use typeof because typeof null === \"object\".\n     */\n    static isObjectWithName(val) {\n        return (val !== null && typeof val === \"object\" && val[\"name\"] !== undefined);\n    }\n    /**\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\n     * target object.\n     * @param target The target object to copy to.\n     * @param sources One or more source objects from which to copy properties\n     */\n    static assign(target, ...sources) {\n        for (const source of sources) {\n            for (const prop of Object.getOwnPropertyNames(source)) {\n                ;\n                target[prop] = source[prop];\n            }\n        }\n    }\n    /**\n     * Converts MixedList<T> to strictly an array of its T items.\n     */\n    static mixedListToArray(list) {\n        if (list !== null && typeof list === \"object\") {\n            return Object.keys(list).map((key) => list[key]);\n        }\n        else {\n            return list;\n        }\n    }\n}\n\n//# sourceMappingURL=ObjectUtils.js.map\n","export class TypeORMError extends Error {\n    get name() {\n        return this.constructor.name;\n    }\n    constructor(message) {\n        super(message);\n        // restore prototype chain because the base `Error` type\n        // will break the prototype chain a little\n        if (Object.setPrototypeOf) {\n            Object.setPrototypeOf(this, new.target.prototype);\n        }\n        else {\n            ;\n            this.__proto__ = new.target.prototype;\n        }\n    }\n}\n\n//# sourceMappingURL=TypeORMError.js.map\n","import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when selected sql driver does not supports locking.\n */\nexport class LockNotSupportedOnGivenDriverError extends TypeORMError {\n    constructor() {\n        super(`Locking not supported on given driver.`);\n    }\n}\n\n//# sourceMappingURL=LockNotSupportedOnGivenDriverError.js.map\n","import { TypeORMError } from \"./TypeORMError\";\nexport class UpdateValuesMissingError extends TypeORMError {\n    constructor() {\n        super(`Cannot perform update query because update values are not defined. Call \"qb.set(...)\" method to specify updated values.`);\n    }\n}\n\n//# sourceMappingURL=UpdateValuesMissingError.js.map\n","export class InstanceChecker {\n    static isMssqlParameter(obj) {\n        return this.check(obj, \"MssqlParameter\");\n    }\n    static isEntityMetadata(obj) {\n        return this.check(obj, \"EntityMetadata\");\n    }\n    static isColumnMetadata(obj) {\n        return this.check(obj, \"ColumnMetadata\");\n    }\n    static isSelectQueryBuilder(obj) {\n        return this.check(obj, \"SelectQueryBuilder\");\n    }\n    static isInsertQueryBuilder(obj) {\n        return this.check(obj, \"InsertQueryBuilder\");\n    }\n    static isDeleteQueryBuilder(obj) {\n        return this.check(obj, \"DeleteQueryBuilder\");\n    }\n    static isUpdateQueryBuilder(obj) {\n        return this.check(obj, \"UpdateQueryBuilder\");\n    }\n    static isSoftDeleteQueryBuilder(obj) {\n        return this.check(obj, \"SoftDeleteQueryBuilder\");\n    }\n    static isRelationQueryBuilder(obj) {\n        return this.check(obj, \"RelationQueryBuilder\");\n    }\n    static isBrackets(obj) {\n        return this.check(obj, \"Brackets\") || this.check(obj, \"NotBrackets\");\n    }\n    static isNotBrackets(obj) {\n        return this.check(obj, \"NotBrackets\");\n    }\n    static isSubject(obj) {\n        return this.check(obj, \"Subject\");\n    }\n    static isRdbmsSchemaBuilder(obj) {\n        return this.check(obj, \"RdbmsSchemaBuilder\");\n    }\n    static isMongoEntityManager(obj) {\n        return this.check(obj, \"MongoEntityManager\");\n    }\n    static isSqljsEntityManager(obj) {\n        return this.check(obj, \"SqljsEntityManager\");\n    }\n    static isEntitySchema(obj) {\n        return this.check(obj, \"EntitySchema\");\n    }\n    static isBaseEntityConstructor(obj) {\n        return (typeof obj === \"function\" &&\n            typeof obj.hasId === \"function\" &&\n            typeof obj.save === \"function\" &&\n            typeof obj.useDataSource === \"function\");\n    }\n    static isFindOperator(obj) {\n        return (this.check(obj, \"FindOperator\") || this.check(obj, \"EqualOperator\"));\n    }\n    static isEqualOperator(obj) {\n        return this.check(obj, \"EqualOperator\");\n    }\n    static isQuery(obj) {\n        return this.check(obj, \"Query\");\n    }\n    static isTable(obj) {\n        return this.check(obj, \"Table\");\n    }\n    static isTableCheck(obj) {\n        return this.check(obj, \"TableCheck\");\n    }\n    static isTableColumn(obj) {\n        return this.check(obj, \"TableColumn\");\n    }\n    static isTableExclusion(obj) {\n        return this.check(obj, \"TableExclusion\");\n    }\n    static isTableForeignKey(obj) {\n        return this.check(obj, \"TableForeignKey\");\n    }\n    static isTableIndex(obj) {\n        return this.check(obj, \"TableIndex\");\n    }\n    static isTableUnique(obj) {\n        return this.check(obj, \"TableUnique\");\n    }\n    static isView(obj) {\n        return this.check(obj, \"View\");\n    }\n    static isDataSource(obj) {\n        return this.check(obj, \"DataSource\");\n    }\n    static check(obj, name) {\n        return (typeof obj === \"object\" &&\n            obj !== null &&\n            obj[\"@instanceof\"] ===\n                Symbol.for(name));\n    }\n}\n\n//# sourceMappingURL=InstanceChecker.js.map\n","import { TypeORMError } from \"./TypeORMError\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\nimport { InstanceChecker } from \"../util/InstanceChecker\";\n/**\n * Thrown when no result could be found in methods which are not allowed to return undefined or an empty set.\n */\nexport class EntityNotFoundError extends TypeORMError {\n    constructor(entityClass, criteria) {\n        super();\n        this.entityClass = entityClass;\n        this.criteria = criteria;\n        this.message =\n            `Could not find any entity of type \"${this.stringifyTarget(entityClass)}\" ` + `matching: ${this.stringifyCriteria(criteria)}`;\n    }\n    stringifyTarget(target) {\n        if (InstanceChecker.isEntitySchema(target)) {\n            return target.options.name;\n        }\n        else if (typeof target === \"function\") {\n            return target.name;\n        }\n        else if (ObjectUtils.isObject(target) && \"name\" in target) {\n            return target.name;\n        }\n        else {\n            return target;\n        }\n    }\n    stringifyCriteria(criteria) {\n        try {\n            return JSON.stringify(criteria, null, 4);\n        }\n        catch (e) { }\n        return \"\" + criteria;\n    }\n}\n\n//# sourceMappingURL=EntityNotFoundError.js.map\n","import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when a version check on an object that uses optimistic locking through a version field fails.\n */\nexport class OptimisticLockVersionMismatchError extends TypeORMError {\n    constructor(entity, expectedVersion, actualVersion) {\n        super(`The optimistic lock on entity ${entity} failed, version ${expectedVersion} was expected, but is actually ${actualVersion}.`);\n    }\n}\n\n//# sourceMappingURL=OptimisticLockVersionMismatchError.js.map\n","import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when user tries to build an UPDATE query with LIMIT but the database does not support it.\n */\nexport class LimitOnUpdateNotSupportedError extends TypeORMError {\n    constructor() {\n        super(`Your database does not support LIMIT on UPDATE statements.`);\n    }\n}\n\n//# sourceMappingURL=LimitOnUpdateNotSupportedError.js.map\n","import { TypeORMError } from \"./TypeORMError\";\nexport class MissingDeleteDateColumnError extends TypeORMError {\n    constructor(entityMetadata) {\n        super(`Entity \"${entityMetadata.name}\" does not have delete date columns.`);\n    }\n}\n\n//# sourceMappingURL=MissingDeleteDateColumnError.js.map\n","import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when user tries to build a query with RETURNING / OUTPUT statement,\n * but used database does not support it.\n */\nexport class ReturningStatementNotSupportedError extends TypeORMError {\n    constructor() {\n        super(`OUTPUT or RETURNING clause only supported by Microsoft SQL Server or PostgreSQL or MariaDB databases.`);\n    }\n}\n\n//# sourceMappingURL=ReturningStatementNotSupportedError.js.map\n","import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when specified entity property was not found.\n */\nexport class EntityPropertyNotFoundError extends TypeORMError {\n    constructor(propertyPath, metadata) {\n        super(propertyPath);\n        Object.setPrototypeOf(this, EntityPropertyNotFoundError.prototype);\n        this.message = `Property \"${propertyPath}\" was not found in \"${metadata.targetName}\". Make sure your query is correct.`;\n    }\n}\n\n//# sourceMappingURL=EntityPropertyNotFoundError.js.map\n","import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when an entity does not have no version and no update date column.\n */\nexport class NoVersionOrUpdateDateColumnError extends TypeORMError {\n    constructor(entity) {\n        super(`Entity ${entity} does not have version or update date columns.`);\n    }\n}\n\n//# sourceMappingURL=NoVersionOrUpdateDateColumnError.js.map\n","import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when user tries to insert using QueryBuilder but do not specify what to insert.\n */\nexport class InsertValuesMissingError extends TypeORMError {\n    constructor() {\n        super(`Cannot perform insert query because values are not defined. ` +\n            `Call \"qb.values(...)\" method to specify inserted values.`);\n    }\n}\n\n//# sourceMappingURL=InsertValuesMissingError.js.map\n","import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when an optimistic lock cannot be used in query builder.\n */\nexport class OptimisticLockCanNotBeUsedError extends TypeORMError {\n    constructor() {\n        super(`The optimistic lock can be used only with getOne() method.`);\n    }\n}\n\n//# sourceMappingURL=OptimisticLockCanNotBeUsedError.js.map\n","import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when relations specified in the find options were not found in the entities.\n */\nexport class FindRelationsNotFoundError extends TypeORMError {\n    constructor(notFoundRelations) {\n        super();\n        if (notFoundRelations.length === 1) {\n            this.message = `Relation \"${notFoundRelations[0]}\" was not found; please check if it is correct and really exists in your entity.`;\n        }\n        else {\n            this.message = `Relations ${notFoundRelations\n                .map((relation) => `\"${relation}\"`)\n                .join(\", \")} were not found; please check if relations are correct and they exist in your entities.`;\n        }\n    }\n}\n\n//# sourceMappingURL=FindRelationsNotFoundError.js.map\n","import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when a transaction is required for the current operation, but there is none open.\n */\nexport class PessimisticLockTransactionRequiredError extends TypeORMError {\n    constructor() {\n        super(`An open transaction is required for pessimistic lock.`);\n    }\n}\n\n//# sourceMappingURL=PessimisticLockTransactionRequiredError.js.map\n","import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when user tries to build SELECT query using OFFSET without LIMIT applied but database does not support it.\n */\nexport class OffsetWithoutLimitNotSupportedError extends TypeORMError {\n    constructor() {\n        super(`RDBMS does not support OFFSET without LIMIT in SELECT statements. You must use limit in ` +\n            `conjunction with offset function (or take in conjunction with skip function if you are ` +\n            `using pagination).`);\n    }\n}\n\n//# sourceMappingURL=OffsetWithoutLimitNotSupportedError.js.map\n","import { ObjectUtils } from \"../util/ObjectUtils\";\nimport { TypeORMError } from \"../error\";\n/**\n */\nexport class Alias {\n    constructor(alias) {\n        ObjectUtils.assign(this, alias || {});\n    }\n    get target() {\n        return this.metadata.target;\n    }\n    get hasMetadata() {\n        return !!this._metadata;\n    }\n    set metadata(metadata) {\n        this._metadata = metadata;\n    }\n    get metadata() {\n        if (!this._metadata)\n            throw new TypeORMError(`Cannot get entity metadata for the given alias \"${this.name}\"`);\n        return this._metadata;\n    }\n}\n\n//# sourceMappingURL=Alias.js.map\n","/**\n * Helper utility functions for QueryBuilder.\n */\nexport class QueryBuilderUtils {\n    /**\n     * Checks if given value is a string representation of alias property,\n     * e.g. \"post.category\" or \"post.id\".\n     */\n    static isAliasProperty(str) {\n        // alias property must be a string and must have a dot separator\n        if (typeof str !== \"string\" || str.indexOf(\".\") === -1)\n            return false;\n        // extra alias and its property relation\n        const [aliasName, propertyName] = str.split(\".\"); // todo: what about relations in embedded?\n        if (!aliasName || !propertyName)\n            return false;\n        // alias and property must be represented in a special format\n        // const aliasNameRegexp = /^[a-zA-Z0-9_-]+$/;\n        // if (!aliasNameRegexp.test(aliasName) || !aliasNameRegexp.test(propertyName))\n        //     return false;\n        // make sure string is not a subquery\n        if (str.indexOf(\"(\") !== -1 || str.indexOf(\")\") !== -1)\n            return false;\n        return true;\n    }\n}\n\n//# sourceMappingURL=QueryBuilderUtils.js.map\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","import shajs from \"sha.js\";\n/**\n * Converts string into camelCase.\n *\n * @see http://stackoverflow.com/questions/2970525/converting-any-string-into-camel-case\n */\nexport function camelCase(str, firstCapital = false) {\n    if (firstCapital)\n        str = \" \" + str;\n    return str.replace(/^([A-Z])|[\\s-_](\\w)/g, function (match, p1, p2) {\n        if (p2)\n            return p2.toUpperCase();\n        return p1.toLowerCase();\n    });\n}\n/**\n * Converts string into snake_case.\n *\n */\nexport function snakeCase(str) {\n    return (str\n        // ABc -> a_bc\n        .replace(/([A-Z])([A-Z])([a-z])/g, \"$1_$2$3\")\n        // aC -> a_c\n        .replace(/([a-z0-9])([A-Z])/g, \"$1_$2\")\n        .toLowerCase());\n}\n/**\n * Converts string into Title Case.\n *\n * @see http://stackoverflow.com/questions/196972/convert-string-to-title-case-with-javascript\n */\nexport function titleCase(str) {\n    return str.replace(/\\w\\S*/g, (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());\n}\n/**\n * Builds abbreviated string from given string;\n */\nexport function abbreviate(str, abbrLettersCount = 1) {\n    const words = str\n        .replace(/([a-z\\xE0-\\xFF])([A-Z\\xC0\\xDF])/g, \"$1 $2\")\n        .split(\" \");\n    return words.reduce((res, word) => {\n        res += word.substr(0, abbrLettersCount);\n        return res;\n    }, \"\");\n}\n/**\n * Shorten a given `input`. Useful for RDBMS imposing a limit on the\n * maximum length of aliases and column names in SQL queries.\n *\n * @param input String to be shortened.\n * @param options Default to `4` for segments length, `2` for terms length, `'__'` as a separator.\n *\n * @return Shortened `input`.\n *\n * @example\n * // returns: \"UsShCa__orde__mark__dire\"\n * shorten('UserShoppingCart__order__market__director')\n *\n * // returns: \"cat_wit_ver_lon_nam_pos_wit_ver_lon_nam_pos_wit_ver_lon_nam\"\n * shorten(\n *   'category_with_very_long_name_posts_with_very_long_name_post_with_very_long_name',\n *   { separator: '_', segmentLength: 3 }\n * )\n *\n * // equals: UsShCa__orde__mark_market_id\n * `${shorten('UserShoppingCart__order__market')}_market_id`\n */\nexport function shorten(input, options = {}) {\n    const { segmentLength = 4, separator = \"__\", termLength = 2 } = options;\n    const segments = input.split(separator);\n    const shortSegments = segments.reduce((acc, val) => {\n        // split the given segment into many terms based on an eventual camel cased name\n        const segmentTerms = val\n            .replace(/([a-z\\xE0-\\xFF])([A-Z\\xC0-\\xDF])/g, \"$1 $2\")\n            .split(\" \");\n        // \"OrderItemList\" becomes \"OrItLi\", while \"company\" becomes \"comp\"\n        const length = segmentTerms.length > 1 ? termLength : segmentLength;\n        const shortSegment = segmentTerms\n            .map((term) => term.substr(0, length))\n            .join(\"\");\n        acc.push(shortSegment);\n        return acc;\n    }, []);\n    return shortSegments.join(separator);\n}\n/**\n * Returns a hashed input.\n *\n * @param input String to be hashed.\n * @param options.length Optionally, shorten the output to desired length.\n */\nexport function hash(input, options = {}) {\n    const hashFunction = shajs(\"sha1\");\n    hashFunction.update(input, \"utf8\");\n    const hashedInput = hashFunction.digest(\"hex\");\n    if (options.length) {\n        return hashedInput.slice(0, options.length);\n    }\n    return hashedInput;\n}\n\n//# sourceMappingURL=StringUtils.js.map\n","export class VersionUtils {\n    static isGreaterOrEqual(version, targetVersion) {\n        const v1 = parseVersion(version);\n        const v2 = parseVersion(targetVersion);\n        return (v1[0] > v2[0] ||\n            (v1[0] === v2[0] && v1[1] > v2[1]) ||\n            (v1[0] === v2[0] && v1[1] === v2[1] && v1[2] >= v2[2]));\n    }\n}\nfunction parseVersion(version = \"\") {\n    const v = [0, 0, 0];\n    version.split(\".\").forEach((value, i) => (v[i] = parseInt(value, 10)));\n    return v;\n}\n\n//# sourceMappingURL=VersionUtils.js.map\n","import { hash, shorten } from \"../util/StringUtils\";\nimport { VersionUtils } from \"../util/VersionUtils\";\n/**\n * Common driver utility functions.\n */\nexport class DriverUtils {\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Returns true if given driver is SQLite-based driver.\n     */\n    static isSQLiteFamily(driver) {\n        return [\n            \"sqlite\",\n            \"cordova\",\n            \"react-native\",\n            \"nativescript\",\n            \"sqljs\",\n            \"expo\",\n            \"better-sqlite3\",\n            \"capacitor\",\n        ].includes(driver.options.type);\n    }\n    /**\n     * Returns true if given driver is MySQL-based driver.\n     */\n    static isMySQLFamily(driver) {\n        return [\"mysql\", \"mariadb\"].includes(driver.options.type);\n    }\n    static isReleaseVersionOrGreater(driver, version) {\n        return (driver.version != null &&\n            VersionUtils.isGreaterOrEqual(driver.version, version));\n    }\n    static isPostgresFamily(driver) {\n        return [\"postgres\", \"aurora-postgres\", \"cockroachdb\"].includes(driver.options.type);\n    }\n    /**\n     * Normalizes and builds a new driver options.\n     * Extracts settings from connection url and sets to a new options object.\n     */\n    static buildDriverOptions(options, buildOptions) {\n        if (options.url) {\n            const urlDriverOptions = this.parseConnectionUrl(options.url);\n            if (buildOptions &&\n                buildOptions.useSid &&\n                urlDriverOptions.database) {\n                urlDriverOptions.sid = urlDriverOptions.database;\n            }\n            for (const key of Object.keys(urlDriverOptions)) {\n                if (typeof urlDriverOptions[key] === \"undefined\") {\n                    delete urlDriverOptions[key];\n                }\n            }\n            return Object.assign({}, options, urlDriverOptions);\n        }\n        return Object.assign({}, options);\n    }\n    /**\n     * buildDriverOptions for MongodDB only to support replica set\n     */\n    static buildMongoDBDriverOptions(options, buildOptions) {\n        if (options.url) {\n            const urlDriverOptions = this.parseMongoDBConnectionUrl(options.url);\n            if (buildOptions &&\n                buildOptions.useSid &&\n                urlDriverOptions.database) {\n                urlDriverOptions.sid = urlDriverOptions.database;\n            }\n            for (const key of Object.keys(urlDriverOptions)) {\n                if (typeof urlDriverOptions[key] === \"undefined\") {\n                    delete urlDriverOptions[key];\n                }\n            }\n            return Object.assign({}, options, urlDriverOptions);\n        }\n        return Object.assign({}, options);\n    }\n    /**\n     * Joins and shortens alias if needed.\n     *\n     * If the alias length is greater than the limit allowed by the current\n     * driver, replaces it with a shortend string, if the shortend string\n     * is still too long, it will then hash the alias.\n     *\n     * @param driver Current `Driver`.\n     * @param buildOptions Optional settings.\n     * @param alias Alias parts.\n     *\n     * @return An alias that is no longer than the divers max alias length.\n     */\n    static buildAlias({ maxAliasLength }, buildOptions, ...alias) {\n        const joiner = buildOptions && buildOptions.joiner ? buildOptions.joiner : \"_\";\n        let newAlias = alias.length === 1 ? alias[0] : alias.join(joiner);\n        if (maxAliasLength &&\n            maxAliasLength > 0 &&\n            newAlias.length > maxAliasLength) {\n            if (buildOptions && buildOptions.shorten === true) {\n                const shortenedAlias = shorten(newAlias);\n                if (shortenedAlias.length < maxAliasLength) {\n                    return shortenedAlias;\n                }\n            }\n            return hash(newAlias, { length: maxAliasLength });\n        }\n        return newAlias;\n    }\n    /**\n     * @deprecated use `buildAlias` instead.\n     */\n    static buildColumnAlias({ maxAliasLength }, buildOptions, ...alias) {\n        if (typeof buildOptions === \"string\") {\n            alias.unshift(buildOptions);\n            buildOptions = { shorten: false, joiner: \"_\" };\n        }\n        else {\n            buildOptions = Object.assign({ shorten: false, joiner: \"_\" }, buildOptions);\n        }\n        return this.buildAlias({ maxAliasLength }, buildOptions, ...alias);\n    }\n    // -------------------------------------------------------------------------\n    // Private Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Extracts connection data from the connection url.\n     */\n    static parseConnectionUrl(url) {\n        const type = url.split(\":\")[0];\n        const firstSlashes = url.indexOf(\"//\");\n        const preBase = url.substr(firstSlashes + 2);\n        const secondSlash = preBase.indexOf(\"/\");\n        const base = secondSlash !== -1 ? preBase.substr(0, secondSlash) : preBase;\n        let afterBase = secondSlash !== -1 ? preBase.substr(secondSlash + 1) : undefined;\n        // remove mongodb query params\n        if (afterBase && afterBase.indexOf(\"?\") !== -1) {\n            afterBase = afterBase.substr(0, afterBase.indexOf(\"?\"));\n        }\n        const lastAtSign = base.lastIndexOf(\"@\");\n        const usernameAndPassword = base.substr(0, lastAtSign);\n        const hostAndPort = base.substr(lastAtSign + 1);\n        let username = usernameAndPassword;\n        let password = \"\";\n        const firstColon = usernameAndPassword.indexOf(\":\");\n        if (firstColon !== -1) {\n            username = usernameAndPassword.substr(0, firstColon);\n            password = usernameAndPassword.substr(firstColon + 1);\n        }\n        const [host, port] = hostAndPort.split(\":\");\n        return {\n            type: type,\n            host: host,\n            username: decodeURIComponent(username),\n            password: decodeURIComponent(password),\n            port: port ? parseInt(port) : undefined,\n            database: afterBase || undefined,\n        };\n    }\n    /**\n     * Extracts connection data from the connection url for MongoDB to support replica set.\n     */\n    static parseMongoDBConnectionUrl(url) {\n        const type = url.split(\":\")[0];\n        const firstSlashes = url.indexOf(\"//\");\n        const preBase = url.substr(firstSlashes + 2);\n        const secondSlash = preBase.indexOf(\"/\");\n        const base = secondSlash !== -1 ? preBase.substr(0, secondSlash) : preBase;\n        let afterBase = secondSlash !== -1 ? preBase.substr(secondSlash + 1) : undefined;\n        let afterQuestionMark = \"\";\n        let host = undefined;\n        let port = undefined;\n        let hostReplicaSet = undefined;\n        let replicaSet = undefined;\n        let optionsObject = {};\n        if (afterBase && afterBase.indexOf(\"?\") !== -1) {\n            // split params\n            afterQuestionMark = afterBase.substr(afterBase.indexOf(\"?\") + 1, afterBase.length);\n            const optionsList = afterQuestionMark.split(\"&\");\n            let optionKey;\n            let optionValue;\n            // create optionsObject for merge with connectionUrl object before return\n            optionsList.forEach((optionItem) => {\n                optionKey = optionItem.split(\"=\")[0];\n                optionValue = optionItem.split(\"=\")[1];\n                optionsObject[optionKey] = optionValue;\n            });\n            // specific replicaSet value to set options about hostReplicaSet\n            replicaSet = optionsObject[\"replicaSet\"];\n            afterBase = afterBase.substr(0, afterBase.indexOf(\"?\"));\n        }\n        const lastAtSign = base.lastIndexOf(\"@\");\n        const usernameAndPassword = base.substr(0, lastAtSign);\n        const hostAndPort = base.substr(lastAtSign + 1);\n        let username = usernameAndPassword;\n        let password = \"\";\n        const firstColon = usernameAndPassword.indexOf(\":\");\n        if (firstColon !== -1) {\n            username = usernameAndPassword.substr(0, firstColon);\n            password = usernameAndPassword.substr(firstColon + 1);\n        }\n        // If replicaSet have value set It as hostlist, If not set like standalone host\n        if (replicaSet) {\n            hostReplicaSet = hostAndPort;\n        }\n        else {\n            ;\n            [host, port] = hostAndPort.split(\":\");\n        }\n        let connectionUrl = {\n            type: type,\n            host: host,\n            hostReplicaSet: hostReplicaSet,\n            username: decodeURIComponent(username),\n            password: decodeURIComponent(password),\n            port: port ? parseInt(port) : undefined,\n            database: afterBase || undefined,\n        };\n        // Loop to set every options in connectionUrl to object\n        for (const [key, value] of Object.entries(optionsObject)) {\n            connectionUrl[key] = value;\n        }\n        return connectionUrl;\n    }\n}\n\n//# sourceMappingURL=DriverUtils.js.map\n","import { QueryBuilderUtils } from \"./QueryBuilderUtils\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\nimport { TypeORMError } from \"../error\";\nimport { DriverUtils } from \"../driver/DriverUtils\";\n/**\n * Stores all join attributes which will be used to build a JOIN query.\n */\nexport class JoinAttribute {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(connection, queryExpressionMap, joinAttribute) {\n        this.connection = connection;\n        this.queryExpressionMap = queryExpressionMap;\n        this.isSelectedEvaluated = false;\n        this.relationEvaluated = false;\n        if (joinAttribute) {\n            ObjectUtils.assign(this, joinAttribute);\n        }\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    get isMany() {\n        if (this.isMappingMany !== undefined)\n            return this.isMappingMany;\n        if (this.relation)\n            return this.relation.isManyToMany || this.relation.isOneToMany;\n        return false;\n    }\n    /**\n     * Indicates if this join is selected.\n     */\n    get isSelected() {\n        if (!this.isSelectedEvaluated) {\n            let getValue = () => {\n                for (const select of this.queryExpressionMap.selects) {\n                    if (select.selection === this.alias.name)\n                        return true;\n                    if (this.metadata &&\n                        !!this.metadata.columns.find((column) => select.selection ===\n                            this.alias.name + \".\" + column.propertyPath))\n                        return true;\n                }\n                return false;\n            };\n            this.isSelectedCache = getValue();\n            this.isSelectedEvaluated = true;\n        }\n        return this.isSelectedCache;\n    }\n    /**\n     * Name of the table which we should join.\n     */\n    get tablePath() {\n        return this.metadata\n            ? this.metadata.tablePath\n            : this.entityOrProperty;\n    }\n    /**\n     * Alias of the parent of this join.\n     * For example, if we join (\"post.category\", \"categoryAlias\") then \"post\" is a parent alias.\n     * This value is extracted from entityOrProperty value.\n     * This is available when join was made using \"post.category\" syntax.\n     */\n    get parentAlias() {\n        if (!QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n            return undefined;\n        return this.entityOrProperty.substr(0, this.entityOrProperty.indexOf(\".\"));\n    }\n    /**\n     * Relation property name of the parent.\n     * This is used to understand what is joined.\n     * For example, if we join (\"post.category\", \"categoryAlias\") then \"category\" is a relation property.\n     * This value is extracted from entityOrProperty value.\n     * This is available when join was made using \"post.category\" syntax.\n     */\n    get relationPropertyPath() {\n        if (!QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n            return undefined;\n        return this.entityOrProperty.substr(this.entityOrProperty.indexOf(\".\") + 1);\n    }\n    /**\n     * Relation of the parent.\n     * This is used to understand what is joined.\n     * This is available when join was made using \"post.category\" syntax.\n     * Relation can be undefined if entityOrProperty is regular entity or custom table.\n     */\n    get relation() {\n        if (!this.relationEvaluated) {\n            let getValue = () => {\n                if (!QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n                    return undefined;\n                const relationOwnerSelection = this.queryExpressionMap.findAliasByName(this.parentAlias);\n                let relation = relationOwnerSelection.metadata.findRelationWithPropertyPath(this.relationPropertyPath);\n                if (relation) {\n                    return relation;\n                }\n                if (relationOwnerSelection.metadata.parentEntityMetadata) {\n                    relation =\n                        relationOwnerSelection.metadata.parentEntityMetadata.findRelationWithPropertyPath(this.relationPropertyPath);\n                    if (relation) {\n                        return relation;\n                    }\n                }\n                throw new TypeORMError(`Relation with property path ${this.relationPropertyPath} in entity was not found.`);\n            };\n            this.relationCache = getValue.bind(this)();\n            this.relationEvaluated = true;\n        }\n        return this.relationCache;\n    }\n    /**\n     * Metadata of the joined entity.\n     * If table without entity was joined, then it will return undefined.\n     */\n    get metadata() {\n        // entityOrProperty is relation, e.g. \"post.category\"\n        if (this.relation)\n            return this.relation.inverseEntityMetadata;\n        // entityOrProperty is Entity class\n        if (this.connection.hasMetadata(this.entityOrProperty))\n            return this.connection.getMetadata(this.entityOrProperty);\n        // Overriden mapping entity provided for leftJoinAndMapOne with custom query builder\n        if (this.mapAsEntity && this.connection.hasMetadata(this.mapAsEntity)) {\n            return this.connection.getMetadata(this.mapAsEntity);\n        }\n        return undefined;\n        /*if (typeof this.entityOrProperty === \"string\") { // entityOrProperty is a custom table\n\n            // first try to find entity with such name, this is needed when entity does not have a target class,\n            // and its target is a string name (scenario when plain old javascript is used or entity schema is loaded from files)\n            const metadata = this.connection.entityMetadatas.find(metadata => metadata.name === this.entityOrProperty);\n            if (metadata)\n                return metadata;\n\n            // check if we have entity with such table name, and use its metadata if found\n            return this.connection.entityMetadatas.find(metadata => metadata.tableName === this.entityOrProperty);\n        }*/\n    }\n    /**\n     * Generates alias of junction table, whose ids we get.\n     */\n    get junctionAlias() {\n        if (!this.relation) {\n            throw new TypeORMError(`Cannot get junction table for join without relation.`);\n        }\n        if (typeof this.entityOrProperty !== \"string\") {\n            throw new TypeORMError(`Junction property is not defined.`);\n        }\n        const aliasProperty = this.entityOrProperty.substr(0, this.entityOrProperty.indexOf(\".\"));\n        if (this.relation.isOwning) {\n            return DriverUtils.buildAlias(this.connection.driver, undefined, aliasProperty, this.alias.name);\n        }\n        else {\n            return DriverUtils.buildAlias(this.connection.driver, undefined, this.alias.name, aliasProperty);\n        }\n    }\n    get mapToPropertyParentAlias() {\n        if (!this.mapToProperty)\n            return undefined;\n        return this.mapToProperty.split(\".\")[0];\n    }\n    get mapToPropertyPropertyName() {\n        if (!this.mapToProperty)\n            return undefined;\n        return this.mapToProperty.split(\".\")[1];\n    }\n}\n\n//# sourceMappingURL=JoinAttribute.js.map\n","import { QueryBuilderUtils } from \"../QueryBuilderUtils\";\nimport { ObjectUtils } from \"../../util/ObjectUtils\";\nimport { TypeORMError } from \"../../error/TypeORMError\";\n/**\n * Stores all join relation id attributes which will be used to build a JOIN query.\n */\nexport class RelationIdAttribute {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(queryExpressionMap, relationIdAttribute) {\n        this.queryExpressionMap = queryExpressionMap;\n        /**\n         * Indicates if relation id should NOT be loaded as id map.\n         */\n        this.disableMixedMap = false;\n        ObjectUtils.assign(this, relationIdAttribute || {});\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    get joinInverseSideMetadata() {\n        return this.relation.inverseEntityMetadata;\n    }\n    /**\n     * Alias of the parent of this join.\n     * For example, if we join (\"post.category\", \"categoryAlias\") then \"post\" is a parent alias.\n     * This value is extracted from entityOrProperty value.\n     * This is available when join was made using \"post.category\" syntax.\n     */\n    get parentAlias() {\n        if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n            throw new TypeORMError(`Given value must be a string representation of alias property`);\n        return this.relationName.substr(0, this.relationName.indexOf(\".\"));\n    }\n    /**\n     * Relation property name of the parent.\n     * This is used to understand what is joined.\n     * For example, if we join (\"post.category\", \"categoryAlias\") then \"category\" is a relation property.\n     * This value is extracted from entityOrProperty value.\n     * This is available when join was made using \"post.category\" syntax.\n     */\n    get relationPropertyPath() {\n        if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n            throw new TypeORMError(`Given value must be a string representation of alias property`);\n        return this.relationName.substr(this.relationName.indexOf(\".\") + 1);\n    }\n    /**\n     * Relation of the parent.\n     * This is used to understand what is joined.\n     * This is available when join was made using \"post.category\" syntax.\n     */\n    get relation() {\n        if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n            throw new TypeORMError(`Given value must be a string representation of alias property`);\n        const relationOwnerSelection = this.queryExpressionMap.findAliasByName(this.parentAlias);\n        const relation = relationOwnerSelection.metadata.findRelationWithPropertyPath(this.relationPropertyPath);\n        if (!relation)\n            throw new TypeORMError(`Relation with property path ${this.relationPropertyPath} in entity was not found.`);\n        return relation;\n    }\n    /**\n     * Generates alias of junction table, whose ids we get.\n     */\n    get junctionAlias() {\n        const [parentAlias, relationProperty] = this.relationName.split(\".\");\n        return parentAlias + \"_\" + relationProperty + \"_rid\";\n    }\n    /**\n     * Metadata of the joined entity.\n     * If extra condition without entity was joined, then it will return undefined.\n     */\n    get junctionMetadata() {\n        return this.relation.junctionEntityMetadata;\n    }\n    get mapToPropertyParentAlias() {\n        return this.mapToProperty.substr(0, this.mapToProperty.indexOf(\".\"));\n    }\n    get mapToPropertyPropertyPath() {\n        return this.mapToProperty.substr(this.mapToProperty.indexOf(\".\") + 1);\n    }\n}\n\n//# sourceMappingURL=RelationIdAttribute.js.map\n","import { QueryBuilderUtils } from \"../QueryBuilderUtils\";\nimport { ObjectUtils } from \"../../util/ObjectUtils\";\nimport { TypeORMError } from \"../../error/TypeORMError\";\nexport class RelationCountAttribute {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(expressionMap, relationCountAttribute) {\n        this.expressionMap = expressionMap;\n        ObjectUtils.assign(this, relationCountAttribute || {});\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    get joinInverseSideMetadata() {\n        return this.relation.inverseEntityMetadata;\n    }\n    /**\n     * Alias of the parent of this join.\n     * For example, if we join (\"post.category\", \"categoryAlias\") then \"post\" is a parent alias.\n     * This value is extracted from entityOrProperty value.\n     * This is available when join was made using \"post.category\" syntax.\n     */\n    get parentAlias() {\n        if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n            throw new TypeORMError(`Given value must be a string representation of alias property`);\n        return this.relationName.split(\".\")[0];\n    }\n    /**\n     * Relation property name of the parent.\n     * This is used to understand what is joined.\n     * For example, if we join (\"post.category\", \"categoryAlias\") then \"category\" is a relation property.\n     * This value is extracted from entityOrProperty value.\n     * This is available when join was made using \"post.category\" syntax.\n     */\n    get relationProperty() {\n        if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n            throw new TypeORMError(`Given value is a string representation of alias property`);\n        return this.relationName.split(\".\")[1];\n    }\n    get junctionAlias() {\n        const [parentAlias, relationProperty] = this.relationName.split(\".\");\n        return parentAlias + \"_\" + relationProperty + \"_rc\";\n    }\n    /**\n     * Relation of the parent.\n     * This is used to understand what is joined.\n     * This is available when join was made using \"post.category\" syntax.\n     */\n    get relation() {\n        if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n            throw new TypeORMError(`Given value is a string representation of alias property`);\n        const [parentAlias, propertyPath] = this.relationName.split(\".\");\n        const relationOwnerSelection = this.expressionMap.findAliasByName(parentAlias);\n        const relation = relationOwnerSelection.metadata.findRelationWithPropertyPath(propertyPath);\n        if (!relation)\n            throw new TypeORMError(`Relation with property path ${propertyPath} in entity was not found.`);\n        return relation;\n    }\n    /**\n     * Metadata of the joined entity.\n     * If table without entity was joined, then it will return undefined.\n     */\n    get metadata() {\n        if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n            throw new TypeORMError(`Given value is a string representation of alias property`);\n        const parentAlias = this.relationName.split(\".\")[0];\n        const selection = this.expressionMap.findAliasByName(parentAlias);\n        return selection.metadata;\n    }\n    get mapToPropertyPropertyName() {\n        return this.mapToProperty.split(\".\")[1];\n    }\n}\n\n//# sourceMappingURL=RelationCountAttribute.js.map\n","import { Alias } from \"./Alias\";\nimport { JoinAttribute } from \"./JoinAttribute\";\nimport { RelationIdAttribute } from \"./relation-id/RelationIdAttribute\";\nimport { RelationCountAttribute } from \"./relation-count/RelationCountAttribute\";\nimport { TypeORMError } from \"../error\";\n/**\n * Contains all properties of the QueryBuilder that needs to be build a final query.\n */\nexport class QueryExpressionMap {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(connection) {\n        this.connection = connection;\n        // -------------------------------------------------------------------------\n        // Public Properties\n        // -------------------------------------------------------------------------\n        /**\n         * Strategy to load relations.\n         */\n        this.relationLoadStrategy = \"join\";\n        /**\n         * Indicates if QueryBuilder used to select entities and not a raw results.\n         */\n        this.queryEntity = false;\n        /**\n         * All aliases (including main alias) used in the query.\n         */\n        this.aliases = [];\n        /**\n         * Represents query type. QueryBuilder is able to build SELECT, UPDATE and DELETE queries.\n         */\n        this.queryType = \"select\";\n        /**\n         * Data needs to be SELECT-ed.\n         */\n        this.selects = [];\n        /**\n         * Max execution time in millisecond.\n         */\n        this.maxExecutionTime = 0;\n        /**\n         * Whether SELECT is DISTINCT.\n         */\n        this.selectDistinct = false;\n        /**\n         * SELECT DISTINCT ON query (postgres).\n         */\n        this.selectDistinctOn = [];\n        /**\n         * Extra returning columns to be added to the returning statement if driver supports it.\n         */\n        this.extraReturningColumns = [];\n        /**\n         * Optional on conflict statement used in insertion query in postgres.\n         */\n        this.onConflict = \"\";\n        /**\n         * Optional on ignore statement used in insertion query in databases.\n         */\n        this.onIgnore = false;\n        /**\n         * JOIN queries.\n         */\n        this.joinAttributes = [];\n        /**\n         * RelationId queries.\n         */\n        this.relationIdAttributes = [];\n        /**\n         * Relation count queries.\n         */\n        this.relationCountAttributes = [];\n        /**\n         * WHERE queries.\n         */\n        this.wheres = [];\n        /**\n         * HAVING queries.\n         */\n        this.havings = [];\n        /**\n         * ORDER BY queries.\n         */\n        this.orderBys = {};\n        /**\n         * GROUP BY queries.\n         */\n        this.groupBys = [];\n        /**\n         * Indicates if soft-deleted rows should be included in entity result.\n         * By default the soft-deleted rows are not included.\n         */\n        this.withDeleted = false;\n        /**\n         * Parameters used to be escaped in final query.\n         */\n        this.parameters = {};\n        /**\n         * Indicates if alias, table names and column names will be escaped by driver, or not.\n         *\n         * todo: rename to isQuotingDisabled, also think if it should be named \"escaping\"\n         */\n        this.disableEscaping = true;\n        /**\n         * Indicates if virtual columns should be included in entity result.\n         *\n         * todo: what to do with it? is it properly used? what about persistence?\n         */\n        this.enableRelationIdValues = false;\n        /**\n         * Extra where condition appended to the end of original where conditions with AND keyword.\n         * Original condition will be wrapped into brackets.\n         */\n        this.extraAppendedAndWhereCondition = \"\";\n        /**\n         * Indicates if query builder creates a subquery.\n         */\n        this.subQuery = false;\n        /**\n         * Indicates if property names are prefixed with alias names during property replacement.\n         * By default this is enabled, however we need this because aliases are not supported in UPDATE and DELETE queries,\n         * but user can use them in WHERE expressions.\n         */\n        this.aliasNamePrefixingEnabled = true;\n        /**\n         * Options that define QueryBuilder behaviour.\n         */\n        this.options = [];\n        /**\n         * List of columns where data should be inserted.\n         * Used in INSERT query.\n         */\n        this.insertColumns = [];\n        /**\n         * Used if user wants to update or delete a specific entities.\n         */\n        this.whereEntities = [];\n        /**\n         * Indicates if entity must be updated after insertion / updation.\n         * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n         */\n        this.updateEntity = true;\n        /**\n         * Indicates if listeners and subscribers must be called before and after query execution.\n         */\n        this.callListeners = true;\n        /**\n         * Indicates if query must be wrapped into transaction.\n         */\n        this.useTransaction = false;\n        /**\n         * Extra parameters.\n         *\n         * @deprecated Use standard parameters instead\n         */\n        this.nativeParameters = {};\n        /**\n         * Items from an entity that have been locally generated & are recorded here for later use.\n         * Examples include the UUID generation when the database does not natively support it.\n         * These are included in the entity index order.\n         */\n        this.locallyGenerated = {};\n        this.commonTableExpressions = [];\n        if (connection.options.relationLoadStrategy) {\n            this.relationLoadStrategy = connection.options.relationLoadStrategy;\n        }\n        this.timeTravel =\n            connection.options\n                ?.timeTravelQueries || false;\n    }\n    // -------------------------------------------------------------------------\n    // Accessors\n    // -------------------------------------------------------------------------\n    /**\n     * Get all ORDER BY queries - if order by is specified by user then it uses them,\n     * otherwise it uses default entity order by if it was set.\n     */\n    get allOrderBys() {\n        if (!Object.keys(this.orderBys).length &&\n            this.mainAlias.hasMetadata &&\n            this.options.indexOf(\"disable-global-order\") === -1) {\n            const entityOrderBy = this.mainAlias.metadata.orderBy || {};\n            return Object.keys(entityOrderBy).reduce((orderBy, key) => {\n                orderBy[this.mainAlias.name + \".\" + key] = entityOrderBy[key];\n                return orderBy;\n            }, {});\n        }\n        return this.orderBys;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a main alias and adds it to the current expression map.\n     */\n    setMainAlias(alias) {\n        // if main alias is already set then remove it from the array\n        // if (this.mainAlias)\n        //     this.aliases.splice(this.aliases.indexOf(this.mainAlias));\n        // set new main alias\n        this.mainAlias = alias;\n        return alias;\n    }\n    /**\n     * Creates a new alias and adds it to the current expression map.\n     */\n    createAlias(options) {\n        let aliasName = options.name;\n        if (!aliasName && options.tablePath)\n            aliasName = options.tablePath;\n        if (!aliasName && typeof options.target === \"function\")\n            aliasName = options.target.name;\n        if (!aliasName && typeof options.target === \"string\")\n            aliasName = options.target;\n        const alias = new Alias();\n        alias.type = options.type;\n        if (aliasName)\n            alias.name = aliasName;\n        if (options.metadata)\n            alias.metadata = options.metadata;\n        if (options.target && !alias.hasMetadata)\n            alias.metadata = this.connection.getMetadata(options.target);\n        if (options.tablePath)\n            alias.tablePath = options.tablePath;\n        if (options.subQuery)\n            alias.subQuery = options.subQuery;\n        this.aliases.push(alias);\n        return alias;\n    }\n    /**\n     * Finds alias with the given name.\n     * If alias was not found it throw an exception.\n     */\n    findAliasByName(aliasName) {\n        const alias = this.aliases.find((alias) => alias.name === aliasName);\n        if (!alias)\n            throw new TypeORMError(`\"${aliasName}\" alias was not found. Maybe you forgot to join it?`);\n        return alias;\n    }\n    findColumnByAliasExpression(aliasExpression) {\n        const [aliasName, propertyPath] = aliasExpression.split(\".\");\n        const alias = this.findAliasByName(aliasName);\n        return alias.metadata.findColumnWithPropertyName(propertyPath);\n    }\n    /**\n     * Gets relation metadata of the relation this query builder works with.\n     *\n     * todo: add proper exceptions\n     */\n    get relationMetadata() {\n        if (!this.mainAlias)\n            throw new TypeORMError(`Entity to work with is not specified!`); // todo: better message\n        const relationMetadata = this.mainAlias.metadata.findRelationWithPropertyPath(this.relationPropertyPath);\n        if (!relationMetadata)\n            throw new TypeORMError(`Relation ${this.relationPropertyPath} was not found in entity ${this.mainAlias.name}`); // todo: better message\n        return relationMetadata;\n    }\n    /**\n     * Copies all properties of the current QueryExpressionMap into a new one.\n     * Useful when QueryBuilder needs to create a copy of itself.\n     */\n    clone() {\n        const map = new QueryExpressionMap(this.connection);\n        map.queryType = this.queryType;\n        map.selects = this.selects.map((select) => select);\n        map.maxExecutionTime = this.maxExecutionTime;\n        map.selectDistinct = this.selectDistinct;\n        map.selectDistinctOn = this.selectDistinctOn;\n        this.aliases.forEach((alias) => map.aliases.push(new Alias(alias)));\n        map.relationLoadStrategy = this.relationLoadStrategy;\n        map.mainAlias = this.mainAlias;\n        map.valuesSet = this.valuesSet;\n        map.returning = this.returning;\n        map.onConflict = this.onConflict;\n        map.onIgnore = this.onIgnore;\n        map.onUpdate = this.onUpdate;\n        map.joinAttributes = this.joinAttributes.map((join) => new JoinAttribute(this.connection, this, join));\n        map.relationIdAttributes = this.relationIdAttributes.map((relationId) => new RelationIdAttribute(this, relationId));\n        map.relationCountAttributes = this.relationCountAttributes.map((relationCount) => new RelationCountAttribute(this, relationCount));\n        map.wheres = this.wheres.map((where) => ({ ...where }));\n        map.havings = this.havings.map((having) => ({ ...having }));\n        map.orderBys = Object.assign({}, this.orderBys);\n        map.groupBys = this.groupBys.map((groupBy) => groupBy);\n        map.limit = this.limit;\n        map.offset = this.offset;\n        map.skip = this.skip;\n        map.take = this.take;\n        map.lockMode = this.lockMode;\n        map.onLocked = this.onLocked;\n        map.lockVersion = this.lockVersion;\n        map.lockTables = this.lockTables;\n        map.withDeleted = this.withDeleted;\n        map.parameters = Object.assign({}, this.parameters);\n        map.disableEscaping = this.disableEscaping;\n        map.enableRelationIdValues = this.enableRelationIdValues;\n        map.extraAppendedAndWhereCondition = this.extraAppendedAndWhereCondition;\n        map.subQuery = this.subQuery;\n        map.aliasNamePrefixingEnabled = this.aliasNamePrefixingEnabled;\n        map.cache = this.cache;\n        map.cacheId = this.cacheId;\n        map.cacheDuration = this.cacheDuration;\n        map.relationPropertyPath = this.relationPropertyPath;\n        map.of = this.of;\n        map.insertColumns = this.insertColumns;\n        map.whereEntities = this.whereEntities;\n        map.updateEntity = this.updateEntity;\n        map.callListeners = this.callListeners;\n        map.useTransaction = this.useTransaction;\n        map.timeTravel = this.timeTravel;\n        map.nativeParameters = Object.assign({}, this.nativeParameters);\n        map.comment = this.comment;\n        map.commonTableExpressions = this.commonTableExpressions.map((cteOptions) => ({\n            alias: cteOptions.alias,\n            queryBuilder: typeof cteOptions.queryBuilder === \"string\"\n                ? cteOptions.queryBuilder\n                : cteOptions.queryBuilder.clone(),\n            options: cteOptions.options,\n        }));\n        return map;\n    }\n}\n\n//# sourceMappingURL=QueryExpressionMap.js.map\n","/**\n * Syntax sugar.\n * Allows to use brackets in WHERE expressions for better syntax.\n */\nexport class Brackets {\n    /**\n     * Given WHERE query builder that will build a WHERE expression that will be taken into brackets.\n     */\n    constructor(whereFactory) {\n        this[\"@instanceof\"] = Symbol.for(\"Brackets\");\n        this.whereFactory = whereFactory;\n    }\n}\n\n//# sourceMappingURL=Brackets.js.map\n","export class ApplyValueTransformers {\n    static transformFrom(transformer, databaseValue) {\n        if (Array.isArray(transformer)) {\n            const reverseTransformers = transformer.slice().reverse();\n            return reverseTransformers.reduce((transformedValue, _transformer) => {\n                return _transformer.from(transformedValue);\n            }, databaseValue);\n        }\n        return transformer.from(databaseValue);\n    }\n    static transformTo(transformer, entityValue) {\n        if (Array.isArray(transformer)) {\n            return transformer.reduce((transformedValue, _transformer) => {\n                return _transformer.to(transformedValue);\n            }, entityValue);\n        }\n        return transformer.to(entityValue);\n    }\n}\n\n//# sourceMappingURL=ApplyValueTransformers.js.map\n","import { InstanceChecker } from \"../util/InstanceChecker\";\nimport { ApplyValueTransformers } from \"../util/ApplyValueTransformers\";\n/**\n * Find Operator used in Find Conditions.\n */\nexport class FindOperator {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(type, value, useParameter = true, multipleParameters = false, getSql, objectLiteralParameters) {\n        this[\"@instanceof\"] = Symbol.for(\"FindOperator\");\n        this._type = type;\n        this._value = value;\n        this._useParameter = useParameter;\n        this._multipleParameters = multipleParameters;\n        this._getSql = getSql;\n        this._objectLiteralParameters = objectLiteralParameters;\n    }\n    // -------------------------------------------------------------------------\n    // Accessors\n    // -------------------------------------------------------------------------\n    /**\n     * Indicates if parameter is used or not for this operator.\n     * Extracts final value if value is another find operator.\n     */\n    get useParameter() {\n        if (InstanceChecker.isFindOperator(this._value))\n            return this._value.useParameter;\n        return this._useParameter;\n    }\n    /**\n     * Indicates if multiple parameters must be used for this operator.\n     * Extracts final value if value is another find operator.\n     */\n    get multipleParameters() {\n        if (InstanceChecker.isFindOperator(this._value))\n            return this._value.multipleParameters;\n        return this._multipleParameters;\n    }\n    /**\n     * Gets the Type of this FindOperator\n     */\n    get type() {\n        return this._type;\n    }\n    /**\n     * Gets the final value needs to be used as parameter value.\n     */\n    get value() {\n        if (InstanceChecker.isFindOperator(this._value))\n            return this._value.value;\n        return this._value;\n    }\n    /**\n     * Gets ObjectLiteral parameters.\n     */\n    get objectLiteralParameters() {\n        if (InstanceChecker.isFindOperator(this._value))\n            return this._value.objectLiteralParameters;\n        return this._objectLiteralParameters;\n    }\n    /**\n     * Gets the child FindOperator if it exists\n     */\n    get child() {\n        if (InstanceChecker.isFindOperator(this._value))\n            return this._value;\n        return undefined;\n    }\n    /**\n     * Gets the SQL generator\n     */\n    get getSql() {\n        if (InstanceChecker.isFindOperator(this._value))\n            return this._value.getSql;\n        return this._getSql;\n    }\n    transformValue(transformer) {\n        if (this._value instanceof FindOperator) {\n            this._value.transformValue(transformer);\n        }\n        else {\n            this._value =\n                Array.isArray(this._value) && this._multipleParameters\n                    ? this._value.map((v) => transformer &&\n                        ApplyValueTransformers.transformTo(transformer, v))\n                    : ApplyValueTransformers.transformTo(transformer, this._value);\n        }\n    }\n}\n\n//# sourceMappingURL=FindOperator.js.map\n","import { FindOperator } from \"../FindOperator\";\n/**\n * Find Options Operator.\n * Example: { someField: In([...]) }\n */\nexport function In(value) {\n    return new FindOperator(\"in\", value, true, true);\n}\n\n//# sourceMappingURL=In.js.map\n","// Escape special characters in regular expressions\n// Per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\nconst ESCAPE_REGEXP = /[.*+\\-?^${}()|[\\]\\\\]/g;\nexport const escapeRegExp = (s) => s.replace(ESCAPE_REGEXP, \"\\\\$&\");\n\n//# sourceMappingURL=escapeRegExp.js.map\n","import { QueryExpressionMap } from \"./QueryExpressionMap\";\nimport { Brackets } from \"./Brackets\";\nimport { FindOperator } from \"../find-options/FindOperator\";\nimport { In } from \"../find-options/operator/In\";\nimport { TypeORMError } from \"../error\";\nimport { EntityPropertyNotFoundError } from \"../error/EntityPropertyNotFoundError\";\nimport { InstanceChecker } from \"../util/InstanceChecker\";\nimport { escapeRegExp } from \"../util/escapeRegExp\";\n// todo: completely cover query builder with tests\n// todo: entityOrProperty can be target name. implement proper behaviour if it is.\n// todo: check in persistment if id exist on object and throw exception (can be in partial selection?)\n// todo: fix problem with long aliases eg getMaxIdentifierLength\n// todo: fix replacing in .select(\"COUNT(post.id) AS cnt\") statement\n// todo: implement joinAlways in relations and relationId\n// todo: finish partial selection\n// todo: sugar methods like: .addCount and .selectCount, selectCountAndMap, selectSum, selectSumAndMap, ...\n// todo: implement @Select decorator\n// todo: add select and map functions\n// todo: implement relation/entity loading and setting them into properties within a separate query\n// .loadAndMap(\"post.categories\", \"post.categories\", qb => ...)\n// .loadAndMap(\"post.categories\", Category, qb => ...)\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nexport class QueryBuilder {\n    /**\n     * QueryBuilder can be initialized from given Connection and QueryRunner objects or from given other QueryBuilder.\n     */\n    constructor(connectionOrQueryBuilder, queryRunner) {\n        this[\"@instanceof\"] = Symbol.for(\"QueryBuilder\");\n        /**\n         * Memo to help keep place of current parameter index for `createParameter`\n         */\n        this.parameterIndex = 0;\n        if (InstanceChecker.isDataSource(connectionOrQueryBuilder)) {\n            this.connection = connectionOrQueryBuilder;\n            this.queryRunner = queryRunner;\n            this.expressionMap = new QueryExpressionMap(this.connection);\n        }\n        else {\n            this.connection = connectionOrQueryBuilder.connection;\n            this.queryRunner = connectionOrQueryBuilder.queryRunner;\n            this.expressionMap = connectionOrQueryBuilder.expressionMap.clone();\n        }\n    }\n    static registerQueryBuilderClass(name, factory) {\n        QueryBuilder.queryBuilderRegistry[name] = factory;\n    }\n    // -------------------------------------------------------------------------\n    // Accessors\n    // -------------------------------------------------------------------------\n    /**\n     * Gets the main alias string used in this query builder.\n     */\n    get alias() {\n        if (!this.expressionMap.mainAlias)\n            throw new TypeORMError(`Main alias is not set`); // todo: better exception\n        return this.expressionMap.mainAlias.name;\n    }\n    /**\n     * Creates SELECT query and selects given data.\n     * Replaces all previous selections if they exist.\n     */\n    select(selection, selectionAliasName) {\n        this.expressionMap.queryType = \"select\";\n        if (Array.isArray(selection)) {\n            this.expressionMap.selects = selection.map((selection) => ({\n                selection: selection,\n            }));\n        }\n        else if (selection) {\n            this.expressionMap.selects = [\n                { selection: selection, aliasName: selectionAliasName },\n            ];\n        }\n        if (InstanceChecker.isSelectQueryBuilder(this))\n            return this;\n        return QueryBuilder.queryBuilderRegistry[\"SelectQueryBuilder\"](this);\n    }\n    /**\n     * Creates INSERT query.\n     */\n    insert() {\n        this.expressionMap.queryType = \"insert\";\n        if (InstanceChecker.isInsertQueryBuilder(this))\n            return this;\n        return QueryBuilder.queryBuilderRegistry[\"InsertQueryBuilder\"](this);\n    }\n    /**\n     * Creates UPDATE query and applies given update values.\n     */\n    update(entityOrTableNameUpdateSet, maybeUpdateSet) {\n        const updateSet = maybeUpdateSet\n            ? maybeUpdateSet\n            : entityOrTableNameUpdateSet;\n        entityOrTableNameUpdateSet = InstanceChecker.isEntitySchema(entityOrTableNameUpdateSet)\n            ? entityOrTableNameUpdateSet.options.name\n            : entityOrTableNameUpdateSet;\n        if (typeof entityOrTableNameUpdateSet === \"function\" ||\n            typeof entityOrTableNameUpdateSet === \"string\") {\n            const mainAlias = this.createFromAlias(entityOrTableNameUpdateSet);\n            this.expressionMap.setMainAlias(mainAlias);\n        }\n        this.expressionMap.queryType = \"update\";\n        this.expressionMap.valuesSet = updateSet;\n        if (InstanceChecker.isUpdateQueryBuilder(this))\n            return this;\n        return QueryBuilder.queryBuilderRegistry[\"UpdateQueryBuilder\"](this);\n    }\n    /**\n     * Creates DELETE query.\n     */\n    delete() {\n        this.expressionMap.queryType = \"delete\";\n        if (InstanceChecker.isDeleteQueryBuilder(this))\n            return this;\n        return QueryBuilder.queryBuilderRegistry[\"DeleteQueryBuilder\"](this);\n    }\n    softDelete() {\n        this.expressionMap.queryType = \"soft-delete\";\n        if (InstanceChecker.isSoftDeleteQueryBuilder(this))\n            return this;\n        return QueryBuilder.queryBuilderRegistry[\"SoftDeleteQueryBuilder\"](this);\n    }\n    restore() {\n        this.expressionMap.queryType = \"restore\";\n        if (InstanceChecker.isSoftDeleteQueryBuilder(this))\n            return this;\n        return QueryBuilder.queryBuilderRegistry[\"SoftDeleteQueryBuilder\"](this);\n    }\n    /**\n     * Sets entity's relation with which this query builder gonna work.\n     */\n    relation(entityTargetOrPropertyPath, maybePropertyPath) {\n        const entityTarget = arguments.length === 2 ? entityTargetOrPropertyPath : undefined;\n        const propertyPath = arguments.length === 2\n            ? maybePropertyPath\n            : entityTargetOrPropertyPath;\n        this.expressionMap.queryType = \"relation\";\n        this.expressionMap.relationPropertyPath = propertyPath;\n        if (entityTarget) {\n            const mainAlias = this.createFromAlias(entityTarget);\n            this.expressionMap.setMainAlias(mainAlias);\n        }\n        if (InstanceChecker.isRelationQueryBuilder(this))\n            return this;\n        return QueryBuilder.queryBuilderRegistry[\"RelationQueryBuilder\"](this);\n    }\n    /**\n     * Checks if given relation or relations exist in the entity.\n     * Returns true if relation exists, false otherwise.\n     *\n     * todo: move this method to manager? or create a shortcut?\n     */\n    hasRelation(target, relation) {\n        const entityMetadata = this.connection.getMetadata(target);\n        const relations = Array.isArray(relation) ? relation : [relation];\n        return relations.every((relation) => {\n            return !!entityMetadata.findRelationWithPropertyPath(relation);\n        });\n    }\n    /**\n     * Check the existence of a parameter for this query builder.\n     */\n    hasParameter(key) {\n        return (this.parentQueryBuilder?.hasParameter(key) ||\n            key in this.expressionMap.parameters);\n    }\n    /**\n     * Sets parameter name and its value.\n     *\n     * The key for this parameter may contain numbers, letters, underscores, or periods.\n     */\n    setParameter(key, value) {\n        if (typeof value === \"function\") {\n            throw new TypeORMError(`Function parameter isn't supported in the parameters. Please check \"${key}\" parameter.`);\n        }\n        if (!key.match(/^([A-Za-z0-9_.]+)$/)) {\n            throw new TypeORMError(\"QueryBuilder parameter keys may only contain numbers, letters, underscores, or periods.\");\n        }\n        if (this.parentQueryBuilder) {\n            this.parentQueryBuilder.setParameter(key, value);\n        }\n        this.expressionMap.parameters[key] = value;\n        return this;\n    }\n    /**\n     * Adds all parameters from the given object.\n     */\n    setParameters(parameters) {\n        for (const [key, value] of Object.entries(parameters)) {\n            this.setParameter(key, value);\n        }\n        return this;\n    }\n    createParameter(value) {\n        let parameterName;\n        do {\n            parameterName = `orm_param_${this.parameterIndex++}`;\n        } while (this.hasParameter(parameterName));\n        this.setParameter(parameterName, value);\n        return `:${parameterName}`;\n    }\n    /**\n     * Adds native parameters from the given object.\n     *\n     * @deprecated Use `setParameters` instead\n     */\n    setNativeParameters(parameters) {\n        // set parent query builder parameters as well in sub-query mode\n        if (this.parentQueryBuilder) {\n            this.parentQueryBuilder.setNativeParameters(parameters);\n        }\n        Object.keys(parameters).forEach((key) => {\n            this.expressionMap.nativeParameters[key] = parameters[key];\n        });\n        return this;\n    }\n    /**\n     * Gets all parameters.\n     */\n    getParameters() {\n        const parameters = Object.assign({}, this.expressionMap.parameters);\n        // add discriminator column parameter if it exist\n        if (this.expressionMap.mainAlias &&\n            this.expressionMap.mainAlias.hasMetadata) {\n            const metadata = this.expressionMap.mainAlias.metadata;\n            if (metadata.discriminatorColumn && metadata.parentEntityMetadata) {\n                const values = metadata.childEntityMetadatas\n                    .filter((childMetadata) => childMetadata.discriminatorColumn)\n                    .map((childMetadata) => childMetadata.discriminatorValue);\n                values.push(metadata.discriminatorValue);\n                parameters[\"discriminatorColumnValues\"] = values;\n            }\n        }\n        return parameters;\n    }\n    /**\n     * Prints sql to stdout using console.log.\n     */\n    printSql() {\n        // TODO rename to logSql()\n        const [query, parameters] = this.getQueryAndParameters();\n        this.connection.logger.logQuery(query, parameters);\n        return this;\n    }\n    /**\n     * Gets generated sql that will be executed.\n     * Parameters in the query are escaped for the currently used driver.\n     */\n    getSql() {\n        return this.getQueryAndParameters()[0];\n    }\n    /**\n     * Gets query to be executed with all parameters used in it.\n     */\n    getQueryAndParameters() {\n        // this execution order is important because getQuery method generates this.expressionMap.nativeParameters values\n        const query = this.getQuery();\n        const parameters = this.getParameters();\n        return this.connection.driver.escapeQueryWithParameters(query, parameters, this.expressionMap.nativeParameters);\n    }\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    async execute() {\n        const [sql, parameters] = this.getQueryAndParameters();\n        const queryRunner = this.obtainQueryRunner();\n        try {\n            return await queryRunner.query(sql, parameters); // await is needed here because we are using finally\n        }\n        finally {\n            if (queryRunner !== this.queryRunner) {\n                // means we created our own query runner\n                await queryRunner.release();\n            }\n        }\n    }\n    /**\n     * Creates a completely new query builder.\n     * Uses same query runner as current QueryBuilder.\n     */\n    createQueryBuilder(queryRunner) {\n        return new this.constructor(this.connection, queryRunner ?? this.queryRunner);\n    }\n    /**\n     * Clones query builder as it is.\n     * Note: it uses new query runner, if you want query builder that uses exactly same query runner,\n     * you can create query builder using its constructor, for example new SelectQueryBuilder(queryBuilder)\n     * where queryBuilder is cloned QueryBuilder.\n     */\n    clone() {\n        return new this.constructor(this);\n    }\n    /**\n     * Includes a Query comment in the query builder.  This is helpful for debugging purposes,\n     * such as finding a specific query in the database server's logs, or for categorization using\n     * an APM product.\n     */\n    comment(comment) {\n        this.expressionMap.comment = comment;\n        return this;\n    }\n    /**\n     * Disables escaping.\n     */\n    disableEscaping() {\n        this.expressionMap.disableEscaping = false;\n        return this;\n    }\n    /**\n     * Escapes table name, column name or alias name using current database's escaping character.\n     */\n    escape(name) {\n        if (!this.expressionMap.disableEscaping)\n            return name;\n        return this.connection.driver.escape(name);\n    }\n    /**\n     * Sets or overrides query builder's QueryRunner.\n     */\n    setQueryRunner(queryRunner) {\n        this.queryRunner = queryRunner;\n        return this;\n    }\n    /**\n     * Indicates if listeners and subscribers must be called before and after query execution.\n     * Enabled by default.\n     */\n    callListeners(enabled) {\n        this.expressionMap.callListeners = enabled;\n        return this;\n    }\n    /**\n     * If set to true the query will be wrapped into a transaction.\n     */\n    useTransaction(enabled) {\n        this.expressionMap.useTransaction = enabled;\n        return this;\n    }\n    /**\n     * Adds CTE to query\n     */\n    addCommonTableExpression(queryBuilder, alias, options) {\n        this.expressionMap.commonTableExpressions.push({\n            queryBuilder,\n            alias,\n            options: options || {},\n        });\n        return this;\n    }\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets escaped table name with schema name if SqlServer driver used with custom\n     * schema name, otherwise returns escaped table name.\n     */\n    getTableName(tablePath) {\n        return tablePath\n            .split(\".\")\n            .map((i) => {\n            // this condition need because in SQL Server driver when custom database name was specified and schema name was not, we got `dbName..tableName` string, and doesn't need to escape middle empty string\n            if (i === \"\")\n                return i;\n            return this.escape(i);\n        })\n            .join(\".\");\n    }\n    /**\n     * Gets name of the table where insert should be performed.\n     */\n    getMainTableName() {\n        if (!this.expressionMap.mainAlias)\n            throw new TypeORMError(`Entity where values should be inserted is not specified. Call \"qb.into(entity)\" method to specify it.`);\n        if (this.expressionMap.mainAlias.hasMetadata)\n            return this.expressionMap.mainAlias.metadata.tablePath;\n        return this.expressionMap.mainAlias.tablePath;\n    }\n    /**\n     * Specifies FROM which entity's table select/update/delete will be executed.\n     * Also sets a main string alias of the selection data.\n     */\n    createFromAlias(entityTarget, aliasName) {\n        // if table has a metadata then find it to properly escape its properties\n        // const metadata = this.connection.entityMetadatas.find(metadata => metadata.tableName === tableName);\n        if (this.connection.hasMetadata(entityTarget)) {\n            const metadata = this.connection.getMetadata(entityTarget);\n            return this.expressionMap.createAlias({\n                type: \"from\",\n                name: aliasName,\n                metadata: this.connection.getMetadata(entityTarget),\n                tablePath: metadata.tablePath,\n            });\n        }\n        else {\n            if (typeof entityTarget === \"string\") {\n                const isSubquery = entityTarget.substr(0, 1) === \"(\" &&\n                    entityTarget.substr(-1) === \")\";\n                return this.expressionMap.createAlias({\n                    type: \"from\",\n                    name: aliasName,\n                    tablePath: !isSubquery\n                        ? entityTarget\n                        : undefined,\n                    subQuery: isSubquery ? entityTarget : undefined,\n                });\n            }\n            const subQueryBuilder = entityTarget(this.subQuery());\n            this.setParameters(subQueryBuilder.getParameters());\n            const subquery = subQueryBuilder.getQuery();\n            return this.expressionMap.createAlias({\n                type: \"from\",\n                name: aliasName,\n                subQuery: subquery,\n            });\n        }\n    }\n    /**\n     * @deprecated this way of replace property names is too slow.\n     *  Instead, we'll replace property names at the end - once query is build.\n     */\n    replacePropertyNames(statement) {\n        return statement;\n    }\n    /**\n     * Replaces all entity's propertyName to name in the given SQL string.\n     */\n    replacePropertyNamesForTheWholeQuery(statement) {\n        const replacements = {};\n        for (const alias of this.expressionMap.aliases) {\n            if (!alias.hasMetadata)\n                continue;\n            const replaceAliasNamePrefix = this.expressionMap.aliasNamePrefixingEnabled && alias.name\n                ? `${alias.name}.`\n                : \"\";\n            if (!replacements[replaceAliasNamePrefix]) {\n                replacements[replaceAliasNamePrefix] = {};\n            }\n            // Insert & overwrite the replacements from least to most relevant in our replacements object.\n            // To do this we iterate and overwrite in the order of relevance.\n            // Least to Most Relevant:\n            // * Relation Property Path to first join column key\n            // * Relation Property Path + Column Path\n            // * Column Database Name\n            // * Column Property Name\n            // * Column Property Path\n            for (const relation of alias.metadata.relations) {\n                if (relation.joinColumns.length > 0)\n                    replacements[replaceAliasNamePrefix][relation.propertyPath] = relation.joinColumns[0].databaseName;\n            }\n            for (const relation of alias.metadata.relations) {\n                const allColumns = [\n                    ...relation.joinColumns,\n                    ...relation.inverseJoinColumns,\n                ];\n                for (const joinColumn of allColumns) {\n                    const propertyKey = `${relation.propertyPath}.${joinColumn.referencedColumn.propertyPath}`;\n                    replacements[replaceAliasNamePrefix][propertyKey] =\n                        joinColumn.databaseName;\n                }\n            }\n            for (const column of alias.metadata.columns) {\n                replacements[replaceAliasNamePrefix][column.databaseName] =\n                    column.databaseName;\n            }\n            for (const column of alias.metadata.columns) {\n                replacements[replaceAliasNamePrefix][column.propertyName] =\n                    column.databaseName;\n            }\n            for (const column of alias.metadata.columns) {\n                replacements[replaceAliasNamePrefix][column.propertyPath] =\n                    column.databaseName;\n            }\n        }\n        const replacementKeys = Object.keys(replacements);\n        const replaceAliasNamePrefixes = replacementKeys\n            .map((key) => escapeRegExp(key))\n            .join(\"|\");\n        if (replacementKeys.length > 0) {\n            statement = statement.replace(new RegExp(\n            // Avoid a lookbehind here since it's not well supported\n            `([ =(]|^.{0})` + // any of ' =(' or start of line\n                // followed by our prefix, e.g. 'tablename.' or ''\n                `${replaceAliasNamePrefixes\n                    ? \"(\" + replaceAliasNamePrefixes + \")\"\n                    : \"\"}([^ =(),]+)` + // a possible property name: sequence of anything but ' =(),'\n                // terminated by ' =),' or end of line\n                `(?=[ =),]|.{0}$)`, \"gm\"), (...matches) => {\n                let match, pre, p;\n                if (replaceAliasNamePrefixes) {\n                    match = matches[0];\n                    pre = matches[1];\n                    p = matches[3];\n                    if (replacements[matches[2]][p]) {\n                        return `${pre}${this.escape(matches[2].substring(0, matches[2].length - 1))}.${this.escape(replacements[matches[2]][p])}`;\n                    }\n                }\n                else {\n                    match = matches[0];\n                    pre = matches[1];\n                    p = matches[2];\n                    if (replacements[\"\"][p]) {\n                        return `${pre}${this.escape(replacements[\"\"][p])}`;\n                    }\n                }\n                return match;\n            });\n        }\n        return statement;\n    }\n    createComment() {\n        if (!this.expressionMap.comment) {\n            return \"\";\n        }\n        // ANSI SQL 2003 support C style comments - comments that start with `/*` and end with `*/`\n        // In some dialects query nesting is available - but not all.  Because of this, we'll need\n        // to scrub \"ending\" characters from the SQL but otherwise we can leave everything else\n        // as-is and it should be valid.\n        return `/* ${this.expressionMap.comment.replace(/\\*\\//g, \"\")} */ `;\n    }\n    /**\n     * Time travel queries for CockroachDB\n     */\n    createTimeTravelQuery() {\n        if (this.expressionMap.queryType === \"select\" &&\n            this.expressionMap.timeTravel) {\n            return ` AS OF SYSTEM TIME ${this.expressionMap.timeTravel}`;\n        }\n        return \"\";\n    }\n    /**\n     * Creates \"WHERE\" expression.\n     */\n    createWhereExpression() {\n        const conditionsArray = [];\n        const whereExpression = this.createWhereClausesExpression(this.expressionMap.wheres);\n        if (whereExpression.length > 0 && whereExpression !== \"1=1\") {\n            conditionsArray.push(this.replacePropertyNames(whereExpression));\n        }\n        if (this.expressionMap.mainAlias.hasMetadata) {\n            const metadata = this.expressionMap.mainAlias.metadata;\n            // Adds the global condition of \"non-deleted\" for the entity with delete date columns in select query.\n            if (this.expressionMap.queryType === \"select\" &&\n                !this.expressionMap.withDeleted &&\n                metadata.deleteDateColumn) {\n                const column = this.expressionMap.aliasNamePrefixingEnabled\n                    ? this.expressionMap.mainAlias.name +\n                        \".\" +\n                        metadata.deleteDateColumn.propertyName\n                    : metadata.deleteDateColumn.propertyName;\n                const condition = `${this.replacePropertyNames(column)} IS NULL`;\n                conditionsArray.push(condition);\n            }\n            if (metadata.discriminatorColumn && metadata.parentEntityMetadata) {\n                const column = this.expressionMap.aliasNamePrefixingEnabled\n                    ? this.expressionMap.mainAlias.name +\n                        \".\" +\n                        metadata.discriminatorColumn.databaseName\n                    : metadata.discriminatorColumn.databaseName;\n                const condition = `${this.replacePropertyNames(column)} IN (:...discriminatorColumnValues)`;\n                conditionsArray.push(condition);\n            }\n        }\n        if (this.expressionMap.extraAppendedAndWhereCondition) {\n            const condition = this.replacePropertyNames(this.expressionMap.extraAppendedAndWhereCondition);\n            conditionsArray.push(condition);\n        }\n        let condition = \"\";\n        // time travel\n        condition += this.createTimeTravelQuery();\n        if (!conditionsArray.length) {\n            condition += \"\";\n        }\n        else if (conditionsArray.length === 1) {\n            condition += ` WHERE ${conditionsArray[0]}`;\n        }\n        else {\n            condition += ` WHERE ( ${conditionsArray.join(\" ) AND ( \")} )`;\n        }\n        return condition;\n    }\n    /**\n     * Creates \"RETURNING\" / \"OUTPUT\" expression.\n     */\n    createReturningExpression(returningType) {\n        const columns = this.getReturningColumns();\n        const driver = this.connection.driver;\n        // also add columns we must auto-return to perform entity updation\n        // if user gave his own returning\n        if (typeof this.expressionMap.returning !== \"string\" &&\n            this.expressionMap.extraReturningColumns.length > 0 &&\n            driver.isReturningSqlSupported(returningType)) {\n            columns.push(...this.expressionMap.extraReturningColumns.filter((column) => {\n                return columns.indexOf(column) === -1;\n            }));\n        }\n        if (columns.length) {\n            let columnsExpression = columns\n                .map((column) => {\n                const name = this.escape(column.databaseName);\n                if (driver.options.type === \"mssql\") {\n                    if (this.expressionMap.queryType === \"insert\" ||\n                        this.expressionMap.queryType === \"update\" ||\n                        this.expressionMap.queryType === \"soft-delete\" ||\n                        this.expressionMap.queryType === \"restore\") {\n                        return \"INSERTED.\" + name;\n                    }\n                    else {\n                        return (this.escape(this.getMainTableName()) +\n                            \".\" +\n                            name);\n                    }\n                }\n                else {\n                    return name;\n                }\n            })\n                .join(\", \");\n            if (driver.options.type === \"oracle\") {\n                columnsExpression +=\n                    \" INTO \" +\n                        columns\n                            .map((column) => {\n                            return this.createParameter({\n                                type: driver.columnTypeToNativeParameter(column.type),\n                                dir: driver.oracle.BIND_OUT,\n                            });\n                        })\n                            .join(\", \");\n            }\n            if (driver.options.type === \"mssql\") {\n                if (this.expressionMap.queryType === \"insert\" ||\n                    this.expressionMap.queryType === \"update\") {\n                    columnsExpression += \" INTO @OutputTable\";\n                }\n            }\n            return columnsExpression;\n        }\n        else if (typeof this.expressionMap.returning === \"string\") {\n            return this.expressionMap.returning;\n        }\n        return \"\";\n    }\n    /**\n     * If returning / output cause is set to array of column names,\n     * then this method will return all column metadatas of those column names.\n     */\n    getReturningColumns() {\n        const columns = [];\n        if (Array.isArray(this.expressionMap.returning)) {\n            ;\n            this.expressionMap.returning.forEach((columnName) => {\n                if (this.expressionMap.mainAlias.hasMetadata) {\n                    columns.push(...this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(columnName));\n                }\n            });\n        }\n        return columns;\n    }\n    createWhereClausesExpression(clauses) {\n        return clauses\n            .map((clause, index) => {\n            const expression = this.createWhereConditionExpression(clause.condition);\n            switch (clause.type) {\n                case \"and\":\n                    return ((index > 0 ? \"AND \" : \"\") +\n                        `${this.connection.options.isolateWhereStatements\n                            ? \"(\"\n                            : \"\"}${expression}${this.connection.options.isolateWhereStatements\n                            ? \")\"\n                            : \"\"}`);\n                case \"or\":\n                    return ((index > 0 ? \"OR \" : \"\") +\n                        `${this.connection.options.isolateWhereStatements\n                            ? \"(\"\n                            : \"\"}${expression}${this.connection.options.isolateWhereStatements\n                            ? \")\"\n                            : \"\"}`);\n            }\n            return expression;\n        })\n            .join(\" \")\n            .trim();\n    }\n    /**\n     * Computes given where argument - transforms to a where string all forms it can take.\n     */\n    createWhereConditionExpression(condition, alwaysWrap = false) {\n        if (typeof condition === \"string\")\n            return condition;\n        if (Array.isArray(condition)) {\n            if (condition.length === 0) {\n                return \"1=1\";\n            }\n            // In the future we should probably remove this entire condition\n            // but for now to prevent any breaking changes it exists.\n            if (condition.length === 1 && !alwaysWrap) {\n                return this.createWhereClausesExpression(condition);\n            }\n            return \"(\" + this.createWhereClausesExpression(condition) + \")\";\n        }\n        const { driver } = this.connection;\n        switch (condition.operator) {\n            case \"lessThan\":\n                return `${condition.parameters[0]} < ${condition.parameters[1]}`;\n            case \"lessThanOrEqual\":\n                return `${condition.parameters[0]} <= ${condition.parameters[1]}`;\n            case \"arrayContains\":\n                return `${condition.parameters[0]} @> ${condition.parameters[1]}`;\n            case \"jsonContains\":\n                return `${condition.parameters[0]} ::jsonb @> ${condition.parameters[1]}`;\n            case \"arrayContainedBy\":\n                return `${condition.parameters[0]} <@ ${condition.parameters[1]}`;\n            case \"arrayOverlap\":\n                return `${condition.parameters[0]} && ${condition.parameters[1]}`;\n            case \"moreThan\":\n                return `${condition.parameters[0]} > ${condition.parameters[1]}`;\n            case \"moreThanOrEqual\":\n                return `${condition.parameters[0]} >= ${condition.parameters[1]}`;\n            case \"notEqual\":\n                return `${condition.parameters[0]} != ${condition.parameters[1]}`;\n            case \"equal\":\n                return `${condition.parameters[0]} = ${condition.parameters[1]}`;\n            case \"ilike\":\n                if (driver.options.type === \"postgres\" ||\n                    driver.options.type === \"cockroachdb\") {\n                    return `${condition.parameters[0]} ILIKE ${condition.parameters[1]}`;\n                }\n                return `UPPER(${condition.parameters[0]}) LIKE UPPER(${condition.parameters[1]})`;\n            case \"like\":\n                return `${condition.parameters[0]} LIKE ${condition.parameters[1]}`;\n            case \"between\":\n                return `${condition.parameters[0]} BETWEEN ${condition.parameters[1]} AND ${condition.parameters[2]}`;\n            case \"in\":\n                if (condition.parameters.length <= 1) {\n                    return \"0=1\";\n                }\n                return `${condition.parameters[0]} IN (${condition.parameters\n                    .slice(1)\n                    .join(\", \")})`;\n            case \"any\":\n                if (driver.options.type === \"cockroachdb\") {\n                    return `${condition.parameters[0]}::STRING = ANY(${condition.parameters[1]}::STRING[])`;\n                }\n                return `${condition.parameters[0]} = ANY(${condition.parameters[1]})`;\n            case \"isNull\":\n                return `${condition.parameters[0]} IS NULL`;\n            case \"not\":\n                return `NOT(${this.createWhereConditionExpression(condition.condition)})`;\n            case \"brackets\":\n                return `${this.createWhereConditionExpression(condition.condition, true)}`;\n            case \"and\":\n                return \"(\" + condition.parameters.join(\" AND \") + \")\";\n            case \"or\":\n                return \"(\" + condition.parameters.join(\" OR \") + \")\";\n        }\n        throw new TypeError(`Unsupported FindOperator ${FindOperator.constructor.name}`);\n    }\n    createCteExpression() {\n        if (!this.hasCommonTableExpressions()) {\n            return \"\";\n        }\n        const databaseRequireRecusiveHint = this.connection.driver.cteCapabilities.requiresRecursiveHint;\n        const cteStrings = this.expressionMap.commonTableExpressions.map((cte) => {\n            const cteBodyExpression = typeof cte.queryBuilder === \"string\"\n                ? cte.queryBuilder\n                : cte.queryBuilder.getQuery();\n            if (typeof cte.queryBuilder !== \"string\") {\n                if (cte.queryBuilder.hasCommonTableExpressions()) {\n                    throw new TypeORMError(`Nested CTEs aren't supported (CTE: ${cte.alias})`);\n                }\n                if (!this.connection.driver.cteCapabilities.writable &&\n                    !InstanceChecker.isSelectQueryBuilder(cte.queryBuilder)) {\n                    throw new TypeORMError(`Only select queries are supported in CTEs in ${this.connection.options.type} (CTE: ${cte.alias})`);\n                }\n                this.setParameters(cte.queryBuilder.getParameters());\n            }\n            let cteHeader = this.escape(cte.alias);\n            if (cte.options.columnNames) {\n                const escapedColumnNames = cte.options.columnNames.map((column) => this.escape(column));\n                if (InstanceChecker.isSelectQueryBuilder(cte.queryBuilder)) {\n                    if (cte.queryBuilder.expressionMap.selects.length &&\n                        cte.options.columnNames.length !==\n                            cte.queryBuilder.expressionMap.selects.length) {\n                        throw new TypeORMError(`cte.options.columnNames length (${cte.options.columnNames.length}) doesn't match subquery select list length ${cte.queryBuilder.expressionMap.selects.length} (CTE: ${cte.alias})`);\n                    }\n                }\n                cteHeader += `(${escapedColumnNames.join(\", \")})`;\n            }\n            const recursiveClause = cte.options.recursive && databaseRequireRecusiveHint\n                ? \"RECURSIVE\"\n                : \"\";\n            let materializeClause = \"\";\n            if (this.connection.driver.cteCapabilities.materializedHint &&\n                cte.options.materialized !== undefined) {\n                materializeClause = cte.options.materialized\n                    ? \"MATERIALIZED\"\n                    : \"NOT MATERIALIZED\";\n            }\n            return [\n                recursiveClause,\n                cteHeader,\n                \"AS\",\n                materializeClause,\n                `(${cteBodyExpression})`,\n            ]\n                .filter(Boolean)\n                .join(\" \");\n        });\n        return \"WITH \" + cteStrings.join(\", \") + \" \";\n    }\n    /**\n     * Creates \"WHERE\" condition for an in-ids condition.\n     */\n    getWhereInIdsCondition(ids) {\n        const metadata = this.expressionMap.mainAlias.metadata;\n        const normalized = (Array.isArray(ids) ? ids : [ids]).map((id) => metadata.ensureEntityIdMap(id));\n        // using in(...ids) for single primary key entities\n        if (!metadata.hasMultiplePrimaryKeys) {\n            const primaryColumn = metadata.primaryColumns[0];\n            // getEntityValue will try to transform `In`, it is a bug\n            // todo: remove this transformer check after #2390 is fixed\n            // This also fails for embedded & relation, so until that is fixed skip it.\n            if (!primaryColumn.transformer &&\n                !primaryColumn.relationMetadata &&\n                !primaryColumn.embeddedMetadata) {\n                return {\n                    [primaryColumn.propertyName]: In(normalized.map((id) => primaryColumn.getEntityValue(id, false))),\n                };\n            }\n        }\n        return new Brackets((qb) => {\n            for (const data of normalized) {\n                qb.orWhere(new Brackets((qb) => qb.where(data)));\n            }\n        });\n    }\n    getExistsCondition(subQuery) {\n        const query = subQuery\n            .clone()\n            .orderBy()\n            .groupBy()\n            .offset(undefined)\n            .limit(undefined)\n            .skip(undefined)\n            .take(undefined)\n            .select(\"1\")\n            .setOption(\"disable-global-order\");\n        return [`EXISTS (${query.getQuery()})`, query.getParameters()];\n    }\n    findColumnsForPropertyPath(propertyPath) {\n        // Make a helper to iterate the entity & relations?\n        // Use that to set the correct alias?  Or the other way around?\n        // Start with the main alias with our property paths\n        let alias = this.expressionMap.mainAlias;\n        const root = [];\n        const propertyPathParts = propertyPath.split(\".\");\n        while (propertyPathParts.length > 1) {\n            const part = propertyPathParts[0];\n            if (!alias?.hasMetadata) {\n                // If there's no metadata, we're wasting our time\n                // and can't actually look any of this up.\n                break;\n            }\n            if (alias.metadata.hasEmbeddedWithPropertyPath(part)) {\n                // If this is an embedded then we should combine the two as part of our lookup.\n                // Instead of just breaking, we keep going with this in case there's an embedded/relation\n                // inside an embedded.\n                propertyPathParts.unshift(`${propertyPathParts.shift()}.${propertyPathParts.shift()}`);\n                continue;\n            }\n            if (alias.metadata.hasRelationWithPropertyPath(part)) {\n                // If this is a relation then we should find the aliases\n                // that match the relation & then continue further down\n                // the property path\n                const joinAttr = this.expressionMap.joinAttributes.find((joinAttr) => joinAttr.relationPropertyPath === part);\n                if (!joinAttr?.alias) {\n                    const fullRelationPath = root.length > 0 ? `${root.join(\".\")}.${part}` : part;\n                    throw new Error(`Cannot find alias for relation at ${fullRelationPath}`);\n                }\n                alias = joinAttr.alias;\n                root.push(...part.split(\".\"));\n                propertyPathParts.shift();\n                continue;\n            }\n            break;\n        }\n        if (!alias) {\n            throw new Error(`Cannot find alias for property ${propertyPath}`);\n        }\n        // Remaining parts are combined back and used to find the actual property path\n        const aliasPropertyPath = propertyPathParts.join(\".\");\n        const columns = alias.metadata.findColumnsWithPropertyPath(aliasPropertyPath);\n        if (!columns.length) {\n            throw new EntityPropertyNotFoundError(propertyPath, alias.metadata);\n        }\n        return [alias, root, columns];\n    }\n    /**\n     * Creates a property paths for a given ObjectLiteral.\n     */\n    createPropertyPath(metadata, entity, prefix = \"\") {\n        const paths = [];\n        for (const key of Object.keys(entity)) {\n            const path = prefix ? `${prefix}.${key}` : key;\n            // There's times where we don't actually want to traverse deeper.\n            // If the value is a `FindOperator`, or null, or not an object, then we don't, for example.\n            if (entity[key] === null ||\n                typeof entity[key] !== \"object\" ||\n                InstanceChecker.isFindOperator(entity[key])) {\n                paths.push(path);\n                continue;\n            }\n            if (metadata.hasEmbeddedWithPropertyPath(path)) {\n                const subPaths = this.createPropertyPath(metadata, entity[key], path);\n                paths.push(...subPaths);\n                continue;\n            }\n            if (metadata.hasRelationWithPropertyPath(path)) {\n                const relation = metadata.findRelationWithPropertyPath(path);\n                // There's also cases where we don't want to return back all of the properties.\n                // These handles the situation where someone passes the model & we don't need to make\n                // a HUGE `where` to uniquely look up the entity.\n                // In the case of a *-to-one, there's only ever one possible entity on the other side\n                // so if the join columns are all defined we can return just the relation itself\n                // because it will fetch only the join columns and do the lookup.\n                if (relation.relationType === \"one-to-one\" ||\n                    relation.relationType === \"many-to-one\") {\n                    const joinColumns = relation.joinColumns\n                        .map((j) => j.referencedColumn)\n                        .filter((j) => !!j);\n                    const hasAllJoinColumns = joinColumns.length > 0 &&\n                        joinColumns.every((column) => column.getEntityValue(entity[key], false));\n                    if (hasAllJoinColumns) {\n                        paths.push(path);\n                        continue;\n                    }\n                }\n                if (relation.relationType === \"one-to-many\" ||\n                    relation.relationType === \"many-to-many\") {\n                    throw new Error(`Cannot query across ${relation.relationType} for property ${path}`);\n                }\n                // For any other case, if the `entity[key]` contains all of the primary keys we can do a\n                // lookup via these.  We don't need to look up via any other values 'cause these are\n                // the unique primary keys.\n                // This handles the situation where someone passes the model & we don't need to make\n                // a HUGE where.\n                const primaryColumns = relation.inverseEntityMetadata.primaryColumns;\n                const hasAllPrimaryKeys = primaryColumns.length > 0 &&\n                    primaryColumns.every((column) => column.getEntityValue(entity[key], false));\n                if (hasAllPrimaryKeys) {\n                    const subPaths = primaryColumns.map((column) => `${path}.${column.propertyPath}`);\n                    paths.push(...subPaths);\n                    continue;\n                }\n                // If nothing else, just return every property that's being passed to us.\n                const subPaths = this.createPropertyPath(relation.inverseEntityMetadata, entity[key]).map((p) => `${path}.${p}`);\n                paths.push(...subPaths);\n                continue;\n            }\n            paths.push(path);\n        }\n        return paths;\n    }\n    *getPredicates(where) {\n        if (this.expressionMap.mainAlias.hasMetadata) {\n            const propertyPaths = this.createPropertyPath(this.expressionMap.mainAlias.metadata, where);\n            for (const propertyPath of propertyPaths) {\n                const [alias, aliasPropertyPath, columns] = this.findColumnsForPropertyPath(propertyPath);\n                for (const column of columns) {\n                    let containedWhere = where;\n                    for (const part of aliasPropertyPath) {\n                        if (!containedWhere || !(part in containedWhere)) {\n                            containedWhere = {};\n                            break;\n                        }\n                        containedWhere = containedWhere[part];\n                    }\n                    // Use the correct alias & the property path from the column\n                    const aliasPath = this.expressionMap\n                        .aliasNamePrefixingEnabled\n                        ? `${alias.name}.${column.propertyPath}`\n                        : column.propertyPath;\n                    const parameterValue = column.getEntityValue(containedWhere, true);\n                    yield [aliasPath, parameterValue];\n                }\n            }\n        }\n        else {\n            for (const key of Object.keys(where)) {\n                const parameterValue = where[key];\n                const aliasPath = this.expressionMap.aliasNamePrefixingEnabled\n                    ? `${this.alias}.${key}`\n                    : key;\n                yield [aliasPath, parameterValue];\n            }\n        }\n    }\n    getWherePredicateCondition(aliasPath, parameterValue) {\n        if (InstanceChecker.isFindOperator(parameterValue)) {\n            let parameters = [];\n            if (parameterValue.useParameter) {\n                if (parameterValue.objectLiteralParameters) {\n                    this.setParameters(parameterValue.objectLiteralParameters);\n                }\n                else if (parameterValue.multipleParameters) {\n                    for (const v of parameterValue.value) {\n                        parameters.push(this.createParameter(v));\n                    }\n                }\n                else {\n                    parameters.push(this.createParameter(parameterValue.value));\n                }\n            }\n            if (parameterValue.type === \"raw\") {\n                if (parameterValue.getSql) {\n                    return parameterValue.getSql(aliasPath);\n                }\n                else {\n                    return {\n                        operator: \"equal\",\n                        parameters: [aliasPath, parameterValue.value],\n                    };\n                }\n            }\n            else if (parameterValue.type === \"not\") {\n                if (parameterValue.child) {\n                    return {\n                        operator: parameterValue.type,\n                        condition: this.getWherePredicateCondition(aliasPath, parameterValue.child),\n                    };\n                }\n                else {\n                    return {\n                        operator: \"notEqual\",\n                        parameters: [aliasPath, ...parameters],\n                    };\n                }\n            }\n            else if (parameterValue.type === \"and\") {\n                const values = parameterValue.value;\n                return {\n                    operator: parameterValue.type,\n                    parameters: values.map((operator) => this.createWhereConditionExpression(this.getWherePredicateCondition(aliasPath, operator))),\n                };\n            }\n            else if (parameterValue.type === \"or\") {\n                const values = parameterValue.value;\n                return {\n                    operator: parameterValue.type,\n                    parameters: values.map((operator) => this.createWhereConditionExpression(this.getWherePredicateCondition(aliasPath, operator))),\n                };\n            }\n            else {\n                return {\n                    operator: parameterValue.type,\n                    parameters: [aliasPath, ...parameters],\n                };\n            }\n            // } else if (parameterValue === null) {\n            //     return {\n            //         operator: \"isNull\",\n            //         parameters: [\n            //             aliasPath,\n            //         ]\n            //     };\n        }\n        else {\n            return {\n                operator: \"equal\",\n                parameters: [aliasPath, this.createParameter(parameterValue)],\n            };\n        }\n    }\n    getWhereCondition(where) {\n        if (typeof where === \"string\") {\n            return where;\n        }\n        if (InstanceChecker.isBrackets(where)) {\n            const whereQueryBuilder = this.createQueryBuilder();\n            whereQueryBuilder.parentQueryBuilder = this;\n            whereQueryBuilder.expressionMap.mainAlias =\n                this.expressionMap.mainAlias;\n            whereQueryBuilder.expressionMap.aliasNamePrefixingEnabled =\n                this.expressionMap.aliasNamePrefixingEnabled;\n            whereQueryBuilder.expressionMap.parameters =\n                this.expressionMap.parameters;\n            whereQueryBuilder.expressionMap.nativeParameters =\n                this.expressionMap.nativeParameters;\n            whereQueryBuilder.expressionMap.wheres = [];\n            where.whereFactory(whereQueryBuilder);\n            return {\n                operator: InstanceChecker.isNotBrackets(where)\n                    ? \"not\"\n                    : \"brackets\",\n                condition: whereQueryBuilder.expressionMap.wheres,\n            };\n        }\n        if (typeof where === \"function\") {\n            return where(this);\n        }\n        const wheres = Array.isArray(where) ? where : [where];\n        const clauses = [];\n        for (const where of wheres) {\n            const conditions = [];\n            // Filter the conditions and set up the parameter values\n            for (const [aliasPath, parameterValue] of this.getPredicates(where)) {\n                conditions.push({\n                    type: \"and\",\n                    condition: this.getWherePredicateCondition(aliasPath, parameterValue),\n                });\n            }\n            clauses.push({ type: \"or\", condition: conditions });\n        }\n        if (clauses.length === 1) {\n            return clauses[0].condition;\n        }\n        return clauses;\n    }\n    /**\n     * Creates a query builder used to execute sql queries inside this query builder.\n     */\n    obtainQueryRunner() {\n        return this.queryRunner || this.connection.createQueryRunner();\n    }\n    hasCommonTableExpressions() {\n        return this.expressionMap.commonTableExpressions.length > 0;\n    }\n}\n/**\n * Contains all registered query builder classes.\n */\nQueryBuilder.queryBuilderRegistry = {};\n\n//# sourceMappingURL=QueryBuilder.js.map\n","/**\n * Result object returned by DeleteQueryBuilder execution.\n */\nexport class DeleteResult {\n    static from(queryResult) {\n        const result = new this();\n        result.raw = queryResult.records;\n        result.affected = queryResult.affected;\n        return result;\n    }\n}\n\n//# sourceMappingURL=DeleteResult.js.map\n","import { QueryBuilder } from \"./QueryBuilder\";\nimport { DeleteResult } from \"./result/DeleteResult\";\nimport { ReturningStatementNotSupportedError } from \"../error/ReturningStatementNotSupportedError\";\nimport { InstanceChecker } from \"../util/InstanceChecker\";\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nexport class DeleteQueryBuilder extends QueryBuilder {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(connectionOrQueryBuilder, queryRunner) {\n        super(connectionOrQueryBuilder, queryRunner);\n        this[\"@instanceof\"] = Symbol.for(\"DeleteQueryBuilder\");\n        this.expressionMap.aliasNamePrefixingEnabled = false;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated SQL query without parameters being replaced.\n     */\n    getQuery() {\n        let sql = this.createComment();\n        sql += this.createCteExpression();\n        sql += this.createDeleteExpression();\n        return this.replacePropertyNamesForTheWholeQuery(sql.trim());\n    }\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    async execute() {\n        const [sql, parameters] = this.getQueryAndParameters();\n        const queryRunner = this.obtainQueryRunner();\n        let transactionStartedByUs = false;\n        try {\n            // start transaction if it was enabled\n            if (this.expressionMap.useTransaction === true &&\n                queryRunner.isTransactionActive === false) {\n                await queryRunner.startTransaction();\n                transactionStartedByUs = true;\n            }\n            // call before deletion methods in listeners and subscribers\n            if (this.expressionMap.callListeners === true &&\n                this.expressionMap.mainAlias.hasMetadata) {\n                await queryRunner.broadcaster.broadcast(\"BeforeRemove\", this.expressionMap.mainAlias.metadata);\n            }\n            // execute query\n            const queryResult = await queryRunner.query(sql, parameters, true);\n            const deleteResult = DeleteResult.from(queryResult);\n            // call after deletion methods in listeners and subscribers\n            if (this.expressionMap.callListeners === true &&\n                this.expressionMap.mainAlias.hasMetadata) {\n                await queryRunner.broadcaster.broadcast(\"AfterRemove\", this.expressionMap.mainAlias.metadata);\n            }\n            // close transaction if we started it\n            if (transactionStartedByUs)\n                await queryRunner.commitTransaction();\n            return deleteResult;\n        }\n        catch (error) {\n            // rollback transaction if we started it\n            if (transactionStartedByUs) {\n                try {\n                    await queryRunner.rollbackTransaction();\n                }\n                catch (rollbackError) { }\n            }\n            throw error;\n        }\n        finally {\n            if (queryRunner !== this.queryRunner) {\n                // means we created our own query runner\n                await queryRunner.release();\n            }\n        }\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Specifies FROM which entity's table select/update/delete will be executed.\n     * Also sets a main string alias of the selection data.\n     */\n    from(entityTarget, aliasName) {\n        entityTarget = InstanceChecker.isEntitySchema(entityTarget)\n            ? entityTarget.options.name\n            : entityTarget;\n        const mainAlias = this.createFromAlias(entityTarget, aliasName);\n        this.expressionMap.setMainAlias(mainAlias);\n        return this;\n    }\n    /**\n     * Sets WHERE condition in the query builder.\n     * If you had previously WHERE expression defined,\n     * calling this function will override previously set WHERE conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    where(where, parameters) {\n        this.expressionMap.wheres = []; // don't move this block below since computeWhereParameter can add where expressions\n        const condition = this.getWhereCondition(where);\n        if (condition)\n            this.expressionMap.wheres = [\n                { type: \"simple\", condition: condition },\n            ];\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Adds new AND WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    andWhere(where, parameters) {\n        this.expressionMap.wheres.push({\n            type: \"and\",\n            condition: this.getWhereCondition(where),\n        });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Adds new OR WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    orWhere(where, parameters) {\n        this.expressionMap.wheres.push({\n            type: \"or\",\n            condition: this.getWhereCondition(where),\n        });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Sets WHERE condition in the query builder with a condition for the given ids.\n     * If you had previously WHERE expression defined,\n     * calling this function will override previously set WHERE conditions.\n     */\n    whereInIds(ids) {\n        return this.where(this.getWhereInIdsCondition(ids));\n    }\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    andWhereInIds(ids) {\n        return this.andWhere(this.getWhereInIdsCondition(ids));\n    }\n    /**\n     * Adds new OR WHERE with conditions for the given ids.\n     */\n    orWhereInIds(ids) {\n        return this.orWhere(this.getWhereInIdsCondition(ids));\n    }\n    /**\n     * Optional returning/output clause.\n     */\n    output(output) {\n        return this.returning(output);\n    }\n    /**\n     * Optional returning/output clause.\n     */\n    returning(returning) {\n        // not all databases support returning/output cause\n        if (!this.connection.driver.isReturningSqlSupported(\"delete\")) {\n            throw new ReturningStatementNotSupportedError();\n        }\n        this.expressionMap.returning = returning;\n        return this;\n    }\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates DELETE express used to perform query.\n     */\n    createDeleteExpression() {\n        const tableName = this.getTableName(this.getMainTableName());\n        const whereExpression = this.createWhereExpression();\n        const returningExpression = this.createReturningExpression(\"delete\");\n        if (returningExpression === \"\") {\n            return `DELETE FROM ${tableName}${whereExpression}`;\n        }\n        if (this.connection.driver.options.type === \"mssql\") {\n            return `DELETE FROM ${tableName} OUTPUT ${returningExpression}${whereExpression}`;\n        }\n        return `DELETE FROM ${tableName}${whereExpression} RETURNING ${returningExpression}`;\n    }\n}\n\n//# sourceMappingURL=DeleteQueryBuilder.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","/**\n * Broadcaster execution result - promises executed by operations and number of executed listeners and subscribers.\n */\nexport class BroadcasterResult {\n    constructor() {\n        /**\n         * Number of executed listeners and subscribers.\n         */\n        this.count = 0;\n        /**\n         * Promises returned by listeners and subscribers which needs to be awaited.\n         */\n        this.promises = [];\n    }\n    /**\n     * Wait for all promises to settle\n     */\n    async wait() {\n        if (this.promises.length > 0) {\n            await Promise.all(this.promises);\n        }\n        return this;\n    }\n}\n\n//# sourceMappingURL=BroadcasterResult.js.map\n","/**\n * Result object returned by InsertQueryBuilder execution.\n */\nexport class InsertResult {\n    constructor() {\n        /**\n         * Contains inserted entity id.\n         * Has entity-like structure (not just column database name and values).\n         */\n        this.identifiers = [];\n        /**\n         * Generated values returned by a database.\n         * Has entity-like structure (not just column database name and values).\n         */\n        this.generatedMaps = [];\n    }\n    static from(queryResult) {\n        const result = new this();\n        result.raw = queryResult.raw;\n        return result;\n    }\n}\n\n//# sourceMappingURL=InsertResult.js.map\n","import { TypeORMError } from \"../error\";\n/**\n * Updates entity with returning results in the entity insert and update operations.\n */\nexport class ReturningResultsEntityUpdator {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(queryRunner, expressionMap) {\n        this.queryRunner = queryRunner;\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Updates entities with a special columns after updation query execution.\n     */\n    async update(updateResult, entities) {\n        const metadata = this.expressionMap.mainAlias.metadata;\n        await Promise.all(entities.map(async (entity, entityIndex) => {\n            // if database supports returning/output statement then we already should have updating values in the raw data returned by insert query\n            if (this.queryRunner.connection.driver.isReturningSqlSupported(\"update\")) {\n                if (this.queryRunner.connection.driver.options.type ===\n                    \"oracle\" &&\n                    Array.isArray(updateResult.raw) &&\n                    this.expressionMap.extraReturningColumns.length > 0) {\n                    updateResult.raw = updateResult.raw.reduce((newRaw, rawItem, rawItemIndex) => {\n                        newRaw[this.expressionMap.extraReturningColumns[rawItemIndex].databaseName] = rawItem[0];\n                        return newRaw;\n                    }, {});\n                }\n                const result = Array.isArray(updateResult.raw)\n                    ? updateResult.raw[entityIndex]\n                    : updateResult.raw;\n                const returningColumns = this.queryRunner.connection.driver.createGeneratedMap(metadata, result);\n                if (returningColumns) {\n                    this.queryRunner.manager.merge(metadata.target, entity, returningColumns);\n                    updateResult.generatedMaps.push(returningColumns);\n                }\n            }\n            else {\n                // for driver which do not support returning/output statement we need to perform separate query and load what we need\n                const updationColumns = this.expressionMap.extraReturningColumns;\n                if (updationColumns.length > 0) {\n                    // get entity id by which we will get needed data\n                    const entityId = this.expressionMap.mainAlias.metadata.getEntityIdMap(entity);\n                    if (!entityId)\n                        throw new TypeORMError(`Cannot update entity because entity id is not set in the entity.`);\n                    // execute query to get needed data\n                    const loadedReturningColumns = (await this.queryRunner.manager\n                        .createQueryBuilder()\n                        .select(metadata.primaryColumns.map((column) => metadata.targetName +\n                        \".\" +\n                        column.propertyPath))\n                        .addSelect(updationColumns.map((column) => metadata.targetName +\n                        \".\" +\n                        column.propertyPath))\n                        .from(metadata.target, metadata.targetName)\n                        .where(entityId)\n                        .withDeleted()\n                        .setOption(\"create-pojo\") // use POJO because created object can contain default values, e.g. property = null and those properties might be overridden by merge process\n                        .getOne());\n                    if (loadedReturningColumns) {\n                        this.queryRunner.manager.merge(metadata.target, entity, loadedReturningColumns);\n                        updateResult.generatedMaps.push(loadedReturningColumns);\n                    }\n                }\n            }\n        }));\n    }\n    /**\n     * Updates entities with a special columns after insertion query execution.\n     */\n    async insert(insertResult, entities) {\n        const metadata = this.expressionMap.mainAlias.metadata;\n        let insertionColumns = metadata.getInsertionReturningColumns();\n        // to prevent extra select SQL execution for databases not supporting RETURNING\n        // in the case if we have generated column and it's value returned by underlying driver\n        // we remove this column from the insertionColumns list\n        const needToCheckGenerated = this.queryRunner.connection.driver.isReturningSqlSupported(\"insert\");\n        insertionColumns = insertionColumns.filter((column) => {\n            if (!column.isGenerated)\n                return true;\n            return needToCheckGenerated === true;\n        });\n        const generatedMaps = entities.map((entity, entityIndex) => {\n            if (this.queryRunner.connection.driver.options.type === \"oracle\" &&\n                Array.isArray(insertResult.raw) &&\n                this.expressionMap.extraReturningColumns.length > 0) {\n                insertResult.raw = insertResult.raw.reduce((newRaw, rawItem, rawItemIndex) => {\n                    newRaw[this.expressionMap.extraReturningColumns[rawItemIndex].databaseName] = rawItem[0];\n                    return newRaw;\n                }, {});\n            }\n            // get all values generated by a database for us\n            const result = Array.isArray(insertResult.raw)\n                ? insertResult.raw[entityIndex]\n                : insertResult.raw;\n            const generatedMap = this.queryRunner.connection.driver.createGeneratedMap(metadata, result, entityIndex, entities.length) || {};\n            if (entityIndex in this.expressionMap.locallyGenerated) {\n                this.queryRunner.manager.merge(metadata.target, generatedMap, this.expressionMap.locallyGenerated[entityIndex]);\n            }\n            this.queryRunner.manager.merge(metadata.target, entity, generatedMap);\n            return generatedMap;\n        });\n        // for postgres and mssql we use returning/output statement to get values of inserted default and generated values\n        // for other drivers we have to re-select this data from the database\n        if (insertionColumns.length > 0 &&\n            !this.queryRunner.connection.driver.isReturningSqlSupported(\"insert\")) {\n            const entityIds = entities.map((entity) => {\n                const entityId = metadata.getEntityIdMap(entity);\n                // We have to check for an empty `entityId` - if we don't, the query against the database\n                // effectively drops the `where` clause entirely and the first record will be returned -\n                // not what we want at all.\n                if (!entityId)\n                    throw new TypeORMError(`Cannot update entity because entity id is not set in the entity.`);\n                return entityId;\n            });\n            // to select just inserted entities we need a criteria to select by.\n            // for newly inserted entities in drivers which do not support returning statement\n            // row identifier can only be an increment column\n            // (since its the only thing that can be generated by those databases)\n            // or (and) other primary key which is defined by a user and inserted value has it\n            const returningResult = await this.queryRunner.manager\n                .createQueryBuilder()\n                .select(metadata.primaryColumns.map((column) => metadata.targetName + \".\" + column.propertyPath))\n                .addSelect(insertionColumns.map((column) => metadata.targetName + \".\" + column.propertyPath))\n                .from(metadata.target, metadata.targetName)\n                .where(entityIds)\n                .setOption(\"create-pojo\") // use POJO because created object can contain default values, e.g. property = null and those properties might be overridden by merge process\n                .getMany();\n            entities.forEach((entity, entityIndex) => {\n                this.queryRunner.manager.merge(metadata.target, generatedMaps[entityIndex], returningResult[entityIndex]);\n                this.queryRunner.manager.merge(metadata.target, entity, returningResult[entityIndex]);\n            });\n        }\n        entities.forEach((entity, entityIndex) => {\n            const entityId = metadata.getEntityIdMap(entity);\n            insertResult.identifiers.push(entityId);\n            insertResult.generatedMaps.push(generatedMaps[entityIndex]);\n        });\n    }\n    /**\n     * Columns we need to be returned from the database when we update entity.\n     */\n    getUpdationReturningColumns() {\n        return this.expressionMap.mainAlias.metadata.columns.filter((column) => {\n            return (column.asExpression !== undefined ||\n                column.isUpdateDate ||\n                column.isVersion);\n        });\n    }\n    /**\n     * Columns we need to be returned from the database when we soft delete and restore entity.\n     */\n    getSoftDeletionReturningColumns() {\n        return this.expressionMap.mainAlias.metadata.columns.filter((column) => {\n            return (column.asExpression !== undefined ||\n                column.isUpdateDate ||\n                column.isVersion ||\n                column.isDeleteDate);\n        });\n    }\n}\n\n//# sourceMappingURL=ReturningResultsEntityUpdator.js.map\n","import { v4 as uuidv4 } from \"uuid\";\nimport { DriverUtils } from \"../driver/DriverUtils\";\nimport { TypeORMError } from \"../error\";\nimport { InsertValuesMissingError } from \"../error/InsertValuesMissingError\";\nimport { ReturningStatementNotSupportedError } from \"../error/ReturningStatementNotSupportedError\";\nimport { BroadcasterResult } from \"../subscriber/BroadcasterResult\";\nimport { InstanceChecker } from \"../util/InstanceChecker\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\nimport { QueryBuilder } from \"./QueryBuilder\";\nimport { InsertResult } from \"./result/InsertResult\";\nimport { ReturningResultsEntityUpdator } from \"./ReturningResultsEntityUpdator\";\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nexport class InsertQueryBuilder extends QueryBuilder {\n    constructor() {\n        super(...arguments);\n        this[\"@instanceof\"] = Symbol.for(\"InsertQueryBuilder\");\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated SQL query without parameters being replaced.\n     */\n    getQuery() {\n        let sql = this.createComment();\n        sql += this.createCteExpression();\n        sql += this.createInsertExpression();\n        return this.replacePropertyNamesForTheWholeQuery(sql.trim());\n    }\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    async execute() {\n        // console.time(\".value sets\");\n        const valueSets = this.getValueSets();\n        // console.timeEnd(\".value sets\");\n        // If user passed empty array of entities then we don't need to do\n        // anything.\n        //\n        // Fixes GitHub issues #3111 and #5734. If we were to let this through\n        // we would run into problems downstream, like subscribers getting\n        // invoked with the empty array where they expect an entity, and SQL\n        // queries with an empty VALUES clause.\n        if (valueSets.length === 0)\n            return new InsertResult();\n        // console.time(\"QueryBuilder.execute\");\n        // console.time(\".database stuff\");\n        const queryRunner = this.obtainQueryRunner();\n        let transactionStartedByUs = false;\n        try {\n            // start transaction if it was enabled\n            if (this.expressionMap.useTransaction === true &&\n                queryRunner.isTransactionActive === false) {\n                await queryRunner.startTransaction();\n                transactionStartedByUs = true;\n            }\n            // console.timeEnd(\".database stuff\");\n            // call before insertion methods in listeners and subscribers\n            if (this.expressionMap.callListeners === true &&\n                this.expressionMap.mainAlias.hasMetadata) {\n                const broadcastResult = new BroadcasterResult();\n                valueSets.forEach((valueSet) => {\n                    queryRunner.broadcaster.broadcastBeforeInsertEvent(broadcastResult, this.expressionMap.mainAlias.metadata, valueSet);\n                });\n                await broadcastResult.wait();\n            }\n            let declareSql = null;\n            let selectOutputSql = null;\n            // if update entity mode is enabled we may need extra columns for the returning statement\n            // console.time(\".prepare returning statement\");\n            const returningResultsEntityUpdator = new ReturningResultsEntityUpdator(queryRunner, this.expressionMap);\n            const returningColumns = [];\n            if (Array.isArray(this.expressionMap.returning) &&\n                this.expressionMap.mainAlias.hasMetadata) {\n                for (const columnPath of this.expressionMap.returning) {\n                    returningColumns.push(...this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(columnPath));\n                }\n            }\n            if (this.expressionMap.updateEntity === true &&\n                this.expressionMap.mainAlias.hasMetadata) {\n                if (!(valueSets.length > 1 &&\n                    this.connection.driver.options.type === \"oracle\")) {\n                    this.expressionMap.extraReturningColumns =\n                        this.expressionMap.mainAlias.metadata.getInsertionReturningColumns();\n                }\n                returningColumns.push(...this.expressionMap.extraReturningColumns.filter((c) => !returningColumns.includes(c)));\n            }\n            if (returningColumns.length > 0 &&\n                this.connection.driver.options.type === \"mssql\") {\n                declareSql = this.connection.driver.buildTableVariableDeclaration(\"@OutputTable\", returningColumns);\n                selectOutputSql = `SELECT * FROM @OutputTable`;\n            }\n            // console.timeEnd(\".prepare returning statement\");\n            // execute query\n            // console.time(\".getting query and parameters\");\n            const [insertSql, parameters] = this.getQueryAndParameters();\n            // console.timeEnd(\".getting query and parameters\");\n            // console.time(\".query execution by database\");\n            const statements = [declareSql, insertSql, selectOutputSql];\n            const sql = statements.filter((s) => s != null).join(\";\\n\\n\");\n            const queryResult = await queryRunner.query(sql, parameters, true);\n            const insertResult = InsertResult.from(queryResult);\n            // console.timeEnd(\".query execution by database\");\n            // load returning results and set them to the entity if entity updation is enabled\n            if (this.expressionMap.updateEntity === true &&\n                this.expressionMap.mainAlias.hasMetadata) {\n                // console.time(\".updating entity\");\n                await returningResultsEntityUpdator.insert(insertResult, valueSets);\n                // console.timeEnd(\".updating entity\");\n            }\n            // call after insertion methods in listeners and subscribers\n            if (this.expressionMap.callListeners === true &&\n                this.expressionMap.mainAlias.hasMetadata) {\n                const broadcastResult = new BroadcasterResult();\n                valueSets.forEach((valueSet) => {\n                    queryRunner.broadcaster.broadcastAfterInsertEvent(broadcastResult, this.expressionMap.mainAlias.metadata, valueSet);\n                });\n                await broadcastResult.wait();\n            }\n            // close transaction if we started it\n            // console.time(\".commit\");\n            if (transactionStartedByUs) {\n                await queryRunner.commitTransaction();\n            }\n            // console.timeEnd(\".commit\");\n            return insertResult;\n        }\n        catch (error) {\n            // rollback transaction if we started it\n            if (transactionStartedByUs) {\n                try {\n                    await queryRunner.rollbackTransaction();\n                }\n                catch (rollbackError) { }\n            }\n            throw error;\n        }\n        finally {\n            // console.time(\".releasing connection\");\n            if (queryRunner !== this.queryRunner) {\n                // means we created our own query runner\n                await queryRunner.release();\n            }\n            // console.timeEnd(\".releasing connection\");\n            // console.timeEnd(\"QueryBuilder.execute\");\n        }\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Specifies INTO which entity's table insertion will be executed.\n     */\n    into(entityTarget, columns) {\n        entityTarget = InstanceChecker.isEntitySchema(entityTarget)\n            ? entityTarget.options.name\n            : entityTarget;\n        const mainAlias = this.createFromAlias(entityTarget);\n        this.expressionMap.setMainAlias(mainAlias);\n        this.expressionMap.insertColumns = columns || [];\n        return this;\n    }\n    /**\n     * Values needs to be inserted into table.\n     */\n    values(values) {\n        this.expressionMap.valuesSet = values;\n        return this;\n    }\n    /**\n     * Optional returning/output clause.\n     */\n    output(output) {\n        return this.returning(output);\n    }\n    /**\n     * Optional returning/output clause.\n     */\n    returning(returning) {\n        // not all databases support returning/output cause\n        if (!this.connection.driver.isReturningSqlSupported(\"insert\")) {\n            throw new ReturningStatementNotSupportedError();\n        }\n        this.expressionMap.returning = returning;\n        return this;\n    }\n    /**\n     * Indicates if entity must be updated after insertion operations.\n     * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n     * Enabled by default.\n     */\n    updateEntity(enabled) {\n        this.expressionMap.updateEntity = enabled;\n        return this;\n    }\n    /**\n     * Adds additional ON CONFLICT statement supported in postgres and cockroach.\n     *\n     * @deprecated Use `orIgnore` or `orUpdate`\n     */\n    onConflict(statement) {\n        this.expressionMap.onConflict = statement;\n        return this;\n    }\n    /**\n     * Adds additional ignore statement supported in databases.\n     */\n    orIgnore(statement = true) {\n        this.expressionMap.onIgnore = !!statement;\n        return this;\n    }\n    /**\n     * Adds additional update statement supported in databases.\n     */\n    orUpdate(statementOrOverwrite, conflictTarget, orUpdateOptions) {\n        if (!Array.isArray(statementOrOverwrite)) {\n            this.expressionMap.onUpdate = {\n                conflict: statementOrOverwrite?.conflict_target,\n                columns: statementOrOverwrite?.columns,\n                overwrite: statementOrOverwrite?.overwrite,\n                skipUpdateIfNoValuesChanged: orUpdateOptions?.skipUpdateIfNoValuesChanged,\n                upsertType: orUpdateOptions?.upsertType,\n            };\n            return this;\n        }\n        this.expressionMap.onUpdate = {\n            overwrite: statementOrOverwrite,\n            conflict: conflictTarget,\n            skipUpdateIfNoValuesChanged: orUpdateOptions?.skipUpdateIfNoValuesChanged,\n            indexPredicate: orUpdateOptions?.indexPredicate,\n            upsertType: orUpdateOptions?.upsertType,\n        };\n        return this;\n    }\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates INSERT express used to perform insert query.\n     */\n    createInsertExpression() {\n        const tableName = this.getTableName(this.getMainTableName());\n        const valuesExpression = this.createValuesExpression(); // its important to get values before returning expression because oracle rely on native parameters and ordering of them is important\n        const returningExpression = this.connection.driver.options.type === \"oracle\" &&\n            this.getValueSets().length > 1\n            ? null\n            : this.createReturningExpression(\"insert\"); // oracle doesnt support returning with multi-row insert\n        const columnsExpression = this.createColumnNamesExpression();\n        let query = \"INSERT \";\n        if (this.expressionMap.onUpdate?.upsertType === \"primary-key\") {\n            query = \"UPSERT \";\n        }\n        if (DriverUtils.isMySQLFamily(this.connection.driver) ||\n            this.connection.driver.options.type === \"aurora-mysql\") {\n            query += `${this.expressionMap.onIgnore ? \" IGNORE \" : \"\"}`;\n        }\n        query += `INTO ${tableName}`;\n        if (this.alias !== this.getMainTableName() &&\n            DriverUtils.isPostgresFamily(this.connection.driver)) {\n            query += ` AS \"${this.alias}\"`;\n        }\n        // add columns expression\n        if (columnsExpression) {\n            query += `(${columnsExpression})`;\n        }\n        else {\n            if (!valuesExpression &&\n                (DriverUtils.isMySQLFamily(this.connection.driver) ||\n                    this.connection.driver.options.type === \"aurora-mysql\"))\n                // special syntax for mysql DEFAULT VALUES insertion\n                query += \"()\";\n        }\n        // add OUTPUT expression\n        if (returningExpression &&\n            this.connection.driver.options.type === \"mssql\") {\n            query += ` OUTPUT ${returningExpression}`;\n        }\n        // add VALUES expression\n        if (valuesExpression) {\n            if ((this.connection.driver.options.type === \"oracle\" ||\n                this.connection.driver.options.type === \"sap\") &&\n                this.getValueSets().length > 1) {\n                query += ` ${valuesExpression}`;\n            }\n            else {\n                query += ` VALUES ${valuesExpression}`;\n            }\n        }\n        else {\n            if (DriverUtils.isMySQLFamily(this.connection.driver) ||\n                this.connection.driver.options.type === \"aurora-mysql\") {\n                // special syntax for mysql DEFAULT VALUES insertion\n                query += \" VALUES ()\";\n            }\n            else {\n                query += ` DEFAULT VALUES`;\n            }\n        }\n        if (this.expressionMap.onUpdate?.upsertType !== \"primary-key\") {\n            if (this.connection.driver.supportedUpsertTypes.includes(\"on-conflict-do-update\")) {\n                if (this.expressionMap.onIgnore) {\n                    query += \" ON CONFLICT DO NOTHING \";\n                }\n                else if (this.expressionMap.onConflict) {\n                    query += ` ON CONFLICT ${this.expressionMap.onConflict} `;\n                }\n                else if (this.expressionMap.onUpdate) {\n                    const { overwrite, columns, conflict, skipUpdateIfNoValuesChanged, indexPredicate, } = this.expressionMap.onUpdate;\n                    let conflictTarget = \"ON CONFLICT\";\n                    if (Array.isArray(conflict)) {\n                        conflictTarget += ` ( ${conflict\n                            .map((column) => this.escape(column))\n                            .join(\", \")} )`;\n                        if (indexPredicate &&\n                            !DriverUtils.isPostgresFamily(this.connection.driver)) {\n                            throw new TypeORMError(`indexPredicate option is not supported by the current database driver`);\n                        }\n                        if (indexPredicate &&\n                            DriverUtils.isPostgresFamily(this.connection.driver)) {\n                            conflictTarget += ` WHERE ( ${indexPredicate} )`;\n                        }\n                    }\n                    else if (conflict) {\n                        conflictTarget += ` ON CONSTRAINT ${this.escape(conflict)}`;\n                    }\n                    const updatePart = [];\n                    if (Array.isArray(overwrite)) {\n                        updatePart.push(...overwrite.map((column) => `${this.escape(column)} = EXCLUDED.${this.escape(column)}`));\n                    }\n                    else if (columns) {\n                        updatePart.push(...columns.map((column) => `${this.escape(column)} = :${column}`));\n                    }\n                    if (updatePart.length > 0) {\n                        query += ` ${conflictTarget} DO UPDATE SET `;\n                        updatePart.push(...this.expressionMap\n                            .mainAlias.metadata.columns.filter((column) => column.isUpdateDate &&\n                            !overwrite?.includes(column.databaseName) &&\n                            !((this.connection.driver.options\n                                .type === \"oracle\" &&\n                                this.getValueSets().length >\n                                    1) ||\n                                DriverUtils.isSQLiteFamily(this.connection.driver) ||\n                                this.connection.driver.options\n                                    .type === \"sap\" ||\n                                this.connection.driver.options\n                                    .type === \"spanner\"))\n                            .map((column) => `${this.escape(column.databaseName)} = DEFAULT`));\n                        query += updatePart.join(\", \");\n                        query += \" \";\n                    }\n                    if (Array.isArray(overwrite) &&\n                        skipUpdateIfNoValuesChanged &&\n                        DriverUtils.isPostgresFamily(this.connection.driver)) {\n                        query += ` WHERE (`;\n                        query += overwrite\n                            .map((column) => `${tableName}.${this.escape(column)} IS DISTINCT FROM EXCLUDED.${this.escape(column)}`)\n                            .join(\" OR \");\n                        query += \") \";\n                    }\n                }\n            }\n            else if (this.connection.driver.supportedUpsertTypes.includes(\"on-duplicate-key-update\")) {\n                if (this.expressionMap.onUpdate) {\n                    const { overwrite, columns } = this.expressionMap.onUpdate;\n                    if (Array.isArray(overwrite)) {\n                        query += \" ON DUPLICATE KEY UPDATE \";\n                        query += overwrite\n                            .map((column) => `${this.escape(column)} = VALUES(${this.escape(column)})`)\n                            .join(\", \");\n                        query += \" \";\n                    }\n                    else if (Array.isArray(columns)) {\n                        query += \" ON DUPLICATE KEY UPDATE \";\n                        query += columns\n                            .map((column) => `${this.escape(column)} = :${column}`)\n                            .join(\", \");\n                        query += \" \";\n                    }\n                }\n            }\n            else {\n                if (this.expressionMap.onUpdate) {\n                    throw new TypeORMError(`onUpdate is not supported by the current database driver`);\n                }\n            }\n        }\n        // add RETURNING expression\n        if (returningExpression &&\n            (DriverUtils.isPostgresFamily(this.connection.driver) ||\n                this.connection.driver.options.type === \"oracle\" ||\n                this.connection.driver.options.type === \"cockroachdb\" ||\n                DriverUtils.isMySQLFamily(this.connection.driver))) {\n            query += ` RETURNING ${returningExpression}`;\n        }\n        // Inserting a specific value for an auto-increment primary key in mssql requires enabling IDENTITY_INSERT\n        // IDENTITY_INSERT can only be enabled for tables where there is an IDENTITY column and only if there is a value to be inserted (i.e. supplying DEFAULT is prohibited if IDENTITY_INSERT is enabled)\n        if (this.connection.driver.options.type === \"mssql\" &&\n            this.expressionMap.mainAlias.hasMetadata &&\n            this.expressionMap\n                .mainAlias.metadata.columns.filter((column) => this.expressionMap.insertColumns.length > 0\n                ? this.expressionMap.insertColumns.indexOf(column.propertyPath) !== -1\n                : column.isInsert)\n                .some((column) => this.isOverridingAutoIncrementBehavior(column))) {\n            query = `SET IDENTITY_INSERT ${tableName} ON; ${query}; SET IDENTITY_INSERT ${tableName} OFF`;\n        }\n        return query;\n    }\n    /**\n     * Gets list of columns where values must be inserted to.\n     */\n    getInsertedColumns() {\n        if (!this.expressionMap.mainAlias.hasMetadata)\n            return [];\n        return this.expressionMap.mainAlias.metadata.columns.filter((column) => {\n            // if user specified list of columns he wants to insert to, then we filter only them\n            if (this.expressionMap.insertColumns.length)\n                return (this.expressionMap.insertColumns.indexOf(column.propertyPath) !== -1);\n            // skip columns the user doesn't want included by default\n            if (!column.isInsert) {\n                return false;\n            }\n            // if user did not specified such list then return all columns except auto-increment one\n            // for Oracle we return auto-increment column as well because Oracle does not support DEFAULT VALUES expression\n            if (column.isGenerated &&\n                column.generationStrategy === \"increment\" &&\n                !(this.connection.driver.options.type === \"spanner\") &&\n                !(this.connection.driver.options.type === \"oracle\") &&\n                !DriverUtils.isSQLiteFamily(this.connection.driver) &&\n                !DriverUtils.isMySQLFamily(this.connection.driver) &&\n                !(this.connection.driver.options.type === \"aurora-mysql\") &&\n                !(this.connection.driver.options.type === \"mssql\" &&\n                    this.isOverridingAutoIncrementBehavior(column)))\n                return false;\n            return true;\n        });\n    }\n    /**\n     * Creates a columns string where values must be inserted to for INSERT INTO expression.\n     */\n    createColumnNamesExpression() {\n        const columns = this.getInsertedColumns();\n        if (columns.length > 0)\n            return columns\n                .map((column) => this.escape(column.databaseName))\n                .join(\", \");\n        // in the case if there are no insert columns specified and table without metadata used\n        // we get columns from the inserted value map, in the case if only one inserted map is specified\n        if (!this.expressionMap.mainAlias.hasMetadata &&\n            !this.expressionMap.insertColumns.length) {\n            const valueSets = this.getValueSets();\n            if (valueSets.length === 1)\n                return Object.keys(valueSets[0])\n                    .map((columnName) => this.escape(columnName))\n                    .join(\", \");\n        }\n        // get a table name and all column database names\n        return this.expressionMap.insertColumns\n            .map((columnName) => this.escape(columnName))\n            .join(\", \");\n    }\n    /**\n     * Creates list of values needs to be inserted in the VALUES expression.\n     */\n    createValuesExpression() {\n        const valueSets = this.getValueSets();\n        const columns = this.getInsertedColumns();\n        // if column metadatas are given then apply all necessary operations with values\n        if (columns.length > 0) {\n            let expression = \"\";\n            valueSets.forEach((valueSet, valueSetIndex) => {\n                columns.forEach((column, columnIndex) => {\n                    if (columnIndex === 0) {\n                        if (this.connection.driver.options.type === \"oracle\" &&\n                            valueSets.length > 1) {\n                            expression += \" SELECT \";\n                        }\n                        else if (this.connection.driver.options.type === \"sap\" &&\n                            valueSets.length > 1) {\n                            expression += \" SELECT \";\n                        }\n                        else {\n                            expression += \"(\";\n                        }\n                    }\n                    // extract real value from the entity\n                    let value = column.getEntityValue(valueSet);\n                    // if column is relational and value is an object then get real referenced column value from this object\n                    // for example column value is { question: { id: 1 } }, value will be equal to { id: 1 }\n                    // and we extract \"1\" from this object\n                    /*if (column.referencedColumn && value instanceof Object && !(typeof value === \"function\")) { // todo: check if we still need it since getEntityValue already has similar code\n                        value = column.referencedColumn.getEntityValue(value);\n                    }*/\n                    if (!(typeof value === \"function\")) {\n                        // make sure our value is normalized by a driver\n                        value = this.connection.driver.preparePersistentValue(value, column);\n                    }\n                    // newly inserted entities always have a version equal to 1 (first version)\n                    // also, user-specified version must be empty\n                    if (column.isVersion && value === undefined) {\n                        expression += \"1\";\n                        // } else if (column.isNestedSetLeft) {\n                        //     const tableName = this.connection.driver.escape(column.entityMetadata.tablePath);\n                        //     const rightColumnName = this.connection.driver.escape(column.entityMetadata.nestedSetRightColumn!.databaseName);\n                        //     const subQuery = `(SELECT c.max + 1 FROM (SELECT MAX(${rightColumnName}) as max from ${tableName}) c)`;\n                        //     expression += subQuery;\n                        //\n                        // } else if (column.isNestedSetRight) {\n                        //     const tableName = this.connection.driver.escape(column.entityMetadata.tablePath);\n                        //     const rightColumnName = this.connection.driver.escape(column.entityMetadata.nestedSetRightColumn!.databaseName);\n                        //     const subQuery = `(SELECT c.max + 2 FROM (SELECT MAX(${rightColumnName}) as max from ${tableName}) c)`;\n                        //     expression += subQuery;\n                    }\n                    else if (column.isDiscriminator) {\n                        expression += this.createParameter(this.expressionMap.mainAlias.metadata\n                            .discriminatorValue);\n                        // return \"1\";\n                        // for create and update dates we insert current date\n                        // no, we don't do it because this constant is already in \"default\" value of the column\n                        // with extended timestamp functionality, like CURRENT_TIMESTAMP(6) for example\n                        // } else if (column.isCreateDate || column.isUpdateDate) {\n                        //     return \"CURRENT_TIMESTAMP\";\n                        // if column is generated uuid and database does not support its generation and custom generated value was not provided by a user - we generate a new uuid value for insertion\n                    }\n                    else if (column.isGenerated &&\n                        column.generationStrategy === \"uuid\" &&\n                        !this.connection.driver.isUUIDGenerationSupported() &&\n                        value === undefined) {\n                        value = uuidv4();\n                        expression += this.createParameter(value);\n                        if (!(valueSetIndex in\n                            this.expressionMap.locallyGenerated)) {\n                            this.expressionMap.locallyGenerated[valueSetIndex] =\n                                {};\n                        }\n                        column.setEntityValue(this.expressionMap.locallyGenerated[valueSetIndex], value);\n                        // if value for this column was not provided then insert default value\n                    }\n                    else if (value === undefined) {\n                        if ((this.connection.driver.options.type === \"oracle\" &&\n                            valueSets.length > 1) ||\n                            DriverUtils.isSQLiteFamily(this.connection.driver) ||\n                            this.connection.driver.options.type === \"sap\" ||\n                            this.connection.driver.options.type === \"spanner\") {\n                            // unfortunately sqlite does not support DEFAULT expression in INSERT queries\n                            if (column.default !== undefined &&\n                                column.default !== null) {\n                                // try to use default defined in the column\n                                expression +=\n                                    this.connection.driver.normalizeDefault(column);\n                            }\n                            else {\n                                expression += \"NULL\"; // otherwise simply use NULL and pray if column is nullable\n                            }\n                        }\n                        else {\n                            expression += \"DEFAULT\";\n                        }\n                    }\n                    else if (value === null &&\n                        this.connection.driver.options.type === \"spanner\") {\n                        expression += \"NULL\";\n                        // support for SQL expressions in queries\n                    }\n                    else if (typeof value === \"function\") {\n                        expression += value();\n                        // just any other regular value\n                    }\n                    else {\n                        if (this.connection.driver.options.type === \"mssql\")\n                            value = this.connection.driver.parametrizeValue(column, value);\n                        // we need to store array values in a special class to make sure parameter replacement will work correctly\n                        // if (value instanceof Array)\n                        //     value = new ArrayParameter(value);\n                        const paramName = this.createParameter(value);\n                        if ((DriverUtils.isMySQLFamily(this.connection.driver) ||\n                            this.connection.driver.options.type ===\n                                \"aurora-mysql\") &&\n                            this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            const useLegacy = this.connection.driver.options.legacySpatialSupport;\n                            const geomFromText = useLegacy\n                                ? \"GeomFromText\"\n                                : \"ST_GeomFromText\";\n                            if (column.srid != null) {\n                                expression += `${geomFromText}(${paramName}, ${column.srid})`;\n                            }\n                            else {\n                                expression += `${geomFromText}(${paramName})`;\n                            }\n                        }\n                        else if (DriverUtils.isPostgresFamily(this.connection.driver) &&\n                            this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            if (column.srid != null) {\n                                expression += `ST_SetSRID(ST_GeomFromGeoJSON(${paramName}), ${column.srid})::${column.type}`;\n                            }\n                            else {\n                                expression += `ST_GeomFromGeoJSON(${paramName})::${column.type}`;\n                            }\n                        }\n                        else if (this.connection.driver.options.type === \"mssql\" &&\n                            this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            expression +=\n                                column.type +\n                                    \"::STGeomFromText(\" +\n                                    paramName +\n                                    \", \" +\n                                    (column.srid || \"0\") +\n                                    \")\";\n                        }\n                        else {\n                            expression += paramName;\n                        }\n                    }\n                    if (columnIndex === columns.length - 1) {\n                        if (valueSetIndex === valueSets.length - 1) {\n                            if (this.connection.driver.options.type ===\n                                \"oracle\" &&\n                                valueSets.length > 1) {\n                                expression += \" FROM DUAL \";\n                            }\n                            else if (this.connection.driver.options.type === \"sap\" &&\n                                valueSets.length > 1) {\n                                expression += \" FROM dummy \";\n                            }\n                            else {\n                                expression += \")\";\n                            }\n                        }\n                        else {\n                            if (this.connection.driver.options.type ===\n                                \"oracle\" &&\n                                valueSets.length > 1) {\n                                expression += \" FROM DUAL UNION ALL \";\n                            }\n                            else if (this.connection.driver.options.type === \"sap\" &&\n                                valueSets.length > 1) {\n                                expression += \" FROM dummy UNION ALL \";\n                            }\n                            else {\n                                expression += \"), \";\n                            }\n                        }\n                    }\n                    else {\n                        expression += \", \";\n                    }\n                });\n            });\n            if (expression === \"()\")\n                return \"\";\n            return expression;\n        }\n        else {\n            // for tables without metadata\n            // get values needs to be inserted\n            let expression = \"\";\n            valueSets.forEach((valueSet, insertionIndex) => {\n                const columns = Object.keys(valueSet);\n                columns.forEach((columnName, columnIndex) => {\n                    if (columnIndex === 0) {\n                        expression += \"(\";\n                    }\n                    const value = valueSet[columnName];\n                    // support for SQL expressions in queries\n                    if (typeof value === \"function\") {\n                        expression += value();\n                        // if value for this column was not provided then insert default value\n                    }\n                    else if (value === undefined) {\n                        if ((this.connection.driver.options.type === \"oracle\" &&\n                            valueSets.length > 1) ||\n                            DriverUtils.isSQLiteFamily(this.connection.driver) ||\n                            this.connection.driver.options.type === \"sap\" ||\n                            this.connection.driver.options.type === \"spanner\") {\n                            expression += \"NULL\";\n                        }\n                        else {\n                            expression += \"DEFAULT\";\n                        }\n                    }\n                    else if (value === null &&\n                        this.connection.driver.options.type === \"spanner\") {\n                        // just any other regular value\n                    }\n                    else {\n                        expression += this.createParameter(value);\n                    }\n                    if (columnIndex === Object.keys(valueSet).length - 1) {\n                        if (insertionIndex === valueSets.length - 1) {\n                            expression += \")\";\n                        }\n                        else {\n                            expression += \"), \";\n                        }\n                    }\n                    else {\n                        expression += \", \";\n                    }\n                });\n            });\n            if (expression === \"()\")\n                return \"\";\n            return expression;\n        }\n    }\n    /**\n     * Gets array of values need to be inserted into the target table.\n     */\n    getValueSets() {\n        if (Array.isArray(this.expressionMap.valuesSet))\n            return this.expressionMap.valuesSet;\n        if (ObjectUtils.isObject(this.expressionMap.valuesSet))\n            return [this.expressionMap.valuesSet];\n        throw new InsertValuesMissingError();\n    }\n    /**\n     * Checks if column is an auto-generated primary key, but the current insertion specifies a value for it.\n     *\n     * @param column\n     */\n    isOverridingAutoIncrementBehavior(column) {\n        return (column.isPrimary &&\n            column.isGenerated &&\n            column.generationStrategy === \"increment\" &&\n            this.getValueSets().some((valueSet) => column.getEntityValue(valueSet) !== undefined &&\n                column.getEntityValue(valueSet) !== null));\n    }\n}\n\n//# sourceMappingURL=InsertQueryBuilder.js.map\n","import { TypeORMError } from \"../error\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\n/**\n * Allows to work with entity relations and perform specific operations with those relations.\n *\n * todo: add transactions everywhere\n */\nexport class RelationUpdater {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(queryBuilder, expressionMap) {\n        this.queryBuilder = queryBuilder;\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs set or add operation on a relation.\n     */\n    async update(value) {\n        const relation = this.expressionMap.relationMetadata;\n        if (relation.isManyToOne || relation.isOneToOneOwner) {\n            const updateSet = relation.joinColumns.reduce((updateSet, joinColumn) => {\n                const relationValue = ObjectUtils.isObject(value)\n                    ? joinColumn.referencedColumn.getEntityValue(value)\n                    : value;\n                joinColumn.setEntityValue(updateSet, relationValue);\n                return updateSet;\n            }, {});\n            if (!this.expressionMap.of ||\n                (Array.isArray(this.expressionMap.of) &&\n                    !this.expressionMap.of.length))\n                return;\n            await this.queryBuilder\n                .createQueryBuilder()\n                .update(relation.entityMetadata.target)\n                .set(updateSet)\n                .whereInIds(this.expressionMap.of)\n                .execute();\n        }\n        else if ((relation.isOneToOneNotOwner || relation.isOneToMany) &&\n            value === null) {\n            // we handle null a bit different way\n            const updateSet = {};\n            relation.inverseRelation.joinColumns.forEach((column) => {\n                updateSet[column.propertyName] = null;\n            });\n            const ofs = Array.isArray(this.expressionMap.of)\n                ? this.expressionMap.of\n                : [this.expressionMap.of];\n            const parameters = {};\n            const conditions = [];\n            ofs.forEach((of, ofIndex) => {\n                relation.inverseRelation.joinColumns.map((column, columnIndex) => {\n                    const parameterName = \"joinColumn_\" + ofIndex + \"_\" + columnIndex;\n                    parameters[parameterName] = ObjectUtils.isObject(of)\n                        ? column.referencedColumn.getEntityValue(of)\n                        : of;\n                    conditions.push(`${column.propertyPath} = :${parameterName}`);\n                });\n            });\n            const condition = conditions\n                .map((str) => \"(\" + str + \")\")\n                .join(\" OR \");\n            if (!condition)\n                return;\n            await this.queryBuilder\n                .createQueryBuilder()\n                .update(relation.inverseEntityMetadata.target)\n                .set(updateSet)\n                .where(condition)\n                .setParameters(parameters)\n                .execute();\n        }\n        else if (relation.isOneToOneNotOwner || relation.isOneToMany) {\n            if (Array.isArray(this.expressionMap.of))\n                throw new TypeORMError(`You cannot update relations of multiple entities with the same related object. Provide a single entity into .of method.`);\n            const of = this.expressionMap.of;\n            const updateSet = relation.inverseRelation.joinColumns.reduce((updateSet, joinColumn) => {\n                const relationValue = ObjectUtils.isObject(of)\n                    ? joinColumn.referencedColumn.getEntityValue(of)\n                    : of;\n                joinColumn.setEntityValue(updateSet, relationValue);\n                return updateSet;\n            }, {});\n            if (!value || (Array.isArray(value) && !value.length))\n                return;\n            await this.queryBuilder\n                .createQueryBuilder()\n                .update(relation.inverseEntityMetadata.target)\n                .set(updateSet)\n                .whereInIds(value)\n                .execute();\n        }\n        else {\n            // many to many\n            const junctionMetadata = relation.junctionEntityMetadata;\n            const ofs = Array.isArray(this.expressionMap.of)\n                ? this.expressionMap.of\n                : [this.expressionMap.of];\n            const values = Array.isArray(value) ? value : [value];\n            const firstColumnValues = relation.isManyToManyOwner ? ofs : values;\n            const secondColumnValues = relation.isManyToManyOwner ? values : ofs;\n            const bulkInserted = [];\n            firstColumnValues.forEach((firstColumnVal) => {\n                secondColumnValues.forEach((secondColumnVal) => {\n                    const inserted = {};\n                    junctionMetadata.ownerColumns.forEach((column) => {\n                        inserted[column.databaseName] = ObjectUtils.isObject(firstColumnVal)\n                            ? column.referencedColumn.getEntityValue(firstColumnVal)\n                            : firstColumnVal;\n                    });\n                    junctionMetadata.inverseColumns.forEach((column) => {\n                        inserted[column.databaseName] = ObjectUtils.isObject(secondColumnVal)\n                            ? column.referencedColumn.getEntityValue(secondColumnVal)\n                            : secondColumnVal;\n                    });\n                    bulkInserted.push(inserted);\n                });\n            });\n            if (!bulkInserted.length)\n                return;\n            if (this.queryBuilder.connection.driver.options.type === \"oracle\" ||\n                this.queryBuilder.connection.driver.options.type === \"sap\") {\n                await Promise.all(bulkInserted.map((value) => {\n                    return this.queryBuilder\n                        .createQueryBuilder()\n                        .insert()\n                        .into(junctionMetadata.tableName)\n                        .values(value)\n                        .execute();\n                }));\n            }\n            else {\n                await this.queryBuilder\n                    .createQueryBuilder()\n                    .insert()\n                    .into(junctionMetadata.tableName)\n                    .values(bulkInserted)\n                    .execute();\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=RelationUpdater.js.map\n","import { ObjectUtils } from \"../util/ObjectUtils\";\n/**\n * Allows to work with entity relations and perform specific operations with those relations.\n *\n * todo: add transactions everywhere\n */\nexport class RelationRemover {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(queryBuilder, expressionMap) {\n        this.queryBuilder = queryBuilder;\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs remove operation on a relation.\n     */\n    async remove(value) {\n        const relation = this.expressionMap.relationMetadata;\n        if (relation.isOneToMany) {\n            // if (this.expressionMap.of instanceof Array)\n            //     throw new TypeORMError(`You cannot update relations of multiple entities with the same related object. Provide a single entity into .of method.`);\n            // DELETE FROM post WHERE post.categoryId = of AND post.id = id\n            const ofs = Array.isArray(this.expressionMap.of)\n                ? this.expressionMap.of\n                : [this.expressionMap.of];\n            const values = Array.isArray(value) ? value : [value];\n            const updateSet = {};\n            relation.inverseRelation.joinColumns.forEach((column) => {\n                updateSet[column.propertyName] = null;\n            });\n            const parameters = {};\n            const conditions = [];\n            ofs.forEach((of, ofIndex) => {\n                conditions.push(...values.map((value, valueIndex) => {\n                    return [\n                        ...relation.inverseRelation.joinColumns.map((column, columnIndex) => {\n                            const parameterName = \"joinColumn_\" +\n                                ofIndex +\n                                \"_\" +\n                                valueIndex +\n                                \"_\" +\n                                columnIndex;\n                            parameters[parameterName] =\n                                ObjectUtils.isObject(of)\n                                    ? column.referencedColumn.getEntityValue(of)\n                                    : of;\n                            return `${column.propertyPath} = :${parameterName}`;\n                        }),\n                        ...relation.inverseRelation.entityMetadata.primaryColumns.map((column, columnIndex) => {\n                            const parameterName = \"primaryColumn_\" +\n                                valueIndex +\n                                \"_\" +\n                                valueIndex +\n                                \"_\" +\n                                columnIndex;\n                            parameters[parameterName] =\n                                ObjectUtils.isObject(value)\n                                    ? column.getEntityValue(value)\n                                    : value;\n                            return `${column.propertyPath} = :${parameterName}`;\n                        }),\n                    ].join(\" AND \");\n                }));\n            });\n            const condition = conditions\n                .map((str) => \"(\" + str + \")\")\n                .join(\" OR \");\n            if (!condition)\n                return;\n            await this.queryBuilder\n                .createQueryBuilder()\n                .update(relation.inverseEntityMetadata.target)\n                .set(updateSet)\n                .where(condition)\n                .setParameters(parameters)\n                .execute();\n        }\n        else {\n            // many to many\n            const junctionMetadata = relation.junctionEntityMetadata;\n            const ofs = Array.isArray(this.expressionMap.of)\n                ? this.expressionMap.of\n                : [this.expressionMap.of];\n            const values = Array.isArray(value) ? value : [value];\n            const firstColumnValues = relation.isManyToManyOwner ? ofs : values;\n            const secondColumnValues = relation.isManyToManyOwner ? values : ofs;\n            const parameters = {};\n            const conditions = [];\n            firstColumnValues.forEach((firstColumnVal, firstColumnValIndex) => {\n                conditions.push(...secondColumnValues.map((secondColumnVal, secondColumnValIndex) => {\n                    return [\n                        ...junctionMetadata.ownerColumns.map((column, columnIndex) => {\n                            const parameterName = \"firstValue_\" +\n                                firstColumnValIndex +\n                                \"_\" +\n                                secondColumnValIndex +\n                                \"_\" +\n                                columnIndex;\n                            parameters[parameterName] =\n                                ObjectUtils.isObject(firstColumnVal)\n                                    ? column.referencedColumn.getEntityValue(firstColumnVal)\n                                    : firstColumnVal;\n                            return `${column.databaseName} = :${parameterName}`;\n                        }),\n                        ...junctionMetadata.inverseColumns.map((column, columnIndex) => {\n                            const parameterName = \"secondValue_\" +\n                                firstColumnValIndex +\n                                \"_\" +\n                                secondColumnValIndex +\n                                \"_\" +\n                                columnIndex;\n                            parameters[parameterName] =\n                                ObjectUtils.isObject(secondColumnVal)\n                                    ? column.referencedColumn.getEntityValue(secondColumnVal)\n                                    : secondColumnVal;\n                            return `${column.databaseName} = :${parameterName}`;\n                        }),\n                    ].join(\" AND \");\n                }));\n            });\n            const condition = conditions\n                .map((str) => \"(\" + str + \")\")\n                .join(\" OR \");\n            await this.queryBuilder\n                .createQueryBuilder()\n                .delete()\n                .from(junctionMetadata.tableName)\n                .where(condition)\n                .setParameters(parameters)\n                .execute();\n        }\n    }\n}\n\n//# sourceMappingURL=RelationRemover.js.map\n","import { QueryBuilder } from \"./QueryBuilder\";\nimport { RelationUpdater } from \"./RelationUpdater\";\nimport { RelationRemover } from \"./RelationRemover\";\nimport { TypeORMError } from \"../error\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\n/**\n * Allows to work with entity relations and perform specific operations with those relations.\n *\n * todo: add transactions everywhere\n */\nexport class RelationQueryBuilder extends QueryBuilder {\n    constructor() {\n        super(...arguments);\n        this[\"@instanceof\"] = Symbol.for(\"RelationQueryBuilder\");\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated SQL query without parameters being replaced.\n     */\n    getQuery() {\n        return \"\";\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Sets entity (target) which relations will be updated.\n     */\n    of(entity) {\n        this.expressionMap.of = entity;\n        return this;\n    }\n    /**\n     * Sets entity relation's value.\n     * Value can be entity, entity id or entity id map (if entity has composite ids).\n     * Works only for many-to-one and one-to-one relations.\n     * For many-to-many and one-to-many relations use #add and #remove methods instead.\n     */\n    async set(value) {\n        const relation = this.expressionMap.relationMetadata;\n        if (!this.expressionMap.of)\n            // todo: move this check before relation query builder creation?\n            throw new TypeORMError(`Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.`);\n        if (relation.isManyToMany || relation.isOneToMany)\n            throw new TypeORMError(`Set operation is only supported for many-to-one and one-to-one relations. ` +\n                `However given \"${relation.propertyPath}\" has ${relation.relationType} relation. ` +\n                `Use .add() method instead.`);\n        // if there are multiple join columns then user must send id map as \"value\" argument. check if he really did it\n        if (relation.joinColumns &&\n            relation.joinColumns.length > 1 &&\n            (!ObjectUtils.isObject(value) ||\n                Object.keys(value).length < relation.joinColumns.length))\n            throw new TypeORMError(`Value to be set into the relation must be a map of relation ids, for example: .set({ firstName: \"...\", lastName: \"...\" })`);\n        const updater = new RelationUpdater(this, this.expressionMap);\n        return updater.update(value);\n    }\n    /**\n     * Adds (binds) given value to entity relation.\n     * Value can be entity, entity id or entity id map (if entity has composite ids).\n     * Value also can be array of entities, array of entity ids or array of entity id maps (if entity has composite ids).\n     * Works only for many-to-many and one-to-many relations.\n     * For many-to-one and one-to-one use #set method instead.\n     */\n    async add(value) {\n        if (Array.isArray(value) && value.length === 0)\n            return;\n        const relation = this.expressionMap.relationMetadata;\n        if (!this.expressionMap.of)\n            // todo: move this check before relation query builder creation?\n            throw new TypeORMError(`Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.`);\n        if (relation.isManyToOne || relation.isOneToOne)\n            throw new TypeORMError(`Add operation is only supported for many-to-many and one-to-many relations. ` +\n                `However given \"${relation.propertyPath}\" has ${relation.relationType} relation. ` +\n                `Use .set() method instead.`);\n        // if there are multiple join columns then user must send id map as \"value\" argument. check if he really did it\n        if (relation.joinColumns &&\n            relation.joinColumns.length > 1 &&\n            (!ObjectUtils.isObject(value) ||\n                Object.keys(value).length < relation.joinColumns.length))\n            throw new TypeORMError(`Value to be set into the relation must be a map of relation ids, for example: .set({ firstName: \"...\", lastName: \"...\" })`);\n        const updater = new RelationUpdater(this, this.expressionMap);\n        return updater.update(value);\n    }\n    /**\n     * Removes (unbinds) given value from entity relation.\n     * Value can be entity, entity id or entity id map (if entity has composite ids).\n     * Value also can be array of entities, array of entity ids or array of entity id maps (if entity has composite ids).\n     * Works only for many-to-many and one-to-many relations.\n     * For many-to-one and one-to-one use #set method instead.\n     */\n    async remove(value) {\n        if (Array.isArray(value) && value.length === 0)\n            return;\n        const relation = this.expressionMap.relationMetadata;\n        if (!this.expressionMap.of)\n            // todo: move this check before relation query builder creation?\n            throw new TypeORMError(`Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.`);\n        if (relation.isManyToOne || relation.isOneToOne)\n            throw new TypeORMError(`Add operation is only supported for many-to-many and one-to-many relations. ` +\n                `However given \"${relation.propertyPath}\" has ${relation.relationType} relation. ` +\n                `Use .set(null) method instead.`);\n        const remover = new RelationRemover(this, this.expressionMap);\n        return remover.remove(value);\n    }\n    /**\n     * Adds (binds) and removes (unbinds) given values to/from entity relation.\n     * Value can be entity, entity id or entity id map (if entity has composite ids).\n     * Value also can be array of entities, array of entity ids or array of entity id maps (if entity has composite ids).\n     * Works only for many-to-many and one-to-many relations.\n     * For many-to-one and one-to-one use #set method instead.\n     */\n    async addAndRemove(added, removed) {\n        await this.remove(removed);\n        await this.add(added);\n    }\n    /**\n     * Gets entity's relation id.\n    async getId(): Promise<any> {\n\n    }*/\n    /**\n     * Gets entity's relation ids.\n    async getIds(): Promise<any[]> {\n        return [];\n    }*/\n    /**\n     * Loads a single entity (relational) from the relation.\n     * You can also provide id of relational entity to filter by.\n     */\n    async loadOne() {\n        return this.loadMany().then((results) => results[0]);\n    }\n    /**\n     * Loads many entities (relational) from the relation.\n     * You can also provide ids of relational entities to filter by.\n     */\n    async loadMany() {\n        let of = this.expressionMap.of;\n        if (!ObjectUtils.isObject(of)) {\n            const metadata = this.expressionMap.mainAlias.metadata;\n            if (metadata.hasMultiplePrimaryKeys)\n                throw new TypeORMError(`Cannot load entity because only one primary key was specified, however entity contains multiple primary keys`);\n            of = metadata.primaryColumns[0].createValueMap(of);\n        }\n        return this.connection.relationLoader.load(this.expressionMap.relationMetadata, of, this.queryRunner);\n    }\n}\n\n//# sourceMappingURL=RelationQueryBuilder.js.map\n","export class OrmUtils {\n    // -------------------------------------------------------------------------\n    // Public methods\n    // -------------------------------------------------------------------------\n    /**\n     * Chunks array into pieces.\n     */\n    static chunk(array, size) {\n        return Array.from(Array(Math.ceil(array.length / size)), (_, i) => {\n            return array.slice(i * size, i * size + size);\n        });\n    }\n    static splitClassesAndStrings(classesAndStrings) {\n        return [\n            classesAndStrings.filter((cls) => typeof cls !== \"string\"),\n            classesAndStrings.filter((str) => typeof str === \"string\"),\n        ];\n    }\n    static groupBy(array, propertyCallback) {\n        return array.reduce((groupedArray, value) => {\n            const key = propertyCallback(value);\n            let grouped = groupedArray.find((i) => i.id === key);\n            if (!grouped) {\n                grouped = { id: key, items: [] };\n                groupedArray.push(grouped);\n            }\n            grouped.items.push(value);\n            return groupedArray;\n        }, []);\n    }\n    static uniq(array, criteriaOrProperty) {\n        return array.reduce((uniqueArray, item) => {\n            let found = false;\n            if (typeof criteriaOrProperty === \"function\") {\n                const itemValue = criteriaOrProperty(item);\n                found = !!uniqueArray.find((uniqueItem) => criteriaOrProperty(uniqueItem) === itemValue);\n            }\n            else if (typeof criteriaOrProperty === \"string\") {\n                found = !!uniqueArray.find((uniqueItem) => uniqueItem[criteriaOrProperty] ===\n                    item[criteriaOrProperty]);\n            }\n            else {\n                found = uniqueArray.indexOf(item) !== -1;\n            }\n            if (!found)\n                uniqueArray.push(item);\n            return uniqueArray;\n        }, []);\n    }\n    // Checks if it's an object made by Object.create(null), {} or new Object()\n    static isPlainObject(item) {\n        if (item === null || item === undefined) {\n            return false;\n        }\n        return !item.constructor || item.constructor === Object;\n    }\n    static mergeArrayKey(target, key, value, memo) {\n        // Have we seen this before?  Prevent infinite recursion.\n        if (memo.has(value)) {\n            target[key] = memo.get(value);\n            return;\n        }\n        if (value instanceof Promise) {\n            // Skip promises entirely.\n            // This is a hold-over from the old code & is because we don't want to pull in\n            // the lazy fields.  Ideally we'd remove these promises via another function first\n            // but for now we have to do it here.\n            return;\n        }\n        if (!this.isPlainObject(value) && !Array.isArray(value)) {\n            target[key] = value;\n            return;\n        }\n        if (!target[key]) {\n            target[key] = Array.isArray(value) ? [] : {};\n        }\n        memo.set(value, target[key]);\n        this.merge(target[key], value, memo);\n        memo.delete(value);\n    }\n    static mergeObjectKey(target, key, value, memo) {\n        // Have we seen this before?  Prevent infinite recursion.\n        if (memo.has(value)) {\n            Object.assign(target, { [key]: memo.get(value) });\n            return;\n        }\n        if (value instanceof Promise) {\n            // Skip promises entirely.\n            // This is a hold-over from the old code & is because we don't want to pull in\n            // the lazy fields.  Ideally we'd remove these promises via another function first\n            // but for now we have to do it here.\n            return;\n        }\n        if (!this.isPlainObject(value) && !Array.isArray(value)) {\n            Object.assign(target, { [key]: value });\n            return;\n        }\n        if (!target[key]) {\n            Object.assign(target, { [key]: Array.isArray(value) ? [] : {} });\n        }\n        memo.set(value, target[key]);\n        this.merge(target[key], value, memo);\n        memo.delete(value);\n    }\n    static merge(target, source, memo = new Map()) {\n        if (this.isPlainObject(target) && this.isPlainObject(source)) {\n            for (const key of Object.keys(source)) {\n                if (key === \"__proto__\")\n                    continue;\n                this.mergeObjectKey(target, key, source[key], memo);\n            }\n        }\n        if (Array.isArray(target) && Array.isArray(source)) {\n            for (let key = 0; key < source.length; key++) {\n                this.mergeArrayKey(target, key, source[key], memo);\n            }\n        }\n    }\n    /**\n     * Deep Object.assign.\n     */\n    static mergeDeep(target, ...sources) {\n        if (!sources.length) {\n            return target;\n        }\n        for (const source of sources) {\n            OrmUtils.merge(target, source);\n        }\n        return target;\n    }\n    /**\n     * Deep compare objects.\n     *\n     * @see http://stackoverflow.com/a/1144249\n     */\n    static deepCompare(...args) {\n        let i, l, leftChain, rightChain;\n        if (arguments.length < 1) {\n            return true; // Die silently? Don't know how to handle such case, please help...\n            // throw \"Need two or more arguments to compare\";\n        }\n        for (i = 1, l = arguments.length; i < l; i++) {\n            leftChain = []; // Todo: this can be cached\n            rightChain = [];\n            if (!this.compare2Objects(leftChain, rightChain, arguments[0], arguments[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Gets deeper value of object.\n     */\n    static deepValue(obj, path) {\n        const segments = path.split(\".\");\n        for (let i = 0, len = segments.length; i < len; i++) {\n            obj = obj[segments[i]];\n        }\n        return obj;\n    }\n    static replaceEmptyObjectsWithBooleans(obj) {\n        for (let key in obj) {\n            if (obj[key] && typeof obj[key] === \"object\") {\n                if (Object.keys(obj[key]).length === 0) {\n                    obj[key] = true;\n                }\n                else {\n                    this.replaceEmptyObjectsWithBooleans(obj[key]);\n                }\n            }\n        }\n    }\n    static propertyPathsToTruthyObject(paths) {\n        let obj = {};\n        for (let path of paths) {\n            const props = path.split(\".\");\n            if (!props.length)\n                continue;\n            if (!obj[props[0]] || obj[props[0]] === true) {\n                obj[props[0]] = {};\n            }\n            let recursiveChild = obj[props[0]];\n            for (let [key, prop] of props.entries()) {\n                if (key === 0)\n                    continue;\n                if (recursiveChild[prop]) {\n                    recursiveChild = recursiveChild[prop];\n                }\n                else if (key === props.length - 1) {\n                    recursiveChild[prop] = {};\n                    recursiveChild = null;\n                }\n                else {\n                    recursiveChild[prop] = {};\n                    recursiveChild = recursiveChild[prop];\n                }\n            }\n        }\n        this.replaceEmptyObjectsWithBooleans(obj);\n        return obj;\n    }\n    /**\n     * Check if two entity-id-maps are the same\n     */\n    static compareIds(firstId, secondId) {\n        if (firstId === undefined ||\n            firstId === null ||\n            secondId === undefined ||\n            secondId === null)\n            return false;\n        // Optimized version for the common case\n        if (((typeof firstId.id === \"string\" &&\n            typeof secondId.id === \"string\") ||\n            (typeof firstId.id === \"number\" &&\n                typeof secondId.id === \"number\")) &&\n            Object.keys(firstId).length === 1 &&\n            Object.keys(secondId).length === 1) {\n            return firstId.id === secondId.id;\n        }\n        return OrmUtils.deepCompare(firstId, secondId);\n    }\n    /**\n     * Transforms given value into boolean value.\n     */\n    static toBoolean(value) {\n        if (typeof value === \"boolean\")\n            return value;\n        if (typeof value === \"string\")\n            return value === \"true\" || value === \"1\";\n        if (typeof value === \"number\")\n            return value > 0;\n        return false;\n    }\n    /**\n     * Composes an object from the given array of keys and values.\n     */\n    static zipObject(keys, values) {\n        return keys.reduce((object, column, index) => {\n            object[column] = values[index];\n            return object;\n        }, {});\n    }\n    /**\n     * Compares two arrays.\n     */\n    static isArraysEqual(arr1, arr2) {\n        if (arr1.length !== arr2.length)\n            return false;\n        return arr1.every((element) => {\n            return arr2.indexOf(element) !== -1;\n        });\n    }\n    static areMutuallyExclusive(...lists) {\n        const haveSharedObjects = lists.some((list) => {\n            const otherLists = lists.filter((otherList) => otherList !== list);\n            return list.some((item) => otherLists.some((otherList) => otherList.includes(item)));\n        });\n        return !haveSharedObjects;\n    }\n    /**\n     * Parses the CHECK constraint on the specified column and returns\n     * all values allowed by the constraint or undefined if the constraint\n     * is not present.\n     */\n    static parseSqlCheckExpression(sql, columnName) {\n        const enumMatch = sql.match(new RegExp(`\"${columnName}\" varchar CHECK\\\\s*\\\\(\\\\s*\"${columnName}\"\\\\s+IN\\\\s*`));\n        if (enumMatch && enumMatch.index) {\n            const afterMatch = sql.substring(enumMatch.index + enumMatch[0].length);\n            // This is an enum\n            // all enum values stored as a comma separated list\n            const chars = afterMatch;\n            /**\n             * * When outside quotes: empty string\n             * * When inside single quotes: `'`\n             */\n            let currentQuotes = \"\";\n            let nextValue = \"\";\n            const enumValues = [];\n            for (let idx = 0; idx < chars.length; idx++) {\n                const char = chars[idx];\n                switch (char) {\n                    case \",\":\n                        if (currentQuotes == \"\") {\n                            enumValues.push(nextValue);\n                            nextValue = \"\";\n                        }\n                        else {\n                            nextValue += char;\n                        }\n                        break;\n                    case \"'\":\n                        if (currentQuotes == char) {\n                            const isNextCharQuote = chars[idx + 1] === char;\n                            if (isNextCharQuote) {\n                                // double quote in sql should be treated as a\n                                // single quote that's part of the quoted string\n                                nextValue += char;\n                                idx += 1; // skip that next quote\n                            }\n                            else {\n                                currentQuotes = \"\";\n                            }\n                        }\n                        else {\n                            currentQuotes = char;\n                        }\n                        break;\n                    case \")\":\n                        if (currentQuotes == \"\") {\n                            enumValues.push(nextValue);\n                            return enumValues;\n                        }\n                        else {\n                            nextValue += char;\n                        }\n                        break;\n                    default:\n                        if (currentQuotes != \"\") {\n                            nextValue += char;\n                        }\n                }\n            }\n        }\n        return undefined;\n    }\n    // -------------------------------------------------------------------------\n    // Private methods\n    // -------------------------------------------------------------------------\n    static compare2Objects(leftChain, rightChain, x, y) {\n        let p;\n        // remember that NaN === NaN returns false\n        // and isNaN(undefined) returns true\n        if (Number.isNaN(x) && Number.isNaN(y))\n            return true;\n        // Compare primitives and functions.\n        // Check if both arguments link to the same object.\n        // Especially useful on the step where we compare prototypes\n        if (x === y)\n            return true;\n        // Unequal, but either is null or undefined (use case: jsonb comparison)\n        // PR #3776, todo: add tests\n        if (x === null || y === null || x === undefined || y === undefined)\n            return false;\n        // Fix the buffer compare bug.\n        // See: https://github.com/typeorm/typeorm/issues/3654\n        if ((typeof x.equals === \"function\" ||\n            typeof x.equals === \"function\") &&\n            x.equals(y))\n            return true;\n        // Works in case when functions are created in constructor.\n        // Comparing dates is a common scenario. Another built-ins?\n        // We can even handle functions passed across iframes\n        if ((typeof x === \"function\" && typeof y === \"function\") ||\n            (x instanceof Date && y instanceof Date) ||\n            (x instanceof RegExp && y instanceof RegExp) ||\n            (typeof x === \"string\" && typeof y === \"string\") ||\n            (typeof x === \"number\" && typeof y === \"number\"))\n            return x.toString() === y.toString();\n        // At last checking prototypes as good as we can\n        if (!(typeof x === \"object\" && typeof y === \"object\"))\n            return false;\n        if (Object.prototype.isPrototypeOf.call(x, y) ||\n            Object.prototype.isPrototypeOf.call(y, x))\n            return false;\n        if (x.constructor !== y.constructor)\n            return false;\n        if (x.prototype !== y.prototype)\n            return false;\n        // Check for infinitive linking loops\n        if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1)\n            return false;\n        // Quick checking of one object being a subset of another.\n        // todo: cache the structure of arguments[0] for performance\n        for (p in y) {\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                return false;\n            }\n            else if (typeof y[p] !== typeof x[p]) {\n                return false;\n            }\n        }\n        for (p in x) {\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                return false;\n            }\n            else if (typeof y[p] !== typeof x[p]) {\n                return false;\n            }\n            switch (typeof x[p]) {\n                case \"object\":\n                case \"function\":\n                    leftChain.push(x);\n                    rightChain.push(y);\n                    if (!this.compare2Objects(leftChain, rightChain, x[p], y[p])) {\n                        return false;\n                    }\n                    leftChain.pop();\n                    rightChain.pop();\n                    break;\n                default:\n                    if (x[p] !== y[p]) {\n                        return false;\n                    }\n                    break;\n            }\n        }\n        return true;\n    }\n}\n\n//# sourceMappingURL=OrmUtils.js.map\n","import { OrmUtils } from \"../../util/OrmUtils\";\nimport { DriverUtils } from \"../../driver/DriverUtils\";\nimport { ObjectUtils } from \"../../util/ObjectUtils\";\n/**\n * Transforms raw sql results returned from the database into entity object.\n * Entity is constructed based on its entity metadata.\n */\nexport class RawSqlResultsToEntityTransformer {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(expressionMap, driver, rawRelationIdResults, rawRelationCountResults, queryRunner) {\n        this.expressionMap = expressionMap;\n        this.driver = driver;\n        this.rawRelationIdResults = rawRelationIdResults;\n        this.rawRelationCountResults = rawRelationCountResults;\n        this.queryRunner = queryRunner;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Since db returns a duplicated rows of the data where accuracies of the same object can be duplicated\n     * we need to group our result and we must have some unique id (primary key in our case)\n     */\n    transform(rawResults, alias) {\n        const group = this.group(rawResults, alias);\n        const entities = [];\n        group.forEach((results) => {\n            const entity = this.transformRawResultsGroup(results, alias);\n            if (entity !== undefined &&\n                !Object.values(entity).every((value) => value === null))\n                entities.push(entity);\n        });\n        return entities;\n    }\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Groups given raw results by ids of given alias.\n     */\n    group(rawResults, alias) {\n        const map = new Map();\n        const keys = [];\n        if (alias.metadata.tableType === \"view\") {\n            keys.push(...alias.metadata.columns.map((column) => DriverUtils.buildAlias(this.driver, undefined, alias.name, column.databaseName)));\n        }\n        else {\n            keys.push(...alias.metadata.primaryColumns.map((column) => DriverUtils.buildAlias(this.driver, undefined, alias.name, column.databaseName)));\n        }\n        rawResults.forEach((rawResult) => {\n            const id = keys\n                .map((key) => {\n                const keyValue = rawResult[key];\n                if (Buffer.isBuffer(keyValue)) {\n                    return keyValue.toString(\"hex\");\n                }\n                if (ObjectUtils.isObject(keyValue)) {\n                    return JSON.stringify(keyValue);\n                }\n                return keyValue;\n            })\n                .join(\"_\"); // todo: check partial\n            const items = map.get(id);\n            if (!items) {\n                map.set(id, [rawResult]);\n            }\n            else {\n                items.push(rawResult);\n            }\n        });\n        return map;\n    }\n    /**\n     * Transforms set of data results into single entity.\n     */\n    transformRawResultsGroup(rawResults, alias) {\n        // let hasColumns = false; // , hasEmbeddedColumns = false, hasParentColumns = false, hasParentEmbeddedColumns = false;\n        let metadata = alias.metadata;\n        if (metadata.discriminatorColumn) {\n            const discriminatorValues = rawResults.map((result) => result[DriverUtils.buildAlias(this.driver, undefined, alias.name, alias.metadata.discriminatorColumn.databaseName)]);\n            const discriminatorMetadata = metadata.childEntityMetadatas.find((childEntityMetadata) => {\n                return (typeof discriminatorValues.find((value) => value ===\n                    childEntityMetadata.discriminatorValue) !== \"undefined\");\n            });\n            if (discriminatorMetadata)\n                metadata = discriminatorMetadata;\n        }\n        let entity = metadata.create(this.queryRunner, {\n            fromDeserializer: true,\n            pojo: this.expressionMap.options.indexOf(\"create-pojo\") !== -1,\n        });\n        // get value from columns selections and put them into newly created entity\n        const hasColumns = this.transformColumns(rawResults, alias, entity, metadata);\n        const hasRelations = this.transformJoins(rawResults, entity, alias, metadata);\n        const hasRelationIds = this.transformRelationIds(rawResults, alias, entity, metadata);\n        const hasRelationCounts = this.transformRelationCounts(rawResults, alias, entity);\n        // if we have at least one selected column then return this entity\n        // since entity must have at least primary columns to be really selected and transformed into entity\n        if (hasColumns)\n            return entity;\n        // if we don't have any selected column we should not return entity,\n        // except for the case when entity only contain a primary column as a relation to another entity\n        // in this case its absolutely possible our entity to not have any columns except a single relation\n        const hasOnlyVirtualPrimaryColumns = metadata.primaryColumns.filter((column) => column.isVirtual === false).length === 0; // todo: create metadata.hasOnlyVirtualPrimaryColumns\n        if (hasOnlyVirtualPrimaryColumns &&\n            (hasRelations || hasRelationIds || hasRelationCounts))\n            return entity;\n        return undefined;\n    }\n    // get value from columns selections and put them into object\n    transformColumns(rawResults, alias, entity, metadata) {\n        let hasData = false;\n        metadata.columns.forEach((column) => {\n            // if table inheritance is used make sure this column is not child's column\n            if (metadata.childEntityMetadatas.length > 0 &&\n                metadata.childEntityMetadatas.findIndex((childMetadata) => childMetadata.target === column.target) !== -1)\n                return;\n            const value = rawResults[0][DriverUtils.buildAlias(this.driver, undefined, alias.name, column.databaseName)];\n            if (value === undefined || column.isVirtual)\n                return;\n            // if user does not selected the whole entity or he used partial selection and does not select this particular column\n            // then we don't add this column and its value into the entity\n            if (!this.expressionMap.selects.find((select) => select.selection === alias.name ||\n                select.selection ===\n                    alias.name + \".\" + column.propertyPath))\n                return;\n            column.setEntityValue(entity, this.driver.prepareHydratedValue(value, column));\n            if (value !== null)\n                // we don't mark it as has data because if we will have all nulls in our object - we don't need such object\n                hasData = true;\n        });\n        return hasData;\n    }\n    /**\n     * Transforms joined entities in the given raw results by a given alias and stores to the given (parent) entity\n     */\n    transformJoins(rawResults, entity, alias, metadata) {\n        let hasData = false;\n        // let discriminatorValue: string = \"\";\n        // if (metadata.discriminatorColumn)\n        //     discriminatorValue = rawResults[0][DriverUtils.buildAlias(this.connection.driver, alias.name, alias.metadata.discriminatorColumn!.databaseName)];\n        this.expressionMap.joinAttributes.forEach((join) => {\n            // todo: we have problem here - when inner joins are used without selects it still create empty array\n            // skip joins without metadata\n            if (!join.metadata)\n                return;\n            // if simple left or inner join was performed without selection then we don't need to do anything\n            if (!join.isSelected)\n                return;\n            // this check need to avoid setting properties than not belong to entity when single table inheritance used. (todo: check if we still need it)\n            // const metadata = metadata.childEntityMetadatas.find(childEntityMetadata => discriminatorValue === childEntityMetadata.discriminatorValue);\n            if (join.relation &&\n                !metadata.relations.find((relation) => relation === join.relation))\n                return;\n            // some checks to make sure this join is for current alias\n            if (join.mapToProperty) {\n                if (join.mapToPropertyParentAlias !== alias.name)\n                    return;\n            }\n            else {\n                if (!join.relation ||\n                    join.parentAlias !== alias.name ||\n                    join.relationPropertyPath !== join.relation.propertyPath)\n                    return;\n            }\n            // transform joined data into entities\n            let result = this.transform(rawResults, join.alias);\n            result = !join.isMany ? result[0] : result;\n            result = !join.isMany && result === undefined ? null : result; // this is needed to make relations to return null when its joined but nothing was found in the database\n            if (result === undefined)\n                // if nothing was joined then simply return\n                return;\n            // if join was mapped to some property then save result to that property\n            if (join.mapToPropertyPropertyName) {\n                entity[join.mapToPropertyPropertyName] = result; // todo: fix embeds\n            }\n            else {\n                // otherwise set to relation\n                join.relation.setEntityValue(entity, result);\n            }\n            hasData = true;\n        });\n        return hasData;\n    }\n    transformRelationIds(rawSqlResults, alias, entity, metadata) {\n        let hasData = false;\n        this.rawRelationIdResults.forEach((rawRelationIdResult, index) => {\n            if (rawRelationIdResult.relationIdAttribute.parentAlias !==\n                alias.name)\n                return;\n            const relation = rawRelationIdResult.relationIdAttribute.relation;\n            const valueMap = this.createValueMapFromJoinColumns(relation, rawRelationIdResult.relationIdAttribute.parentAlias, rawSqlResults);\n            if (valueMap === undefined || valueMap === null) {\n                return;\n            }\n            // prepare common data for this call\n            this.prepareDataForTransformRelationIds();\n            // Extract idMaps from prepared data by hash\n            const hash = this.hashEntityIds(relation, valueMap);\n            const idMaps = this.relationIdMaps[index][hash] || [];\n            // Map data to properties\n            const properties = rawRelationIdResult.relationIdAttribute.mapToPropertyPropertyPath.split(\".\");\n            const mapToProperty = (properties, map, value) => {\n                const property = properties.shift();\n                if (property && properties.length === 0) {\n                    map[property] = value;\n                    return map;\n                }\n                if (property && properties.length > 0) {\n                    mapToProperty(properties, map[property], value);\n                }\n                else {\n                    return map;\n                }\n            };\n            if (relation.isOneToOne || relation.isManyToOne) {\n                if (idMaps[0] !== undefined) {\n                    mapToProperty(properties, entity, idMaps[0]);\n                    hasData = true;\n                }\n            }\n            else {\n                mapToProperty(properties, entity, idMaps);\n                hasData = hasData || idMaps.length > 0;\n            }\n        });\n        return hasData;\n    }\n    transformRelationCounts(rawSqlResults, alias, entity) {\n        let hasData = false;\n        this.rawRelationCountResults\n            .filter((rawRelationCountResult) => rawRelationCountResult.relationCountAttribute\n            .parentAlias === alias.name)\n            .forEach((rawRelationCountResult) => {\n            const relation = rawRelationCountResult.relationCountAttribute.relation;\n            let referenceColumnName;\n            if (relation.isOneToMany) {\n                referenceColumnName =\n                    relation.inverseRelation.joinColumns[0]\n                        .referencedColumn.databaseName; // todo: fix joinColumns[0]\n            }\n            else {\n                referenceColumnName = relation.isOwning\n                    ? relation.joinColumns[0].referencedColumn.databaseName\n                    : relation.inverseRelation.joinColumns[0]\n                        .referencedColumn.databaseName;\n            }\n            const referenceColumnValue = rawSqlResults[0][DriverUtils.buildAlias(this.driver, undefined, alias.name, referenceColumnName)]; // we use zero index since its grouped data // todo: selection with alias for entity columns wont work\n            if (referenceColumnValue !== undefined &&\n                referenceColumnValue !== null) {\n                entity[rawRelationCountResult.relationCountAttribute.mapToPropertyPropertyName] = 0;\n                rawRelationCountResult.results\n                    .filter((result) => result[\"parentId\"] === referenceColumnValue)\n                    .forEach((result) => {\n                    entity[rawRelationCountResult.relationCountAttribute.mapToPropertyPropertyName] = parseInt(result[\"cnt\"]);\n                    hasData = true;\n                });\n            }\n        });\n        return hasData;\n    }\n    createValueMapFromJoinColumns(relation, parentAlias, rawSqlResults) {\n        let columns;\n        if (relation.isManyToOne || relation.isOneToOneOwner) {\n            columns = relation.entityMetadata.primaryColumns.map((joinColumn) => joinColumn);\n        }\n        else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n            columns = relation.inverseRelation.joinColumns.map((joinColumn) => joinColumn);\n        }\n        else {\n            if (relation.isOwning) {\n                columns = relation.joinColumns.map((joinColumn) => joinColumn);\n            }\n            else {\n                columns = relation.inverseRelation.inverseJoinColumns.map((joinColumn) => joinColumn);\n            }\n        }\n        return columns.reduce((valueMap, column) => {\n            rawSqlResults.forEach((rawSqlResult) => {\n                if (relation.isManyToOne || relation.isOneToOneOwner) {\n                    valueMap[column.databaseName] =\n                        this.driver.prepareHydratedValue(rawSqlResult[DriverUtils.buildAlias(this.driver, undefined, parentAlias, column.databaseName)], column);\n                }\n                else {\n                    valueMap[column.databaseName] =\n                        this.driver.prepareHydratedValue(rawSqlResult[DriverUtils.buildAlias(this.driver, undefined, parentAlias, column.referencedColumn.databaseName)], column.referencedColumn);\n                }\n            });\n            return valueMap;\n        }, {});\n    }\n    extractEntityPrimaryIds(relation, relationIdRawResult) {\n        let columns;\n        if (relation.isManyToOne || relation.isOneToOneOwner) {\n            columns = relation.entityMetadata.primaryColumns.map((joinColumn) => joinColumn);\n        }\n        else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n            columns = relation.inverseRelation.joinColumns.map((joinColumn) => joinColumn);\n        }\n        else {\n            if (relation.isOwning) {\n                columns = relation.joinColumns.map((joinColumn) => joinColumn);\n            }\n            else {\n                columns = relation.inverseRelation.inverseJoinColumns.map((joinColumn) => joinColumn);\n            }\n        }\n        return columns.reduce((data, column) => {\n            data[column.databaseName] = relationIdRawResult[column.databaseName];\n            return data;\n        }, {});\n    }\n    /*private removeVirtualColumns(entity: ObjectLiteral, alias: Alias) {\n        const virtualColumns = this.expressionMap.selects\n            .filter(select => select.virtual)\n            .map(select => select.selection.replace(alias.name + \".\", \"\"));\n\n        virtualColumns.forEach(virtualColumn => delete entity[virtualColumn]);\n    }*/\n    /** Prepare data to run #transformRelationIds, as a lot of result independent data is needed in every call */\n    prepareDataForTransformRelationIds() {\n        // Return early if the relationIdMaps were already calculated\n        if (this.relationIdMaps) {\n            return;\n        }\n        // Ensure this prepare function is only called once\n        this.relationIdMaps = this.rawRelationIdResults.map((rawRelationIdResult) => {\n            const relation = rawRelationIdResult.relationIdAttribute.relation;\n            // Calculate column metadata\n            let columns;\n            if (relation.isManyToOne || relation.isOneToOneOwner) {\n                columns = relation.joinColumns;\n            }\n            else if (relation.isOneToMany ||\n                relation.isOneToOneNotOwner) {\n                columns = relation.inverseEntityMetadata.primaryColumns;\n            }\n            else {\n                // ManyToMany\n                if (relation.isOwning) {\n                    columns = relation.inverseJoinColumns;\n                }\n                else {\n                    columns = relation.inverseRelation.joinColumns;\n                }\n            }\n            // Calculate the idMaps for the rawRelationIdResult\n            return rawRelationIdResult.results.reduce((agg, result) => {\n                let idMap = columns.reduce((idMap, column) => {\n                    let value = result[column.databaseName];\n                    if (relation.isOneToMany ||\n                        relation.isOneToOneNotOwner) {\n                        if (column.isVirtual &&\n                            column.referencedColumn &&\n                            column.referencedColumn.propertyName !==\n                                column.propertyName) {\n                            // if column is a relation\n                            value =\n                                column.referencedColumn.createValueMap(value);\n                        }\n                        return OrmUtils.mergeDeep(idMap, column.createValueMap(value));\n                    }\n                    if (!column.isPrimary &&\n                        column.referencedColumn.referencedColumn) {\n                        // if column is a relation\n                        value =\n                            column.referencedColumn.referencedColumn.createValueMap(value);\n                    }\n                    return OrmUtils.mergeDeep(idMap, column.referencedColumn.createValueMap(value));\n                }, {});\n                if (columns.length === 1 &&\n                    !rawRelationIdResult.relationIdAttribute.disableMixedMap) {\n                    if (relation.isOneToMany ||\n                        relation.isOneToOneNotOwner) {\n                        idMap = columns[0].getEntityValue(idMap);\n                    }\n                    else {\n                        idMap =\n                            columns[0].referencedColumn.getEntityValue(idMap);\n                    }\n                }\n                // If an idMap is found, set it in the aggregator under the correct hash\n                if (idMap !== undefined) {\n                    const hash = this.hashEntityIds(relation, result);\n                    if (agg[hash]) {\n                        agg[hash].push(idMap);\n                    }\n                    else {\n                        agg[hash] = [idMap];\n                    }\n                }\n                return agg;\n            }, {});\n        });\n    }\n    /**\n     * Use a simple JSON.stringify to create a simple hash of the primary ids of an entity.\n     * As this.extractEntityPrimaryIds always creates the primary id object in the same order, if the same relation is\n     * given, a simple JSON.stringify should be enough to get a unique hash per entity!\n     */\n    hashEntityIds(relation, data) {\n        const entityPrimaryIds = this.extractEntityPrimaryIds(relation, data);\n        return JSON.stringify(entityPrimaryIds);\n    }\n}\n\n//# sourceMappingURL=RawSqlResultsToEntityTransformer.js.map\n","import { DriverUtils } from \"../../driver/DriverUtils\";\nimport { TypeORMError } from \"../../error/TypeORMError\";\nimport { OrmUtils } from \"../../util/OrmUtils\";\nexport class RelationIdLoader {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(connection, queryRunner, relationIdAttributes) {\n        this.connection = connection;\n        this.queryRunner = queryRunner;\n        this.relationIdAttributes = relationIdAttributes;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    async load(rawEntities) {\n        const promises = this.relationIdAttributes.map(async (relationIdAttr) => {\n            if (relationIdAttr.relation.isManyToOne ||\n                relationIdAttr.relation.isOneToOneOwner) {\n                // example: Post and Tag\n                // loadRelationIdAndMap(\"post.tagId\", \"post.tag\")\n                // we expect it to load id of tag\n                if (relationIdAttr.queryBuilderFactory)\n                    throw new TypeORMError(\"Additional condition can not be used with ManyToOne or OneToOne owner relations.\");\n                const duplicates = {};\n                const results = rawEntities\n                    .map((rawEntity) => {\n                    const result = {};\n                    const duplicateParts = [];\n                    relationIdAttr.relation.joinColumns.forEach((joinColumn) => {\n                        result[joinColumn.databaseName] =\n                            this.connection.driver.prepareHydratedValue(rawEntity[DriverUtils.buildAlias(this.connection.driver, undefined, relationIdAttr.parentAlias, joinColumn.databaseName)], joinColumn.referencedColumn);\n                        const duplicatePart = `${joinColumn.databaseName}:${result[joinColumn.databaseName]}`;\n                        if (duplicateParts.indexOf(duplicatePart) === -1) {\n                            duplicateParts.push(duplicatePart);\n                        }\n                    });\n                    relationIdAttr.relation.entityMetadata.primaryColumns.forEach((primaryColumn) => {\n                        result[primaryColumn.databaseName] =\n                            this.connection.driver.prepareHydratedValue(rawEntity[DriverUtils.buildAlias(this.connection.driver, undefined, relationIdAttr.parentAlias, primaryColumn.databaseName)], primaryColumn);\n                        const duplicatePart = `${primaryColumn.databaseName}:${result[primaryColumn.databaseName]}`;\n                        if (duplicateParts.indexOf(duplicatePart) === -1) {\n                            duplicateParts.push(duplicatePart);\n                        }\n                    });\n                    duplicateParts.sort();\n                    const duplicate = duplicateParts.join(\"::\");\n                    if (duplicates[duplicate]) {\n                        return null;\n                    }\n                    duplicates[duplicate] = true;\n                    return result;\n                })\n                    .filter((v) => v);\n                return {\n                    relationIdAttribute: relationIdAttr,\n                    results: results,\n                };\n            }\n            else if (relationIdAttr.relation.isOneToMany ||\n                relationIdAttr.relation.isOneToOneNotOwner) {\n                // example: Post and Category\n                // loadRelationIdAndMap(\"post.categoryIds\", \"post.categories\")\n                // we expect it to load array of category ids\n                const relation = relationIdAttr.relation; // \"post.categories\"\n                const joinColumns = relation.isOwning\n                    ? relation.joinColumns\n                    : relation.inverseRelation.joinColumns;\n                const table = relation.inverseEntityMetadata.target; // category\n                const tableName = relation.inverseEntityMetadata.tableName; // category\n                const tableAlias = relationIdAttr.alias || tableName; // if condition (custom query builder factory) is set then relationIdAttr.alias defined\n                const duplicates = {};\n                const parameters = {};\n                const condition = rawEntities\n                    .map((rawEntity, index) => {\n                    const duplicateParts = [];\n                    const parameterParts = {};\n                    const queryPart = joinColumns\n                        .map((joinColumn) => {\n                        const parameterName = joinColumn.databaseName + index;\n                        const parameterValue = rawEntity[DriverUtils.buildAlias(this.connection.driver, undefined, relationIdAttr.parentAlias, joinColumn.referencedColumn\n                            .databaseName)];\n                        const duplicatePart = `${tableAlias}:${joinColumn.propertyPath}:${parameterValue}`;\n                        if (duplicateParts.indexOf(duplicatePart) !== -1) {\n                            return \"\";\n                        }\n                        duplicateParts.push(duplicatePart);\n                        parameterParts[parameterName] =\n                            parameterValue;\n                        return (tableAlias +\n                            \".\" +\n                            joinColumn.propertyPath +\n                            \" = :\" +\n                            parameterName);\n                    })\n                        .filter((v) => v)\n                        .join(\" AND \");\n                    duplicateParts.sort();\n                    const duplicate = duplicateParts.join(\"::\");\n                    if (duplicates[duplicate]) {\n                        return \"\";\n                    }\n                    duplicates[duplicate] = true;\n                    Object.assign(parameters, parameterParts);\n                    return queryPart;\n                })\n                    .filter((v) => v)\n                    .map((condition) => \"(\" + condition + \")\")\n                    .join(\" OR \");\n                // ensure we won't perform redundant queries for joined data which was not found in selection\n                // example: if post.category was not found in db then no need to execute query for category.imageIds\n                if (!condition)\n                    return {\n                        relationIdAttribute: relationIdAttr,\n                        results: [],\n                    };\n                // generate query:\n                // SELECT category.id, category.postId FROM category category ON category.postId = :postId\n                const qb = this.connection.createQueryBuilder(this.queryRunner);\n                const columns = OrmUtils.uniq([\n                    ...joinColumns,\n                    ...relation.inverseRelation.entityMetadata\n                        .primaryColumns,\n                ], (column) => column.propertyPath);\n                columns.forEach((joinColumn) => {\n                    qb.addSelect(tableAlias + \".\" + joinColumn.propertyPath, joinColumn.databaseName);\n                });\n                qb.from(table, tableAlias)\n                    .where(\"(\" + condition + \")\") // need brackets because if we have additional condition and no brackets, it looks like (a = 1) OR (a = 2) AND b = 1, that is incorrect\n                    .setParameters(parameters);\n                // apply condition (custom query builder factory)\n                if (relationIdAttr.queryBuilderFactory)\n                    relationIdAttr.queryBuilderFactory(qb);\n                const results = await qb.getRawMany();\n                results.forEach((result) => {\n                    joinColumns.forEach((column) => {\n                        result[column.databaseName] =\n                            this.connection.driver.prepareHydratedValue(result[column.databaseName], column.referencedColumn);\n                    });\n                    relation.inverseRelation.entityMetadata.primaryColumns.forEach((column) => {\n                        result[column.databaseName] =\n                            this.connection.driver.prepareHydratedValue(result[column.databaseName], column);\n                    });\n                });\n                return {\n                    relationIdAttribute: relationIdAttr,\n                    results,\n                };\n            }\n            else {\n                // many-to-many\n                // example: Post and Category\n                // owner side: loadRelationIdAndMap(\"post.categoryIds\", \"post.categories\")\n                // inverse side: loadRelationIdAndMap(\"category.postIds\", \"category.posts\")\n                // we expect it to load array of post ids\n                const relation = relationIdAttr.relation;\n                const joinColumns = relation.isOwning\n                    ? relation.joinColumns\n                    : relation.inverseRelation.inverseJoinColumns;\n                const inverseJoinColumns = relation.isOwning\n                    ? relation.inverseJoinColumns\n                    : relation.inverseRelation.joinColumns;\n                const junctionAlias = relationIdAttr.junctionAlias;\n                const inverseSideTableName = relationIdAttr.joinInverseSideMetadata.tableName;\n                const inverseSideTableAlias = relationIdAttr.alias || inverseSideTableName;\n                const junctionTableName = relation.isOwning\n                    ? relation.junctionEntityMetadata.tableName\n                    : relation.inverseRelation.junctionEntityMetadata\n                        .tableName;\n                const mappedColumns = rawEntities.map((rawEntity) => {\n                    return joinColumns.reduce((map, joinColumn) => {\n                        map[joinColumn.propertyPath] =\n                            rawEntity[DriverUtils.buildAlias(this.connection.driver, undefined, relationIdAttr.parentAlias, joinColumn.referencedColumn\n                                .databaseName)];\n                        return map;\n                    }, {});\n                });\n                // ensure we won't perform redundant queries for joined data which was not found in selection\n                // example: if post.category was not found in db then no need to execute query for category.imageIds\n                if (mappedColumns.length === 0)\n                    return {\n                        relationIdAttribute: relationIdAttr,\n                        results: [],\n                    };\n                const parameters = {};\n                const duplicates = {};\n                const joinColumnConditions = mappedColumns\n                    .map((mappedColumn, index) => {\n                    const duplicateParts = [];\n                    const parameterParts = {};\n                    const queryPart = Object.keys(mappedColumn)\n                        .map((key) => {\n                        const parameterName = key + index;\n                        const parameterValue = mappedColumn[key];\n                        const duplicatePart = `${junctionAlias}:${key}:${parameterValue}`;\n                        if (duplicateParts.indexOf(duplicatePart) !== -1) {\n                            return \"\";\n                        }\n                        duplicateParts.push(duplicatePart);\n                        parameterParts[parameterName] =\n                            parameterValue;\n                        return (junctionAlias +\n                            \".\" +\n                            key +\n                            \" = :\" +\n                            parameterName);\n                    })\n                        .filter((s) => s)\n                        .join(\" AND \");\n                    duplicateParts.sort();\n                    const duplicate = duplicateParts.join(\"::\");\n                    if (duplicates[duplicate]) {\n                        return \"\";\n                    }\n                    duplicates[duplicate] = true;\n                    Object.assign(parameters, parameterParts);\n                    return queryPart;\n                })\n                    .filter((s) => s);\n                const inverseJoinColumnCondition = inverseJoinColumns\n                    .map((joinColumn) => {\n                    return (junctionAlias +\n                        \".\" +\n                        joinColumn.propertyPath +\n                        \" = \" +\n                        inverseSideTableAlias +\n                        \".\" +\n                        joinColumn.referencedColumn.propertyPath);\n                })\n                    .join(\" AND \");\n                const condition = joinColumnConditions\n                    .map((condition) => {\n                    return (\"(\" +\n                        condition +\n                        \" AND \" +\n                        inverseJoinColumnCondition +\n                        \")\");\n                })\n                    .join(\" OR \");\n                const qb = this.connection.createQueryBuilder(this.queryRunner);\n                inverseJoinColumns.forEach((joinColumn) => {\n                    qb.addSelect(junctionAlias + \".\" + joinColumn.propertyPath, joinColumn.databaseName).addOrderBy(junctionAlias + \".\" + joinColumn.propertyPath);\n                });\n                joinColumns.forEach((joinColumn) => {\n                    qb.addSelect(junctionAlias + \".\" + joinColumn.propertyPath, joinColumn.databaseName).addOrderBy(junctionAlias + \".\" + joinColumn.propertyPath);\n                });\n                qb.from(inverseSideTableName, inverseSideTableAlias)\n                    .innerJoin(junctionTableName, junctionAlias, condition)\n                    .setParameters(parameters);\n                // apply condition (custom query builder factory)\n                if (relationIdAttr.queryBuilderFactory)\n                    relationIdAttr.queryBuilderFactory(qb);\n                const results = await qb.getRawMany();\n                results.forEach((result) => {\n                    ;\n                    [...joinColumns, ...inverseJoinColumns].forEach((column) => {\n                        result[column.databaseName] =\n                            this.connection.driver.prepareHydratedValue(result[column.databaseName], column.referencedColumn);\n                    });\n                });\n                return {\n                    relationIdAttribute: relationIdAttr,\n                    results,\n                };\n            }\n        });\n        return Promise.all(promises);\n    }\n}\n\n//# sourceMappingURL=RelationIdLoader.js.map\n","import { DriverUtils } from \"../driver/DriverUtils\";\n/**\n * Loads relation ids for the given entities.\n */\nexport class RelationIdLoader {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(connection, queryRunner) {\n        this.connection = connection;\n        this.queryRunner = queryRunner;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads relation ids of the given entity or entities.\n     */\n    load(relation, entityOrEntities, relatedEntityOrRelatedEntities) {\n        const entities = Array.isArray(entityOrEntities)\n            ? entityOrEntities\n            : [entityOrEntities];\n        const relatedEntities = Array.isArray(relatedEntityOrRelatedEntities)\n            ? relatedEntityOrRelatedEntities\n            : relatedEntityOrRelatedEntities\n                ? [relatedEntityOrRelatedEntities]\n                : undefined;\n        // load relation ids depend of relation type\n        if (relation.isManyToMany) {\n            return this.loadForManyToMany(relation, entities, relatedEntities);\n        }\n        else if (relation.isManyToOne || relation.isOneToOneOwner) {\n            return this.loadForManyToOneAndOneToOneOwner(relation, entities, relatedEntities);\n        }\n        else {\n            // if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n            return this.loadForOneToManyAndOneToOneNotOwner(relation, entities, relatedEntities);\n        }\n    }\n    /**\n     * Loads relation ids of the given entities and groups them into the object with parent and children.\n     *\n     * todo: extract this method?\n     */\n    async loadManyToManyRelationIdsAndGroup(relation, entitiesOrEntities, relatedEntityOrEntities, queryBuilder) {\n        // console.log(\"relation:\", relation.propertyName);\n        // console.log(\"entitiesOrEntities\", entitiesOrEntities);\n        const isMany = relation.isManyToMany || relation.isOneToMany;\n        const entities = Array.isArray(entitiesOrEntities)\n            ? entitiesOrEntities\n            : [entitiesOrEntities];\n        if (!relatedEntityOrEntities) {\n            relatedEntityOrEntities = await this.connection.relationLoader.load(relation, entitiesOrEntities, this.queryRunner, queryBuilder);\n            if (!relatedEntityOrEntities.length)\n                return entities.map((entity) => ({\n                    entity: entity,\n                    related: isMany ? [] : undefined,\n                }));\n        }\n        // const relationIds = await this.load(relation, relatedEntityOrEntities!, entitiesOrEntities);\n        const relationIds = await this.load(relation, entitiesOrEntities, relatedEntityOrEntities);\n        // console.log(\"entities\", entities);\n        // console.log(\"relatedEntityOrEntities\", relatedEntityOrEntities);\n        // console.log(\"relationIds\", relationIds);\n        const relatedEntities = Array.isArray(relatedEntityOrEntities)\n            ? relatedEntityOrEntities\n            : [relatedEntityOrEntities];\n        let columns = [], inverseColumns = [];\n        if (relation.isManyToManyOwner) {\n            columns = relation.junctionEntityMetadata.inverseColumns.map((column) => column.referencedColumn);\n            inverseColumns = relation.junctionEntityMetadata.ownerColumns.map((column) => column.referencedColumn);\n        }\n        else if (relation.isManyToManyNotOwner) {\n            columns = relation.junctionEntityMetadata.ownerColumns.map((column) => column.referencedColumn);\n            inverseColumns =\n                relation.junctionEntityMetadata.inverseColumns.map((column) => column.referencedColumn);\n        }\n        else if (relation.isManyToOne || relation.isOneToOneOwner) {\n            columns = relation.joinColumns.map((column) => column.referencedColumn);\n            inverseColumns = relation.entityMetadata.primaryColumns;\n        }\n        else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n            columns = relation.inverseRelation.entityMetadata.primaryColumns;\n            inverseColumns = relation.inverseRelation.joinColumns.map((column) => column.referencedColumn);\n        }\n        else {\n        }\n        return entities.map((entity) => {\n            const group = {\n                entity: entity,\n                related: isMany ? [] : undefined,\n            };\n            const entityRelationIds = relationIds.filter((relationId) => {\n                return inverseColumns.every((column) => {\n                    return column.compareEntityValue(entity, relationId[column.entityMetadata.name +\n                        \"_\" +\n                        column.propertyAliasName]);\n                });\n            });\n            if (!entityRelationIds.length)\n                return group;\n            relatedEntities.forEach((relatedEntity) => {\n                entityRelationIds.forEach((relationId) => {\n                    const relatedEntityMatched = columns.every((column) => {\n                        return column.compareEntityValue(relatedEntity, relationId[DriverUtils.buildAlias(this.connection.driver, undefined, column.entityMetadata.name +\n                            \"_\" +\n                            relation.propertyPath.replace(\".\", \"_\") +\n                            \"_\" +\n                            column.propertyPath.replace(\".\", \"_\"))]);\n                    });\n                    if (relatedEntityMatched) {\n                        if (isMany) {\n                            ;\n                            group.related.push(relatedEntity);\n                        }\n                        else {\n                            group.related = relatedEntity;\n                        }\n                    }\n                });\n            });\n            return group;\n        });\n    }\n    /**\n     * Loads relation ids of the given entities and maps them into the given entity property.\n     async loadManyToManyRelationIdsAndMap(\n     relation: RelationMetadata,\n     entityOrEntities: ObjectLiteral|ObjectLiteral[],\n     mapToEntityOrEntities: ObjectLiteral|ObjectLiteral[],\n     propertyName: string\n     ): Promise<void> {\n        const relationIds = await this.loadManyToManyRelationIds(relation, entityOrEntities, mapToEntityOrEntities);\n        const mapToEntities = mapToEntityOrEntities instanceof Array ? mapToEntityOrEntities : [mapToEntityOrEntities];\n        const junctionMetadata = relation.junctionEntityMetadata!;\n        const mainAlias = junctionMetadata.name;\n        const columns = relation.isOwning ? junctionMetadata.inverseColumns : junctionMetadata.ownerColumns;\n        const inverseColumns = relation.isOwning ? junctionMetadata.ownerColumns : junctionMetadata.inverseColumns;\n        mapToEntities.forEach(mapToEntity => {\n            mapToEntity[propertyName] = [];\n            relationIds.forEach(relationId => {\n                const match = inverseColumns.every(column => {\n                    return column.referencedColumn!.getEntityValue(mapToEntity) === relationId[mainAlias + \"_\" + column.propertyName];\n                });\n                if (match) {\n                    if (columns.length === 1) {\n                        mapToEntity[propertyName].push(relationId[mainAlias + \"_\" + columns[0].propertyName]);\n                    } else {\n                        const value = {};\n                        columns.forEach(column => {\n                            column.referencedColumn!.setEntityValue(value, relationId[mainAlias + \"_\" + column.propertyName]);\n                        });\n                        mapToEntity[propertyName].push(value);\n                    }\n                }\n            });\n        });\n    }*/\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads relation ids for the many-to-many relation.\n     */\n    loadForManyToMany(relation, entities, relatedEntities) {\n        const junctionMetadata = relation.junctionEntityMetadata;\n        const mainAlias = junctionMetadata.name;\n        const columns = relation.isOwning\n            ? junctionMetadata.ownerColumns\n            : junctionMetadata.inverseColumns;\n        const inverseColumns = relation.isOwning\n            ? junctionMetadata.inverseColumns\n            : junctionMetadata.ownerColumns;\n        const qb = this.connection.createQueryBuilder(this.queryRunner);\n        // select all columns from junction table\n        columns.forEach((column) => {\n            const columnName = DriverUtils.buildAlias(this.connection.driver, undefined, column.referencedColumn.entityMetadata.name +\n                \"_\" +\n                column.referencedColumn.propertyPath.replace(\".\", \"_\"));\n            qb.addSelect(mainAlias + \".\" + column.propertyPath, columnName);\n        });\n        inverseColumns.forEach((column) => {\n            const columnName = DriverUtils.buildAlias(this.connection.driver, undefined, column.referencedColumn.entityMetadata.name +\n                \"_\" +\n                relation.propertyPath.replace(\".\", \"_\") +\n                \"_\" +\n                column.referencedColumn.propertyPath.replace(\".\", \"_\"));\n            qb.addSelect(mainAlias + \".\" + column.propertyPath, columnName);\n        });\n        // add conditions for the given entities\n        let condition1 = \"\";\n        if (columns.length === 1) {\n            const values = entities.map((entity) => columns[0].referencedColumn.getEntityValue(entity));\n            const areAllNumbers = values.every((value) => typeof value === \"number\");\n            if (areAllNumbers) {\n                condition1 = `${mainAlias}.${columns[0].propertyPath} IN (${values.join(\", \")})`;\n            }\n            else {\n                qb.setParameter(\"values1\", values);\n                condition1 =\n                    mainAlias +\n                        \".\" +\n                        columns[0].propertyPath +\n                        \" IN (:...values1)\"; // todo: use ANY for postgres\n            }\n        }\n        else {\n            condition1 =\n                \"(\" +\n                    entities\n                        .map((entity, entityIndex) => {\n                        return columns\n                            .map((column) => {\n                            const paramName = \"entity1_\" +\n                                entityIndex +\n                                \"_\" +\n                                column.propertyName;\n                            qb.setParameter(paramName, column.referencedColumn.getEntityValue(entity));\n                            return (mainAlias +\n                                \".\" +\n                                column.propertyPath +\n                                \" = :\" +\n                                paramName);\n                        })\n                            .join(\" AND \");\n                    })\n                        .map((condition) => \"(\" + condition + \")\")\n                        .join(\" OR \") +\n                    \")\";\n        }\n        // add conditions for the given inverse entities\n        let condition2 = \"\";\n        if (relatedEntities) {\n            if (inverseColumns.length === 1) {\n                const values = relatedEntities.map((entity) => inverseColumns[0].referencedColumn.getEntityValue(entity));\n                const areAllNumbers = values.every((value) => typeof value === \"number\");\n                if (areAllNumbers) {\n                    condition2 = `${mainAlias}.${inverseColumns[0].propertyPath} IN (${values.join(\", \")})`;\n                }\n                else {\n                    qb.setParameter(\"values2\", values);\n                    condition2 =\n                        mainAlias +\n                            \".\" +\n                            inverseColumns[0].propertyPath +\n                            \" IN (:...values2)\"; // todo: use ANY for postgres\n                }\n            }\n            else {\n                condition2 =\n                    \"(\" +\n                        relatedEntities\n                            .map((entity, entityIndex) => {\n                            return inverseColumns\n                                .map((column) => {\n                                const paramName = \"entity2_\" +\n                                    entityIndex +\n                                    \"_\" +\n                                    column.propertyName;\n                                qb.setParameter(paramName, column.referencedColumn.getEntityValue(entity));\n                                return (mainAlias +\n                                    \".\" +\n                                    column.propertyPath +\n                                    \" = :\" +\n                                    paramName);\n                            })\n                                .join(\" AND \");\n                        })\n                            .map((condition) => \"(\" + condition + \")\")\n                            .join(\" OR \") +\n                        \")\";\n            }\n        }\n        // qb.from(junctionMetadata.target, mainAlias)\n        //     .where(condition1 + (condition2 ? \" AND \" + condition2 : \"\"));\n        //\n        // // execute query\n        // const { values1, values2 } = qb.getParameters();\n        // console.log(`I can do it`, { values1, values2 });\n        // if (inverseColumns.length === 1 &&\n        //     columns.length === 1 &&\n        //     this.connection.driver instanceof SqliteDriver &&\n        //     (values1.length + values2.length) > 500 &&\n        //     values1.length === values2.length) {\n        //     console.log(`I can do it`);\n        //     return qb.getRawMany();\n        //\n        // } else {\n        //     return qb.getRawMany();\n        // }\n        // execute query\n        const condition = [condition1, condition2]\n            .filter((v) => v.length > 0)\n            .join(\" AND \");\n        return qb\n            .from(junctionMetadata.target, mainAlias)\n            .where(condition)\n            .getRawMany();\n    }\n    /**\n     * Loads relation ids for the many-to-one and one-to-one owner relations.\n     */\n    loadForManyToOneAndOneToOneOwner(relation, entities, relatedEntities) {\n        const mainAlias = relation.entityMetadata.targetName;\n        // console.log(\"entitiesx\", entities);\n        // console.log(\"relatedEntitiesx\", relatedEntities);\n        const hasAllJoinColumnsInEntity = relation.joinColumns.every((joinColumn) => {\n            return !!relation.entityMetadata.nonVirtualColumns.find((column) => column === joinColumn);\n        });\n        if (relatedEntities && hasAllJoinColumnsInEntity) {\n            let relationIdMaps = [];\n            entities.forEach((entity) => {\n                let relationIdMap = {};\n                relation.entityMetadata.primaryColumns.forEach((primaryColumn) => {\n                    const key = primaryColumn.entityMetadata.name +\n                        \"_\" +\n                        primaryColumn.propertyPath.replace(\".\", \"_\");\n                    relationIdMap[key] =\n                        primaryColumn.getEntityValue(entity);\n                });\n                relatedEntities.forEach((relatedEntity) => {\n                    relation.joinColumns.forEach((joinColumn) => {\n                        const entityColumnValue = joinColumn.getEntityValue(entity);\n                        const relatedEntityColumnValue = joinColumn.referencedColumn.getEntityValue(relatedEntity);\n                        if (entityColumnValue === undefined ||\n                            relatedEntityColumnValue === undefined)\n                            return;\n                        if (entityColumnValue === relatedEntityColumnValue) {\n                            const key = joinColumn.referencedColumn.entityMetadata\n                                .name +\n                                \"_\" +\n                                relation.propertyPath.replace(\".\", \"_\") +\n                                \"_\" +\n                                joinColumn.referencedColumn.propertyPath.replace(\".\", \"_\");\n                            relationIdMap[key] = relatedEntityColumnValue;\n                        }\n                    });\n                });\n                if (Object.keys(relationIdMap).length ===\n                    relation.entityMetadata.primaryColumns.length +\n                        relation.joinColumns.length) {\n                    relationIdMaps.push(relationIdMap);\n                }\n            });\n            // console.log(\"relationIdMap\", relationIdMaps);\n            // console.log(\"entities.length\", entities.length);\n            if (relationIdMaps.length === entities.length)\n                return Promise.resolve(relationIdMaps);\n        }\n        // select all columns we need\n        const qb = this.connection.createQueryBuilder(this.queryRunner);\n        relation.entityMetadata.primaryColumns.forEach((primaryColumn) => {\n            const columnName = DriverUtils.buildAlias(this.connection.driver, undefined, primaryColumn.entityMetadata.name +\n                \"_\" +\n                primaryColumn.propertyPath.replace(\".\", \"_\"));\n            qb.addSelect(mainAlias + \".\" + primaryColumn.propertyPath, columnName);\n        });\n        relation.joinColumns.forEach((column) => {\n            const columnName = DriverUtils.buildAlias(this.connection.driver, undefined, column.referencedColumn.entityMetadata.name +\n                \"_\" +\n                relation.propertyPath.replace(\".\", \"_\") +\n                \"_\" +\n                column.referencedColumn.propertyPath.replace(\".\", \"_\"));\n            qb.addSelect(mainAlias + \".\" + column.propertyPath, columnName);\n        });\n        // add condition for entities\n        let condition = \"\";\n        if (relation.entityMetadata.primaryColumns.length === 1) {\n            const values = entities.map((entity) => relation.entityMetadata.primaryColumns[0].getEntityValue(entity));\n            const areAllNumbers = values.every((value) => typeof value === \"number\");\n            if (areAllNumbers) {\n                condition = `${mainAlias}.${relation.entityMetadata.primaryColumns[0].propertyPath} IN (${values.join(\", \")})`;\n            }\n            else {\n                qb.setParameter(\"values\", values);\n                condition =\n                    mainAlias +\n                        \".\" +\n                        relation.entityMetadata.primaryColumns[0].propertyPath +\n                        \" IN (:...values)\"; // todo: use ANY for postgres\n            }\n        }\n        else {\n            condition = entities\n                .map((entity, entityIndex) => {\n                return relation.entityMetadata.primaryColumns\n                    .map((column, columnIndex) => {\n                    const paramName = \"entity\" + entityIndex + \"_\" + columnIndex;\n                    qb.setParameter(paramName, column.getEntityValue(entity));\n                    return (mainAlias +\n                        \".\" +\n                        column.propertyPath +\n                        \" = :\" +\n                        paramName);\n                })\n                    .join(\" AND \");\n            })\n                .map((condition) => \"(\" + condition + \")\")\n                .join(\" OR \");\n        }\n        // execute query\n        return qb\n            .from(relation.entityMetadata.target, mainAlias)\n            .where(condition)\n            .getRawMany();\n    }\n    /**\n     * Loads relation ids for the one-to-many and one-to-one not owner relations.\n     */\n    loadForOneToManyAndOneToOneNotOwner(relation, entities, relatedEntities) {\n        relation = relation.inverseRelation;\n        if (relation.entityMetadata.primaryColumns.length ===\n            relation.joinColumns.length) {\n            const sameReferencedColumns = relation.entityMetadata.primaryColumns.every((column) => {\n                return relation.joinColumns.indexOf(column) !== -1;\n            });\n            if (sameReferencedColumns) {\n                return Promise.resolve(entities.map((entity) => {\n                    const result = {};\n                    relation.joinColumns.forEach(function (joinColumn) {\n                        const value = joinColumn.referencedColumn.getEntityValue(entity);\n                        const joinColumnName = joinColumn.referencedColumn.entityMetadata\n                            .name +\n                            \"_\" +\n                            joinColumn.referencedColumn.propertyPath.replace(\".\", \"_\");\n                        const primaryColumnName = joinColumn.entityMetadata.name +\n                            \"_\" +\n                            relation.inverseRelation.propertyPath.replace(\".\", \"_\") +\n                            \"_\" +\n                            joinColumn.propertyPath.replace(\".\", \"_\");\n                        result[joinColumnName] = value;\n                        result[primaryColumnName] = value;\n                    });\n                    return result;\n                }));\n            }\n        }\n        const mainAlias = relation.entityMetadata.targetName;\n        // select all columns we need\n        const qb = this.connection.createQueryBuilder(this.queryRunner);\n        relation.entityMetadata.primaryColumns.forEach((primaryColumn) => {\n            const columnName = DriverUtils.buildAlias(this.connection.driver, undefined, primaryColumn.entityMetadata.name +\n                \"_\" +\n                relation.inverseRelation.propertyPath.replace(\".\", \"_\") +\n                \"_\" +\n                primaryColumn.propertyPath.replace(\".\", \"_\"));\n            qb.addSelect(mainAlias + \".\" + primaryColumn.propertyPath, columnName);\n        });\n        relation.joinColumns.forEach((column) => {\n            const columnName = DriverUtils.buildAlias(this.connection.driver, undefined, column.referencedColumn.entityMetadata.name +\n                \"_\" +\n                column.referencedColumn.propertyPath.replace(\".\", \"_\"));\n            qb.addSelect(mainAlias + \".\" + column.propertyPath, columnName);\n        });\n        // add condition for entities\n        let condition = \"\";\n        if (relation.joinColumns.length === 1) {\n            const values = entities.map((entity) => relation.joinColumns[0].referencedColumn.getEntityValue(entity));\n            const areAllNumbers = values.every((value) => typeof value === \"number\");\n            if (areAllNumbers) {\n                condition = `${mainAlias}.${relation.joinColumns[0].propertyPath} IN (${values.join(\", \")})`;\n            }\n            else {\n                qb.setParameter(\"values\", values);\n                condition =\n                    mainAlias +\n                        \".\" +\n                        relation.joinColumns[0].propertyPath +\n                        \" IN (:...values)\"; // todo: use ANY for postgres\n            }\n        }\n        else {\n            condition = entities\n                .map((entity, entityIndex) => {\n                return relation.joinColumns\n                    .map((joinColumn, joinColumnIndex) => {\n                    const paramName = \"entity\" + entityIndex + \"_\" + joinColumnIndex;\n                    qb.setParameter(paramName, joinColumn.referencedColumn.getEntityValue(entity));\n                    return (mainAlias +\n                        \".\" +\n                        joinColumn.propertyPath +\n                        \" = :\" +\n                        paramName);\n                })\n                    .join(\" AND \");\n            })\n                .map((condition) => \"(\" + condition + \")\")\n                .join(\" OR \");\n        }\n        // execute query\n        return qb\n            .from(relation.entityMetadata.target, mainAlias)\n            .where(condition)\n            .getRawMany();\n    }\n}\n\n//# sourceMappingURL=RelationIdLoader.js.map\n","import { RelationIdAttribute } from \"./RelationIdAttribute\";\nexport class RelationIdMetadataToAttributeTransformer {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(expressionMap) {\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    transform() {\n        // by example:\n        // post has relation id:\n        // @RelationId(post => post.categories) categoryIds\n        // category has relation id\n        // @RelationId(category => category.images) imageIds\n        // we load post and join category\n        // we expect post.categoryIds and post.category.imageIds to have relation ids\n        // first create relation id attributes for all relation id metadatas of the main selected object (post from example)\n        if (this.expressionMap.mainAlias) {\n            this.expressionMap.mainAlias.metadata.relationIds.forEach((relationId) => {\n                const attribute = this.metadataToAttribute(this.expressionMap.mainAlias.name, relationId);\n                this.expressionMap.relationIdAttributes.push(attribute);\n            });\n        }\n        // second create relation id attributes for all relation id metadatas of all joined objects (category from example)\n        this.expressionMap.joinAttributes.forEach((join) => {\n            // ensure this join has a metadata, because relation id can only work for real orm entities\n            if (!join.metadata || join.metadata.isJunction)\n                return;\n            join.metadata.relationIds.forEach((relationId) => {\n                const attribute = this.metadataToAttribute(join.alias.name, relationId);\n                this.expressionMap.relationIdAttributes.push(attribute);\n            });\n        });\n    }\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    metadataToAttribute(parentAliasName, relationId) {\n        return new RelationIdAttribute(this.expressionMap, {\n            relationName: parentAliasName + \".\" + relationId.relation.propertyName, // category.images\n            mapToProperty: parentAliasName + \".\" + relationId.propertyName, // category.imageIds\n            alias: relationId.alias,\n            queryBuilderFactory: relationId.queryBuilderFactory,\n        });\n    }\n}\n\n//# sourceMappingURL=RelationIdMetadataToAttributeTransformer.js.map\n","export class RelationCountLoader {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(connection, queryRunner, relationCountAttributes) {\n        this.connection = connection;\n        this.queryRunner = queryRunner;\n        this.relationCountAttributes = relationCountAttributes;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    async load(rawEntities) {\n        const onlyUnique = (value, index, self) => {\n            return self.indexOf(value) === index;\n        };\n        const promises = this.relationCountAttributes.map(async (relationCountAttr) => {\n            if (relationCountAttr.relation.isOneToMany) {\n                // example: Post and Category\n                // loadRelationCountAndMap(\"post.categoryCount\", \"post.categories\")\n                // we expect it to load array of post ids\n                // todo(dima): fix issues wit multiple primary keys and remove joinColumns[0]\n                const relation = relationCountAttr.relation; // \"category.posts\"\n                const inverseRelation = relation.inverseRelation; // \"post.category\"\n                const referenceColumnName = inverseRelation.joinColumns[0].referencedColumn\n                    .propertyName; // post id\n                const inverseSideTable = relation.inverseEntityMetadata.target; // Post\n                const inverseSideTableName = relation.inverseEntityMetadata.tableName; // post\n                const inverseSideTableAlias = relationCountAttr.alias || inverseSideTableName; // if condition (custom query builder factory) is set then relationIdAttr.alias defined\n                const inverseSidePropertyName = inverseRelation.propertyName; // \"category\" from \"post.category\"\n                let referenceColumnValues = rawEntities\n                    .map((rawEntity) => rawEntity[relationCountAttr.parentAlias +\n                    \"_\" +\n                    referenceColumnName])\n                    .filter((value) => !!value);\n                referenceColumnValues =\n                    referenceColumnValues.filter(onlyUnique);\n                // ensure we won't perform redundant queries for joined data which was not found in selection\n                // example: if post.category was not found in db then no need to execute query for category.imageIds\n                if (referenceColumnValues.length === 0)\n                    return {\n                        relationCountAttribute: relationCountAttr,\n                        results: [],\n                    };\n                // generate query:\n                // SELECT category.post as parentId, COUNT(*) AS cnt FROM category category WHERE category.post IN (1, 2) GROUP BY category.post\n                const qb = this.connection.createQueryBuilder(this.queryRunner);\n                qb.select(inverseSideTableAlias + \".\" + inverseSidePropertyName, \"parentId\")\n                    .addSelect(\"COUNT(*)\", \"cnt\")\n                    .from(inverseSideTable, inverseSideTableAlias)\n                    .where(inverseSideTableAlias +\n                    \".\" +\n                    inverseSidePropertyName +\n                    \" IN (:...ids)\")\n                    .addGroupBy(inverseSideTableAlias +\n                    \".\" +\n                    inverseSidePropertyName)\n                    .setParameter(\"ids\", referenceColumnValues);\n                // apply condition (custom query builder factory)\n                if (relationCountAttr.queryBuilderFactory)\n                    relationCountAttr.queryBuilderFactory(qb);\n                return {\n                    relationCountAttribute: relationCountAttr,\n                    results: await qb.getRawMany(),\n                };\n            }\n            else {\n                // example: Post and Category\n                // owner side: loadRelationIdAndMap(\"post.categoryIds\", \"post.categories\")\n                // inverse side: loadRelationIdAndMap(\"category.postIds\", \"category.posts\")\n                // we expect it to load array of post ids\n                let joinTableColumnName;\n                let inverseJoinColumnName;\n                let firstJunctionColumn;\n                let secondJunctionColumn;\n                if (relationCountAttr.relation.isOwning) {\n                    // todo fix joinColumns[0] and inverseJoinColumns[0].\n                    joinTableColumnName =\n                        relationCountAttr.relation.joinColumns[0]\n                            .referencedColumn.databaseName;\n                    inverseJoinColumnName =\n                        relationCountAttr.relation.inverseJoinColumns[0]\n                            .referencedColumn.databaseName;\n                    firstJunctionColumn =\n                        relationCountAttr.relation.junctionEntityMetadata\n                            .columns[0];\n                    secondJunctionColumn =\n                        relationCountAttr.relation.junctionEntityMetadata\n                            .columns[1];\n                }\n                else {\n                    joinTableColumnName =\n                        relationCountAttr.relation.inverseRelation\n                            .inverseJoinColumns[0].referencedColumn\n                            .databaseName;\n                    inverseJoinColumnName =\n                        relationCountAttr.relation.inverseRelation\n                            .joinColumns[0].referencedColumn.databaseName;\n                    firstJunctionColumn =\n                        relationCountAttr.relation.junctionEntityMetadata\n                            .columns[1];\n                    secondJunctionColumn =\n                        relationCountAttr.relation.junctionEntityMetadata\n                            .columns[0];\n                }\n                let referenceColumnValues = rawEntities\n                    .map((rawEntity) => rawEntity[relationCountAttr.parentAlias +\n                    \"_\" +\n                    joinTableColumnName])\n                    .filter((value) => !!value);\n                referenceColumnValues =\n                    referenceColumnValues.filter(onlyUnique);\n                // ensure we won't perform redundant queries for joined data which was not found in selection\n                // example: if post.category was not found in db then no need to execute query for category.imageIds\n                if (referenceColumnValues.length === 0)\n                    return {\n                        relationCountAttribute: relationCountAttr,\n                        results: [],\n                    };\n                const junctionAlias = relationCountAttr.junctionAlias;\n                const inverseSideTableName = relationCountAttr.joinInverseSideMetadata.tableName;\n                const inverseSideTableAlias = relationCountAttr.alias || inverseSideTableName;\n                const junctionTableName = relationCountAttr.relation.junctionEntityMetadata\n                    .tableName;\n                const condition = junctionAlias +\n                    \".\" +\n                    firstJunctionColumn.propertyName +\n                    \" IN (\" +\n                    referenceColumnValues.map((vals) => isNaN(vals) ? \"'\" + vals + \"'\" : vals) +\n                    \")\" +\n                    \" AND \" +\n                    junctionAlias +\n                    \".\" +\n                    secondJunctionColumn.propertyName +\n                    \" = \" +\n                    inverseSideTableAlias +\n                    \".\" +\n                    inverseJoinColumnName;\n                const qb = this.connection.createQueryBuilder(this.queryRunner);\n                qb.select(junctionAlias + \".\" + firstJunctionColumn.propertyName, \"parentId\")\n                    .addSelect(\"COUNT(\" +\n                    qb.escape(inverseSideTableAlias) +\n                    \".\" +\n                    qb.escape(inverseJoinColumnName) +\n                    \")\", \"cnt\")\n                    .from(inverseSideTableName, inverseSideTableAlias)\n                    .innerJoin(junctionTableName, junctionAlias, condition)\n                    .addGroupBy(junctionAlias +\n                    \".\" +\n                    firstJunctionColumn.propertyName);\n                // apply condition (custom query builder factory)\n                if (relationCountAttr.queryBuilderFactory)\n                    relationCountAttr.queryBuilderFactory(qb);\n                return {\n                    relationCountAttribute: relationCountAttr,\n                    results: await qb.getRawMany(),\n                };\n            }\n        });\n        return Promise.all(promises);\n    }\n}\n\n//# sourceMappingURL=RelationCountLoader.js.map\n","import { RelationCountAttribute } from \"./RelationCountAttribute\";\nexport class RelationCountMetadataToAttributeTransformer {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(expressionMap) {\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    transform() {\n        // by example:\n        // post has relation count:\n        // @RelationCount(post => post.categories) categoryCount\n        // category has relation count\n        // @RelationCount(category => category.images) imageCount\n        // we load post and join category\n        // we expect post.categoryCount and post.category.imageCount to have relation counts\n        // first create relation count attributes for all relation count metadatas of the main selected object (post from example)\n        if (this.expressionMap.mainAlias) {\n            this.expressionMap.mainAlias.metadata.relationCounts.forEach((relationCount) => {\n                const attribute = this.metadataToAttribute(this.expressionMap.mainAlias.name, relationCount);\n                this.expressionMap.relationCountAttributes.push(attribute);\n            });\n        }\n        // second create relation count attributes for all relation count metadatas of all joined objects (category from example)\n        this.expressionMap.joinAttributes.forEach((join) => {\n            // ensure this join has a metadata, because relation count can only work for real orm entities\n            if (!join.metadata || join.metadata.isJunction)\n                return;\n            join.metadata.relationCounts.forEach((relationCount) => {\n                const attribute = this.metadataToAttribute(join.alias.name, relationCount);\n                this.expressionMap.relationCountAttributes.push(attribute);\n            });\n        });\n    }\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    metadataToAttribute(parentAliasName, relationCount) {\n        return new RelationCountAttribute(this.expressionMap, {\n            relationName: parentAliasName + \".\" + relationCount.relation.propertyName, // category.images\n            mapToProperty: parentAliasName + \".\" + relationCount.propertyName, // category.imageIds\n            alias: relationCount.alias,\n            queryBuilderFactory: relationCount.queryBuilderFactory,\n        });\n    }\n}\n\n//# sourceMappingURL=RelationCountMetadataToAttributeTransformer.js.map\n","import { FindRelationsNotFoundError } from \"../error\";\nimport { DriverUtils } from \"../driver/DriverUtils\";\nimport { EntityPropertyNotFoundError } from \"../error\";\n/**\n * Utilities to work with FindOptions.\n */\nexport class FindOptionsUtils {\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Checks if given object is really instance of FindOneOptions interface.\n     */\n    static isFindOneOptions(obj) {\n        const possibleOptions = obj;\n        return (possibleOptions &&\n            (Array.isArray(possibleOptions.select) ||\n                Array.isArray(possibleOptions.relations) ||\n                typeof possibleOptions.select === \"object\" ||\n                typeof possibleOptions.relations === \"object\" ||\n                typeof possibleOptions.where === \"object\" ||\n                // typeof possibleOptions.where === \"string\" ||\n                typeof possibleOptions.join === \"object\" ||\n                typeof possibleOptions.order === \"object\" ||\n                typeof possibleOptions.cache === \"object\" ||\n                typeof possibleOptions.cache === \"boolean\" ||\n                typeof possibleOptions.cache === \"number\" ||\n                typeof possibleOptions.comment === \"string\" ||\n                typeof possibleOptions.lock === \"object\" ||\n                typeof possibleOptions.loadRelationIds === \"object\" ||\n                typeof possibleOptions.loadRelationIds === \"boolean\" ||\n                typeof possibleOptions.loadEagerRelations === \"boolean\" ||\n                typeof possibleOptions.withDeleted === \"boolean\" ||\n                typeof possibleOptions.relationLoadStrategy === \"string\" ||\n                typeof possibleOptions.transaction === \"boolean\"));\n    }\n    /**\n     * Checks if given object is really instance of FindManyOptions interface.\n     */\n    static isFindManyOptions(obj) {\n        const possibleOptions = obj;\n        return (possibleOptions &&\n            (this.isFindOneOptions(possibleOptions) ||\n                typeof possibleOptions.skip ===\n                    \"number\" ||\n                typeof possibleOptions.take ===\n                    \"number\" ||\n                typeof possibleOptions.skip ===\n                    \"string\" ||\n                typeof possibleOptions.take ===\n                    \"string\"));\n    }\n    /**\n     * Checks if given object is really instance of FindOptions interface.\n     */\n    static extractFindManyOptionsAlias(object) {\n        if (this.isFindManyOptions(object) && object.join)\n            return object.join.alias;\n        return undefined;\n    }\n    /**\n     * Applies give find many options to the given query builder.\n\n    static applyFindManyOptionsOrConditionsToQueryBuilder<T>(qb: SelectQueryBuilder<T>, options: FindManyOptions<T>|Partial<T>|undefined): SelectQueryBuilder<T> {\n        if (this.isFindManyOptions(options))\n            return this.applyOptionsToQueryBuilder(qb, options);\n\n        if (options)\n            return qb.where(options);\n\n        return qb;\n    }*/\n    /**\n     * Applies give find options to the given query builder.\n\n    static applyOptionsToQueryBuilder<T>(qb: SelectQueryBuilder<T>, options: FindOneOptions<T>|FindManyOptions<T>|undefined): SelectQueryBuilder<T> {\n\n        // if options are not set then simply return query builder. This is made for simplicity of usage.\n        if (!options || (!this.isFindOneOptions(options) && !this.isFindManyOptions(options)))\n            return qb;\n\n        if (options.transaction === true) {\n            qb.expressionMap.useTransaction = true;\n        }\n\n        if (!qb.expressionMap.mainAlias || !qb.expressionMap.mainAlias.hasMetadata)\n            return qb;\n\n        const metadata = qb.expressionMap.mainAlias!.metadata;\n\n        // apply all options from FindOptions\n        if (options.comment) {\n            qb.comment(options.comment);\n        }\n\n        if (options.withDeleted) {\n            qb.withDeleted();\n        }\n\n        if (options.select) {\n            qb.select([]);\n            options.select.forEach(select => {\n                if (!metadata.hasColumnWithPropertyPath(`${select}`))\n                    throw new TypeORMError(`${select} column was not found in the ${metadata.name} entity.`);\n\n                const columns = metadata.findColumnsWithPropertyPath(`${select}`);\n\n                for (const column of columns) {\n                    qb.addSelect(qb.alias + \".\" + column.propertyPath);\n                }\n            });\n        }\n\n        if (options.relations) {\n            // Copy because `applyRelationsRecursively` modifies it\n            const allRelations = [...options.relations];\n            this.applyRelationsRecursively(qb, allRelations, qb.expressionMap.mainAlias!.name, qb.expressionMap.mainAlias!.metadata, \"\");\n            // recursive removes found relations from allRelations array\n            // if there are relations left in this array it means those relations were not found in the entity structure\n            // so, we give an exception about not found relations\n            if (allRelations.length > 0)\n                throw new FindRelationsNotFoundError(allRelations);\n        }\n\n        if (options.join) {\n            if (options.join.leftJoin)\n                Object.keys(options.join.leftJoin).forEach(key => {\n                    qb.leftJoin(options.join!.leftJoin![key], key);\n                });\n\n            if (options.join.innerJoin)\n                Object.keys(options.join.innerJoin).forEach(key => {\n                    qb.innerJoin(options.join!.innerJoin![key], key);\n                });\n\n            if (options.join.leftJoinAndSelect)\n                Object.keys(options.join.leftJoinAndSelect).forEach(key => {\n                    qb.leftJoinAndSelect(options.join!.leftJoinAndSelect![key], key);\n                });\n\n            if (options.join.innerJoinAndSelect)\n                Object.keys(options.join.innerJoinAndSelect).forEach(key => {\n                    qb.innerJoinAndSelect(options.join!.innerJoinAndSelect![key], key);\n                });\n        }\n\n        if (options.cache) {\n            if (options.cache instanceof Object) {\n                const cache = options.cache as { id: any, milliseconds: number };\n                qb.cache(cache.id, cache.milliseconds);\n            } else {\n                qb.cache(options.cache);\n            }\n        }\n\n        if (options.lock) {\n            if (options.lock.mode === \"optimistic\") {\n                qb.setLock(options.lock.mode, options.lock.version);\n            } else if (\n                options.lock.mode === \"pessimistic_read\" ||\n                options.lock.mode === \"pessimistic_write\" ||\n                options.lock.mode === \"dirty_read\" ||\n                options.lock.mode === \"pessimistic_partial_write\" ||\n                options.lock.mode === \"pessimistic_write_or_fail\" ||\n                options.lock.mode === \"for_no_key_update\" ||\n                options.lock.mode === \"for_key_share\"\n            ) {\n                const tableNames = options.lock.tables ? options.lock.tables.map((table) => {\n                    const tableAlias = qb.expressionMap.aliases.find((alias) => {\n                        return alias.metadata.tableNameWithoutPrefix === table;\n                    });\n                    if (!tableAlias) {\n                        throw new TypeORMError(`\"${table}\" is not part of this query`);\n                    }\n                    return qb.escape(tableAlias.name);\n                }) : undefined;\n                qb.setLock(options.lock.mode, undefined, tableNames);\n            }\n        }\n\n        if (options.loadRelationIds === true) {\n            qb.loadAllRelationIds();\n\n        } else if (options.loadRelationIds instanceof Object) {\n            qb.loadAllRelationIds(options.loadRelationIds as any);\n        }\n\n        if (options.where)\n            qb.where(options.where);\n\n        if ((options as FindManyOptions<T>).skip)\n            qb.skip((options as FindManyOptions<T>).skip!);\n\n        if ((options as FindManyOptions<T>).take)\n            qb.take((options as FindManyOptions<T>).take!);\n\n        if (options.order)\n            Object.keys(options.order).forEach(key => {\n                const order = ((options as FindOneOptions<T>).order as any)[key as any];\n\n                if (!metadata.findColumnWithPropertyPath(key))\n                    throw new Error(`${key} column was not found in the ${metadata.name} entity.`);\n\n                switch (order) {\n                    case 1:\n                        qb.addOrderBy(qb.alias + \".\" + key, \"ASC\");\n                        break;\n                    case -1:\n                        qb.addOrderBy(qb.alias + \".\" + key, \"DESC\");\n                        break;\n                    case \"ASC\":\n                        qb.addOrderBy(qb.alias + \".\" + key, \"ASC\");\n                        break;\n                    case \"DESC\":\n                        qb.addOrderBy(qb.alias + \".\" + key, \"DESC\");\n                        break;\n                }\n            });\n\n        return qb;\n    }*/\n    static applyOptionsToTreeQueryBuilder(qb, options) {\n        if (options?.relations) {\n            // Copy because `applyRelationsRecursively` modifies it\n            const allRelations = [...options.relations];\n            FindOptionsUtils.applyRelationsRecursively(qb, allRelations, qb.expressionMap.mainAlias.name, qb.expressionMap.mainAlias.metadata, \"\");\n            // recursive removes found relations from allRelations array\n            // if there are relations left in this array it means those relations were not found in the entity structure\n            // so, we give an exception about not found relations\n            if (allRelations.length > 0)\n                throw new FindRelationsNotFoundError(allRelations);\n        }\n        return qb;\n    }\n    // -------------------------------------------------------------------------\n    // Protected Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Adds joins for all relations and sub-relations of the given relations provided in the find options.\n     */\n    static applyRelationsRecursively(qb, allRelations, alias, metadata, prefix) {\n        // find all relations that match given prefix\n        let matchedBaseRelations = [];\n        if (prefix) {\n            const regexp = new RegExp(\"^\" + prefix.replace(\".\", \"\\\\.\") + \"\\\\.\");\n            matchedBaseRelations = allRelations\n                .filter((relation) => relation.match(regexp))\n                .map((relation) => metadata.findRelationWithPropertyPath(relation.replace(regexp, \"\")))\n                .filter((entity) => entity);\n        }\n        else {\n            matchedBaseRelations = allRelations\n                .map((relation) => metadata.findRelationWithPropertyPath(relation))\n                .filter((entity) => entity);\n        }\n        // go through all matched relations and add join for them\n        matchedBaseRelations.forEach((relation) => {\n            // generate a relation alias\n            let relationAlias = DriverUtils.buildAlias(qb.connection.driver, { joiner: \"__\" }, alias, relation.propertyPath);\n            // add a join for the found relation\n            const selection = alias + \".\" + relation.propertyPath;\n            if (qb.expressionMap.relationLoadStrategy === \"query\") {\n                qb.concatRelationMetadata(relation);\n            }\n            else {\n                qb.leftJoinAndSelect(selection, relationAlias);\n            }\n            // remove added relations from the allRelations array, this is needed to find all not found relations at the end\n            allRelations.splice(allRelations.indexOf(prefix\n                ? prefix + \".\" + relation.propertyPath\n                : relation.propertyPath), 1);\n            // try to find sub-relations\n            let relationMetadata;\n            let relationName;\n            if (qb.expressionMap.relationLoadStrategy === \"query\") {\n                relationMetadata = relation.inverseEntityMetadata;\n                relationName = relationAlias;\n            }\n            else {\n                const join = qb.expressionMap.joinAttributes.find((join) => join.entityOrProperty === selection);\n                relationMetadata = join.metadata;\n                relationName = join.alias.name;\n            }\n            if (!relationName || !relationMetadata) {\n                throw new EntityPropertyNotFoundError(relation.propertyPath, metadata);\n            }\n            this.applyRelationsRecursively(qb, allRelations, relationName, relationMetadata, prefix\n                ? prefix + \".\" + relation.propertyPath\n                : relation.propertyPath);\n            // join the eager relations of the found relation\n            // Only supported for \"join\" relationLoadStrategy\n            if (qb.expressionMap.relationLoadStrategy === \"join\") {\n                const relMetadata = metadata.relations.find((metadata) => metadata.propertyName === relation.propertyPath);\n                if (relMetadata) {\n                    this.joinEagerRelations(qb, relationAlias, relMetadata.inverseEntityMetadata);\n                }\n            }\n        });\n    }\n    static joinEagerRelations(qb, alias, metadata) {\n        metadata.eagerRelations.forEach((relation) => {\n            // generate a relation alias\n            let relationAlias = DriverUtils.buildAlias(qb.connection.driver, { joiner: \"__\" }, alias, relation.propertyName);\n            // add a join for the relation\n            // Checking whether the relation wasn't joined yet.\n            let addJoin = true;\n            // TODO: Review this validation\n            for (const join of qb.expressionMap.joinAttributes) {\n                if (join.condition !== undefined ||\n                    join.mapToProperty !== undefined ||\n                    join.isMappingMany !== undefined ||\n                    join.direction !== \"LEFT\" ||\n                    join.entityOrProperty !==\n                        `${alias}.${relation.propertyPath}`) {\n                    continue;\n                }\n                addJoin = false;\n                relationAlias = join.alias.name;\n                break;\n            }\n            const joinAlreadyAdded = Boolean(qb.expressionMap.joinAttributes.find((joinAttribute) => joinAttribute.alias.name === relationAlias));\n            if (addJoin && !joinAlreadyAdded) {\n                qb.leftJoin(alias + \".\" + relation.propertyPath, relationAlias);\n            }\n            // Checking whether the relation wasn't selected yet.\n            // This check shall be after the join check to detect relationAlias.\n            let addSelect = true;\n            for (const select of qb.expressionMap.selects) {\n                if (select.aliasName !== undefined ||\n                    select.virtual !== undefined ||\n                    select.selection !== relationAlias) {\n                    continue;\n                }\n                addSelect = false;\n                break;\n            }\n            if (addSelect) {\n                qb.addSelect(relationAlias);\n            }\n            // (recursive) join the eager relations\n            this.joinEagerRelations(qb, relationAlias, relation.inverseEntityMetadata);\n        });\n    }\n}\n\n//# sourceMappingURL=FindOptionsUtils.js.map\n","import { RawSqlResultsToEntityTransformer } from \"./transformer/RawSqlResultsToEntityTransformer\";\nimport { PessimisticLockTransactionRequiredError } from \"../error/PessimisticLockTransactionRequiredError\";\nimport { NoVersionOrUpdateDateColumnError } from \"../error/NoVersionOrUpdateDateColumnError\";\nimport { OptimisticLockVersionMismatchError } from \"../error/OptimisticLockVersionMismatchError\";\nimport { OptimisticLockCanNotBeUsedError } from \"../error/OptimisticLockCanNotBeUsedError\";\nimport { JoinAttribute } from \"./JoinAttribute\";\nimport { RelationIdAttribute } from \"./relation-id/RelationIdAttribute\";\nimport { RelationCountAttribute } from \"./relation-count/RelationCountAttribute\";\nimport { RelationIdLoader } from \"./relation-id/RelationIdLoader\";\nimport { RelationIdLoader as QueryStrategyRelationIdLoader } from \"./RelationIdLoader\";\nimport { RelationIdMetadataToAttributeTransformer } from \"./relation-id/RelationIdMetadataToAttributeTransformer\";\nimport { RelationCountLoader } from \"./relation-count/RelationCountLoader\";\nimport { RelationCountMetadataToAttributeTransformer } from \"./relation-count/RelationCountMetadataToAttributeTransformer\";\nimport { QueryBuilder } from \"./QueryBuilder\";\nimport { LockNotSupportedOnGivenDriverError } from \"../error/LockNotSupportedOnGivenDriverError\";\nimport { OffsetWithoutLimitNotSupportedError } from \"../error/OffsetWithoutLimitNotSupportedError\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\nimport { DriverUtils } from \"../driver/DriverUtils\";\nimport { EntityNotFoundError } from \"../error/EntityNotFoundError\";\nimport { TypeORMError } from \"../error\";\nimport { FindOptionsUtils } from \"../find-options/FindOptionsUtils\";\nimport { OrmUtils } from \"../util/OrmUtils\";\nimport { EntityPropertyNotFoundError } from \"../error/EntityPropertyNotFoundError\";\nimport { InstanceChecker } from \"../util/InstanceChecker\";\nimport { FindOperator } from \"../find-options/FindOperator\";\nimport { ApplyValueTransformers } from \"../util/ApplyValueTransformers\";\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nexport class SelectQueryBuilder extends QueryBuilder {\n    constructor() {\n        super(...arguments);\n        this[\"@instanceof\"] = Symbol.for(\"SelectQueryBuilder\");\n        this.findOptions = {};\n        this.selects = [];\n        this.joins = [];\n        this.conditions = \"\";\n        this.orderBys = [];\n        this.relationMetadatas = [];\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated SQL query without parameters being replaced.\n     */\n    getQuery() {\n        let sql = this.createComment();\n        sql += this.createCteExpression();\n        sql += this.createSelectExpression();\n        sql += this.createJoinExpression();\n        sql += this.createWhereExpression();\n        sql += this.createGroupByExpression();\n        sql += this.createHavingExpression();\n        sql += this.createOrderByExpression();\n        sql += this.createLimitOffsetExpression();\n        sql += this.createLockExpression();\n        sql = sql.trim();\n        if (this.expressionMap.subQuery)\n            sql = \"(\" + sql + \")\";\n        return this.replacePropertyNamesForTheWholeQuery(sql);\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    setFindOptions(findOptions) {\n        this.findOptions = findOptions;\n        this.applyFindOptions();\n        return this;\n    }\n    /**\n     * Creates a subquery - query that can be used inside other queries.\n     */\n    subQuery() {\n        const qb = this.createQueryBuilder();\n        qb.expressionMap.subQuery = true;\n        qb.parentQueryBuilder = this;\n        return qb;\n    }\n    /**\n     * Creates SELECT query and selects given data.\n     * Replaces all previous selections if they exist.\n     */\n    select(selection, selectionAliasName) {\n        this.expressionMap.queryType = \"select\";\n        if (Array.isArray(selection)) {\n            this.expressionMap.selects = selection.map((selection) => ({\n                selection: selection,\n            }));\n        }\n        else if (typeof selection === \"function\") {\n            const subQueryBuilder = selection(this.subQuery());\n            this.setParameters(subQueryBuilder.getParameters());\n            this.expressionMap.selects.push({\n                selection: subQueryBuilder.getQuery(),\n                aliasName: selectionAliasName,\n            });\n        }\n        else if (selection) {\n            this.expressionMap.selects = [\n                { selection: selection, aliasName: selectionAliasName },\n            ];\n        }\n        return this;\n    }\n    /**\n     * Adds new selection to the SELECT query.\n     */\n    addSelect(selection, selectionAliasName) {\n        if (!selection)\n            return this;\n        if (Array.isArray(selection)) {\n            this.expressionMap.selects = this.expressionMap.selects.concat(selection.map((selection) => ({ selection: selection })));\n        }\n        else if (typeof selection === \"function\") {\n            const subQueryBuilder = selection(this.subQuery());\n            this.setParameters(subQueryBuilder.getParameters());\n            this.expressionMap.selects.push({\n                selection: subQueryBuilder.getQuery(),\n                aliasName: selectionAliasName,\n            });\n        }\n        else if (selection) {\n            this.expressionMap.selects.push({\n                selection: selection,\n                aliasName: selectionAliasName,\n            });\n        }\n        return this;\n    }\n    /**\n     * Set max execution time.\n     * @param milliseconds\n     */\n    maxExecutionTime(milliseconds) {\n        this.expressionMap.maxExecutionTime = milliseconds;\n        return this;\n    }\n    /**\n     * Sets whether the selection is DISTINCT.\n     */\n    distinct(distinct = true) {\n        this.expressionMap.selectDistinct = distinct;\n        return this;\n    }\n    /**\n     * Sets the distinct on clause for Postgres.\n     */\n    distinctOn(distinctOn) {\n        this.expressionMap.selectDistinctOn = distinctOn;\n        return this;\n    }\n    fromDummy() {\n        return this.from(this.connection.driver.dummyTableName ??\n            \"(SELECT 1 AS dummy_column)\", \"dummy_table\");\n    }\n    /**\n     * Specifies FROM which entity's table select/update/delete will be executed.\n     * Also sets a main string alias of the selection data.\n     * Removes all previously set from-s.\n     */\n    from(entityTarget, aliasName) {\n        const mainAlias = this.createFromAlias(entityTarget, aliasName);\n        this.expressionMap.setMainAlias(mainAlias);\n        return this;\n    }\n    /**\n     * Specifies FROM which entity's table select/update/delete will be executed.\n     * Also sets a main string alias of the selection data.\n     */\n    addFrom(entityTarget, aliasName) {\n        const alias = this.createFromAlias(entityTarget, aliasName);\n        if (!this.expressionMap.mainAlias)\n            this.expressionMap.setMainAlias(alias);\n        return this;\n    }\n    /**\n     * INNER JOINs (without selection).\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    innerJoin(entityOrProperty, alias, condition, parameters) {\n        this.join(\"INNER\", entityOrProperty, alias, condition, parameters);\n        return this;\n    }\n    /**\n     * LEFT JOINs (without selection).\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    leftJoin(entityOrProperty, alias, condition, parameters) {\n        this.join(\"LEFT\", entityOrProperty, alias, condition, parameters);\n        return this;\n    }\n    /**\n     * INNER JOINs and adds all selection properties to SELECT.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    innerJoinAndSelect(entityOrProperty, alias, condition, parameters) {\n        this.addSelect(alias);\n        this.innerJoin(entityOrProperty, alias, condition, parameters);\n        return this;\n    }\n    /**\n     * LEFT JOINs and adds all selection properties to SELECT.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    leftJoinAndSelect(entityOrProperty, alias, condition, parameters) {\n        this.addSelect(alias);\n        this.leftJoin(entityOrProperty, alias, condition, parameters);\n        return this;\n    }\n    /**\n     * INNER JOINs, SELECTs the data returned by a join and MAPs all that data to some entity's property.\n     * This is extremely useful when you want to select some data and map it to some virtual property.\n     * It will assume that there are multiple rows of selecting data, and mapped result will be an array.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    innerJoinAndMapMany(mapToProperty, entityOrProperty, alias, condition, parameters) {\n        this.addSelect(alias);\n        this.join(\"INNER\", entityOrProperty, alias, condition, parameters, mapToProperty, true);\n        return this;\n    }\n    /**\n     * INNER JOINs, SELECTs the data returned by a join and MAPs all that data to some entity's property.\n     * This is extremely useful when you want to select some data and map it to some virtual property.\n     * It will assume that there is a single row of selecting data, and mapped result will be a single selected value.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    innerJoinAndMapOne(mapToProperty, entityOrProperty, alias, condition, parameters, mapAsEntity) {\n        this.addSelect(alias);\n        this.join(\"INNER\", entityOrProperty, alias, condition, parameters, mapToProperty, false, mapAsEntity);\n        return this;\n    }\n    /**\n     * LEFT JOINs, SELECTs the data returned by a join and MAPs all that data to some entity's property.\n     * This is extremely useful when you want to select some data and map it to some virtual property.\n     * It will assume that there are multiple rows of selecting data, and mapped result will be an array.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    leftJoinAndMapMany(mapToProperty, entityOrProperty, alias, condition, parameters) {\n        this.addSelect(alias);\n        this.join(\"LEFT\", entityOrProperty, alias, condition, parameters, mapToProperty, true);\n        return this;\n    }\n    /**\n     * LEFT JOINs, SELECTs the data returned by a join and MAPs all that data to some entity's property.\n     * This is extremely useful when you want to select some data and map it to some virtual property.\n     * It will assume that there is a single row of selecting data, and mapped result will be a single selected value.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    leftJoinAndMapOne(mapToProperty, entityOrProperty, alias, condition, parameters, mapAsEntity) {\n        this.addSelect(alias);\n        this.join(\"LEFT\", entityOrProperty, alias, condition, parameters, mapToProperty, false, mapAsEntity);\n        return this;\n    }\n    /**\n     * LEFT JOINs relation id and maps it into some entity's property.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    loadRelationIdAndMap(mapToProperty, relationName, aliasNameOrOptions, queryBuilderFactory) {\n        const relationIdAttribute = new RelationIdAttribute(this.expressionMap);\n        relationIdAttribute.mapToProperty = mapToProperty;\n        relationIdAttribute.relationName = relationName;\n        if (typeof aliasNameOrOptions === \"string\")\n            relationIdAttribute.alias = aliasNameOrOptions;\n        if (typeof aliasNameOrOptions === \"object\" &&\n            aliasNameOrOptions.disableMixedMap)\n            relationIdAttribute.disableMixedMap = true;\n        relationIdAttribute.queryBuilderFactory = queryBuilderFactory;\n        this.expressionMap.relationIdAttributes.push(relationIdAttribute);\n        if (relationIdAttribute.relation.junctionEntityMetadata) {\n            this.expressionMap.createAlias({\n                type: \"other\",\n                name: relationIdAttribute.junctionAlias,\n                metadata: relationIdAttribute.relation.junctionEntityMetadata,\n            });\n        }\n        return this;\n    }\n    /**\n     * Counts number of entities of entity's relation and maps the value into some entity's property.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    loadRelationCountAndMap(mapToProperty, relationName, aliasName, queryBuilderFactory) {\n        const relationCountAttribute = new RelationCountAttribute(this.expressionMap);\n        relationCountAttribute.mapToProperty = mapToProperty;\n        relationCountAttribute.relationName = relationName;\n        relationCountAttribute.alias = aliasName;\n        relationCountAttribute.queryBuilderFactory = queryBuilderFactory;\n        this.expressionMap.relationCountAttributes.push(relationCountAttribute);\n        this.expressionMap.createAlias({\n            type: \"other\",\n            name: relationCountAttribute.junctionAlias,\n        });\n        if (relationCountAttribute.relation.junctionEntityMetadata) {\n            this.expressionMap.createAlias({\n                type: \"other\",\n                name: relationCountAttribute.junctionAlias,\n                metadata: relationCountAttribute.relation.junctionEntityMetadata,\n            });\n        }\n        return this;\n    }\n    /**\n     * Loads all relation ids for all relations of the selected entity.\n     * All relation ids will be mapped to relation property themself.\n     * If array of strings is given then loads only relation ids of the given properties.\n     */\n    loadAllRelationIds(options) {\n        // todo: add skip relations\n        this.expressionMap.mainAlias.metadata.relations.forEach((relation) => {\n            if (options !== undefined &&\n                options.relations !== undefined &&\n                options.relations.indexOf(relation.propertyPath) === -1)\n                return;\n            this.loadRelationIdAndMap(this.expressionMap.mainAlias.name +\n                \".\" +\n                relation.propertyPath, this.expressionMap.mainAlias.name +\n                \".\" +\n                relation.propertyPath, options);\n        });\n        return this;\n    }\n    /**\n     * Sets WHERE condition in the query builder.\n     * If you had previously WHERE expression defined,\n     * calling this function will override previously set WHERE conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    where(where, parameters) {\n        this.expressionMap.wheres = []; // don't move this block below since computeWhereParameter can add where expressions\n        const condition = this.getWhereCondition(where);\n        if (condition) {\n            this.expressionMap.wheres = [\n                { type: \"simple\", condition: condition },\n            ];\n        }\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Adds new AND WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    andWhere(where, parameters) {\n        this.expressionMap.wheres.push({\n            type: \"and\",\n            condition: this.getWhereCondition(where),\n        });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Adds new OR WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    orWhere(where, parameters) {\n        this.expressionMap.wheres.push({\n            type: \"or\",\n            condition: this.getWhereCondition(where),\n        });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Sets a new where EXISTS clause\n     */\n    whereExists(subQuery) {\n        return this.where(...this.getExistsCondition(subQuery));\n    }\n    /**\n     * Adds a new AND where EXISTS clause\n     */\n    andWhereExists(subQuery) {\n        return this.andWhere(...this.getExistsCondition(subQuery));\n    }\n    /**\n     * Adds a new OR where EXISTS clause\n     */\n    orWhereExists(subQuery) {\n        return this.orWhere(...this.getExistsCondition(subQuery));\n    }\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     *\n     * Ids are mixed.\n     * It means if you have single primary key you can pass a simple id values, for example [1, 2, 3].\n     * If you have multiple primary keys you need to pass object with property names and values specified,\n     * for example [{ firstId: 1, secondId: 2 }, { firstId: 2, secondId: 3 }, ...]\n     */\n    whereInIds(ids) {\n        return this.where(this.getWhereInIdsCondition(ids));\n    }\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     *\n     * Ids are mixed.\n     * It means if you have single primary key you can pass a simple id values, for example [1, 2, 3].\n     * If you have multiple primary keys you need to pass object with property names and values specified,\n     * for example [{ firstId: 1, secondId: 2 }, { firstId: 2, secondId: 3 }, ...]\n     */\n    andWhereInIds(ids) {\n        return this.andWhere(this.getWhereInIdsCondition(ids));\n    }\n    /**\n     * Adds new OR WHERE with conditions for the given ids.\n     *\n     * Ids are mixed.\n     * It means if you have single primary key you can pass a simple id values, for example [1, 2, 3].\n     * If you have multiple primary keys you need to pass object with property names and values specified,\n     * for example [{ firstId: 1, secondId: 2 }, { firstId: 2, secondId: 3 }, ...]\n     */\n    orWhereInIds(ids) {\n        return this.orWhere(this.getWhereInIdsCondition(ids));\n    }\n    /**\n     * Sets HAVING condition in the query builder.\n     * If you had previously HAVING expression defined,\n     * calling this function will override previously set HAVING conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    having(having, parameters) {\n        this.expressionMap.havings.push({ type: \"simple\", condition: having });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Adds new AND HAVING condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    andHaving(having, parameters) {\n        this.expressionMap.havings.push({ type: \"and\", condition: having });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Adds new OR HAVING condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    orHaving(having, parameters) {\n        this.expressionMap.havings.push({ type: \"or\", condition: having });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Sets GROUP BY condition in the query builder.\n     * If you had previously GROUP BY expression defined,\n     * calling this function will override previously set GROUP BY conditions.\n     */\n    groupBy(groupBy) {\n        if (groupBy) {\n            this.expressionMap.groupBys = [groupBy];\n        }\n        else {\n            this.expressionMap.groupBys = [];\n        }\n        return this;\n    }\n    /**\n     * Adds GROUP BY condition in the query builder.\n     */\n    addGroupBy(groupBy) {\n        this.expressionMap.groupBys.push(groupBy);\n        return this;\n    }\n    /**\n     * Enables time travelling for the current query (only supported by cockroach currently)\n     */\n    timeTravelQuery(timeTravelFn) {\n        if (this.connection.driver.options.type === \"cockroachdb\") {\n            if (timeTravelFn === undefined) {\n                this.expressionMap.timeTravel = \"follower_read_timestamp()\";\n            }\n            else {\n                this.expressionMap.timeTravel = timeTravelFn;\n            }\n        }\n        return this;\n    }\n    /**\n     * Sets ORDER BY condition in the query builder.\n     * If you had previously ORDER BY expression defined,\n     * calling this function will override previously set ORDER BY conditions.\n     */\n    orderBy(sort, order = \"ASC\", nulls) {\n        if (order !== undefined && order !== \"ASC\" && order !== \"DESC\")\n            throw new TypeORMError(`SelectQueryBuilder.addOrderBy \"order\" can accept only \"ASC\" and \"DESC\" values.`);\n        if (nulls !== undefined &&\n            nulls !== \"NULLS FIRST\" &&\n            nulls !== \"NULLS LAST\")\n            throw new TypeORMError(`SelectQueryBuilder.addOrderBy \"nulls\" can accept only \"NULLS FIRST\" and \"NULLS LAST\" values.`);\n        if (sort) {\n            if (typeof sort === \"object\") {\n                this.expressionMap.orderBys = sort;\n            }\n            else {\n                if (nulls) {\n                    this.expressionMap.orderBys = {\n                        [sort]: { order, nulls },\n                    };\n                }\n                else {\n                    this.expressionMap.orderBys = { [sort]: order };\n                }\n            }\n        }\n        else {\n            this.expressionMap.orderBys = {};\n        }\n        return this;\n    }\n    /**\n     * Adds ORDER BY condition in the query builder.\n     */\n    addOrderBy(sort, order = \"ASC\", nulls) {\n        if (order !== undefined && order !== \"ASC\" && order !== \"DESC\")\n            throw new TypeORMError(`SelectQueryBuilder.addOrderBy \"order\" can accept only \"ASC\" and \"DESC\" values.`);\n        if (nulls !== undefined &&\n            nulls !== \"NULLS FIRST\" &&\n            nulls !== \"NULLS LAST\")\n            throw new TypeORMError(`SelectQueryBuilder.addOrderBy \"nulls\" can accept only \"NULLS FIRST\" and \"NULLS LAST\" values.`);\n        if (nulls) {\n            this.expressionMap.orderBys[sort] = { order, nulls };\n        }\n        else {\n            this.expressionMap.orderBys[sort] = order;\n        }\n        return this;\n    }\n    /**\n     * Sets LIMIT - maximum number of rows to be selected.\n     * NOTE that it may not work as you expect if you are using joins.\n     * If you want to implement pagination, and you are having join in your query,\n     * then use the take method instead.\n     */\n    limit(limit) {\n        this.expressionMap.limit = this.normalizeNumber(limit);\n        if (this.expressionMap.limit !== undefined &&\n            isNaN(this.expressionMap.limit))\n            throw new TypeORMError(`Provided \"limit\" value is not a number. Please provide a numeric value.`);\n        return this;\n    }\n    /**\n     * Sets OFFSET - selection offset.\n     * NOTE that it may not work as you expect if you are using joins.\n     * If you want to implement pagination, and you are having join in your query,\n     * then use the skip method instead.\n     */\n    offset(offset) {\n        this.expressionMap.offset = this.normalizeNumber(offset);\n        if (this.expressionMap.offset !== undefined &&\n            isNaN(this.expressionMap.offset))\n            throw new TypeORMError(`Provided \"offset\" value is not a number. Please provide a numeric value.`);\n        return this;\n    }\n    /**\n     * Sets maximal number of entities to take.\n     */\n    take(take) {\n        this.expressionMap.take = this.normalizeNumber(take);\n        if (this.expressionMap.take !== undefined &&\n            isNaN(this.expressionMap.take))\n            throw new TypeORMError(`Provided \"take\" value is not a number. Please provide a numeric value.`);\n        return this;\n    }\n    /**\n     * Sets number of entities to skip.\n     */\n    skip(skip) {\n        this.expressionMap.skip = this.normalizeNumber(skip);\n        if (this.expressionMap.skip !== undefined &&\n            isNaN(this.expressionMap.skip))\n            throw new TypeORMError(`Provided \"skip\" value is not a number. Please provide a numeric value.`);\n        return this;\n    }\n    /**\n     * Set certain index to be used by the query.\n     *\n     * @param index Name of index to be used.\n     */\n    useIndex(index) {\n        this.expressionMap.useIndex = index;\n        return this;\n    }\n    /**\n     * Sets locking mode.\n     */\n    setLock(lockMode, lockVersion, lockTables) {\n        this.expressionMap.lockMode = lockMode;\n        this.expressionMap.lockVersion = lockVersion;\n        this.expressionMap.lockTables = lockTables;\n        return this;\n    }\n    /**\n     * Sets lock handling by adding NO WAIT or SKIP LOCKED.\n     */\n    setOnLocked(onLocked) {\n        this.expressionMap.onLocked = onLocked;\n        return this;\n    }\n    /**\n     * Disables the global condition of \"non-deleted\" for the entity with delete date columns.\n     */\n    withDeleted() {\n        this.expressionMap.withDeleted = true;\n        return this;\n    }\n    /**\n     * Gets first raw result returned by execution of generated query builder sql.\n     */\n    async getRawOne() {\n        return (await this.getRawMany())[0];\n    }\n    /**\n     * Gets all raw results returned by execution of generated query builder sql.\n     */\n    async getRawMany() {\n        if (this.expressionMap.lockMode === \"optimistic\")\n            throw new OptimisticLockCanNotBeUsedError();\n        this.expressionMap.queryEntity = false;\n        const queryRunner = this.obtainQueryRunner();\n        let transactionStartedByUs = false;\n        try {\n            // start transaction if it was enabled\n            if (this.expressionMap.useTransaction === true &&\n                queryRunner.isTransactionActive === false) {\n                await queryRunner.startTransaction();\n                transactionStartedByUs = true;\n            }\n            const results = await this.loadRawResults(queryRunner);\n            // close transaction if we started it\n            if (transactionStartedByUs) {\n                await queryRunner.commitTransaction();\n            }\n            return results;\n        }\n        catch (error) {\n            // rollback transaction if we started it\n            if (transactionStartedByUs) {\n                try {\n                    await queryRunner.rollbackTransaction();\n                }\n                catch (rollbackError) { }\n            }\n            throw error;\n        }\n        finally {\n            if (queryRunner !== this.queryRunner) {\n                // means we created our own query runner\n                await queryRunner.release();\n            }\n        }\n    }\n    /**\n     * Executes sql generated by query builder and returns object with raw results and entities created from them.\n     */\n    async getRawAndEntities() {\n        const queryRunner = this.obtainQueryRunner();\n        let transactionStartedByUs = false;\n        try {\n            // start transaction if it was enabled\n            if (this.expressionMap.useTransaction === true &&\n                queryRunner.isTransactionActive === false) {\n                await queryRunner.startTransaction();\n                transactionStartedByUs = true;\n            }\n            this.expressionMap.queryEntity = true;\n            const results = await this.executeEntitiesAndRawResults(queryRunner);\n            // close transaction if we started it\n            if (transactionStartedByUs) {\n                await queryRunner.commitTransaction();\n            }\n            return results;\n        }\n        catch (error) {\n            // rollback transaction if we started it\n            if (transactionStartedByUs) {\n                try {\n                    await queryRunner.rollbackTransaction();\n                }\n                catch (rollbackError) { }\n            }\n            throw error;\n        }\n        finally {\n            if (queryRunner !== this.queryRunner)\n                // means we created our own query runner\n                await queryRunner.release();\n        }\n    }\n    /**\n     * Gets single entity returned by execution of generated query builder sql.\n     */\n    async getOne() {\n        const results = await this.getRawAndEntities();\n        const result = results.entities[0];\n        if (result &&\n            this.expressionMap.lockMode === \"optimistic\" &&\n            this.expressionMap.lockVersion) {\n            const metadata = this.expressionMap.mainAlias.metadata;\n            if (this.expressionMap.lockVersion instanceof Date) {\n                const actualVersion = metadata.updateDateColumn.getEntityValue(result); // what if columns arent set?\n                if (actualVersion.getTime() !==\n                    this.expressionMap.lockVersion.getTime())\n                    throw new OptimisticLockVersionMismatchError(metadata.name, this.expressionMap.lockVersion, actualVersion);\n            }\n            else {\n                const actualVersion = metadata.versionColumn.getEntityValue(result); // what if columns arent set?\n                if (actualVersion !== this.expressionMap.lockVersion)\n                    throw new OptimisticLockVersionMismatchError(metadata.name, this.expressionMap.lockVersion, actualVersion);\n            }\n        }\n        if (result === undefined) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Gets the first entity returned by execution of generated query builder sql or rejects the returned promise on error.\n     */\n    async getOneOrFail() {\n        const entity = await this.getOne();\n        if (!entity) {\n            throw new EntityNotFoundError(this.expressionMap.mainAlias.target, this.expressionMap.parameters);\n        }\n        return entity;\n    }\n    /**\n     * Gets entities returned by execution of generated query builder sql.\n     */\n    async getMany() {\n        if (this.expressionMap.lockMode === \"optimistic\")\n            throw new OptimisticLockCanNotBeUsedError();\n        const results = await this.getRawAndEntities();\n        return results.entities;\n    }\n    /**\n     * Gets count - number of entities selected by sql generated by this query builder.\n     * Count excludes all limitations set by offset, limit, skip, and take.\n     */\n    async getCount() {\n        if (this.expressionMap.lockMode === \"optimistic\")\n            throw new OptimisticLockCanNotBeUsedError();\n        const queryRunner = this.obtainQueryRunner();\n        let transactionStartedByUs = false;\n        try {\n            // start transaction if it was enabled\n            if (this.expressionMap.useTransaction === true &&\n                queryRunner.isTransactionActive === false) {\n                await queryRunner.startTransaction();\n                transactionStartedByUs = true;\n            }\n            this.expressionMap.queryEntity = false;\n            const results = await this.executeCountQuery(queryRunner);\n            // close transaction if we started it\n            if (transactionStartedByUs) {\n                await queryRunner.commitTransaction();\n            }\n            return results;\n        }\n        catch (error) {\n            // rollback transaction if we started it\n            if (transactionStartedByUs) {\n                try {\n                    await queryRunner.rollbackTransaction();\n                }\n                catch (rollbackError) { }\n            }\n            throw error;\n        }\n        finally {\n            if (queryRunner !== this.queryRunner)\n                // means we created our own query runner\n                await queryRunner.release();\n        }\n    }\n    /**\n     * Gets exists\n     * Returns whether any rows exists matching current query.\n     */\n    async getExists() {\n        if (this.expressionMap.lockMode === \"optimistic\")\n            throw new OptimisticLockCanNotBeUsedError();\n        const queryRunner = this.obtainQueryRunner();\n        let transactionStartedByUs = false;\n        try {\n            // start transaction if it was enabled\n            if (this.expressionMap.useTransaction === true &&\n                queryRunner.isTransactionActive === false) {\n                await queryRunner.startTransaction();\n                transactionStartedByUs = true;\n            }\n            this.expressionMap.queryEntity = false;\n            const results = await this.executeExistsQuery(queryRunner);\n            // close transaction if we started it\n            if (transactionStartedByUs) {\n                await queryRunner.commitTransaction();\n            }\n            return results;\n        }\n        catch (error) {\n            // rollback transaction if we started it\n            if (transactionStartedByUs) {\n                try {\n                    await queryRunner.rollbackTransaction();\n                }\n                catch (rollbackError) { }\n            }\n            throw error;\n        }\n        finally {\n            if (queryRunner !== this.queryRunner)\n                // means we created our own query runner\n                await queryRunner.release();\n        }\n    }\n    /**\n     * Executes built SQL query and returns entities and overall entities count (without limitation).\n     * This method is useful to build pagination.\n     */\n    async getManyAndCount() {\n        if (this.expressionMap.lockMode === \"optimistic\")\n            throw new OptimisticLockCanNotBeUsedError();\n        const queryRunner = this.obtainQueryRunner();\n        let transactionStartedByUs = false;\n        try {\n            // start transaction if it was enabled\n            if (this.expressionMap.useTransaction === true &&\n                queryRunner.isTransactionActive === false) {\n                await queryRunner.startTransaction();\n                transactionStartedByUs = true;\n            }\n            this.expressionMap.queryEntity = true;\n            const entitiesAndRaw = await this.executeEntitiesAndRawResults(queryRunner);\n            this.expressionMap.queryEntity = false;\n            const cacheId = this.expressionMap.cacheId;\n            // Creates a new cacheId for the count query, or it will retreive the above query results\n            // and count will return 0.\n            this.expressionMap.cacheId = cacheId ? `${cacheId}-count` : cacheId;\n            const count = await this.executeCountQuery(queryRunner);\n            const results = [entitiesAndRaw.entities, count];\n            // close transaction if we started it\n            if (transactionStartedByUs) {\n                await queryRunner.commitTransaction();\n            }\n            return results;\n        }\n        catch (error) {\n            // rollback transaction if we started it\n            if (transactionStartedByUs) {\n                try {\n                    await queryRunner.rollbackTransaction();\n                }\n                catch (rollbackError) { }\n            }\n            throw error;\n        }\n        finally {\n            if (queryRunner !== this.queryRunner)\n                // means we created our own query runner\n                await queryRunner.release();\n        }\n    }\n    /**\n     * Executes built SQL query and returns raw data stream.\n     */\n    async stream() {\n        this.expressionMap.queryEntity = false;\n        const [sql, parameters] = this.getQueryAndParameters();\n        const queryRunner = this.obtainQueryRunner();\n        let transactionStartedByUs = false;\n        try {\n            // start transaction if it was enabled\n            if (this.expressionMap.useTransaction === true &&\n                queryRunner.isTransactionActive === false) {\n                await queryRunner.startTransaction();\n                transactionStartedByUs = true;\n            }\n            const releaseFn = () => {\n                if (queryRunner !== this.queryRunner)\n                    // means we created our own query runner\n                    return queryRunner.release();\n                return;\n            };\n            const results = queryRunner.stream(sql, parameters, releaseFn, releaseFn);\n            // close transaction if we started it\n            if (transactionStartedByUs) {\n                await queryRunner.commitTransaction();\n            }\n            return results;\n        }\n        catch (error) {\n            // rollback transaction if we started it\n            if (transactionStartedByUs) {\n                try {\n                    await queryRunner.rollbackTransaction();\n                }\n                catch (rollbackError) { }\n            }\n            throw error;\n        }\n    }\n    /**\n     * Enables or disables query result caching.\n     */\n    cache(enabledOrMillisecondsOrId, maybeMilliseconds) {\n        if (typeof enabledOrMillisecondsOrId === \"boolean\") {\n            this.expressionMap.cache = enabledOrMillisecondsOrId;\n        }\n        else if (typeof enabledOrMillisecondsOrId === \"number\") {\n            this.expressionMap.cache = true;\n            this.expressionMap.cacheDuration = enabledOrMillisecondsOrId;\n        }\n        else if (typeof enabledOrMillisecondsOrId === \"string\" ||\n            typeof enabledOrMillisecondsOrId === \"number\") {\n            this.expressionMap.cache = true;\n            this.expressionMap.cacheId = enabledOrMillisecondsOrId;\n        }\n        if (maybeMilliseconds) {\n            this.expressionMap.cacheDuration = maybeMilliseconds;\n        }\n        return this;\n    }\n    /**\n     * Sets extra options that can be used to configure how query builder works.\n     */\n    setOption(option) {\n        this.expressionMap.options.push(option);\n        return this;\n    }\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    join(direction, entityOrProperty, aliasName, condition, parameters, mapToProperty, isMappingMany, mapAsEntity) {\n        if (parameters) {\n            this.setParameters(parameters);\n        }\n        const joinAttribute = new JoinAttribute(this.connection, this.expressionMap);\n        joinAttribute.direction = direction;\n        joinAttribute.mapAsEntity = mapAsEntity;\n        joinAttribute.mapToProperty = mapToProperty;\n        joinAttribute.isMappingMany = isMappingMany;\n        joinAttribute.entityOrProperty = entityOrProperty; // relationName\n        joinAttribute.condition = condition; // joinInverseSideCondition\n        // joinAttribute.junctionAlias = joinAttribute.relation.isOwning ? parentAlias + \"_\" + destinationTableAlias : destinationTableAlias + \"_\" + parentAlias;\n        this.expressionMap.joinAttributes.push(joinAttribute);\n        const joinAttributeMetadata = joinAttribute.metadata;\n        if (joinAttributeMetadata) {\n            if (joinAttributeMetadata.deleteDateColumn &&\n                !this.expressionMap.withDeleted) {\n                const conditionDeleteColumn = `${aliasName}.${joinAttributeMetadata.deleteDateColumn.propertyName} IS NULL`;\n                joinAttribute.condition = joinAttribute.condition\n                    ? ` ${joinAttribute.condition} AND ${conditionDeleteColumn}`\n                    : `${conditionDeleteColumn}`;\n            }\n            // todo: find and set metadata right there?\n            joinAttribute.alias = this.expressionMap.createAlias({\n                type: \"join\",\n                name: aliasName,\n                metadata: joinAttributeMetadata,\n            });\n            if (joinAttribute.relation &&\n                joinAttribute.relation.junctionEntityMetadata) {\n                this.expressionMap.createAlias({\n                    type: \"join\",\n                    name: joinAttribute.junctionAlias,\n                    metadata: joinAttribute.relation.junctionEntityMetadata,\n                });\n            }\n        }\n        else {\n            let subQuery = \"\";\n            if (typeof entityOrProperty === \"function\") {\n                const subQueryBuilder = entityOrProperty(this.subQuery());\n                this.setParameters(subQueryBuilder.getParameters());\n                subQuery = subQueryBuilder.getQuery();\n            }\n            else {\n                subQuery = entityOrProperty;\n            }\n            const isSubQuery = typeof entityOrProperty === \"function\" ||\n                (entityOrProperty.substr(0, 1) === \"(\" &&\n                    entityOrProperty.substr(-1) === \")\");\n            joinAttribute.alias = this.expressionMap.createAlias({\n                type: \"join\",\n                name: aliasName,\n                tablePath: isSubQuery === false\n                    ? entityOrProperty\n                    : undefined,\n                subQuery: isSubQuery === true ? subQuery : undefined,\n            });\n        }\n    }\n    /**\n     * Creates \"SELECT FROM\" part of SQL query.\n     */\n    createSelectExpression() {\n        if (!this.expressionMap.mainAlias)\n            throw new TypeORMError(\"Cannot build query because main alias is not set (call qb#from method)\");\n        // todo throw exception if selects or from is missing\n        const allSelects = [];\n        const excludedSelects = [];\n        if (this.expressionMap.mainAlias.hasMetadata) {\n            const metadata = this.expressionMap.mainAlias.metadata;\n            allSelects.push(...this.buildEscapedEntityColumnSelects(this.expressionMap.mainAlias.name, metadata));\n            excludedSelects.push(...this.findEntityColumnSelects(this.expressionMap.mainAlias.name, metadata));\n        }\n        // add selects from joins\n        this.expressionMap.joinAttributes.forEach((join) => {\n            if (join.metadata) {\n                allSelects.push(...this.buildEscapedEntityColumnSelects(join.alias.name, join.metadata));\n                excludedSelects.push(...this.findEntityColumnSelects(join.alias.name, join.metadata));\n            }\n            else {\n                const hasMainAlias = this.expressionMap.selects.some((select) => select.selection === join.alias.name);\n                if (hasMainAlias) {\n                    allSelects.push({\n                        selection: this.escape(join.alias.name) + \".*\",\n                    });\n                    const excludedSelect = this.expressionMap.selects.find((select) => select.selection === join.alias.name);\n                    excludedSelects.push(excludedSelect);\n                }\n            }\n        });\n        // add all other selects\n        this.expressionMap.selects\n            .filter((select) => excludedSelects.indexOf(select) === -1)\n            .forEach((select) => allSelects.push({\n            selection: this.replacePropertyNames(select.selection),\n            aliasName: select.aliasName,\n        }));\n        // if still selection is empty, then simply set it to all (*)\n        if (allSelects.length === 0)\n            allSelects.push({ selection: \"*\" });\n        // Use certain index\n        let useIndex = \"\";\n        if (this.expressionMap.useIndex) {\n            if (DriverUtils.isMySQLFamily(this.connection.driver)) {\n                useIndex = ` USE INDEX (${this.expressionMap.useIndex})`;\n            }\n        }\n        // create a selection query\n        const froms = this.expressionMap.aliases\n            .filter((alias) => alias.type === \"from\" &&\n            (alias.tablePath || alias.subQuery))\n            .map((alias) => {\n            if (alias.subQuery)\n                return alias.subQuery + \" \" + this.escape(alias.name);\n            return (this.getTableName(alias.tablePath) +\n                \" \" +\n                this.escape(alias.name));\n        });\n        const select = this.createSelectDistinctExpression();\n        const selection = allSelects\n            .map((select) => select.selection +\n            (select.aliasName\n                ? \" AS \" + this.escape(select.aliasName)\n                : \"\"))\n            .join(\", \");\n        return (select +\n            selection +\n            \" FROM \" +\n            froms.join(\", \") +\n            this.createTableLockExpression() +\n            useIndex);\n    }\n    /**\n     * Creates select | select distinct part of SQL query.\n     */\n    createSelectDistinctExpression() {\n        const { selectDistinct, selectDistinctOn, maxExecutionTime } = this.expressionMap;\n        const { driver } = this.connection;\n        let select = \"SELECT \";\n        if (maxExecutionTime > 0) {\n            if (DriverUtils.isMySQLFamily(driver)) {\n                select += `/*+ MAX_EXECUTION_TIME(${this.expressionMap.maxExecutionTime}) */ `;\n            }\n        }\n        if (DriverUtils.isPostgresFamily(driver) &&\n            selectDistinctOn.length > 0) {\n            const selectDistinctOnMap = selectDistinctOn\n                .map((on) => this.replacePropertyNames(on))\n                .join(\", \");\n            select = `SELECT DISTINCT ON (${selectDistinctOnMap}) `;\n        }\n        else if (selectDistinct) {\n            select = \"SELECT DISTINCT \";\n        }\n        return select;\n    }\n    /**\n     * Creates \"JOIN\" part of SQL query.\n     */\n    createJoinExpression() {\n        // examples:\n        // select from owning side\n        // qb.select(\"post\")\n        //     .leftJoinAndSelect(\"post.category\", \"category\");\n        // select from non-owning side\n        // qb.select(\"category\")\n        //     .leftJoinAndSelect(\"category.post\", \"post\");\n        const joins = this.expressionMap.joinAttributes.map((joinAttr) => {\n            const relation = joinAttr.relation;\n            const destinationTableName = joinAttr.tablePath;\n            const destinationTableAlias = joinAttr.alias.name;\n            let appendedCondition = joinAttr.condition\n                ? \" AND (\" + joinAttr.condition + \")\"\n                : \"\";\n            const parentAlias = joinAttr.parentAlias;\n            // if join was build without relation (e.g. without \"post.category\") then it means that we have direct\n            // table to join, without junction table involved. This means we simply join direct table.\n            if (!parentAlias || !relation) {\n                const destinationJoin = joinAttr.alias.subQuery\n                    ? joinAttr.alias.subQuery\n                    : this.getTableName(destinationTableName);\n                return (\" \" +\n                    joinAttr.direction +\n                    \" JOIN \" +\n                    destinationJoin +\n                    \" \" +\n                    this.escape(destinationTableAlias) +\n                    this.createTableLockExpression() +\n                    (joinAttr.condition\n                        ? \" ON \" + this.replacePropertyNames(joinAttr.condition)\n                        : \"\"));\n            }\n            // if real entity relation is involved\n            if (relation.isManyToOne || relation.isOneToOneOwner) {\n                // JOIN `category` `category` ON `category`.`id` = `post`.`categoryId`\n                const condition = relation.joinColumns\n                    .map((joinColumn) => {\n                    return (destinationTableAlias +\n                        \".\" +\n                        joinColumn.referencedColumn.propertyPath +\n                        \"=\" +\n                        parentAlias +\n                        \".\" +\n                        relation.propertyPath +\n                        \".\" +\n                        joinColumn.referencedColumn.propertyPath);\n                })\n                    .join(\" AND \");\n                return (\" \" +\n                    joinAttr.direction +\n                    \" JOIN \" +\n                    this.getTableName(destinationTableName) +\n                    \" \" +\n                    this.escape(destinationTableAlias) +\n                    this.createTableLockExpression() +\n                    \" ON \" +\n                    this.replacePropertyNames(condition + appendedCondition));\n            }\n            else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n                // JOIN `post` `post` ON `post`.`categoryId` = `category`.`id`\n                const condition = relation\n                    .inverseRelation.joinColumns.map((joinColumn) => {\n                    if (relation.inverseEntityMetadata.tableType ===\n                        \"entity-child\" &&\n                        relation.inverseEntityMetadata.discriminatorColumn) {\n                        appendedCondition +=\n                            \" AND \" +\n                                destinationTableAlias +\n                                \".\" +\n                                relation.inverseEntityMetadata\n                                    .discriminatorColumn.databaseName +\n                                \"='\" +\n                                relation.inverseEntityMetadata\n                                    .discriminatorValue +\n                                \"'\";\n                    }\n                    return (destinationTableAlias +\n                        \".\" +\n                        relation.inverseRelation.propertyPath +\n                        \".\" +\n                        joinColumn.referencedColumn.propertyPath +\n                        \"=\" +\n                        parentAlias +\n                        \".\" +\n                        joinColumn.referencedColumn.propertyPath);\n                })\n                    .join(\" AND \");\n                if (!condition)\n                    throw new TypeORMError(`Relation ${relation.entityMetadata.name}.${relation.propertyName} does not have join columns.`);\n                return (\" \" +\n                    joinAttr.direction +\n                    \" JOIN \" +\n                    this.getTableName(destinationTableName) +\n                    \" \" +\n                    this.escape(destinationTableAlias) +\n                    this.createTableLockExpression() +\n                    \" ON \" +\n                    this.replacePropertyNames(condition + appendedCondition));\n            }\n            else {\n                // means many-to-many\n                const junctionTableName = relation.junctionEntityMetadata.tablePath;\n                const junctionAlias = joinAttr.junctionAlias;\n                let junctionCondition = \"\", destinationCondition = \"\";\n                if (relation.isOwning) {\n                    junctionCondition = relation.joinColumns\n                        .map((joinColumn) => {\n                        // `post_category`.`postId` = `post`.`id`\n                        return (junctionAlias +\n                            \".\" +\n                            joinColumn.propertyPath +\n                            \"=\" +\n                            parentAlias +\n                            \".\" +\n                            joinColumn.referencedColumn.propertyPath);\n                    })\n                        .join(\" AND \");\n                    destinationCondition = relation.inverseJoinColumns\n                        .map((joinColumn) => {\n                        // `category`.`id` = `post_category`.`categoryId`\n                        return (destinationTableAlias +\n                            \".\" +\n                            joinColumn.referencedColumn.propertyPath +\n                            \"=\" +\n                            junctionAlias +\n                            \".\" +\n                            joinColumn.propertyPath);\n                    })\n                        .join(\" AND \");\n                }\n                else {\n                    junctionCondition = relation\n                        .inverseRelation.inverseJoinColumns.map((joinColumn) => {\n                        // `post_category`.`categoryId` = `category`.`id`\n                        return (junctionAlias +\n                            \".\" +\n                            joinColumn.propertyPath +\n                            \"=\" +\n                            parentAlias +\n                            \".\" +\n                            joinColumn.referencedColumn.propertyPath);\n                    })\n                        .join(\" AND \");\n                    destinationCondition = relation\n                        .inverseRelation.joinColumns.map((joinColumn) => {\n                        // `post`.`id` = `post_category`.`postId`\n                        return (destinationTableAlias +\n                            \".\" +\n                            joinColumn.referencedColumn.propertyPath +\n                            \"=\" +\n                            junctionAlias +\n                            \".\" +\n                            joinColumn.propertyPath);\n                    })\n                        .join(\" AND \");\n                }\n                return (\" \" +\n                    joinAttr.direction +\n                    \" JOIN \" +\n                    this.getTableName(junctionTableName) +\n                    \" \" +\n                    this.escape(junctionAlias) +\n                    this.createTableLockExpression() +\n                    \" ON \" +\n                    this.replacePropertyNames(junctionCondition) +\n                    \" \" +\n                    joinAttr.direction +\n                    \" JOIN \" +\n                    this.getTableName(destinationTableName) +\n                    \" \" +\n                    this.escape(destinationTableAlias) +\n                    this.createTableLockExpression() +\n                    \" ON \" +\n                    this.replacePropertyNames(destinationCondition + appendedCondition));\n            }\n        });\n        return joins.join(\" \");\n    }\n    /**\n     * Creates \"GROUP BY\" part of SQL query.\n     */\n    createGroupByExpression() {\n        if (!this.expressionMap.groupBys || !this.expressionMap.groupBys.length)\n            return \"\";\n        return (\" GROUP BY \" +\n            this.replacePropertyNames(this.expressionMap.groupBys.join(\", \")));\n    }\n    /**\n     * Creates \"ORDER BY\" part of SQL query.\n     */\n    createOrderByExpression() {\n        const orderBys = this.expressionMap.allOrderBys;\n        if (Object.keys(orderBys).length === 0)\n            return \"\";\n        return (\" ORDER BY \" +\n            Object.keys(orderBys)\n                .map((columnName) => {\n                const orderValue = typeof orderBys[columnName] === \"string\"\n                    ? orderBys[columnName]\n                    : orderBys[columnName].order +\n                        \" \" +\n                        orderBys[columnName].nulls;\n                const selection = this.expressionMap.selects.find((s) => s.selection === columnName);\n                if (selection &&\n                    !selection.aliasName &&\n                    columnName.indexOf(\".\") !== -1) {\n                    const criteriaParts = columnName.split(\".\");\n                    const aliasName = criteriaParts[0];\n                    const propertyPath = criteriaParts.slice(1).join(\".\");\n                    const alias = this.expressionMap.aliases.find((alias) => alias.name === aliasName);\n                    if (alias) {\n                        const column = alias.metadata.findColumnWithPropertyPath(propertyPath);\n                        if (column) {\n                            const orderAlias = DriverUtils.buildAlias(this.connection.driver, undefined, aliasName, column.databaseName);\n                            return (this.escape(orderAlias) + \" \" + orderValue);\n                        }\n                    }\n                }\n                return (this.replacePropertyNames(columnName) + \" \" + orderValue);\n            })\n                .join(\", \"));\n    }\n    /**\n     * Creates \"LIMIT\" and \"OFFSET\" parts of SQL query.\n     */\n    createLimitOffsetExpression() {\n        // in the case if nothing is joined in the query builder we don't need to make two requests to get paginated results\n        // we can use regular limit / offset, that's why we add offset and limit construction here based on skip and take values\n        let offset = this.expressionMap.offset, limit = this.expressionMap.limit;\n        if (!offset &&\n            !limit &&\n            this.expressionMap.joinAttributes.length === 0) {\n            offset = this.expressionMap.skip;\n            limit = this.expressionMap.take;\n        }\n        if (this.connection.driver.options.type === \"mssql\") {\n            // Due to a limitation in SQL Server's parser implementation it does not support using\n            // OFFSET or FETCH NEXT without an ORDER BY clause being provided. In cases where the\n            // user does not request one we insert a dummy ORDER BY that does nothing and should\n            // have no effect on the query planner or on the order of the results returned.\n            // https://dba.stackexchange.com/a/193799\n            let prefix = \"\";\n            if ((limit || offset) &&\n                Object.keys(this.expressionMap.allOrderBys).length <= 0) {\n                prefix = \" ORDER BY (SELECT NULL)\";\n            }\n            if (limit && offset)\n                return (prefix +\n                    \" OFFSET \" +\n                    offset +\n                    \" ROWS FETCH NEXT \" +\n                    limit +\n                    \" ROWS ONLY\");\n            if (limit)\n                return (prefix + \" OFFSET 0 ROWS FETCH NEXT \" + limit + \" ROWS ONLY\");\n            if (offset)\n                return prefix + \" OFFSET \" + offset + \" ROWS\";\n        }\n        else if (DriverUtils.isMySQLFamily(this.connection.driver) ||\n            this.connection.driver.options.type === \"aurora-mysql\" ||\n            this.connection.driver.options.type === \"sap\" ||\n            this.connection.driver.options.type === \"spanner\") {\n            if (limit && offset)\n                return \" LIMIT \" + limit + \" OFFSET \" + offset;\n            if (limit)\n                return \" LIMIT \" + limit;\n            if (offset)\n                throw new OffsetWithoutLimitNotSupportedError();\n        }\n        else if (DriverUtils.isSQLiteFamily(this.connection.driver)) {\n            if (limit && offset)\n                return \" LIMIT \" + limit + \" OFFSET \" + offset;\n            if (limit)\n                return \" LIMIT \" + limit;\n            if (offset)\n                return \" LIMIT -1 OFFSET \" + offset;\n        }\n        else if (this.connection.driver.options.type === \"oracle\") {\n            if (limit && offset)\n                return (\" OFFSET \" +\n                    offset +\n                    \" ROWS FETCH NEXT \" +\n                    limit +\n                    \" ROWS ONLY\");\n            if (limit)\n                return \" FETCH NEXT \" + limit + \" ROWS ONLY\";\n            if (offset)\n                return \" OFFSET \" + offset + \" ROWS\";\n        }\n        else {\n            if (limit && offset)\n                return \" LIMIT \" + limit + \" OFFSET \" + offset;\n            if (limit)\n                return \" LIMIT \" + limit;\n            if (offset)\n                return \" OFFSET \" + offset;\n        }\n        return \"\";\n    }\n    /**\n     * Creates \"LOCK\" part of SELECT Query after table Clause\n     * ex.\n     *  SELECT 1\n     *  FROM USER U WITH (NOLOCK)\n     *  JOIN ORDER O WITH (NOLOCK)\n     *      ON U.ID=O.OrderID\n     */\n    createTableLockExpression() {\n        if (this.connection.driver.options.type === \"mssql\") {\n            switch (this.expressionMap.lockMode) {\n                case \"pessimistic_read\":\n                    return \" WITH (HOLDLOCK, ROWLOCK)\";\n                case \"pessimistic_write\":\n                    return \" WITH (UPDLOCK, ROWLOCK)\";\n                case \"dirty_read\":\n                    return \" WITH (NOLOCK)\";\n            }\n        }\n        return \"\";\n    }\n    /**\n     * Creates \"LOCK\" part of SQL query.\n     */\n    createLockExpression() {\n        const driver = this.connection.driver;\n        let lockTablesClause = \"\";\n        if (this.expressionMap.lockTables) {\n            if (!(DriverUtils.isPostgresFamily(driver) ||\n                driver.options.type === \"cockroachdb\")) {\n                throw new TypeORMError(\"Lock tables not supported in selected driver\");\n            }\n            if (this.expressionMap.lockTables.length < 1) {\n                throw new TypeORMError(\"lockTables cannot be an empty array\");\n            }\n            lockTablesClause = \" OF \" + this.expressionMap.lockTables.join(\", \");\n        }\n        let onLockExpression = \"\";\n        if (this.expressionMap.onLocked === \"nowait\") {\n            onLockExpression = \" NOWAIT\";\n        }\n        else if (this.expressionMap.onLocked === \"skip_locked\") {\n            onLockExpression = \" SKIP LOCKED\";\n        }\n        switch (this.expressionMap.lockMode) {\n            case \"pessimistic_read\":\n                if (driver.options.type === \"mysql\" ||\n                    driver.options.type === \"aurora-mysql\") {\n                    if (DriverUtils.isReleaseVersionOrGreater(driver, \"8.0.0\")) {\n                        return (\" FOR SHARE\" + lockTablesClause + onLockExpression);\n                    }\n                    else {\n                        return \" LOCK IN SHARE MODE\";\n                    }\n                }\n                else if (driver.options.type === \"mariadb\") {\n                    return \" LOCK IN SHARE MODE\";\n                }\n                else if (DriverUtils.isPostgresFamily(driver)) {\n                    return \" FOR SHARE\" + lockTablesClause + onLockExpression;\n                }\n                else if (driver.options.type === \"oracle\") {\n                    return \" FOR UPDATE\";\n                }\n                else if (driver.options.type === \"mssql\") {\n                    return \"\";\n                }\n                else {\n                    throw new LockNotSupportedOnGivenDriverError();\n                }\n            case \"pessimistic_write\":\n                if (DriverUtils.isMySQLFamily(driver) ||\n                    driver.options.type === \"aurora-mysql\" ||\n                    driver.options.type === \"oracle\") {\n                    return \" FOR UPDATE\" + onLockExpression;\n                }\n                else if (DriverUtils.isPostgresFamily(driver) ||\n                    driver.options.type === \"cockroachdb\") {\n                    return \" FOR UPDATE\" + lockTablesClause + onLockExpression;\n                }\n                else if (driver.options.type === \"mssql\") {\n                    return \"\";\n                }\n                else {\n                    throw new LockNotSupportedOnGivenDriverError();\n                }\n            case \"pessimistic_partial_write\":\n                if (DriverUtils.isPostgresFamily(driver)) {\n                    return \" FOR UPDATE\" + lockTablesClause + \" SKIP LOCKED\";\n                }\n                else if (DriverUtils.isMySQLFamily(driver)) {\n                    return \" FOR UPDATE SKIP LOCKED\";\n                }\n                else {\n                    throw new LockNotSupportedOnGivenDriverError();\n                }\n            case \"pessimistic_write_or_fail\":\n                if (DriverUtils.isPostgresFamily(driver) ||\n                    driver.options.type === \"cockroachdb\") {\n                    return \" FOR UPDATE\" + lockTablesClause + \" NOWAIT\";\n                }\n                else if (DriverUtils.isMySQLFamily(driver)) {\n                    return \" FOR UPDATE NOWAIT\";\n                }\n                else {\n                    throw new LockNotSupportedOnGivenDriverError();\n                }\n            case \"for_no_key_update\":\n                if (DriverUtils.isPostgresFamily(driver) ||\n                    driver.options.type === \"cockroachdb\") {\n                    return (\" FOR NO KEY UPDATE\" +\n                        lockTablesClause +\n                        onLockExpression);\n                }\n                else {\n                    throw new LockNotSupportedOnGivenDriverError();\n                }\n            case \"for_key_share\":\n                if (DriverUtils.isPostgresFamily(driver)) {\n                    return (\" FOR KEY SHARE\" + lockTablesClause + onLockExpression);\n                }\n                else {\n                    throw new LockNotSupportedOnGivenDriverError();\n                }\n            default:\n                return \"\";\n        }\n    }\n    /**\n     * Creates \"HAVING\" part of SQL query.\n     */\n    createHavingExpression() {\n        if (!this.expressionMap.havings || !this.expressionMap.havings.length)\n            return \"\";\n        const conditions = this.expressionMap.havings\n            .map((having, index) => {\n            switch (having.type) {\n                case \"and\":\n                    return ((index > 0 ? \"AND \" : \"\") +\n                        this.replacePropertyNames(having.condition));\n                case \"or\":\n                    return ((index > 0 ? \"OR \" : \"\") +\n                        this.replacePropertyNames(having.condition));\n                default:\n                    return this.replacePropertyNames(having.condition);\n            }\n        })\n            .join(\" \");\n        if (!conditions.length)\n            return \"\";\n        return \" HAVING \" + conditions;\n    }\n    buildEscapedEntityColumnSelects(aliasName, metadata) {\n        const hasMainAlias = this.expressionMap.selects.some((select) => select.selection === aliasName);\n        const columns = [];\n        if (hasMainAlias) {\n            columns.push(...metadata.columns.filter((column) => column.isSelect === true));\n        }\n        columns.push(...metadata.columns.filter((column) => {\n            return this.expressionMap.selects.some((select) => select.selection ===\n                aliasName + \".\" + column.propertyPath);\n        }));\n        // if user used partial selection and did not select some primary columns which are required to be selected\n        // we select those primary columns and mark them as \"virtual\". Later virtual column values will be removed from final entity\n        // to make entity contain exactly what user selected\n        if (columns.length === 0)\n            // however not in the case when nothing (even partial) was selected from this target (for example joins without selection)\n            return [];\n        const nonSelectedPrimaryColumns = this.expressionMap.queryEntity\n            ? metadata.primaryColumns.filter((primaryColumn) => columns.indexOf(primaryColumn) === -1)\n            : [];\n        const allColumns = [...columns, ...nonSelectedPrimaryColumns];\n        const finalSelects = [];\n        const escapedAliasName = this.escape(aliasName);\n        allColumns.forEach((column) => {\n            let selectionPath = escapedAliasName + \".\" + this.escape(column.databaseName);\n            if (column.isVirtualProperty && column.query) {\n                selectionPath = `(${column.query(escapedAliasName)})`;\n            }\n            if (this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                if (DriverUtils.isMySQLFamily(this.connection.driver) ||\n                    this.connection.driver.options.type === \"aurora-mysql\") {\n                    const useLegacy = this.connection.driver.options.legacySpatialSupport;\n                    const asText = useLegacy ? \"AsText\" : \"ST_AsText\";\n                    selectionPath = `${asText}(${selectionPath})`;\n                }\n                if (DriverUtils.isPostgresFamily(this.connection.driver))\n                    if (column.precision) {\n                        // cast to JSON to trigger parsing in the driver\n                        selectionPath = `ST_AsGeoJSON(${selectionPath}, ${column.precision})::json`;\n                    }\n                    else {\n                        selectionPath = `ST_AsGeoJSON(${selectionPath})::json`;\n                    }\n                if (this.connection.driver.options.type === \"mssql\")\n                    selectionPath = `${selectionPath}.ToString()`;\n            }\n            const selections = this.expressionMap.selects.filter((select) => select.selection === aliasName + \".\" + column.propertyPath);\n            if (selections.length) {\n                selections.forEach((selection) => {\n                    finalSelects.push({\n                        selection: selectionPath,\n                        aliasName: selection.aliasName\n                            ? selection.aliasName\n                            : DriverUtils.buildAlias(this.connection.driver, undefined, aliasName, column.databaseName),\n                        // todo: need to keep in mind that custom selection.aliasName breaks hydrator. fix it later!\n                        virtual: selection.virtual,\n                    });\n                });\n            }\n            else {\n                if (column.isVirtualProperty) {\n                    // Do not add unselected virtual properties to final select\n                    return;\n                }\n                finalSelects.push({\n                    selection: selectionPath,\n                    aliasName: DriverUtils.buildAlias(this.connection.driver, undefined, aliasName, column.databaseName),\n                    // todo: need to keep in mind that custom selection.aliasName breaks hydrator. fix it later!\n                    virtual: hasMainAlias,\n                });\n            }\n        });\n        return finalSelects;\n    }\n    findEntityColumnSelects(aliasName, metadata) {\n        const mainSelect = this.expressionMap.selects.find((select) => select.selection === aliasName);\n        if (mainSelect)\n            return [mainSelect];\n        return this.expressionMap.selects.filter((select) => {\n            return metadata.columns.some((column) => select.selection === aliasName + \".\" + column.propertyPath);\n        });\n    }\n    computeCountExpression() {\n        const mainAlias = this.expressionMap.mainAlias.name; // todo: will this work with \"fromTableName\"?\n        const metadata = this.expressionMap.mainAlias.metadata;\n        const primaryColumns = metadata.primaryColumns;\n        const distinctAlias = this.escape(mainAlias);\n        // If we aren't doing anything that will create a join, we can use a simpler `COUNT` instead\n        // so we prevent poor query patterns in the most likely cases\n        if (this.expressionMap.joinAttributes.length === 0 &&\n            this.expressionMap.relationIdAttributes.length === 0 &&\n            this.expressionMap.relationCountAttributes.length === 0) {\n            return \"COUNT(1)\";\n        }\n        // For everything else, we'll need to do some hackery to get the correct count values.\n        if (this.connection.driver.options.type === \"cockroachdb\" ||\n            DriverUtils.isPostgresFamily(this.connection.driver)) {\n            // Postgres and CockroachDB can pass multiple parameters to the `DISTINCT` function\n            // https://www.postgresql.org/docs/9.5/sql-select.html#SQL-DISTINCT\n            return (\"COUNT(DISTINCT(\" +\n                primaryColumns\n                    .map((c) => `${distinctAlias}.${this.escape(c.databaseName)}`)\n                    .join(\", \") +\n                \"))\");\n        }\n        if (DriverUtils.isMySQLFamily(this.connection.driver)) {\n            // MySQL & MariaDB can pass multiple parameters to the `DISTINCT` language construct\n            // https://mariadb.com/kb/en/count-distinct/\n            return (\"COUNT(DISTINCT \" +\n                primaryColumns\n                    .map((c) => `${distinctAlias}.${this.escape(c.databaseName)}`)\n                    .join(\", \") +\n                \")\");\n        }\n        if (this.connection.driver.options.type === \"mssql\") {\n            // SQL Server has gotta be different from everyone else.  They don't support\n            // distinct counting multiple columns & they don't have the same operator\n            // characteristic for concatenating, so we gotta use the `CONCAT` function.\n            // However, If it's exactly 1 column we can omit the `CONCAT` for better performance.\n            const columnsExpression = primaryColumns\n                .map((primaryColumn) => `${distinctAlias}.${this.escape(primaryColumn.databaseName)}`)\n                .join(\", '|;|', \");\n            if (primaryColumns.length === 1) {\n                return `COUNT(DISTINCT(${columnsExpression}))`;\n            }\n            return `COUNT(DISTINCT(CONCAT(${columnsExpression})))`;\n        }\n        if (this.connection.driver.options.type === \"spanner\") {\n            // spanner also has gotta be different from everyone else.\n            // they do not support concatenation of different column types without casting them to string\n            if (primaryColumns.length === 1) {\n                return `COUNT(DISTINCT(${distinctAlias}.${this.escape(primaryColumns[0].databaseName)}))`;\n            }\n            const columnsExpression = primaryColumns\n                .map((primaryColumn) => `CAST(${distinctAlias}.${this.escape(primaryColumn.databaseName)} AS STRING)`)\n                .join(\", '|;|', \");\n            return `COUNT(DISTINCT(CONCAT(${columnsExpression})))`;\n        }\n        // If all else fails, fall back to a `COUNT` and `DISTINCT` across all the primary columns concatenated.\n        // Per the SQL spec, this is the canonical string concatenation mechanism which is most\n        // likely to work across servers implementing the SQL standard.\n        // Please note, if there is only one primary column that the concatenation does not occur in this\n        // query and the query is a standard `COUNT DISTINCT` in that case.\n        return (`COUNT(DISTINCT(` +\n            primaryColumns\n                .map((c) => `${distinctAlias}.${this.escape(c.databaseName)}`)\n                .join(\" || '|;|' || \") +\n            \"))\");\n    }\n    async executeCountQuery(queryRunner) {\n        const countSql = this.computeCountExpression();\n        const results = await this.clone()\n            .orderBy()\n            .groupBy()\n            .offset(undefined)\n            .limit(undefined)\n            .skip(undefined)\n            .take(undefined)\n            .select(countSql, \"cnt\")\n            .setOption(\"disable-global-order\")\n            .loadRawResults(queryRunner);\n        if (!results || !results[0] || !results[0][\"cnt\"])\n            return 0;\n        return parseInt(results[0][\"cnt\"]);\n    }\n    async executeExistsQuery(queryRunner) {\n        const results = await this.connection\n            .createQueryBuilder()\n            .fromDummy()\n            .select(\"1\", \"row_exists\")\n            .whereExists(this)\n            .limit(1)\n            .loadRawResults(queryRunner);\n        return results.length > 0;\n    }\n    applyFindOptions() {\n        // todo: convert relations: string[] to object map to simplify code\n        // todo: same with selects\n        if (this.expressionMap.mainAlias.metadata) {\n            if (this.findOptions.relationLoadStrategy) {\n                this.expressionMap.relationLoadStrategy =\n                    this.findOptions.relationLoadStrategy;\n            }\n            if (this.findOptions.comment) {\n                this.comment(this.findOptions.comment);\n            }\n            if (this.findOptions.withDeleted) {\n                this.withDeleted();\n            }\n            if (this.findOptions.select) {\n                const select = Array.isArray(this.findOptions.select)\n                    ? OrmUtils.propertyPathsToTruthyObject(this.findOptions.select)\n                    : this.findOptions.select;\n                this.buildSelect(select, this.expressionMap.mainAlias.metadata, this.expressionMap.mainAlias.name);\n            }\n            if (this.selects.length) {\n                this.select(this.selects);\n            }\n            this.selects = [];\n            if (this.findOptions.relations) {\n                const relations = Array.isArray(this.findOptions.relations)\n                    ? OrmUtils.propertyPathsToTruthyObject(this.findOptions.relations)\n                    : this.findOptions.relations;\n                this.buildRelations(relations, typeof this.findOptions.select === \"object\"\n                    ? this.findOptions.select\n                    : undefined, this.expressionMap.mainAlias.metadata, this.expressionMap.mainAlias.name);\n                if (this.findOptions.loadEagerRelations !== false &&\n                    this.expressionMap.relationLoadStrategy === \"join\") {\n                    this.buildEagerRelations(relations, typeof this.findOptions.select === \"object\"\n                        ? this.findOptions\n                            .select\n                        : undefined, this.expressionMap.mainAlias.metadata, this.expressionMap.mainAlias.name);\n                }\n            }\n            if (this.selects.length) {\n                this.addSelect(this.selects);\n            }\n            if (this.findOptions.where) {\n                this.conditions = this.buildWhere(this.findOptions.where, this.expressionMap.mainAlias.metadata, this.expressionMap.mainAlias.name);\n                if (this.conditions.length)\n                    this.andWhere(this.conditions.substr(0, 1) !== \"(\"\n                        ? \"(\" + this.conditions + \")\"\n                        : this.conditions); // temporary and where and braces\n            }\n            if (this.findOptions.order) {\n                this.buildOrder(this.findOptions.order, this.expressionMap.mainAlias.metadata, this.expressionMap.mainAlias.name);\n            }\n            // apply joins\n            if (this.joins.length) {\n                this.joins.forEach((join) => {\n                    if (join.select && !join.selection) {\n                        // if (join.selection) {\n                        //\n                        // } else {\n                        if (join.type === \"inner\") {\n                            this.innerJoinAndSelect(`${join.parentAlias}.${join.relationMetadata.propertyPath}`, join.alias);\n                        }\n                        else {\n                            this.leftJoinAndSelect(`${join.parentAlias}.${join.relationMetadata.propertyPath}`, join.alias);\n                        }\n                        // }\n                    }\n                    else {\n                        if (join.type === \"inner\") {\n                            this.innerJoin(`${join.parentAlias}.${join.relationMetadata.propertyPath}`, join.alias);\n                        }\n                        else {\n                            this.leftJoin(`${join.parentAlias}.${join.relationMetadata.propertyPath}`, join.alias);\n                        }\n                    }\n                    // if (join.select) {\n                    //     if (this.findOptions.loadEagerRelations !== false) {\n                    //         FindOptionsUtils.joinEagerRelations(\n                    //             this,\n                    //             join.alias,\n                    //             join.relationMetadata.inverseEntityMetadata\n                    //         );\n                    //     }\n                    // }\n                });\n            }\n            // if (this.conditions.length) {\n            //     this.where(this.conditions.join(\" AND \"));\n            // }\n            // apply offset\n            if (this.findOptions.skip !== undefined) {\n                // if (this.findOptions.options && this.findOptions.options.pagination === false) {\n                //     this.offset(this.findOptions.skip);\n                // } else {\n                this.skip(this.findOptions.skip);\n                // }\n            }\n            // apply limit\n            if (this.findOptions.take !== undefined) {\n                // if (this.findOptions.options && this.findOptions.options.pagination === false) {\n                //     this.limit(this.findOptions.take);\n                // } else {\n                this.take(this.findOptions.take);\n                // }\n            }\n            // apply caching options\n            if (typeof this.findOptions.cache === \"number\") {\n                this.cache(this.findOptions.cache);\n            }\n            else if (typeof this.findOptions.cache === \"boolean\") {\n                this.cache(this.findOptions.cache);\n            }\n            else if (typeof this.findOptions.cache === \"object\") {\n                this.cache(this.findOptions.cache.id, this.findOptions.cache.milliseconds);\n            }\n            if (this.findOptions.join) {\n                if (this.findOptions.join.leftJoin)\n                    Object.keys(this.findOptions.join.leftJoin).forEach((key) => {\n                        this.leftJoin(this.findOptions.join.leftJoin[key], key);\n                    });\n                if (this.findOptions.join.innerJoin)\n                    Object.keys(this.findOptions.join.innerJoin).forEach((key) => {\n                        this.innerJoin(this.findOptions.join.innerJoin[key], key);\n                    });\n                if (this.findOptions.join.leftJoinAndSelect)\n                    Object.keys(this.findOptions.join.leftJoinAndSelect).forEach((key) => {\n                        this.leftJoinAndSelect(this.findOptions.join.leftJoinAndSelect[key], key);\n                    });\n                if (this.findOptions.join.innerJoinAndSelect)\n                    Object.keys(this.findOptions.join.innerJoinAndSelect).forEach((key) => {\n                        this.innerJoinAndSelect(this.findOptions.join.innerJoinAndSelect[key], key);\n                    });\n            }\n            if (this.findOptions.lock) {\n                if (this.findOptions.lock.mode === \"optimistic\") {\n                    this.setLock(this.findOptions.lock.mode, this.findOptions.lock.version);\n                }\n                else if (this.findOptions.lock.mode === \"pessimistic_read\" ||\n                    this.findOptions.lock.mode === \"pessimistic_write\" ||\n                    this.findOptions.lock.mode === \"dirty_read\" ||\n                    this.findOptions.lock.mode ===\n                        \"pessimistic_partial_write\" ||\n                    this.findOptions.lock.mode ===\n                        \"pessimistic_write_or_fail\" ||\n                    this.findOptions.lock.mode === \"for_no_key_update\" ||\n                    this.findOptions.lock.mode === \"for_key_share\") {\n                    const tableNames = this.findOptions.lock.tables\n                        ? this.findOptions.lock.tables.map((table) => {\n                            const tableAlias = this.expressionMap.aliases.find((alias) => {\n                                return (alias.metadata\n                                    .tableNameWithoutPrefix === table);\n                            });\n                            if (!tableAlias) {\n                                throw new TypeORMError(`\"${table}\" is not part of this query`);\n                            }\n                            return this.escape(tableAlias.name);\n                        })\n                        : undefined;\n                    this.setLock(this.findOptions.lock.mode, undefined, tableNames);\n                    if (this.findOptions.lock.onLocked) {\n                        this.setOnLocked(this.findOptions.lock.onLocked);\n                    }\n                }\n            }\n            if (this.findOptions.loadRelationIds === true) {\n                this.loadAllRelationIds();\n            }\n            else if (typeof this.findOptions.loadRelationIds === \"object\") {\n                this.loadAllRelationIds(this.findOptions.loadRelationIds);\n            }\n            if (this.findOptions.loadEagerRelations !== false) {\n                FindOptionsUtils.joinEagerRelations(this, this.expressionMap.mainAlias.name, this.expressionMap.mainAlias.metadata);\n            }\n            if (this.findOptions.transaction === true) {\n                this.expressionMap.useTransaction = true;\n            }\n            // if (this.orderBys.length) {\n            //     this.orderBys.forEach(orderBy => {\n            //         this.addOrderBy(orderBy.alias, orderBy.direction, orderBy.nulls);\n            //     });\n            // }\n            // todo\n            // if (this.options.options && this.options.options.eagerRelations) {\n            //     this.queryBuilder\n            // }\n            // todo\n            // if (this.findOptions.options && this.findOptions.listeners === false) {\n            //     this.callListeners(false);\n            // }\n        }\n    }\n    concatRelationMetadata(relationMetadata) {\n        this.relationMetadatas.push(relationMetadata);\n    }\n    /**\n     * Executes sql generated by query builder and returns object with raw results and entities created from them.\n     */\n    async executeEntitiesAndRawResults(queryRunner) {\n        if (!this.expressionMap.mainAlias)\n            throw new TypeORMError(`Alias is not set. Use \"from\" method to set an alias.`);\n        if ((this.expressionMap.lockMode === \"pessimistic_read\" ||\n            this.expressionMap.lockMode === \"pessimistic_write\" ||\n            this.expressionMap.lockMode === \"pessimistic_partial_write\" ||\n            this.expressionMap.lockMode === \"pessimistic_write_or_fail\" ||\n            this.expressionMap.lockMode === \"for_no_key_update\" ||\n            this.expressionMap.lockMode === \"for_key_share\") &&\n            !queryRunner.isTransactionActive)\n            throw new PessimisticLockTransactionRequiredError();\n        if (this.expressionMap.lockMode === \"optimistic\") {\n            const metadata = this.expressionMap.mainAlias.metadata;\n            if (!metadata.versionColumn && !metadata.updateDateColumn)\n                throw new NoVersionOrUpdateDateColumnError(metadata.name);\n        }\n        const relationIdLoader = new RelationIdLoader(this.connection, queryRunner, this.expressionMap.relationIdAttributes);\n        const relationCountLoader = new RelationCountLoader(this.connection, queryRunner, this.expressionMap.relationCountAttributes);\n        const relationIdMetadataTransformer = new RelationIdMetadataToAttributeTransformer(this.expressionMap);\n        relationIdMetadataTransformer.transform();\n        const relationCountMetadataTransformer = new RelationCountMetadataToAttributeTransformer(this.expressionMap);\n        relationCountMetadataTransformer.transform();\n        let rawResults = [], entities = [];\n        // for pagination enabled (e.g. skip and take) its much more complicated - its a special process\n        // where we make two queries to find the data we need\n        // first query find ids in skip and take range\n        // and second query loads the actual data in given ids range\n        if ((this.expressionMap.skip || this.expressionMap.take) &&\n            this.expressionMap.joinAttributes.length > 0) {\n            // we are skipping order by here because its not working in subqueries anyway\n            // to make order by working we need to apply it on a distinct query\n            const [selects, orderBys] = this.createOrderByCombinedWithSelectExpression(\"distinctAlias\");\n            const metadata = this.expressionMap.mainAlias.metadata;\n            const mainAliasName = this.expressionMap.mainAlias.name;\n            const querySelects = metadata.primaryColumns.map((primaryColumn) => {\n                const distinctAlias = this.escape(\"distinctAlias\");\n                const columnAlias = this.escape(DriverUtils.buildAlias(this.connection.driver, undefined, mainAliasName, primaryColumn.databaseName));\n                if (!orderBys[columnAlias])\n                    // make sure we aren't overriding user-defined order in inverse direction\n                    orderBys[columnAlias] = \"ASC\";\n                const alias = DriverUtils.buildAlias(this.connection.driver, undefined, \"ids_\" + mainAliasName, primaryColumn.databaseName);\n                return `${distinctAlias}.${columnAlias} AS ${this.escape(alias)}`;\n            });\n            const originalQuery = this.clone();\n            // preserve original timeTravel value since we set it to \"false\" in subquery\n            const originalQueryTimeTravel = originalQuery.expressionMap.timeTravel;\n            rawResults = await new SelectQueryBuilder(this.connection, queryRunner)\n                .select(`DISTINCT ${querySelects.join(\", \")}`)\n                .addSelect(selects)\n                .from(`(${originalQuery\n                .orderBy()\n                .timeTravelQuery(false) // set it to \"false\" since time travel clause must appear at the very end and applies to the entire SELECT clause.\n                .getQuery()})`, \"distinctAlias\")\n                .timeTravelQuery(originalQueryTimeTravel)\n                .offset(this.expressionMap.skip)\n                .limit(this.expressionMap.take)\n                .orderBy(orderBys)\n                .cache(this.expressionMap.cache && this.expressionMap.cacheId\n                ? `${this.expressionMap.cacheId}-pagination`\n                : this.expressionMap.cache, this.expressionMap.cacheDuration)\n                .setParameters(this.getParameters())\n                .setNativeParameters(this.expressionMap.nativeParameters)\n                .getRawMany();\n            if (rawResults.length > 0) {\n                let condition = \"\";\n                const parameters = {};\n                if (metadata.hasMultiplePrimaryKeys) {\n                    condition = rawResults\n                        .map((result, index) => {\n                        return metadata.primaryColumns\n                            .map((primaryColumn) => {\n                            const paramKey = `orm_distinct_ids_${index}_${primaryColumn.databaseName}`;\n                            const paramKeyResult = DriverUtils.buildAlias(this.connection.driver, undefined, \"ids_\" + mainAliasName, primaryColumn.databaseName);\n                            parameters[paramKey] =\n                                result[paramKeyResult];\n                            return `${mainAliasName}.${primaryColumn.propertyPath}=:${paramKey}`;\n                        })\n                            .join(\" AND \");\n                    })\n                        .join(\" OR \");\n                }\n                else {\n                    const alias = DriverUtils.buildAlias(this.connection.driver, undefined, \"ids_\" + mainAliasName, metadata.primaryColumns[0].databaseName);\n                    const ids = rawResults.map((result) => result[alias]);\n                    const areAllNumbers = ids.every((id) => typeof id === \"number\");\n                    if (areAllNumbers) {\n                        // fixes #190. if all numbers then its safe to perform query without parameter\n                        condition = `${mainAliasName}.${metadata.primaryColumns[0].propertyPath} IN (${ids.join(\", \")})`;\n                    }\n                    else {\n                        parameters[\"orm_distinct_ids\"] = ids;\n                        condition =\n                            mainAliasName +\n                                \".\" +\n                                metadata.primaryColumns[0].propertyPath +\n                                \" IN (:...orm_distinct_ids)\";\n                    }\n                }\n                rawResults = await this.clone()\n                    .mergeExpressionMap({\n                    extraAppendedAndWhereCondition: condition,\n                })\n                    .setParameters(parameters)\n                    .loadRawResults(queryRunner);\n            }\n        }\n        else {\n            rawResults = await this.loadRawResults(queryRunner);\n        }\n        if (rawResults.length > 0) {\n            // transform raw results into entities\n            const rawRelationIdResults = await relationIdLoader.load(rawResults);\n            const rawRelationCountResults = await relationCountLoader.load(rawResults);\n            const transformer = new RawSqlResultsToEntityTransformer(this.expressionMap, this.connection.driver, rawRelationIdResults, rawRelationCountResults, this.queryRunner);\n            entities = transformer.transform(rawResults, this.expressionMap.mainAlias);\n            // broadcast all \"after load\" events\n            if (this.expressionMap.callListeners === true &&\n                this.expressionMap.mainAlias.hasMetadata) {\n                await queryRunner.broadcaster.broadcast(\"Load\", this.expressionMap.mainAlias.metadata, entities);\n            }\n        }\n        if (this.expressionMap.relationLoadStrategy === \"query\") {\n            const queryStrategyRelationIdLoader = new QueryStrategyRelationIdLoader(this.connection, queryRunner);\n            await Promise.all(this.relationMetadatas.map(async (relation) => {\n                const relationTarget = relation.inverseEntityMetadata.target;\n                const relationAlias = relation.inverseEntityMetadata.targetName;\n                const select = Array.isArray(this.findOptions.select)\n                    ? OrmUtils.propertyPathsToTruthyObject(this.findOptions.select)\n                    : this.findOptions.select;\n                const relations = Array.isArray(this.findOptions.relations)\n                    ? OrmUtils.propertyPathsToTruthyObject(this.findOptions.relations)\n                    : this.findOptions.relations;\n                const queryBuilder = this.createQueryBuilder(queryRunner)\n                    .select(relationAlias)\n                    .from(relationTarget, relationAlias)\n                    .setFindOptions({\n                    select: select\n                        ? OrmUtils.deepValue(select, relation.propertyPath)\n                        : undefined,\n                    order: this.findOptions.order\n                        ? OrmUtils.deepValue(this.findOptions.order, relation.propertyPath)\n                        : undefined,\n                    relations: relations\n                        ? OrmUtils.deepValue(relations, relation.propertyPath)\n                        : undefined,\n                    withDeleted: this.findOptions.withDeleted,\n                    relationLoadStrategy: this.findOptions.relationLoadStrategy,\n                });\n                if (entities.length > 0) {\n                    const relatedEntityGroups = await queryStrategyRelationIdLoader.loadManyToManyRelationIdsAndGroup(relation, entities, undefined, queryBuilder);\n                    entities.forEach((entity) => {\n                        const relatedEntityGroup = relatedEntityGroups.find((group) => group.entity === entity);\n                        if (relatedEntityGroup) {\n                            const value = relatedEntityGroup.related === undefined\n                                ? null\n                                : relatedEntityGroup.related;\n                            relation.setEntityValue(entity, value);\n                        }\n                    });\n                }\n            }));\n        }\n        return {\n            raw: rawResults,\n            entities: entities,\n        };\n    }\n    createOrderByCombinedWithSelectExpression(parentAlias) {\n        // if table has a default order then apply it\n        const orderBys = this.expressionMap.allOrderBys;\n        const selectString = Object.keys(orderBys)\n            .map((orderCriteria) => {\n            if (orderCriteria.indexOf(\".\") !== -1) {\n                const criteriaParts = orderCriteria.split(\".\");\n                const aliasName = criteriaParts[0];\n                const propertyPath = criteriaParts.slice(1).join(\".\");\n                const alias = this.expressionMap.findAliasByName(aliasName);\n                const column = alias.metadata.findColumnWithPropertyPath(propertyPath);\n                return (this.escape(parentAlias) +\n                    \".\" +\n                    this.escape(DriverUtils.buildAlias(this.connection.driver, undefined, aliasName, column.databaseName)));\n            }\n            else {\n                if (this.expressionMap.selects.find((select) => select.selection === orderCriteria ||\n                    select.aliasName === orderCriteria))\n                    return (this.escape(parentAlias) +\n                        \".\" +\n                        this.escape(orderCriteria));\n                return \"\";\n            }\n        })\n            .join(\", \");\n        const orderByObject = {};\n        Object.keys(orderBys).forEach((orderCriteria) => {\n            if (orderCriteria.indexOf(\".\") !== -1) {\n                const criteriaParts = orderCriteria.split(\".\");\n                const aliasName = criteriaParts[0];\n                const propertyPath = criteriaParts.slice(1).join(\".\");\n                const alias = this.expressionMap.findAliasByName(aliasName);\n                const column = alias.metadata.findColumnWithPropertyPath(propertyPath);\n                orderByObject[this.escape(parentAlias) +\n                    \".\" +\n                    this.escape(DriverUtils.buildAlias(this.connection.driver, undefined, aliasName, column.databaseName))] = orderBys[orderCriteria];\n            }\n            else {\n                if (this.expressionMap.selects.find((select) => select.selection === orderCriteria ||\n                    select.aliasName === orderCriteria)) {\n                    orderByObject[this.escape(parentAlias) +\n                        \".\" +\n                        this.escape(orderCriteria)] = orderBys[orderCriteria];\n                }\n                else {\n                    orderByObject[orderCriteria] = orderBys[orderCriteria];\n                }\n            }\n        });\n        return [selectString, orderByObject];\n    }\n    /**\n     * Loads raw results from the database.\n     */\n    async loadRawResults(queryRunner) {\n        const [sql, parameters] = this.getQueryAndParameters();\n        const queryId = sql +\n            \" -- PARAMETERS: \" +\n            JSON.stringify(parameters, (_, value) => typeof value === \"bigint\" ? value.toString() : value);\n        const cacheOptions = typeof this.connection.options.cache === \"object\"\n            ? this.connection.options.cache\n            : {};\n        let savedQueryResultCacheOptions = undefined;\n        const isCachingEnabled = \n        // Caching is enabled globally and isn't disabled locally.\n        (cacheOptions.alwaysEnabled &&\n            this.expressionMap.cache !== false) ||\n            // ...or it's enabled locally explicitly.\n            this.expressionMap.cache === true;\n        let cacheError = false;\n        if (this.connection.queryResultCache && isCachingEnabled) {\n            try {\n                savedQueryResultCacheOptions =\n                    await this.connection.queryResultCache.getFromCache({\n                        identifier: this.expressionMap.cacheId,\n                        query: queryId,\n                        duration: this.expressionMap.cacheDuration ||\n                            cacheOptions.duration ||\n                            1000,\n                    }, queryRunner);\n                if (savedQueryResultCacheOptions &&\n                    !this.connection.queryResultCache.isExpired(savedQueryResultCacheOptions)) {\n                    return JSON.parse(savedQueryResultCacheOptions.result);\n                }\n            }\n            catch (error) {\n                if (!cacheOptions.ignoreErrors) {\n                    throw error;\n                }\n                cacheError = true;\n            }\n        }\n        const results = await queryRunner.query(sql, parameters, true);\n        if (!cacheError &&\n            this.connection.queryResultCache &&\n            isCachingEnabled) {\n            try {\n                await this.connection.queryResultCache.storeInCache({\n                    identifier: this.expressionMap.cacheId,\n                    query: queryId,\n                    time: new Date().getTime(),\n                    duration: this.expressionMap.cacheDuration ||\n                        cacheOptions.duration ||\n                        1000,\n                    result: JSON.stringify(results.records),\n                }, savedQueryResultCacheOptions, queryRunner);\n            }\n            catch (error) {\n                if (!cacheOptions.ignoreErrors) {\n                    throw error;\n                }\n            }\n        }\n        return results.records;\n    }\n    /**\n     * Merges into expression map given expression map properties.\n     */\n    mergeExpressionMap(expressionMap) {\n        ObjectUtils.assign(this.expressionMap, expressionMap);\n        return this;\n    }\n    /**\n     * Normalizes a give number - converts to int if possible.\n     */\n    normalizeNumber(num) {\n        if (typeof num === \"number\" || num === undefined || num === null)\n            return num;\n        return Number(num);\n    }\n    /**\n     * Creates a query builder used to execute sql queries inside this query builder.\n     */\n    obtainQueryRunner() {\n        return (this.queryRunner ||\n            this.connection.createQueryRunner(this.connection.defaultReplicationModeForReads()));\n    }\n    buildSelect(select, metadata, alias, embedPrefix) {\n        for (let key in select) {\n            if (select[key] === undefined || select[key] === false)\n                continue;\n            const propertyPath = embedPrefix ? embedPrefix + \".\" + key : key;\n            const column = metadata.findColumnWithPropertyPathStrict(propertyPath);\n            const embed = metadata.findEmbeddedWithPropertyPath(propertyPath);\n            const relation = metadata.findRelationWithPropertyPath(propertyPath);\n            if (!embed && !column && !relation)\n                throw new EntityPropertyNotFoundError(propertyPath, metadata);\n            if (column) {\n                this.selects.push(alias + \".\" + propertyPath);\n                // this.addSelect(alias + \".\" + propertyPath);\n            }\n            else if (embed) {\n                this.buildSelect(select[key], metadata, alias, propertyPath);\n                // } else if (relation) {\n                //     const joinAlias = alias + \"_\" + relation.propertyName;\n                //     const existJoin = this.joins.find(join => join.alias === joinAlias);\n                //     if (!existJoin) {\n                //         this.joins.push({\n                //             type: \"left\",\n                //             select: false,\n                //             alias: joinAlias,\n                //             parentAlias: alias,\n                //             relationMetadata: relation\n                //         });\n                //     }\n                //     this.buildOrder(select[key] as FindOptionsOrder<any>, relation.inverseEntityMetadata, joinAlias);\n            }\n        }\n    }\n    buildRelations(relations, selection, metadata, alias, embedPrefix) {\n        if (!relations)\n            return;\n        Object.keys(relations).forEach((relationName) => {\n            const relationValue = relations[relationName];\n            const propertyPath = embedPrefix\n                ? embedPrefix + \".\" + relationName\n                : relationName;\n            const embed = metadata.findEmbeddedWithPropertyPath(propertyPath);\n            const relation = metadata.findRelationWithPropertyPath(propertyPath);\n            if (!embed && !relation)\n                throw new EntityPropertyNotFoundError(propertyPath, metadata);\n            if (embed) {\n                this.buildRelations(relationValue, typeof selection === \"object\"\n                    ? OrmUtils.deepValue(selection, embed.propertyPath)\n                    : undefined, metadata, alias, propertyPath);\n            }\n            else if (relation) {\n                let joinAlias = alias + \"_\" + propertyPath.replace(\".\", \"_\");\n                joinAlias = DriverUtils.buildAlias(this.connection.driver, { joiner: \"__\" }, alias, joinAlias);\n                if (relationValue === true ||\n                    typeof relationValue === \"object\") {\n                    if (this.expressionMap.relationLoadStrategy === \"query\") {\n                        this.concatRelationMetadata(relation);\n                    }\n                    else {\n                        // join\n                        this.joins.push({\n                            type: \"left\",\n                            select: true,\n                            selection: selection &&\n                                typeof selection[relationName] === \"object\"\n                                ? selection[relationName]\n                                : undefined,\n                            alias: joinAlias,\n                            parentAlias: alias,\n                            relationMetadata: relation,\n                        });\n                        if (selection &&\n                            typeof selection[relationName] === \"object\") {\n                            this.buildSelect(selection[relationName], relation.inverseEntityMetadata, joinAlias);\n                        }\n                    }\n                }\n                if (typeof relationValue === \"object\" &&\n                    this.expressionMap.relationLoadStrategy === \"join\") {\n                    this.buildRelations(relationValue, typeof selection === \"object\"\n                        ? OrmUtils.deepValue(selection, relation.propertyPath)\n                        : undefined, relation.inverseEntityMetadata, joinAlias, undefined);\n                }\n            }\n        });\n    }\n    buildEagerRelations(relations, selection, metadata, alias, embedPrefix) {\n        if (!relations)\n            return;\n        Object.keys(relations).forEach((relationName) => {\n            const relationValue = relations[relationName];\n            const propertyPath = embedPrefix\n                ? embedPrefix + \".\" + relationName\n                : relationName;\n            const embed = metadata.findEmbeddedWithPropertyPath(propertyPath);\n            const relation = metadata.findRelationWithPropertyPath(propertyPath);\n            if (!embed && !relation)\n                throw new EntityPropertyNotFoundError(propertyPath, metadata);\n            if (embed) {\n                this.buildEagerRelations(relationValue, typeof selection === \"object\"\n                    ? OrmUtils.deepValue(selection, embed.propertyPath)\n                    : undefined, metadata, alias, propertyPath);\n            }\n            else if (relation) {\n                let joinAlias = alias + \"_\" + propertyPath.replace(\".\", \"_\");\n                joinAlias = DriverUtils.buildAlias(this.connection.driver, { joiner: \"__\" }, alias, joinAlias);\n                if (relationValue === true ||\n                    typeof relationValue === \"object\") {\n                    relation.inverseEntityMetadata.eagerRelations.forEach((eagerRelation) => {\n                        let eagerRelationJoinAlias = joinAlias +\n                            \"_\" +\n                            eagerRelation.propertyPath.replace(\".\", \"_\");\n                        eagerRelationJoinAlias = DriverUtils.buildAlias(this.connection.driver, { joiner: \"__\" }, joinAlias, eagerRelationJoinAlias);\n                        const existJoin = this.joins.find((join) => join.alias === eagerRelationJoinAlias);\n                        if (!existJoin) {\n                            this.joins.push({\n                                type: \"left\",\n                                select: true,\n                                alias: eagerRelationJoinAlias,\n                                parentAlias: joinAlias,\n                                selection: undefined,\n                                relationMetadata: eagerRelation,\n                            });\n                        }\n                        if (selection &&\n                            typeof selection[relationName] === \"object\") {\n                            this.buildSelect(selection[relationName], relation.inverseEntityMetadata, joinAlias);\n                        }\n                    });\n                }\n                if (typeof relationValue === \"object\") {\n                    this.buildEagerRelations(relationValue, typeof selection === \"object\"\n                        ? OrmUtils.deepValue(selection, relation.propertyPath)\n                        : undefined, relation.inverseEntityMetadata, joinAlias, undefined);\n                }\n            }\n        });\n    }\n    buildOrder(order, metadata, alias, embedPrefix) {\n        for (let key in order) {\n            if (order[key] === undefined)\n                continue;\n            const propertyPath = embedPrefix ? embedPrefix + \".\" + key : key;\n            const column = metadata.findColumnWithPropertyPathStrict(propertyPath);\n            const embed = metadata.findEmbeddedWithPropertyPath(propertyPath);\n            const relation = metadata.findRelationWithPropertyPath(propertyPath);\n            if (!embed && !column && !relation)\n                throw new EntityPropertyNotFoundError(propertyPath, metadata);\n            if (column) {\n                let direction = typeof order[key] === \"object\"\n                    ? order[key].direction\n                    : order[key];\n                direction =\n                    direction === \"DESC\" ||\n                        direction === \"desc\" ||\n                        direction === -1\n                        ? \"DESC\"\n                        : \"ASC\";\n                let nulls = typeof order[key] === \"object\"\n                    ? order[key].nulls\n                    : undefined;\n                nulls =\n                    nulls?.toLowerCase() === \"first\"\n                        ? \"NULLS FIRST\"\n                        : nulls?.toLowerCase() === \"last\"\n                            ? \"NULLS LAST\"\n                            : undefined;\n                let aliasPath = `${alias}.${propertyPath}`;\n                // const selection = this.expressionMap.selects.find(\n                //     (s) => s.selection === aliasPath,\n                // )\n                // if (selection) {\n                //     // this is not building correctly now???\n                //     aliasPath = this.escape(\n                //         DriverUtils.buildAlias(\n                //             this.connection.driver,\n                //             undefined,\n                //             alias,\n                //             column.databaseName,\n                //         ),\n                //     )\n                //     // selection.aliasName = aliasPath\n                // } else {\n                //     if (column.isVirtualProperty && column.query) {\n                //         aliasPath = `(${column.query(alias)})`\n                //     }\n                // }\n                // console.log(\"add sort\", selection, aliasPath, direction, nulls)\n                this.addOrderBy(aliasPath, direction, nulls);\n                // this.orderBys.push({ alias: alias + \".\" + propertyPath, direction, nulls });\n            }\n            else if (embed) {\n                this.buildOrder(order[key], metadata, alias, propertyPath);\n            }\n            else if (relation) {\n                let joinAlias = alias + \"_\" + propertyPath.replace(\".\", \"_\");\n                joinAlias = DriverUtils.buildAlias(this.connection.driver, { joiner: \"__\" }, alias, joinAlias);\n                // console.log(\"joinAlias\", joinAlias, joinAlias.length, this.connection.driver.maxAliasLength)\n                // todo: use expressionMap.joinAttributes, and create a new one using\n                //  const joinAttribute = new JoinAttribute(this.connection, this.expressionMap);\n                const existJoin = this.joins.find((join) => join.alias === joinAlias);\n                if (!existJoin) {\n                    this.joins.push({\n                        type: \"left\",\n                        select: false,\n                        alias: joinAlias,\n                        parentAlias: alias,\n                        selection: undefined,\n                        relationMetadata: relation,\n                    });\n                }\n                this.buildOrder(order[key], relation.inverseEntityMetadata, joinAlias);\n            }\n        }\n    }\n    buildWhere(where, metadata, alias, embedPrefix) {\n        let condition = \"\";\n        // let parameterIndex = Object.keys(this.expressionMap.nativeParameters).length;\n        if (Array.isArray(where)) {\n            if (where.length) {\n                condition = where\n                    .map((whereItem) => {\n                    return this.buildWhere(whereItem, metadata, alias, embedPrefix);\n                })\n                    .filter((condition) => !!condition)\n                    .map((condition) => \"(\" + condition + \")\")\n                    .join(\" OR \");\n            }\n        }\n        else {\n            let andConditions = [];\n            for (let key in where) {\n                if (where[key] === undefined || where[key] === null)\n                    continue;\n                const propertyPath = embedPrefix ? embedPrefix + \".\" + key : key;\n                const column = metadata.findColumnWithPropertyPathStrict(propertyPath);\n                const embed = metadata.findEmbeddedWithPropertyPath(propertyPath);\n                const relation = metadata.findRelationWithPropertyPath(propertyPath);\n                if (!embed && !column && !relation)\n                    throw new EntityPropertyNotFoundError(propertyPath, metadata);\n                if (column) {\n                    let aliasPath = `${alias}.${propertyPath}`;\n                    if (column.isVirtualProperty && column.query) {\n                        aliasPath = `(${column.query(alias)})`;\n                    }\n                    // const parameterName = alias + \"_\" + propertyPath.split(\".\").join(\"_\") + \"_\" + parameterIndex;\n                    // todo: we need to handle other operators as well?\n                    let parameterValue = where[key];\n                    if (InstanceChecker.isEqualOperator(where[key])) {\n                        parameterValue = where[key].value;\n                    }\n                    if (column.transformer) {\n                        parameterValue instanceof FindOperator\n                            ? parameterValue.transformValue(column.transformer)\n                            : (parameterValue =\n                                ApplyValueTransformers.transformTo(column.transformer, parameterValue));\n                    }\n                    // if (parameterValue === null) {\n                    //     andConditions.push(`${aliasPath} IS NULL`);\n                    //\n                    // } else if (parameterValue instanceof FindOperator) {\n                    //     // let parameters: any[] = [];\n                    //     // if (parameterValue.useParameter) {\n                    //     //     const realParameterValues: any[] = parameterValue.multipleParameters ? parameterValue.value : [parameterValue.value];\n                    //     //     realParameterValues.forEach((realParameterValue, realParameterValueIndex) => {\n                    //     //\n                    //     //         // don't create parameters for number to prevent max number of variables issues as much as possible\n                    //     //         if (typeof realParameterValue === \"number\") {\n                    //     //             parameters.push(realParameterValue);\n                    //     //\n                    //     //         } else {\n                    //     //             this.expressionMap.nativeParameters[parameterName + realParameterValueIndex] = realParameterValue;\n                    //     //             parameterIndex++;\n                    //     //             parameters.push(this.connection.driver.createParameter(parameterName + realParameterValueIndex, parameterIndex - 1));\n                    //     //         }\n                    //     //     });\n                    //     // }\n                    //     andConditions.push(\n                    //         this.createWhereConditionExpression(this.getWherePredicateCondition(aliasPath, parameterValue))\n                    //         // parameterValue.toSql(this.connection, aliasPath, parameters));\n                    //     )\n                    //\n                    // } else {\n                    //     this.expressionMap.nativeParameters[parameterName] = parameterValue;\n                    //     parameterIndex++;\n                    //     const parameter = this.connection.driver.createParameter(parameterName, parameterIndex - 1);\n                    //     andConditions.push(`${aliasPath} = ${parameter}`);\n                    // }\n                    andConditions.push(this.createWhereConditionExpression(this.getWherePredicateCondition(aliasPath, parameterValue)));\n                    // this.conditions.push(`${alias}.${propertyPath} = :${paramName}`);\n                    // this.expressionMap.parameters[paramName] = where[key]; // todo: handle functions and other edge cases\n                }\n                else if (embed) {\n                    const condition = this.buildWhere(where[key], metadata, alias, propertyPath);\n                    if (condition)\n                        andConditions.push(condition);\n                }\n                else if (relation) {\n                    // if all properties of where are undefined we don't need to join anything\n                    // this can happen when user defines map with conditional queries inside\n                    if (typeof where[key] === \"object\") {\n                        const allAllUndefined = Object.keys(where[key]).every((k) => where[key][k] === undefined);\n                        if (allAllUndefined) {\n                            continue;\n                        }\n                    }\n                    if (InstanceChecker.isFindOperator(where[key])) {\n                        if (where[key].type === \"moreThan\" ||\n                            where[key].type === \"lessThan\" ||\n                            where[key].type === \"moreThanOrEqual\" ||\n                            where[key].type === \"lessThanOrEqual\") {\n                            let sqlOperator = \"\";\n                            if (where[key].type === \"moreThan\") {\n                                sqlOperator = \">\";\n                            }\n                            else if (where[key].type === \"lessThan\") {\n                                sqlOperator = \"<\";\n                            }\n                            else if (where[key].type === \"moreThanOrEqual\") {\n                                sqlOperator = \">=\";\n                            }\n                            else if (where[key].type === \"lessThanOrEqual\") {\n                                sqlOperator = \"<=\";\n                            }\n                            // basically relation count functionality\n                            const qb = this.subQuery();\n                            if (relation.isManyToManyOwner) {\n                                qb.select(\"COUNT(*)\")\n                                    .from(relation.joinTableName, relation.joinTableName)\n                                    .where(relation.joinColumns\n                                    .map((column) => {\n                                    return `${relation.joinTableName}.${column.propertyName} = ${alias}.${column.referencedColumn\n                                        .propertyName}`;\n                                })\n                                    .join(\" AND \"));\n                            }\n                            else if (relation.isManyToManyNotOwner) {\n                                qb.select(\"COUNT(*)\")\n                                    .from(relation.inverseRelation.joinTableName, relation.inverseRelation.joinTableName)\n                                    .where(relation\n                                    .inverseRelation.inverseJoinColumns.map((column) => {\n                                    return `${relation.inverseRelation\n                                        .joinTableName}.${column.propertyName} = ${alias}.${column.referencedColumn\n                                        .propertyName}`;\n                                })\n                                    .join(\" AND \"));\n                            }\n                            else if (relation.isOneToMany) {\n                                qb.select(\"COUNT(*)\")\n                                    .from(relation.inverseEntityMetadata.target, relation.inverseEntityMetadata\n                                    .tableName)\n                                    .where(relation\n                                    .inverseRelation.joinColumns.map((column) => {\n                                    return `${relation\n                                        .inverseEntityMetadata\n                                        .tableName}.${column.propertyName} = ${alias}.${column.referencedColumn\n                                        .propertyName}`;\n                                })\n                                    .join(\" AND \"));\n                            }\n                            else {\n                                throw new Error(`This relation isn't supported by given find operator`);\n                            }\n                            // this\n                            //     .addSelect(qb.getSql(), relation.propertyAliasName + \"_cnt\")\n                            //     .andWhere(this.escape(relation.propertyAliasName + \"_cnt\") + \" \" + sqlOperator + \" \" + parseInt(where[key].value));\n                            this.andWhere(qb.getSql() +\n                                \" \" +\n                                sqlOperator +\n                                \" \" +\n                                parseInt(where[key].value));\n                        }\n                        else {\n                            if (relation.isManyToOne ||\n                                (relation.isOneToOne &&\n                                    relation.isOneToOneOwner)) {\n                                const aliasPath = `${alias}.${propertyPath}`;\n                                andConditions.push(this.createWhereConditionExpression(this.getWherePredicateCondition(aliasPath, where[key])));\n                            }\n                            else {\n                                throw new Error(`This relation isn't supported by given find operator`);\n                            }\n                        }\n                    }\n                    else {\n                        // const joinAlias = alias + \"_\" + relation.propertyName;\n                        let joinAlias = alias +\n                            \"_\" +\n                            relation.propertyPath.replace(\".\", \"_\");\n                        joinAlias = DriverUtils.buildAlias(this.connection.driver, { joiner: \"__\" }, alias, joinAlias);\n                        const existJoin = this.joins.find((join) => join.alias === joinAlias);\n                        if (!existJoin) {\n                            this.joins.push({\n                                type: \"left\",\n                                select: false,\n                                selection: undefined,\n                                alias: joinAlias,\n                                parentAlias: alias,\n                                relationMetadata: relation,\n                            });\n                        }\n                        const condition = this.buildWhere(where[key], relation.inverseEntityMetadata, joinAlias);\n                        if (condition) {\n                            andConditions.push(condition);\n                            // parameterIndex = Object.keys(this.expressionMap.nativeParameters).length;\n                        }\n                    }\n                }\n            }\n            condition = andConditions.length\n                ? \"(\" + andConditions.join(\") AND (\") + \")\"\n                : andConditions.join(\" AND \");\n        }\n        return condition.length ? \"(\" + condition + \")\" : condition;\n    }\n}\n\n//# sourceMappingURL=SelectQueryBuilder.js.map\n","/**\n * Result object returned by UpdateQueryBuilder execution.\n */\nexport class UpdateResult {\n    constructor() {\n        /**\n         * Contains inserted entity id.\n         * Has entity-like structure (not just column database name and values).\n         */\n        // identifier: ObjectLiteral[] = [];\n        /**\n         * Generated values returned by a database.\n         * Has entity-like structure (not just column database name and values).\n         */\n        this.generatedMaps = [];\n    }\n    static from(queryResult) {\n        const result = new this();\n        result.raw = queryResult.records;\n        result.affected = queryResult.affected;\n        return result;\n    }\n}\n\n//# sourceMappingURL=UpdateResult.js.map\n","import { QueryBuilder } from \"./QueryBuilder\";\nimport { UpdateResult } from \"./result/UpdateResult\";\nimport { ReturningStatementNotSupportedError } from \"../error/ReturningStatementNotSupportedError\";\nimport { ReturningResultsEntityUpdator } from \"./ReturningResultsEntityUpdator\";\nimport { LimitOnUpdateNotSupportedError } from \"../error/LimitOnUpdateNotSupportedError\";\nimport { MissingDeleteDateColumnError } from \"../error/MissingDeleteDateColumnError\";\nimport { UpdateValuesMissingError } from \"../error/UpdateValuesMissingError\";\nimport { TypeORMError } from \"../error\";\nimport { DriverUtils } from \"../driver/DriverUtils\";\nimport { InstanceChecker } from \"../util/InstanceChecker\";\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nexport class SoftDeleteQueryBuilder extends QueryBuilder {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(connectionOrQueryBuilder, queryRunner) {\n        super(connectionOrQueryBuilder, queryRunner);\n        this[\"@instanceof\"] = Symbol.for(\"SoftDeleteQueryBuilder\");\n        this.expressionMap.aliasNamePrefixingEnabled = false;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated SQL query without parameters being replaced.\n     */\n    getQuery() {\n        let sql = this.createUpdateExpression();\n        sql += this.createCteExpression();\n        sql += this.createOrderByExpression();\n        sql += this.createLimitExpression();\n        return this.replacePropertyNamesForTheWholeQuery(sql.trim());\n    }\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    async execute() {\n        const queryRunner = this.obtainQueryRunner();\n        let transactionStartedByUs = false;\n        try {\n            // start transaction if it was enabled\n            if (this.expressionMap.useTransaction === true &&\n                queryRunner.isTransactionActive === false) {\n                await queryRunner.startTransaction();\n                transactionStartedByUs = true;\n            }\n            // call before soft remove and recover methods in listeners and subscribers\n            if (this.expressionMap.callListeners === true &&\n                this.expressionMap.mainAlias.hasMetadata) {\n                if (this.expressionMap.queryType === \"soft-delete\")\n                    await queryRunner.broadcaster.broadcast(\"BeforeSoftRemove\", this.expressionMap.mainAlias.metadata);\n                else if (this.expressionMap.queryType === \"restore\")\n                    await queryRunner.broadcaster.broadcast(\"BeforeRecover\", this.expressionMap.mainAlias.metadata);\n            }\n            // if update entity mode is enabled we may need extra columns for the returning statement\n            const returningResultsEntityUpdator = new ReturningResultsEntityUpdator(queryRunner, this.expressionMap);\n            if (this.expressionMap.updateEntity === true &&\n                this.expressionMap.mainAlias.hasMetadata &&\n                this.expressionMap.whereEntities.length > 0) {\n                this.expressionMap.extraReturningColumns =\n                    returningResultsEntityUpdator.getSoftDeletionReturningColumns();\n            }\n            // execute update query\n            const [sql, parameters] = this.getQueryAndParameters();\n            const queryResult = await queryRunner.query(sql, parameters, true);\n            const updateResult = UpdateResult.from(queryResult);\n            // if we are updating entities and entity updation is enabled we must update some of entity columns (like version, update date, etc.)\n            if (this.expressionMap.updateEntity === true &&\n                this.expressionMap.mainAlias.hasMetadata &&\n                this.expressionMap.whereEntities.length > 0) {\n                await returningResultsEntityUpdator.update(updateResult, this.expressionMap.whereEntities);\n            }\n            // call after soft remove and recover methods in listeners and subscribers\n            if (this.expressionMap.callListeners === true &&\n                this.expressionMap.mainAlias.hasMetadata) {\n                if (this.expressionMap.queryType === \"soft-delete\")\n                    await queryRunner.broadcaster.broadcast(\"AfterSoftRemove\", this.expressionMap.mainAlias.metadata);\n                else if (this.expressionMap.queryType === \"restore\")\n                    await queryRunner.broadcaster.broadcast(\"AfterRecover\", this.expressionMap.mainAlias.metadata);\n            }\n            // close transaction if we started it\n            if (transactionStartedByUs)\n                await queryRunner.commitTransaction();\n            return updateResult;\n        }\n        catch (error) {\n            // rollback transaction if we started it\n            if (transactionStartedByUs) {\n                try {\n                    await queryRunner.rollbackTransaction();\n                }\n                catch (rollbackError) { }\n            }\n            throw error;\n        }\n        finally {\n            if (queryRunner !== this.queryRunner) {\n                // means we created our own query runner\n                await queryRunner.release();\n            }\n        }\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Specifies FROM which entity's table select/update/delete/soft-delete will be executed.\n     * Also sets a main string alias of the selection data.\n     */\n    from(entityTarget, aliasName) {\n        entityTarget = InstanceChecker.isEntitySchema(entityTarget)\n            ? entityTarget.options.name\n            : entityTarget;\n        const mainAlias = this.createFromAlias(entityTarget, aliasName);\n        this.expressionMap.setMainAlias(mainAlias);\n        return this;\n    }\n    /**\n     * Sets WHERE condition in the query builder.\n     * If you had previously WHERE expression defined,\n     * calling this function will override previously set WHERE conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    where(where, parameters) {\n        this.expressionMap.wheres = []; // don't move this block below since computeWhereParameter can add where expressions\n        const condition = this.getWhereCondition(where);\n        if (condition)\n            this.expressionMap.wheres = [\n                { type: \"simple\", condition: condition },\n            ];\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Adds new AND WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    andWhere(where, parameters) {\n        this.expressionMap.wheres.push({\n            type: \"and\",\n            condition: this.getWhereCondition(where),\n        });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Adds new OR WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    orWhere(where, parameters) {\n        this.expressionMap.wheres.push({\n            type: \"or\",\n            condition: this.getWhereCondition(where),\n        });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    whereInIds(ids) {\n        return this.where(this.getWhereInIdsCondition(ids));\n    }\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    andWhereInIds(ids) {\n        return this.andWhere(this.getWhereInIdsCondition(ids));\n    }\n    /**\n     * Adds new OR WHERE with conditions for the given ids.\n     */\n    orWhereInIds(ids) {\n        return this.orWhere(this.getWhereInIdsCondition(ids));\n    }\n    /**\n     * Optional returning/output clause.\n     */\n    output(output) {\n        return this.returning(output);\n    }\n    /**\n     * Optional returning/output clause.\n     */\n    returning(returning) {\n        // not all databases support returning/output cause\n        if (!this.connection.driver.isReturningSqlSupported(\"update\")) {\n            throw new ReturningStatementNotSupportedError();\n        }\n        this.expressionMap.returning = returning;\n        return this;\n    }\n    /**\n     * Sets ORDER BY condition in the query builder.\n     * If you had previously ORDER BY expression defined,\n     * calling this function will override previously set ORDER BY conditions.\n     */\n    orderBy(sort, order = \"ASC\", nulls) {\n        if (sort) {\n            if (typeof sort === \"object\") {\n                this.expressionMap.orderBys = sort;\n            }\n            else {\n                if (nulls) {\n                    this.expressionMap.orderBys = {\n                        [sort]: { order, nulls },\n                    };\n                }\n                else {\n                    this.expressionMap.orderBys = { [sort]: order };\n                }\n            }\n        }\n        else {\n            this.expressionMap.orderBys = {};\n        }\n        return this;\n    }\n    /**\n     * Adds ORDER BY condition in the query builder.\n     */\n    addOrderBy(sort, order = \"ASC\", nulls) {\n        if (nulls) {\n            this.expressionMap.orderBys[sort] = { order, nulls };\n        }\n        else {\n            this.expressionMap.orderBys[sort] = order;\n        }\n        return this;\n    }\n    /**\n     * Sets LIMIT - maximum number of rows to be selected.\n     */\n    limit(limit) {\n        this.expressionMap.limit = limit;\n        return this;\n    }\n    /**\n     * Indicates if entity must be updated after update operation.\n     * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n     * Enabled by default.\n     */\n    whereEntity(entity) {\n        if (!this.expressionMap.mainAlias.hasMetadata)\n            throw new TypeORMError(`.whereEntity method can only be used on queries which update real entity table.`);\n        this.expressionMap.wheres = [];\n        const entities = Array.isArray(entity) ? entity : [entity];\n        entities.forEach((entity) => {\n            const entityIdMap = this.expressionMap.mainAlias.metadata.getEntityIdMap(entity);\n            if (!entityIdMap)\n                throw new TypeORMError(`Provided entity does not have ids set, cannot perform operation.`);\n            this.orWhereInIds(entityIdMap);\n        });\n        this.expressionMap.whereEntities = entities;\n        return this;\n    }\n    /**\n     * Indicates if entity must be updated after update operation.\n     * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n     * Enabled by default.\n     */\n    updateEntity(enabled) {\n        this.expressionMap.updateEntity = enabled;\n        return this;\n    }\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates UPDATE express used to perform insert query.\n     */\n    createUpdateExpression() {\n        const metadata = this.expressionMap.mainAlias.hasMetadata\n            ? this.expressionMap.mainAlias.metadata\n            : undefined;\n        if (!metadata)\n            throw new TypeORMError(`Cannot get entity metadata for the given alias \"${this.expressionMap.mainAlias}\"`);\n        if (!metadata.deleteDateColumn) {\n            throw new MissingDeleteDateColumnError(metadata);\n        }\n        // prepare columns and values to be updated\n        const updateColumnAndValues = [];\n        switch (this.expressionMap.queryType) {\n            case \"soft-delete\":\n                updateColumnAndValues.push(this.escape(metadata.deleteDateColumn.databaseName) +\n                    \" = CURRENT_TIMESTAMP\");\n                break;\n            case \"restore\":\n                updateColumnAndValues.push(this.escape(metadata.deleteDateColumn.databaseName) +\n                    \" = NULL\");\n                break;\n            default:\n                throw new TypeORMError(`The queryType must be \"soft-delete\" or \"restore\"`);\n        }\n        if (metadata.versionColumn)\n            updateColumnAndValues.push(this.escape(metadata.versionColumn.databaseName) +\n                \" = \" +\n                this.escape(metadata.versionColumn.databaseName) +\n                \" + 1\");\n        if (metadata.updateDateColumn)\n            updateColumnAndValues.push(this.escape(metadata.updateDateColumn.databaseName) +\n                \" = CURRENT_TIMESTAMP\"); // todo: fix issue with CURRENT_TIMESTAMP(6) being used, can \"DEFAULT\" be used?!\n        if (updateColumnAndValues.length <= 0) {\n            throw new UpdateValuesMissingError();\n        }\n        // get a table name and all column database names\n        const whereExpression = this.createWhereExpression();\n        const returningExpression = this.createReturningExpression(\"update\");\n        if (returningExpression === \"\") {\n            return `UPDATE ${this.getTableName(this.getMainTableName())} SET ${updateColumnAndValues.join(\", \")}${whereExpression}`; // todo: how do we replace aliases in where to nothing?\n        }\n        if (this.connection.driver.options.type === \"mssql\") {\n            return `UPDATE ${this.getTableName(this.getMainTableName())} SET ${updateColumnAndValues.join(\", \")} OUTPUT ${returningExpression}${whereExpression}`;\n        }\n        return `UPDATE ${this.getTableName(this.getMainTableName())} SET ${updateColumnAndValues.join(\", \")}${whereExpression} RETURNING ${returningExpression}`;\n    }\n    /**\n     * Creates \"ORDER BY\" part of SQL query.\n     */\n    createOrderByExpression() {\n        const orderBys = this.expressionMap.orderBys;\n        if (Object.keys(orderBys).length > 0)\n            return (\" ORDER BY \" +\n                Object.keys(orderBys)\n                    .map((columnName) => {\n                    if (typeof orderBys[columnName] === \"string\") {\n                        return (this.replacePropertyNames(columnName) +\n                            \" \" +\n                            orderBys[columnName]);\n                    }\n                    else {\n                        return (this.replacePropertyNames(columnName) +\n                            \" \" +\n                            orderBys[columnName].order +\n                            \" \" +\n                            orderBys[columnName].nulls);\n                    }\n                })\n                    .join(\", \"));\n        return \"\";\n    }\n    /**\n     * Creates \"LIMIT\" parts of SQL query.\n     */\n    createLimitExpression() {\n        let limit = this.expressionMap.limit;\n        if (limit) {\n            if (DriverUtils.isMySQLFamily(this.connection.driver)) {\n                return \" LIMIT \" + limit;\n            }\n            else {\n                throw new LimitOnUpdateNotSupportedError();\n            }\n        }\n        return \"\";\n    }\n}\n\n//# sourceMappingURL=SoftDeleteQueryBuilder.js.map\n","import { QueryBuilder } from \"./QueryBuilder\";\nimport { UpdateResult } from \"./result/UpdateResult\";\nimport { ReturningStatementNotSupportedError } from \"../error/ReturningStatementNotSupportedError\";\nimport { ReturningResultsEntityUpdator } from \"./ReturningResultsEntityUpdator\";\nimport { LimitOnUpdateNotSupportedError } from \"../error/LimitOnUpdateNotSupportedError\";\nimport { UpdateValuesMissingError } from \"../error/UpdateValuesMissingError\";\nimport { TypeORMError } from \"../error\";\nimport { EntityPropertyNotFoundError } from \"../error/EntityPropertyNotFoundError\";\nimport { DriverUtils } from \"../driver/DriverUtils\";\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nexport class UpdateQueryBuilder extends QueryBuilder {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(connectionOrQueryBuilder, queryRunner) {\n        super(connectionOrQueryBuilder, queryRunner);\n        this[\"@instanceof\"] = Symbol.for(\"UpdateQueryBuilder\");\n        this.expressionMap.aliasNamePrefixingEnabled = false;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated SQL query without parameters being replaced.\n     */\n    getQuery() {\n        let sql = this.createComment();\n        sql += this.createCteExpression();\n        sql += this.createUpdateExpression();\n        sql += this.createOrderByExpression();\n        sql += this.createLimitExpression();\n        return this.replacePropertyNamesForTheWholeQuery(sql.trim());\n    }\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    async execute() {\n        const queryRunner = this.obtainQueryRunner();\n        let transactionStartedByUs = false;\n        try {\n            // start transaction if it was enabled\n            if (this.expressionMap.useTransaction === true &&\n                queryRunner.isTransactionActive === false) {\n                await queryRunner.startTransaction();\n                transactionStartedByUs = true;\n            }\n            // call before updation methods in listeners and subscribers\n            if (this.expressionMap.callListeners === true &&\n                this.expressionMap.mainAlias.hasMetadata) {\n                await queryRunner.broadcaster.broadcast(\"BeforeUpdate\", this.expressionMap.mainAlias.metadata, this.expressionMap.valuesSet);\n            }\n            let declareSql = null;\n            let selectOutputSql = null;\n            // if update entity mode is enabled we may need extra columns for the returning statement\n            const returningResultsEntityUpdator = new ReturningResultsEntityUpdator(queryRunner, this.expressionMap);\n            const returningColumns = [];\n            if (Array.isArray(this.expressionMap.returning) &&\n                this.expressionMap.mainAlias.hasMetadata) {\n                for (const columnPath of this.expressionMap.returning) {\n                    returningColumns.push(...this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(columnPath));\n                }\n            }\n            if (this.expressionMap.updateEntity === true &&\n                this.expressionMap.mainAlias.hasMetadata &&\n                this.expressionMap.whereEntities.length > 0) {\n                this.expressionMap.extraReturningColumns =\n                    returningResultsEntityUpdator.getUpdationReturningColumns();\n                returningColumns.push(...this.expressionMap.extraReturningColumns.filter((c) => !returningColumns.includes(c)));\n            }\n            if (returningColumns.length > 0 &&\n                this.connection.driver.options.type === \"mssql\") {\n                declareSql = this.connection.driver.buildTableVariableDeclaration(\"@OutputTable\", returningColumns);\n                selectOutputSql = `SELECT * FROM @OutputTable`;\n            }\n            // execute update query\n            const [updateSql, parameters] = this.getQueryAndParameters();\n            const statements = [declareSql, updateSql, selectOutputSql];\n            const queryResult = await queryRunner.query(statements.filter((sql) => sql != null).join(\";\\n\\n\"), parameters, true);\n            const updateResult = UpdateResult.from(queryResult);\n            // if we are updating entities and entity updation is enabled we must update some of entity columns (like version, update date, etc.)\n            if (this.expressionMap.updateEntity === true &&\n                this.expressionMap.mainAlias.hasMetadata &&\n                this.expressionMap.whereEntities.length > 0) {\n                await returningResultsEntityUpdator.update(updateResult, this.expressionMap.whereEntities);\n            }\n            // call after updation methods in listeners and subscribers\n            if (this.expressionMap.callListeners === true &&\n                this.expressionMap.mainAlias.hasMetadata) {\n                await queryRunner.broadcaster.broadcast(\"AfterUpdate\", this.expressionMap.mainAlias.metadata, this.expressionMap.valuesSet);\n            }\n            // close transaction if we started it\n            if (transactionStartedByUs)\n                await queryRunner.commitTransaction();\n            return updateResult;\n        }\n        catch (error) {\n            // rollback transaction if we started it\n            if (transactionStartedByUs) {\n                try {\n                    await queryRunner.rollbackTransaction();\n                }\n                catch (rollbackError) { }\n            }\n            throw error;\n        }\n        finally {\n            if (queryRunner !== this.queryRunner) {\n                // means we created our own query runner\n                await queryRunner.release();\n            }\n        }\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Values needs to be updated.\n     */\n    set(values) {\n        this.expressionMap.valuesSet = values;\n        return this;\n    }\n    /**\n     * Sets WHERE condition in the query builder.\n     * If you had previously WHERE expression defined,\n     * calling this function will override previously set WHERE conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    where(where, parameters) {\n        this.expressionMap.wheres = []; // don't move this block below since computeWhereParameter can add where expressions\n        const condition = this.getWhereCondition(where);\n        if (condition)\n            this.expressionMap.wheres = [\n                { type: \"simple\", condition: condition },\n            ];\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Adds new AND WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    andWhere(where, parameters) {\n        this.expressionMap.wheres.push({\n            type: \"and\",\n            condition: this.getWhereCondition(where),\n        });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Adds new OR WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    orWhere(where, parameters) {\n        this.expressionMap.wheres.push({\n            type: \"or\",\n            condition: this.getWhereCondition(where),\n        });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    }\n    /**\n     * Sets WHERE condition in the query builder with a condition for the given ids.\n     * If you had previously WHERE expression defined,\n     * calling this function will override previously set WHERE conditions.\n     */\n    whereInIds(ids) {\n        return this.where(this.getWhereInIdsCondition(ids));\n    }\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    andWhereInIds(ids) {\n        return this.andWhere(this.getWhereInIdsCondition(ids));\n    }\n    /**\n     * Adds new OR WHERE with conditions for the given ids.\n     */\n    orWhereInIds(ids) {\n        return this.orWhere(this.getWhereInIdsCondition(ids));\n    }\n    /**\n     * Optional returning/output clause.\n     */\n    output(output) {\n        return this.returning(output);\n    }\n    /**\n     * Optional returning/output clause.\n     */\n    returning(returning) {\n        // not all databases support returning/output cause\n        if (!this.connection.driver.isReturningSqlSupported(\"update\")) {\n            throw new ReturningStatementNotSupportedError();\n        }\n        this.expressionMap.returning = returning;\n        return this;\n    }\n    /**\n     * Sets ORDER BY condition in the query builder.\n     * If you had previously ORDER BY expression defined,\n     * calling this function will override previously set ORDER BY conditions.\n     */\n    orderBy(sort, order = \"ASC\", nulls) {\n        if (sort) {\n            if (typeof sort === \"object\") {\n                this.expressionMap.orderBys = sort;\n            }\n            else {\n                if (nulls) {\n                    this.expressionMap.orderBys = {\n                        [sort]: { order, nulls },\n                    };\n                }\n                else {\n                    this.expressionMap.orderBys = { [sort]: order };\n                }\n            }\n        }\n        else {\n            this.expressionMap.orderBys = {};\n        }\n        return this;\n    }\n    /**\n     * Adds ORDER BY condition in the query builder.\n     */\n    addOrderBy(sort, order = \"ASC\", nulls) {\n        if (nulls) {\n            this.expressionMap.orderBys[sort] = { order, nulls };\n        }\n        else {\n            this.expressionMap.orderBys[sort] = order;\n        }\n        return this;\n    }\n    /**\n     * Sets LIMIT - maximum number of rows to be selected.\n     */\n    limit(limit) {\n        this.expressionMap.limit = limit;\n        return this;\n    }\n    /**\n     * Indicates if entity must be updated after update operation.\n     * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n     * Enabled by default.\n     */\n    whereEntity(entity) {\n        if (!this.expressionMap.mainAlias.hasMetadata)\n            throw new TypeORMError(`.whereEntity method can only be used on queries which update real entity table.`);\n        this.expressionMap.wheres = [];\n        const entities = Array.isArray(entity) ? entity : [entity];\n        entities.forEach((entity) => {\n            const entityIdMap = this.expressionMap.mainAlias.metadata.getEntityIdMap(entity);\n            if (!entityIdMap)\n                throw new TypeORMError(`Provided entity does not have ids set, cannot perform operation.`);\n            this.orWhereInIds(entityIdMap);\n        });\n        this.expressionMap.whereEntities = entities;\n        return this;\n    }\n    /**\n     * Indicates if entity must be updated after update operation.\n     * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n     * Enabled by default.\n     */\n    updateEntity(enabled) {\n        this.expressionMap.updateEntity = enabled;\n        return this;\n    }\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates UPDATE express used to perform insert query.\n     */\n    createUpdateExpression() {\n        const valuesSet = this.getValueSet();\n        const metadata = this.expressionMap.mainAlias.hasMetadata\n            ? this.expressionMap.mainAlias.metadata\n            : undefined;\n        // it doesn't make sense to update undefined properties, so just skip them\n        const valuesSetNormalized = {};\n        for (let key in valuesSet) {\n            if (valuesSet[key] !== undefined) {\n                valuesSetNormalized[key] = valuesSet[key];\n            }\n        }\n        // prepare columns and values to be updated\n        const updateColumnAndValues = [];\n        const updatedColumns = [];\n        if (metadata) {\n            this.createPropertyPath(metadata, valuesSetNormalized).forEach((propertyPath) => {\n                // todo: make this and other query builder to work with properly with tables without metadata\n                const columns = metadata.findColumnsWithPropertyPath(propertyPath);\n                if (columns.length <= 0) {\n                    throw new EntityPropertyNotFoundError(propertyPath, metadata);\n                }\n                columns.forEach((column) => {\n                    if (!column.isUpdate ||\n                        updatedColumns.includes(column)) {\n                        return;\n                    }\n                    updatedColumns.push(column);\n                    //\n                    let value = column.getEntityValue(valuesSetNormalized);\n                    if (column.referencedColumn &&\n                        typeof value === \"object\" &&\n                        !(value instanceof Date) &&\n                        value !== null &&\n                        !Buffer.isBuffer(value)) {\n                        value =\n                            column.referencedColumn.getEntityValue(value);\n                    }\n                    else if (!(typeof value === \"function\")) {\n                        value =\n                            this.connection.driver.preparePersistentValue(value, column);\n                    }\n                    // todo: duplication zone\n                    if (typeof value === \"function\") {\n                        // support for SQL expressions in update query\n                        updateColumnAndValues.push(this.escape(column.databaseName) +\n                            \" = \" +\n                            value());\n                    }\n                    else if ((this.connection.driver.options.type === \"sap\" ||\n                        this.connection.driver.options.type ===\n                            \"spanner\") &&\n                        value === null) {\n                        updateColumnAndValues.push(this.escape(column.databaseName) + \" = NULL\");\n                    }\n                    else {\n                        if (this.connection.driver.options.type === \"mssql\") {\n                            value = this.connection.driver.parametrizeValue(column, value);\n                        }\n                        const paramName = this.createParameter(value);\n                        let expression = null;\n                        if ((DriverUtils.isMySQLFamily(this.connection.driver) ||\n                            this.connection.driver.options.type ===\n                                \"aurora-mysql\") &&\n                            this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            const useLegacy = this.connection.driver.options.legacySpatialSupport;\n                            const geomFromText = useLegacy\n                                ? \"GeomFromText\"\n                                : \"ST_GeomFromText\";\n                            if (column.srid != null) {\n                                expression = `${geomFromText}(${paramName}, ${column.srid})`;\n                            }\n                            else {\n                                expression = `${geomFromText}(${paramName})`;\n                            }\n                        }\n                        else if (DriverUtils.isPostgresFamily(this.connection.driver) &&\n                            this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            if (column.srid != null) {\n                                expression = `ST_SetSRID(ST_GeomFromGeoJSON(${paramName}), ${column.srid})::${column.type}`;\n                            }\n                            else {\n                                expression = `ST_GeomFromGeoJSON(${paramName})::${column.type}`;\n                            }\n                        }\n                        else if (this.connection.driver.options.type ===\n                            \"mssql\" &&\n                            this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            expression =\n                                column.type +\n                                    \"::STGeomFromText(\" +\n                                    paramName +\n                                    \", \" +\n                                    (column.srid || \"0\") +\n                                    \")\";\n                        }\n                        else {\n                            expression = paramName;\n                        }\n                        updateColumnAndValues.push(this.escape(column.databaseName) +\n                            \" = \" +\n                            expression);\n                    }\n                });\n            });\n            // Don't allow calling update only with columns that are `update: false`\n            if (updateColumnAndValues.length > 0 ||\n                Object.keys(valuesSetNormalized).length === 0) {\n                if (metadata.versionColumn &&\n                    updatedColumns.indexOf(metadata.versionColumn) === -1)\n                    updateColumnAndValues.push(this.escape(metadata.versionColumn.databaseName) +\n                        \" = \" +\n                        this.escape(metadata.versionColumn.databaseName) +\n                        \" + 1\");\n                if (metadata.updateDateColumn &&\n                    updatedColumns.indexOf(metadata.updateDateColumn) === -1)\n                    updateColumnAndValues.push(this.escape(metadata.updateDateColumn.databaseName) +\n                        \" = CURRENT_TIMESTAMP\"); // todo: fix issue with CURRENT_TIMESTAMP(6) being used, can \"DEFAULT\" be used?!\n            }\n        }\n        else {\n            Object.keys(valuesSetNormalized).map((key) => {\n                let value = valuesSetNormalized[key];\n                // todo: duplication zone\n                if (typeof value === \"function\") {\n                    // support for SQL expressions in update query\n                    updateColumnAndValues.push(this.escape(key) + \" = \" + value());\n                }\n                else if ((this.connection.driver.options.type === \"sap\" ||\n                    this.connection.driver.options.type === \"spanner\") &&\n                    value === null) {\n                    updateColumnAndValues.push(this.escape(key) + \" = NULL\");\n                }\n                else {\n                    // we need to store array values in a special class to make sure parameter replacement will work correctly\n                    // if (value instanceof Array)\n                    //     value = new ArrayParameter(value);\n                    const paramName = this.createParameter(value);\n                    updateColumnAndValues.push(this.escape(key) + \" = \" + paramName);\n                }\n            });\n        }\n        if (updateColumnAndValues.length <= 0) {\n            throw new UpdateValuesMissingError();\n        }\n        // get a table name and all column database names\n        const whereExpression = this.createWhereExpression();\n        const returningExpression = this.createReturningExpression(\"update\");\n        if (returningExpression === \"\") {\n            return `UPDATE ${this.getTableName(this.getMainTableName())} SET ${updateColumnAndValues.join(\", \")}${whereExpression}`; // todo: how do we replace aliases in where to nothing?\n        }\n        if (this.connection.driver.options.type === \"mssql\") {\n            return `UPDATE ${this.getTableName(this.getMainTableName())} SET ${updateColumnAndValues.join(\", \")} OUTPUT ${returningExpression}${whereExpression}`;\n        }\n        return `UPDATE ${this.getTableName(this.getMainTableName())} SET ${updateColumnAndValues.join(\", \")}${whereExpression} RETURNING ${returningExpression}`;\n    }\n    /**\n     * Creates \"ORDER BY\" part of SQL query.\n     */\n    createOrderByExpression() {\n        const orderBys = this.expressionMap.orderBys;\n        if (Object.keys(orderBys).length > 0)\n            return (\" ORDER BY \" +\n                Object.keys(orderBys)\n                    .map((columnName) => {\n                    if (typeof orderBys[columnName] === \"string\") {\n                        return (this.replacePropertyNames(columnName) +\n                            \" \" +\n                            orderBys[columnName]);\n                    }\n                    else {\n                        return (this.replacePropertyNames(columnName) +\n                            \" \" +\n                            orderBys[columnName].order +\n                            \" \" +\n                            orderBys[columnName].nulls);\n                    }\n                })\n                    .join(\", \"));\n        return \"\";\n    }\n    /**\n     * Creates \"LIMIT\" parts of SQL query.\n     */\n    createLimitExpression() {\n        let limit = this.expressionMap.limit;\n        if (limit) {\n            if (DriverUtils.isMySQLFamily(this.connection.driver) ||\n                this.connection.driver.options.type === \"aurora-mysql\") {\n                return \" LIMIT \" + limit;\n            }\n            else {\n                throw new LimitOnUpdateNotSupportedError();\n            }\n        }\n        return \"\";\n    }\n    /**\n     * Gets array of values need to be inserted into the target table.\n     */\n    getValueSet() {\n        if (typeof this.expressionMap.valuesSet === \"object\")\n            return this.expressionMap.valuesSet;\n        throw new UpdateValuesMissingError();\n    }\n}\n\n//# sourceMappingURL=UpdateQueryBuilder.js.map\n","import { DeleteQueryBuilder } from \"./DeleteQueryBuilder\";\nimport { InsertQueryBuilder } from \"./InsertQueryBuilder\";\nimport { QueryBuilder } from \"./QueryBuilder\";\nimport { RelationQueryBuilder } from \"./RelationQueryBuilder\";\nimport { SelectQueryBuilder } from \"./SelectQueryBuilder\";\nimport { SoftDeleteQueryBuilder } from \"./SoftDeleteQueryBuilder\";\nimport { UpdateQueryBuilder } from \"./UpdateQueryBuilder\";\nexport function registerQueryBuilders() {\n    QueryBuilder.registerQueryBuilderClass(\"DeleteQueryBuilder\", (qb) => new DeleteQueryBuilder(qb));\n    QueryBuilder.registerQueryBuilderClass(\"InsertQueryBuilder\", (qb) => new InsertQueryBuilder(qb));\n    QueryBuilder.registerQueryBuilderClass(\"RelationQueryBuilder\", (qb) => new RelationQueryBuilder(qb));\n    QueryBuilder.registerQueryBuilderClass(\"SelectQueryBuilder\", (qb) => new SelectQueryBuilder(qb));\n    QueryBuilder.registerQueryBuilderClass(\"SoftDeleteQueryBuilder\", (qb) => new SoftDeleteQueryBuilder(qb));\n    QueryBuilder.registerQueryBuilderClass(\"UpdateQueryBuilder\", (qb) => new UpdateQueryBuilder(qb));\n}\n\n//# sourceMappingURL=index.js.map\n","export var MetadataTableType;\n(function (MetadataTableType) {\n    MetadataTableType[\"VIEW\"] = \"VIEW\";\n    MetadataTableType[\"MATERIALIZED_VIEW\"] = \"MATERIALIZED_VIEW\";\n    MetadataTableType[\"GENERATED_COLUMN\"] = \"GENERATED_COLUMN\";\n})(MetadataTableType || (MetadataTableType = {}));\n\n//# sourceMappingURL=MetadataTableType.js.map\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","import { registerQueryBuilders } from \"../query-builder\";\nimport { DefaultNamingStrategy } from \"../naming-strategy/DefaultNamingStrategy\";\nimport { CannotConnectAlreadyConnectedError, CannotExecuteNotConnectedError, EntityMetadataNotFoundError, QueryRunnerProviderAlreadyReleasedError, TypeORMError, } from \"../error\";\nimport { MigrationExecutor } from \"../migration/MigrationExecutor\";\nimport { EntityMetadataValidator } from \"../metadata-builder/EntityMetadataValidator\";\nimport { EntityManagerFactory } from \"../entity-manager/EntityManagerFactory\";\nimport { DriverFactory } from \"../driver/DriverFactory\";\nimport { ConnectionMetadataBuilder } from \"../connection/ConnectionMetadataBuilder\";\nimport { SelectQueryBuilder } from \"../query-builder/SelectQueryBuilder\";\nimport { LoggerFactory } from \"../logger/LoggerFactory\";\nimport { QueryResultCacheFactory } from \"../cache/QueryResultCacheFactory\";\nimport { RelationLoader } from \"../query-builder/RelationLoader\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\nimport { RelationIdLoader } from \"../query-builder/RelationIdLoader\";\nimport { DriverUtils } from \"../driver/DriverUtils\";\nimport { InstanceChecker } from \"../util/InstanceChecker\";\nregisterQueryBuilders();\n/**\n * DataSource is a pre-defined connection configuration to a specific database.\n * You can have multiple data sources connected (with multiple connections in it),\n * connected to multiple databases in your application.\n *\n * Before, it was called `Connection`, but now `Connection` is deprecated\n * because `Connection` isn't the best name for what it's actually is.\n */\nexport class DataSource {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(options) {\n        this[\"@instanceof\"] = Symbol.for(\"DataSource\");\n        /**\n         * Migration instances that are registered for this connection.\n         */\n        this.migrations = [];\n        /**\n         * Entity subscriber instances that are registered for this connection.\n         */\n        this.subscribers = [];\n        /**\n         * All entity metadatas that are registered for this connection.\n         */\n        this.entityMetadatas = [];\n        /**\n         * All entity metadatas that are registered for this connection.\n         * This is a copy of #.entityMetadatas property -> used for more performant searches.\n         */\n        this.entityMetadatasMap = new Map();\n        registerQueryBuilders();\n        this.name = options.name || \"default\";\n        this.options = options;\n        this.logger = new LoggerFactory().create(this.options.logger, this.options.logging);\n        this.driver = new DriverFactory().create(this);\n        this.manager = this.createEntityManager();\n        this.namingStrategy =\n            options.namingStrategy || new DefaultNamingStrategy();\n        this.metadataTableName = options.metadataTableName || \"typeorm_metadata\";\n        this.queryResultCache = options.cache\n            ? new QueryResultCacheFactory(this).create()\n            : undefined;\n        this.relationLoader = new RelationLoader(this);\n        this.relationIdLoader = new RelationIdLoader(this);\n        this.isInitialized = false;\n    }\n    // -------------------------------------------------------------------------\n    // Public Accessors\n    // -------------------------------------------------------------------------\n    /**\n     Indicates if DataSource is initialized or not.\n     *\n     * @deprecated use .isInitialized instead\n     */\n    get isConnected() {\n        return this.isInitialized;\n    }\n    /**\n     * Gets the mongodb entity manager that allows to perform mongodb-specific repository operations\n     * with any entity in this connection.\n     *\n     * Available only in mongodb connections.\n     */\n    get mongoManager() {\n        if (!InstanceChecker.isMongoEntityManager(this.manager))\n            throw new TypeORMError(`MongoEntityManager is only available for MongoDB databases.`);\n        return this.manager;\n    }\n    /**\n     * Gets a sql.js specific Entity Manager that allows to perform special load and save operations\n     *\n     * Available only in connection with the sqljs driver.\n     */\n    get sqljsManager() {\n        if (!InstanceChecker.isSqljsEntityManager(this.manager))\n            throw new TypeORMError(`SqljsEntityManager is only available for Sqljs databases.`);\n        return this.manager;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Updates current connection options with provided options.\n     */\n    setOptions(options) {\n        Object.assign(this.options, options);\n        if (options.logger || options.logging) {\n            this.logger = new LoggerFactory().create(options.logger || this.options.logger, options.logging || this.options.logging);\n        }\n        if (options.namingStrategy) {\n            this.namingStrategy = options.namingStrategy;\n        }\n        if (options.cache) {\n            this.queryResultCache = new QueryResultCacheFactory(this).create();\n        }\n        // todo: we must update the database in the driver as well, if it was set by setOptions method\n        //  in the future we need to refactor the code and remove \"database\" from the driver, and instead\n        //  use database (and options) from a single place - data source.\n        if (options.database) {\n            this.driver.database = DriverUtils.buildDriverOptions(this.options).database;\n        }\n        // todo: need to take a look if we need to update schema and other \"poor\" properties\n        return this;\n    }\n    /**\n     * Performs connection to the database.\n     * This method should be called once on application bootstrap.\n     * This method not necessarily creates database connection (depend on database type),\n     * but it also can setup a connection pool with database to use.\n     */\n    async initialize() {\n        if (this.isInitialized)\n            throw new CannotConnectAlreadyConnectedError(this.name);\n        // connect to the database via its driver\n        await this.driver.connect();\n        // connect to the cache-specific database if cache is enabled\n        if (this.queryResultCache)\n            await this.queryResultCache.connect();\n        // set connected status for the current connection\n        ObjectUtils.assign(this, { isInitialized: true });\n        try {\n            // build all metadatas registered in the current connection\n            await this.buildMetadatas();\n            await this.driver.afterConnect();\n            // if option is set - drop schema once connection is done\n            if (this.options.dropSchema)\n                await this.dropDatabase();\n            // if option is set - automatically synchronize a schema\n            if (this.options.migrationsRun)\n                await this.runMigrations({\n                    transaction: this.options.migrationsTransactionMode,\n                });\n            // if option is set - automatically synchronize a schema\n            if (this.options.synchronize)\n                await this.synchronize();\n        }\n        catch (error) {\n            // if for some reason build metadata fail (for example validation error during entity metadata check)\n            // connection needs to be closed\n            await this.destroy();\n            throw error;\n        }\n        return this;\n    }\n    /**\n     * Performs connection to the database.\n     * This method should be called once on application bootstrap.\n     * This method not necessarily creates database connection (depend on database type),\n     * but it also can setup a connection pool with database to use.\n     *\n     * @deprecated use .initialize method instead\n     */\n    async connect() {\n        return this.initialize();\n    }\n    /**\n     * Closes connection with the database.\n     * Once connection is closed, you cannot use repositories or perform any operations except opening connection again.\n     */\n    async destroy() {\n        if (!this.isInitialized)\n            throw new CannotExecuteNotConnectedError(this.name);\n        await this.driver.disconnect();\n        // disconnect from the cache-specific database if cache was enabled\n        if (this.queryResultCache)\n            await this.queryResultCache.disconnect();\n        ObjectUtils.assign(this, { isInitialized: false });\n    }\n    /**\n     * Closes connection with the database.\n     * Once connection is closed, you cannot use repositories or perform any operations except opening connection again.\n     *\n     * @deprecated use .destroy method instead\n     */\n    async close() {\n        return this.destroy();\n    }\n    /**\n     * Creates database schema for all entities registered in this connection.\n     * Can be used only after connection to the database is established.\n     *\n     * @param dropBeforeSync If set to true then it drops the database with all its tables and data\n     */\n    async synchronize(dropBeforeSync = false) {\n        if (!this.isInitialized)\n            throw new CannotExecuteNotConnectedError(this.name);\n        if (dropBeforeSync)\n            await this.dropDatabase();\n        const schemaBuilder = this.driver.createSchemaBuilder();\n        await schemaBuilder.build();\n    }\n    /**\n     * Drops the database and all its data.\n     * Be careful with this method on production since this method will erase all your database tables and their data.\n     * Can be used only after connection to the database is established.\n     */\n    // TODO rename\n    async dropDatabase() {\n        const queryRunner = this.createQueryRunner();\n        try {\n            if (this.driver.options.type === \"mssql\" ||\n                DriverUtils.isMySQLFamily(this.driver) ||\n                this.driver.options.type === \"aurora-mysql\" ||\n                DriverUtils.isSQLiteFamily(this.driver)) {\n                const databases = [];\n                this.entityMetadatas.forEach((metadata) => {\n                    if (metadata.database &&\n                        databases.indexOf(metadata.database) === -1)\n                        databases.push(metadata.database);\n                });\n                if (databases.length === 0 && this.driver.database) {\n                    databases.push(this.driver.database);\n                }\n                if (databases.length === 0) {\n                    await queryRunner.clearDatabase();\n                }\n                else {\n                    for (const database of databases) {\n                        await queryRunner.clearDatabase(database);\n                    }\n                }\n            }\n            else {\n                await queryRunner.clearDatabase();\n            }\n        }\n        finally {\n            await queryRunner.release();\n        }\n    }\n    /**\n     * Runs all pending migrations.\n     * Can be used only after connection to the database is established.\n     */\n    async runMigrations(options) {\n        if (!this.isInitialized)\n            throw new CannotExecuteNotConnectedError(this.name);\n        const migrationExecutor = new MigrationExecutor(this);\n        migrationExecutor.transaction =\n            options?.transaction ||\n                this.options?.migrationsTransactionMode ||\n                \"all\";\n        migrationExecutor.fake = (options && options.fake) || false;\n        const successMigrations = await migrationExecutor.executePendingMigrations();\n        return successMigrations;\n    }\n    /**\n     * Reverts last executed migration.\n     * Can be used only after connection to the database is established.\n     */\n    async undoLastMigration(options) {\n        if (!this.isInitialized)\n            throw new CannotExecuteNotConnectedError(this.name);\n        const migrationExecutor = new MigrationExecutor(this);\n        migrationExecutor.transaction =\n            (options && options.transaction) || \"all\";\n        migrationExecutor.fake = (options && options.fake) || false;\n        await migrationExecutor.undoLastMigration();\n    }\n    /**\n     * Lists all migrations and whether they have been run.\n     * Returns true if there are pending migrations\n     */\n    async showMigrations() {\n        if (!this.isInitialized) {\n            throw new CannotExecuteNotConnectedError(this.name);\n        }\n        const migrationExecutor = new MigrationExecutor(this);\n        return await migrationExecutor.showMigrations();\n    }\n    /**\n     * Checks if entity metadata exist for the given entity class, target name or table name.\n     */\n    hasMetadata(target) {\n        return !!this.findMetadata(target);\n    }\n    /**\n     * Gets entity metadata for the given entity class or schema name.\n     */\n    getMetadata(target) {\n        const metadata = this.findMetadata(target);\n        if (!metadata)\n            throw new EntityMetadataNotFoundError(target);\n        return metadata;\n    }\n    /**\n     * Gets repository for the given entity.\n     */\n    getRepository(target) {\n        return this.manager.getRepository(target);\n    }\n    /**\n     * Gets tree repository for the given entity class or name.\n     * Only tree-type entities can have a TreeRepository, like ones decorated with @Tree decorator.\n     */\n    getTreeRepository(target) {\n        return this.manager.getTreeRepository(target);\n    }\n    /**\n     * Gets mongodb-specific repository for the given entity class or name.\n     * Works only if connection is mongodb-specific.\n     */\n    getMongoRepository(target) {\n        if (!(this.driver.options.type === \"mongodb\"))\n            throw new TypeORMError(`You can use getMongoRepository only for MongoDB connections.`);\n        return this.manager.getRepository(target);\n    }\n    /**\n     * Gets custom entity repository marked with @EntityRepository decorator.\n     *\n     * @deprecated use Repository.extend function to create a custom repository\n     */\n    getCustomRepository(customRepository) {\n        return this.manager.getCustomRepository(customRepository);\n    }\n    async transaction(isolationOrRunInTransaction, runInTransactionParam) {\n        return this.manager.transaction(isolationOrRunInTransaction, runInTransactionParam);\n    }\n    /**\n     * Executes raw SQL query and returns raw database results.\n     */\n    async query(query, parameters, queryRunner) {\n        if (InstanceChecker.isMongoEntityManager(this.manager))\n            throw new TypeORMError(`Queries aren't supported by MongoDB.`);\n        if (queryRunner && queryRunner.isReleased)\n            throw new QueryRunnerProviderAlreadyReleasedError();\n        const usedQueryRunner = queryRunner || this.createQueryRunner();\n        try {\n            return await usedQueryRunner.query(query, parameters); // await is needed here because we are using finally\n        }\n        finally {\n            if (!queryRunner)\n                await usedQueryRunner.release();\n        }\n    }\n    /**\n     * Creates a new query builder that can be used to build a SQL query.\n     */\n    createQueryBuilder(entityOrRunner, alias, queryRunner) {\n        if (InstanceChecker.isMongoEntityManager(this.manager))\n            throw new TypeORMError(`Query Builder is not supported by MongoDB.`);\n        if (alias) {\n            alias = DriverUtils.buildAlias(this.driver, undefined, alias);\n            const metadata = this.getMetadata(entityOrRunner);\n            return new SelectQueryBuilder(this, queryRunner)\n                .select(alias)\n                .from(metadata.target, alias);\n        }\n        else {\n            return new SelectQueryBuilder(this, entityOrRunner);\n        }\n    }\n    /**\n     * Creates a query runner used for perform queries on a single database connection.\n     * Using query runners you can control your queries to execute using single database connection and\n     * manually control your database transaction.\n     *\n     * Mode is used in replication mode and indicates whatever you want to connect\n     * to master database or any of slave databases.\n     * If you perform writes you must use master database,\n     * if you perform reads you can use slave databases.\n     */\n    createQueryRunner(mode = \"master\") {\n        const queryRunner = this.driver.createQueryRunner(mode);\n        const manager = this.createEntityManager(queryRunner);\n        Object.assign(queryRunner, { manager: manager });\n        return queryRunner;\n    }\n    /**\n     * Gets entity metadata of the junction table (many-to-many table).\n     */\n    getManyToManyMetadata(entityTarget, relationPropertyPath) {\n        const relationMetadata = this.getMetadata(entityTarget).findRelationWithPropertyPath(relationPropertyPath);\n        if (!relationMetadata)\n            throw new TypeORMError(`Relation \"${relationPropertyPath}\" was not found in ${entityTarget} entity.`);\n        if (!relationMetadata.isManyToMany)\n            throw new TypeORMError(`Relation \"${entityTarget}#${relationPropertyPath}\" does not have a many-to-many relationship.` +\n                `You can use this method only on many-to-many relations.`);\n        return relationMetadata.junctionEntityMetadata;\n    }\n    /**\n     * Creates an Entity Manager for the current connection with the help of the EntityManagerFactory.\n     */\n    createEntityManager(queryRunner) {\n        return new EntityManagerFactory().create(this, queryRunner);\n    }\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Finds exist entity metadata by the given entity class, target name or table name.\n     */\n    findMetadata(target) {\n        const metadataFromMap = this.entityMetadatasMap.get(target);\n        if (metadataFromMap)\n            return metadataFromMap;\n        for (let [_, metadata] of this.entityMetadatasMap) {\n            if (InstanceChecker.isEntitySchema(target) &&\n                metadata.name === target.options.name) {\n                return metadata;\n            }\n            if (typeof target === \"string\") {\n                if (target.indexOf(\".\") !== -1) {\n                    if (metadata.tablePath === target) {\n                        return metadata;\n                    }\n                }\n                else {\n                    if (metadata.name === target ||\n                        metadata.tableName === target) {\n                        return metadata;\n                    }\n                }\n            }\n            if (ObjectUtils.isObjectWithName(target) &&\n                typeof target.name === \"string\") {\n                if (target.name.indexOf(\".\") !== -1) {\n                    if (metadata.tablePath === target.name) {\n                        return metadata;\n                    }\n                }\n                else {\n                    if (metadata.name === target.name ||\n                        metadata.tableName === target.name) {\n                        return metadata;\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Builds metadatas for all registered classes inside this connection.\n     */\n    async buildMetadatas() {\n        const connectionMetadataBuilder = new ConnectionMetadataBuilder(this);\n        const entityMetadataValidator = new EntityMetadataValidator();\n        // create subscribers instances if they are not disallowed from high-level (for example they can disallowed from migrations run process)\n        const flattenedSubscribers = ObjectUtils.mixedListToArray(this.options.subscribers || []);\n        const subscribers = await connectionMetadataBuilder.buildSubscribers(flattenedSubscribers);\n        ObjectUtils.assign(this, { subscribers: subscribers });\n        // build entity metadatas\n        const flattenedEntities = ObjectUtils.mixedListToArray(this.options.entities || []);\n        const entityMetadatas = await connectionMetadataBuilder.buildEntityMetadatas(flattenedEntities);\n        ObjectUtils.assign(this, {\n            entityMetadatas: entityMetadatas,\n            entityMetadatasMap: new Map(entityMetadatas.map((metadata) => [metadata.target, metadata])),\n        });\n        // create migration instances\n        const flattenedMigrations = ObjectUtils.mixedListToArray(this.options.migrations || []);\n        const migrations = await connectionMetadataBuilder.buildMigrations(flattenedMigrations);\n        ObjectUtils.assign(this, { migrations: migrations });\n        // validate all created entity metadatas to make sure user created entities are valid and correct\n        entityMetadataValidator.validateMany(this.entityMetadatas.filter((metadata) => metadata.tableType !== \"view\"), this.driver);\n        // set current data source to the entities\n        for (let entityMetadata of entityMetadatas) {\n            if (InstanceChecker.isBaseEntityConstructor(entityMetadata.target)) {\n                entityMetadata.target.useDataSource(this);\n            }\n        }\n    }\n    /**\n     * Get the replication mode SELECT queries should use for this datasource by default\n     */\n    defaultReplicationModeForReads() {\n        if (\"replication\" in this.driver.options) {\n            const value = this.driver.options.replication.defaultMode;\n            if (value) {\n                return value;\n            }\n        }\n        return \"slave\";\n    }\n}\n\n//# sourceMappingURL=DataSource.js.map\n","import { useCallback } from 'react'\nimport { LLMProviderEnum } from 'src/services/database/types'\nimport { useLocalLLMState } from 'src/services/local-llm'\nimport { loadModelFromHF } from 'src/services/local-llm/wllama'\n\nexport const useLoadModel = () => {\n  const loadModel = useLocalLLMState((state) => state.loadModel)\n\n  const handleLoadModel = useCallback(\n    async (provider: `${LLMProviderEnum}`, ...args: Parameters<typeof loadModel>) => {\n      switch (provider) {\n        case LLMProviderEnum.Wllama:\n          return loadModelFromHF(...args)\n        case LLMProviderEnum.WebLLM:\n          return loadModel(...args)\n        default:\n          // No need to load\n          return\n      }\n    },\n    [loadModel],\n  )\n\n  return {\n    loadModel: handleLoadModel,\n  }\n}\n","var Bt=Object.defineProperty,At=Object.defineProperties;var kt=Object.getOwnPropertyDescriptors;var Y=Object.getOwnPropertySymbols;var gt=Object.prototype.hasOwnProperty,Et=Object.prototype.propertyIsEnumerable;var vt=(r,s,e)=>s in r?Bt(r,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[s]=e,St=(r,s)=>{for(var e in s||(s={}))gt.call(s,e)&&vt(r,e,s[e]);if(Y)for(var e of Y(s))Et.call(s,e)&&vt(r,e,s[e]);return r},bt=(r,s)=>At(r,kt(s));var Pt=(r,s)=>{var e={};for(var u in r)gt.call(r,u)&&s.indexOf(u)<0&&(e[u]=r[u]);if(r!=null&&Y)for(var u of Y(r))s.indexOf(u)<0&&Et.call(r,u)&&(e[u]=r[u]);return e};import*as n from\"react\";function ht(r){let s=setTimeout(r,0),e=setTimeout(r,10),u=setTimeout(r,50);return[s,e,u]}import*as U from\"react\";function _t(r){let s=U.useRef();return U.useEffect(()=>{s.current=r}),s.current}import*as S from\"react\";var Ot=18,wt=40,Gt=`${wt}px`,xt=[\"[data-lastpass-icon-root]\",\"com-1password-button\",\"[data-dashlanecreated]\",'[style$=\"2147483647 !important;\"]'].join(\",\");function Tt({containerRef:r,inputRef:s,pushPasswordManagerStrategy:e,isFocused:u}){let[P,D]=S.useState(!1),[G,H]=S.useState(!1),[F,W]=S.useState(!1),Z=S.useMemo(()=>e===\"none\"?!1:(e===\"increase-width\"||e===\"experimental-no-flickering\")&&P&&G,[P,G,e]),T=S.useCallback(()=>{let f=r.current,h=s.current;if(!f||!h||F||e===\"none\")return;let a=f,B=a.getBoundingClientRect().left+a.offsetWidth,A=a.getBoundingClientRect().top+a.offsetHeight/2,z=B-Ot,q=A;document.querySelectorAll(xt).length===0&&document.elementFromPoint(z,q)===f||(D(!0),W(!0))},[r,s,F,e]);return S.useEffect(()=>{let f=r.current;if(!f||e===\"none\")return;function h(){let A=window.innerWidth-f.getBoundingClientRect().right;H(A>=wt)}h();let a=setInterval(h,1e3);return()=>{clearInterval(a)}},[r,e]),S.useEffect(()=>{let f=u||document.activeElement===s.current;if(e===\"none\"||!f)return;let h=setTimeout(T,0),a=setTimeout(T,2e3),B=setTimeout(T,5e3),A=setTimeout(()=>{W(!0)},6e3);return()=>{clearTimeout(h),clearTimeout(a),clearTimeout(B),clearTimeout(A)}},[s,u,e,T]),{hasPWMBadge:P,willPushPWMBadge:Z,PWM_BADGE_SPACE_WIDTH:Gt}}var jt=n.createContext({}),Lt=n.forwardRef((A,B)=>{var z=A,{value:r,onChange:s,maxLength:e,textAlign:u=\"left\",pattern:P,placeholder:D,inputMode:G=\"numeric\",onComplete:H,pushPasswordManagerStrategy:F=\"increase-width\",pasteTransformer:W,containerClassName:Z,noScriptCSSFallback:T=Nt,render:f,children:h}=z,a=Pt(z,[\"value\",\"onChange\",\"maxLength\",\"textAlign\",\"pattern\",\"placeholder\",\"inputMode\",\"onComplete\",\"pushPasswordManagerStrategy\",\"pasteTransformer\",\"containerClassName\",\"noScriptCSSFallback\",\"render\",\"children\"]);var X,lt,ut,dt,ft;let[q,nt]=n.useState(typeof a.defaultValue==\"string\"?a.defaultValue:\"\"),i=r!=null?r:q,I=_t(i),x=n.useCallback(t=>{s==null||s(t),nt(t)},[s]),m=n.useMemo(()=>P?typeof P==\"string\"?new RegExp(P):P:null,[P]),l=n.useRef(null),K=n.useRef(null),J=n.useRef({value:i,onChange:x,isIOS:typeof window!=\"undefined\"&&((lt=(X=window==null?void 0:window.CSS)==null?void 0:X.supports)==null?void 0:lt.call(X,\"-webkit-touch-callout\",\"none\"))}),V=n.useRef({prev:[(ut=l.current)==null?void 0:ut.selectionStart,(dt=l.current)==null?void 0:dt.selectionEnd,(ft=l.current)==null?void 0:ft.selectionDirection]});n.useImperativeHandle(B,()=>l.current,[]),n.useEffect(()=>{let t=l.current,o=K.current;if(!t||!o)return;J.current.value!==t.value&&J.current.onChange(t.value),V.current.prev=[t.selectionStart,t.selectionEnd,t.selectionDirection];function d(){if(document.activeElement!==t){L(null),N(null);return}let c=t.selectionStart,b=t.selectionEnd,mt=t.selectionDirection,v=t.maxLength,C=t.value,_=V.current.prev,g=-1,E=-1,w;if(C.length!==0&&c!==null&&b!==null){let Dt=c===b,Ht=c===C.length&&C.length<v;if(Dt&&!Ht){let y=c;if(y===0)g=0,E=1,w=\"forward\";else if(y===v)g=y-1,E=y,w=\"backward\";else if(v>1&&C.length>1){let et=0;if(_[0]!==null&&_[1]!==null){w=y<_[1]?\"backward\":\"forward\";let Wt=_[0]===_[1]&&_[0]<v;w===\"backward\"&&!Wt&&(et=-1)}g=et+y,E=et+y+1}}g!==-1&&E!==-1&&g!==E&&l.current.setSelectionRange(g,E,w)}let pt=g!==-1?g:c,Rt=E!==-1?E:b,yt=w!=null?w:mt;L(pt),N(Rt),V.current.prev=[pt,Rt,yt]}if(document.addEventListener(\"selectionchange\",d,{capture:!0}),d(),document.activeElement===t&&Q(!0),!document.getElementById(\"input-otp-style\")){let c=document.createElement(\"style\");if(c.id=\"input-otp-style\",document.head.appendChild(c),c.sheet){let b=\"background: transparent !important; color: transparent !important; border-color: transparent !important; opacity: 0 !important; box-shadow: none !important; -webkit-box-shadow: none !important; -webkit-text-fill-color: transparent !important;\";$(c.sheet,\"[data-input-otp]::selection { background: transparent !important; color: transparent !important; }\"),$(c.sheet,`[data-input-otp]:autofill { ${b} }`),$(c.sheet,`[data-input-otp]:-webkit-autofill { ${b} }`),$(c.sheet,\"@supports (-webkit-touch-callout: none) { [data-input-otp] { letter-spacing: -.6em !important; font-weight: 100 !important; font-stretch: ultra-condensed; font-optical-sizing: none !important; left: -1px !important; right: 1px !important; } }\"),$(c.sheet,\"[data-input-otp] + * { pointer-events: all !important; }\")}}let R=()=>{o&&o.style.setProperty(\"--root-height\",`${t.clientHeight}px`)};R();let p=new ResizeObserver(R);return p.observe(t),()=>{document.removeEventListener(\"selectionchange\",d,{capture:!0}),p.disconnect()}},[]);let[ot,rt]=n.useState(!1),[j,Q]=n.useState(!1),[M,L]=n.useState(null),[k,N]=n.useState(null);n.useEffect(()=>{ht(()=>{var R,p,c,b;(R=l.current)==null||R.dispatchEvent(new Event(\"input\"));let t=(p=l.current)==null?void 0:p.selectionStart,o=(c=l.current)==null?void 0:c.selectionEnd,d=(b=l.current)==null?void 0:b.selectionDirection;t!==null&&o!==null&&(L(t),N(o),V.current.prev=[t,o,d])})},[i,j]),n.useEffect(()=>{I!==void 0&&i!==I&&I.length<e&&i.length===e&&(H==null||H(i))},[e,H,I,i]);let O=Tt({containerRef:K,inputRef:l,pushPasswordManagerStrategy:F,isFocused:j}),st=n.useCallback(t=>{let o=t.currentTarget.value.slice(0,e);if(o.length>0&&m&&!m.test(o)){t.preventDefault();return}typeof I==\"string\"&&o.length<I.length&&document.dispatchEvent(new Event(\"selectionchange\")),x(o)},[e,x,I,m]),at=n.useCallback(()=>{var t;if(l.current){let o=Math.min(l.current.value.length,e-1),d=l.current.value.length;(t=l.current)==null||t.setSelectionRange(o,d),L(o),N(d)}Q(!0)},[e]),ct=n.useCallback(t=>{var g,E;let o=l.current;if(!W&&(!J.current.isIOS||!t.clipboardData||!o))return;let d=t.clipboardData.getData(\"text/plain\"),R=W?W(d):d;t.preventDefault();let p=(g=l.current)==null?void 0:g.selectionStart,c=(E=l.current)==null?void 0:E.selectionEnd,v=(p!==c?i.slice(0,p)+R+i.slice(c):i.slice(0,p)+R+i.slice(p)).slice(0,e);if(v.length>0&&m&&!m.test(v))return;o.value=v,x(v);let C=Math.min(v.length,e-1),_=v.length;o.setSelectionRange(C,_),L(C),N(_)},[e,x,m,i]),It=n.useMemo(()=>({position:\"relative\",cursor:a.disabled?\"default\":\"text\",userSelect:\"none\",WebkitUserSelect:\"none\",pointerEvents:\"none\"}),[a.disabled]),it=n.useMemo(()=>({position:\"absolute\",inset:0,width:O.willPushPWMBadge?`calc(100% + ${O.PWM_BADGE_SPACE_WIDTH})`:\"100%\",clipPath:O.willPushPWMBadge?`inset(0 ${O.PWM_BADGE_SPACE_WIDTH} 0 0)`:void 0,height:\"100%\",display:\"flex\",textAlign:u,opacity:\"1\",color:\"transparent\",pointerEvents:\"all\",background:\"transparent\",caretColor:\"transparent\",border:\"0 solid transparent\",outline:\"0 solid transparent\",boxShadow:\"none\",lineHeight:\"1\",letterSpacing:\"-.5em\",fontSize:\"var(--root-height)\",fontFamily:\"monospace\",fontVariantNumeric:\"tabular-nums\"}),[O.PWM_BADGE_SPACE_WIDTH,O.willPushPWMBadge,u]),Mt=n.useMemo(()=>n.createElement(\"input\",bt(St({autoComplete:a.autoComplete||\"one-time-code\"},a),{\"data-input-otp\":!0,\"data-input-otp-placeholder-shown\":i.length===0||void 0,\"data-input-otp-mss\":M,\"data-input-otp-mse\":k,inputMode:G,pattern:m==null?void 0:m.source,\"aria-placeholder\":D,style:it,maxLength:e,value:i,ref:l,onPaste:t=>{var o;ct(t),(o=a.onPaste)==null||o.call(a,t)},onChange:st,onMouseOver:t=>{var o;rt(!0),(o=a.onMouseOver)==null||o.call(a,t)},onMouseLeave:t=>{var o;rt(!1),(o=a.onMouseLeave)==null||o.call(a,t)},onFocus:t=>{var o;at(),(o=a.onFocus)==null||o.call(a,t)},onBlur:t=>{var o;Q(!1),(o=a.onBlur)==null||o.call(a,t)}})),[st,at,ct,G,it,e,k,M,a,m==null?void 0:m.source,i]),tt=n.useMemo(()=>({slots:Array.from({length:e}).map((t,o)=>{var c;let d=j&&M!==null&&k!==null&&(M===k&&o===M||o>=M&&o<k),R=i[o]!==void 0?i[o]:null,p=i[0]!==void 0?null:(c=D==null?void 0:D[o])!=null?c:null;return{char:R,placeholderChar:p,isActive:d,hasFakeCaret:d&&R===null}}),isFocused:j,isHovering:!a.disabled&&ot}),[j,ot,e,k,M,a.disabled,i]),Ct=n.useMemo(()=>f?f(tt):n.createElement(jt.Provider,{value:tt},h),[h,tt,f]);return n.createElement(n.Fragment,null,T!==null&&n.createElement(\"noscript\",null,n.createElement(\"style\",null,T)),n.createElement(\"div\",{ref:K,\"data-input-otp-container\":!0,style:It,className:Z},Ct,n.createElement(\"div\",{style:{position:\"absolute\",inset:0,pointerEvents:\"none\"}},Mt)))});Lt.displayName=\"Input\";function $(r,s){try{r.insertRule(s)}catch(e){console.error(\"input-otp could not insert CSS rule:\",s)}}var Nt=`\n[data-input-otp] {\n  --nojs-bg: white !important;\n  --nojs-fg: black !important;\n\n  background-color: var(--nojs-bg) !important;\n  color: var(--nojs-fg) !important;\n  caret-color: var(--nojs-fg) !important;\n  letter-spacing: .25em !important;\n  text-align: center !important;\n  border: 1px solid var(--nojs-fg) !important;\n  border-radius: 4px !important;\n  width: 100% !important;\n}\n@media (prefers-color-scheme: dark) {\n  [data-input-otp] {\n    --nojs-bg: black !important;\n    --nojs-fg: white !important;\n  }\n}`;var Kt=\"^\\\\d+$\",Jt=\"^[a-zA-Z]+$\",Qt=\"^[a-zA-Z0-9]+$\";export{Lt as OTPInput,jt as OTPInputContext,Jt as REGEXP_ONLY_CHARS,Kt as REGEXP_ONLY_DIGITS,Qt as REGEXP_ONLY_DIGITS_AND_CHARS};\n//# sourceMappingURL=index.mjs.map","import * as React from 'react'\nimport { OTPInput, OTPInputContext } from 'input-otp'\nimport { Dot } from 'lucide-react'\n\nimport { cn } from 'src/lib/utils'\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      'flex items-center gap-2 has-[:disabled]:opacity-50',\n      containerClassName,\n    )}\n    className={cn('disabled:cursor-not-allowed', className)}\n    {...props}\n  />\n))\nInputOTP.displayName = 'InputOTP'\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<'div'>,\n  React.ComponentPropsWithoutRef<'div'>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('flex items-center', className)} {...props} />\n))\nInputOTPGroup.displayName = 'InputOTPGroup'\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<'div'>,\n  React.ComponentPropsWithoutRef<'div'> & { index: number }\n>(({ index, className, hidden, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        'relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md',\n        isActive && 'z-10 ring-2 ring-ring ring-offset-background',\n        className,\n      )}\n      {...props}\n    >\n      {hidden && char ? <Dot /> : char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = 'InputOTPSlot'\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<'div'>,\n  React.ComponentPropsWithoutRef<'div'>\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = 'InputOTPSeparator'\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","import { create, useModal } from '@ebay/nice-modal-react'\nimport { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Button } from 'src/lib/shadcn/ui/button'\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from 'src/lib/shadcn/ui/dialog'\nimport {\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSeparator,\n  InputOTPSlot,\n} from 'src/lib/shadcn/ui/input-otp'\n\nexport type SessionPassphraseDialogProps = {\n  className: string\n  onConfirm?: (newValue: string) => void\n  onCancel?: () => void\n}\n\nconst SessionPassphraseDialog = create<SessionPassphraseDialogProps>(({ onConfirm, onCancel }) => {\n  const currentModal = useModal()\n  const { t } = useTranslation('dialogs')\n  const [name, setName] = useState('')\n\n  const handleChangeOTP = (newValue: string) => {\n    setName(newValue)\n  }\n\n  const handleSubmit = async () => {\n    if (name?.length !== 6) {\n      return\n    }\n    await onConfirm?.(name)\n    setName('')\n    currentModal.resolve(true)\n    currentModal.hide()\n  }\n\n  const handleHide = async () => {\n    await onCancel?.()\n    setName('')\n    currentModal.resolve(false)\n    currentModal.hide()\n  }\n\n  return (\n    <Dialog open={currentModal.visible} onOpenChange={handleHide}>\n      <DialogContent className=\"w-[330px]\">\n        <DialogHeader>\n          <DialogTitle>{t('session_passkey.title')}</DialogTitle>\n          <DialogDescription>{t('session_passkey.description')}</DialogDescription>\n        </DialogHeader>\n        <div className=\"py-4\">\n          <InputOTP onChange={handleChangeOTP} maxLength={6}>\n            <InputOTPGroup>\n              <InputOTPSlot index={0} hidden />\n              <InputOTPSlot index={1} hidden />\n              <InputOTPSlot index={2} hidden />\n            </InputOTPGroup>\n            <InputOTPSeparator />\n            <InputOTPGroup>\n              <InputOTPSlot index={3} hidden />\n              <InputOTPSlot index={4} hidden />\n              <InputOTPSlot index={5} hidden />\n            </InputOTPGroup>\n          </InputOTP>\n        </div>\n        <DialogFooter>\n          <Button disabled={name?.length !== 6} onClick={handleSubmit} type=\"submit\">\n            {t('session_passkey.confirm')}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nexport default SessionPassphraseDialog\n","const _arrayBufferFromHexString = (hexString: string) => {\n  const matches = hexString.match(/.{1,2}/g)\n  if (!matches) {\n    throw new Error('Invalid hexString')\n  }\n  const bytes = Uint8Array.from(matches.map((byte: unknown) => parseInt(byte as string, 16)))\n  return bytes.buffer\n}\n\nconst _stringToArrayBuffer = (str: string) => {\n  const encoder = new TextEncoder()\n  return encoder.encode(str).buffer\n}\n\nconst _digestMessage = async (message: string) => {\n  const data = _stringToArrayBuffer(message)\n  const hash = await crypto.subtle.digest('SHA-256', data)\n  return hash\n}\n\nconst _arrayBufferToHexString = (buffer: ArrayBuffer) => {\n  const byteArray = new Uint8Array(buffer)\n  const hexCodes = [...byteArray].map((value) => {\n    const hexCode = value.toString(16)\n    const paddedHexCode = hexCode.padStart(2, '0')\n    return paddedHexCode\n  })\n\n  return hexCodes.join('')\n}\n\nexport const generatePassphrase = async () => {\n  const passphrase = crypto.getRandomValues(new Uint8Array(32))\n  const passphraseHex = _arrayBufferToHexString(passphrase)\n  return passphraseHex\n}\n\nexport const getKeyFromPassphrase = async (passphrase: string) => {\n  const key = await _digestMessage(passphrase)\n  const keyHex = _arrayBufferToHexString(key)\n  return keyHex\n}\n\nexport const getIvFromPassphrase = async (passphrase: string) => {\n  const keyHex = await getKeyFromPassphrase(passphrase)\n  const ivHex = keyHex.substring(0, 32)\n  return ivHex\n}\n\nexport const encryptSymmetric = async (message: string, passphrase: string) => {\n  const keyHex = await getKeyFromPassphrase(passphrase)\n  const ivHex = await getIvFromPassphrase(passphrase)\n  const messageBuffer = _stringToArrayBuffer(message)\n  const encryptedBuffer = await encryptAes(messageBuffer, keyHex, ivHex)\n  const encryptedHex = _arrayBufferToHexString(encryptedBuffer)\n  return encryptedHex\n}\n\nexport const decryptSymmetric = async (encryptedHex: string, passphrase: string) => {\n  const keyHex = await getKeyFromPassphrase(passphrase)\n  const ivHex = await getIvFromPassphrase(passphrase)\n  const encryptedBuffer = _arrayBufferFromHexString(encryptedHex)\n  const decryptedBuffer = await decryptAes(encryptedBuffer, keyHex, ivHex)\n  const decryptedMessage = new TextDecoder().decode(decryptedBuffer)\n  return decryptedMessage\n}\n\nexport const encryptAes = async (fileArrayBuffer: ArrayBuffer, keyHex: string, ivHex: string) => {\n  // decode the Hex-encoded key and IV\n  const ivArrayBuffer = _arrayBufferFromHexString(ivHex)\n  const keyArrayBuffer = _arrayBufferFromHexString(keyHex)\n\n  // prepare the secret key for encryption\n  const secretKey = await crypto.subtle.importKey(\n    'raw',\n    keyArrayBuffer,\n    {\n      name: 'AES-CBC',\n      length: 256,\n    },\n    true,\n    ['encrypt', 'decrypt'],\n  )\n\n  // encrypt the text with the secret key\n  const ciphertextArrayBuffer = await crypto.subtle.encrypt(\n    {\n      name: 'AES-CBC',\n      iv: ivArrayBuffer,\n    },\n    secretKey,\n    fileArrayBuffer,\n  )\n\n  return ciphertextArrayBuffer\n}\n\n// openssl enc -aes-256-cbc -nosalt -d -in test_car_encrypted_web.jpg -out test_car_enc_web_dec_openssl.jpg -K <key in Hex> -iv <iv in Hex>\nexport const decryptAes = async (fileArrayBuffer: ArrayBuffer, keyHex: string, ivHex: string) => {\n  // decode the Hex-encoded key and IV\n  const ivArrayBuffer = _arrayBufferFromHexString(ivHex)\n  const keyArrayBuffer = _arrayBufferFromHexString(keyHex)\n\n  // prepare the secret key for encryption\n  const secretKey = await crypto.subtle.importKey(\n    'raw',\n    keyArrayBuffer,\n    {\n      name: 'AES-CBC',\n      length: 256,\n    },\n    true,\n    ['encrypt', 'decrypt'],\n  )\n\n  // decrypt the ciphertext with the secret key\n  const decryptedBuffer = await crypto.subtle.decrypt(\n    {\n      name: 'AES-CBC',\n      iv: ivArrayBuffer,\n    },\n    secretKey,\n    fileArrayBuffer,\n  )\n\n  // return the decrypted data as an ArrayBuffer\n  return decryptedBuffer\n}\n","import { NiceModalHandler, NiceModalHocProps } from '@ebay/nice-modal-react'\nimport { SessionPassphraseDialogProps } from 'src/components/dialogs/SessionPassphraseDialog'\nimport secureSession from 'src/utils/secure-session'\nimport { decryptSymmetric, encryptSymmetric } from 'src/utils/aes'\n\nexport const encryptData = async (encryptedInfo: Record<string, string>, passphrase: string) => {\n  const result: Record<string, string> = {}\n  await Promise.all(\n    Object.entries(encryptedInfo || {}).map(async ([key, value]) => {\n      const encrypted = await encryptSymmetric(value, passphrase)\n      result[key] = encrypted\n    }),\n  )\n  return result\n}\n\nexport const decryptData = async (encryptedInfo: Record<string, string>, passphrase: string) => {\n  const result: Record<string, string> = {}\n  await Promise.all(\n    Object.entries(encryptedInfo || {}).map(async ([key, value]) => {\n      const decrypted = await decryptSymmetric(value, passphrase)\n      result[key] = decrypted\n    }),\n  )\n  return result\n}\n\nexport const passphraseConfirm = async (\n  rawPassphrase: string,\n  sessionPassphraseDialog: Omit<NiceModalHandler<Record<string, unknown>>, 'show'> & {\n    show: (\n      args?: Partial<SessionPassphraseDialogProps & NiceModalHocProps> | undefined,\n    ) => Promise<unknown>\n  },\n) => {\n  let passphrase: string | undefined\n  await new Promise((resolve, reject) => {\n    sessionPassphraseDialog.show({\n      onConfirm: async (passkey) => {\n        try {\n          passphrase = await decryptSymmetric(rawPassphrase, passkey)\n          await secureSession.set('passphrase', passphrase)\n          resolve(true)\n        } catch (error) {\n          reject(error)\n        } finally {\n          sessionPassphraseDialog.hide()\n        }\n      },\n      onCancel: () => {\n        reject()\n      },\n    })\n  })\n  if (!passphrase) {\n    throw new Error('Passphrase is required')\n  }\n  return passphrase\n}\n","import { FC, useRef } from 'react'\nimport { NiceModalHocProps, useModal } from '@ebay/nice-modal-react'\n\nexport const useModalRef = <T>(modalComponent: FC<T & NiceModalHocProps>) => {\n  const modal = useModal(modalComponent)\n  const modalRef = useRef(modal)\n  modalRef.current = modal\n\n  return {\n    modal,\n    modalRef,\n  }\n}\n","import { Serializable } from \"./load/serializable.js\";\nimport { HumanMessage } from \"./messages/human.js\";\nimport { getBufferString } from \"./messages/utils.js\";\n/**\n * Base PromptValue class. All prompt values should extend this class.\n */\nexport class BasePromptValue extends Serializable {\n}\n/**\n * Represents a prompt value as a string. It extends the BasePromptValue\n * class and overrides the toString and toChatMessages methods.\n */\nexport class StringPromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"StringPromptValue\";\n    }\n    constructor(value) {\n        super({ value });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n    toChatMessages() {\n        return [new HumanMessage(this.value)];\n    }\n}\n/**\n * Class that represents a chat prompt value. It extends the\n * BasePromptValue and includes an array of BaseMessage instances.\n */\nexport class ChatPromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"ChatPromptValue\";\n    }\n    constructor(fields) {\n        if (Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { messages: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"messages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.messages = fields.messages;\n    }\n    toString() {\n        return getBufferString(this.messages);\n    }\n    toChatMessages() {\n        return this.messages;\n    }\n}\n/**\n * Class that represents an image prompt value. It extends the\n * BasePromptValue and includes an ImageURL instance.\n */\nexport class ImagePromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"ImagePromptValue\";\n    }\n    constructor(fields) {\n        if (!(\"imageUrl\" in fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { imageUrl: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"imageUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @ignore */\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.imageUrl = fields.imageUrl;\n    }\n    toString() {\n        return this.imageUrl.url;\n    }\n    toChatMessages() {\n        return [\n            new HumanMessage({\n                content: [\n                    {\n                        type: \"image_url\",\n                        image_url: {\n                            detail: this.imageUrl.detail,\n                            url: this.imageUrl.url,\n                        },\n                    },\n                ],\n            }),\n        ];\n    }\n}\n","function __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\")\n        throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? (f.value = value) : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nexport { __classPrivateFieldSet, __classPrivateFieldGet };\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * https://stackoverflow.com/a/2117523\n */\nexport let uuid4 = function () {\n    const { crypto } = globalThis;\n    if (crypto?.randomUUID) {\n        uuid4 = crypto.randomUUID.bind(crypto);\n        return crypto.randomUUID();\n    }\n    const u8 = new Uint8Array(1);\n    const randomByte = crypto ? () => crypto.getRandomValues(u8)[0] : () => (Math.random() * 0xff) & 0xff;\n    return '10000000-1000-4000-8000-100000000000'.replace(/[018]/g, (c) => (+c ^ (randomByte() & (15 >> (+c / 4)))).toString(16));\n};\n//# sourceMappingURL=uuid.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport function isAbortError(err) {\n    return (typeof err === 'object' &&\n        err !== null &&\n        // Spec-compliant fetch implementations\n        (('name' in err && err.name === 'AbortError') ||\n            // Expo fetch\n            ('message' in err && String(err.message).includes('FetchRequestCanceledException'))));\n}\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            if (Object.prototype.toString.call(err) === '[object Error]') {\n                // @ts-ignore - not all envs have native support for cause yet\n                const error = new Error(err.message, err.cause ? { cause: err.cause } : {});\n                if (err.stack)\n                    error.stack = err.stack;\n                // @ts-ignore - not all envs have native support for cause yet\n                if (err.cause && !error.cause)\n                    error.cause = err.cause;\n                if (err.name)\n                    error.name = err.name;\n                return error;\n            }\n        }\n        catch { }\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\n//# sourceMappingURL=errors.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"../internal/errors.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.requestID = headers?.get('x-request-id');\n        this.error = error;\n        const data = error;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n}\nexport class AuthenticationError extends APIError {\n}\nexport class PermissionDeniedError extends APIError {\n}\nexport class NotFoundError extends APIError {\n}\nexport class ConflictError extends APIError {\n}\nexport class UnprocessableEntityError extends APIError {\n}\nexport class RateLimitError extends APIError {\n}\nexport class InternalServerError extends APIError {\n}\nexport class LengthFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n}\nexport class InvalidWebhookSignatureError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n//# sourceMappingURL=error.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { OpenAIError } from \"../../core/error.mjs\";\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nexport const isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport let isArray = (val) => ((isArray = Array.isArray), isArray(val));\nexport let isReadonlyArray = isArray;\n/** Returns an object if the given value isn't an object, otherwise returns as-is */\nexport function maybeObj(x) {\n    if (typeof x !== 'object') {\n        return {};\n    }\n    return x ?? {};\n}\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\nexport const ensurePresent = (value) => {\n    if (value == null) {\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    }\n    return value;\n};\nexport const validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n//# sourceMappingURL=values.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n//# sourceMappingURL=sleep.mjs.map","export const VERSION = '5.8.2'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { VERSION } from \"../version.mjs\";\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\n/**\n * Note this does not detect 'browser'; for that, use getBrowserInfo().\n */\nfunction getDetectedPlatform() {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return 'deno';\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return 'edge';\n    }\n    if (Object.prototype.toString.call(typeof globalThis.process !== 'undefined' ? globalThis.process : 0) === '[object process]') {\n        return 'node';\n    }\n    return 'unknown';\n}\nconst getPlatformProperties = () => {\n    const detectedPlatform = getDetectedPlatform();\n    if (detectedPlatform === 'deno') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': globalThis.process.version,\n        };\n    }\n    // Check if Node.js\n    if (detectedPlatform === 'node') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(globalThis.process.platform ?? 'unknown'),\n            'X-Stainless-Arch': normalizeArch(globalThis.process.arch ?? 'unknown'),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': globalThis.process.version ?? 'unknown',\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nexport const getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\n//# sourceMappingURL=detect-platform.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport function getDefaultFetch() {\n    if (typeof fetch !== 'undefined') {\n        return fetch;\n    }\n    throw new Error('`fetch` is not defined as a global; Either pass `fetch` to the client, `new OpenAI({ fetch })` or polyfill the global, `globalThis.fetch = fetch`');\n}\nexport function makeReadableStream(...args) {\n    const ReadableStream = globalThis.ReadableStream;\n    if (typeof ReadableStream === 'undefined') {\n        // Note: All of the platforms / runtimes we officially support already define\n        // `ReadableStream` as a global, so this should only ever be hit on unsupported runtimes.\n        throw new Error('`ReadableStream` is not defined as a global; You will need to polyfill it, `globalThis.ReadableStream = ReadableStream`');\n    }\n    return new ReadableStream(...args);\n}\nexport function ReadableStreamFrom(iterable) {\n    let iter = Symbol.asyncIterator in iterable ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n    return makeReadableStream({\n        start() { },\n        async pull(controller) {\n            const { done, value } = await iter.next();\n            if (done) {\n                controller.close();\n            }\n            else {\n                controller.enqueue(value);\n            }\n        },\n        async cancel() {\n            await iter.return?.();\n        },\n    });\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n/**\n * Cancels a ReadableStream we don't need to consume.\n * See https://undici.nodejs.org/#/?id=garbage-collection\n */\nexport async function CancelReadableStream(stream) {\n    if (stream === null || typeof stream !== 'object')\n        return;\n    if (stream[Symbol.asyncIterator]) {\n        await stream[Symbol.asyncIterator]().return?.();\n        return;\n    }\n    const reader = stream.getReader();\n    const cancelPromise = reader.cancel();\n    reader.releaseLock();\n    await cancelPromise;\n}\n//# sourceMappingURL=shims.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport const FallbackEncoder = ({ headers, body }) => {\n    return {\n        bodyHeaders: {\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify(body),\n    };\n};\n//# sourceMappingURL=request-options.mjs.map","export const default_format = 'RFC3986';\nexport const default_formatter = (v) => String(v);\nexport const formatters = {\n    RFC1738: (v) => String(v).replace(/%20/g, '+'),\n    RFC3986: default_formatter,\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n//# sourceMappingURL=formats.mjs.map","import { RFC1738 } from \"./formats.mjs\";\nimport { isArray } from \"../utils/values.mjs\";\nexport let has = (obj, key) => ((has = Object.hasOwn ?? Function.prototype.call.bind(Object.prototype.hasOwnProperty)),\n    has(obj, key));\nconst hex_table = /* @__PURE__ */ (() => {\n    const array = [];\n    for (let i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while (queue.length > 1) {\n        const item = queue.pop();\n        if (!item)\n            continue;\n        const obj = item.obj[item.prop];\n        if (isArray(obj)) {\n            const compacted = [];\n            for (let j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for (let i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nexport function merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        }\n        else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has(Object.prototype, source)) {\n                target[source] = true;\n            }\n        }\n        else {\n            return [target, source];\n        }\n        return target;\n    }\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n    let mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n            else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function (acc, key) {\n        const value = source[key];\n        if (has(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        }\n        else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nexport function assign_single_source(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nexport function decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    }\n    catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nexport const encode = (str, _defaultEncoder, charset, _kind, format) => {\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    }\n    else if (typeof str !== 'string') {\n        string = String(str);\n    }\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n    let out = '';\n    for (let j = 0; j < string.length; j += limit) {\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for (let i = 0; i < segment.length; ++i) {\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n                c === 0x2e || // .\n                c === 0x5f || // _\n                c === 0x7e || // ~\n                (c >= 0x30 && c <= 0x39) || // 0-9\n                (c >= 0x41 && c <= 0x5a) || // a-z\n                (c >= 0x61 && c <= 0x7a) || // A-Z\n                (format === RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | (c >> 6)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] =\n                    hex_table[0xe0 | (c >> 12)] + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n            arr[arr.length] =\n                hex_table[0xf0 | (c >> 18)] +\n                    hex_table[0x80 | ((c >> 12) & 0x3f)] +\n                    hex_table[0x80 | ((c >> 6) & 0x3f)] +\n                    hex_table[0x80 | (c & 0x3f)];\n        }\n        out += arr.join('');\n    }\n    return out;\n};\nexport function compact(value) {\n    const queue = [{ obj: { o: value }, prop: 'o' }];\n    const refs = [];\n    for (let i = 0; i < queue.length; ++i) {\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for (let j = 0; j < keys.length; ++j) {\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nexport function is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nexport function is_buffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nexport function combine(a, b) {\n    return [].concat(a, b);\n}\nexport function maybe_map(val, fn) {\n    if (isArray(val)) {\n        const mapped = [];\n        for (let i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n}\n//# sourceMappingURL=utils.mjs.map","import { encode, is_buffer, maybe_map, has } from \"./utils.mjs\";\nimport { default_format, default_formatter, formatters } from \"./formats.mjs\";\nimport { isArray } from \"../utils/values.mjs\";\nconst array_prefix_generators = {\n    brackets(prefix) {\n        return String(prefix) + '[]';\n    },\n    comma: 'comma',\n    indices(prefix, key) {\n        return String(prefix) + '[' + key + ']';\n    },\n    repeat(prefix) {\n        return String(prefix);\n    },\n};\nconst push_to_array = function (arr, value_or_array) {\n    Array.prototype.push.apply(arr, isArray(value_or_array) ? value_or_array : [value_or_array]);\n};\nlet toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: encode,\n    encodeValuesOnly: false,\n    format: default_format,\n    formatter: default_formatter,\n    /** @deprecated */\n    indices: false,\n    serializeDate(date) {\n        return (toISOString ?? (toISOString = Function.prototype.call.bind(Date.prototype.toISOString)))(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false,\n};\nfunction is_non_nullish_primitive(v) {\n    return (typeof v === 'string' ||\n        typeof v === 'number' ||\n        typeof v === 'boolean' ||\n        typeof v === 'symbol' ||\n        typeof v === 'bigint');\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            }\n            else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    }\n    else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    }\n    else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = maybe_map(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ?\n                // @ts-expect-error\n                encoder(prefix, defaults.encoder, charset, 'key', format)\n                : prefix;\n        }\n        obj = '';\n    }\n    if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix\n                // @ts-expect-error\n                : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [\n                formatter?.(key_value) +\n                    '=' +\n                    // @ts-expect-error\n                    formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n            ];\n        }\n        return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n    }\n    const values = [];\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = maybe_map(obj, encoder);\n        }\n        obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    }\n    else if (isArray(filter)) {\n        obj_keys = filter;\n    }\n    else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n    const adjusted_prefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjusted_prefix + '[]';\n    }\n    for (let j = 0; j < obj_keys.length; ++j) {\n        const key = obj_keys[j];\n        const value = \n        // @ts-ignore\n        typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        const key_prefix = isArray(obj) ?\n            typeof generateArrayPrefix === 'function' ?\n                generateArrayPrefix(adjusted_prefix, encoded_key)\n                : adjusted_prefix\n            : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, \n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    let format = default_format;\n    if (typeof opts.format !== 'undefined') {\n        if (!has(formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    const formatter = formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    }\n    else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    }\n    else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    const allowDots = typeof opts.allowDots === 'undefined' ?\n        !!opts.encodeDotInKeys === true ?\n            true\n            : defaults.allowDots\n        : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n    };\n}\nexport function stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    }\n    else if (isArray(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for (let i = 0; i < obj_keys.length; ++i) {\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, \n        // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? '?' : '';\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        }\n        else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n    return joined.length > 0 ? prefix + joined : '';\n}\n//# sourceMappingURL=stringify.mjs.map","export function concatBytes(buffers) {\n    let length = 0;\n    for (const buffer of buffers) {\n        length += buffer.length;\n    }\n    const output = new Uint8Array(length);\n    let index = 0;\n    for (const buffer of buffers) {\n        output.set(buffer, index);\n        index += buffer.length;\n    }\n    return output;\n}\nlet encodeUTF8_;\nexport function encodeUTF8(str) {\n    let encoder;\n    return (encodeUTF8_ ??\n        ((encoder = new globalThis.TextEncoder()), (encodeUTF8_ = encoder.encode.bind(encoder))))(str);\n}\nlet decodeUTF8_;\nexport function decodeUTF8(bytes) {\n    let decoder;\n    return (decodeUTF8_ ??\n        ((decoder = new globalThis.TextDecoder()), (decodeUTF8_ = decoder.decode.bind(decoder))))(bytes);\n}\n//# sourceMappingURL=bytes.mjs.map","var _LineDecoder_buffer, _LineDecoder_carriageReturnIndex;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../tslib.mjs\";\nimport { concatBytes, decodeUTF8, encodeUTF8 } from \"../utils/bytes.mjs\";\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n    constructor() {\n        _LineDecoder_buffer.set(this, void 0);\n        _LineDecoder_carriageReturnIndex.set(this, void 0);\n        __classPrivateFieldSet(this, _LineDecoder_buffer, new Uint8Array(), \"f\");\n        __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n    }\n    decode(chunk) {\n        if (chunk == null) {\n            return [];\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? encodeUTF8(chunk)\n                : chunk;\n        __classPrivateFieldSet(this, _LineDecoder_buffer, concatBytes([__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\"), binaryChunk]), \"f\");\n        const lines = [];\n        let patternIndex;\n        while ((patternIndex = findNewlineIndex(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\"), __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"))) != null) {\n            if (patternIndex.carriage && __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") == null) {\n                // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, patternIndex.index, \"f\");\n                continue;\n            }\n            // we got double \\r or \\rtext\\n\n            if (__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") != null &&\n                (patternIndex.index !== __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") + 1 || patternIndex.carriage)) {\n                lines.push(decodeUTF8(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(0, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") - 1)));\n                __classPrivateFieldSet(this, _LineDecoder_buffer, __classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\")), \"f\");\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n                continue;\n            }\n            const endIndex = __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n            const line = decodeUTF8(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(0, endIndex));\n            lines.push(line);\n            __classPrivateFieldSet(this, _LineDecoder_buffer, __classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(patternIndex.index), \"f\");\n            __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n        }\n        return lines;\n    }\n    flush() {\n        if (!__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").length) {\n            return [];\n        }\n        return this.decode('\\n');\n    }\n}\n_LineDecoder_buffer = new WeakMap(), _LineDecoder_carriageReturnIndex = new WeakMap();\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */\nfunction findNewlineIndex(buffer, startIndex) {\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = startIndex ?? 0; i < buffer.length; i++) {\n        if (buffer[i] === newline) {\n            return { preceding: i, index: i + 1, carriage: false };\n        }\n        if (buffer[i] === carriage) {\n            return { preceding: i, index: i + 1, carriage: true };\n        }\n    }\n    return null;\n}\nexport function findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 1; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\n//# sourceMappingURL=line.mjs.map","import { OpenAIError } from \"./error.mjs\";\nimport { makeReadableStream } from \"../internal/shims.mjs\";\nimport { findDoubleNewlineIndex, LineDecoder } from \"../internal/decoders/line.mjs\";\nimport { ReadableStreamToAsyncIterable } from \"../internal/shims.mjs\";\nimport { isAbortError } from \"../internal/errors.mjs\";\nimport { encodeUTF8 } from \"../internal/utils/bytes.mjs\";\nimport { APIError } from \"./error.mjs\";\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        async function* iterator() {\n            if (consumed) {\n                throw new OpenAIError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null ||\n                        sse.event.startsWith('response.') ||\n                        sse.event.startsWith('transcript.')) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, response.headers);\n                        }\n                        yield data;\n                    }\n                    else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == 'error') {\n                            throw new APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield { event: sse.event, data: data };\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (isAbortError(e))\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = ReadableStreamToAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new OpenAIError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (isAbortError(e))\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        return makeReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encodeUTF8(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        if (typeof globalThis.navigator !== 'undefined' &&\n            globalThis.navigator.product === 'ReactNative') {\n            throw new OpenAIError(`The default react-native fetch implementation does not support streaming. Please use expo/fetch: https://docs.expo.dev/versions/latest/sdk/expo/#expofetch-api`);\n        }\n        throw new OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = ReadableStreamToAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? encodeUTF8(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n//# sourceMappingURL=streaming.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { hasOwn } from \"./values.mjs\";\nconst levelNumbers = {\n    off: 0,\n    error: 200,\n    warn: 300,\n    info: 400,\n    debug: 500,\n};\nexport const parseLogLevel = (maybeLevel, sourceName, client) => {\n    if (!maybeLevel) {\n        return undefined;\n    }\n    if (hasOwn(levelNumbers, maybeLevel)) {\n        return maybeLevel;\n    }\n    loggerFor(client).warn(`${sourceName} was set to ${JSON.stringify(maybeLevel)}, expected one of ${JSON.stringify(Object.keys(levelNumbers))}`);\n    return undefined;\n};\nfunction noop() { }\nfunction makeLogFn(fnLevel, logger, logLevel) {\n    if (!logger || levelNumbers[fnLevel] > levelNumbers[logLevel]) {\n        return noop;\n    }\n    else {\n        // Don't wrap logger functions, we want the stacktrace intact!\n        return logger[fnLevel].bind(logger);\n    }\n}\nconst noopLogger = {\n    error: noop,\n    warn: noop,\n    info: noop,\n    debug: noop,\n};\nlet cachedLoggers = /** @__PURE__ */ new WeakMap();\nexport function loggerFor(client) {\n    const logger = client.logger;\n    const logLevel = client.logLevel ?? 'off';\n    if (!logger) {\n        return noopLogger;\n    }\n    const cachedLogger = cachedLoggers.get(logger);\n    if (cachedLogger && cachedLogger[0] === logLevel) {\n        return cachedLogger[1];\n    }\n    const levelLogger = {\n        error: makeLogFn('error', logger, logLevel),\n        warn: makeLogFn('warn', logger, logLevel),\n        info: makeLogFn('info', logger, logLevel),\n        debug: makeLogFn('debug', logger, logLevel),\n    };\n    cachedLoggers.set(logger, [logLevel, levelLogger]);\n    return levelLogger;\n}\nexport const formatRequestDetails = (details) => {\n    if (details.options) {\n        details.options = { ...details.options };\n        delete details.options['headers']; // redundant + leaks internals\n    }\n    if (details.headers) {\n        details.headers = Object.fromEntries((details.headers instanceof Headers ? [...details.headers] : Object.entries(details.headers)).map(([name, value]) => [\n            name,\n            (name.toLowerCase() === 'authorization' ||\n                name.toLowerCase() === 'cookie' ||\n                name.toLowerCase() === 'set-cookie') ?\n                '***'\n                : value,\n        ]));\n    }\n    if ('retryOfRequestLogID' in details) {\n        if (details.retryOfRequestLogID) {\n            details.retryOf = details.retryOfRequestLogID;\n        }\n        delete details.retryOfRequestLogID;\n    }\n    return details;\n};\n//# sourceMappingURL=log.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { Stream } from \"../core/streaming.mjs\";\nimport { formatRequestDetails, loggerFor } from \"./utils/log.mjs\";\nexport async function defaultParseResponse(client, props) {\n    const { response, requestLogID, retryOfRequestLogID, startTime } = props;\n    const body = await (async () => {\n        if (props.options.stream) {\n            loggerFor(client).debug('response', response.status, response.url, response.headers, response.body);\n            // Note: there is an invariant here that isn't represented in the type system\n            // that if you set `stream: true` the response type must also be `Stream<T>`\n            if (props.options.__streamClass) {\n                return props.options.__streamClass.fromSSEResponse(response, props.controller);\n            }\n            return Stream.fromSSEResponse(response, props.controller);\n        }\n        // fetch refuses to read the body when the status code is 204.\n        if (response.status === 204) {\n            return null;\n        }\n        if (props.options.__binaryResponse) {\n            return response;\n        }\n        const contentType = response.headers.get('content-type');\n        const mediaType = contentType?.split(';')[0]?.trim();\n        const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n        if (isJSON) {\n            const json = await response.json();\n            return addRequestID(json, response);\n        }\n        const text = await response.text();\n        return text;\n    })();\n    loggerFor(client).debug(`[${requestLogID}] response parsed`, formatRequestDetails({\n        retryOfRequestLogID,\n        url: response.url,\n        status: response.status,\n        body,\n        durationMs: Date.now() - startTime,\n    }));\n    return body;\n}\nexport function addRequestID(value, response) {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, '_request_id', {\n        value: response.headers.get('x-request-id'),\n        enumerable: false,\n    });\n}\n//# sourceMappingURL=parse.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _APIPromise_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { defaultParseResponse, addRequestID, } from \"../internal/parse.mjs\";\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(client, responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n        _APIPromise_client.set(this, void 0);\n        __classPrivateFieldSet(this, _APIPromise_client, client, \"f\");\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(__classPrivateFieldGet(this, _APIPromise_client, \"f\"), this.responsePromise, async (client, props) => addRequestID(transform(await this.parseResponse(client, props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response, request_id: response.headers.get('x-request-id') };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then((data) => this.parseResponse(__classPrivateFieldGet(this, _APIPromise_client, \"f\"), data));\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\n_APIPromise_client = new WeakMap();\n//# sourceMappingURL=api-promise.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _AbstractPage_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { defaultParseResponse } from \"../internal/parse.mjs\";\nimport { APIPromise } from \"./api-promise.mjs\";\nimport { maybeObj } from \"../internal/utils/values.mjs\";\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageRequestOptions() != null;\n    }\n    async getNextPage() {\n        const nextOptions = this.nextPageRequestOptions();\n        if (!nextOptions) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(client, request, async (client, props) => new Page(client, props.response, await defaultParseResponse(client, props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    nextPageRequestOptions() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    nextPageRequestOptions() {\n        const data = this.getPaginatedItems();\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return {\n            ...this.options,\n            query: {\n                ...maybeObj(this.options.query),\n                after: id,\n            },\n        };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map","import { ReadableStreamFrom } from \"./shims.mjs\";\nexport const checkFileSupport = () => {\n    if (typeof File === 'undefined') {\n        const { process } = globalThis;\n        const isOldNode = typeof process?.versions?.node === 'string' && parseInt(process.versions.node.split('.')) < 20;\n        throw new Error('`File` is not defined as a global, which is required for file uploads.' +\n            (isOldNode ?\n                \" Update to Node 20 LTS or newer, or set `globalThis.File` to `import('node:buffer').File`.\"\n                : ''));\n    }\n};\n/**\n * Construct a `File` instance. This is used to ensure a helpful error is thrown\n * for environments that don't define a global `File` yet.\n */\nexport function makeFile(fileBits, fileName, options) {\n    checkFileSupport();\n    return new File(fileBits, fileName ?? 'unknown_file', options);\n}\nexport function getName(value) {\n    return (((typeof value === 'object' &&\n        value !== null &&\n        (('name' in value && value.name && String(value.name)) ||\n            ('url' in value && value.url && String(value.url)) ||\n            ('filename' in value && value.filename && String(value.filename)) ||\n            ('path' in value && value.path && String(value.path)))) ||\n        '')\n        .split(/[\\\\/]/)\n        .pop() || undefined);\n}\nexport const isAsyncIterable = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts, fetch) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    return { ...opts, body: await createForm(opts.body, fetch) };\n};\nexport const multipartFormRequestOptions = async (opts, fetch) => {\n    return { ...opts, body: await createForm(opts.body, fetch) };\n};\nconst supportsFormDataMap = /** @__PURE__ */ new WeakMap();\n/**\n * node-fetch doesn't support the global FormData object in recent node versions. Instead of sending\n * properly-encoded form data, it just stringifies the object, resulting in a request body of \"[object FormData]\".\n * This function detects if the fetch function provided supports the global FormData object to avoid\n * confusing error messages later on.\n */\nfunction supportsFormData(fetchObject) {\n    const fetch = typeof fetchObject === 'function' ? fetchObject : fetchObject.fetch;\n    const cached = supportsFormDataMap.get(fetch);\n    if (cached)\n        return cached;\n    const promise = (async () => {\n        try {\n            const FetchResponse = ('Response' in fetch ?\n                fetch.Response\n                : (await fetch('data:,')).constructor);\n            const data = new FormData();\n            if (data.toString() === (await new FetchResponse(data).text())) {\n                return false;\n            }\n            return true;\n        }\n        catch {\n            // avoid false negatives\n            return true;\n        }\n    })();\n    supportsFormDataMap.set(fetch, promise);\n    return promise;\n}\nexport const createForm = async (body, fetch) => {\n    if (!(await supportsFormData(fetch))) {\n        throw new TypeError('The provided fetch function does not support file uploads with the current global FormData class.');\n    }\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\n// We check for Blob not File because Bun.File doesn't inherit from File,\n// but they both inherit from Blob and have a `name` property at runtime.\nconst isNamedBlob = (value) => value instanceof Blob && 'name' in value;\nconst isUploadable = (value) => typeof value === 'object' &&\n    value !== null &&\n    (value instanceof Response || isAsyncIterable(value) || isNamedBlob(value));\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (value instanceof Response) {\n        form.append(key, makeFile([await value.blob()], getName(value)));\n    }\n    else if (isAsyncIterable(value)) {\n        form.append(key, makeFile([await new Response(ReadableStreamFrom(value)).blob()], getName(value)));\n    }\n    else if (isNamedBlob(value)) {\n        form.append(key, value, getName(value));\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","import { getName, makeFile, isAsyncIterable } from \"./uploads.mjs\";\nimport { checkFileSupport } from \"./uploads.mjs\";\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\nconst isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    checkFileSupport();\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        if (value instanceof File) {\n            return value;\n        }\n        return makeFile([await value.arrayBuffer()], value.name);\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop());\n        return makeFile(await getBytes(blob), name, options);\n    }\n    const parts = await getBytes(value);\n    name || (name = getName(value));\n    if (!options?.type) {\n        const type = parts.find((part) => typeof part === 'object' && 'type' in part && part.type);\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return makeFile(parts, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(value instanceof Blob ? value : await value.arrayBuffer());\n    }\n    else if (isAsyncIterable(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(...(await getBytes(chunk))); // TODO, consider validating?\n        }\n    }\n    else {\n        const constructor = value?.constructor?.name;\n        throw new Error(`Unexpected data type: ${typeof value}${constructor ? `; constructor: ${constructor}` : ''}${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    if (typeof value !== 'object' || value === null)\n        return '';\n    const props = Object.getOwnPropertyNames(value);\n    return `; props: [${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\n//# sourceMappingURL=to-file.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","import { OpenAIError } from \"../../core/error.mjs\";\n/**\n * Percent-encode everything that isn't safe to have in a path without encoding safe chars.\n *\n * Taken from https://datatracker.ietf.org/doc/html/rfc3986#section-3.3:\n * > unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n * > sub-delims  = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * > pchar       = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n */\nexport function encodeURIPath(str) {\n    return str.replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]+/g, encodeURIComponent);\n}\nexport const createPathTagFunction = (pathEncoder = encodeURIPath) => function path(statics, ...params) {\n    // If there are no params, no processing is needed.\n    if (statics.length === 1)\n        return statics[0];\n    let postPath = false;\n    const path = statics.reduce((previousValue, currentValue, index) => {\n        if (/[?#]/.test(currentValue)) {\n            postPath = true;\n        }\n        return (previousValue +\n            currentValue +\n            (index === params.length ? '' : (postPath ? encodeURIComponent : pathEncoder)(String(params[index]))));\n    }, '');\n    const pathOnly = path.split(/[?#]/, 1)[0];\n    const invalidSegments = [];\n    const invalidSegmentPattern = /(?<=^|\\/)(?:\\.|%2e){1,2}(?=\\/|$)/gi;\n    let match;\n    // Find all invalid segments\n    while ((match = invalidSegmentPattern.exec(pathOnly)) !== null) {\n        invalidSegments.push({\n            start: match.index,\n            length: match[0].length,\n        });\n    }\n    if (invalidSegments.length > 0) {\n        let lastEnd = 0;\n        const underline = invalidSegments.reduce((acc, segment) => {\n            const spaces = ' '.repeat(segment.start - lastEnd);\n            const arrows = '^'.repeat(segment.length);\n            lastEnd = segment.start + segment.length;\n            return acc + spaces + arrows;\n        }, '');\n        throw new OpenAIError(`Path parameters result in path with invalid segments:\\n${path}\\n${underline}`);\n    }\n    return path;\n};\n/**\n * URI-encodes path params and ensures no unsafe /./ or /../ path segments are introduced.\n */\nexport const path = /* @__PURE__ */ createPathTagFunction(encodeURIPath);\n//# sourceMappingURL=path.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Messages extends APIResource {\n    /**\n     * Get the messages in a stored chat completion. Only Chat Completions that have\n     * been created with the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletionStoreMessage of client.chat.completions.messages.list(\n     *   'completion_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(completionID, query = {}, options) {\n        return this._client.getAPIList(path `/chat/completions/${completionID}/messages`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=messages.mjs.map","export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n    constructor(input) {\n        this.type = 'function';\n        this.function = input;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map","export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map","var _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nexport class EventStream {\n    constructor() {\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, () => { });\n        _EventStream_rejectConnectedPromise.set(this, () => { });\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, () => { });\n        _EventStream_rejectEndPromise.set(this, () => { });\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        __classPrivateFieldSet(this, _EventStream_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _EventStream_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _EventStream_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _EventStream_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _EventStream_ended, true, \"f\");\n            __classPrivateFieldGet(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() { }\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    __classPrivateFieldSet(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === 'AbortError') {\n        error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n        __classPrivateFieldSet(this, _EventStream_aborted, true, \"f\");\n        return this._emit('abort', error);\n    }\n    if (error instanceof OpenAIError) {\n        return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit('error', openAIError);\n    }\n    return this._emit('error', new OpenAIError(String(error)));\n};\n//# sourceMappingURL=EventStream.mjs.map","import { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from \"../error.mjs\";\nexport function makeParseableResponseFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function makeParseableTextFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableResponseFormat(response_format) {\n    return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\nexport function makeParseableTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nexport function maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice) => ({\n                ...choice,\n                message: {\n                    ...choice.message,\n                    parsed: null,\n                    ...(choice.message.tool_calls ?\n                        {\n                            tool_calls: choice.message.tool_calls,\n                        }\n                        : undefined),\n                },\n            })),\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nexport function parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice) => {\n        if (choice.finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n        }\n        if (choice.finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n        }\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                ...(choice.message.tool_calls ?\n                    {\n                        tool_calls: choice.message.tool_calls?.map((toolCall) => parseToolCall(params, toolCall)) ?? undefined,\n                    }\n                    : undefined),\n                parsed: choice.message.content && !choice.message.refusal ?\n                    parseResponseFormat(params, choice.message.content)\n                    : null,\n            },\n        };\n    });\n    return { ...completion, choices };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== 'json_schema') {\n        return null;\n    }\n    if (params.response_format?.type === 'json_schema') {\n        if ('$parseRaw' in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments)\n                : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments)\n                    : null,\n        },\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return isAutoParsableTool(inputTool) || inputTool?.function.strict || false;\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return (params.tools?.some((t) => isAutoParsableTool(t) || (t.type === 'function' && t.function.strict === true)) ?? false);\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\n//# sourceMappingURL=parser.mjs.map","var _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionToolCall, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { __classPrivateFieldGet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"../error.mjs\";\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nimport { isAssistantMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isAutoParsableTool, parseChatCompletion } from \"../lib/parser.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!('content' in message))\n            message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if (isToolMessage(message) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit('functionToolCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionToolCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionToolCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n    }\n    async finalFunctionToolCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionToolCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionToolCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runTools(client, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool) => {\n            if (isAutoParsableTool(tool)) {\n                if (!tool.$callback) {\n                    throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n                }\n                return {\n                    type: 'function',\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || '',\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true,\n                    },\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            inputTools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                        strict: t.function.strict,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName)\n                        .map((name) => JSON.stringify(name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            // TODO: support audio here\n            const ret = {\n                ...message,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null,\n            };\n            return ret;\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCall = function _AbstractChatCompletionRunner_getFinalFunctionToolCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.tool_calls?.length) {\n            return message.tool_calls.at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult = function _AbstractChatCompletionRunner_getFinalFunctionToolCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isToolMessage(message) &&\n            message.content != null &&\n            typeof message.content === 'string' &&\n            this.messages.some((x) => x.role === 'assistant' &&\n                x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map","import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map","const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL,\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== 'string') {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow) => {\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg) => {\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg) => {\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = () => {\n        skipBlank();\n        if (index >= length)\n            markPartialJSON('Unexpected end of input');\n        if (jsonString[index] === '\"')\n            return parseStr();\n        if (jsonString[index] === '{')\n            return parseObj();\n        if (jsonString[index] === '[')\n            return parseArr();\n        if (jsonString.substring(index, index + 4) === 'null' ||\n            (Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === 'true' ||\n            (Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === 'false' ||\n            (Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index)))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === 'Infinity' ||\n            (Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === '-Infinity' ||\n            (Allow.MINUS_INFINITY & allow &&\n                1 < length - index &&\n                length - index < 9 &&\n                '-Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === 'NaN' ||\n            (Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index)))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = () => {\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while (index < length && (jsonString[index] !== '\"' || (escape && jsonString[index - 1] === '\\\\'))) {\n            escape = jsonString[index] === '\\\\' ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n        else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            }\n            catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n            }\n        }\n        markPartialJSON('Unterminated string literal');\n    };\n    const parseObj = () => {\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while (jsonString[index] !== '}') {\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow)\n                    return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, { value, writable: true, enumerable: true, configurable: true });\n                }\n                catch (e) {\n                    if (Allow.OBJ & allow)\n                        return obj;\n                    else\n                        throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === ',')\n                    index++; // skip comma\n            }\n        }\n        catch (e) {\n            if (Allow.OBJ & allow)\n                return obj;\n            else\n                markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = () => {\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while (jsonString[index] !== ']') {\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === ',') {\n                    index++; // skip comma\n                }\n            }\n        }\n        catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = () => {\n        if (index === 0) {\n            if (jsonString === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            }\n            catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if ('.' === jsonString[jsonString.length - 1])\n                            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n                    }\n                    catch (e) { }\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === '-')\n            index++;\n        while (jsonString[index] && !',]}'.includes(jsonString[index]))\n            index++;\n        if (index == length && !(Allow.NUM & allow))\n            markPartialJSON('Unterminated number literal');\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        }\n        catch (e) {\n            if (jsonString.substring(start, index) === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = () => {\n        while (index < length && ' \\n\\r\\t'.includes(jsonString[index])) {\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input) => parseJSON(input, Allow.ALL ^ Allow.NUM);\nexport { partialParse, PartialJSON, MalformedJSON };\n//# sourceMappingURL=parser.mjs.map","var _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { OpenAIError, APIUserAbortError, LengthFinishReasonError, ContentFilterFinishReasonError, } from \"../error.mjs\";\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { hasAutoParseableInput, isAutoParsableResponseFormat, isAutoParsableTool, maybeParseChatCompletion, shouldParseToolCall, } from \"../lib/parser.mjs\";\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor(params) {\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        __classPrivateFieldSet(this, _ChatCompletionStream_params, params, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(() => runner._runChatCompletion(client, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null,\n        };\n        __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        for (const choice of chunk.choices) {\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.content) {\n                this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n                this._emit('content.delta', {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed,\n                });\n            }\n            if (choice.delta.refusal != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.refusal) {\n                this._emit('refusal.delta', {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal,\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.content.delta', {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? [],\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.refusal.delta', {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? [],\n                });\n            }\n            const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []) {\n                if (state.current_tool_call_index !== toolCall.index) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === 'function') {\n                    this._emit('tool_calls.function.arguments.delta', {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? '',\n                    });\n                }\n                else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error('no tool call snapshot');\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error('tool call snapshot missing `type`');\n        }\n        if (toolCallSnapshot.type === 'function') {\n            const inputTool = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool) => tool.type === 'function' && tool.function.name === toolCallSnapshot.function.name);\n            this._emit('tool_calls.function.arguments.done', {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments)\n                    : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments)\n                        : null,\n            });\n        }\n        else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit('content.done', {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null,\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit('refusal.done', { refusal: choiceSnapshot.message.refusal });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit('logprobs.content.done', { content: choiceSnapshot.logprobs.content });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit('logprobs.refusal.done', { refusal: choiceSnapshot.logprobs.refusal });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if (isAutoParsableResponseFormat(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                }\n                else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if (__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\") && hasAutoParseableInput(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === 'length') {\n                        throw new LengthFinishReasonError();\n                    }\n                    if (finish_reason === 'content_filter') {\n                        throw new ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || '') + refusal;\n            }\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || '') + content;\n                if (!choice.message.refusal && __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = partialParse(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n                    const tool_call = ((_d = choice.message.tool_calls)[index] ?? (_d[index] = {}));\n                    Object.assign(tool_call, rest);\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { name: fn.name ?? '', arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if (shouldParseToolCall(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = partialParse(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest }) => {\n            if (!finish_reason) {\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: { arguments: args, name },\n                        role,\n                        refusal: message.refusal ?? null,\n                    },\n                    finish_reason,\n                    index,\n                    logprobs,\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return {\n                ...choiceRest,\n                message: { ...messageRest, content, role, refusal: message.refusal ?? null },\n                finish_reason,\n                index,\n                logprobs,\n            };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n        ...(system_fingerprint ? { system_fingerprint } : {}),\n    };\n    return maybeParseChatCompletion(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) { }\n//# sourceMappingURL=ChatCompletionStream.mjs.map","import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(\n        // @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n}\n//# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages } from \"./messages.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nimport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nimport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nimport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nimport { parseChatCompletion, validateInputTools } from \"../../../lib/parser.mjs\";\nexport class Completions extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n    /**\n     * Get a stored chat completion. Only Chat Completions that have been created with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion =\n     *   await client.chat.completions.retrieve('completion_id');\n     * ```\n     */\n    retrieve(completionID, options) {\n        return this._client.get(path `/chat/completions/${completionID}`, options);\n    }\n    /**\n     * Modify a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be modified. Currently, the only\n     * supported modification is to update the `metadata` field.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion = await client.chat.completions.update(\n     *   'completion_id',\n     *   { metadata: { foo: 'string' } },\n     * );\n     * ```\n     */\n    update(completionID, body, options) {\n        return this._client.post(path `/chat/completions/${completionID}`, { body, ...options });\n    }\n    /**\n     * List stored Chat Completions. Only Chat Completions that have been stored with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletion of client.chat.completions.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/chat/completions', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be deleted.\n     *\n     * @example\n     * ```ts\n     * const chatCompletionDeleted =\n     *   await client.chat.completions.delete('completion_id');\n     * ```\n     */\n    delete(completionID, options) {\n        return this._client.delete(path `/chat/completions/${completionID}`, options);\n    }\n    parse(body, options) {\n        validateInputTools(body.tools);\n        return this._client.chat.completions\n            .create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                'X-Stainless-Helper-Method': 'chat.completions.parse',\n            },\n        })\n            ._thenUnwrap((completion) => parseChatCompletion(completion, body));\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\nexport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ParsingToolFunction, } from \"../../../lib/RunnableFunction.mjs\";\nexport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nexport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nCompletions.Messages = Messages;\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as CompletionsAPI from \"./completions/completions.mjs\";\nimport { Completions, } from \"./completions/completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\nChat.Completions = Completions;\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { isReadonlyArray } from \"./utils/values.mjs\";\nconst brand_privateNullableHeaders = /* @__PURE__ */ Symbol('brand.privateNullableHeaders');\nfunction* iterateHeaders(headers) {\n    if (!headers)\n        return;\n    if (brand_privateNullableHeaders in headers) {\n        const { values, nulls } = headers;\n        yield* values.entries();\n        for (const name of nulls) {\n            yield [name, null];\n        }\n        return;\n    }\n    let shouldClear = false;\n    let iter;\n    if (headers instanceof Headers) {\n        iter = headers.entries();\n    }\n    else if (isReadonlyArray(headers)) {\n        iter = headers;\n    }\n    else {\n        shouldClear = true;\n        iter = Object.entries(headers ?? {});\n    }\n    for (let row of iter) {\n        const name = row[0];\n        if (typeof name !== 'string')\n            throw new TypeError('expected header name to be a string');\n        const values = isReadonlyArray(row[1]) ? row[1] : [row[1]];\n        let didClear = false;\n        for (const value of values) {\n            if (value === undefined)\n                continue;\n            // Objects keys always overwrite older headers, they never append.\n            // Yield a null to clear the header before adding the new values.\n            if (shouldClear && !didClear) {\n                didClear = true;\n                yield [name, null];\n            }\n            yield [name, value];\n        }\n    }\n}\nexport const buildHeaders = (newHeaders) => {\n    const targetHeaders = new Headers();\n    const nullHeaders = new Set();\n    for (const headers of newHeaders) {\n        const seenHeaders = new Set();\n        for (const [name, value] of iterateHeaders(headers)) {\n            const lowerName = name.toLowerCase();\n            if (!seenHeaders.has(lowerName)) {\n                targetHeaders.delete(name);\n                seenHeaders.add(lowerName);\n            }\n            if (value === null) {\n                targetHeaders.delete(name);\n                nullHeaders.add(lowerName);\n            }\n            else {\n                targetHeaders.append(name, value);\n                nullHeaders.delete(lowerName);\n            }\n        }\n    }\n    return { [brand_privateNullableHeaders]: true, values: targetHeaders, nulls: nullHeaders };\n};\nexport const isEmptyHeaders = (headers) => {\n    for (const _ of iterateHeaders(headers))\n        return false;\n    return true;\n};\n//# sourceMappingURL=headers.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     *\n     * @example\n     * ```ts\n     * const speech = await client.audio.speech.create({\n     *   input: 'input',\n     *   model: 'string',\n     *   voice: 'ash',\n     * });\n     *\n     * const content = await speech.blob();\n     * console.log(content);\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', {\n            body,\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/octet-stream' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=speech.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nexport class Transcriptions extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', multipartFormRequestOptions({\n            body,\n            ...options,\n            stream: body.stream ?? false,\n            __metadata: { model: body.model },\n        }, this._client));\n    }\n}\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nexport class Translations extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/translations', multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }, this._client));\n    }\n}\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport { Speech } from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport { Transcriptions, } from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nimport { Translations, } from \"./translations.mjs\";\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\nAudio.Speech = Speech;\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { CursorPage } from \"../core/pagination.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */\n    create(body, options) {\n        return this._client.post('/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchID, options) {\n        return this._client.get(path `/batches/${batchID}`, options);\n    }\n    /**\n     * List your organization's batches.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/batches', (CursorPage), { query, ...options });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */\n    cancel(batchID, options) {\n        return this._client.post(path `/batches/${batchID}/cancel`, options);\n    }\n}\n//# sourceMappingURL=batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Assistants extends APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.create({\n     *   model: 'gpt-4o',\n     * });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.retrieve(\n     *   'assistant_id',\n     * );\n     * ```\n     */\n    retrieve(assistantID, options) {\n        return this._client.get(path `/assistants/${assistantID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.update(\n     *   'assistant_id',\n     * );\n     * ```\n     */\n    update(assistantID, body, options) {\n        return this._client.post(path `/assistants/${assistantID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of assistants.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const assistant of client.beta.assistants.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/assistants', (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistantDeleted =\n     *   await client.beta.assistants.delete('assistant_id');\n     * ```\n     */\n    delete(assistantID, options) {\n        return this._client.delete(path `/assistants/${assistantID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=assistants.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nexport class Sessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API. Can be configured with the same session parameters as the\n     * `session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const session =\n     *   await client.beta.realtime.sessions.create();\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/realtime/sessions', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nexport class TranscriptionSessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API specifically for realtime transcriptions. Can be configured with\n     * the same session parameters as the `transcription_session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const transcriptionSession =\n     *   await client.beta.realtime.transcriptionSessions.create();\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/realtime/transcription_sessions', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=transcription-sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as SessionsAPI from \"./sessions.mjs\";\nimport { Sessions, } from \"./sessions.mjs\";\nimport * as TranscriptionSessionsAPI from \"./transcription-sessions.mjs\";\nimport { TranscriptionSessions, } from \"./transcription-sessions.mjs\";\nexport class Realtime extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.sessions = new SessionsAPI.Sessions(this._client);\n        this.transcriptionSessions = new TranscriptionSessionsAPI.TranscriptionSessions(this._client);\n    }\n}\nRealtime.Sessions = Sessions;\nRealtime.TranscriptionSessions = TranscriptionSessions;\n//# sourceMappingURL=realtime.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Messages extends APIResource {\n    /**\n     * Create a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    create(threadID, body, options) {\n        return this._client.post(path `/threads/${threadID}/messages`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieve a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(path `/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(messageID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/messages/${messageID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of messages for a given thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(threadID, query = {}, options) {\n        return this._client.getAPIList(path `/threads/${threadID}/messages`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Deletes a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    delete(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.delete(path `/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../../internal/headers.mjs\";\nimport { path } from \"../../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Steps extends APIResource {\n    /**\n     * Retrieves a run step.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(stepID, params, options) {\n        const { thread_id, run_id, ...query } = params;\n        return this._client.get(path `/threads/${thread_id}/runs/${run_id}/steps/${stepID}`, {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of run steps belonging to a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(runID, params, options) {\n        const { thread_id, ...query } = params;\n        return this._client.getAPIList(path `/threads/${thread_id}/runs/${runID}/steps`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=steps.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { OpenAIError } from \"../../core/error.mjs\";\nimport { encodeUTF8 } from \"./bytes.mjs\";\nexport const toBase64 = (data) => {\n    if (!data)\n        return '';\n    if (typeof globalThis.Buffer !== 'undefined') {\n        return globalThis.Buffer.from(data).toString('base64');\n    }\n    if (typeof data === 'string') {\n        data = encodeUTF8(data);\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(String.fromCharCode.apply(null, data));\n    }\n    throw new OpenAIError('Cannot generate base64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport const fromBase64 = (str) => {\n    if (typeof globalThis.Buffer !== 'undefined') {\n        const buf = globalThis.Buffer.from(str, 'base64');\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    if (typeof atob !== 'undefined') {\n        const bstr = atob(str);\n        const buf = new Uint8Array(bstr.length);\n        for (let i = 0; i < bstr.length; i++) {\n            buf[i] = bstr.charCodeAt(i);\n        }\n        return buf;\n    }\n    throw new OpenAIError('Cannot decode base64 string; Expected `Buffer` or `atob` to be defined');\n};\n/**\n * Converts a Base64 encoded string to a Float32Array.\n * @param base64Str - The Base64 encoded string.\n * @returns An Array of numbers interpreted as Float32 values.\n */\nexport const toFloat32Array = (base64Str) => {\n    if (typeof Buffer !== 'undefined') {\n        // for Node.js environment\n        const buf = Buffer.from(base64Str, 'base64');\n        return Array.from(new Float32Array(buf.buffer, buf.byteOffset, buf.length / Float32Array.BYTES_PER_ELEMENT));\n    }\n    else {\n        // for legacy web platform APIs\n        const binaryStr = atob(base64Str);\n        const len = binaryStr.length;\n        const bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n            bytes[i] = binaryStr.charCodeAt(i);\n        }\n        return Array.from(new Float32Array(bytes.buffer));\n    }\n};\n//# sourceMappingURL=base64.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof globalThis.process !== 'undefined') {\n        return globalThis.process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof globalThis.Deno !== 'undefined') {\n        return globalThis.Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\n//# sourceMappingURL=env.mjs.map","var _AssistantStream_instances, _a, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isObj } from \"../internal/utils.mjs\";\nexport class AssistantStream extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new _a();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(runId, runs, params, options) {\n        const runner = new _a();\n        runner._run(() => runner._runToolAssistantStream(runId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.submitToolOutputs(runId, body, {\n            ...options,\n            signal: this.controller.signal,\n        });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new _a();\n        runner._run(() => runner._threadAssistantStream(params, thread, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new _a();\n        runner._run(() => runner._runAssistantStream(threadId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    currentEvent() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n            throw Error('Final run was not received.');\n        return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)) {\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === 'index' || key === 'type') {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n                accValue += deltaValue;\n            }\n            else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n                accValue += deltaValue;\n            }\n            else if (isObj(accValue) && isObj(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            }\n            else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue) {\n                    if (!isObj(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry['index'];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error('Expected array delta entry to have an `index` property');\n                    }\n                    if (typeof index !== 'number') {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    }\n                    else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            }\n            else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, runId, params, options);\n    }\n}\n_a = AssistantStream, _AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended)\n        return;\n    __classPrivateFieldSet(this, _AssistantStream_currentEvent, event, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch (event.event) {\n        case 'thread.created':\n            //No action on this event.\n            break;\n        case 'thread.run.created':\n        case 'thread.run.queued':\n        case 'thread.run.in_progress':\n        case 'thread.run.requires_action':\n        case 'thread.run.completed':\n        case 'thread.run.incomplete':\n        case 'thread.run.failed':\n        case 'thread.run.cancelling':\n        case 'thread.run.cancelled':\n        case 'thread.run.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case 'thread.run.step.created':\n        case 'thread.run.step.in_progress':\n        case 'thread.run.step.delta':\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case 'thread.message.created':\n        case 'thread.message.in_progress':\n        case 'thread.message.delta':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case 'error':\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error('Encountered an error event in event processing - errors should be processed earlier');\n        default:\n            assertNever(event);\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n        throw Error('Final run has not been received');\n    return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n    __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent) {\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == 'text') {\n            this._emit('textCreated', snapshotContent.text);\n        }\n    }\n    switch (event.event) {\n        case 'thread.message.created':\n            this._emit('messageCreated', event.data);\n            break;\n        case 'thread.message.in_progress':\n            break;\n        case 'thread.message.delta':\n            this._emit('messageDelta', event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content) {\n                    //If it is text delta, emit a text delta event\n                    if (content.type == 'text' && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == 'text') {\n                            this._emit('textDelta', textDelta, snapshot.text);\n                        }\n                        else {\n                            throw Error('The snapshot associated with this text delta is not text or missing');\n                        }\n                    }\n                    if (content.index != __classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\")) {\n                            switch (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").type) {\n                                case 'text':\n                                    this._emit('textDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case 'image_file':\n                                    this._emit('imageFileDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    __classPrivateFieldSet(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //We emit the latest content we were working on on completion (including incomplete)\n            if (__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch (currentContent.type) {\n                        case 'image_file':\n                            this._emit('imageFileDone', currentContent.image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case 'text':\n                            this._emit('textDone', currentContent.text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if (__classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit('messageDone', event.data);\n            }\n            __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch (event.event) {\n        case 'thread.run.step.created':\n            this._emit('runStepCreated', event.data);\n            break;\n        case 'thread.run.step.delta':\n            const delta = event.data.delta;\n            if (delta.step_details &&\n                delta.step_details.type == 'tool_calls' &&\n                delta.step_details.tool_calls &&\n                accumulatedRunStep.step_details.type == 'tool_calls') {\n                for (const toolCall of delta.step_details.tool_calls) {\n                    if (toolCall.index == __classPrivateFieldGet(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit('toolCallDelta', toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    }\n                    else {\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"))\n                            this._emit('toolCallCreated', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n            break;\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == 'tool_calls') {\n                if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit('runStepDone', event.data, accumulatedRunStep);\n            break;\n        case 'thread.run.step.in_progress':\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    __classPrivateFieldGet(this, _AssistantStream_events, \"f\").push(event);\n    this._emit('event', event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch (event.event) {\n        case 'thread.run.step.created':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case 'thread.run.step.delta':\n            let snapshot = __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error('Received a RunStepDelta before creation of a snapshot');\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = _a.accumulateDelta(snapshot, data.delta);\n                __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n        case 'thread.run.step.in_progress':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if (__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id])\n        return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error('No snapshot available');\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch (event.event) {\n        case 'thread.message.created':\n            //On creation the snapshot is just the initial message\n            return [event.data, newContent];\n        case 'thread.message.delta':\n            if (!snapshot) {\n                throw Error('Received a delta with no existing snapshot (there should be one from message creation)');\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content) {\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    }\n                    else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [snapshot, newContent];\n        case 'thread.message.in_progress':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //No changes on other thread events\n            if (snapshot) {\n                return [snapshot, newContent];\n            }\n            else {\n                throw Error('Received thread message event with no existing snapshot');\n            }\n    }\n    throw Error('Tried to accumulate a non-message event');\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return _a.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    __classPrivateFieldSet(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch (event.event) {\n        case 'thread.run.created':\n            break;\n        case 'thread.run.queued':\n            break;\n        case 'thread.run.in_progress':\n            break;\n        case 'thread.run.requires_action':\n        case 'thread.run.cancelled':\n        case 'thread.run.failed':\n        case 'thread.run.completed':\n        case 'thread.run.expired':\n        case 'thread.run.incomplete':\n            __classPrivateFieldSet(this, _AssistantStream_finalRun, event.data, \"f\");\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case 'thread.run.cancelling':\n            break;\n    }\n};\nfunction assertNever(_x) { }\n//# sourceMappingURL=AssistantStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../core/resource.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { Steps, } from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../../internal/headers.mjs\";\nimport { AssistantStream } from \"../../../../lib/AssistantStream.mjs\";\nimport { sleep } from \"../../../../internal/utils/sleep.mjs\";\nimport { path } from \"../../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    create(threadID, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(path `/threads/${threadID}/runs`, {\n            query: { include },\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * Retrieves a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(path `/threads/${thread_id}/runs/${runID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of runs belonging to a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(threadID, query = {}, options) {\n        return this._client.getAPIList(path `/threads/${threadID}/runs`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    cancel(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}/cancel`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(run.id, { thread_id: threadId }, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */\n    createAndStream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async poll(runId, params, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const { data: run, response } = await this.retrieve(runId, params, {\n                ...options,\n                headers: { ...options?.headers, ...headers },\n            }).withResponse();\n            switch (run.status) {\n                //If we are in any sort of intermediate state we poll\n                case 'queued':\n                case 'in_progress':\n                case 'cancelling':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case 'requires_action':\n                case 'incomplete':\n                case 'cancelled':\n                case 'completed':\n                case 'failed':\n                case 'expired':\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */\n    stream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async submitToolOutputsAndPoll(runId, params, options) {\n        const run = await this.submitToolOutputs(runId, params, options);\n        return await this.poll(run.id, params, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    submitToolOutputsStream(runId, params, options) {\n        return AssistantStream.createToolAssistantStream(runId, this._client.beta.threads.runs, params, options);\n    }\n}\nRuns.Steps = Steps;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages, } from \"./messages.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, } from \"./runs/runs.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { AssistantStream } from \"../../../lib/AssistantStream.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    /**\n     * Create a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    create(body = {}, options) {\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(threadID, options) {\n        return this._client.get(path `/threads/${threadID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(threadID, body, options) {\n        return this._client.post(path `/threads/${threadID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    delete(threadID, options) {\n        return this._client.delete(path `/threads/${threadID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.id, { thread_id: run.thread_id }, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */\n    createAndRunStream(body, options) {\n        return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = Runs;\nThreads.Messages = Messages;\n//# sourceMappingURL=threads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as AssistantsAPI from \"./assistants.mjs\";\nimport { Assistants, } from \"./assistants.mjs\";\nimport * as RealtimeAPI from \"./realtime/realtime.mjs\";\nimport { Realtime, } from \"./realtime/realtime.mjs\";\nimport * as ThreadsAPI from \"./threads/threads.mjs\";\nimport { Threads, } from \"./threads/threads.mjs\";\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.realtime = new RealtimeAPI.Realtime(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\nBeta.Realtime = Realtime;\nBeta.Assistants = Assistants;\nBeta.Threads = Threads;\n//# sourceMappingURL=beta.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Content extends APIResource {\n    /**\n     * Retrieve Container File Content\n     */\n    retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(path `/containers/${container_id}/files/${fileID}/content`, {\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=content.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as ContentAPI from \"./content.mjs\";\nimport { Content } from \"./content.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { multipartFormRequestOptions } from \"../../../internal/uploads.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.content = new ContentAPI.Content(this._client);\n    }\n    /**\n     * Create a Container File\n     *\n     * You can send either a multipart/form-data request with the raw file content, or\n     * a JSON request with a file ID.\n     */\n    create(containerID, body, options) {\n        return this._client.post(path `/containers/${containerID}/files`, multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    /**\n     * Retrieve Container File\n     */\n    retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(path `/containers/${container_id}/files/${fileID}`, options);\n    }\n    /**\n     * List Container files\n     */\n    list(containerID, query = {}, options) {\n        return this._client.getAPIList(path `/containers/${containerID}/files`, (CursorPage), {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Delete Container File\n     */\n    delete(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.delete(path `/containers/${container_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n}\nFiles.Content = Content;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as FilesAPI from \"./files/files.mjs\";\nimport { Files, } from \"./files/files.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Containers extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n    }\n    /**\n     * Create Container\n     */\n    create(body, options) {\n        return this._client.post('/containers', { body, ...options });\n    }\n    /**\n     * Retrieve Container\n     */\n    retrieve(containerID, options) {\n        return this._client.get(path `/containers/${containerID}`, options);\n    }\n    /**\n     * List Containers\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/containers', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete Container\n     */\n    delete(containerID, options) {\n        return this._client.delete(path `/containers/${containerID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n}\nContainers.Files = Files;\n//# sourceMappingURL=containers.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { loggerFor, toFloat32Array } from \"../internal/utils.mjs\";\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     *\n     * @example\n     * ```ts\n     * const createEmbeddingResponse =\n     *   await client.embeddings.create({\n     *     input: 'The quick brown fox jumped over the lazy dog',\n     *     model: 'text-embedding-3-small',\n     *   });\n     * ```\n     */\n    create(body, options) {\n        const hasUserProvidedEncodingFormat = !!body.encoding_format;\n        // No encoding_format specified, defaulting to base64 for performance reasons\n        // See https://github.com/openai/openai-node/pull/1312\n        let encoding_format = hasUserProvidedEncodingFormat ? body.encoding_format : 'base64';\n        if (hasUserProvidedEncodingFormat) {\n            loggerFor(this._client).debug('embeddings/user defined encoding_format:', body.encoding_format);\n        }\n        const response = this._client.post('/embeddings', {\n            body: {\n                ...body,\n                encoding_format: encoding_format,\n            },\n            ...options,\n        });\n        // if the user specified an encoding_format, return the response as-is\n        if (hasUserProvidedEncodingFormat) {\n            return response;\n        }\n        // in this stage, we are sure the user did not specify an encoding_format\n        // and we defaulted to base64 for performance reasons\n        // we are sure then that the response is base64 encoded, let's decode it\n        // the returned result will be a float32 array since this is OpenAI API's default encoding\n        loggerFor(this._client).debug('embeddings/decoding base64 embeddings from base64');\n        return response._thenUnwrap((response) => {\n            if (response && response.data) {\n                response.data.forEach((embeddingBase64Obj) => {\n                    const embeddingBase64Str = embeddingBase64Obj.embedding;\n                    embeddingBase64Obj.embedding = toFloat32Array(embeddingBase64Str);\n                });\n            }\n            return response;\n        });\n    }\n}\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class OutputItems extends APIResource {\n    /**\n     * Get an evaluation run output item by ID.\n     */\n    retrieve(outputItemID, params, options) {\n        const { eval_id, run_id } = params;\n        return this._client.get(path `/evals/${eval_id}/runs/${run_id}/output_items/${outputItemID}`, options);\n    }\n    /**\n     * Get a list of output items for an evaluation run.\n     */\n    list(runID, params, options) {\n        const { eval_id, ...query } = params;\n        return this._client.getAPIList(path `/evals/${eval_id}/runs/${runID}/output_items`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=output-items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as OutputItemsAPI from \"./output-items.mjs\";\nimport { OutputItems, } from \"./output-items.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.outputItems = new OutputItemsAPI.OutputItems(this._client);\n    }\n    /**\n     * Kicks off a new run for a given evaluation, specifying the data source, and what\n     * model configuration to use to test. The datasource will be validated against the\n     * schema specified in the config of the evaluation.\n     */\n    create(evalID, body, options) {\n        return this._client.post(path `/evals/${evalID}/runs`, { body, ...options });\n    }\n    /**\n     * Get an evaluation run by ID.\n     */\n    retrieve(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.get(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Get a list of runs for an evaluation.\n     */\n    list(evalID, query = {}, options) {\n        return this._client.getAPIList(path `/evals/${evalID}/runs`, (CursorPage), {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Delete an eval run.\n     */\n    delete(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.delete(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Cancel an ongoing evaluation run.\n     */\n    cancel(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.post(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n}\nRuns.OutputItems = OutputItems;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, } from \"./runs/runs.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Evals extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n    }\n    /**\n     * Create the structure of an evaluation that can be used to test a model's\n     * performance. An evaluation is a set of testing criteria and the config for a\n     * data source, which dictates the schema of the data used in the evaluation. After\n     * creating an evaluation, you can run it on different models and model parameters.\n     * We support several types of graders and datasources. For more information, see\n     * the [Evals guide](https://platform.openai.com/docs/guides/evals).\n     */\n    create(body, options) {\n        return this._client.post('/evals', { body, ...options });\n    }\n    /**\n     * Get an evaluation by ID.\n     */\n    retrieve(evalID, options) {\n        return this._client.get(path `/evals/${evalID}`, options);\n    }\n    /**\n     * Update certain properties of an evaluation.\n     */\n    update(evalID, body, options) {\n        return this._client.post(path `/evals/${evalID}`, { body, ...options });\n    }\n    /**\n     * List evaluations for a project.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/evals', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete an evaluation.\n     */\n    delete(evalID, options) {\n        return this._client.delete(path `/evals/${evalID}`, options);\n    }\n}\nEvals.Runs = Runs;\n//# sourceMappingURL=evals.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { CursorPage } from \"../core/pagination.mjs\";\nimport { buildHeaders } from \"../internal/headers.mjs\";\nimport { sleep } from \"../internal/utils/sleep.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport { multipartFormRequestOptions } from \"../internal/uploads.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 100 GB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileID, options) {\n        return this._client.get(path `/files/${fileID}`, options);\n    }\n    /**\n     * Returns a list of files.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/files', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    delete(fileID, options) {\n        return this._client.delete(path `/files/${fileID}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileID, options) {\n        return this._client.get(path `/files/${fileID}/content`, {\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nexport class Methods extends APIResource {\n}\n//# sourceMappingURL=methods.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nexport class Graders extends APIResource {\n    /**\n     * Run a grader.\n     *\n     * @example\n     * ```ts\n     * const response = await client.fineTuning.alpha.graders.run({\n     *   grader: {\n     *     input: 'input',\n     *     name: 'name',\n     *     operation: 'eq',\n     *     reference: 'reference',\n     *     type: 'string_check',\n     *   },\n     *   model_sample: 'model_sample',\n     * });\n     * ```\n     */\n    run(body, options) {\n        return this._client.post('/fine_tuning/alpha/graders/run', { body, ...options });\n    }\n    /**\n     * Validate a grader.\n     *\n     * @example\n     * ```ts\n     * const response =\n     *   await client.fineTuning.alpha.graders.validate({\n     *     grader: {\n     *       input: 'input',\n     *       name: 'name',\n     *       operation: 'eq',\n     *       reference: 'reference',\n     *       type: 'string_check',\n     *     },\n     *   });\n     * ```\n     */\n    validate(body, options) {\n        return this._client.post('/fine_tuning/alpha/graders/validate', { body, ...options });\n    }\n}\n//# sourceMappingURL=graders.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as GradersAPI from \"./graders.mjs\";\nimport { Graders, } from \"./graders.mjs\";\nexport class Alpha extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.graders = new GradersAPI.Graders(this._client);\n    }\n}\nAlpha.Graders = Graders;\n//# sourceMappingURL=alpha.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { Page } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Permissions extends APIResource {\n    /**\n     * **NOTE:** Calling this endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * This enables organization owners to share fine-tuned models with other projects\n     * in their organization.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const permissionCreateResponse of client.fineTuning.checkpoints.permissions.create(\n     *   'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *   { project_ids: ['string'] },\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    create(fineTunedModelCheckpoint, body, options) {\n        return this._client.getAPIList(path `/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, (Page), { body, method: 'post', ...options });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to view all permissions for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.retrieve(\n     *     'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     *   );\n     * ```\n     */\n    retrieve(fineTunedModelCheckpoint, query = {}, options) {\n        return this._client.get(path `/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to delete a permission for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.delete(\n     *     'cp_zc4Q7MP6XxulcVzj4MZdwsAB',\n     *     {\n     *       fine_tuned_model_checkpoint:\n     *         'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *     },\n     *   );\n     * ```\n     */\n    delete(permissionID, params, options) {\n        const { fine_tuned_model_checkpoint } = params;\n        return this._client.delete(path `/fine_tuning/checkpoints/${fine_tuned_model_checkpoint}/permissions/${permissionID}`, options);\n    }\n}\n//# sourceMappingURL=permissions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as PermissionsAPI from \"./permissions.mjs\";\nimport { Permissions, } from \"./permissions.mjs\";\nexport class Checkpoints extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.permissions = new PermissionsAPI.Permissions(this._client);\n    }\n}\nCheckpoints.Permissions = Permissions;\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Checkpoints extends APIResource {\n    /**\n     * List checkpoints for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobCheckpoint of client.fineTuning.jobs.checkpoints.list(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(path `/fine_tuning/jobs/${fineTuningJobID}/checkpoints`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints.mjs\";\nimport { Checkpoints, } from \"./checkpoints.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Jobs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.create({\n     *   model: 'gpt-4o-mini',\n     *   training_file: 'file-abc123',\n     * });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.retrieve(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    retrieve(fineTuningJobID, options) {\n        return this._client.get(path `/fine_tuning/jobs/${fineTuningJobID}`, options);\n    }\n    /**\n     * List your organization's fine-tuning jobs\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJob of client.fineTuning.jobs.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/fine_tuning/jobs', (CursorPage), { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.cancel(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    cancel(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/cancel`, options);\n    }\n    /**\n     * Get status updates for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobEvent of client.fineTuning.jobs.listEvents(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    listEvents(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(path `/fine_tuning/jobs/${fineTuningJobID}/events`, (CursorPage), { query, ...options });\n    }\n    /**\n     * Pause a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.pause(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    pause(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/pause`, options);\n    }\n    /**\n     * Resume a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.resume(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    resume(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/resume`, options);\n    }\n}\nJobs.Checkpoints = Checkpoints;\n//# sourceMappingURL=jobs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as MethodsAPI from \"./methods.mjs\";\nimport { Methods, } from \"./methods.mjs\";\nimport * as AlphaAPI from \"./alpha/alpha.mjs\";\nimport { Alpha } from \"./alpha/alpha.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints/checkpoints.mjs\";\nimport { Checkpoints } from \"./checkpoints/checkpoints.mjs\";\nimport * as JobsAPI from \"./jobs/jobs.mjs\";\nimport { Jobs, } from \"./jobs/jobs.mjs\";\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.methods = new MethodsAPI.Methods(this._client);\n        this.jobs = new JobsAPI.Jobs(this._client);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n        this.alpha = new AlphaAPI.Alpha(this._client);\n    }\n}\nFineTuning.Methods = Methods;\nFineTuning.Jobs = Jobs;\nFineTuning.Checkpoints = Checkpoints;\nFineTuning.Alpha = Alpha;\n//# sourceMappingURL=fine-tuning.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nexport class GraderModels extends APIResource {\n}\n//# sourceMappingURL=grader-models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as GraderModelsAPI from \"./grader-models.mjs\";\nimport { GraderModels, } from \"./grader-models.mjs\";\nexport class Graders extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.graderModels = new GraderModelsAPI.GraderModels(this._client);\n    }\n}\nGraders.GraderModels = GraderModels;\n//# sourceMappingURL=graders.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../internal/uploads.mjs\";\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image. This endpoint only supports `dall-e-2`.\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.createVariation({\n     *   image: fs.createReadStream('otter.png'),\n     * });\n     * ```\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    /**\n     * Creates an edited or extended image given one or more source images and a\n     * prompt. This endpoint only supports `gpt-image-1` and `dall-e-2`.\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.edit({\n     *   image: fs.createReadStream('path/to/file'),\n     *   prompt: 'A cute baby sea otter wearing a beret',\n     * });\n     * ```\n     */\n    edit(body, options) {\n        return this._client.post('/images/edits', multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    /**\n     * Creates an image given a prompt.\n     * [Learn more](https://platform.openai.com/docs/guides/images).\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.generate({\n     *   prompt: 'A cute baby sea otter',\n     * });\n     * ```\n     */\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options });\n    }\n}\n//# sourceMappingURL=images.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { Page } from \"../core/pagination.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(path `/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', (Page), options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    delete(model, options) {\n        return this._client.delete(path `/models/${model}`, options);\n    }\n}\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n//# sourceMappingURL=moderations.mjs.map","import { OpenAIError } from \"../error.mjs\";\nimport { isAutoParsableResponseFormat } from \"../lib/parser.mjs\";\nexport function maybeParseResponse(response, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...response,\n            output_parsed: null,\n            output: response.output.map((item) => {\n                if (item.type === 'function_call') {\n                    return {\n                        ...item,\n                        parsed_arguments: null,\n                    };\n                }\n                if (item.type === 'message') {\n                    return {\n                        ...item,\n                        content: item.content.map((content) => ({\n                            ...content,\n                            parsed: null,\n                        })),\n                    };\n                }\n                else {\n                    return item;\n                }\n            }),\n        };\n    }\n    return parseResponse(response, params);\n}\nexport function parseResponse(response, params) {\n    const output = response.output.map((item) => {\n        if (item.type === 'function_call') {\n            return {\n                ...item,\n                parsed_arguments: parseToolCall(params, item),\n            };\n        }\n        if (item.type === 'message') {\n            const content = item.content.map((content) => {\n                if (content.type === 'output_text') {\n                    return {\n                        ...content,\n                        parsed: parseTextFormat(params, content.text),\n                    };\n                }\n                return content;\n            });\n            return {\n                ...item,\n                content,\n            };\n        }\n        return item;\n    });\n    const parsed = Object.assign({}, response, { output });\n    if (!Object.getOwnPropertyDescriptor(response, 'output_text')) {\n        addOutputText(parsed);\n    }\n    Object.defineProperty(parsed, 'output_parsed', {\n        enumerable: true,\n        get() {\n            for (const output of parsed.output) {\n                if (output.type !== 'message') {\n                    continue;\n                }\n                for (const content of output.content) {\n                    if (content.type === 'output_text' && content.parsed !== null) {\n                        return content.parsed;\n                    }\n                }\n            }\n            return null;\n        },\n    });\n    return parsed;\n}\nfunction parseTextFormat(params, content) {\n    if (params.text?.format?.type !== 'json_schema') {\n        return null;\n    }\n    if ('$parseRaw' in params.text?.format) {\n        const text_format = params.text?.format;\n        return text_format.$parseRaw(content);\n    }\n    return JSON.parse(content);\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.text?.format)) {\n        return true;\n    }\n    return false;\n}\nexport function makeParseableResponseTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nfunction getInputToolByName(input_tools, name) {\n    return input_tools.find((tool) => tool.type === 'function' && tool.name === name);\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return {\n        ...toolCall,\n        ...toolCall,\n        parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.arguments)\n            : inputTool?.strict ? JSON.parse(toolCall.arguments)\n                : null,\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return isAutoParsableTool(inputTool) || inputTool?.strict || false;\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\nexport function addOutputText(rsp) {\n    const texts = [];\n    for (const output of rsp.output) {\n        if (output.type !== 'message') {\n            continue;\n        }\n        for (const content of output.content) {\n            if (content.type === 'output_text') {\n                texts.push(content.text);\n            }\n        }\n    }\n    rsp.output_text = texts.join('');\n}\n//# sourceMappingURL=ResponsesParser.mjs.map","var _ResponseStream_instances, _ResponseStream_params, _ResponseStream_currentResponseSnapshot, _ResponseStream_finalResponse, _ResponseStream_beginRequest, _ResponseStream_addEvent, _ResponseStream_endRequest, _ResponseStream_accumulateResponse;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../../internal/tslib.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../../error.mjs\";\nimport { EventStream } from \"../EventStream.mjs\";\nimport { maybeParseResponse } from \"../ResponsesParser.mjs\";\nexport class ResponseStream extends EventStream {\n    constructor(params) {\n        super();\n        _ResponseStream_instances.add(this);\n        _ResponseStream_params.set(this, void 0);\n        _ResponseStream_currentResponseSnapshot.set(this, void 0);\n        _ResponseStream_finalResponse.set(this, void 0);\n        __classPrivateFieldSet(this, _ResponseStream_params, params, \"f\");\n    }\n    static createResponse(client, params, options) {\n        const runner = new ResponseStream(params);\n        runner._run(() => runner._createOrRetrieveResponse(client, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createOrRetrieveResponse(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_beginRequest).call(this);\n        let stream;\n        let starting_after = null;\n        if ('response_id' in params) {\n            stream = await client.responses.retrieve(params.response_id, { stream: true }, { ...options, signal: this.controller.signal, stream: true });\n            starting_after = params.starting_after ?? null;\n        }\n        else {\n            stream = await client.responses.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        }\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_addEvent).call(this, event, starting_after);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_endRequest).call(this);\n    }\n    [(_ResponseStream_params = new WeakMap(), _ResponseStream_currentResponseSnapshot = new WeakMap(), _ResponseStream_finalResponse = new WeakMap(), _ResponseStream_instances = new WeakSet(), _ResponseStream_beginRequest = function _ResponseStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n    }, _ResponseStream_addEvent = function _ResponseStream_addEvent(event, starting_after) {\n        if (this.ended)\n            return;\n        const maybeEmit = (name, event) => {\n            if (starting_after == null || event.sequence_number > starting_after) {\n                this._emit(name, event);\n            }\n        };\n        const response = __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_accumulateResponse).call(this, event);\n        maybeEmit('event', event);\n        switch (event.type) {\n            case 'response.output_text.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    maybeEmit('response.output_text.delta', {\n                        ...event,\n                        snapshot: content.text,\n                    });\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    maybeEmit('response.function_call_arguments.delta', {\n                        ...event,\n                        snapshot: output.arguments,\n                    });\n                }\n                break;\n            }\n            default:\n                maybeEmit(event.type, event);\n                break;\n        }\n    }, _ResponseStream_endRequest = function _ResponseStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any events`);\n        }\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n        const parsedResponse = finalizeResponse(snapshot, __classPrivateFieldGet(this, _ResponseStream_params, \"f\"));\n        __classPrivateFieldSet(this, _ResponseStream_finalResponse, parsedResponse, \"f\");\n        return parsedResponse;\n    }, _ResponseStream_accumulateResponse = function _ResponseStream_accumulateResponse(event) {\n        let snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            if (event.type !== 'response.created') {\n                throw new OpenAIError(`When snapshot hasn't been set yet, expected 'response.created' event, got ${event.type}`);\n            }\n            snapshot = __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n            return snapshot;\n        }\n        switch (event.type) {\n            case 'response.output_item.added': {\n                snapshot.output.push(event.item);\n                break;\n            }\n            case 'response.content_part.added': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    output.content.push(event.part);\n                }\n                break;\n            }\n            case 'response.output_text.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    content.text += event.delta;\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    output.arguments += event.delta;\n                }\n                break;\n            }\n            case 'response.completed': {\n                __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n                break;\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((event) => (event ? { value: event, done: false } : { value: undefined, done: true }));\n                }\n                const event = pushQueue.shift();\n                return { value: event, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * @returns a promise that resolves with the final Response, or rejects\n     * if an error occurred or the stream ended prematurely without producing a REsponse.\n     */\n    async finalResponse() {\n        await this.done();\n        const response = __classPrivateFieldGet(this, _ResponseStream_finalResponse, \"f\");\n        if (!response)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return response;\n    }\n}\nfunction finalizeResponse(snapshot, params) {\n    return maybeParseResponse(snapshot, params);\n}\n//# sourceMappingURL=ResponseStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class InputItems extends APIResource {\n    /**\n     * Returns a list of input items for a given response.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const responseItem of client.responses.inputItems.list(\n     *   'response_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(responseID, query = {}, options) {\n        return this._client.getAPIList(path `/responses/${responseID}/input_items`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=input-items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { parseResponse, addOutputText, } from \"../../lib/ResponsesParser.mjs\";\nimport { ResponseStream } from \"../../lib/responses/ResponseStream.mjs\";\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as InputItemsAPI from \"./input-items.mjs\";\nimport { InputItems } from \"./input-items.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Responses extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.inputItems = new InputItemsAPI.InputItems(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/responses', { body, ...options, stream: body.stream ?? false })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    retrieve(responseID, query = {}, options) {\n        return this._client.get(path `/responses/${responseID}`, {\n            query,\n            ...options,\n            stream: query?.stream ?? false,\n        })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    /**\n     * Deletes a model response with the given ID.\n     *\n     * @example\n     * ```ts\n     * await client.responses.delete(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */\n    delete(responseID, options) {\n        return this._client.delete(path `/responses/${responseID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n    parse(body, options) {\n        return this._client.responses\n            .create(body, options)\n            ._thenUnwrap((response) => parseResponse(response, body));\n    }\n    /**\n     * Creates a model response stream\n     */\n    stream(body, options) {\n        return ResponseStream.createResponse(this._client, body, options);\n    }\n    /**\n     * Cancels a model response with the given ID. Only responses created with the\n     * `background` parameter set to `true` can be cancelled.\n     * [Learn more](https://platform.openai.com/docs/guides/background).\n     *\n     * @example\n     * ```ts\n     * const response = await client.responses.cancel(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */\n    cancel(responseID, options) {\n        return this._client.post(path `/responses/${responseID}/cancel`, options);\n    }\n}\nResponses.InputItems = InputItems;\n//# sourceMappingURL=responses.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Parts extends APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */\n    create(uploadID, body, options) {\n        return this._client.post(path `/uploads/${uploadID}/parts`, multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n}\n//# sourceMappingURL=parts.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as PartsAPI from \"./parts.mjs\";\nimport { Parts } from \"./parts.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Uploads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.parts = new PartsAPI.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose` values, the correct `mime_type` must be specified. Please\n     * refer to documentation for the\n     * [supported MIME types for your use case](https://platform.openai.com/docs/assistants/tools/file-search#supported-files).\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */\n    create(body, options) {\n        return this._client.post('/uploads', { body, ...options });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */\n    cancel(uploadID, options) {\n        return this._client.post(path `/uploads/${uploadID}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */\n    complete(uploadID, body, options) {\n        return this._client.post(path `/uploads/${uploadID}/complete`, { body, ...options });\n    }\n}\nUploads.Parts = Parts;\n//# sourceMappingURL=uploads.mjs.map","/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async (promises) => {\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result) => result.status === 'rejected');\n    if (rejected.length) {\n        for (const result of rejected) {\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results) {\n        if (result.status === 'fulfilled') {\n            values.push(result.value);\n        }\n    }\n    return values;\n};\n//# sourceMappingURL=Util.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { sleep } from \"../../internal/utils/sleep.mjs\";\nimport { allSettledWithThrow } from \"../../lib/Util.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class FileBatches extends APIResource {\n    /**\n     * Create a vector store file batch.\n     */\n    create(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}/file_batches`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */\n    retrieve(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(path `/vector_stores/${vector_store_id}/file_batches/${batchID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */\n    cancel(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.post(path `/vector_stores/${vector_store_id}/file_batches/${batchID}/cancel`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    /**\n     * Returns a list of vector store files in a batch.\n     */\n    listFiles(batchID, params, options) {\n        const { vector_store_id, ...query } = params;\n        return this._client.getAPIList(path `/vector_stores/${vector_store_id}/file_batches/${batchID}/files`, (CursorPage), { query, ...options, headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]) });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */\n    async poll(vectorStoreID, batchID, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const { data: batch, response } = await this.retrieve(batchID, { vector_store_id: vectorStoreID }, {\n                ...options,\n                headers,\n            }).withResponse();\n            switch (batch.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'cancelled':\n                case 'completed':\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */\n    async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [...fileIds];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator) {\n                const fileObj = await client.files.create({ file: item, purpose: 'assistants' }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await allSettledWithThrow(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds,\n        });\n    }\n}\n//# sourceMappingURL=file-batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage, Page } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { sleep } from \"../../internal/utils.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */\n    create(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}/files`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */\n    retrieve(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Update attributes on a vector store file.\n     */\n    update(fileID, params, options) {\n        const { vector_store_id, ...body } = params;\n        return this._client.post(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of vector store files.\n     */\n    list(vectorStoreID, query = {}, options) {\n        return this._client.getAPIList(path `/vector_stores/${vectorStoreID}/files`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */\n    delete(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.delete(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */\n    async poll(vectorStoreID, fileID, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const fileResponse = await this.retrieve(fileID, {\n                vector_store_id: vectorStoreID,\n            }, { ...options, headers }).withResponse();\n            const file = fileResponse.data;\n            switch (file.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'completed':\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */\n    async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({ file: file, purpose: 'assistants' }, options);\n        return this.create(vectorStoreId, { file_id: fileInfo.id }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */\n    async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n    /**\n     * Retrieve the parsed contents of a vector store file.\n     */\n    content(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.getAPIList(path `/vector_stores/${vector_store_id}/files/${fileID}/content`, (Page), { ...options, headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]) });\n    }\n}\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as FileBatchesAPI from \"./file-batches.mjs\";\nimport { FileBatches, } from \"./file-batches.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { Files, } from \"./files.mjs\";\nimport { CursorPage, Page } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class VectorStores extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n        this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */\n    create(body, options) {\n        return this._client.post('/vector_stores', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */\n    retrieve(vectorStoreID, options) {\n        return this._client.get(path `/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */\n    update(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of vector stores.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/vector_stores', (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a vector store.\n     */\n    delete(vectorStoreID, options) {\n        return this._client.delete(path `/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Search a vector store for relevant chunks based on a query and file attributes\n     * filter.\n     */\n    search(vectorStoreID, body, options) {\n        return this._client.getAPIList(path `/vector_stores/${vectorStoreID}/search`, (Page), {\n            body,\n            method: 'post',\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\nVectorStores.Files = Files;\nVectorStores.FileBatches = FileBatches;\n//# sourceMappingURL=vector-stores.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _Webhooks_instances, _Webhooks_validateSecret, _Webhooks_getRequiredHeader;\nimport { __classPrivateFieldGet } from \"../internal/tslib.mjs\";\nimport { InvalidWebhookSignatureError } from \"../error.mjs\";\nimport { APIResource } from \"../core/resource.mjs\";\nimport { buildHeaders } from \"../internal/headers.mjs\";\nexport class Webhooks extends APIResource {\n    constructor() {\n        super(...arguments);\n        _Webhooks_instances.add(this);\n    }\n    /**\n     * Validates that the given payload was sent by OpenAI and parses the payload.\n     */\n    async unwrap(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        await this.verifySignature(payload, headers, secret, tolerance);\n        return JSON.parse(payload);\n    }\n    /**\n     * Validates whether or not the webhook payload was sent by OpenAI.\n     *\n     * An error will be raised if the webhook payload was not sent by OpenAI.\n     *\n     * @param payload - The webhook payload\n     * @param headers - The webhook headers\n     * @param secret - The webhook secret (optional, will use client secret if not provided)\n     * @param tolerance - Maximum age of the webhook in seconds (default: 300 = 5 minutes)\n     */\n    async verifySignature(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        if (typeof crypto === 'undefined' ||\n            typeof crypto.subtle.importKey !== 'function' ||\n            typeof crypto.subtle.verify !== 'function') {\n            throw new Error('Webhook signature verification is only supported when the `crypto` global is defined');\n        }\n        __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_validateSecret).call(this, secret);\n        const headersObj = buildHeaders([headers]).values;\n        const signatureHeader = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-signature');\n        const timestamp = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-timestamp');\n        const webhookId = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-id');\n        // Validate timestamp to prevent replay attacks\n        const timestampSeconds = parseInt(timestamp, 10);\n        if (isNaN(timestampSeconds)) {\n            throw new InvalidWebhookSignatureError('Invalid webhook timestamp format');\n        }\n        const nowSeconds = Math.floor(Date.now() / 1000);\n        if (nowSeconds - timestampSeconds > tolerance) {\n            throw new InvalidWebhookSignatureError('Webhook timestamp is too old');\n        }\n        if (timestampSeconds > nowSeconds + tolerance) {\n            throw new InvalidWebhookSignatureError('Webhook timestamp is too new');\n        }\n        // Extract signatures from v1,<base64> format\n        // The signature header can have multiple values, separated by spaces.\n        // Each value is in the format v1,<base64>. We should accept if any match.\n        const signatures = signatureHeader\n            .split(' ')\n            .map((part) => (part.startsWith('v1,') ? part.substring(3) : part));\n        // Decode the secret if it starts with whsec_\n        const decodedSecret = secret.startsWith('whsec_') ?\n            Buffer.from(secret.replace('whsec_', ''), 'base64')\n            : Buffer.from(secret, 'utf-8');\n        // Create the signed payload: {webhook_id}.{timestamp}.{payload}\n        const signedPayload = webhookId ? `${webhookId}.${timestamp}.${payload}` : `${timestamp}.${payload}`;\n        // Import the secret as a cryptographic key for HMAC\n        const key = await crypto.subtle.importKey('raw', decodedSecret, { name: 'HMAC', hash: 'SHA-256' }, false, ['verify']);\n        // Check if any signature matches using timing-safe WebCrypto verify\n        for (const signature of signatures) {\n            try {\n                const signatureBytes = Buffer.from(signature, 'base64');\n                const isValid = await crypto.subtle.verify('HMAC', key, signatureBytes, new TextEncoder().encode(signedPayload));\n                if (isValid) {\n                    return; // Valid signature found\n                }\n            }\n            catch {\n                // Invalid base64 or signature format, continue to next signature\n                continue;\n            }\n        }\n        throw new InvalidWebhookSignatureError('The given webhook signature does not match the expected signature');\n    }\n}\n_Webhooks_instances = new WeakSet(), _Webhooks_validateSecret = function _Webhooks_validateSecret(secret) {\n    if (typeof secret !== 'string' || secret.length === 0) {\n        throw new Error(`The webhook secret must either be set using the env var, OPENAI_WEBHOOK_SECRET, on the client class, OpenAI({ webhookSecret: '123' }), or passed to this function`);\n    }\n}, _Webhooks_getRequiredHeader = function _Webhooks_getRequiredHeader(headers, name) {\n    if (!headers) {\n        throw new Error(`Headers are required`);\n    }\n    const value = headers.get(name);\n    if (value === null || value === undefined) {\n        throw new Error(`Missing required header: ${name}`);\n    }\n    return value;\n};\n//# sourceMappingURL=webhooks.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _OpenAI_instances, _a, _OpenAI_encoder, _OpenAI_baseURLOverridden;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"./internal/tslib.mjs\";\nimport { uuid4 } from \"./internal/utils/uuid.mjs\";\nimport { validatePositiveInteger, isAbsoluteURL, safeJSON } from \"./internal/utils/values.mjs\";\nimport { sleep } from \"./internal/utils/sleep.mjs\";\nimport { castToError, isAbortError } from \"./internal/errors.mjs\";\nimport { getPlatformHeaders } from \"./internal/detect-platform.mjs\";\nimport * as Shims from \"./internal/shims.mjs\";\nimport * as Opts from \"./internal/request-options.mjs\";\nimport * as qs from \"./internal/qs/index.mjs\";\nimport { VERSION } from \"./version.mjs\";\nimport * as Errors from \"./core/error.mjs\";\nimport * as Pagination from \"./core/pagination.mjs\";\nimport * as Uploads from \"./core/uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { APIPromise } from \"./core/api-promise.mjs\";\nimport { Batches, } from \"./resources/batches.mjs\";\nimport { Completions, } from \"./resources/completions.mjs\";\nimport { Embeddings, } from \"./resources/embeddings.mjs\";\nimport { Files, } from \"./resources/files.mjs\";\nimport { Images, } from \"./resources/images.mjs\";\nimport { Models } from \"./resources/models.mjs\";\nimport { Moderations, } from \"./resources/moderations.mjs\";\nimport { Webhooks } from \"./resources/webhooks.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Beta } from \"./resources/beta/beta.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\nimport { Containers, } from \"./resources/containers/containers.mjs\";\nimport { Evals, } from \"./resources/evals/evals.mjs\";\nimport { FineTuning } from \"./resources/fine-tuning/fine-tuning.mjs\";\nimport { Graders } from \"./resources/graders/graders.mjs\";\nimport { Responses } from \"./resources/responses/responses.mjs\";\nimport { Uploads as UploadsAPIUploads, } from \"./resources/uploads/uploads.mjs\";\nimport { VectorStores, } from \"./resources/vector-stores/vector-stores.mjs\";\nimport { isRunningInBrowser } from \"./internal/detect-platform.mjs\";\nimport { buildHeaders } from \"./internal/headers.mjs\";\nimport { readEnv } from \"./internal/utils/env.mjs\";\nimport { formatRequestDetails, loggerFor, parseLogLevel, } from \"./internal/utils/log.mjs\";\nimport { isEmptyObj } from \"./internal/utils/values.mjs\";\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string | null | undefined} [opts.webhookSecret=process.env['OPENAI_WEBHOOK_SECRET'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {MergedRequestInit} [opts.fetchOptions] - Additional `RequestInit` options to be passed to `fetch` calls.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {HeadersLike} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Record<string, string | undefined>} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = readEnv('OPENAI_BASE_URL'), apiKey = readEnv('OPENAI_API_KEY'), organization = readEnv('OPENAI_ORG_ID') ?? null, project = readEnv('OPENAI_PROJECT_ID') ?? null, webhookSecret = readEnv('OPENAI_WEBHOOK_SECRET') ?? null, ...opts } = {}) {\n        _OpenAI_instances.add(this);\n        _OpenAI_encoder.set(this, void 0);\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.graders = new API.Graders(this);\n        this.vectorStores = new API.VectorStores(this);\n        this.webhooks = new API.Webhooks(this);\n        this.beta = new API.Beta(this);\n        this.batches = new API.Batches(this);\n        this.uploads = new API.Uploads(this);\n        this.responses = new API.Responses(this);\n        this.evals = new API.Evals(this);\n        this.containers = new API.Containers(this);\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            webhookSecret,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        this.baseURL = options.baseURL;\n        this.timeout = options.timeout ?? _a.DEFAULT_TIMEOUT /* 10 minutes */;\n        this.logger = options.logger ?? console;\n        const defaultLogLevel = 'warn';\n        // Set default logLevel early so that we can log a warning in parseLogLevel.\n        this.logLevel = defaultLogLevel;\n        this.logLevel =\n            parseLogLevel(options.logLevel, 'ClientOptions.logLevel', this) ??\n                parseLogLevel(readEnv('OPENAI_LOG'), \"process.env['OPENAI_LOG']\", this) ??\n                defaultLogLevel;\n        this.fetchOptions = options.fetchOptions;\n        this.maxRetries = options.maxRetries ?? 2;\n        this.fetch = options.fetch ?? Shims.getDefaultFetch();\n        __classPrivateFieldSet(this, _OpenAI_encoder, Opts.FallbackEncoder, \"f\");\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n        this.project = project;\n        this.webhookSecret = webhookSecret;\n    }\n    /**\n     * Create a new client instance re-using the same options given to the current client with optional overriding.\n     */\n    withOptions(options) {\n        return new this.constructor({\n            ...this._options,\n            baseURL: this.baseURL,\n            maxRetries: this.maxRetries,\n            timeout: this.timeout,\n            logger: this.logger,\n            logLevel: this.logLevel,\n            fetch: this.fetch,\n            fetchOptions: this.fetchOptions,\n            apiKey: this.apiKey,\n            organization: this.organization,\n            project: this.project,\n            webhookSecret: this.webhookSecret,\n            ...options,\n        });\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    validateHeaders({ values, nulls }) {\n        return;\n    }\n    authHeaders(opts) {\n        return buildHeaders([{ Authorization: `Bearer ${this.apiKey}` }]);\n    }\n    stringifyQuery(query) {\n        return qs.stringify(query, { arrayFormat: 'brackets' });\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    makeStatusError(status, error, message, headers) {\n        return Errors.APIError.generate(status, error, message, headers);\n    }\n    buildURL(path, query, defaultBaseURL) {\n        const baseURL = (!__classPrivateFieldGet(this, _OpenAI_instances, \"m\", _OpenAI_baseURLOverridden).call(this) && defaultBaseURL) || this.baseURL;\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(baseURL + (baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts) => {\n            return { method, path, ...opts };\n        }));\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this, this.makeRequest(options, remainingRetries, undefined));\n    }\n    async makeRequest(optionsInput, retriesRemaining, retryOfRequestLogID) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n        await this.prepareRequest(req, { url, options });\n        /** Not an API request ID, just for correlating local log entries. */\n        const requestLogID = 'log_' + ((Math.random() * (1 << 24)) | 0).toString(16).padStart(6, '0');\n        const retryLogStr = retryOfRequestLogID === undefined ? '' : `, retryOf: ${retryOfRequestLogID}`;\n        const startTime = Date.now();\n        loggerFor(this).debug(`[${requestLogID}] sending request`, formatRequestDetails({\n            retryOfRequestLogID,\n            method: options.method,\n            url,\n            options,\n            headers: req.headers,\n        }));\n        if (options.signal?.aborted) {\n            throw new Errors.APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        const headersTime = Date.now();\n        if (response instanceof Error) {\n            const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n            if (options.signal?.aborted) {\n                throw new Errors.APIUserAbortError();\n            }\n            // detect native connection timeout errors\n            // deno throws \"TypeError: error sending request for url (https://example/): client error (Connect): tcp connect error: Operation timed out (os error 60): Operation timed out (os error 60)\"\n            // undici throws \"TypeError: fetch failed\" with cause \"ConnectTimeoutError: Connect Timeout Error (attempted address: example:443, timeout: 1ms)\"\n            // others do not provide enough information to distinguish timeouts from other connection errors\n            const isTimeout = isAbortError(response) ||\n                /timed? ?out/i.test(String(response) + ('cause' in response ? String(response.cause) : ''));\n            if (retriesRemaining) {\n                loggerFor(this).info(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - ${retryMessage}`);\n                loggerFor(this).debug(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (${retryMessage})`, formatRequestDetails({\n                    retryOfRequestLogID,\n                    url,\n                    durationMs: headersTime - startTime,\n                    message: response.message,\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID);\n            }\n            loggerFor(this).info(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - error; no more retries left`);\n            loggerFor(this).debug(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (error; no more retries left)`, formatRequestDetails({\n                retryOfRequestLogID,\n                url,\n                durationMs: headersTime - startTime,\n                message: response.message,\n            }));\n            if (isTimeout) {\n                throw new Errors.APIConnectionTimeoutError();\n            }\n            throw new Errors.APIConnectionError({ cause: response });\n        }\n        const specialHeaders = [...response.headers.entries()]\n            .filter(([name]) => name === 'x-request-id')\n            .map(([name, value]) => ', ' + name + ': ' + JSON.stringify(value))\n            .join('');\n        const responseInfo = `[${requestLogID}${retryLogStr}${specialHeaders}] ${req.method} ${url} ${response.ok ? 'succeeded' : 'failed'} with status ${response.status} in ${headersTime - startTime}ms`;\n        if (!response.ok) {\n            const shouldRetry = this.shouldRetry(response);\n            if (retriesRemaining && shouldRetry) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                // We don't need the body of this response.\n                await Shims.CancelReadableStream(response.body);\n                loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n                loggerFor(this).debug(`[${requestLogID}] response error (${retryMessage})`, formatRequestDetails({\n                    retryOfRequestLogID,\n                    url: response.url,\n                    status: response.status,\n                    headers: response.headers,\n                    durationMs: headersTime - startTime,\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID, response.headers);\n            }\n            const retryMessage = shouldRetry ? `error; no more retries left` : `error; not retryable`;\n            loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n            const errText = await response.text().catch((err) => castToError(err).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            loggerFor(this).debug(`[${requestLogID}] response error (${retryMessage})`, formatRequestDetails({\n                retryOfRequestLogID,\n                url: response.url,\n                status: response.status,\n                headers: response.headers,\n                message: errMessage,\n                durationMs: Date.now() - startTime,\n            }));\n            const err = this.makeStatusError(response.status, errJSON, errMessage, response.headers);\n            throw err;\n        }\n        loggerFor(this).info(responseInfo);\n        loggerFor(this).debug(`[${requestLogID}] response start`, formatRequestDetails({\n            retryOfRequestLogID,\n            url: response.url,\n            status: response.status,\n            headers: response.headers,\n            durationMs: headersTime - startTime,\n        }));\n        return { response, options, controller, requestLogID, retryOfRequestLogID, startTime };\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null, undefined);\n        return new Pagination.PagePromise(this, request, Page);\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, method, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const isReadableBody = (globalThis.ReadableStream && options.body instanceof globalThis.ReadableStream) ||\n            (typeof options.body === 'object' && options.body !== null && Symbol.asyncIterator in options.body);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...(isReadableBody ? { duplex: 'half' } : {}),\n            method: 'GET',\n            ...options,\n        };\n        if (method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = method.toUpperCase();\n        }\n        try {\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            return await this.fetch.call(undefined, url, fetchOptions);\n        }\n        finally {\n            clearTimeout(timeout);\n        }\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, requestLogID, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.get('retry-after-ms');\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.get('retry-after');\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1, requestLogID);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    buildRequest(inputOptions, { retryCount = 0 } = {}) {\n        const options = { ...inputOptions };\n        const { method, path, query, defaultBaseURL } = options;\n        const url = this.buildURL(path, query, defaultBaseURL);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const { bodyHeaders, body } = this.buildBody({ options });\n        const reqHeaders = this.buildHeaders({ options: inputOptions, method, bodyHeaders, retryCount });\n        const req = {\n            method,\n            headers: reqHeaders,\n            ...(options.signal && { signal: options.signal }),\n            ...(globalThis.ReadableStream &&\n                body instanceof globalThis.ReadableStream && { duplex: 'half' }),\n            ...(body && { body }),\n            ...(this.fetchOptions ?? {}),\n            ...(options.fetchOptions ?? {}),\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    buildHeaders({ options, method, bodyHeaders, retryCount, }) {\n        let idempotencyHeaders = {};\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            idempotencyHeaders[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const headers = buildHeaders([\n            idempotencyHeaders,\n            {\n                Accept: 'application/json',\n                'User-Agent': this.getUserAgent(),\n                'X-Stainless-Retry-Count': String(retryCount),\n                ...(options.timeout ? { 'X-Stainless-Timeout': String(Math.trunc(options.timeout / 1000)) } : {}),\n                ...getPlatformHeaders(),\n                'OpenAI-Organization': this.organization,\n                'OpenAI-Project': this.project,\n            },\n            this.authHeaders(options),\n            this._options.defaultHeaders,\n            bodyHeaders,\n            options.headers,\n        ]);\n        this.validateHeaders(headers);\n        return headers.values;\n    }\n    buildBody({ options: { body, headers: rawHeaders } }) {\n        if (!body) {\n            return { bodyHeaders: undefined, body: undefined };\n        }\n        const headers = buildHeaders([rawHeaders]);\n        if (\n        // Pass raw type verbatim\n        ArrayBuffer.isView(body) ||\n            body instanceof ArrayBuffer ||\n            body instanceof DataView ||\n            (typeof body === 'string' &&\n                // Preserve legacy string encoding behavior for now\n                headers.values.has('content-type')) ||\n            // `Blob` is superset of `File`\n            body instanceof Blob ||\n            // `FormData` -> `multipart/form-data`\n            body instanceof FormData ||\n            // `URLSearchParams` -> `application/x-www-form-urlencoded`\n            body instanceof URLSearchParams ||\n            // Send chunked stream (each chunk has own `length`)\n            (globalThis.ReadableStream && body instanceof globalThis.ReadableStream)) {\n            return { bodyHeaders: undefined, body: body };\n        }\n        else if (typeof body === 'object' &&\n            (Symbol.asyncIterator in body ||\n                (Symbol.iterator in body && 'next' in body && typeof body.next === 'function'))) {\n            return { bodyHeaders: undefined, body: Shims.ReadableStreamFrom(body) };\n        }\n        else {\n            return __classPrivateFieldGet(this, _OpenAI_encoder, \"f\").call(this, { body, headers });\n        }\n    }\n}\n_a = OpenAI, _OpenAI_encoder = new WeakMap(), _OpenAI_instances = new WeakSet(), _OpenAI_baseURLOverridden = function _OpenAI_baseURLOverridden() {\n    return this.baseURL !== 'https://api.openai.com/v1';\n};\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nOpenAI.InvalidWebhookSignatureError = Errors.InvalidWebhookSignatureError;\nOpenAI.toFile = Uploads.toFile;\nOpenAI.Completions = Completions;\nOpenAI.Chat = Chat;\nOpenAI.Embeddings = Embeddings;\nOpenAI.Files = Files;\nOpenAI.Images = Images;\nOpenAI.Audio = Audio;\nOpenAI.Moderations = Moderations;\nOpenAI.Models = Models;\nOpenAI.FineTuning = FineTuning;\nOpenAI.Graders = Graders;\nOpenAI.VectorStores = VectorStores;\nOpenAI.Webhooks = Webhooks;\nOpenAI.Beta = Beta;\nOpenAI.Batches = Batches;\nOpenAI.Uploads = UploadsAPIUploads;\nOpenAI.Responses = Responses;\nOpenAI.Evals = Evals;\nOpenAI.Containers = Containers;\n//# sourceMappingURL=client.mjs.map","export /*@__NO_SIDE_EFFECTS__*/ function $constructor(name, initializer, params) {\n    function init(inst, def) {\n        var _a;\n        Object.defineProperty(inst, \"_zod\", {\n            value: inst._zod ?? {},\n            enumerable: false,\n        });\n        (_a = inst._zod).traits ?? (_a.traits = new Set());\n        inst._zod.traits.add(name);\n        initializer(inst, def);\n        // support prototype modifications\n        for (const k in _.prototype) {\n            if (!(k in inst))\n                Object.defineProperty(inst, k, { value: _.prototype[k].bind(inst) });\n        }\n        inst._zod.constr = _;\n        inst._zod.def = def;\n    }\n    // doesn't work if Parent has a constructor with arguments\n    const Parent = params?.Parent ?? Object;\n    class Definition extends Parent {\n    }\n    Object.defineProperty(Definition, \"name\", { value: name });\n    function _(def) {\n        var _a;\n        const inst = params?.Parent ? new Definition() : this;\n        init(inst, def);\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\n        for (const fn of inst._zod.deferred) {\n            fn();\n        }\n        return inst;\n    }\n    Object.defineProperty(_, \"init\", { value: init });\n    Object.defineProperty(_, Symbol.hasInstance, {\n        value: (inst) => {\n            if (params?.Parent && inst instanceof params.Parent)\n                return true;\n            return inst?._zod?.traits?.has(name);\n        },\n    });\n    Object.defineProperty(_, \"name\", { value: name });\n    return _;\n}\n//////////////////////////////   UTILITIES   ///////////////////////////////////////\nexport const $brand = Symbol(\"zod_brand\");\nexport class $ZodAsyncError extends Error {\n    constructor() {\n        super(`Encountered Promise during synchronous parse. Use .parseAsync() instead.`);\n    }\n}\nexport const globalConfig = {};\nexport function config(newConfig) {\n    if (newConfig)\n        Object.assign(globalConfig, newConfig);\n    return globalConfig;\n}\n","// functions\nexport function assertEqual(val) {\n    return val;\n}\nexport function assertNotEqual(val) {\n    return val;\n}\nexport function assertIs(_arg) { }\nexport function assertNever(_x) {\n    throw new Error();\n}\nexport function assert(_) { }\nexport function getEnumValues(entries) {\n    const numericValues = Object.values(entries).filter((v) => typeof v === \"number\");\n    const values = Object.entries(entries)\n        .filter(([k, _]) => numericValues.indexOf(+k) === -1)\n        .map(([_, v]) => v);\n    return values;\n}\nexport function joinValues(array, separator = \"|\") {\n    return array.map((val) => stringifyPrimitive(val)).join(separator);\n}\nexport function jsonStringifyReplacer(_, value) {\n    if (typeof value === \"bigint\")\n        return value.toString();\n    return value;\n}\nexport function cached(getter) {\n    const set = false;\n    return {\n        get value() {\n            if (!set) {\n                const value = getter();\n                Object.defineProperty(this, \"value\", { value });\n                return value;\n            }\n            throw new Error(\"cached value already set\");\n        },\n    };\n}\nexport function nullish(input) {\n    return input === null || input === undefined;\n}\nexport function cleanRegex(source) {\n    const start = source.startsWith(\"^\") ? 1 : 0;\n    const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\n    return source.slice(start, end);\n}\nexport function floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport function defineLazy(object, key, getter) {\n    const set = false;\n    Object.defineProperty(object, key, {\n        get() {\n            if (!set) {\n                const value = getter();\n                object[key] = value;\n                return value;\n            }\n            throw new Error(\"cached value already set\");\n        },\n        set(v) {\n            Object.defineProperty(object, key, {\n                value: v,\n                // configurable: true,\n            });\n            // object[key] = v;\n        },\n        configurable: true,\n    });\n}\nexport function assignProp(target, prop, value) {\n    Object.defineProperty(target, prop, {\n        value,\n        writable: true,\n        enumerable: true,\n        configurable: true,\n    });\n}\nexport function getElementAtPath(obj, path) {\n    if (!path)\n        return obj;\n    return path.reduce((acc, key) => acc?.[key], obj);\n}\nexport function promiseAllObject(promisesObj) {\n    const keys = Object.keys(promisesObj);\n    const promises = keys.map((key) => promisesObj[key]);\n    return Promise.all(promises).then((results) => {\n        const resolvedObj = {};\n        for (let i = 0; i < keys.length; i++) {\n            resolvedObj[keys[i]] = results[i];\n        }\n        return resolvedObj;\n    });\n}\nexport function randomString(length = 10) {\n    const chars = \"abcdefghijklmnopqrstuvwxyz\";\n    let str = \"\";\n    for (let i = 0; i < length; i++) {\n        str += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return str;\n}\nexport function esc(str) {\n    return JSON.stringify(str);\n}\nexport const captureStackTrace = Error.captureStackTrace\n    ? Error.captureStackTrace\n    : (..._args) => { };\nexport function isObject(data) {\n    return typeof data === \"object\" && data !== null && !Array.isArray(data);\n}\nexport const allowsEval = cached(() => {\n    if (typeof navigator !== \"undefined\" && navigator?.userAgent?.includes(\"Cloudflare\")) {\n        return false;\n    }\n    try {\n        const F = Function;\n        new F(\"\");\n        return true;\n    }\n    catch (_) {\n        return false;\n    }\n});\nfunction _isObject(o) {\n    return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nexport function isPlainObject(o) {\n    if (isObject(o) === false)\n        return false;\n    // modified constructor\n    const ctor = o.constructor;\n    if (ctor === undefined)\n        return true;\n    // modified prototype\n    const prot = ctor.prototype;\n    if (isObject(prot) === false)\n        return false;\n    // ctor doesn't have static `isPrototypeOf`\n    if (Object.prototype.hasOwnProperty.call(prot, \"isPrototypeOf\") === false) {\n        return false;\n    }\n    return true;\n}\nexport function numKeys(data) {\n    let keyCount = 0;\n    for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            keyCount++;\n        }\n    }\n    return keyCount;\n}\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return \"undefined\";\n        case \"string\":\n            return \"string\";\n        case \"number\":\n            return Number.isNaN(data) ? \"nan\" : \"number\";\n        case \"boolean\":\n            return \"boolean\";\n        case \"function\":\n            return \"function\";\n        case \"bigint\":\n            return \"bigint\";\n        case \"symbol\":\n            return \"symbol\";\n        case \"object\":\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return \"promise\";\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return \"map\";\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return \"set\";\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return \"date\";\n            }\n            if (typeof File !== \"undefined\" && data instanceof File) {\n                return \"file\";\n            }\n            return \"object\";\n        default:\n            throw new Error(`Unknown data type: ${t}`);\n    }\n};\nexport const propertyKeyTypes = new Set([\"string\", \"number\", \"symbol\"]);\nexport const primitiveTypes = new Set([\"string\", \"number\", \"bigint\", \"boolean\", \"symbol\", \"undefined\"]);\nexport function escapeRegex(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n// zod-specific utils\nexport function clone(inst, def, params) {\n    const cl = new inst._zod.constr(def ?? inst._zod.def);\n    if (!def || params?.parent)\n        cl._zod.parent = inst;\n    return cl;\n}\nexport function normalizeParams(_params) {\n    const params = _params;\n    if (!params)\n        return {};\n    if (typeof params === \"string\")\n        return { error: () => params };\n    if (params?.message !== undefined) {\n        if (params?.error !== undefined)\n            throw new Error(\"Cannot specify both `message` and `error` params\");\n        params.error = params.message;\n    }\n    delete params.message;\n    if (typeof params.error === \"string\")\n        return { ...params, error: () => params.error };\n    return params;\n}\nexport function createTransparentProxy(getter) {\n    let target;\n    return new Proxy({}, {\n        get(_, prop, receiver) {\n            target ?? (target = getter());\n            return Reflect.get(target, prop, receiver);\n        },\n        set(_, prop, value, receiver) {\n            target ?? (target = getter());\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has(_, prop) {\n            target ?? (target = getter());\n            return Reflect.has(target, prop);\n        },\n        deleteProperty(_, prop) {\n            target ?? (target = getter());\n            return Reflect.deleteProperty(target, prop);\n        },\n        ownKeys(_) {\n            target ?? (target = getter());\n            return Reflect.ownKeys(target);\n        },\n        getOwnPropertyDescriptor(_, prop) {\n            target ?? (target = getter());\n            return Reflect.getOwnPropertyDescriptor(target, prop);\n        },\n        defineProperty(_, prop, descriptor) {\n            target ?? (target = getter());\n            return Reflect.defineProperty(target, prop, descriptor);\n        },\n    });\n}\nexport function stringifyPrimitive(value) {\n    if (typeof value === \"bigint\")\n        return value.toString() + \"n\";\n    if (typeof value === \"string\")\n        return `\"${value}\"`;\n    return `${value}`;\n}\nexport function optionalKeys(shape) {\n    return Object.keys(shape).filter((k) => {\n        return shape[k]._zod.optin === \"optional\" && shape[k]._zod.optout === \"optional\";\n    });\n}\nexport const NUMBER_FORMAT_RANGES = {\n    safeint: [Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER],\n    int32: [-2147483648, 2147483647],\n    uint32: [0, 4294967295],\n    float32: [-3.4028234663852886e38, 3.4028234663852886e38],\n    float64: [-Number.MAX_VALUE, Number.MAX_VALUE],\n};\nexport const BIGINT_FORMAT_RANGES = {\n    int64: [/* @__PURE__*/ BigInt(\"-9223372036854775808\"), /* @__PURE__*/ BigInt(\"9223372036854775807\")],\n    uint64: [/* @__PURE__*/ BigInt(0), /* @__PURE__*/ BigInt(\"18446744073709551615\")],\n};\nexport function pick(schema, mask) {\n    const newShape = {};\n    const currDef = schema._zod.def; //.shape;\n    for (const key in mask) {\n        if (!(key in currDef.shape)) {\n            throw new Error(`Unrecognized key: \"${key}\"`);\n        }\n        if (!mask[key])\n            continue;\n        // pick key\n        newShape[key] = currDef.shape[key];\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape: newShape,\n        checks: [],\n    });\n}\nexport function omit(schema, mask) {\n    const newShape = { ...schema._zod.def.shape };\n    const currDef = schema._zod.def; //.shape;\n    for (const key in mask) {\n        if (!(key in currDef.shape)) {\n            throw new Error(`Unrecognized key: \"${key}\"`);\n        }\n        if (!mask[key])\n            continue;\n        delete newShape[key];\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape: newShape,\n        checks: [],\n    });\n}\nexport function extend(schema, shape) {\n    const def = {\n        ...schema._zod.def,\n        get shape() {\n            const _shape = { ...schema._zod.def.shape, ...shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        checks: [], // delete existing checks\n    };\n    return clone(schema, def);\n}\nexport function merge(a, b) {\n    return clone(a, {\n        ...a._zod.def,\n        get shape() {\n            const _shape = { ...a._zod.def.shape, ...b._zod.def.shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        catchall: b._zod.def.catchall,\n        checks: [], // delete existing checks\n    });\n}\nexport function partial(Class, schema, mask) {\n    const oldShape = schema._zod.def.shape;\n    const shape = { ...oldShape };\n    if (mask) {\n        for (const key in mask) {\n            if (!(key in oldShape)) {\n                throw new Error(`Unrecognized key: \"${key}\"`);\n            }\n            if (!mask[key])\n                continue;\n            shape[key] = Class\n                ? new Class({\n                    type: \"optional\",\n                    innerType: oldShape[key],\n                })\n                : oldShape[key];\n        }\n    }\n    else {\n        for (const key in oldShape) {\n            shape[key] = Class\n                ? new Class({\n                    type: \"optional\",\n                    innerType: oldShape[key],\n                })\n                : oldShape[key];\n        }\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape,\n        checks: [],\n    });\n}\nexport function required(Class, schema, mask) {\n    const oldShape = schema._zod.def.shape;\n    const shape = { ...oldShape };\n    if (mask) {\n        for (const key in mask) {\n            if (!(key in shape)) {\n                throw new Error(`Unrecognized key: \"${key}\"`);\n            }\n            if (!mask[key])\n                continue;\n            // overwrite with non-optional\n            shape[key] = new Class({\n                type: \"nonoptional\",\n                innerType: oldShape[key],\n            });\n        }\n    }\n    else {\n        for (const key in oldShape) {\n            // overwrite with non-optional\n            shape[key] = new Class({\n                type: \"nonoptional\",\n                innerType: oldShape[key],\n            });\n        }\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape,\n        // optional: [],\n        checks: [],\n    });\n}\nexport function aborted(x, startIndex = 0) {\n    for (let i = startIndex; i < x.issues.length; i++) {\n        if (x.issues[i].continue !== true)\n            return true;\n    }\n    return false;\n}\nexport function prefixIssues(path, issues) {\n    return issues.map((iss) => {\n        var _a;\n        (_a = iss).path ?? (_a.path = []);\n        iss.path.unshift(path);\n        return iss;\n    });\n}\nexport function unwrapMessage(message) {\n    return typeof message === \"string\" ? message : message?.message;\n}\nexport function finalizeIssue(iss, ctx, config) {\n    const full = { ...iss, path: iss.path ?? [] };\n    // for backwards compatibility\n    if (!iss.message) {\n        const message = unwrapMessage(iss.inst?._zod.def?.error?.(iss)) ??\n            unwrapMessage(ctx?.error?.(iss)) ??\n            unwrapMessage(config.customError?.(iss)) ??\n            unwrapMessage(config.localeError?.(iss)) ??\n            \"Invalid input\";\n        full.message = message;\n    }\n    // delete (full as any).def;\n    delete full.inst;\n    delete full.continue;\n    if (!ctx?.reportInput) {\n        delete full.input;\n    }\n    return full;\n}\nexport function getSizableOrigin(input) {\n    if (input instanceof Set)\n        return \"set\";\n    if (input instanceof Map)\n        return \"map\";\n    if (input instanceof File)\n        return \"file\";\n    return \"unknown\";\n}\nexport function getLengthableOrigin(input) {\n    if (Array.isArray(input))\n        return \"array\";\n    if (typeof input === \"string\")\n        return \"string\";\n    return \"unknown\";\n}\nexport function issue(...args) {\n    const [iss, input, inst] = args;\n    if (typeof iss === \"string\") {\n        return {\n            message: iss,\n            code: \"custom\",\n            input,\n            inst,\n        };\n    }\n    return { ...iss };\n}\nexport function cleanEnum(obj) {\n    return Object.entries(obj)\n        .filter(([k, _]) => {\n        // return true if NaN, meaning it's not a number, thus a string key\n        return Number.isNaN(Number.parseInt(k, 10));\n    })\n        .map((el) => el[1]);\n}\n// instanceof\nexport class Class {\n    constructor(..._args) { }\n}\n","import { $constructor } from \"./core.js\";\nimport * as util from \"./util.js\";\nconst initializer = (inst, def) => {\n    inst.name = \"$ZodError\";\n    Object.defineProperty(inst, \"_zod\", {\n        value: inst._zod,\n        enumerable: false,\n    });\n    Object.defineProperty(inst, \"issues\", {\n        value: def,\n        enumerable: false,\n    });\n    Object.defineProperty(inst, \"message\", {\n        get() {\n            return JSON.stringify(def, util.jsonStringifyReplacer, 2);\n        },\n        enumerable: true,\n        // configurable: false,\n    });\n};\nexport const $ZodError = $constructor(\"$ZodError\", initializer);\nexport const $ZodRealError = $constructor(\"$ZodError\", initializer, { Parent: Error });\nexport function flattenError(error, mapper = (issue) => issue.message) {\n    const fieldErrors = {};\n    const formErrors = [];\n    for (const sub of error.issues) {\n        if (sub.path.length > 0) {\n            fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n            fieldErrors[sub.path[0]].push(mapper(sub));\n        }\n        else {\n            formErrors.push(mapper(sub));\n        }\n    }\n    return { formErrors, fieldErrors };\n}\nexport function formatError(error, _mapper) {\n    const mapper = _mapper ||\n        function (issue) {\n            return issue.message;\n        };\n    const fieldErrors = { _errors: [] };\n    const processError = (error) => {\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                issue.errors.map((issues) => processError({ issues }));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.path.length === 0) {\n                fieldErrors._errors.push(mapper(issue));\n            }\n            else {\n                let curr = fieldErrors;\n                let i = 0;\n                while (i < issue.path.length) {\n                    const el = issue.path[i];\n                    const terminal = i === issue.path.length - 1;\n                    if (!terminal) {\n                        curr[el] = curr[el] || { _errors: [] };\n                    }\n                    else {\n                        curr[el] = curr[el] || { _errors: [] };\n                        curr[el]._errors.push(mapper(issue));\n                    }\n                    curr = curr[el];\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return fieldErrors;\n}\nexport function treeifyError(error, _mapper) {\n    const mapper = _mapper ||\n        function (issue) {\n            return issue.message;\n        };\n    const result = { errors: [] };\n    const processError = (error, path = []) => {\n        var _a, _b;\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                // regular union error\n                issue.errors.map((issues) => processError({ issues }, issue.path));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else {\n                const fullpath = [...path, ...issue.path];\n                if (fullpath.length === 0) {\n                    result.errors.push(mapper(issue));\n                    continue;\n                }\n                let curr = result;\n                let i = 0;\n                while (i < fullpath.length) {\n                    const el = fullpath[i];\n                    const terminal = i === fullpath.length - 1;\n                    if (typeof el === \"string\") {\n                        curr.properties ?? (curr.properties = {});\n                        (_a = curr.properties)[el] ?? (_a[el] = { errors: [] });\n                        curr = curr.properties[el];\n                    }\n                    else {\n                        curr.items ?? (curr.items = []);\n                        (_b = curr.items)[el] ?? (_b[el] = { errors: [] });\n                        curr = curr.items[el];\n                    }\n                    if (terminal) {\n                        curr.errors.push(mapper(issue));\n                    }\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return result;\n}\n/** Format a ZodError as a human-readable string in the following form.\n *\n * From\n *\n * ```ts\n * ZodError {\n *   issues: [\n *     {\n *       expected: 'string',\n *       code: 'invalid_type',\n *       path: [ 'username' ],\n *       message: 'Invalid input: expected string'\n *     },\n *     {\n *       expected: 'number',\n *       code: 'invalid_type',\n *       path: [ 'favoriteNumbers', 1 ],\n *       message: 'Invalid input: expected number'\n *     }\n *   ];\n * }\n * ```\n *\n * to\n *\n * ```\n * username\n *   ✖ Expected number, received string at \"username\n * favoriteNumbers[0]\n *   ✖ Invalid input: expected number\n * ```\n */\nexport function toDotPath(path) {\n    const segs = [];\n    for (const seg of path) {\n        if (typeof seg === \"number\")\n            segs.push(`[${seg}]`);\n        else if (typeof seg === \"symbol\")\n            segs.push(`[${JSON.stringify(String(seg))}]`);\n        else if (/[^\\w$]/.test(seg))\n            segs.push(`[${JSON.stringify(seg)}]`);\n        else {\n            if (segs.length)\n                segs.push(\".\");\n            segs.push(seg);\n        }\n    }\n    return segs.join(\"\");\n}\nexport function prettifyError(error) {\n    const lines = [];\n    // sort by path length\n    const issues = [...error.issues].sort((a, b) => a.path.length - b.path.length);\n    // Process each issue\n    for (const issue of issues) {\n        lines.push(`✖ ${issue.message}`);\n        if (issue.path?.length)\n            lines.push(`  → at ${toDotPath(issue.path)}`);\n    }\n    // Convert Map to formatted string\n    return lines.join(\"\\n\");\n}\n","import * as core from \"./core.js\";\nimport * as errors from \"./errors.js\";\nimport * as util from \"./util.js\";\nexport const _parse = (_Err) => (schema, value, _ctx, _params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: false }) : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    if (result.issues.length) {\n        const e = new (_params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        util.captureStackTrace(e, _params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parse = /* @__PURE__*/ _parse(errors.$ZodRealError);\nexport const _parseAsync = (_Err) => async (schema, value, _ctx, params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    if (result.issues.length) {\n        const e = new (params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        util.captureStackTrace(e, params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parseAsync = /* @__PURE__*/ _parseAsync(errors.$ZodRealError);\nexport const _safeParse = (_Err) => (schema, value, _ctx) => {\n    const ctx = _ctx ? { ..._ctx, async: false } : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    return result.issues.length\n        ? {\n            success: false,\n            error: new (_Err ?? errors.$ZodError)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParse = /* @__PURE__*/ _safeParse(errors.$ZodRealError);\nexport const _safeParseAsync = (_Err) => async (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    return result.issues.length\n        ? {\n            success: false,\n            error: new _Err(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParseAsync = /* @__PURE__*/ _safeParseAsync(errors.$ZodRealError);\n","export const $output = Symbol(\"ZodOutput\");\nexport const $input = Symbol(\"ZodInput\");\nexport class $ZodRegistry {\n    constructor() {\n        this._map = new WeakMap();\n        this._idmap = new Map();\n    }\n    add(schema, ..._meta) {\n        const meta = _meta[0];\n        this._map.set(schema, meta);\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\n            if (this._idmap.has(meta.id)) {\n                throw new Error(`ID ${meta.id} already exists in the registry`);\n            }\n            this._idmap.set(meta.id, schema);\n        }\n        return this;\n    }\n    remove(schema) {\n        this._map.delete(schema);\n        return this;\n    }\n    get(schema) {\n        // return this._map.get(schema) as any;\n        // inherit metadata\n        const p = schema._zod.parent;\n        if (p) {\n            const pm = { ...(this.get(p) ?? {}) };\n            delete pm.id; // do not inherit id\n            return { ...pm, ...this._map.get(schema) };\n        }\n        return this._map.get(schema);\n    }\n    has(schema) {\n        return this._map.has(schema);\n    }\n}\n// registries\nexport function registry() {\n    return new $ZodRegistry();\n}\nexport const globalRegistry = /*@__PURE__*/ registry();\n","import { $ZodRegistry, globalRegistry } from \"./registries.js\";\nimport { getEnumValues } from \"./util.js\";\nexport class JSONSchemaGenerator {\n    constructor(params) {\n        this.counter = 0;\n        this.metadataRegistry = params?.metadata ?? globalRegistry;\n        this.target = params?.target ?? \"draft-2020-12\";\n        this.unrepresentable = params?.unrepresentable ?? \"throw\";\n        this.override = params?.override ?? (() => { });\n        this.io = params?.io ?? \"output\";\n        this.seen = new Map();\n    }\n    process(schema, _params = { path: [], schemaPath: [] }) {\n        var _a;\n        const def = schema._zod.def;\n        const formatMap = {\n            guid: \"uuid\",\n            url: \"uri\",\n            datetime: \"date-time\",\n            json_string: \"json-string\",\n            regex: \"\", // do not set\n        };\n        // check for schema in seens\n        const seen = this.seen.get(schema);\n        if (seen) {\n            seen.count++;\n            // check if cycle\n            const isCycle = _params.schemaPath.includes(schema);\n            if (isCycle) {\n                seen.cycle = _params.path;\n            }\n            return seen.schema;\n        }\n        // initialize\n        const result = { schema: {}, count: 1, cycle: undefined };\n        this.seen.set(schema, result);\n        // custom method overrides default behavior\n        const overrideSchema = schema._zod.toJSONSchema?.();\n        if (overrideSchema) {\n            result.schema = overrideSchema;\n        }\n        else {\n            const params = {\n                ..._params,\n                schemaPath: [..._params.schemaPath, schema],\n                path: _params.path,\n            };\n            const parent = schema._zod.parent;\n            if (parent) {\n                // schema was cloned from another schema\n                result.ref = parent;\n                this.process(parent, params);\n                this.seen.get(parent).isParent = true;\n            }\n            else {\n                const _json = result.schema;\n                switch (def.type) {\n                    case \"string\": {\n                        const json = _json;\n                        json.type = \"string\";\n                        const { minimum, maximum, format, patterns, contentEncoding } = schema._zod\n                            .bag;\n                        if (typeof minimum === \"number\")\n                            json.minLength = minimum;\n                        if (typeof maximum === \"number\")\n                            json.maxLength = maximum;\n                        // custom pattern overrides format\n                        if (format) {\n                            json.format = formatMap[format] ?? format;\n                            if (json.format === \"\")\n                                delete json.format; // empty format is not valid\n                        }\n                        if (contentEncoding)\n                            json.contentEncoding = contentEncoding;\n                        if (patterns && patterns.size > 0) {\n                            const regexes = [...patterns];\n                            if (regexes.length === 1)\n                                json.pattern = regexes[0].source;\n                            else if (regexes.length > 1) {\n                                result.schema.allOf = [\n                                    ...regexes.map((regex) => ({\n                                        ...(this.target === \"draft-7\" ? { type: \"string\" } : {}),\n                                        pattern: regex.source,\n                                    })),\n                                ];\n                            }\n                        }\n                        break;\n                    }\n                    case \"number\": {\n                        const json = _json;\n                        const { minimum, maximum, format, multipleOf, exclusiveMaximum, exclusiveMinimum } = schema._zod.bag;\n                        if (typeof format === \"string\" && format.includes(\"int\"))\n                            json.type = \"integer\";\n                        else\n                            json.type = \"number\";\n                        if (typeof exclusiveMinimum === \"number\")\n                            json.exclusiveMinimum = exclusiveMinimum;\n                        if (typeof minimum === \"number\") {\n                            json.minimum = minimum;\n                            if (typeof exclusiveMinimum === \"number\") {\n                                if (exclusiveMinimum >= minimum)\n                                    delete json.minimum;\n                                else\n                                    delete json.exclusiveMinimum;\n                            }\n                        }\n                        if (typeof exclusiveMaximum === \"number\")\n                            json.exclusiveMaximum = exclusiveMaximum;\n                        if (typeof maximum === \"number\") {\n                            json.maximum = maximum;\n                            if (typeof exclusiveMaximum === \"number\") {\n                                if (exclusiveMaximum <= maximum)\n                                    delete json.maximum;\n                                else\n                                    delete json.exclusiveMaximum;\n                            }\n                        }\n                        if (typeof multipleOf === \"number\")\n                            json.multipleOf = multipleOf;\n                        break;\n                    }\n                    case \"boolean\": {\n                        const json = _json;\n                        json.type = \"boolean\";\n                        break;\n                    }\n                    case \"bigint\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"BigInt cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"symbol\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Symbols cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"undefined\": {\n                        const json = _json;\n                        json.type = \"null\";\n                        break;\n                    }\n                    case \"null\": {\n                        _json.type = \"null\";\n                        break;\n                    }\n                    case \"any\": {\n                        break;\n                    }\n                    case \"unknown\": {\n                        break;\n                    }\n                    case \"never\": {\n                        _json.not = {};\n                        break;\n                    }\n                    case \"void\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Void cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"date\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Date cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"array\": {\n                        const json = _json;\n                        const { minimum, maximum } = schema._zod.bag;\n                        if (typeof minimum === \"number\")\n                            json.minItems = minimum;\n                        if (typeof maximum === \"number\")\n                            json.maxItems = maximum;\n                        json.type = \"array\";\n                        json.items = this.process(def.element, { ...params, path: [...params.path, \"items\"] });\n                        break;\n                    }\n                    case \"object\": {\n                        const json = _json;\n                        json.type = \"object\";\n                        json.properties = {};\n                        const shape = def.shape; // params.shapeCache.get(schema)!;\n                        for (const key in shape) {\n                            json.properties[key] = this.process(shape[key], {\n                                ...params,\n                                path: [...params.path, \"properties\", key],\n                            });\n                        }\n                        // required keys\n                        const allKeys = new Set(Object.keys(shape));\n                        // const optionalKeys = new Set(def.optional);\n                        const requiredKeys = new Set([...allKeys].filter((key) => {\n                            const v = def.shape[key]._zod;\n                            if (this.io === \"input\") {\n                                return v.optin === undefined;\n                            }\n                            else {\n                                return v.optout === undefined;\n                            }\n                        }));\n                        if (requiredKeys.size > 0) {\n                            json.required = Array.from(requiredKeys);\n                        }\n                        // catchall\n                        if (def.catchall?._zod.def.type === \"never\") {\n                            // strict\n                            json.additionalProperties = false;\n                        }\n                        else if (!def.catchall) {\n                            // regular\n                            if (this.io === \"output\")\n                                json.additionalProperties = false;\n                        }\n                        else if (def.catchall) {\n                            json.additionalProperties = this.process(def.catchall, {\n                                ...params,\n                                path: [...params.path, \"additionalProperties\"],\n                            });\n                        }\n                        break;\n                    }\n                    case \"union\": {\n                        const json = _json;\n                        json.anyOf = def.options.map((x, i) => this.process(x, {\n                            ...params,\n                            path: [...params.path, \"anyOf\", i],\n                        }));\n                        break;\n                    }\n                    case \"intersection\": {\n                        const json = _json;\n                        const a = this.process(def.left, {\n                            ...params,\n                            path: [...params.path, \"allOf\", 0],\n                        });\n                        const b = this.process(def.right, {\n                            ...params,\n                            path: [...params.path, \"allOf\", 1],\n                        });\n                        const isSimpleIntersection = (val) => \"allOf\" in val && Object.keys(val).length === 1;\n                        const allOf = [\n                            ...(isSimpleIntersection(a) ? a.allOf : [a]),\n                            ...(isSimpleIntersection(b) ? b.allOf : [b]),\n                        ];\n                        json.allOf = allOf;\n                        break;\n                    }\n                    case \"tuple\": {\n                        const json = _json;\n                        json.type = \"array\";\n                        const prefixItems = def.items.map((x, i) => this.process(x, { ...params, path: [...params.path, \"prefixItems\", i] }));\n                        if (this.target === \"draft-2020-12\") {\n                            json.prefixItems = prefixItems;\n                        }\n                        else {\n                            json.items = prefixItems;\n                        }\n                        if (def.rest) {\n                            const rest = this.process(def.rest, {\n                                ...params,\n                                path: [...params.path, \"items\"],\n                            });\n                            if (this.target === \"draft-2020-12\") {\n                                json.items = rest;\n                            }\n                            else {\n                                json.additionalItems = rest;\n                            }\n                        }\n                        // additionalItems\n                        if (def.rest) {\n                            json.items = this.process(def.rest, {\n                                ...params,\n                                path: [...params.path, \"items\"],\n                            });\n                        }\n                        // length\n                        const { minimum, maximum } = schema._zod.bag;\n                        if (typeof minimum === \"number\")\n                            json.minItems = minimum;\n                        if (typeof maximum === \"number\")\n                            json.maxItems = maximum;\n                        break;\n                    }\n                    case \"record\": {\n                        const json = _json;\n                        json.type = \"object\";\n                        json.propertyNames = this.process(def.keyType, { ...params, path: [...params.path, \"propertyNames\"] });\n                        json.additionalProperties = this.process(def.valueType, {\n                            ...params,\n                            path: [...params.path, \"additionalProperties\"],\n                        });\n                        break;\n                    }\n                    case \"map\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Map cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"set\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Set cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"enum\": {\n                        const json = _json;\n                        const values = getEnumValues(def.entries);\n                        // Number enums can have both string and number values\n                        if (values.every((v) => typeof v === \"number\"))\n                            json.type = \"number\";\n                        if (values.every((v) => typeof v === \"string\"))\n                            json.type = \"string\";\n                        json.enum = values;\n                        break;\n                    }\n                    case \"literal\": {\n                        const json = _json;\n                        const vals = [];\n                        for (const val of def.values) {\n                            if (val === undefined) {\n                                if (this.unrepresentable === \"throw\") {\n                                    throw new Error(\"Literal `undefined` cannot be represented in JSON Schema\");\n                                }\n                                else {\n                                    // do not add to vals\n                                }\n                            }\n                            else if (typeof val === \"bigint\") {\n                                if (this.unrepresentable === \"throw\") {\n                                    throw new Error(\"BigInt literals cannot be represented in JSON Schema\");\n                                }\n                                else {\n                                    vals.push(Number(val));\n                                }\n                            }\n                            else {\n                                vals.push(val);\n                            }\n                        }\n                        if (vals.length === 0) {\n                            // do nothing (an undefined literal was stripped)\n                        }\n                        else if (vals.length === 1) {\n                            const val = vals[0];\n                            json.type = val === null ? \"null\" : typeof val;\n                            json.const = val;\n                        }\n                        else {\n                            if (vals.every((v) => typeof v === \"number\"))\n                                json.type = \"number\";\n                            if (vals.every((v) => typeof v === \"string\"))\n                                json.type = \"string\";\n                            if (vals.every((v) => typeof v === \"boolean\"))\n                                json.type = \"string\";\n                            if (vals.every((v) => v === null))\n                                json.type = \"null\";\n                            json.enum = vals;\n                        }\n                        break;\n                    }\n                    case \"file\": {\n                        const json = _json;\n                        const file = {\n                            type: \"string\",\n                            format: \"binary\",\n                            contentEncoding: \"binary\",\n                        };\n                        const { minimum, maximum, mime } = schema._zod.bag;\n                        if (minimum !== undefined)\n                            file.minLength = minimum;\n                        if (maximum !== undefined)\n                            file.maxLength = maximum;\n                        if (mime) {\n                            if (mime.length === 1) {\n                                file.contentMediaType = mime[0];\n                                Object.assign(json, file);\n                            }\n                            else {\n                                json.anyOf = mime.map((m) => {\n                                    const mFile = { ...file, contentMediaType: m };\n                                    return mFile;\n                                });\n                            }\n                        }\n                        else {\n                            Object.assign(json, file);\n                        }\n                        // if (this.unrepresentable === \"throw\") {\n                        //   throw new Error(\"File cannot be represented in JSON Schema\");\n                        // }\n                        break;\n                    }\n                    case \"transform\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Transforms cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"nullable\": {\n                        const inner = this.process(def.innerType, params);\n                        _json.anyOf = [inner, { type: \"null\" }];\n                        break;\n                    }\n                    case \"nonoptional\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        break;\n                    }\n                    case \"success\": {\n                        const json = _json;\n                        json.type = \"boolean\";\n                        break;\n                    }\n                    case \"default\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        _json.default = JSON.parse(JSON.stringify(def.defaultValue));\n                        break;\n                    }\n                    case \"prefault\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        if (this.io === \"input\")\n                            _json._prefault = JSON.parse(JSON.stringify(def.defaultValue));\n                        break;\n                    }\n                    case \"catch\": {\n                        // use conditionals\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        let catchValue;\n                        try {\n                            catchValue = def.catchValue(undefined);\n                        }\n                        catch {\n                            throw new Error(\"Dynamic catch values are not supported in JSON Schema\");\n                        }\n                        _json.default = catchValue;\n                        break;\n                    }\n                    case \"nan\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"NaN cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"template_literal\": {\n                        const json = _json;\n                        const pattern = schema._zod.pattern;\n                        if (!pattern)\n                            throw new Error(\"Pattern not found in template literal\");\n                        json.type = \"string\";\n                        json.pattern = pattern.source;\n                        break;\n                    }\n                    case \"pipe\": {\n                        const innerType = this.io === \"input\" ? (def.in._zod.def.type === \"transform\" ? def.out : def.in) : def.out;\n                        this.process(innerType, params);\n                        result.ref = innerType;\n                        break;\n                    }\n                    case \"readonly\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        _json.readOnly = true;\n                        break;\n                    }\n                    // passthrough types\n                    case \"promise\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        break;\n                    }\n                    case \"optional\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        break;\n                    }\n                    case \"lazy\": {\n                        const innerType = schema._zod.innerType;\n                        this.process(innerType, params);\n                        result.ref = innerType;\n                        break;\n                    }\n                    case \"custom\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Custom types cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    default: {\n                        def;\n                    }\n                }\n            }\n        }\n        // metadata\n        const meta = this.metadataRegistry.get(schema);\n        if (meta)\n            Object.assign(result.schema, meta);\n        if (this.io === \"input\" && isTransforming(schema)) {\n            // examples/defaults only apply to output type of pipe\n            delete result.schema.examples;\n            delete result.schema.default;\n        }\n        // set prefault as default\n        if (this.io === \"input\" && result.schema._prefault)\n            (_a = result.schema).default ?? (_a.default = result.schema._prefault);\n        delete result.schema._prefault;\n        // pulling fresh from this.seen in case it was overwritten\n        const _result = this.seen.get(schema);\n        return _result.schema;\n    }\n    emit(schema, _params) {\n        const params = {\n            cycles: _params?.cycles ?? \"ref\",\n            reused: _params?.reused ?? \"inline\",\n            // unrepresentable: _params?.unrepresentable ?? \"throw\",\n            // uri: _params?.uri ?? ((id) => `${id}`),\n            external: _params?.external ?? undefined,\n        };\n        // iterate over seen map;\n        const root = this.seen.get(schema);\n        if (!root)\n            throw new Error(\"Unprocessed schema. This is a bug in Zod.\");\n        // initialize result with root schema fields\n        // Object.assign(result, seen.cached);\n        const makeURI = (entry) => {\n            // comparing the seen objects because sometimes\n            // multiple schemas map to the same seen object.\n            // e.g. lazy\n            // external is configured\n            const defsSegment = this.target === \"draft-2020-12\" ? \"$defs\" : \"definitions\";\n            if (params.external) {\n                const externalId = params.external.registry.get(entry[0])?.id; // ?? \"__shared\";// `__schema${this.counter++}`;\n                // check if schema is in the external registry\n                if (externalId)\n                    return { ref: params.external.uri(externalId) };\n                // otherwise, add to __shared\n                const id = entry[1].defId ?? entry[1].schema.id ?? `schema${this.counter++}`;\n                entry[1].defId = id;\n                return { defId: id, ref: `${params.external.uri(\"__shared\")}#/${defsSegment}/${id}` };\n            }\n            if (entry[1] === root) {\n                return { ref: \"#\" };\n            }\n            // self-contained schema\n            const uriPrefix = `#`;\n            const defUriPrefix = `${uriPrefix}/${defsSegment}/`;\n            const defId = entry[1].schema.id ?? `__schema${this.counter++}`;\n            return { defId, ref: defUriPrefix + defId };\n        };\n        // stored cached version in `def` property\n        // remove all properties, set $ref\n        const extractToDef = (entry) => {\n            if (entry[1].schema.$ref) {\n                return;\n            }\n            const seen = entry[1];\n            const { ref, defId } = makeURI(entry);\n            seen.def = { ...seen.schema };\n            // defId won't be set if the schema is a reference to an external schema\n            if (defId)\n                seen.defId = defId;\n            // wipe away all properties except $ref\n            const schema = seen.schema;\n            for (const key in schema) {\n                delete schema[key];\n            }\n            schema.$ref = ref;\n        };\n        // extract schemas into $defs\n        for (const entry of this.seen.entries()) {\n            const seen = entry[1];\n            // convert root schema to # $ref\n            // also prevents root schema from being extracted\n            if (schema === entry[0]) {\n                // do not copy to defs...this is the root schema\n                extractToDef(entry);\n                continue;\n            }\n            // extract schemas that are in the external registry\n            if (params.external) {\n                const ext = params.external.registry.get(entry[0])?.id;\n                if (schema !== entry[0] && ext) {\n                    extractToDef(entry);\n                    continue;\n                }\n            }\n            // extract schemas with `id` meta\n            const id = this.metadataRegistry.get(entry[0])?.id;\n            if (id) {\n                extractToDef(entry);\n                continue;\n            }\n            // break cycles\n            if (seen.cycle) {\n                if (params.cycles === \"throw\") {\n                    throw new Error(\"Cycle detected: \" +\n                        `#/${seen.cycle?.join(\"/\")}/<root>` +\n                        '\\n\\nSet the `cycles` parameter to `\"ref\"` to resolve cyclical schemas with defs.');\n                }\n                else if (params.cycles === \"ref\") {\n                    extractToDef(entry);\n                }\n                continue;\n            }\n            // extract reused schemas\n            if (seen.count > 1) {\n                if (params.reused === \"ref\") {\n                    extractToDef(entry);\n                    // biome-ignore lint:\n                    continue;\n                }\n            }\n        }\n        // flatten _refs\n        const flattenRef = (zodSchema, params) => {\n            const seen = this.seen.get(zodSchema);\n            const schema = seen.def ?? seen.schema;\n            const _cached = { ...schema };\n            // already seen\n            if (seen.ref === null) {\n                return;\n            }\n            // flatten ref if defined\n            const ref = seen.ref;\n            seen.ref = null; // prevent recursion\n            if (ref) {\n                flattenRef(ref, params);\n                // merge referenced schema into current\n                const refSchema = this.seen.get(ref).schema;\n                if (refSchema.$ref && params.target === \"draft-7\") {\n                    schema.allOf = schema.allOf ?? [];\n                    schema.allOf.push(refSchema);\n                }\n                else {\n                    Object.assign(schema, refSchema);\n                    Object.assign(schema, _cached); // prevent overwriting any fields in the original schema\n                }\n            }\n            // execute overrides\n            if (!seen.isParent)\n                this.override({\n                    zodSchema: zodSchema,\n                    jsonSchema: schema,\n                });\n        };\n        for (const entry of [...this.seen.entries()].reverse()) {\n            flattenRef(entry[0], { target: this.target });\n        }\n        const result = {};\n        if (this.target === \"draft-2020-12\") {\n            result.$schema = \"https://json-schema.org/draft/2020-12/schema\";\n        }\n        else if (this.target === \"draft-7\") {\n            result.$schema = \"http://json-schema.org/draft-07/schema#\";\n        }\n        else {\n            console.warn(`Invalid target: ${this.target}`);\n        }\n        Object.assign(result, root.def);\n        // build defs object\n        const defs = params.external?.defs ?? {};\n        for (const entry of this.seen.entries()) {\n            const seen = entry[1];\n            if (seen.def && seen.defId) {\n                defs[seen.defId] = seen.def;\n            }\n        }\n        // set definitions in result\n        if (!params.external && Object.keys(defs).length > 0) {\n            if (this.target === \"draft-2020-12\") {\n                result.$defs = defs;\n            }\n            else {\n                result.definitions = defs;\n            }\n        }\n        try {\n            // this \"finalizes\" this schema and ensures all cycles are removed\n            // each call to .emit() is functionally independent\n            // though the seen map is shared\n            return JSON.parse(JSON.stringify(result));\n        }\n        catch (_err) {\n            throw new Error(\"Error converting schema to JSON.\");\n        }\n    }\n}\nexport function toJSONSchema(input, _params) {\n    if (input instanceof $ZodRegistry) {\n        const gen = new JSONSchemaGenerator(_params);\n        const defs = {};\n        for (const entry of input._idmap.entries()) {\n            const [_, schema] = entry;\n            gen.process(schema);\n        }\n        const schemas = {};\n        const external = {\n            registry: input,\n            uri: _params?.uri || ((id) => id),\n            defs,\n        };\n        for (const entry of input._idmap.entries()) {\n            const [key, schema] = entry;\n            schemas[key] = gen.emit(schema, {\n                ..._params,\n                external,\n            });\n        }\n        if (Object.keys(defs).length > 0) {\n            const defsSegment = gen.target === \"draft-2020-12\" ? \"$defs\" : \"definitions\";\n            schemas.__shared = {\n                [defsSegment]: defs,\n            };\n        }\n        return { schemas };\n    }\n    const gen = new JSONSchemaGenerator(_params);\n    gen.process(input);\n    return gen.emit(input, _params);\n}\nfunction isTransforming(_schema, _ctx) {\n    const ctx = _ctx ?? { seen: new Set() };\n    if (ctx.seen.has(_schema))\n        return false;\n    ctx.seen.add(_schema);\n    const schema = _schema;\n    const def = schema._zod.def;\n    switch (def.type) {\n        case \"string\":\n        case \"number\":\n        case \"bigint\":\n        case \"boolean\":\n        case \"date\":\n        case \"symbol\":\n        case \"undefined\":\n        case \"null\":\n        case \"any\":\n        case \"unknown\":\n        case \"never\":\n        case \"void\":\n        case \"literal\":\n        case \"enum\":\n        case \"nan\":\n        case \"file\":\n        case \"template_literal\":\n            return false;\n        case \"array\": {\n            return isTransforming(def.element, ctx);\n        }\n        case \"object\": {\n            for (const key in def.shape) {\n                if (isTransforming(def.shape[key], ctx))\n                    return true;\n            }\n            return false;\n        }\n        case \"union\": {\n            for (const option of def.options) {\n                if (isTransforming(option, ctx))\n                    return true;\n            }\n            return false;\n        }\n        case \"intersection\": {\n            return isTransforming(def.left, ctx) || isTransforming(def.right, ctx);\n        }\n        case \"tuple\": {\n            for (const item of def.items) {\n                if (isTransforming(item, ctx))\n                    return true;\n            }\n            if (def.rest && isTransforming(def.rest, ctx))\n                return true;\n            return false;\n        }\n        case \"record\": {\n            return isTransforming(def.keyType, ctx) || isTransforming(def.valueType, ctx);\n        }\n        case \"map\": {\n            return isTransforming(def.keyType, ctx) || isTransforming(def.valueType, ctx);\n        }\n        case \"set\": {\n            return isTransforming(def.valueType, ctx);\n        }\n        // inner types\n        case \"promise\":\n        case \"optional\":\n        case \"nonoptional\":\n        case \"nullable\":\n        case \"readonly\":\n            return isTransforming(def.innerType, ctx);\n        case \"lazy\":\n            return isTransforming(def.getter(), ctx);\n        case \"default\": {\n            return isTransforming(def.innerType, ctx);\n        }\n        case \"prefault\": {\n            return isTransforming(def.innerType, ctx);\n        }\n        case \"custom\": {\n            return false;\n        }\n        case \"transform\": {\n            return true;\n        }\n        case \"pipe\": {\n            return isTransforming(def.in, ctx) || isTransforming(def.out, ctx);\n        }\n        case \"success\": {\n            return false;\n        }\n        case \"catch\": {\n            return false;\n        }\n        default:\n            def;\n    }\n    throw new Error(`Unknown schema type: ${def.type}`);\n}\n","// @ts-nocheck\n// Inlined to deal with portability issues with importing crypto module\n/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.6.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n\"use strict\";\nvar root = typeof window === \"object\" ? window : {};\nvar HEX_CHARS = \"0123456789abcdef\".split(\"\");\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\nvar OUTPUT_TYPES = [\"hex\", \"array\", \"digest\", \"arrayBuffer\"];\nvar blocks = [];\nfunction Sha1(sharedMemory) {\n    if (sharedMemory) {\n        blocks[0] =\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        this.blocks = blocks;\n    }\n    else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    this.h0 = 0x67452301;\n    this.h1 = 0xefcdab89;\n    this.h2 = 0x98badcfe;\n    this.h3 = 0x10325476;\n    this.h4 = 0xc3d2e1f0;\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n}\nSha1.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString = typeof message !== \"string\";\n    if (notString && message.constructor === root.ArrayBuffer) {\n        message = new Uint8Array(message);\n    }\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n    while (index < length) {\n        if (this.hashed) {\n            this.hashed = false;\n            blocks[0] = this.block;\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < 64; ++index) {\n                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        }\n        else {\n            for (i = this.start; index < length && i < 64; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                }\n                else if (code < 0x800) {\n                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else {\n                    code =\n                        0x10000 +\n                            (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        this.bytes += i - this.start;\n        if (i >= 64) {\n            this.block = blocks[16];\n            this.start = i - 64;\n            this.hash();\n            this.hashed = true;\n        }\n        else {\n            this.start = i;\n        }\n    }\n    if (this.bytes > 4294967295) {\n        this.hBytes += (this.bytes / 4294967296) << 0;\n        this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n};\nSha1.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n        if (!this.hashed) {\n            this.hash();\n        }\n        blocks[0] = this.block;\n        blocks[16] =\n            blocks[1] =\n                blocks[2] =\n                    blocks[3] =\n                        blocks[4] =\n                            blocks[5] =\n                                blocks[6] =\n                                    blocks[7] =\n                                        blocks[8] =\n                                            blocks[9] =\n                                                blocks[10] =\n                                                    blocks[11] =\n                                                        blocks[12] =\n                                                            blocks[13] =\n                                                                blocks[14] =\n                                                                    blocks[15] =\n                                                                        0;\n    }\n    blocks[14] = (this.hBytes << 3) | (this.bytes >>> 29);\n    blocks[15] = this.bytes << 3;\n    this.hash();\n};\nSha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n    for (j = 16; j < 80; ++j) {\n        t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n        blocks[j] = (t << 1) | (t >>> 31);\n    }\n    for (j = 0; j < 20; j += 5) {\n        f = (b & c) | (~b & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1518500249 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (~a & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1518500249 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (~e & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1518500249 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (~d & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1518500249 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (~c & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1518500249 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 40; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1859775393 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1859775393 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1859775393 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1859775393 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1859775393 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 60; j += 5) {\n        f = (b & c) | (b & d) | (c & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 1894007588 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (a & c) | (b & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 1894007588 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (e & b) | (a & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 1894007588 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (d & a) | (e & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 1894007588 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (c & e) | (d & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 1894007588 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 80; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 899497514 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 899497514 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 899497514 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 899497514 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 899497514 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    this.h0 = (this.h0 + a) << 0;\n    this.h1 = (this.h1 + b) << 0;\n    this.h2 = (this.h2 + c) << 0;\n    this.h3 = (this.h3 + d) << 0;\n    this.h4 = (this.h4 + e) << 0;\n};\nSha1.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return (HEX_CHARS[(h0 >> 28) & 0x0f] +\n        HEX_CHARS[(h0 >> 24) & 0x0f] +\n        HEX_CHARS[(h0 >> 20) & 0x0f] +\n        HEX_CHARS[(h0 >> 16) & 0x0f] +\n        HEX_CHARS[(h0 >> 12) & 0x0f] +\n        HEX_CHARS[(h0 >> 8) & 0x0f] +\n        HEX_CHARS[(h0 >> 4) & 0x0f] +\n        HEX_CHARS[h0 & 0x0f] +\n        HEX_CHARS[(h1 >> 28) & 0x0f] +\n        HEX_CHARS[(h1 >> 24) & 0x0f] +\n        HEX_CHARS[(h1 >> 20) & 0x0f] +\n        HEX_CHARS[(h1 >> 16) & 0x0f] +\n        HEX_CHARS[(h1 >> 12) & 0x0f] +\n        HEX_CHARS[(h1 >> 8) & 0x0f] +\n        HEX_CHARS[(h1 >> 4) & 0x0f] +\n        HEX_CHARS[h1 & 0x0f] +\n        HEX_CHARS[(h2 >> 28) & 0x0f] +\n        HEX_CHARS[(h2 >> 24) & 0x0f] +\n        HEX_CHARS[(h2 >> 20) & 0x0f] +\n        HEX_CHARS[(h2 >> 16) & 0x0f] +\n        HEX_CHARS[(h2 >> 12) & 0x0f] +\n        HEX_CHARS[(h2 >> 8) & 0x0f] +\n        HEX_CHARS[(h2 >> 4) & 0x0f] +\n        HEX_CHARS[h2 & 0x0f] +\n        HEX_CHARS[(h3 >> 28) & 0x0f] +\n        HEX_CHARS[(h3 >> 24) & 0x0f] +\n        HEX_CHARS[(h3 >> 20) & 0x0f] +\n        HEX_CHARS[(h3 >> 16) & 0x0f] +\n        HEX_CHARS[(h3 >> 12) & 0x0f] +\n        HEX_CHARS[(h3 >> 8) & 0x0f] +\n        HEX_CHARS[(h3 >> 4) & 0x0f] +\n        HEX_CHARS[h3 & 0x0f] +\n        HEX_CHARS[(h4 >> 28) & 0x0f] +\n        HEX_CHARS[(h4 >> 24) & 0x0f] +\n        HEX_CHARS[(h4 >> 20) & 0x0f] +\n        HEX_CHARS[(h4 >> 16) & 0x0f] +\n        HEX_CHARS[(h4 >> 12) & 0x0f] +\n        HEX_CHARS[(h4 >> 8) & 0x0f] +\n        HEX_CHARS[(h4 >> 4) & 0x0f] +\n        HEX_CHARS[h4 & 0x0f]);\n};\nSha1.prototype.toString = Sha1.prototype.hex;\nSha1.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return [\n        (h0 >> 24) & 0xff,\n        (h0 >> 16) & 0xff,\n        (h0 >> 8) & 0xff,\n        h0 & 0xff,\n        (h1 >> 24) & 0xff,\n        (h1 >> 16) & 0xff,\n        (h1 >> 8) & 0xff,\n        h1 & 0xff,\n        (h2 >> 24) & 0xff,\n        (h2 >> 16) & 0xff,\n        (h2 >> 8) & 0xff,\n        h2 & 0xff,\n        (h3 >> 24) & 0xff,\n        (h3 >> 16) & 0xff,\n        (h3 >> 8) & 0xff,\n        h3 & 0xff,\n        (h4 >> 24) & 0xff,\n        (h4 >> 16) & 0xff,\n        (h4 >> 8) & 0xff,\n        h4 & 0xff,\n    ];\n};\nSha1.prototype.array = Sha1.prototype.digest;\nSha1.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n};\nlet hasLoggedWarning = false;\n/**\n * @deprecated Use `makeDefaultKeyEncoder()` to create a custom key encoder.\n * This function will be removed in a future version.\n */\nexport const insecureHash = (message) => {\n    if (!hasLoggedWarning) {\n        console.warn([\n            `The default method for hashing keys is insecure and will be replaced in a future version,`,\n            `but hasn't been replaced yet as to not break existing caches. It's recommended that you use`,\n            `a more secure hashing algorithm to avoid cache poisoning.`,\n            ``,\n            `See this page for more information:`,\n            `|`,\n            `└> https://js.langchain.com/docs/troubleshooting/warnings/insecure-cache-algorithm`,\n        ].join(\"\\n\"));\n        hasLoggedWarning = true;\n    }\n    return new Sha1(true).update(message)[\"hex\"]();\n};\n","import { insecureHash } from \"../utils/hash.js\";\nimport { mapStoredMessageToChatMessage } from \"../messages/utils.js\";\n/**\n * This cache key should be consistent across all versions of LangChain.\n * It is currently NOT consistent across versions of LangChain.\n *\n * A huge benefit of having a remote cache (like redis) is that you can\n * access the cache from different processes/machines. The allows you to\n * separate concerns and scale horizontally.\n *\n * TODO: Make cache key consistent across versions of LangChain.\n *\n * @deprecated Use `makeDefaultKeyEncoder()` to create a custom key encoder.\n * This function will be removed in a future version.\n */\nexport const getCacheKey = (...strings) => insecureHash(strings.join(\"_\"));\nexport function deserializeStoredGeneration(storedGeneration) {\n    if (storedGeneration.message !== undefined) {\n        return {\n            text: storedGeneration.text,\n            message: mapStoredMessageToChatMessage(storedGeneration.message),\n        };\n    }\n    else {\n        return { text: storedGeneration.text };\n    }\n}\nexport function serializeGeneration(generation) {\n    const serializedValue = {\n        text: generation.text,\n    };\n    if (generation.message !== undefined) {\n        serializedValue.message = generation.message.toDict();\n    }\n    return serializedValue;\n}\n/**\n * Base class for all caches. All caches should extend this class.\n */\nexport class BaseCache {\n    constructor() {\n        // For backwards compatibility, we use a default key encoder\n        // that uses SHA-1 to hash the prompt and LLM key. This will also print a warning\n        // about the security implications of using SHA-1 as a cache key.\n        Object.defineProperty(this, \"keyEncoder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getCacheKey\n        });\n    }\n    /**\n     * Sets a custom key encoder function for the cache.\n     * This function should take a prompt and an LLM key and return a string\n     * that will be used as the cache key.\n     * @param keyEncoderFn The custom key encoder function.\n     */\n    makeDefaultKeyEncoder(keyEncoderFn) {\n        this.keyEncoder = keyEncoderFn;\n    }\n}\nconst GLOBAL_MAP = new Map();\n/**\n * A cache for storing LLM generations that stores data in memory.\n */\nexport class InMemoryCache extends BaseCache {\n    constructor(map) {\n        super();\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cache = map ?? new Map();\n    }\n    /**\n     * Retrieves data from the cache using a prompt and an LLM key. If the\n     * data is not found, it returns null.\n     * @param prompt The prompt used to find the data.\n     * @param llmKey The LLM key used to find the data.\n     * @returns The data corresponding to the prompt and LLM key, or null if not found.\n     */\n    lookup(prompt, llmKey) {\n        return Promise.resolve(this.cache.get(this.keyEncoder(prompt, llmKey)) ?? null);\n    }\n    /**\n     * Updates the cache with new data using a prompt and an LLM key.\n     * @param prompt The prompt used to store the data.\n     * @param llmKey The LLM key used to store the data.\n     * @param value The data to be stored.\n     */\n    async update(prompt, llmKey, value) {\n        this.cache.set(this.keyEncoder(prompt, llmKey), value);\n    }\n    /**\n     * Returns a global instance of InMemoryCache using a predefined global\n     * map as the initial cache.\n     * @returns A global instance of InMemoryCache.\n     */\n    static global() {\n        return new InMemoryCache(GLOBAL_MAP);\n    }\n}\n","import { InMemoryCache } from \"../caches/base.js\";\nimport { StringPromptValue, ChatPromptValue, } from \"../prompt_values.js\";\nimport { coerceMessageLikeToMessage } from \"../messages/utils.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { encodingForModel } from \"../utils/tiktoken.js\";\nimport { Runnable } from \"../runnables/base.js\";\n// https://www.npmjs.com/package/js-tiktoken\nexport const getModelNameForTiktoken = (modelName) => {\n    if (modelName.startsWith(\"gpt-3.5-turbo-16k\")) {\n        return \"gpt-3.5-turbo-16k\";\n    }\n    if (modelName.startsWith(\"gpt-3.5-turbo-\")) {\n        return \"gpt-3.5-turbo\";\n    }\n    if (modelName.startsWith(\"gpt-4-32k\")) {\n        return \"gpt-4-32k\";\n    }\n    if (modelName.startsWith(\"gpt-4-\")) {\n        return \"gpt-4\";\n    }\n    if (modelName.startsWith(\"gpt-4o\")) {\n        return \"gpt-4o\";\n    }\n    return modelName;\n};\nexport const getEmbeddingContextSize = (modelName) => {\n    switch (modelName) {\n        case \"text-embedding-ada-002\":\n            return 8191;\n        default:\n            return 2046;\n    }\n};\nexport const getModelContextSize = (modelName) => {\n    switch (getModelNameForTiktoken(modelName)) {\n        case \"gpt-3.5-turbo-16k\":\n            return 16384;\n        case \"gpt-3.5-turbo\":\n            return 4096;\n        case \"gpt-4-32k\":\n            return 32768;\n        case \"gpt-4\":\n            return 8192;\n        case \"text-davinci-003\":\n            return 4097;\n        case \"text-curie-001\":\n            return 2048;\n        case \"text-babbage-001\":\n            return 2048;\n        case \"text-ada-001\":\n            return 2048;\n        case \"code-davinci-002\":\n            return 8000;\n        case \"code-cushman-001\":\n            return 2048;\n        default:\n            return 4097;\n    }\n};\n/**\n * Whether or not the input matches the OpenAI tool definition.\n * @param {unknown} tool The input to check.\n * @returns {boolean} Whether the input is an OpenAI tool definition.\n */\nexport function isOpenAITool(tool) {\n    if (typeof tool !== \"object\" || !tool)\n        return false;\n    if (\"type\" in tool &&\n        tool.type === \"function\" &&\n        \"function\" in tool &&\n        typeof tool.function === \"object\" &&\n        tool.function &&\n        \"name\" in tool.function &&\n        \"parameters\" in tool.function) {\n        return true;\n    }\n    return false;\n}\nexport const calculateMaxTokens = async ({ prompt, modelName, }) => {\n    let numTokens;\n    try {\n        numTokens = (await encodingForModel(getModelNameForTiktoken(modelName))).encode(prompt).length;\n    }\n    catch (error) {\n        console.warn(\"Failed to calculate number of tokens, falling back to approximate count\");\n        // fallback to approximate calculation if tiktoken is not available\n        // each token is ~4 characters: https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them#\n        numTokens = Math.ceil(prompt.length / 4);\n    }\n    const maxTokens = getModelContextSize(modelName);\n    return maxTokens - numTokens;\n};\nconst getVerbosity = () => false;\n/**\n * Base class for language models, chains, tools.\n */\nexport class BaseLangChain extends Runnable {\n    get lc_attributes() {\n        return {\n            callbacks: undefined,\n            verbose: undefined,\n        };\n    }\n    constructor(params) {\n        super(params);\n        /**\n         * Whether to print out response text.\n         */\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.verbose = params.verbose ?? getVerbosity();\n        this.callbacks = params.callbacks;\n        this.tags = params.tags ?? [];\n        this.metadata = params.metadata ?? {};\n    }\n}\n/**\n * Base class for language models.\n */\nexport class BaseLanguageModel extends BaseLangChain {\n    /**\n     * Keys that the language model accepts as call options.\n     */\n    get callKeys() {\n        return [\"stop\", \"timeout\", \"signal\", \"tags\", \"metadata\", \"callbacks\"];\n    }\n    constructor({ callbacks, callbackManager, ...params }) {\n        const { cache, ...rest } = params;\n        super({\n            callbacks: callbacks ?? callbackManager,\n            ...rest,\n        });\n        /**\n         * The async caller should be used by subclasses to make any async calls,\n         * which will thus benefit from the concurrency and retry logic.\n         */\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_encoding\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof cache === \"object\") {\n            this.cache = cache;\n        }\n        else if (cache) {\n            this.cache = InMemoryCache.global();\n        }\n        else {\n            this.cache = undefined;\n        }\n        this.caller = new AsyncCaller(params ?? {});\n    }\n    /**\n     * Get the number of tokens in the content.\n     * @param content The content to get the number of tokens for.\n     * @returns The number of tokens in the content.\n     */\n    async getNumTokens(content) {\n        // Extract text content from MessageContent\n        let textContent;\n        if (typeof content === \"string\") {\n            textContent = content;\n        }\n        else {\n            /**\n             * Content is an array of MessageContentComplex\n             *\n             * ToDo(@christian-bromann): This is a temporary fix to get the number of tokens for the content.\n             * We need to find a better way to do this.\n             * @see https://github.com/langchain-ai/langchainjs/pull/8341#pullrequestreview-2933713116\n             */\n            textContent = content\n                .map((item) => {\n                if (typeof item === \"string\")\n                    return item;\n                if (item.type === \"text\" && \"text\" in item)\n                    return item.text;\n                return \"\";\n            })\n                .join(\"\");\n        }\n        // fallback to approximate calculation if tiktoken is not available\n        let numTokens = Math.ceil(textContent.length / 4);\n        if (!this._encoding) {\n            try {\n                this._encoding = await encodingForModel(\"modelName\" in this\n                    ? getModelNameForTiktoken(this.modelName)\n                    : \"gpt2\");\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        if (this._encoding) {\n            try {\n                numTokens = this._encoding.encode(textContent).length;\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        return numTokens;\n    }\n    static _convertInputToPromptValue(input) {\n        if (typeof input === \"string\") {\n            return new StringPromptValue(input);\n        }\n        else if (Array.isArray(input)) {\n            return new ChatPromptValue(input.map(coerceMessageLikeToMessage));\n        }\n        else {\n            return input;\n        }\n    }\n    /**\n     * Get the identifying parameters of the LLM.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _identifyingParams() {\n        return {};\n    }\n    /**\n     * Create a unique cache key for a specific call to a specific language model.\n     * @param callOptions Call options for the model\n     * @returns A unique cache key.\n     */\n    _getSerializedCacheKeyParametersForCall(\n    // TODO: Fix when we remove the RunnableLambda backwards compatibility shim.\n    { config, ...callOptions }) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const params = {\n            ...this._identifyingParams(),\n            ...callOptions,\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n        const filteredEntries = Object.entries(params).filter(([_, value]) => value !== undefined);\n        const serializedEntries = filteredEntries\n            .map(([key, value]) => `${key}:${JSON.stringify(value)}`)\n            .sort()\n            .join(\",\");\n        return serializedEntries;\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this._identifyingParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    /**\n     * @deprecated\n     * Load an LLM from a json-like object describing it.\n     */\n    static async deserialize(_data) {\n        throw new Error(\"Use .toJSON() instead\");\n    }\n}\n","import { concat } from \"../utils/stream.js\";\nimport { Runnable, RunnableAssign, RunnableMap, } from \"./base.js\";\nimport { ensureConfig } from \"./config.js\";\n/**\n * A runnable to passthrough inputs unchanged or with additional keys.\n *\n * This runnable behaves almost like the identity function, except that it\n * can be configured to add additional keys to the output, if the input is\n * an object.\n *\n * The example below demonstrates how to use `RunnablePassthrough to\n * passthrough the input from the `.invoke()`\n *\n * @example\n * ```typescript\n * const chain = RunnableSequence.from([\n *   {\n *     question: new RunnablePassthrough(),\n *     context: async () => loadContextFromStore(),\n *   },\n *   prompt,\n *   llm,\n *   outputParser,\n * ]);\n * const response = await chain.invoke(\n *   \"I can pass a single string instead of an object since I'm using `RunnablePassthrough`.\"\n * );\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class RunnablePassthrough extends Runnable {\n    static lc_name() {\n        return \"RunnablePassthrough\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (fields) {\n            this.func = fields.func;\n        }\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        if (this.func) {\n            await this.func(input, config);\n        }\n        return this._callWithConfig((input) => Promise.resolve(input), input, config);\n    }\n    async *transform(generator, options) {\n        const config = ensureConfig(options);\n        let finalOutput;\n        let finalOutputSupported = true;\n        for await (const chunk of this._transformStreamWithConfig(generator, (input) => input, config)) {\n            yield chunk;\n            if (finalOutputSupported) {\n                if (finalOutput === undefined) {\n                    finalOutput = chunk;\n                }\n                else {\n                    try {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        finalOutput = concat(finalOutput, chunk);\n                    }\n                    catch {\n                        finalOutput = undefined;\n                        finalOutputSupported = false;\n                    }\n                }\n            }\n        }\n        if (this.func && finalOutput !== undefined) {\n            await this.func(finalOutput, config);\n        }\n    }\n    /**\n     * A runnable that assigns key-value pairs to the input.\n     *\n     * The example below shows how you could use it with an inline function.\n     *\n     * @example\n     * ```typescript\n     * const prompt =\n     *   PromptTemplate.fromTemplate(`Write a SQL query to answer the question using the following schema: {schema}\n     * Question: {question}\n     * SQL Query:`);\n     *\n     * // The `RunnablePassthrough.assign()` is used here to passthrough the input from the `.invoke()`\n     * // call (in this example it's the question), along with any inputs passed to the `.assign()` method.\n     * // In this case, we're passing the schema.\n     * const sqlQueryGeneratorChain = RunnableSequence.from([\n     *   RunnablePassthrough.assign({\n     *     schema: async () => db.getTableInfo(),\n     *   }),\n     *   prompt,\n     *   new ChatOpenAI({}).withConfig({ stop: [\"\\nSQLResult:\"] }),\n     *   new StringOutputParser(),\n     * ]);\n     * const result = await sqlQueryGeneratorChain.invoke({\n     *   question: \"How many employees are there?\",\n     * });\n     * ```\n     */\n    static assign(mapping) {\n        return new RunnableAssign(new RunnableMap({ steps: mapping }));\n    }\n}\n","import { AIMessage, HumanMessage, coerceMessageLikeToMessage, isAIMessageChunk, isBaseMessage, isAIMessage, convertToOpenAIImageBlock, isURLContentBlock, isBase64ContentBlock, } from \"../messages/index.js\";\nimport { RUN_KEY, } from \"../outputs.js\";\nimport { BaseLanguageModel, } from \"./base.js\";\nimport { CallbackManager, } from \"../callbacks/manager.js\";\nimport { RunnableLambda, RunnableSequence, } from \"../runnables/base.js\";\nimport { concat } from \"../utils/stream.js\";\nimport { RunnablePassthrough } from \"../runnables/passthrough.js\";\nimport { getSchemaDescription, isInteropZodSchema, } from \"../utils/types/zod.js\";\nimport { callbackHandlerPrefersStreaming } from \"../callbacks/base.js\";\nimport { toJsonSchema } from \"../utils/json_schema.js\";\n/**\n * Creates a transform stream for encoding chat message chunks.\n * @deprecated Use {@link BytesOutputParser} instead\n * @returns A TransformStream instance that encodes chat message chunks.\n */\nexport function createChatMessageChunkEncoderStream() {\n    const textEncoder = new TextEncoder();\n    return new TransformStream({\n        transform(chunk, controller) {\n            controller.enqueue(textEncoder.encode(typeof chunk.content === \"string\"\n                ? chunk.content\n                : JSON.stringify(chunk.content)));\n        },\n    });\n}\nfunction _formatForTracing(messages) {\n    const messagesToTrace = [];\n    for (const message of messages) {\n        let messageToTrace = message;\n        if (Array.isArray(message.content)) {\n            for (let idx = 0; idx < message.content.length; idx++) {\n                const block = message.content[idx];\n                if (isURLContentBlock(block) || isBase64ContentBlock(block)) {\n                    if (messageToTrace === message) {\n                        // Also shallow-copy content\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        messageToTrace = new message.constructor({\n                            ...messageToTrace,\n                            content: [\n                                ...message.content.slice(0, idx),\n                                convertToOpenAIImageBlock(block),\n                                ...message.content.slice(idx + 1),\n                            ],\n                        });\n                    }\n                }\n            }\n        }\n        messagesToTrace.push(messageToTrace);\n    }\n    return messagesToTrace;\n}\n/**\n * Base class for chat models. It extends the BaseLanguageModel class and\n * provides methods for generating chat based on input messages.\n */\nexport class BaseChatModel extends BaseLanguageModel {\n    constructor(fields) {\n        super(fields);\n        // Only ever instantiated in main LangChain\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"chat_models\", this._llmType()]\n        });\n        Object.defineProperty(this, \"disableStreaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    _separateRunnableConfigFromCallOptionsCompat(options) {\n        // For backwards compat, keep `signal` in both runnableConfig and callOptions\n        const [runnableConfig, callOptions] = super._separateRunnableConfigFromCallOptions(options);\n        callOptions.signal = runnableConfig.signal;\n        return [runnableConfig, callOptions];\n    }\n    /**\n     * Invokes the chat model with a single input.\n     * @param input The input for the language model.\n     * @param options The call options.\n     * @returns A Promise that resolves to a BaseMessageChunk.\n     */\n    async invoke(input, options) {\n        const promptValue = BaseChatModel._convertInputToPromptValue(input);\n        const result = await this.generatePrompt([promptValue], options, options?.callbacks);\n        const chatGeneration = result.generations[0][0];\n        // TODO: Remove cast after figuring out inheritance\n        return chatGeneration.message;\n    }\n    // eslint-disable-next-line require-yield\n    async *_streamResponseChunks(_messages, _options, _runManager) {\n        throw new Error(\"Not implemented.\");\n    }\n    async *_streamIterator(input, options) {\n        // Subclass check required to avoid double callbacks with default implementation\n        if (this._streamResponseChunks ===\n            BaseChatModel.prototype._streamResponseChunks ||\n            this.disableStreaming) {\n            yield this.invoke(input, options);\n        }\n        else {\n            const prompt = BaseChatModel._convertInputToPromptValue(input);\n            const messages = prompt.toChatMessages();\n            const [runnableConfig, callOptions] = this._separateRunnableConfigFromCallOptionsCompat(options);\n            const inheritableMetadata = {\n                ...runnableConfig.metadata,\n                ...this.getLsParams(callOptions),\n            };\n            const callbackManager_ = await CallbackManager.configure(runnableConfig.callbacks, this.callbacks, runnableConfig.tags, this.tags, inheritableMetadata, this.metadata, { verbose: this.verbose });\n            const extra = {\n                options: callOptions,\n                invocation_params: this?.invocationParams(callOptions),\n                batch_size: 1,\n            };\n            const runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), [_formatForTracing(messages)], runnableConfig.runId, undefined, extra, undefined, undefined, runnableConfig.runName);\n            let generationChunk;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let llmOutput;\n            try {\n                for await (const chunk of this._streamResponseChunks(messages, callOptions, runManagers?.[0])) {\n                    if (chunk.message.id == null) {\n                        const runId = runManagers?.at(0)?.runId;\n                        if (runId != null)\n                            chunk.message._updateId(`run-${runId}`);\n                    }\n                    chunk.message.response_metadata = {\n                        ...chunk.generationInfo,\n                        ...chunk.message.response_metadata,\n                    };\n                    yield chunk.message;\n                    if (!generationChunk) {\n                        generationChunk = chunk;\n                    }\n                    else {\n                        generationChunk = generationChunk.concat(chunk);\n                    }\n                    if (isAIMessageChunk(chunk.message) &&\n                        chunk.message.usage_metadata !== undefined) {\n                        llmOutput = {\n                            tokenUsage: {\n                                promptTokens: chunk.message.usage_metadata.input_tokens,\n                                completionTokens: chunk.message.usage_metadata.output_tokens,\n                                totalTokens: chunk.message.usage_metadata.total_tokens,\n                            },\n                        };\n                    }\n                }\n            }\n            catch (err) {\n                await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMError(err)));\n                throw err;\n            }\n            await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMEnd({\n                // TODO: Remove cast after figuring out inheritance\n                generations: [[generationChunk]],\n                llmOutput,\n            })));\n        }\n    }\n    getLsParams(options) {\n        const providerName = this.getName().startsWith(\"Chat\")\n            ? this.getName().replace(\"Chat\", \"\")\n            : this.getName();\n        return {\n            ls_model_type: \"chat\",\n            ls_stop: options.stop,\n            ls_provider: providerName,\n        };\n    }\n    /** @ignore */\n    async _generateUncached(messages, parsedOptions, handledOptions, startedRunManagers) {\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\n        let runManagers;\n        if (startedRunManagers !== undefined &&\n            startedRunManagers.length === baseMessages.length) {\n            runManagers = startedRunManagers;\n        }\n        else {\n            const inheritableMetadata = {\n                ...handledOptions.metadata,\n                ...this.getLsParams(parsedOptions),\n            };\n            // create callback manager and start run\n            const callbackManager_ = await CallbackManager.configure(handledOptions.callbacks, this.callbacks, handledOptions.tags, this.tags, inheritableMetadata, this.metadata, { verbose: this.verbose });\n            const extra = {\n                options: parsedOptions,\n                invocation_params: this?.invocationParams(parsedOptions),\n                batch_size: 1,\n            };\n            runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), baseMessages.map(_formatForTracing), handledOptions.runId, undefined, extra, undefined, undefined, handledOptions.runName);\n        }\n        const generations = [];\n        const llmOutputs = [];\n        // Even if stream is not explicitly called, check if model is implicitly\n        // called from streamEvents() or streamLog() to get all streamed events.\n        // Bail out if _streamResponseChunks not overridden\n        const hasStreamingHandler = !!runManagers?.[0].handlers.find(callbackHandlerPrefersStreaming);\n        if (hasStreamingHandler &&\n            !this.disableStreaming &&\n            baseMessages.length === 1 &&\n            this._streamResponseChunks !==\n                BaseChatModel.prototype._streamResponseChunks) {\n            try {\n                const stream = await this._streamResponseChunks(baseMessages[0], parsedOptions, runManagers?.[0]);\n                let aggregated;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                let llmOutput;\n                for await (const chunk of stream) {\n                    if (chunk.message.id == null) {\n                        const runId = runManagers?.at(0)?.runId;\n                        if (runId != null)\n                            chunk.message._updateId(`run-${runId}`);\n                    }\n                    if (aggregated === undefined) {\n                        aggregated = chunk;\n                    }\n                    else {\n                        aggregated = concat(aggregated, chunk);\n                    }\n                    if (isAIMessageChunk(chunk.message) &&\n                        chunk.message.usage_metadata !== undefined) {\n                        llmOutput = {\n                            tokenUsage: {\n                                promptTokens: chunk.message.usage_metadata.input_tokens,\n                                completionTokens: chunk.message.usage_metadata.output_tokens,\n                                totalTokens: chunk.message.usage_metadata.total_tokens,\n                            },\n                        };\n                    }\n                }\n                if (aggregated === undefined) {\n                    throw new Error(\"Received empty response from chat model call.\");\n                }\n                generations.push([aggregated]);\n                await runManagers?.[0].handleLLMEnd({\n                    generations,\n                    llmOutput,\n                });\n            }\n            catch (e) {\n                await runManagers?.[0].handleLLMError(e);\n                throw e;\n            }\n        }\n        else {\n            // generate results\n            const results = await Promise.allSettled(baseMessages.map((messageList, i) => this._generate(messageList, { ...parsedOptions, promptIndex: i }, runManagers?.[i])));\n            // handle results\n            await Promise.all(results.map(async (pResult, i) => {\n                if (pResult.status === \"fulfilled\") {\n                    const result = pResult.value;\n                    for (const generation of result.generations) {\n                        if (generation.message.id == null) {\n                            const runId = runManagers?.at(0)?.runId;\n                            if (runId != null)\n                                generation.message._updateId(`run-${runId}`);\n                        }\n                        generation.message.response_metadata = {\n                            ...generation.generationInfo,\n                            ...generation.message.response_metadata,\n                        };\n                    }\n                    if (result.generations.length === 1) {\n                        result.generations[0].message.response_metadata = {\n                            ...result.llmOutput,\n                            ...result.generations[0].message.response_metadata,\n                        };\n                    }\n                    generations[i] = result.generations;\n                    llmOutputs[i] = result.llmOutput;\n                    return runManagers?.[i]?.handleLLMEnd({\n                        generations: [result.generations],\n                        llmOutput: result.llmOutput,\n                    });\n                }\n                else {\n                    // status === \"rejected\"\n                    await runManagers?.[i]?.handleLLMError(pResult.reason);\n                    return Promise.reject(pResult.reason);\n                }\n            }));\n        }\n        // create combined output\n        const output = {\n            generations,\n            llmOutput: llmOutputs.length\n                ? this._combineLLMOutput?.(...llmOutputs)\n                : undefined,\n        };\n        Object.defineProperty(output, RUN_KEY, {\n            value: runManagers\n                ? { runIds: runManagers?.map((manager) => manager.runId) }\n                : undefined,\n            configurable: true,\n        });\n        return output;\n    }\n    async _generateCached({ messages, cache, llmStringKey, parsedOptions, handledOptions, }) {\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\n        const inheritableMetadata = {\n            ...handledOptions.metadata,\n            ...this.getLsParams(parsedOptions),\n        };\n        // create callback manager and start run\n        const callbackManager_ = await CallbackManager.configure(handledOptions.callbacks, this.callbacks, handledOptions.tags, this.tags, inheritableMetadata, this.metadata, { verbose: this.verbose });\n        const extra = {\n            options: parsedOptions,\n            invocation_params: this?.invocationParams(parsedOptions),\n            batch_size: 1,\n        };\n        const runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), baseMessages.map(_formatForTracing), handledOptions.runId, undefined, extra, undefined, undefined, handledOptions.runName);\n        // generate results\n        const missingPromptIndices = [];\n        const results = await Promise.allSettled(baseMessages.map(async (baseMessage, index) => {\n            // Join all content into one string for the prompt index\n            const prompt = BaseChatModel._convertInputToPromptValue(baseMessage).toString();\n            const result = await cache.lookup(prompt, llmStringKey);\n            if (result == null) {\n                missingPromptIndices.push(index);\n            }\n            return result;\n        }));\n        // Map run managers to the results before filtering out null results\n        // Null results are just absent from the cache.\n        const cachedResults = results\n            .map((result, index) => ({ result, runManager: runManagers?.[index] }))\n            .filter(({ result }) => (result.status === \"fulfilled\" && result.value != null) ||\n            result.status === \"rejected\");\n        // Handle results and call run managers\n        const generations = [];\n        await Promise.all(cachedResults.map(async ({ result: promiseResult, runManager }, i) => {\n            if (promiseResult.status === \"fulfilled\") {\n                const result = promiseResult.value;\n                generations[i] = result.map((result) => {\n                    if (\"message\" in result &&\n                        isBaseMessage(result.message) &&\n                        isAIMessage(result.message)) {\n                        // eslint-disable-next-line no-param-reassign\n                        result.message.usage_metadata = {\n                            input_tokens: 0,\n                            output_tokens: 0,\n                            total_tokens: 0,\n                        };\n                    }\n                    // eslint-disable-next-line no-param-reassign\n                    result.generationInfo = {\n                        ...result.generationInfo,\n                        tokenUsage: {},\n                    };\n                    return result;\n                });\n                if (result.length) {\n                    await runManager?.handleLLMNewToken(result[0].text);\n                }\n                return runManager?.handleLLMEnd({\n                    generations: [result],\n                }, undefined, undefined, undefined, {\n                    cached: true,\n                });\n            }\n            else {\n                // status === \"rejected\"\n                await runManager?.handleLLMError(promiseResult.reason, undefined, undefined, undefined, {\n                    cached: true,\n                });\n                return Promise.reject(promiseResult.reason);\n            }\n        }));\n        const output = {\n            generations,\n            missingPromptIndices,\n            startedRunManagers: runManagers,\n        };\n        // This defines RUN_KEY as a non-enumerable property on the output object\n        // so that it is not serialized when the output is stringified, and so that\n        // it isnt included when listing the keys of the output object.\n        Object.defineProperty(output, RUN_KEY, {\n            value: runManagers\n                ? { runIds: runManagers?.map((manager) => manager.runId) }\n                : undefined,\n            configurable: true,\n        });\n        return output;\n    }\n    /**\n     * Generates chat based on the input messages.\n     * @param messages An array of arrays of BaseMessage instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to an LLMResult.\n     */\n    async generate(messages, options, callbacks) {\n        // parse call options\n        let parsedOptions;\n        if (Array.isArray(options)) {\n            parsedOptions = { stop: options };\n        }\n        else {\n            parsedOptions = options;\n        }\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\n        const [runnableConfig, callOptions] = this._separateRunnableConfigFromCallOptionsCompat(parsedOptions);\n        runnableConfig.callbacks = runnableConfig.callbacks ?? callbacks;\n        if (!this.cache) {\n            return this._generateUncached(baseMessages, callOptions, runnableConfig);\n        }\n        const { cache } = this;\n        const llmStringKey = this._getSerializedCacheKeyParametersForCall(callOptions);\n        const { generations, missingPromptIndices, startedRunManagers } = await this._generateCached({\n            messages: baseMessages,\n            cache,\n            llmStringKey,\n            parsedOptions: callOptions,\n            handledOptions: runnableConfig,\n        });\n        let llmOutput = {};\n        if (missingPromptIndices.length > 0) {\n            const results = await this._generateUncached(missingPromptIndices.map((i) => baseMessages[i]), callOptions, runnableConfig, startedRunManagers !== undefined\n                ? missingPromptIndices.map((i) => startedRunManagers?.[i])\n                : undefined);\n            await Promise.all(results.generations.map(async (generation, index) => {\n                const promptIndex = missingPromptIndices[index];\n                generations[promptIndex] = generation;\n                // Join all content into one string for the prompt index\n                const prompt = BaseChatModel._convertInputToPromptValue(baseMessages[promptIndex]).toString();\n                return cache.update(prompt, llmStringKey, generation);\n            }));\n            llmOutput = results.llmOutput ?? {};\n        }\n        return { generations, llmOutput };\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    invocationParams(_options) {\n        return {};\n    }\n    _modelType() {\n        return \"base_chat_model\";\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this.invocationParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    /**\n     * Generates a prompt based on the input prompt values.\n     * @param promptValues An array of BasePromptValue instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to an LLMResult.\n     */\n    async generatePrompt(promptValues, options, callbacks) {\n        const promptMessages = promptValues.map((promptValue) => promptValue.toChatMessages());\n        return this.generate(promptMessages, options, callbacks);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Makes a single call to the chat model.\n     * @param messages An array of BaseMessage instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a BaseMessage.\n     */\n    async call(messages, options, callbacks) {\n        const result = await this.generate([messages.map(coerceMessageLikeToMessage)], options, callbacks);\n        const generations = result.generations;\n        return generations[0][0].message;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Makes a single call to the chat model with a prompt value.\n     * @param promptValue The value of the prompt.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a BaseMessage.\n     */\n    async callPrompt(promptValue, options, callbacks) {\n        const promptMessages = promptValue.toChatMessages();\n        return this.call(promptMessages, options, callbacks);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Predicts the next message based on the input messages.\n     * @param messages An array of BaseMessage instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a BaseMessage.\n     */\n    async predictMessages(messages, options, callbacks) {\n        return this.call(messages, options, callbacks);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Predicts the next message based on a text input.\n     * @param text The text input.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a string.\n     */\n    async predict(text, options, callbacks) {\n        const message = new HumanMessage(text);\n        const result = await this.call([message], options, callbacks);\n        if (typeof result.content !== \"string\") {\n            throw new Error(\"Cannot use predict when output is not a string.\");\n        }\n        return result.content;\n    }\n    withStructuredOutput(outputSchema, config) {\n        if (typeof this.bindTools !== \"function\") {\n            throw new Error(`Chat model must implement \".bindTools()\" to use withStructuredOutput.`);\n        }\n        if (config?.strict) {\n            throw new Error(`\"strict\" mode is not supported for this model by default.`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const schema = outputSchema;\n        const name = config?.name;\n        const description = getSchemaDescription(schema) ?? \"A function available to call.\";\n        const method = config?.method;\n        const includeRaw = config?.includeRaw;\n        if (method === \"jsonMode\") {\n            throw new Error(`Base withStructuredOutput implementation only supports \"functionCalling\" as a method.`);\n        }\n        let functionName = name ?? \"extract\";\n        let tools;\n        if (isInteropZodSchema(schema)) {\n            tools = [\n                {\n                    type: \"function\",\n                    function: {\n                        name: functionName,\n                        description,\n                        parameters: toJsonSchema(schema),\n                    },\n                },\n            ];\n        }\n        else {\n            if (\"name\" in schema) {\n                functionName = schema.name;\n            }\n            tools = [\n                {\n                    type: \"function\",\n                    function: {\n                        name: functionName,\n                        description,\n                        parameters: schema,\n                    },\n                },\n            ];\n        }\n        const llm = this.bindTools(tools);\n        const outputParser = RunnableLambda.from((input) => {\n            if (!input.tool_calls || input.tool_calls.length === 0) {\n                throw new Error(\"No tool calls found in the response.\");\n            }\n            const toolCall = input.tool_calls.find((tc) => tc.name === functionName);\n            if (!toolCall) {\n                throw new Error(`No tool call found with name ${functionName}.`);\n            }\n            return toolCall.args;\n        });\n        if (!includeRaw) {\n            return llm.pipe(outputParser).withConfig({\n                runName: \"StructuredOutput\",\n            });\n        }\n        const parserAssign = RunnablePassthrough.assign({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            parsed: (input, config) => outputParser.invoke(input.raw, config),\n        });\n        const parserNone = RunnablePassthrough.assign({\n            parsed: () => null,\n        });\n        const parsedWithFallback = parserAssign.withFallbacks({\n            fallbacks: [parserNone],\n        });\n        return RunnableSequence.from([\n            {\n                raw: llm,\n            },\n            parsedWithFallback,\n        ]).withConfig({\n            runName: \"StructuredOutputRunnable\",\n        });\n    }\n}\n/**\n * An abstract class that extends BaseChatModel and provides a simple\n * implementation of _generate.\n */\nexport class SimpleChatModel extends BaseChatModel {\n    async _generate(messages, options, runManager) {\n        const text = await this._call(messages, options, runManager);\n        const message = new AIMessage(text);\n        if (typeof message.content !== \"string\") {\n            throw new Error(\"Cannot generate with a simple chat model when output is not a string.\");\n        }\n        return {\n            generations: [\n                {\n                    text: message.content,\n                    message,\n                },\n            ],\n        };\n    }\n}\n","import { Runnable } from \"../runnables/index.js\";\nimport { addLangChainErrorFields } from \"../errors/index.js\";\n/**\n * Abstract base class for parsing the output of a Large Language Model\n * (LLM) call. It provides methods for parsing the result of an LLM call\n * and invoking the parser with a given input.\n */\nexport class BaseLLMOutputParser extends Runnable {\n    /**\n     * Parses the result of an LLM call with a given prompt. By default, it\n     * simply calls `parseResult`.\n     * @param generations The generations from an LLM call.\n     * @param _prompt The prompt used in the LLM call.\n     * @param callbacks Optional callbacks.\n     * @returns A promise of the parsed output.\n     */\n    parseResultWithPrompt(generations, _prompt, callbacks) {\n        return this.parseResult(generations, callbacks);\n    }\n    _baseMessageToString(message) {\n        return typeof message.content === \"string\"\n            ? message.content\n            : this._baseMessageContentToString(message.content);\n    }\n    _baseMessageContentToString(content) {\n        return JSON.stringify(content);\n    }\n    /**\n     * Calls the parser with a given input and optional configuration options.\n     * If the input is a string, it creates a generation with the input as\n     * text and calls `parseResult`. If the input is a `BaseMessage`, it\n     * creates a generation with the input as a message and the content of the\n     * input as text, and then calls `parseResult`.\n     * @param input The input to the parser, which can be a string or a `BaseMessage`.\n     * @param options Optional configuration options.\n     * @returns A promise of the parsed output.\n     */\n    async invoke(input, options) {\n        if (typeof input === \"string\") {\n            return this._callWithConfig(async (input, options) => this.parseResult([{ text: input }], options?.callbacks), input, { ...options, runType: \"parser\" });\n        }\n        else {\n            return this._callWithConfig(async (input, options) => this.parseResult([\n                {\n                    message: input,\n                    text: this._baseMessageToString(input),\n                },\n            ], options?.callbacks), input, { ...options, runType: \"parser\" });\n        }\n    }\n}\n/**\n * Class to parse the output of an LLM call.\n */\nexport class BaseOutputParser extends BaseLLMOutputParser {\n    parseResult(generations, callbacks) {\n        return this.parse(generations[0].text, callbacks);\n    }\n    async parseWithPrompt(text, _prompt, callbacks) {\n        return this.parse(text, callbacks);\n    }\n    /**\n     * Return the string type key uniquely identifying this class of parser\n     */\n    _type() {\n        throw new Error(\"_type not implemented\");\n    }\n}\n/**\n * Exception that output parsers should raise to signify a parsing error.\n *\n * This exists to differentiate parsing errors from other code or execution errors\n * that also may arise inside the output parser. OutputParserExceptions will be\n * available to catch and handle in ways to fix the parsing error, while other\n * errors will be raised.\n *\n * @param message - The error that's being re-raised or an error message.\n * @param llmOutput - String model output which is error-ing.\n * @param observation - String explanation of error which can be passed to a\n *     model to try and remediate the issue.\n * @param sendToLLM - Whether to send the observation and llm_output back to an Agent\n *     after an OutputParserException has been raised. This gives the underlying\n *     model driving the agent the context that the previous output was improperly\n *     structured, in the hopes that it will update the output to the correct\n *     format.\n */\nexport class OutputParserException extends Error {\n    constructor(message, llmOutput, observation, sendToLLM = false) {\n        super(message);\n        Object.defineProperty(this, \"llmOutput\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sendToLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llmOutput = llmOutput;\n        this.observation = observation;\n        this.sendToLLM = sendToLLM;\n        if (sendToLLM) {\n            if (observation === undefined || llmOutput === undefined) {\n                throw new Error(\"Arguments 'observation' & 'llmOutput' are required if 'sendToLlm' is true\");\n            }\n        }\n        addLangChainErrorFields(this, \"OUTPUT_PARSING_FAILURE\");\n    }\n}\n","import { deepCompareStrict } from \"@cfworker/json-schema\";\nimport { BaseOutputParser } from \"./base.js\";\nimport { isBaseMessage, isBaseMessageChunk, } from \"../messages/base.js\";\nimport { convertToChunk } from \"../messages/utils.js\";\nimport { GenerationChunk, ChatGenerationChunk, } from \"../outputs.js\";\n/**\n * Class to parse the output of an LLM call that also allows streaming inputs.\n */\nexport class BaseTransformOutputParser extends BaseOutputParser {\n    async *_transform(inputGenerator) {\n        for await (const chunk of inputGenerator) {\n            if (typeof chunk === \"string\") {\n                yield this.parseResult([{ text: chunk }]);\n            }\n            else {\n                yield this.parseResult([\n                    {\n                        message: chunk,\n                        text: this._baseMessageToString(chunk),\n                    },\n                ]);\n            }\n        }\n    }\n    /**\n     * Transforms an asynchronous generator of input into an asynchronous\n     * generator of parsed output.\n     * @param inputGenerator An asynchronous generator of input.\n     * @param options A configuration object.\n     * @returns An asynchronous generator of parsed output.\n     */\n    async *transform(inputGenerator, options) {\n        yield* this._transformStreamWithConfig(inputGenerator, this._transform.bind(this), {\n            ...options,\n            runType: \"parser\",\n        });\n    }\n}\n/**\n * A base class for output parsers that can handle streaming input. It\n * extends the `BaseTransformOutputParser` class and provides a method for\n * converting parsed outputs into a diff format.\n */\nexport class BaseCumulativeTransformOutputParser extends BaseTransformOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"diff\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.diff = fields?.diff ?? this.diff;\n    }\n    async *_transform(inputGenerator) {\n        let prevParsed;\n        let accGen;\n        for await (const chunk of inputGenerator) {\n            if (typeof chunk !== \"string\" && typeof chunk.content !== \"string\") {\n                throw new Error(\"Cannot handle non-string output.\");\n            }\n            let chunkGen;\n            if (isBaseMessageChunk(chunk)) {\n                if (typeof chunk.content !== \"string\") {\n                    throw new Error(\"Cannot handle non-string message output.\");\n                }\n                chunkGen = new ChatGenerationChunk({\n                    message: chunk,\n                    text: chunk.content,\n                });\n            }\n            else if (isBaseMessage(chunk)) {\n                if (typeof chunk.content !== \"string\") {\n                    throw new Error(\"Cannot handle non-string message output.\");\n                }\n                chunkGen = new ChatGenerationChunk({\n                    message: convertToChunk(chunk),\n                    text: chunk.content,\n                });\n            }\n            else {\n                chunkGen = new GenerationChunk({ text: chunk });\n            }\n            if (accGen === undefined) {\n                accGen = chunkGen;\n            }\n            else {\n                accGen = accGen.concat(chunkGen);\n            }\n            const parsed = await this.parsePartialResult([accGen]);\n            if (parsed !== undefined &&\n                parsed !== null &&\n                !deepCompareStrict(parsed, prevParsed)) {\n                if (this.diff) {\n                    yield this._diff(prevParsed, parsed);\n                }\n                else {\n                    yield parsed;\n                }\n                prevParsed = parsed;\n            }\n        }\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n}\n","import { z } from \"zod/v3\";\nimport { BaseOutputParser, OutputParserException, } from \"./base.js\";\nimport { interopParseAsync, } from \"../utils/types/zod.js\";\nimport { toJsonSchema, } from \"../utils/json_schema.js\";\nexport class StructuredOutputParser extends BaseOutputParser {\n    static lc_name() {\n        return \"StructuredOutputParser\";\n    }\n    toJSON() {\n        return this.toJSONNotImplemented();\n    }\n    constructor(schema) {\n        super(schema);\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: schema\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"structured\"]\n        });\n    }\n    /**\n     * Creates a new StructuredOutputParser from a Zod schema.\n     * @param schema The Zod schema which the output should match\n     * @returns A new instance of StructuredOutputParser.\n     */\n    static fromZodSchema(schema) {\n        return new this(schema);\n    }\n    /**\n     * Creates a new StructuredOutputParser from a set of names and\n     * descriptions.\n     * @param schemas An object where each key is a name and each value is a description\n     * @returns A new instance of StructuredOutputParser.\n     */\n    static fromNamesAndDescriptions(schemas) {\n        const zodSchema = z.object(Object.fromEntries(Object.entries(schemas).map(([name, description]) => [name, z.string().describe(description)])));\n        return new this(zodSchema);\n    }\n    /**\n     * Returns a markdown code snippet with a JSON object formatted according\n     * to the schema.\n     * @param options Optional. The options for formatting the instructions\n     * @returns A markdown code snippet with a JSON object formatted according to the schema.\n     */\n    getFormatInstructions() {\n        return `You must format your output as a JSON value that adheres to a given \"JSON Schema\" instance.\n\n\"JSON Schema\" is a declarative language that allows you to annotate and validate JSON documents.\n\nFor example, the example \"JSON Schema\" instance {{\"properties\": {{\"foo\": {{\"description\": \"a list of test words\", \"type\": \"array\", \"items\": {{\"type\": \"string\"}}}}}}, \"required\": [\"foo\"]}}\nwould match an object with one required property, \"foo\". The \"type\" property specifies \"foo\" must be an \"array\", and the \"description\" property semantically describes it as \"a list of test words\". The items within \"foo\" must be strings.\nThus, the object {{\"foo\": [\"bar\", \"baz\"]}} is a well-formatted instance of this example \"JSON Schema\". The object {{\"properties\": {{\"foo\": [\"bar\", \"baz\"]}}}} is not well-formatted.\n\nYour output will be parsed and type-checked according to the provided schema instance, so make sure all fields in your output match the schema exactly and there are no trailing commas!\n\nHere is the JSON Schema instance your output must adhere to. Include the enclosing markdown codeblock:\n\\`\\`\\`json\n${JSON.stringify(toJsonSchema(this.schema))}\n\\`\\`\\`\n`;\n    }\n    /**\n     * Parses the given text according to the schema.\n     * @param text The text to parse\n     * @returns The parsed output.\n     */\n    async parse(text) {\n        try {\n            const json = text.includes(\"```\")\n                ? text.trim().split(/```(?:json)?/)[1]\n                : text.trim();\n            const escapedJson = json\n                .replace(/\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"/g, (_match, capturedGroup) => {\n                const escapedInsideQuotes = capturedGroup.replace(/\\n/g, \"\\\\n\");\n                return `\"${escapedInsideQuotes}\"`;\n            })\n                .replace(/\\n/g, \"\");\n            return await interopParseAsync(this.schema, JSON.parse(escapedJson));\n        }\n        catch (e) {\n            throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`, text);\n        }\n    }\n}\n/**\n * A specific type of `StructuredOutputParser` that parses JSON data\n * formatted as a markdown code snippet.\n */\nexport class JsonMarkdownStructuredOutputParser extends StructuredOutputParser {\n    static lc_name() {\n        return \"JsonMarkdownStructuredOutputParser\";\n    }\n    getFormatInstructions(options) {\n        const interpolationDepth = options?.interpolationDepth ?? 1;\n        if (interpolationDepth < 1) {\n            throw new Error(\"f string interpolation depth must be at least 1\");\n        }\n        return `Return a markdown code snippet with a JSON object formatted to look like:\\n\\`\\`\\`json\\n${this._schemaToInstruction(toJsonSchema(this.schema))\n            .replaceAll(\"{\", \"{\".repeat(interpolationDepth))\n            .replaceAll(\"}\", \"}\".repeat(interpolationDepth))}\\n\\`\\`\\``;\n    }\n    _schemaToInstruction(schemaInput, indent = 2) {\n        const schema = schemaInput;\n        if (\"type\" in schema) {\n            let nullable = false;\n            let type;\n            if (Array.isArray(schema.type)) {\n                const nullIdx = schema.type.findIndex((type) => type === \"null\");\n                if (nullIdx !== -1) {\n                    nullable = true;\n                    schema.type.splice(nullIdx, 1);\n                }\n                type = schema.type.join(\" | \");\n            }\n            else {\n                type = schema.type;\n            }\n            if (schema.type === \"object\" && schema.properties) {\n                const description = schema.description\n                    ? ` // ${schema.description}`\n                    : \"\";\n                const properties = Object.entries(schema.properties)\n                    .map(([key, value]) => {\n                    const isOptional = schema.required?.includes(key)\n                        ? \"\"\n                        : \" (optional)\";\n                    return `${\" \".repeat(indent)}\"${key}\": ${this._schemaToInstruction(value, indent + 2)}${isOptional}`;\n                })\n                    .join(\"\\n\");\n                return `{\\n${properties}\\n${\" \".repeat(indent - 2)}}${description}`;\n            }\n            if (schema.type === \"array\" && schema.items) {\n                const description = schema.description\n                    ? ` // ${schema.description}`\n                    : \"\";\n                return `array[\\n${\" \".repeat(indent)}${this._schemaToInstruction(schema.items, indent + 2)}\\n${\" \".repeat(indent - 2)}] ${description}`;\n            }\n            const isNullable = nullable ? \" (nullable)\" : \"\";\n            const description = schema.description ? ` // ${schema.description}` : \"\";\n            return `${type}${description}${isNullable}`;\n        }\n        if (\"anyOf\" in schema) {\n            return schema.anyOf\n                .map((s) => this._schemaToInstruction(s, indent))\n                .join(`\\n${\" \".repeat(indent - 2)}`);\n        }\n        throw new Error(\"unsupported schema type\");\n    }\n    static fromZodSchema(schema) {\n        return new this(schema);\n    }\n    static fromNamesAndDescriptions(schemas) {\n        const zodSchema = z.object(Object.fromEntries(Object.entries(schemas).map(([name, description]) => [name, z.string().describe(description)])));\n        return new this(zodSchema);\n    }\n}\n/**\n * A type of `StructuredOutputParser` that handles asymmetric input and\n * output schemas.\n */\nexport class AsymmetricStructuredOutputParser extends BaseOutputParser {\n    constructor({ inputSchema }) {\n        super(...arguments);\n        Object.defineProperty(this, \"structuredInputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.structuredInputParser = new JsonMarkdownStructuredOutputParser(inputSchema);\n    }\n    async parse(text) {\n        let parsedInput;\n        try {\n            parsedInput = await this.structuredInputParser.parse(text);\n        }\n        catch (e) {\n            throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`, text);\n        }\n        return this.outputProcessor(parsedInput);\n    }\n    getFormatInstructions() {\n        return this.structuredInputParser.getFormatInstructions();\n    }\n}\n","import { BaseCumulativeTransformOutputParser } from \"./transform.js\";\nimport { compare } from \"../utils/json_patch.js\";\nimport { parseJsonMarkdown, parsePartialJson } from \"../utils/json.js\";\n/**\n * Class for parsing the output of an LLM into a JSON object.\n */\nexport class JsonOutputParser extends BaseCumulativeTransformOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    static lc_name() {\n        return \"JsonOutputParser\";\n    }\n    _diff(prev, next) {\n        if (!next) {\n            return undefined;\n        }\n        if (!prev) {\n            return [{ op: \"replace\", path: \"\", value: next }];\n        }\n        return compare(prev, next);\n    }\n    // This should actually return Partial<T>, but there's no way\n    // to specify emitted chunks as instances separate from the main output type.\n    async parsePartialResult(generations) {\n        return parseJsonMarkdown(generations[0].text);\n    }\n    async parse(text) {\n        return parseJsonMarkdown(text, JSON.parse);\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n}\nexport { parsePartialJson, parseJsonMarkdown };\n","import { OutputParserException } from \"../base.js\";\nimport { parsePartialJson } from \"../json.js\";\nimport { BaseCumulativeTransformOutputParser, } from \"../transform.js\";\nimport { isAIMessage } from \"../../messages/ai.js\";\nimport { interopSafeParseAsync, } from \"../../utils/types/zod.js\";\nexport function parseToolCall(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCall, options) {\n    if (rawToolCall.function === undefined) {\n        return undefined;\n    }\n    let functionArgs;\n    if (options?.partial) {\n        try {\n            functionArgs = parsePartialJson(rawToolCall.function.arguments ?? \"{}\");\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    else {\n        try {\n            functionArgs = JSON.parse(rawToolCall.function.arguments);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (e) {\n            throw new OutputParserException([\n                `Function \"${rawToolCall.function.name}\" arguments:`,\n                ``,\n                rawToolCall.function.arguments,\n                ``,\n                `are not valid JSON.`,\n                `Error: ${e.message}`,\n            ].join(\"\\n\"));\n        }\n    }\n    const parsedToolCall = {\n        name: rawToolCall.function.name,\n        args: functionArgs,\n        type: \"tool_call\",\n    };\n    if (options?.returnId) {\n        parsedToolCall.id = rawToolCall.id;\n    }\n    return parsedToolCall;\n}\nexport function convertLangChainToolCallToOpenAI(toolCall) {\n    if (toolCall.id === undefined) {\n        throw new Error(`All OpenAI tool calls must have an \"id\" field.`);\n    }\n    return {\n        id: toolCall.id,\n        type: \"function\",\n        function: {\n            name: toolCall.name,\n            arguments: JSON.stringify(toolCall.args),\n        },\n    };\n}\nexport function makeInvalidToolCall(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCall, errorMsg) {\n    return {\n        name: rawToolCall.function?.name,\n        args: rawToolCall.function?.arguments,\n        id: rawToolCall.id,\n        error: errorMsg,\n        type: \"invalid_tool_call\",\n    };\n}\n/**\n * Class for parsing the output of a tool-calling LLM into a JSON object.\n */\nexport class JsonOutputToolsParser extends BaseCumulativeTransformOutputParser {\n    static lc_name() {\n        return \"JsonOutputToolsParser\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"returnId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"openai_tools\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.returnId = fields?.returnId ?? this.returnId;\n    }\n    _diff() {\n        throw new Error(\"Not supported.\");\n    }\n    async parse() {\n        throw new Error(\"Not implemented.\");\n    }\n    async parseResult(generations) {\n        const result = await this.parsePartialResult(generations, false);\n        return result;\n    }\n    /**\n     * Parses the output and returns a JSON object. If `argsOnly` is true,\n     * only the arguments of the function call are returned.\n     * @param generations The output of the LLM to parse.\n     * @returns A JSON object representation of the function call or its arguments.\n     */\n    async parsePartialResult(generations, partial = true\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        const message = generations[0].message;\n        let toolCalls;\n        if (isAIMessage(message) && message.tool_calls?.length) {\n            toolCalls = message.tool_calls.map((toolCall) => {\n                const { id, ...rest } = toolCall;\n                if (!this.returnId) {\n                    return rest;\n                }\n                return {\n                    id,\n                    ...rest,\n                };\n            });\n        }\n        else if (message.additional_kwargs.tool_calls !== undefined) {\n            const rawToolCalls = JSON.parse(JSON.stringify(message.additional_kwargs.tool_calls));\n            toolCalls = rawToolCalls.map((rawToolCall) => {\n                return parseToolCall(rawToolCall, { returnId: this.returnId, partial });\n            });\n        }\n        if (!toolCalls) {\n            return [];\n        }\n        const parsedToolCalls = [];\n        for (const toolCall of toolCalls) {\n            if (toolCall !== undefined) {\n                const backwardsCompatibleToolCall = {\n                    type: toolCall.name,\n                    args: toolCall.args,\n                    id: toolCall.id,\n                };\n                parsedToolCalls.push(backwardsCompatibleToolCall);\n            }\n        }\n        return parsedToolCalls;\n    }\n}\n/**\n * Class for parsing the output of a tool-calling LLM into a JSON object if you are\n * expecting only a single tool to be called.\n */\nexport class JsonOutputKeyToolsParser extends JsonOutputToolsParser {\n    static lc_name() {\n        return \"JsonOutputKeyToolsParser\";\n    }\n    constructor(params) {\n        super(params);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"openai_tools\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"returnId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        /** The type of tool calls to return. */\n        Object.defineProperty(this, \"keyName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Whether to return only the first tool call. */\n        Object.defineProperty(this, \"returnSingle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"zodSchema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.keyName = params.keyName;\n        this.returnSingle = params.returnSingle ?? this.returnSingle;\n        this.zodSchema = params.zodSchema;\n    }\n    async _validateResult(result) {\n        if (this.zodSchema === undefined) {\n            return result;\n        }\n        const zodParsedResult = await interopSafeParseAsync(this.zodSchema, result);\n        if (zodParsedResult.success) {\n            return zodParsedResult.data;\n        }\n        else {\n            throw new OutputParserException(`Failed to parse. Text: \"${JSON.stringify(result, null, 2)}\". Error: ${JSON.stringify(zodParsedResult.error?.issues)}`, JSON.stringify(result, null, 2));\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async parsePartialResult(generations) {\n        const results = await super.parsePartialResult(generations);\n        const matchingResults = results.filter((result) => result.type === this.keyName);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let returnedValues = matchingResults;\n        if (!matchingResults.length) {\n            return undefined;\n        }\n        if (!this.returnId) {\n            returnedValues = matchingResults.map((result) => result.args);\n        }\n        if (this.returnSingle) {\n            return returnedValues[0];\n        }\n        return returnedValues;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async parseResult(generations) {\n        const results = await super.parsePartialResult(generations, false);\n        const matchingResults = results.filter((result) => result.type === this.keyName);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let returnedValues = matchingResults;\n        if (!matchingResults.length) {\n            return undefined;\n        }\n        if (!this.returnId) {\n            returnedValues = matchingResults.map((result) => result.args);\n        }\n        if (this.returnSingle) {\n            return this._validateResult(returnedValues[0]);\n        }\n        const toolCallResults = await Promise.all(returnedValues.map((value) => this._validateResult(value)));\n        return toolCallResults;\n    }\n}\n","export const ignoreOverride = Symbol('Let zodToJsonSchema decide on which parser to use');\nconst defaultOptions = {\n    name: undefined,\n    $refStrategy: 'root',\n    effectStrategy: 'input',\n    pipeStrategy: 'all',\n    dateStrategy: 'format:date-time',\n    mapStrategy: 'entries',\n    nullableStrategy: 'from-target',\n    removeAdditionalStrategy: 'passthrough',\n    definitionPath: 'definitions',\n    target: 'jsonSchema7',\n    strictUnions: false,\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: 'escape',\n    applyRegexFlags: false,\n    emailStrategy: 'format:email',\n    base64Strategy: 'contentEncoding:base64',\n    nameStrategy: 'ref',\n};\nexport const getDefaultOptions = (options) => {\n    // We need to add `definitions` here as we may mutate it\n    return (typeof options === 'string' ?\n        {\n            ...defaultOptions,\n            basePath: ['#'],\n            definitions: {},\n            name: options,\n        }\n        : {\n            ...defaultOptions,\n            basePath: ['#'],\n            definitions: {},\n            ...options,\n        });\n};\n//# sourceMappingURL=Options.mjs.map","export const zodDef = (zodSchema) => {\n    return '_def' in zodSchema ? zodSchema._def : zodSchema;\n};\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n//# sourceMappingURL=util.mjs.map","import { getDefaultOptions } from \"./Options.mjs\";\nimport { zodDef } from \"./util.mjs\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined ?\n        [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seenRefs: new Set(),\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            zodDef(def),\n            {\n                def: zodDef(def),\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n//# sourceMappingURL=Refs.mjs.map","export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n//# sourceMappingURL=errorMessages.mjs.map","export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n","import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n","export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n","import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n","export function parseAnyDef() {\n    return {};\n}\n//# sourceMappingURL=any.mjs.map","import { ZodFirstPartyTypeKind } from 'zod';\nimport { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nimport { parseDef } from \"../parseDef.mjs\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: 'array',\n    };\n    if (def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'items'],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, 'minItems', def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, 'maxItems', def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, 'minItems', def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, 'maxItems', def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n//# sourceMappingURL=array.mjs.map","import { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nexport function parseBigintDef(def, refs) {\n    const res = {\n        type: 'integer',\n        format: 'int64',\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case 'min':\n                if (refs.target === 'jsonSchema7') {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, 'minimum', check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, 'exclusiveMinimum', check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, 'minimum', check.value, check.message, refs);\n                }\n                break;\n            case 'max':\n                if (refs.target === 'jsonSchema7') {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, 'maximum', check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, 'exclusiveMaximum', check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, 'maximum', check.value, check.message, refs);\n                }\n                break;\n            case 'multipleOf':\n                setResponseValueAndErrors(res, 'multipleOf', check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n//# sourceMappingURL=bigint.mjs.map","export function parseBooleanDef() {\n    return {\n        type: 'boolean',\n    };\n}\n//# sourceMappingURL=boolean.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parseBrandedDef(_def, refs) {\n    return parseDef(_def.type._def, refs);\n}\n//# sourceMappingURL=branded.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n//# sourceMappingURL=catch.mjs.map","import { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nexport function parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case 'string':\n        case 'format:date-time':\n            return {\n                type: 'string',\n                format: 'date-time',\n            };\n        case 'format:date':\n            return {\n                type: 'string',\n                format: 'date',\n            };\n        case 'integer':\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: 'integer',\n        format: 'unix-time',\n    };\n    if (refs.target === 'openApi3') {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case 'min':\n                setResponseValueAndErrors(res, 'minimum', check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case 'max':\n                setResponseValueAndErrors(res, 'maximum', check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n//# sourceMappingURL=date.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n//# sourceMappingURL=default.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parseEffectsDef(_def, refs, forceResolution) {\n    return refs.effectStrategy === 'input' ? parseDef(_def.schema._def, refs, forceResolution) : {};\n}\n//# sourceMappingURL=effects.mjs.map","export function parseEnumDef(def) {\n    return {\n        type: 'string',\n        enum: [...def.values],\n    };\n}\n//# sourceMappingURL=enum.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nconst isJsonSchema7AllOfType = (type) => {\n    if ('type' in type && type.type === 'string')\n        return false;\n    return 'allOf' in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'allOf', '0'],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'allOf', '1'],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === 'jsonSchema2019-09' ? { unevaluatedProperties: false } : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if ('additionalProperties' in schema && schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length ?\n        {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n//# sourceMappingURL=intersection.mjs.map","export function parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== 'bigint' &&\n        parsedType !== 'number' &&\n        parsedType !== 'boolean' &&\n        parsedType !== 'string') {\n        return {\n            type: Array.isArray(def.value) ? 'array' : 'object',\n        };\n    }\n    if (refs.target === 'openApi3') {\n        return {\n            type: parsedType === 'bigint' ? 'integer' : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === 'bigint' ? 'integer' : parsedType,\n        const: def.value,\n    };\n}\n//# sourceMappingURL=literal.mjs.map","import { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nlet emojiRegex;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp('^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$', 'u');\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: 'string',\n    };\n    function processPattern(value) {\n        return refs.patternStrategy === 'escape' ? escapeNonAlphaNumeric(value) : value;\n    }\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case 'min':\n                    setResponseValueAndErrors(res, 'minLength', typeof res.minLength === 'number' ? Math.max(res.minLength, check.value) : check.value, check.message, refs);\n                    break;\n                case 'max':\n                    setResponseValueAndErrors(res, 'maxLength', typeof res.maxLength === 'number' ? Math.min(res.maxLength, check.value) : check.value, check.message, refs);\n                    break;\n                case 'email':\n                    switch (refs.emailStrategy) {\n                        case 'format:email':\n                            addFormat(res, 'email', check.message, refs);\n                            break;\n                        case 'format:idn-email':\n                            addFormat(res, 'idn-email', check.message, refs);\n                            break;\n                        case 'pattern:zod':\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case 'url':\n                    addFormat(res, 'uri', check.message, refs);\n                    break;\n                case 'uuid':\n                    addFormat(res, 'uuid', check.message, refs);\n                    break;\n                case 'regex':\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case 'cuid':\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case 'cuid2':\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case 'startsWith':\n                    addPattern(res, RegExp(`^${processPattern(check.value)}`), check.message, refs);\n                    break;\n                case 'endsWith':\n                    addPattern(res, RegExp(`${processPattern(check.value)}$`), check.message, refs);\n                    break;\n                case 'datetime':\n                    addFormat(res, 'date-time', check.message, refs);\n                    break;\n                case 'date':\n                    addFormat(res, 'date', check.message, refs);\n                    break;\n                case 'time':\n                    addFormat(res, 'time', check.message, refs);\n                    break;\n                case 'duration':\n                    addFormat(res, 'duration', check.message, refs);\n                    break;\n                case 'length':\n                    setResponseValueAndErrors(res, 'minLength', typeof res.minLength === 'number' ? Math.max(res.minLength, check.value) : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, 'maxLength', typeof res.maxLength === 'number' ? Math.min(res.maxLength, check.value) : check.value, check.message, refs);\n                    break;\n                case 'includes': {\n                    addPattern(res, RegExp(processPattern(check.value)), check.message, refs);\n                    break;\n                }\n                case 'ip': {\n                    if (check.version !== 'v6') {\n                        addFormat(res, 'ipv4', check.message, refs);\n                    }\n                    if (check.version !== 'v4') {\n                        addFormat(res, 'ipv6', check.message, refs);\n                    }\n                    break;\n                }\n                case 'emoji':\n                    addPattern(res, zodPatterns.emoji, check.message, refs);\n                    break;\n                case 'ulid': {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case 'base64': {\n                    switch (refs.base64Strategy) {\n                        case 'format:binary': {\n                            addFormat(res, 'binary', check.message, refs);\n                            break;\n                        }\n                        case 'contentEncoding:base64': {\n                            setResponseValueAndErrors(res, 'contentEncoding', 'base64', check.message, refs);\n                            break;\n                        }\n                        case 'pattern:zod': {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case 'nanoid': {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case 'toLowerCase':\n                case 'toUpperCase':\n                case 'trim':\n                    break;\n                default:\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nconst escapeNonAlphaNumeric = (value) => Array.from(value)\n    .map((c) => (/[a-zA-Z0-9]/.test(c) ? c : `\\\\${c}`))\n    .join('');\nconst addFormat = (schema, value, message, refs) => {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message && refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, 'format', value, message, refs);\n    }\n};\nconst addPattern = (schema, regex, message, refs) => {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: processRegExp(regex, refs),\n            ...(message && refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, 'pattern', processRegExp(regex, refs), message, refs);\n    }\n};\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nconst processRegExp = (regexOrFunction, refs) => {\n    const regex = typeof regexOrFunction === 'function' ? regexOrFunction() : regexOrFunction;\n    if (!refs.applyRegexFlags || !regex.flags)\n        return regex.source;\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes('i'), // Case-insensitive\n        m: regex.flags.includes('m'), // `^` and `$` matches adjacent to newline characters\n        s: regex.flags.includes('s'), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = '';\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === '-' && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === '^') {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === '$') {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === '.') {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === '\\\\') {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === ']') {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === '[') {\n            inCharGroup = true;\n        }\n    }\n    try {\n        const regexTest = new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join('/')} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n};\n//# sourceMappingURL=string.mjs.map","import { ZodFirstPartyTypeKind } from 'zod';\nimport { parseDef } from \"../parseDef.mjs\";\nimport { parseStringDef } from \"./string.mjs\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === 'openApi3' && def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: 'object',\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, 'properties', key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: false,\n        };\n    }\n    const schema = {\n        type: 'object',\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'additionalProperties'],\n        }) ?? {},\n    };\n    if (refs.target === 'openApi3') {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString && def.keyType._def.checks?.length) {\n        const keyType = Object.entries(parseStringDef(def.keyType._def, refs)).reduce((acc, [key, value]) => (key === 'type' ? acc : { ...acc, [key]: value }), {});\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    return schema;\n}\n//# sourceMappingURL=record.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nimport { parseRecordDef } from \"./record.mjs\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === 'record') {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'items', 'items', '0'],\n    }) || {};\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'items', 'items', '1'],\n    }) || {};\n    return {\n        type: 'array',\n        maxItems: 125,\n        items: {\n            type: 'array',\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n//# sourceMappingURL=map.mjs.map","export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== 'number';\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1 ?\n            parsedTypes[0] === 'string' ?\n                'string'\n                : 'number'\n            : ['string', 'number'],\n        enum: actualValues,\n    };\n}\n//# sourceMappingURL=nativeEnum.mjs.map","export function parseNeverDef() {\n    return {\n        not: {},\n    };\n}\n//# sourceMappingURL=never.mjs.map","export function parseNullDef(refs) {\n    return refs.target === 'openApi3' ?\n        {\n            enum: ['null'],\n            nullable: true,\n        }\n        : {\n            type: 'null',\n        };\n}\n//# sourceMappingURL=null.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const primitiveMappings = {\n    ZodString: 'string',\n    ZodNumber: 'number',\n    ZodBigInt: 'integer',\n    ZodBoolean: 'boolean',\n    ZodNull: 'null',\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === 'openApi3')\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings && (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === 'ZodLiteral' && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case 'string':\n                case 'number':\n                case 'boolean':\n                    return [...acc, type];\n                case 'bigint':\n                    return [...acc, 'integer'];\n                case 'object':\n                    if (x._def.value === null)\n                        return [...acc, 'null'];\n                case 'symbol':\n                case 'undefined':\n                case 'function':\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === 'ZodEnum')) {\n        return {\n            type: 'string',\n            enum: options.reduce((acc, x) => [...acc, ...x._def.values.filter((x) => !acc.includes(x))], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map ? Array.from(def.options.values()) : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'anyOf', `${i}`],\n    }))\n        .filter((x) => !!x && (!refs.strictUnions || (typeof x === 'object' && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n//# sourceMappingURL=union.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nimport { primitiveMappings } from \"./union.mjs\";\nexport function parseNullableDef(def, refs) {\n    if (['ZodString', 'ZodNumber', 'ZodBigInt', 'ZodBoolean', 'ZodNull'].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === 'openApi3' || refs.nullableStrategy === 'property') {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [primitiveMappings[def.innerType._def.typeName], 'null'],\n        };\n    }\n    if (refs.target === 'openApi3') {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && '$ref' in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'anyOf', '0'],\n    });\n    return base && { anyOf: [base, { type: 'null' }] };\n}\n//# sourceMappingURL=nullable.mjs.map","import { addErrorMessage, setResponseValueAndErrors } from \"../errorMessages.mjs\";\nexport function parseNumberDef(def, refs) {\n    const res = {\n        type: 'number',\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case 'int':\n                res.type = 'integer';\n                addErrorMessage(res, 'type', check.message, refs);\n                break;\n            case 'min':\n                if (refs.target === 'jsonSchema7') {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, 'minimum', check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, 'exclusiveMinimum', check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, 'minimum', check.value, check.message, refs);\n                }\n                break;\n            case 'max':\n                if (refs.target === 'jsonSchema7') {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, 'maximum', check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, 'exclusiveMaximum', check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, 'maximum', check.value, check.message, refs);\n                }\n                break;\n            case 'multipleOf':\n                setResponseValueAndErrors(res, 'multipleOf', check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n//# sourceMappingURL=number.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nfunction decideAdditionalProperties(def, refs) {\n    if (refs.removeAdditionalStrategy === 'strict') {\n        return def.catchall._def.typeName === 'ZodNever' ?\n            def.unknownKeys !== 'strict'\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'additionalProperties'],\n            }) ?? true;\n    }\n    else {\n        return def.catchall._def.typeName === 'ZodNever' ?\n            def.unknownKeys === 'passthrough'\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'additionalProperties'],\n            }) ?? true;\n    }\n}\nexport function parseObjectDef(def, refs) {\n    const result = {\n        type: 'object',\n        ...Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\n            if (propDef === undefined || propDef._def === undefined)\n                return acc;\n            const propertyPath = [...refs.currentPath, 'properties', propName];\n            const parsedDef = parseDef(propDef._def, {\n                ...refs,\n                currentPath: propertyPath,\n                propertyPath,\n            });\n            if (parsedDef === undefined)\n                return acc;\n            if (refs.openaiStrictMode &&\n                propDef.isOptional() &&\n                !propDef.isNullable() &&\n                typeof propDef._def?.defaultValue === 'undefined') {\n                throw new Error(`Zod field at \\`${propertyPath.join('/')}\\` uses \\`.optional()\\` without \\`.nullable()\\` which is not supported by the API. See: https://platform.openai.com/docs/guides/structured-outputs?api-mode=responses#all-fields-must-be-required`);\n            }\n            return {\n                properties: {\n                    ...acc.properties,\n                    [propName]: parsedDef,\n                },\n                required: propDef.isOptional() && !refs.openaiStrictMode ? acc.required : [...acc.required, propName],\n            };\n        }, { properties: {}, required: [] }),\n        additionalProperties: decideAdditionalProperties(def, refs),\n    };\n    if (!result.required.length)\n        delete result.required;\n    return result;\n}\n//# sourceMappingURL=object.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'anyOf', '1'],\n    });\n    return innerSchema ?\n        {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\n//# sourceMappingURL=optional.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === 'input') {\n        return parseDef(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === 'output') {\n        return parseDef(def.out._def, refs);\n    }\n    const a = parseDef(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'allOf', '0'],\n    });\n    const b = parseDef(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'allOf', a ? '1' : '0'],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n//# sourceMappingURL=pipeline.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parsePromiseDef(def, refs) {\n    return parseDef(def.type._def, refs);\n}\n//# sourceMappingURL=promise.mjs.map","import { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nimport { parseDef } from \"../parseDef.mjs\";\nexport function parseSetDef(def, refs) {\n    const items = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'items'],\n    });\n    const schema = {\n        type: 'array',\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, 'minItems', def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, 'maxItems', def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n//# sourceMappingURL=set.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: 'array',\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'items', `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'additionalItems'],\n            }),\n        };\n    }\n    else {\n        return {\n            type: 'array',\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'items', `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n//# sourceMappingURL=tuple.mjs.map","export function parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\n//# sourceMappingURL=undefined.mjs.map","export function parseUnknownDef() {\n    return {};\n}\n//# sourceMappingURL=unknown.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const parseReadonlyDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n//# sourceMappingURL=readonly.mjs.map","import { ZodFirstPartyTypeKind } from 'zod';\nimport { parseAnyDef } from \"./parsers/any.mjs\";\nimport { parseArrayDef } from \"./parsers/array.mjs\";\nimport { parseBigintDef } from \"./parsers/bigint.mjs\";\nimport { parseBooleanDef } from \"./parsers/boolean.mjs\";\nimport { parseBrandedDef } from \"./parsers/branded.mjs\";\nimport { parseCatchDef } from \"./parsers/catch.mjs\";\nimport { parseDateDef } from \"./parsers/date.mjs\";\nimport { parseDefaultDef } from \"./parsers/default.mjs\";\nimport { parseEffectsDef } from \"./parsers/effects.mjs\";\nimport { parseEnumDef } from \"./parsers/enum.mjs\";\nimport { parseIntersectionDef } from \"./parsers/intersection.mjs\";\nimport { parseLiteralDef } from \"./parsers/literal.mjs\";\nimport { parseMapDef } from \"./parsers/map.mjs\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.mjs\";\nimport { parseNeverDef } from \"./parsers/never.mjs\";\nimport { parseNullDef } from \"./parsers/null.mjs\";\nimport { parseNullableDef } from \"./parsers/nullable.mjs\";\nimport { parseNumberDef } from \"./parsers/number.mjs\";\nimport { parseObjectDef } from \"./parsers/object.mjs\";\nimport { parseOptionalDef } from \"./parsers/optional.mjs\";\nimport { parsePipelineDef } from \"./parsers/pipeline.mjs\";\nimport { parsePromiseDef } from \"./parsers/promise.mjs\";\nimport { parseRecordDef } from \"./parsers/record.mjs\";\nimport { parseSetDef } from \"./parsers/set.mjs\";\nimport { parseStringDef } from \"./parsers/string.mjs\";\nimport { parseTupleDef } from \"./parsers/tuple.mjs\";\nimport { parseUndefinedDef } from \"./parsers/undefined.mjs\";\nimport { parseUnionDef } from \"./parsers/union.mjs\";\nimport { parseUnknownDef } from \"./parsers/unknown.mjs\";\nimport { parseReadonlyDef } from \"./parsers/readonly.mjs\";\nimport { ignoreOverride } from \"./Options.mjs\";\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            if ('$ref' in seenSchema) {\n                refs.seenRefs.add(seenSchema.$ref);\n            }\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchema = selectParser(def, def.typeName, refs, forceResolution);\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case 'root':\n            return { $ref: item.path.join('/') };\n        // this case is needed as OpenAI strict mode doesn't support top-level `$ref`s, i.e.\n        // the top-level schema *must* be `{\"type\": \"object\", \"properties\": {...}}` but if we ever\n        // need to define a `$ref`, relative `$ref`s aren't supported, so we need to extract\n        // the schema to `#/definitions/` and reference that.\n        //\n        // e.g. if we need to reference a schema at\n        // `[\"#\",\"definitions\",\"contactPerson\",\"properties\",\"person1\",\"properties\",\"name\"]`\n        // then we'll extract it out to `contactPerson_properties_person1_properties_name`\n        case 'extract-to-root':\n            const name = item.path.slice(refs.basePath.length + 1).join('_');\n            // we don't need to extract the root schema in this case, as it's already\n            // been added to the definitions\n            if (name !== refs.name && refs.nameStrategy === 'duplicate-ref') {\n                refs.definitions[name] = item.def;\n            }\n            return { $ref: [...refs.basePath, refs.definitionPath, name].join('/') };\n        case 'relative':\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case 'none':\n        case 'seen': {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join('/')}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === 'seen' ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join('/');\n};\nconst selectParser = (def, typeName, refs, forceResolution) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef();\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return parseDef(def.getter()._def, refs);\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef();\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs, forceResolution);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef();\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef();\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            return ((_) => undefined)(typeName);\n    }\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n//# sourceMappingURL=parseDef.mjs.map","import { parseDef } from \"./parseDef.mjs\";\nimport { getRefs } from \"./Refs.mjs\";\nimport { zodDef, isEmptyObj } from \"./util.mjs\";\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    const name = typeof options === 'string' ? options\n        : options?.nameStrategy === 'title' ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined ? refs : ({\n        ...refs,\n        currentPath: [...refs.basePath, refs.definitionPath, name],\n    }), false) ?? {};\n    const title = typeof options === 'object' && options.name !== undefined && options.nameStrategy === 'title' ?\n        options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const definitions = (() => {\n        if (isEmptyObj(refs.definitions)) {\n            return undefined;\n        }\n        const definitions = {};\n        const processedDefinitions = new Set();\n        // the call to `parseDef()` here might itself add more entries to `.definitions`\n        // so we need to continually evaluate definitions until we've resolved all of them\n        //\n        // we have a generous iteration limit here to avoid blowing up the stack if there\n        // are any bugs that would otherwise result in us iterating indefinitely\n        for (let i = 0; i < 500; i++) {\n            const newDefinitions = Object.entries(refs.definitions).filter(([key]) => !processedDefinitions.has(key));\n            if (newDefinitions.length === 0)\n                break;\n            for (const [key, schema] of newDefinitions) {\n                definitions[key] =\n                    parseDef(zodDef(schema), { ...refs, currentPath: [...refs.basePath, refs.definitionPath, key] }, true) ?? {};\n                processedDefinitions.add(key);\n            }\n        }\n        return definitions;\n    })();\n    const combined = name === undefined ?\n        definitions ?\n            {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : refs.nameStrategy === 'duplicate-ref' ?\n            {\n                ...main,\n                ...(definitions || refs.seenRefs.size ?\n                    {\n                        [refs.definitionPath]: {\n                            ...definitions,\n                            // only actually duplicate the schema definition if it was ever referenced\n                            // otherwise the duplication is completely pointless\n                            ...(refs.seenRefs.size ? { [name]: main } : undefined),\n                        },\n                    }\n                    : undefined),\n            }\n            : {\n                $ref: [...(refs.$refStrategy === 'relative' ? [] : refs.basePath), refs.definitionPath, name].join('/'),\n                [refs.definitionPath]: {\n                    ...definitions,\n                    [name]: main,\n                },\n            };\n    if (refs.target === 'jsonSchema7') {\n        combined.$schema = 'http://json-schema.org/draft-07/schema#';\n    }\n    else if (refs.target === 'jsonSchema2019-09') {\n        combined.$schema = 'https://json-schema.org/draft/2019-09/schema#';\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n//# sourceMappingURL=zodToJsonSchema.mjs.map","import { makeParseableResponseFormat, makeParseableTextFormat, makeParseableTool, } from \"../lib/parser.mjs\";\nimport { zodToJsonSchema as _zodToJsonSchema } from \"../_vendor/zod-to-json-schema/index.mjs\";\nimport { makeParseableResponseTool } from \"../lib/ResponsesParser.mjs\";\nfunction zodToJsonSchema(schema, options) {\n    return _zodToJsonSchema(schema, {\n        openaiStrictMode: true,\n        name: options.name,\n        nameStrategy: 'duplicate-ref',\n        $refStrategy: 'extract-to-root',\n        nullableStrategy: 'property',\n    });\n}\n/**\n * Creates a chat completion `JSONSchema` response format object from\n * the given Zod schema.\n *\n * If this is passed to the `.parse()`, `.stream()` or `.runTools()`\n * chat completion methods then the response message will contain a\n * `.parsed` property that is the result of parsing the content with\n * the given Zod object.\n *\n * ```ts\n * const completion = await client.chat.completions.parse({\n *    model: 'gpt-4o-2024-08-06',\n *    messages: [\n *      { role: 'system', content: 'You are a helpful math tutor.' },\n *      { role: 'user', content: 'solve 8x + 31 = 2' },\n *    ],\n *    response_format: zodResponseFormat(\n *      z.object({\n *        steps: z.array(z.object({\n *          explanation: z.string(),\n *          answer: z.string(),\n *        })),\n *        final_answer: z.string(),\n *      }),\n *      'math_answer',\n *    ),\n *  });\n *  const message = completion.choices[0]?.message;\n *  if (message?.parsed) {\n *    console.log(message.parsed);\n *    console.log(message.parsed.final_answer);\n * }\n * ```\n *\n * This can be passed directly to the `.create()` method but will not\n * result in any automatic parsing, you'll have to parse the response yourself.\n */\nexport function zodResponseFormat(zodObject, name, props) {\n    return makeParseableResponseFormat({\n        type: 'json_schema',\n        json_schema: {\n            ...props,\n            name,\n            strict: true,\n            schema: zodToJsonSchema(zodObject, { name }),\n        },\n    }, (content) => zodObject.parse(JSON.parse(content)));\n}\nexport function zodTextFormat(zodObject, name, props) {\n    return makeParseableTextFormat({\n        type: 'json_schema',\n        ...props,\n        name,\n        strict: true,\n        schema: zodToJsonSchema(zodObject, { name }),\n    }, (content) => zodObject.parse(JSON.parse(content)));\n}\n/**\n * Creates a chat completion `function` tool that can be invoked\n * automatically by the chat completion `.runTools()` method or automatically\n * parsed by `.parse()` / `.stream()`.\n */\nexport function zodFunction(options) {\n    // @ts-expect-error TODO\n    return makeParseableTool({\n        type: 'function',\n        function: {\n            name: options.name,\n            parameters: zodToJsonSchema(options.parameters, { name: options.name }),\n            strict: true,\n            ...(options.description ? { description: options.description } : undefined),\n        },\n    }, {\n        callback: options.function,\n        parser: (args) => options.parameters.parse(JSON.parse(args)),\n    });\n}\nexport function zodResponsesFunction(options) {\n    return makeParseableResponseTool({\n        type: 'function',\n        name: options.name,\n        parameters: zodToJsonSchema(options.parameters, { name: options.name }),\n        strict: true,\n        ...(options.description ? { description: options.description } : undefined),\n    }, {\n        callback: options.function,\n        parser: (args) => options.parameters.parse(JSON.parse(args)),\n    });\n}\n//# sourceMappingURL=zod.mjs.map","/**\n * This function generates an endpoint URL for (Azure) OpenAI\n * based on the configuration parameters provided.\n *\n * @param {OpenAIEndpointConfig} config - The configuration object for the (Azure) endpoint.\n *\n * @property {string} config.azureOpenAIApiDeploymentName - The deployment name of Azure OpenAI.\n * @property {string} config.azureOpenAIApiInstanceName - The instance name of Azure OpenAI, e.g. `example-resource`.\n * @property {string} config.azureOpenAIApiKey - The API Key for Azure OpenAI.\n * @property {string} config.azureOpenAIBasePath - The base path for Azure OpenAI, e.g. `https://example-resource.azure.openai.com/openai/deployments/`.\n * @property {string} config.baseURL - Some other custom base path URL.\n * @property {string} config.azureOpenAIEndpoint - The endpoint for the Azure OpenAI instance, e.g. `https://example-resource.azure.openai.com/`.\n *\n * The function operates as follows:\n * - If both `azureOpenAIBasePath` and `azureOpenAIApiDeploymentName` (plus `azureOpenAIApiKey`) are provided, it returns an URL combining these two parameters (`${azureOpenAIBasePath}/${azureOpenAIApiDeploymentName}`).\n * - If both `azureOpenAIEndpoint` and `azureOpenAIApiDeploymentName` (plus `azureOpenAIApiKey`) are provided, it returns an URL combining these two parameters (`${azureOpenAIEndpoint}/openai/deployments/${azureOpenAIApiDeploymentName}`).\n * - If `azureOpenAIApiKey` is provided, it checks for `azureOpenAIApiInstanceName` and `azureOpenAIApiDeploymentName` and throws an error if any of these is missing. If both are provided, it generates an URL incorporating these parameters.\n * - If none of the above conditions are met, return any custom `baseURL`.\n * - The function returns the generated URL as a string, or undefined if no custom paths are specified.\n *\n * @throws Will throw an error if the necessary parameters for generating the URL are missing.\n *\n * @returns {string | undefined} The generated (Azure) OpenAI endpoint URL.\n */\nexport function getEndpoint(config) {\n    const { azureOpenAIApiDeploymentName, azureOpenAIApiInstanceName, azureOpenAIApiKey, azureOpenAIBasePath, baseURL, azureADTokenProvider, azureOpenAIEndpoint, } = config;\n    if ((azureOpenAIApiKey || azureADTokenProvider) &&\n        azureOpenAIBasePath &&\n        azureOpenAIApiDeploymentName) {\n        return `${azureOpenAIBasePath}/${azureOpenAIApiDeploymentName}`;\n    }\n    if ((azureOpenAIApiKey || azureADTokenProvider) &&\n        azureOpenAIEndpoint &&\n        azureOpenAIApiDeploymentName) {\n        return `${azureOpenAIEndpoint}/openai/deployments/${azureOpenAIApiDeploymentName}`;\n    }\n    if (azureOpenAIApiKey || azureADTokenProvider) {\n        if (!azureOpenAIApiInstanceName) {\n            throw new Error(\"azureOpenAIApiInstanceName is required when using azureOpenAIApiKey\");\n        }\n        if (!azureOpenAIApiDeploymentName) {\n            throw new Error(\"azureOpenAIApiDeploymentName is a required parameter when using azureOpenAIApiKey\");\n        }\n        return `https://${azureOpenAIApiInstanceName}.openai.azure.com/openai/deployments/${azureOpenAIApiDeploymentName}`;\n    }\n    return baseURL;\n}\n","import { Runnable, } from \"../runnables/base.js\";\nimport { isInteropZodSchema, } from \"../utils/types/zod.js\";\n/**\n * Confirm whether the inputted tool is an instance of `StructuredToolInterface`.\n *\n * @param {StructuredToolInterface | JSONSchema | undefined} tool The tool to check if it is an instance of `StructuredToolInterface`.\n * @returns {tool is StructuredToolInterface} Whether the inputted tool is an instance of `StructuredToolInterface`.\n */\nexport function isStructuredTool(tool) {\n    return (tool !== undefined &&\n        Array.isArray(tool.lc_namespace));\n}\n/**\n * Confirm whether the inputted tool is an instance of `RunnableToolLike`.\n *\n * @param {unknown | undefined} tool The tool to check if it is an instance of `RunnableToolLike`.\n * @returns {tool is RunnableToolLike} Whether the inputted tool is an instance of `RunnableToolLike`.\n */\nexport function isRunnableToolLike(tool) {\n    return (tool !== undefined &&\n        Runnable.isRunnable(tool) &&\n        \"lc_name\" in tool.constructor &&\n        typeof tool.constructor.lc_name === \"function\" &&\n        tool.constructor.lc_name() === \"RunnableToolLike\");\n}\n/**\n * Confirm whether or not the tool contains the necessary properties to be considered a `StructuredToolParams`.\n *\n * @param {unknown | undefined} tool The object to check if it is a `StructuredToolParams`.\n * @returns {tool is StructuredToolParams} Whether the inputted object is a `StructuredToolParams`.\n */\nexport function isStructuredToolParams(tool) {\n    return (!!tool &&\n        typeof tool === \"object\" &&\n        \"name\" in tool &&\n        \"schema\" in tool &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (isInteropZodSchema(tool.schema) ||\n            (tool.schema != null &&\n                typeof tool.schema === \"object\" &&\n                \"type\" in tool.schema &&\n                typeof tool.schema.type === \"string\" &&\n                [\"null\", \"boolean\", \"object\", \"array\", \"number\", \"string\"].includes(tool.schema.type))));\n}\n/**\n * Whether or not the tool is one of StructuredTool, RunnableTool or StructuredToolParams.\n * It returns `is StructuredToolParams` since that is the most minimal interface of the three,\n * while still containing the necessary properties to be passed to a LLM for tool calling.\n *\n * @param {unknown | undefined} tool The tool to check if it is a LangChain tool.\n * @returns {tool is StructuredToolParams} Whether the inputted tool is a LangChain tool.\n */\nexport function isLangChainTool(tool) {\n    return (isStructuredToolParams(tool) ||\n        isRunnableToolLike(tool) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        isStructuredTool(tool));\n}\n","import { isLangChainTool, } from \"../tools/types.js\";\nimport { toJsonSchema } from \"./json_schema.js\";\n// These utility functions were moved to a more appropriate location,\n// but we still export them here for backwards compatibility.\nexport { isStructuredTool, isStructuredToolParams, isRunnableToolLike, isLangChainTool, } from \"../tools/types.js\";\n/**\n * Formats a `StructuredTool` or `RunnableToolLike` instance into a format\n * that is compatible with OpenAI function calling. If `StructuredTool` or\n * `RunnableToolLike` has a zod schema, the output will be converted into a\n * JSON schema, which is then used as the parameters for the OpenAI tool.\n *\n * @param {StructuredToolInterface | RunnableToolLike} tool The tool to convert to an OpenAI function.\n * @returns {FunctionDefinition} The inputted tool in OpenAI function format.\n */\nexport function convertToOpenAIFunction(tool, fields) {\n    // @TODO 0.3.0 Remove the `number` typing\n    const fieldsCopy = typeof fields === \"number\" ? undefined : fields;\n    return {\n        name: tool.name,\n        description: tool.description,\n        parameters: toJsonSchema(tool.schema),\n        // Do not include the `strict` field if it is `undefined`.\n        ...(fieldsCopy?.strict !== undefined ? { strict: fieldsCopy.strict } : {}),\n    };\n}\n/**\n * Formats a `StructuredTool` or `RunnableToolLike` instance into a\n * format that is compatible with OpenAI tool calling. If `StructuredTool` or\n * `RunnableToolLike` has a zod schema, the output will be converted into a\n * JSON schema, which is then used as the parameters for the OpenAI tool.\n *\n * @param {StructuredToolInterface | Record<string, any> | RunnableToolLike} tool The tool to convert to an OpenAI tool.\n * @returns {ToolDefinition} The inputted tool in OpenAI tool format.\n */\nexport function convertToOpenAITool(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntool, fields) {\n    // @TODO 0.3.0 Remove the `number` typing\n    const fieldsCopy = typeof fields === \"number\" ? undefined : fields;\n    let toolDef;\n    if (isLangChainTool(tool)) {\n        toolDef = {\n            type: \"function\",\n            function: convertToOpenAIFunction(tool),\n        };\n    }\n    else {\n        toolDef = tool;\n    }\n    if (fieldsCopy?.strict !== undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        toolDef.function.strict = fieldsCopy.strict;\n    }\n    return toolDef;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\nexport function addLangChainErrorFields(error, lc_error_code) {\n    error.lc_error_code = lc_error_code;\n    error.message = `${error.message}\\n\\nTroubleshooting URL: https://js.langchain.com/docs/troubleshooting/errors/${lc_error_code}/\\n`;\n    return error;\n}\n","import { APIConnectionTimeoutError, APIUserAbortError, } from \"openai\";\nimport { convertToOpenAIFunction, convertToOpenAITool, } from \"@langchain/core/utils/function_calling\";\nimport { isInteropZodSchema } from \"@langchain/core/utils/types\";\nimport { toJsonSchema } from \"@langchain/core/utils/json_schema\";\nimport { addLangChainErrorFields } from \"./errors.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrapOpenAIClientError(e) {\n    let error;\n    if (e.constructor.name === APIConnectionTimeoutError.name) {\n        error = new Error(e.message);\n        error.name = \"TimeoutError\";\n    }\n    else if (e.constructor.name === APIUserAbortError.name) {\n        error = new Error(e.message);\n        error.name = \"AbortError\";\n    }\n    else if (e.status === 400 && e.message.includes(\"tool_calls\")) {\n        error = addLangChainErrorFields(e, \"INVALID_TOOL_RESULTS\");\n    }\n    else if (e.status === 401) {\n        error = addLangChainErrorFields(e, \"MODEL_AUTHENTICATION\");\n    }\n    else if (e.status === 429) {\n        error = addLangChainErrorFields(e, \"MODEL_RATE_LIMIT\");\n    }\n    else if (e.status === 404) {\n        error = addLangChainErrorFields(e, \"MODEL_NOT_FOUND\");\n    }\n    else {\n        error = e;\n    }\n    return error;\n}\nexport { convertToOpenAIFunction as formatToOpenAIFunction, convertToOpenAITool as formatToOpenAITool, };\nexport function formatToOpenAIAssistantTool(tool) {\n    return {\n        type: \"function\",\n        function: {\n            name: tool.name,\n            description: tool.description,\n            parameters: isInteropZodSchema(tool.schema)\n                ? toJsonSchema(tool.schema)\n                : tool.schema,\n        },\n    };\n}\nexport function formatToOpenAIToolChoice(toolChoice) {\n    if (!toolChoice) {\n        return undefined;\n    }\n    else if (toolChoice === \"any\" || toolChoice === \"required\") {\n        return \"required\";\n    }\n    else if (toolChoice === \"auto\") {\n        return \"auto\";\n    }\n    else if (toolChoice === \"none\") {\n        return \"none\";\n    }\n    else if (typeof toolChoice === \"string\") {\n        return {\n            type: \"function\",\n            function: {\n                name: toolChoice,\n            },\n        };\n    }\n    else {\n        return toolChoice;\n    }\n}\n","function isAnyOfProp(prop) {\n    return (prop.anyOf !== undefined &&\n        Array.isArray(prop.anyOf));\n}\n// When OpenAI use functions in the prompt, they format them as TypeScript definitions rather than OpenAPI JSON schemas.\n// This function converts the JSON schemas into TypeScript definitions.\nexport function formatFunctionDefinitions(functions) {\n    const lines = [\"namespace functions {\", \"\"];\n    for (const f of functions) {\n        if (f.description) {\n            lines.push(`// ${f.description}`);\n        }\n        if (Object.keys(f.parameters.properties ?? {}).length > 0) {\n            lines.push(`type ${f.name} = (_: {`);\n            lines.push(formatObjectProperties(f.parameters, 0));\n            lines.push(\"}) => any;\");\n        }\n        else {\n            lines.push(`type ${f.name} = () => any;`);\n        }\n        lines.push(\"\");\n    }\n    lines.push(\"} // namespace functions\");\n    return lines.join(\"\\n\");\n}\n// Format just the properties of an object (not including the surrounding braces)\nfunction formatObjectProperties(obj, indent) {\n    const lines = [];\n    for (const [name, param] of Object.entries(obj.properties ?? {})) {\n        if (param.description && indent < 2) {\n            lines.push(`// ${param.description}`);\n        }\n        if (obj.required?.includes(name)) {\n            lines.push(`${name}: ${formatType(param, indent)},`);\n        }\n        else {\n            lines.push(`${name}?: ${formatType(param, indent)},`);\n        }\n    }\n    return lines.map((line) => \" \".repeat(indent) + line).join(\"\\n\");\n}\n// Format a single property type\nfunction formatType(param, indent) {\n    if (isAnyOfProp(param)) {\n        return param.anyOf.map((v) => formatType(v, indent)).join(\" | \");\n    }\n    switch (param.type) {\n        case \"string\":\n            if (param.enum) {\n                return param.enum.map((v) => `\"${v}\"`).join(\" | \");\n            }\n            return \"string\";\n        case \"number\":\n            if (param.enum) {\n                return param.enum.map((v) => `${v}`).join(\" | \");\n            }\n            return \"number\";\n        case \"integer\":\n            if (param.enum) {\n                return param.enum.map((v) => `${v}`).join(\" | \");\n            }\n            return \"number\";\n        case \"boolean\":\n            return \"boolean\";\n        case \"null\":\n            return \"null\";\n        case \"object\":\n            return [\"{\", formatObjectProperties(param, indent + 2), \"}\"].join(\"\\n\");\n        case \"array\":\n            if (param.items) {\n                return `${formatType(param.items, indent)}[]`;\n            }\n            return \"any[]\";\n        default:\n            return \"\";\n    }\n}\n","import { isLangChainTool } from \"@langchain/core/utils/function_calling\";\nimport { formatToOpenAITool } from \"./openai.js\";\n/**\n * Formats a tool in either OpenAI format, or LangChain structured tool format\n * into an OpenAI tool format. If the tool is already in OpenAI format, return without\n * any changes. If it is in LangChain structured tool format, convert it to OpenAI tool format\n * using OpenAI's `zodFunction` util, falling back to `convertToOpenAIFunction` if the parameters\n * returned from the `zodFunction` util are not defined.\n *\n * @param {BindToolsInput} tool The tool to convert to an OpenAI tool.\n * @param {Object} [fields] Additional fields to add to the OpenAI tool.\n * @returns {ToolDefinition} The inputted tool in OpenAI tool format.\n */\nexport function _convertToOpenAITool(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntool, fields) {\n    let toolDef;\n    if (isLangChainTool(tool)) {\n        toolDef = formatToOpenAITool(tool);\n    }\n    else {\n        toolDef = tool;\n    }\n    if (fields?.strict !== undefined) {\n        toolDef.function.strict = fields.strict;\n    }\n    return toolDef;\n}\n","import * as z4 from \"zod/v4/core\";\nimport { OpenAI as OpenAIClient } from \"openai\";\nimport { AIMessage, AIMessageChunk, ChatMessage, ChatMessageChunk, FunctionMessageChunk, HumanMessageChunk, SystemMessageChunk, ToolMessageChunk, isAIMessage, parseBase64DataUrl, parseMimeType, convertToProviderContentBlock, isDataContentBlock, } from \"@langchain/core/messages\";\nimport { ChatGenerationChunk, } from \"@langchain/core/outputs\";\nimport { getEnvironmentVariable } from \"@langchain/core/utils/env\";\nimport { BaseChatModel, } from \"@langchain/core/language_models/chat_models\";\nimport { isOpenAITool, } from \"@langchain/core/language_models/base\";\nimport { RunnableLambda, RunnablePassthrough, RunnableSequence, } from \"@langchain/core/runnables\";\nimport { JsonOutputParser, StructuredOutputParser, } from \"@langchain/core/output_parsers\";\nimport { JsonOutputKeyToolsParser, convertLangChainToolCallToOpenAI, makeInvalidToolCall, parseToolCall, } from \"@langchain/core/output_parsers/openai_tools\";\nimport { zodResponseFormat } from \"openai/helpers/zod\";\nimport { getSchemaDescription, isInteropZodSchema, isZodSchemaV3, isZodSchemaV4, } from \"@langchain/core/utils/types\";\nimport { toJsonSchema, } from \"@langchain/core/utils/json_schema\";\nimport { getEndpoint } from \"./utils/azure.js\";\nimport { formatToOpenAIToolChoice, wrapOpenAIClientError, } from \"./utils/openai.js\";\nimport { formatFunctionDefinitions, } from \"./utils/openai-format-fndef.js\";\nimport { _convertToOpenAITool } from \"./utils/tools.js\";\nfunction extractGenericMessageCustomRole(message) {\n    if (message.role !== \"system\" &&\n        message.role !== \"developer\" &&\n        message.role !== \"assistant\" &&\n        message.role !== \"user\" &&\n        message.role !== \"function\" &&\n        message.role !== \"tool\") {\n        console.warn(`Unknown message role: ${message.role}`);\n    }\n    return message.role;\n}\nexport function messageToOpenAIRole(message) {\n    const type = message._getType();\n    switch (type) {\n        case \"system\":\n            return \"system\";\n        case \"ai\":\n            return \"assistant\";\n        case \"human\":\n            return \"user\";\n        case \"function\":\n            return \"function\";\n        case \"tool\":\n            return \"tool\";\n        case \"generic\": {\n            if (!ChatMessage.isInstance(message))\n                throw new Error(\"Invalid generic chat message\");\n            return extractGenericMessageCustomRole(message);\n        }\n        default:\n            throw new Error(`Unknown message type: ${type}`);\n    }\n}\nconst completionsApiContentBlockConverter = {\n    providerName: \"ChatOpenAI\",\n    fromStandardTextBlock(block) {\n        return { type: \"text\", text: block.text };\n    },\n    fromStandardImageBlock(block) {\n        if (block.source_type === \"url\") {\n            return {\n                type: \"image_url\",\n                image_url: {\n                    url: block.url,\n                    ...(block.metadata?.detail\n                        ? { detail: block.metadata.detail }\n                        : {}),\n                },\n            };\n        }\n        if (block.source_type === \"base64\") {\n            const url = `data:${block.mime_type ?? \"\"};base64,${block.data}`;\n            return {\n                type: \"image_url\",\n                image_url: {\n                    url,\n                    ...(block.metadata?.detail\n                        ? { detail: block.metadata.detail }\n                        : {}),\n                },\n            };\n        }\n        throw new Error(`Image content blocks with source_type ${block.source_type} are not supported for ChatOpenAI`);\n    },\n    fromStandardAudioBlock(block) {\n        if (block.source_type === \"url\") {\n            const data = parseBase64DataUrl({ dataUrl: block.url });\n            if (!data) {\n                throw new Error(`URL audio blocks with source_type ${block.source_type} must be formatted as a data URL for ChatOpenAI`);\n            }\n            const rawMimeType = data.mime_type || block.mime_type || \"\";\n            let mimeType;\n            try {\n                mimeType = parseMimeType(rawMimeType);\n            }\n            catch {\n                throw new Error(`Audio blocks with source_type ${block.source_type} must have mime type of audio/wav or audio/mp3`);\n            }\n            if (mimeType.type !== \"audio\" ||\n                (mimeType.subtype !== \"wav\" && mimeType.subtype !== \"mp3\")) {\n                throw new Error(`Audio blocks with source_type ${block.source_type} must have mime type of audio/wav or audio/mp3`);\n            }\n            return {\n                type: \"input_audio\",\n                input_audio: {\n                    format: mimeType.subtype,\n                    data: data.data,\n                },\n            };\n        }\n        if (block.source_type === \"base64\") {\n            let mimeType;\n            try {\n                mimeType = parseMimeType(block.mime_type ?? \"\");\n            }\n            catch {\n                throw new Error(`Audio blocks with source_type ${block.source_type} must have mime type of audio/wav or audio/mp3`);\n            }\n            if (mimeType.type !== \"audio\" ||\n                (mimeType.subtype !== \"wav\" && mimeType.subtype !== \"mp3\")) {\n                throw new Error(`Audio blocks with source_type ${block.source_type} must have mime type of audio/wav or audio/mp3`);\n            }\n            return {\n                type: \"input_audio\",\n                input_audio: {\n                    format: mimeType.subtype,\n                    data: block.data,\n                },\n            };\n        }\n        throw new Error(`Audio content blocks with source_type ${block.source_type} are not supported for ChatOpenAI`);\n    },\n    fromStandardFileBlock(block) {\n        if (block.source_type === \"url\") {\n            const data = parseBase64DataUrl({ dataUrl: block.url });\n            if (!data) {\n                throw new Error(`URL file blocks with source_type ${block.source_type} must be formatted as a data URL for ChatOpenAI`);\n            }\n            return {\n                type: \"file\",\n                file: {\n                    file_data: block.url, // formatted as base64 data URL\n                    ...(block.metadata?.filename || block.metadata?.name\n                        ? {\n                            filename: (block.metadata?.filename ||\n                                block.metadata?.name),\n                        }\n                        : {}),\n                },\n            };\n        }\n        if (block.source_type === \"base64\") {\n            return {\n                type: \"file\",\n                file: {\n                    file_data: `data:${block.mime_type ?? \"\"};base64,${block.data}`,\n                    ...(block.metadata?.filename ||\n                        block.metadata?.name ||\n                        block.metadata?.title\n                        ? {\n                            filename: (block.metadata?.filename ||\n                                block.metadata?.name ||\n                                block.metadata?.title),\n                        }\n                        : {}),\n                },\n            };\n        }\n        if (block.source_type === \"id\") {\n            return {\n                type: \"file\",\n                file: {\n                    file_id: block.id,\n                },\n            };\n        }\n        throw new Error(`File content blocks with source_type ${block.source_type} are not supported for ChatOpenAI`);\n    },\n};\n// Used in LangSmith, export is important here\nexport function _convertMessagesToOpenAIParams(messages, model) {\n    // TODO: Function messages do not support array content, fix cast\n    return messages.flatMap((message) => {\n        let role = messageToOpenAIRole(message);\n        if (role === \"system\" && isReasoningModel(model)) {\n            role = \"developer\";\n        }\n        const content = typeof message.content === \"string\"\n            ? message.content\n            : message.content.map((m) => {\n                if (isDataContentBlock(m)) {\n                    return convertToProviderContentBlock(m, completionsApiContentBlockConverter);\n                }\n                return m;\n            });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const completionParam = {\n            role,\n            content,\n        };\n        if (message.name != null) {\n            completionParam.name = message.name;\n        }\n        if (message.additional_kwargs.function_call != null) {\n            completionParam.function_call = message.additional_kwargs.function_call;\n            completionParam.content = \"\";\n        }\n        if (isAIMessage(message) && !!message.tool_calls?.length) {\n            completionParam.tool_calls = message.tool_calls.map(convertLangChainToolCallToOpenAI);\n            completionParam.content = \"\";\n        }\n        else {\n            if (message.additional_kwargs.tool_calls != null) {\n                completionParam.tool_calls = message.additional_kwargs.tool_calls;\n            }\n            if (message.tool_call_id != null) {\n                completionParam.tool_call_id = message.tool_call_id;\n            }\n        }\n        if (message.additional_kwargs.audio &&\n            typeof message.additional_kwargs.audio === \"object\" &&\n            \"id\" in message.additional_kwargs.audio) {\n            const audioMessage = {\n                role: \"assistant\",\n                audio: {\n                    id: message.additional_kwargs.audio.id,\n                },\n            };\n            return [completionParam, audioMessage];\n        }\n        return completionParam;\n    });\n}\nconst _FUNCTION_CALL_IDS_MAP_KEY = \"__openai_function_call_ids__\";\nfunction _convertReasoningSummaryToOpenAIResponsesParams(reasoning) {\n    // combine summary parts that have the the same index and then remove the indexes\n    const summary = (reasoning.summary.length > 1\n        ? reasoning.summary.reduce((acc, curr) => {\n            const last = acc.at(-1);\n            if (last.index === curr.index) {\n                last.text += curr.text;\n            }\n            else {\n                acc.push(curr);\n            }\n            return acc;\n        }, [{ ...reasoning.summary[0] }])\n        : reasoning.summary).map((s) => Object.fromEntries(Object.entries(s).filter(([k]) => k !== \"index\")));\n    return {\n        ...reasoning,\n        summary,\n    };\n}\nfunction _convertMessagesToOpenAIResponsesParams(messages, model, zdrEnabled) {\n    return messages.flatMap((lcMsg) => {\n        const additional_kwargs = lcMsg.additional_kwargs;\n        let role = messageToOpenAIRole(lcMsg);\n        if (role === \"system\" && isReasoningModel(model))\n            role = \"developer\";\n        if (role === \"function\") {\n            throw new Error(\"Function messages are not supported in Responses API\");\n        }\n        if (role === \"tool\") {\n            const toolMessage = lcMsg;\n            // Handle computer call output\n            if (additional_kwargs?.type === \"computer_call_output\") {\n                const output = (() => {\n                    if (typeof toolMessage.content === \"string\") {\n                        return {\n                            type: \"computer_screenshot\",\n                            image_url: toolMessage.content,\n                        };\n                    }\n                    if (Array.isArray(toolMessage.content)) {\n                        const oaiScreenshot = toolMessage.content.find((i) => i.type === \"computer_screenshot\");\n                        if (oaiScreenshot)\n                            return oaiScreenshot;\n                        const lcImage = toolMessage.content.find((i) => i.type === \"image_url\");\n                        if (lcImage) {\n                            return {\n                                type: \"computer_screenshot\",\n                                image_url: typeof lcImage.image_url === \"string\"\n                                    ? lcImage.image_url\n                                    : lcImage.image_url.url,\n                            };\n                        }\n                    }\n                    throw new Error(\"Invalid computer call output\");\n                })();\n                return {\n                    type: \"computer_call_output\",\n                    output,\n                    call_id: toolMessage.tool_call_id,\n                };\n            }\n            return {\n                type: \"function_call_output\",\n                call_id: toolMessage.tool_call_id,\n                id: toolMessage.id?.startsWith(\"fc_\") ? toolMessage.id : undefined,\n                output: typeof toolMessage.content !== \"string\"\n                    ? JSON.stringify(toolMessage.content)\n                    : toolMessage.content,\n            };\n        }\n        if (role === \"assistant\") {\n            // if we have the original response items, just reuse them\n            if (!zdrEnabled &&\n                lcMsg.response_metadata.output != null &&\n                Array.isArray(lcMsg.response_metadata.output) &&\n                lcMsg.response_metadata.output.length > 0 &&\n                lcMsg.response_metadata.output.every((item) => \"type\" in item)) {\n                return lcMsg.response_metadata.output;\n            }\n            // otherwise, try to reconstruct the response from what we have\n            const input = [];\n            // reasoning items\n            if (additional_kwargs?.reasoning && !zdrEnabled) {\n                const reasoningItem = _convertReasoningSummaryToOpenAIResponsesParams(additional_kwargs.reasoning);\n                input.push(reasoningItem);\n            }\n            // ai content\n            let { content } = lcMsg;\n            if (additional_kwargs?.refusal) {\n                if (typeof content === \"string\") {\n                    content = [{ type: \"output_text\", text: content, annotations: [] }];\n                }\n                content = [\n                    ...content,\n                    { type: \"refusal\", refusal: additional_kwargs.refusal },\n                ];\n            }\n            input.push({\n                type: \"message\",\n                role: \"assistant\",\n                ...(lcMsg.id && !zdrEnabled ? { id: lcMsg.id } : {}),\n                content: typeof content === \"string\"\n                    ? content\n                    : content.flatMap((item) => {\n                        if (item.type === \"text\") {\n                            return {\n                                type: \"output_text\",\n                                text: item.text,\n                                // @ts-expect-error TODO: add types for `annotations`\n                                annotations: item.annotations ?? [],\n                            };\n                        }\n                        if (item.type === \"output_text\" || item.type === \"refusal\") {\n                            return item;\n                        }\n                        return [];\n                    }),\n            });\n            const functionCallIds = additional_kwargs?.[_FUNCTION_CALL_IDS_MAP_KEY];\n            if (isAIMessage(lcMsg) && !!lcMsg.tool_calls?.length) {\n                input.push(...lcMsg.tool_calls.map((toolCall) => ({\n                    type: \"function_call\",\n                    name: toolCall.name,\n                    arguments: JSON.stringify(toolCall.args),\n                    call_id: toolCall.id,\n                    ...(zdrEnabled ? { id: functionCallIds?.[toolCall.id] } : {}),\n                })));\n            }\n            else if (additional_kwargs?.tool_calls) {\n                input.push(...additional_kwargs.tool_calls.map((toolCall) => ({\n                    type: \"function_call\",\n                    name: toolCall.function.name,\n                    call_id: toolCall.id,\n                    arguments: toolCall.function.arguments,\n                    ...(zdrEnabled ? { id: functionCallIds?.[toolCall.id] } : {}),\n                })));\n            }\n            const toolOutputs = lcMsg.response_metadata.output?.length\n                ? lcMsg.response_metadata.output\n                : additional_kwargs.tool_outputs;\n            const fallthroughCallTypes = [\n                \"computer_call\",\n                \"mcp_call\",\n                \"code_interpreter_call\",\n                \"image_generation_call\",\n            ];\n            if (toolOutputs != null) {\n                const castToolOutputs = toolOutputs;\n                const fallthroughCalls = castToolOutputs?.filter((item) => fallthroughCallTypes.includes(item.type));\n                if (fallthroughCalls.length > 0)\n                    input.push(...fallthroughCalls);\n            }\n            return input;\n        }\n        if (role === \"user\" || role === \"system\" || role === \"developer\") {\n            if (typeof lcMsg.content === \"string\") {\n                return { type: \"message\", role, content: lcMsg.content };\n            }\n            const messages = [];\n            const content = lcMsg.content.flatMap((item) => {\n                if (item.type === \"mcp_approval_response\") {\n                    messages.push({\n                        type: \"mcp_approval_response\",\n                        approval_request_id: item.approval_request_id,\n                        approve: item.approve,\n                    });\n                }\n                if (isDataContentBlock(item)) {\n                    return convertToProviderContentBlock(item, completionsApiContentBlockConverter);\n                }\n                if (item.type === \"text\") {\n                    return {\n                        type: \"input_text\",\n                        text: item.text,\n                    };\n                }\n                if (item.type === \"image_url\") {\n                    return {\n                        type: \"input_image\",\n                        image_url: typeof item.image_url === \"string\"\n                            ? item.image_url\n                            : item.image_url.url,\n                        detail: typeof item.image_url === \"string\"\n                            ? \"auto\"\n                            : item.image_url.detail,\n                    };\n                }\n                if (item.type === \"input_text\" ||\n                    item.type === \"input_image\" ||\n                    item.type === \"input_file\") {\n                    return item;\n                }\n                return [];\n            });\n            if (content.length > 0) {\n                messages.push({ type: \"message\", role, content });\n            }\n            return messages;\n        }\n        console.warn(`Unsupported role found when converting to OpenAI Responses API: ${role}`);\n        return [];\n    });\n}\nfunction _convertOpenAIResponsesMessageToBaseMessage(response) {\n    if (response.error) {\n        // TODO: add support for `addLangChainErrorFields`\n        const error = new Error(response.error.message);\n        error.name = response.error.code;\n        throw error;\n    }\n    let messageId;\n    const content = [];\n    const tool_calls = [];\n    const invalid_tool_calls = [];\n    const response_metadata = {\n        model: response.model,\n        created_at: response.created_at,\n        id: response.id,\n        incomplete_details: response.incomplete_details,\n        metadata: response.metadata,\n        object: response.object,\n        status: response.status,\n        user: response.user,\n        service_tier: response.service_tier,\n        // for compatibility with chat completion calls.\n        model_name: response.model,\n    };\n    const additional_kwargs = {};\n    for (const item of response.output) {\n        if (item.type === \"message\") {\n            messageId = item.id;\n            content.push(...item.content.flatMap((part) => {\n                if (part.type === \"output_text\") {\n                    if (\"parsed\" in part && part.parsed != null) {\n                        additional_kwargs.parsed = part.parsed;\n                    }\n                    return {\n                        type: \"text\",\n                        text: part.text,\n                        annotations: part.annotations,\n                    };\n                }\n                if (part.type === \"refusal\") {\n                    additional_kwargs.refusal = part.refusal;\n                    return [];\n                }\n                return part;\n            }));\n        }\n        else if (item.type === \"function_call\") {\n            const fnAdapter = {\n                function: { name: item.name, arguments: item.arguments },\n                id: item.call_id,\n            };\n            try {\n                tool_calls.push(parseToolCall(fnAdapter, { returnId: true }));\n            }\n            catch (e) {\n                let errMessage;\n                if (typeof e === \"object\" &&\n                    e != null &&\n                    \"message\" in e &&\n                    typeof e.message === \"string\") {\n                    errMessage = e.message;\n                }\n                invalid_tool_calls.push(makeInvalidToolCall(fnAdapter, errMessage));\n            }\n            additional_kwargs[_FUNCTION_CALL_IDS_MAP_KEY] ??= {};\n            if (item.id) {\n                additional_kwargs[_FUNCTION_CALL_IDS_MAP_KEY][item.call_id] = item.id;\n            }\n        }\n        else if (item.type === \"reasoning\") {\n            additional_kwargs.reasoning = item;\n        }\n        else {\n            additional_kwargs.tool_outputs ??= [];\n            additional_kwargs.tool_outputs.push(item);\n        }\n    }\n    return new AIMessage({\n        id: messageId,\n        content,\n        tool_calls,\n        invalid_tool_calls,\n        usage_metadata: response.usage,\n        additional_kwargs,\n        response_metadata,\n    });\n}\nfunction _convertOpenAIResponsesDeltaToBaseMessageChunk(chunk) {\n    const content = [];\n    let generationInfo = {};\n    let usage_metadata;\n    const tool_call_chunks = [];\n    const response_metadata = {};\n    const additional_kwargs = {};\n    let id;\n    if (chunk.type === \"response.output_text.delta\") {\n        content.push({\n            type: \"text\",\n            text: chunk.delta,\n            index: chunk.content_index,\n        });\n    }\n    else if (chunk.type === \"response.output_text_annotation.added\") {\n        content.push({\n            type: \"text\",\n            text: \"\",\n            annotations: [chunk.annotation],\n            index: chunk.content_index,\n        });\n    }\n    else if (chunk.type === \"response.output_item.added\" &&\n        chunk.item.type === \"message\") {\n        id = chunk.item.id;\n    }\n    else if (chunk.type === \"response.output_item.added\" &&\n        chunk.item.type === \"function_call\") {\n        tool_call_chunks.push({\n            type: \"tool_call_chunk\",\n            name: chunk.item.name,\n            args: chunk.item.arguments,\n            id: chunk.item.call_id,\n            index: chunk.output_index,\n        });\n        additional_kwargs[_FUNCTION_CALL_IDS_MAP_KEY] = {\n            [chunk.item.call_id]: chunk.item.id,\n        };\n    }\n    else if (chunk.type === \"response.output_item.done\" &&\n        [\n            \"web_search_call\",\n            \"file_search_call\",\n            \"computer_call\",\n            \"code_interpreter_call\",\n            \"mcp_call\",\n            \"mcp_list_tools\",\n            \"mcp_approval_request\",\n            \"image_generation_call\",\n        ].includes(chunk.item.type)) {\n        additional_kwargs.tool_outputs = [chunk.item];\n    }\n    else if (chunk.type === \"response.created\") {\n        response_metadata.id = chunk.response.id;\n        response_metadata.model_name = chunk.response.model;\n        response_metadata.model = chunk.response.model;\n    }\n    else if (chunk.type === \"response.completed\") {\n        const msg = _convertOpenAIResponsesMessageToBaseMessage(chunk.response);\n        usage_metadata = chunk.response.usage;\n        if (chunk.response.text?.format?.type === \"json_schema\") {\n            additional_kwargs.parsed ??= JSON.parse(msg.text);\n        }\n        for (const [key, value] of Object.entries(chunk.response)) {\n            if (key !== \"id\")\n                response_metadata[key] = value;\n        }\n    }\n    else if (chunk.type === \"response.function_call_arguments.delta\") {\n        tool_call_chunks.push({\n            type: \"tool_call_chunk\",\n            args: chunk.delta,\n            index: chunk.output_index,\n        });\n    }\n    else if (chunk.type === \"response.web_search_call.completed\" ||\n        chunk.type === \"response.file_search_call.completed\") {\n        generationInfo = {\n            tool_outputs: {\n                id: chunk.item_id,\n                type: chunk.type.replace(\"response.\", \"\").replace(\".completed\", \"\"),\n                status: \"completed\",\n            },\n        };\n    }\n    else if (chunk.type === \"response.refusal.done\") {\n        additional_kwargs.refusal = chunk.refusal;\n    }\n    else if (chunk.type === \"response.output_item.added\" &&\n        \"item\" in chunk &&\n        chunk.item.type === \"reasoning\") {\n        const summary = chunk\n            .item.summary\n            ? chunk.item.summary.map((s, index) => ({\n                ...s,\n                index,\n            }))\n            : undefined;\n        additional_kwargs.reasoning = {\n            // We only capture ID in the first chunk or else the concatenated result of all chunks will\n            // have an ID field that is repeated once per chunk. There is special handling for the `type`\n            // field that prevents this, however.\n            id: chunk.item.id,\n            type: chunk.item.type,\n            ...(summary ? { summary } : {}),\n        };\n    }\n    else if (chunk.type === \"response.reasoning_summary_part.added\") {\n        additional_kwargs.reasoning = {\n            type: \"reasoning\",\n            summary: [{ ...chunk.part, index: chunk.summary_index }],\n        };\n    }\n    else if (chunk.type === \"response.reasoning_summary_text.delta\") {\n        additional_kwargs.reasoning = {\n            type: \"reasoning\",\n            summary: [\n                { text: chunk.delta, type: \"summary_text\", index: chunk.summary_index },\n            ],\n        };\n    }\n    else if (chunk.type === \"response.image_generation_call.partial_image\") {\n        // noop/fixme: retaining partial images in a message chunk means that _all_\n        // partial images get kept in history, so we don't do anything here.\n        return null;\n    }\n    else {\n        return null;\n    }\n    return new ChatGenerationChunk({\n        // Legacy reasons, `onLLMNewToken` should pulls this out\n        text: content.map((part) => part.text).join(\"\"),\n        message: new AIMessageChunk({\n            id,\n            content,\n            tool_call_chunks,\n            usage_metadata,\n            additional_kwargs,\n            response_metadata,\n        }),\n        generationInfo,\n    });\n}\nfunction isBuiltInTool(tool) {\n    return \"type\" in tool && tool.type !== \"function\";\n}\nfunction isBuiltInToolChoice(tool_choice) {\n    return (tool_choice != null &&\n        typeof tool_choice === \"object\" &&\n        \"type\" in tool_choice &&\n        tool_choice.type !== \"function\");\n}\nfunction _reduceChatOpenAIToolsForResponses(tools, fields) {\n    const reducedTools = [];\n    for (const tool of tools) {\n        if (isBuiltInTool(tool)) {\n            if (tool.type === \"image_generation\" && fields?.stream) {\n                // OpenAI sends a 400 error if partial_images is not set and we want to stream.\n                // We also set it to 1 since we don't support partial images yet.\n                tool.partial_images = 1;\n            }\n            reducedTools.push(tool);\n        }\n        else if (isOpenAITool(tool)) {\n            reducedTools.push({\n                type: \"function\",\n                name: tool.function.name,\n                parameters: tool.function.parameters,\n                description: tool.function.description,\n                strict: fields?.strict ?? null,\n            });\n        }\n    }\n    return reducedTools;\n}\nfunction _convertChatOpenAIToolTypeToOpenAITool(tool, fields) {\n    if (isOpenAITool(tool)) {\n        if (fields?.strict !== undefined) {\n            return {\n                ...tool,\n                function: {\n                    ...tool.function,\n                    strict: fields.strict,\n                },\n            };\n        }\n        return tool;\n    }\n    return _convertToOpenAITool(tool, fields);\n}\nfunction isReasoningModel(model) {\n    return model && /^o\\d/.test(model);\n}\n/**\n * OpenAI chat model integration.\n *\n * To use with Azure, import the `AzureChatOpenAI` class.\n *\n * Setup:\n * Install `@langchain/openai` and set an environment variable named `OPENAI_API_KEY`.\n *\n * ```bash\n * npm install @langchain/openai\n * export OPENAI_API_KEY=\"your-api-key\"\n * ```\n *\n * ## [Constructor args](https://api.js.langchain.com/classes/langchain_openai.ChatOpenAI.html#constructor)\n *\n * ## [Runtime args](https://api.js.langchain.com/interfaces/langchain_openai.ChatOpenAICallOptions.html)\n *\n * Runtime args can be passed as the second argument to any of the base runnable methods `.invoke`. `.stream`, `.batch`, etc.\n * They can also be passed via `.withConfig`, or the second arg in `.bindTools`, like shown in the examples below:\n *\n * ```typescript\n * // When calling `.withConfig`, call options should be passed via the first argument\n * const llmWithArgsBound = llm.withConfig({\n *   stop: [\"\\n\"],\n *   tools: [...],\n * });\n *\n * // When calling `.bindTools`, call options should be passed via the second argument\n * const llmWithTools = llm.bindTools(\n *   [...],\n *   {\n *     tool_choice: \"auto\",\n *   }\n * );\n * ```\n *\n * ## Examples\n *\n * <details open>\n * <summary><strong>Instantiate</strong></summary>\n *\n * ```typescript\n * import { ChatOpenAI } from '@langchain/openai';\n *\n * const llm = new ChatOpenAI({\n *   model: \"gpt-4o\",\n *   temperature: 0,\n *   maxTokens: undefined,\n *   timeout: undefined,\n *   maxRetries: 2,\n *   // apiKey: \"...\",\n *   // baseUrl: \"...\",\n *   // organization: \"...\",\n *   // other params...\n * });\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Invoking</strong></summary>\n *\n * ```typescript\n * const input = `Translate \"I love programming\" into French.`;\n *\n * // Models also accept a list of chat messages or a formatted prompt\n * const result = await llm.invoke(input);\n * console.log(result);\n * ```\n *\n * ```txt\n * AIMessage {\n *   \"id\": \"chatcmpl-9u4Mpu44CbPjwYFkTbeoZgvzB00Tz\",\n *   \"content\": \"J'adore la programmation.\",\n *   \"response_metadata\": {\n *     \"tokenUsage\": {\n *       \"completionTokens\": 5,\n *       \"promptTokens\": 28,\n *       \"totalTokens\": 33\n *     },\n *     \"finish_reason\": \"stop\",\n *     \"system_fingerprint\": \"fp_3aa7262c27\"\n *   },\n *   \"usage_metadata\": {\n *     \"input_tokens\": 28,\n *     \"output_tokens\": 5,\n *     \"total_tokens\": 33\n *   }\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Streaming Chunks</strong></summary>\n *\n * ```typescript\n * for await (const chunk of await llm.stream(input)) {\n *   console.log(chunk);\n * }\n * ```\n *\n * ```txt\n * AIMessageChunk {\n *   \"id\": \"chatcmpl-9u4NWB7yUeHCKdLr6jP3HpaOYHTqs\",\n *   \"content\": \"\"\n * }\n * AIMessageChunk {\n *   \"content\": \"J\"\n * }\n * AIMessageChunk {\n *   \"content\": \"'adore\"\n * }\n * AIMessageChunk {\n *   \"content\": \" la\"\n * }\n * AIMessageChunk {\n *   \"content\": \" programmation\",,\n * }\n * AIMessageChunk {\n *   \"content\": \".\",,\n * }\n * AIMessageChunk {\n *   \"content\": \"\",\n *   \"response_metadata\": {\n *     \"finish_reason\": \"stop\",\n *     \"system_fingerprint\": \"fp_c9aa9c0491\"\n *   },\n * }\n * AIMessageChunk {\n *   \"content\": \"\",\n *   \"usage_metadata\": {\n *     \"input_tokens\": 28,\n *     \"output_tokens\": 5,\n *     \"total_tokens\": 33\n *   }\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Aggregate Streamed Chunks</strong></summary>\n *\n * ```typescript\n * import { AIMessageChunk } from '@langchain/core/messages';\n * import { concat } from '@langchain/core/utils/stream';\n *\n * const stream = await llm.stream(input);\n * let full: AIMessageChunk | undefined;\n * for await (const chunk of stream) {\n *   full = !full ? chunk : concat(full, chunk);\n * }\n * console.log(full);\n * ```\n *\n * ```txt\n * AIMessageChunk {\n *   \"id\": \"chatcmpl-9u4PnX6Fy7OmK46DASy0bH6cxn5Xu\",\n *   \"content\": \"J'adore la programmation.\",\n *   \"response_metadata\": {\n *     \"prompt\": 0,\n *     \"completion\": 0,\n *     \"finish_reason\": \"stop\",\n *   },\n *   \"usage_metadata\": {\n *     \"input_tokens\": 28,\n *     \"output_tokens\": 5,\n *     \"total_tokens\": 33\n *   }\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Bind tools</strong></summary>\n *\n * ```typescript\n * import { z } from 'zod';\n *\n * const GetWeather = {\n *   name: \"GetWeather\",\n *   description: \"Get the current weather in a given location\",\n *   schema: z.object({\n *     location: z.string().describe(\"The city and state, e.g. San Francisco, CA\")\n *   }),\n * }\n *\n * const GetPopulation = {\n *   name: \"GetPopulation\",\n *   description: \"Get the current population in a given location\",\n *   schema: z.object({\n *     location: z.string().describe(\"The city and state, e.g. San Francisco, CA\")\n *   }),\n * }\n *\n * const llmWithTools = llm.bindTools(\n *   [GetWeather, GetPopulation],\n *   {\n *     // strict: true  // enforce tool args schema is respected\n *   }\n * );\n * const aiMsg = await llmWithTools.invoke(\n *   \"Which city is hotter today and which is bigger: LA or NY?\"\n * );\n * console.log(aiMsg.tool_calls);\n * ```\n *\n * ```txt\n * [\n *   {\n *     name: 'GetWeather',\n *     args: { location: 'Los Angeles, CA' },\n *     type: 'tool_call',\n *     id: 'call_uPU4FiFzoKAtMxfmPnfQL6UK'\n *   },\n *   {\n *     name: 'GetWeather',\n *     args: { location: 'New York, NY' },\n *     type: 'tool_call',\n *     id: 'call_UNkEwuQsHrGYqgDQuH9nPAtX'\n *   },\n *   {\n *     name: 'GetPopulation',\n *     args: { location: 'Los Angeles, CA' },\n *     type: 'tool_call',\n *     id: 'call_kL3OXxaq9OjIKqRTpvjaCH14'\n *   },\n *   {\n *     name: 'GetPopulation',\n *     args: { location: 'New York, NY' },\n *     type: 'tool_call',\n *     id: 'call_s9KQB1UWj45LLGaEnjz0179q'\n *   }\n * ]\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Structured Output</strong></summary>\n *\n * ```typescript\n * import { z } from 'zod';\n *\n * const Joke = z.object({\n *   setup: z.string().describe(\"The setup of the joke\"),\n *   punchline: z.string().describe(\"The punchline to the joke\"),\n *   rating: z.number().nullable().describe(\"How funny the joke is, from 1 to 10\")\n * }).describe('Joke to tell user.');\n *\n * const structuredLlm = llm.withStructuredOutput(Joke, {\n *   name: \"Joke\",\n *   strict: true, // Optionally enable OpenAI structured outputs\n * });\n * const jokeResult = await structuredLlm.invoke(\"Tell me a joke about cats\");\n * console.log(jokeResult);\n * ```\n *\n * ```txt\n * {\n *   setup: 'Why was the cat sitting on the computer?',\n *   punchline: 'Because it wanted to keep an eye on the mouse!',\n *   rating: 7\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>JSON Object Response Format</strong></summary>\n *\n * ```typescript\n * const jsonLlm = llm.withConfig({ response_format: { type: \"json_object\" } });\n * const jsonLlmAiMsg = await jsonLlm.invoke(\n *   \"Return a JSON object with key 'randomInts' and a value of 10 random ints in [0-99]\"\n * );\n * console.log(jsonLlmAiMsg.content);\n * ```\n *\n * ```txt\n * {\n *   \"randomInts\": [23, 87, 45, 12, 78, 34, 56, 90, 11, 67]\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Multimodal</strong></summary>\n *\n * ```typescript\n * import { HumanMessage } from '@langchain/core/messages';\n *\n * const imageUrl = \"https://example.com/image.jpg\";\n * const imageData = await fetch(imageUrl).then(res => res.arrayBuffer());\n * const base64Image = Buffer.from(imageData).toString('base64');\n *\n * const message = new HumanMessage({\n *   content: [\n *     { type: \"text\", text: \"describe the weather in this image\" },\n *     {\n *       type: \"image_url\",\n *       image_url: { url: `data:image/jpeg;base64,${base64Image}` },\n *     },\n *   ]\n * });\n *\n * const imageDescriptionAiMsg = await llm.invoke([message]);\n * console.log(imageDescriptionAiMsg.content);\n * ```\n *\n * ```txt\n * The weather in the image appears to be clear and sunny. The sky is mostly blue with a few scattered white clouds, indicating fair weather. The bright sunlight is casting shadows on the green, grassy hill, suggesting it is a pleasant day with good visibility. There are no signs of rain or stormy conditions.\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Usage Metadata</strong></summary>\n *\n * ```typescript\n * const aiMsgForMetadata = await llm.invoke(input);\n * console.log(aiMsgForMetadata.usage_metadata);\n * ```\n *\n * ```txt\n * { input_tokens: 28, output_tokens: 5, total_tokens: 33 }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Logprobs</strong></summary>\n *\n * ```typescript\n * const logprobsLlm = new ChatOpenAI({ logprobs: true });\n * const aiMsgForLogprobs = await logprobsLlm.invoke(input);\n * console.log(aiMsgForLogprobs.response_metadata.logprobs);\n * ```\n *\n * ```txt\n * {\n *   content: [\n *     {\n *       token: 'J',\n *       logprob: -0.000050616763,\n *       bytes: [Array],\n *       top_logprobs: []\n *     },\n *     {\n *       token: \"'\",\n *       logprob: -0.01868736,\n *       bytes: [Array],\n *       top_logprobs: []\n *     },\n *     {\n *       token: 'ad',\n *       logprob: -0.0000030545007,\n *       bytes: [Array],\n *       top_logprobs: []\n *     },\n *     { token: 'ore', logprob: 0, bytes: [Array], top_logprobs: [] },\n *     {\n *       token: ' la',\n *       logprob: -0.515404,\n *       bytes: [Array],\n *       top_logprobs: []\n *     },\n *     {\n *       token: ' programm',\n *       logprob: -0.0000118755715,\n *       bytes: [Array],\n *       top_logprobs: []\n *     },\n *     { token: 'ation', logprob: 0, bytes: [Array], top_logprobs: [] },\n *     {\n *       token: '.',\n *       logprob: -0.0000037697225,\n *       bytes: [Array],\n *       top_logprobs: []\n *     }\n *   ],\n *   refusal: null\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Response Metadata</strong></summary>\n *\n * ```typescript\n * const aiMsgForResponseMetadata = await llm.invoke(input);\n * console.log(aiMsgForResponseMetadata.response_metadata);\n * ```\n *\n * ```txt\n * {\n *   tokenUsage: { completionTokens: 5, promptTokens: 28, totalTokens: 33 },\n *   finish_reason: 'stop',\n *   system_fingerprint: 'fp_3aa7262c27'\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>JSON Schema Structured Output</strong></summary>\n *\n * ```typescript\n * const llmForJsonSchema = new ChatOpenAI({\n *   model: \"gpt-4o-2024-08-06\",\n * }).withStructuredOutput(\n *   z.object({\n *     command: z.string().describe(\"The command to execute\"),\n *     expectedOutput: z.string().describe(\"The expected output of the command\"),\n *     options: z\n *       .array(z.string())\n *       .describe(\"The options you can pass to the command\"),\n *   }),\n *   {\n *     method: \"jsonSchema\",\n *     strict: true, // Optional when using the `jsonSchema` method\n *   }\n * );\n *\n * const jsonSchemaRes = await llmForJsonSchema.invoke(\n *   \"What is the command to list files in a directory?\"\n * );\n * console.log(jsonSchemaRes);\n * ```\n *\n * ```txt\n * {\n *   command: 'ls',\n *   expectedOutput: 'A list of files and subdirectories within the specified directory.',\n *   options: [\n *     '-a: include directory entries whose names begin with a dot (.).',\n *     '-l: use a long listing format.',\n *     '-h: with -l, print sizes in human readable format (e.g., 1K, 234M, 2G).',\n *     '-t: sort by time, newest first.',\n *     '-r: reverse order while sorting.',\n *     '-S: sort by file size, largest first.',\n *     '-R: list subdirectories recursively.'\n *   ]\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Audio Outputs</strong></summary>\n *\n * ```typescript\n * import { ChatOpenAI } from \"@langchain/openai\";\n *\n * const modelWithAudioOutput = new ChatOpenAI({\n *   model: \"gpt-4o-audio-preview\",\n *   // You may also pass these fields to `.withConfig` as a call argument.\n *   modalities: [\"text\", \"audio\"], // Specifies that the model should output audio.\n *   audio: {\n *     voice: \"alloy\",\n *     format: \"wav\",\n *   },\n * });\n *\n * const audioOutputResult = await modelWithAudioOutput.invoke(\"Tell me a joke about cats.\");\n * const castMessageContent = audioOutputResult.content[0] as Record<string, any>;\n *\n * console.log({\n *   ...castMessageContent,\n *   data: castMessageContent.data.slice(0, 100) // Sliced for brevity\n * })\n * ```\n *\n * ```txt\n * {\n *   id: 'audio_67117718c6008190a3afad3e3054b9b6',\n *   data: 'UklGRqYwBgBXQVZFZm10IBAAAAABAAEAwF0AAIC7AAACABAATElTVBoAAABJTkZPSVNGVA4AAABMYXZmNTguMjkuMTAwAGRhdGFg',\n *   expires_at: 1729201448,\n *   transcript: 'Sure! Why did the cat sit on the computer? Because it wanted to keep an eye on the mouse!'\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Audio Outputs</strong></summary>\n *\n * ```typescript\n * import { ChatOpenAI } from \"@langchain/openai\";\n *\n * const modelWithAudioOutput = new ChatOpenAI({\n *   model: \"gpt-4o-audio-preview\",\n *   // You may also pass these fields to `.withConfig` as a call argument.\n *   modalities: [\"text\", \"audio\"], // Specifies that the model should output audio.\n *   audio: {\n *     voice: \"alloy\",\n *     format: \"wav\",\n *   },\n * });\n *\n * const audioOutputResult = await modelWithAudioOutput.invoke(\"Tell me a joke about cats.\");\n * const castAudioContent = audioOutputResult.additional_kwargs.audio as Record<string, any>;\n *\n * console.log({\n *   ...castAudioContent,\n *   data: castAudioContent.data.slice(0, 100) // Sliced for brevity\n * })\n * ```\n *\n * ```txt\n * {\n *   id: 'audio_67117718c6008190a3afad3e3054b9b6',\n *   data: 'UklGRqYwBgBXQVZFZm10IBAAAAABAAEAwF0AAIC7AAACABAATElTVBoAAABJTkZPSVNGVA4AAABMYXZmNTguMjkuMTAwAGRhdGFg',\n *   expires_at: 1729201448,\n *   transcript: 'Sure! Why did the cat sit on the computer? Because it wanted to keep an eye on the mouse!'\n * }\n * ```\n * </details>\n *\n * <br />\n */\nexport class ChatOpenAI extends BaseChatModel {\n    static lc_name() {\n        return \"ChatOpenAI\";\n    }\n    get callKeys() {\n        return [\n            ...super.callKeys,\n            \"options\",\n            \"function_call\",\n            \"functions\",\n            \"tools\",\n            \"tool_choice\",\n            \"promptIndex\",\n            \"response_format\",\n            \"seed\",\n            \"reasoning_effort\",\n            \"service_tier\",\n        ];\n    }\n    get lc_secrets() {\n        return {\n            openAIApiKey: \"OPENAI_API_KEY\",\n            apiKey: \"OPENAI_API_KEY\",\n            organization: \"OPENAI_ORGANIZATION\",\n        };\n    }\n    get lc_aliases() {\n        return {\n            modelName: \"model\",\n            openAIApiKey: \"openai_api_key\",\n            apiKey: \"openai_api_key\",\n        };\n    }\n    get lc_serializable_keys() {\n        return [\n            \"configuration\",\n            \"logprobs\",\n            \"topLogprobs\",\n            \"prefixMessages\",\n            \"supportsStrictToolCalling\",\n            \"modalities\",\n            \"audio\",\n            \"reasoningEffort\",\n            \"temperature\",\n            \"maxTokens\",\n            \"topP\",\n            \"frequencyPenalty\",\n            \"presencePenalty\",\n            \"n\",\n            \"logitBias\",\n            \"user\",\n            \"streaming\",\n            \"streamUsage\",\n            \"modelName\",\n            \"model\",\n            \"modelKwargs\",\n            \"stop\",\n            \"stopSequences\",\n            \"timeout\",\n            \"openAIApiKey\",\n            \"apiKey\",\n            \"cache\",\n            \"maxConcurrency\",\n            \"maxRetries\",\n            \"verbose\",\n            \"callbacks\",\n            \"tags\",\n            \"metadata\",\n            \"disableStreaming\",\n            \"useResponsesApi\",\n            \"zdrEnabled\",\n            \"reasoning\",\n        ];\n    }\n    constructor(fields) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"temperature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"topP\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"frequencyPenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"presencePenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"n\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"logitBias\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @deprecated Use \"model\" instead */\n        Object.defineProperty(this, \"modelName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"model\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"gpt-3.5-turbo\"\n        });\n        Object.defineProperty(this, \"modelKwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stopSequences\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"user\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"streamUsage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"maxTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"logprobs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"topLogprobs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"openAIApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"organization\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"__includeRawResponse\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Whether the model supports the `strict` argument when passing in tools.\n         * If `undefined` the `strict` argument will not be passed to OpenAI.\n         */\n        Object.defineProperty(this, \"supportsStrictToolCalling\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"audio\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"modalities\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * @deprecated Use {@link reasoning} object instead.\n         */\n        Object.defineProperty(this, \"reasoningEffort\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Options for reasoning models.\n         */\n        Object.defineProperty(this, \"reasoning\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Whether to use the responses API for all requests. If `false` the responses API will be used\n         * only when required in order to fulfill the request.\n         */\n        Object.defineProperty(this, \"useResponsesApi\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        /**\n         * Must be set to `true` in tenancies with Zero Data Retention. Setting to `true` will disable\n         * output storage in the Responses API, but this DOES NOT enable Zero Data Retention in your\n         * OpenAI organization or project. This must be configured directly with OpenAI.\n         *\n         * See:\n         * https://help.openai.com/en/articles/10503543-data-residency-for-the-openai-api\n         * https://platform.openai.com/docs/api-reference/responses/create#responses-create-store\n         *\n         * @default false\n         */\n        Object.defineProperty(this, \"zdrEnabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Service tier to use for this request. Can be \"auto\", \"default\", or \"flex\" or \"priority\".\n         * Specifies the service tier for prioritization and latency optimization.\n         */\n        Object.defineProperty(this, \"service_tier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.openAIApiKey =\n            fields?.apiKey ??\n                fields?.openAIApiKey ??\n                fields?.configuration?.apiKey ??\n                getEnvironmentVariable(\"OPENAI_API_KEY\");\n        this.apiKey = this.openAIApiKey;\n        this.organization =\n            fields?.configuration?.organization ??\n                getEnvironmentVariable(\"OPENAI_ORGANIZATION\");\n        this.model = fields?.model ?? fields?.modelName ?? this.model;\n        this.modelName = this.model;\n        this.modelKwargs = fields?.modelKwargs ?? {};\n        this.timeout = fields?.timeout;\n        this.temperature = fields?.temperature ?? this.temperature;\n        this.topP = fields?.topP ?? this.topP;\n        this.frequencyPenalty = fields?.frequencyPenalty ?? this.frequencyPenalty;\n        this.presencePenalty = fields?.presencePenalty ?? this.presencePenalty;\n        this.logprobs = fields?.logprobs;\n        this.topLogprobs = fields?.topLogprobs;\n        this.n = fields?.n ?? this.n;\n        this.logitBias = fields?.logitBias;\n        this.stop = fields?.stopSequences ?? fields?.stop;\n        this.stopSequences = this.stop;\n        this.user = fields?.user;\n        this.__includeRawResponse = fields?.__includeRawResponse;\n        this.audio = fields?.audio;\n        this.modalities = fields?.modalities;\n        this.reasoningEffort = fields?.reasoningEffort ?? fields?.reasoning?.effort;\n        this.reasoning =\n            fields?.reasoning ??\n                (fields?.reasoningEffort\n                    ? { effort: fields.reasoningEffort }\n                    : undefined);\n        this.maxTokens = fields?.maxCompletionTokens ?? fields?.maxTokens;\n        this.useResponsesApi = fields?.useResponsesApi ?? this.useResponsesApi;\n        this.disableStreaming = fields?.disableStreaming ?? this.disableStreaming;\n        this.streaming = fields?.streaming ?? false;\n        if (this.disableStreaming)\n            this.streaming = false;\n        this.streamUsage = fields?.streamUsage ?? this.streamUsage;\n        if (this.disableStreaming)\n            this.streamUsage = false;\n        this.clientConfig = {\n            apiKey: this.apiKey,\n            organization: this.organization,\n            dangerouslyAllowBrowser: true,\n            ...fields?.configuration,\n        };\n        // If `supportsStrictToolCalling` is explicitly set, use that value.\n        // Else leave undefined so it's not passed to OpenAI.\n        if (fields?.supportsStrictToolCalling !== undefined) {\n            this.supportsStrictToolCalling = fields.supportsStrictToolCalling;\n        }\n        if (fields?.service_tier !== undefined) {\n            this.service_tier = fields.service_tier;\n        }\n        this.zdrEnabled = fields?.zdrEnabled ?? false;\n    }\n    getLsParams(options) {\n        const params = this.invocationParams(options);\n        return {\n            ls_provider: \"openai\",\n            ls_model_name: this.model,\n            ls_model_type: \"chat\",\n            ls_temperature: params.temperature ?? undefined,\n            ls_max_tokens: params.max_tokens ?? undefined,\n            ls_stop: options.stop,\n        };\n    }\n    bindTools(tools, kwargs) {\n        let strict;\n        if (kwargs?.strict !== undefined) {\n            strict = kwargs.strict;\n        }\n        else if (this.supportsStrictToolCalling !== undefined) {\n            strict = this.supportsStrictToolCalling;\n        }\n        return this.withConfig({\n            tools: tools.map((tool) => isBuiltInTool(tool)\n                ? tool\n                : _convertChatOpenAIToolTypeToOpenAITool(tool, { strict })),\n            ...kwargs,\n        });\n    }\n    createResponseFormat(resFormat) {\n        if (resFormat &&\n            resFormat.type === \"json_schema\" &&\n            resFormat.json_schema.schema &&\n            isInteropZodSchema(resFormat.json_schema.schema)) {\n            return interopZodResponseFormat(resFormat.json_schema.schema, resFormat.json_schema.name, {\n                description: resFormat.json_schema.description,\n            });\n        }\n        return resFormat;\n    }\n    getReasoningParams(options) {\n        if (!isReasoningModel(this.model)) {\n            return;\n        }\n        let reasoning;\n        // apply reasoning options in reverse order of priority without else blocks so that highest priority overrides lowest priority\n        if (this.reasoningEffort !== undefined) {\n            reasoning = { effort: this.reasoningEffort };\n        }\n        if (this.reasoning !== undefined) {\n            reasoning = {\n                ...reasoning,\n                ...this.reasoning,\n            };\n        }\n        if (options?.reasoning_effort !== undefined) {\n            reasoning = {\n                ...reasoning,\n                effort: options.reasoning_effort,\n            };\n        }\n        if (options?.reasoning !== undefined) {\n            reasoning = {\n                ...reasoning,\n                ...options.reasoning,\n            };\n        }\n        return reasoning;\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    invocationParams(options, extra) {\n        let strict;\n        if (options?.strict !== undefined) {\n            strict = options.strict;\n        }\n        else if (this.supportsStrictToolCalling !== undefined) {\n            strict = this.supportsStrictToolCalling;\n        }\n        if (this._useResponseApi(options)) {\n            const params = {\n                model: this.model,\n                temperature: this.temperature,\n                top_p: this.topP,\n                user: this.user,\n                // if include_usage is set or streamUsage then stream must be set to true.\n                stream: this.streaming,\n                previous_response_id: options?.previous_response_id,\n                truncation: options?.truncation,\n                include: options?.include,\n                tools: options?.tools?.length\n                    ? _reduceChatOpenAIToolsForResponses(options.tools, {\n                        stream: this.streaming,\n                        strict,\n                    })\n                    : undefined,\n                tool_choice: isBuiltInToolChoice(options?.tool_choice)\n                    ? options?.tool_choice\n                    : (() => {\n                        const formatted = formatToOpenAIToolChoice(options?.tool_choice);\n                        if (typeof formatted === \"object\" && \"type\" in formatted) {\n                            return { type: \"function\", name: formatted.function.name };\n                        }\n                        else {\n                            return undefined;\n                        }\n                    })(),\n                text: (() => {\n                    if (options?.text)\n                        return options.text;\n                    const format = this.createResponseFormat(options?.response_format);\n                    if (format?.type === \"json_schema\") {\n                        if (format.json_schema.schema != null) {\n                            return {\n                                format: {\n                                    type: \"json_schema\",\n                                    schema: format.json_schema.schema,\n                                    description: format.json_schema.description,\n                                    name: format.json_schema.name,\n                                    strict: format.json_schema.strict,\n                                },\n                            };\n                        }\n                        return undefined;\n                    }\n                    return { format };\n                })(),\n                parallel_tool_calls: options?.parallel_tool_calls,\n                max_output_tokens: this.maxTokens === -1 ? undefined : this.maxTokens,\n                ...(this.zdrEnabled ? { store: false } : {}),\n                ...this.modelKwargs,\n            };\n            const reasoning = this.getReasoningParams(options);\n            if (reasoning !== undefined) {\n                params.reasoning = reasoning;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return params;\n        }\n        let streamOptionsConfig = {};\n        if (options?.stream_options !== undefined) {\n            streamOptionsConfig = { stream_options: options.stream_options };\n        }\n        else if (this.streamUsage && (this.streaming || extra?.streaming)) {\n            streamOptionsConfig = { stream_options: { include_usage: true } };\n        }\n        const params = {\n            model: this.model,\n            temperature: this.temperature,\n            top_p: this.topP,\n            frequency_penalty: this.frequencyPenalty,\n            presence_penalty: this.presencePenalty,\n            logprobs: this.logprobs,\n            top_logprobs: this.topLogprobs,\n            n: this.n,\n            logit_bias: this.logitBias,\n            stop: options?.stop ?? this.stopSequences,\n            user: this.user,\n            // if include_usage is set or streamUsage then stream must be set to true.\n            stream: this.streaming,\n            functions: options?.functions,\n            function_call: options?.function_call,\n            tools: options?.tools?.length\n                ? options.tools.map((tool) => _convertChatOpenAIToolTypeToOpenAITool(tool, { strict }))\n                : undefined,\n            tool_choice: formatToOpenAIToolChoice(options?.tool_choice),\n            response_format: this.createResponseFormat(options?.response_format),\n            seed: options?.seed,\n            ...streamOptionsConfig,\n            parallel_tool_calls: options?.parallel_tool_calls,\n            ...(this.audio || options?.audio\n                ? { audio: this.audio || options?.audio }\n                : {}),\n            ...(this.modalities || options?.modalities\n                ? { modalities: this.modalities || options?.modalities }\n                : {}),\n            ...this.modelKwargs,\n        };\n        if (options?.prediction !== undefined) {\n            params.prediction = options.prediction;\n        }\n        if (this.service_tier !== undefined) {\n            params.service_tier = this.service_tier;\n        }\n        if (options?.service_tier !== undefined) {\n            params.service_tier = options.service_tier;\n        }\n        const reasoning = this.getReasoningParams(options);\n        if (reasoning !== undefined && reasoning.effort !== undefined) {\n            params.reasoning_effort = reasoning.effort;\n        }\n        if (isReasoningModel(params.model)) {\n            params.max_completion_tokens =\n                this.maxTokens === -1 ? undefined : this.maxTokens;\n        }\n        else {\n            params.max_tokens = this.maxTokens === -1 ? undefined : this.maxTokens;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return params;\n    }\n    _convertOpenAIChatCompletionMessageToBaseMessage(message, rawResponse) {\n        const rawToolCalls = message.tool_calls;\n        switch (message.role) {\n            case \"assistant\": {\n                const toolCalls = [];\n                const invalidToolCalls = [];\n                for (const rawToolCall of rawToolCalls ?? []) {\n                    try {\n                        toolCalls.push(parseToolCall(rawToolCall, { returnId: true }));\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    }\n                    catch (e) {\n                        invalidToolCalls.push(makeInvalidToolCall(rawToolCall, e.message));\n                    }\n                }\n                const additional_kwargs = {\n                    function_call: message.function_call,\n                    tool_calls: rawToolCalls,\n                };\n                if (this.__includeRawResponse !== undefined) {\n                    additional_kwargs.__raw_response = rawResponse;\n                }\n                const response_metadata = {\n                    model_name: rawResponse.model,\n                    ...(rawResponse.system_fingerprint\n                        ? {\n                            usage: { ...rawResponse.usage },\n                            system_fingerprint: rawResponse.system_fingerprint,\n                        }\n                        : {}),\n                };\n                if (message.audio) {\n                    additional_kwargs.audio = message.audio;\n                }\n                return new AIMessage({\n                    content: message.content || \"\",\n                    tool_calls: toolCalls,\n                    invalid_tool_calls: invalidToolCalls,\n                    additional_kwargs,\n                    response_metadata,\n                    id: rawResponse.id,\n                });\n            }\n            default:\n                return new ChatMessage(message.content || \"\", message.role ?? \"unknown\");\n        }\n    }\n    _convertOpenAIDeltaToBaseMessageChunk(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    delta, rawResponse, defaultRole) {\n        const role = delta.role ?? defaultRole;\n        const content = delta.content ?? \"\";\n        let additional_kwargs;\n        if (delta.function_call) {\n            additional_kwargs = {\n                function_call: delta.function_call,\n            };\n        }\n        else if (delta.tool_calls) {\n            additional_kwargs = {\n                tool_calls: delta.tool_calls,\n            };\n        }\n        else {\n            additional_kwargs = {};\n        }\n        if (this.__includeRawResponse) {\n            additional_kwargs.__raw_response = rawResponse;\n        }\n        if (delta.audio) {\n            additional_kwargs.audio = {\n                ...delta.audio,\n                index: rawResponse.choices[0].index,\n            };\n        }\n        const response_metadata = { usage: { ...rawResponse.usage } };\n        if (role === \"user\") {\n            return new HumanMessageChunk({ content, response_metadata });\n        }\n        else if (role === \"assistant\") {\n            const toolCallChunks = [];\n            if (Array.isArray(delta.tool_calls)) {\n                for (const rawToolCall of delta.tool_calls) {\n                    toolCallChunks.push({\n                        name: rawToolCall.function?.name,\n                        args: rawToolCall.function?.arguments,\n                        id: rawToolCall.id,\n                        index: rawToolCall.index,\n                        type: \"tool_call_chunk\",\n                    });\n                }\n            }\n            return new AIMessageChunk({\n                content,\n                tool_call_chunks: toolCallChunks,\n                additional_kwargs,\n                id: rawResponse.id,\n                response_metadata,\n            });\n        }\n        else if (role === \"system\") {\n            return new SystemMessageChunk({ content, response_metadata });\n        }\n        else if (role === \"developer\") {\n            return new SystemMessageChunk({\n                content,\n                response_metadata,\n                additional_kwargs: {\n                    __openai_role__: \"developer\",\n                },\n            });\n        }\n        else if (role === \"function\") {\n            return new FunctionMessageChunk({\n                content,\n                additional_kwargs,\n                name: delta.name,\n                response_metadata,\n            });\n        }\n        else if (role === \"tool\") {\n            return new ToolMessageChunk({\n                content,\n                additional_kwargs,\n                tool_call_id: delta.tool_call_id,\n                response_metadata,\n            });\n        }\n        else {\n            return new ChatMessageChunk({ content, role, response_metadata });\n        }\n    }\n    /** @ignore */\n    _identifyingParams() {\n        return {\n            model_name: this.model,\n            ...this.invocationParams(),\n            ...this.clientConfig,\n        };\n    }\n    async *_streamResponseChunks(messages, options, runManager) {\n        if (this._useResponseApi(options)) {\n            const streamIterable = await this.responseApiWithRetry({\n                ...this.invocationParams(options, { streaming: true }),\n                input: _convertMessagesToOpenAIResponsesParams(messages, this.model, this.zdrEnabled),\n                stream: true,\n            }, options);\n            for await (const data of streamIterable) {\n                const chunk = _convertOpenAIResponsesDeltaToBaseMessageChunk(data);\n                if (chunk == null)\n                    continue;\n                yield chunk;\n            }\n            return;\n        }\n        const messagesMapped = _convertMessagesToOpenAIParams(messages, this.model);\n        const params = {\n            ...this.invocationParams(options, {\n                streaming: true,\n            }),\n            messages: messagesMapped,\n            stream: true,\n        };\n        let defaultRole;\n        const streamIterable = await this.completionWithRetry(params, options);\n        let usage;\n        for await (const data of streamIterable) {\n            const choice = data?.choices?.[0];\n            if (data.usage) {\n                usage = data.usage;\n            }\n            if (!choice) {\n                continue;\n            }\n            const { delta } = choice;\n            if (!delta) {\n                continue;\n            }\n            const chunk = this._convertOpenAIDeltaToBaseMessageChunk(delta, data, defaultRole);\n            defaultRole = delta.role ?? defaultRole;\n            const newTokenIndices = {\n                prompt: options.promptIndex ?? 0,\n                completion: choice.index ?? 0,\n            };\n            if (typeof chunk.content !== \"string\") {\n                console.log(\"[WARNING]: Received non-string content from OpenAI. This is currently not supported.\");\n                continue;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const generationInfo = { ...newTokenIndices };\n            if (choice.finish_reason != null) {\n                generationInfo.finish_reason = choice.finish_reason;\n                // Only include system fingerprint in the last chunk for now\n                // to avoid concatenation issues\n                generationInfo.system_fingerprint = data.system_fingerprint;\n                generationInfo.model_name = data.model;\n                generationInfo.service_tier = data.service_tier;\n            }\n            if (this.logprobs) {\n                generationInfo.logprobs = choice.logprobs;\n            }\n            const generationChunk = new ChatGenerationChunk({\n                message: chunk,\n                text: chunk.content,\n                generationInfo,\n            });\n            yield generationChunk;\n            await runManager?.handleLLMNewToken(generationChunk.text ?? \"\", newTokenIndices, undefined, undefined, undefined, { chunk: generationChunk });\n        }\n        if (usage) {\n            const inputTokenDetails = {\n                ...(usage.prompt_tokens_details?.audio_tokens !== null && {\n                    audio: usage.prompt_tokens_details?.audio_tokens,\n                }),\n                ...(usage.prompt_tokens_details?.cached_tokens !== null && {\n                    cache_read: usage.prompt_tokens_details?.cached_tokens,\n                }),\n            };\n            const outputTokenDetails = {\n                ...(usage.completion_tokens_details?.audio_tokens !== null && {\n                    audio: usage.completion_tokens_details?.audio_tokens,\n                }),\n                ...(usage.completion_tokens_details?.reasoning_tokens !== null && {\n                    reasoning: usage.completion_tokens_details?.reasoning_tokens,\n                }),\n            };\n            const generationChunk = new ChatGenerationChunk({\n                message: new AIMessageChunk({\n                    content: \"\",\n                    response_metadata: {\n                        usage: { ...usage },\n                    },\n                    usage_metadata: {\n                        input_tokens: usage.prompt_tokens,\n                        output_tokens: usage.completion_tokens,\n                        total_tokens: usage.total_tokens,\n                        ...(Object.keys(inputTokenDetails).length > 0 && {\n                            input_token_details: inputTokenDetails,\n                        }),\n                        ...(Object.keys(outputTokenDetails).length > 0 && {\n                            output_token_details: outputTokenDetails,\n                        }),\n                    },\n                }),\n                text: \"\",\n            });\n            yield generationChunk;\n        }\n        if (options.signal?.aborted) {\n            throw new Error(\"AbortError\");\n        }\n    }\n    /**\n     * Get the identifying parameters for the model\n     *\n     */\n    identifyingParams() {\n        return this._identifyingParams();\n    }\n    /** @ignore */\n    async _responseApiGenerate(messages, options, runManager) {\n        const invocationParams = this.invocationParams(options);\n        if (invocationParams.stream) {\n            const stream = this._streamResponseChunks(messages, options, runManager);\n            let finalChunk;\n            for await (const chunk of stream) {\n                chunk.message.response_metadata = {\n                    ...chunk.generationInfo,\n                    ...chunk.message.response_metadata,\n                };\n                finalChunk = finalChunk?.concat(chunk) ?? chunk;\n            }\n            return {\n                generations: finalChunk ? [finalChunk] : [],\n                llmOutput: {\n                    estimatedTokenUsage: finalChunk?.message\n                        ?.usage_metadata,\n                },\n            };\n        }\n        const input = _convertMessagesToOpenAIResponsesParams(messages, this.model, this.zdrEnabled);\n        const data = await this.responseApiWithRetry({\n            input,\n            ...invocationParams,\n        }, { signal: options?.signal, ...options?.options });\n        return {\n            generations: [\n                {\n                    text: data.output_text,\n                    message: _convertOpenAIResponsesMessageToBaseMessage(data),\n                },\n            ],\n            llmOutput: {\n                id: data.id,\n                estimatedTokenUsage: data.usage\n                    ? {\n                        promptTokens: data.usage.input_tokens,\n                        completionTokens: data.usage.output_tokens,\n                        totalTokens: data.usage.total_tokens,\n                    }\n                    : undefined,\n            },\n        };\n    }\n    /**\n     * Determines whether the responses API should be used for the given request.\n     *\n     * @internal\n     *\n     * @param options The parsed call options for the request.\n     * @returns `true` if the responses API should be used, either because it is explicitly enabled,\n     * or because the request requires it.\n     */\n    _useResponseApi(options) {\n        const usesBuiltInTools = options?.tools?.some(isBuiltInTool);\n        const hasResponsesOnlyKwargs = options?.previous_response_id != null ||\n            options?.text != null ||\n            options?.truncation != null ||\n            options?.include != null ||\n            options?.reasoning?.summary != null ||\n            this.reasoning?.summary != null;\n        return this.useResponsesApi || usesBuiltInTools || hasResponsesOnlyKwargs;\n    }\n    /** @ignore */\n    async _generate(messages, options, runManager) {\n        if (this._useResponseApi(options)) {\n            return this._responseApiGenerate(messages, options, runManager);\n        }\n        const usageMetadata = {};\n        const params = this.invocationParams(options);\n        const messagesMapped = _convertMessagesToOpenAIParams(messages, this.model);\n        if (params.stream) {\n            const stream = this._streamResponseChunks(messages, options, runManager);\n            const finalChunks = {};\n            for await (const chunk of stream) {\n                chunk.message.response_metadata = {\n                    ...chunk.generationInfo,\n                    ...chunk.message.response_metadata,\n                };\n                const index = chunk.generationInfo?.completion ?? 0;\n                if (finalChunks[index] === undefined) {\n                    finalChunks[index] = chunk;\n                }\n                else {\n                    finalChunks[index] = finalChunks[index].concat(chunk);\n                }\n            }\n            const generations = Object.entries(finalChunks)\n                .sort(([aKey], [bKey]) => parseInt(aKey, 10) - parseInt(bKey, 10))\n                .map(([_, value]) => value);\n            const { functions, function_call } = this.invocationParams(options);\n            // OpenAI does not support token usage report under stream mode,\n            // fallback to estimation.\n            const promptTokenUsage = await this.getEstimatedTokenCountFromPrompt(messages, functions, function_call);\n            const completionTokenUsage = await this.getNumTokensFromGenerations(generations);\n            usageMetadata.input_tokens = promptTokenUsage;\n            usageMetadata.output_tokens = completionTokenUsage;\n            usageMetadata.total_tokens = promptTokenUsage + completionTokenUsage;\n            return {\n                generations,\n                llmOutput: {\n                    estimatedTokenUsage: {\n                        promptTokens: usageMetadata.input_tokens,\n                        completionTokens: usageMetadata.output_tokens,\n                        totalTokens: usageMetadata.total_tokens,\n                    },\n                },\n            };\n        }\n        else {\n            let data;\n            if (options.response_format &&\n                options.response_format.type === \"json_schema\") {\n                data = await this.betaParsedCompletionWithRetry({\n                    ...params,\n                    stream: false,\n                    messages: messagesMapped,\n                }, {\n                    signal: options?.signal,\n                    ...options?.options,\n                });\n            }\n            else {\n                data = await this.completionWithRetry({\n                    ...params,\n                    stream: false,\n                    messages: messagesMapped,\n                }, {\n                    signal: options?.signal,\n                    ...options?.options,\n                });\n            }\n            const { completion_tokens: completionTokens, prompt_tokens: promptTokens, total_tokens: totalTokens, prompt_tokens_details: promptTokensDetails, completion_tokens_details: completionTokensDetails, } = data?.usage ?? {};\n            if (completionTokens) {\n                usageMetadata.output_tokens =\n                    (usageMetadata.output_tokens ?? 0) + completionTokens;\n            }\n            if (promptTokens) {\n                usageMetadata.input_tokens =\n                    (usageMetadata.input_tokens ?? 0) + promptTokens;\n            }\n            if (totalTokens) {\n                usageMetadata.total_tokens =\n                    (usageMetadata.total_tokens ?? 0) + totalTokens;\n            }\n            if (promptTokensDetails?.audio_tokens !== null ||\n                promptTokensDetails?.cached_tokens !== null) {\n                usageMetadata.input_token_details = {\n                    ...(promptTokensDetails?.audio_tokens !== null && {\n                        audio: promptTokensDetails?.audio_tokens,\n                    }),\n                    ...(promptTokensDetails?.cached_tokens !== null && {\n                        cache_read: promptTokensDetails?.cached_tokens,\n                    }),\n                };\n            }\n            if (completionTokensDetails?.audio_tokens !== null ||\n                completionTokensDetails?.reasoning_tokens !== null) {\n                usageMetadata.output_token_details = {\n                    ...(completionTokensDetails?.audio_tokens !== null && {\n                        audio: completionTokensDetails?.audio_tokens,\n                    }),\n                    ...(completionTokensDetails?.reasoning_tokens !== null && {\n                        reasoning: completionTokensDetails?.reasoning_tokens,\n                    }),\n                };\n            }\n            const generations = [];\n            for (const part of data?.choices ?? []) {\n                const text = part.message?.content ?? \"\";\n                const generation = {\n                    text,\n                    message: this._convertOpenAIChatCompletionMessageToBaseMessage(part.message ?? { role: \"assistant\" }, data),\n                };\n                generation.generationInfo = {\n                    ...(part.finish_reason ? { finish_reason: part.finish_reason } : {}),\n                    ...(part.logprobs ? { logprobs: part.logprobs } : {}),\n                };\n                if (isAIMessage(generation.message)) {\n                    generation.message.usage_metadata = usageMetadata;\n                }\n                // Fields are not serialized unless passed to the constructor\n                // Doing this ensures all fields on the message are serialized\n                generation.message = new AIMessage(Object.fromEntries(Object.entries(generation.message).filter(([key]) => !key.startsWith(\"lc_\"))));\n                generations.push(generation);\n            }\n            return {\n                generations,\n                llmOutput: {\n                    tokenUsage: {\n                        promptTokens: usageMetadata.input_tokens,\n                        completionTokens: usageMetadata.output_tokens,\n                        totalTokens: usageMetadata.total_tokens,\n                    },\n                },\n            };\n        }\n    }\n    /**\n     * Estimate the number of tokens a prompt will use.\n     * Modified from: https://github.com/hmarr/openai-chat-tokens/blob/main/src/index.ts\n     */\n    async getEstimatedTokenCountFromPrompt(messages, functions, function_call) {\n        // It appears that if functions are present, the first system message is padded with a trailing newline. This\n        // was inferred by trying lots of combinations of messages and functions and seeing what the token counts were.\n        let tokens = (await this.getNumTokensFromMessages(messages)).totalCount;\n        // If there are functions, add the function definitions as they count towards token usage\n        if (functions && function_call !== \"auto\") {\n            const promptDefinitions = formatFunctionDefinitions(functions);\n            tokens += await this.getNumTokens(promptDefinitions);\n            tokens += 9; // Add nine per completion\n        }\n        // If there's a system message _and_ functions are present, subtract four tokens. I assume this is because\n        // functions typically add a system message, but reuse the first one if it's already there. This offsets\n        // the extra 9 tokens added by the function definitions.\n        if (functions && messages.find((m) => m._getType() === \"system\")) {\n            tokens -= 4;\n        }\n        // If function_call is 'none', add one token.\n        // If it's a FunctionCall object, add 4 + the number of tokens in the function name.\n        // If it's undefined or 'auto', don't add anything.\n        if (function_call === \"none\") {\n            tokens += 1;\n        }\n        else if (typeof function_call === \"object\") {\n            tokens += (await this.getNumTokens(function_call.name)) + 4;\n        }\n        return tokens;\n    }\n    /**\n     * Estimate the number of tokens an array of generations have used.\n     */\n    async getNumTokensFromGenerations(generations) {\n        const generationUsages = await Promise.all(generations.map(async (generation) => {\n            if (generation.message.additional_kwargs?.function_call) {\n                return (await this.getNumTokensFromMessages([generation.message]))\n                    .countPerMessage[0];\n            }\n            else {\n                return await this.getNumTokens(generation.message.content);\n            }\n        }));\n        return generationUsages.reduce((a, b) => a + b, 0);\n    }\n    async getNumTokensFromMessages(messages) {\n        let totalCount = 0;\n        let tokensPerMessage = 0;\n        let tokensPerName = 0;\n        // From: https://github.com/openai/openai-cookbook/blob/main/examples/How_to_format_inputs_to_ChatGPT_models.ipynb\n        if (this.model === \"gpt-3.5-turbo-0301\") {\n            tokensPerMessage = 4;\n            tokensPerName = -1;\n        }\n        else {\n            tokensPerMessage = 3;\n            tokensPerName = 1;\n        }\n        const countPerMessage = await Promise.all(messages.map(async (message) => {\n            const textCount = await this.getNumTokens(message.content);\n            const roleCount = await this.getNumTokens(messageToOpenAIRole(message));\n            const nameCount = message.name !== undefined\n                ? tokensPerName + (await this.getNumTokens(message.name))\n                : 0;\n            let count = textCount + tokensPerMessage + roleCount + nameCount;\n            // From: https://github.com/hmarr/openai-chat-tokens/blob/main/src/index.ts messageTokenEstimate\n            const openAIMessage = message;\n            if (openAIMessage._getType() === \"function\") {\n                count -= 2;\n            }\n            if (openAIMessage.additional_kwargs?.function_call) {\n                count += 3;\n            }\n            if (openAIMessage?.additional_kwargs.function_call?.name) {\n                count += await this.getNumTokens(openAIMessage.additional_kwargs.function_call?.name);\n            }\n            if (openAIMessage.additional_kwargs.function_call?.arguments) {\n                try {\n                    count += await this.getNumTokens(\n                    // Remove newlines and spaces\n                    JSON.stringify(JSON.parse(openAIMessage.additional_kwargs.function_call?.arguments)));\n                }\n                catch (error) {\n                    console.error(\"Error parsing function arguments\", error, JSON.stringify(openAIMessage.additional_kwargs.function_call));\n                    count += await this.getNumTokens(openAIMessage.additional_kwargs.function_call?.arguments);\n                }\n            }\n            totalCount += count;\n            return count;\n        }));\n        totalCount += 3; // every reply is primed with <|start|>assistant<|message|>\n        return { totalCount, countPerMessage };\n    }\n    async completionWithRetry(request, options) {\n        const requestOptions = this._getClientOptions(options);\n        return this.caller.call(async () => {\n            try {\n                const res = await this.client.chat.completions.create(request, requestOptions);\n                return res;\n            }\n            catch (e) {\n                const error = wrapOpenAIClientError(e);\n                throw error;\n            }\n        });\n    }\n    async responseApiWithRetry(request, options) {\n        return this.caller.call(async () => {\n            const requestOptions = this._getClientOptions(options);\n            try {\n                // use parse if dealing with json_schema\n                if (request.text?.format?.type === \"json_schema\" && !request.stream) {\n                    return await this.client.responses.parse(request, requestOptions);\n                }\n                return await this.client.responses.create(request, requestOptions);\n            }\n            catch (e) {\n                const error = wrapOpenAIClientError(e);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Call the beta chat completions parse endpoint. This should only be called if\n     * response_format is set to \"json_object\".\n     * @param {OpenAIClient.Chat.ChatCompletionCreateParamsNonStreaming} request\n     * @param {OpenAICoreRequestOptions | undefined} options\n     */\n    async betaParsedCompletionWithRetry(request, options\n    // Avoid relying importing a beta type with no official entrypoint\n    ) {\n        const requestOptions = this._getClientOptions(options);\n        return this.caller.call(async () => {\n            try {\n                const res = await this.client.chat.completions.parse(request, requestOptions);\n                return res;\n            }\n            catch (e) {\n                const error = wrapOpenAIClientError(e);\n                throw error;\n            }\n        });\n    }\n    _getClientOptions(options) {\n        if (!this.client) {\n            const openAIEndpointConfig = {\n                baseURL: this.clientConfig.baseURL,\n            };\n            const endpoint = getEndpoint(openAIEndpointConfig);\n            const params = {\n                ...this.clientConfig,\n                baseURL: endpoint,\n                timeout: this.timeout,\n                maxRetries: 0,\n            };\n            if (!params.baseURL) {\n                delete params.baseURL;\n            }\n            this.client = new OpenAIClient(params);\n        }\n        const requestOptions = {\n            ...this.clientConfig,\n            ...options,\n        };\n        return requestOptions;\n    }\n    _llmType() {\n        return \"openai\";\n    }\n    /** @ignore */\n    _combineLLMOutput(...llmOutputs) {\n        return llmOutputs.reduce((acc, llmOutput) => {\n            if (llmOutput && llmOutput.tokenUsage) {\n                acc.tokenUsage.completionTokens +=\n                    llmOutput.tokenUsage.completionTokens ?? 0;\n                acc.tokenUsage.promptTokens += llmOutput.tokenUsage.promptTokens ?? 0;\n                acc.tokenUsage.totalTokens += llmOutput.tokenUsage.totalTokens ?? 0;\n            }\n            return acc;\n        }, {\n            tokenUsage: {\n                completionTokens: 0,\n                promptTokens: 0,\n                totalTokens: 0,\n            },\n        });\n    }\n    withStructuredOutput(outputSchema, config) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let schema;\n        let name;\n        let method;\n        let includeRaw;\n        if (isStructuredOutputMethodParams(outputSchema)) {\n            schema = outputSchema.schema;\n            name = outputSchema.name;\n            method = outputSchema.method;\n            includeRaw = outputSchema.includeRaw;\n        }\n        else {\n            schema = outputSchema;\n            name = config?.name;\n            method = config?.method;\n            includeRaw = config?.includeRaw;\n        }\n        let llm;\n        let outputParser;\n        if (config?.strict !== undefined && method === \"jsonMode\") {\n            throw new Error(\"Argument `strict` is only supported for `method` = 'function_calling'\");\n        }\n        if (!this.model.startsWith(\"gpt-3\") &&\n            !this.model.startsWith(\"gpt-4-\") &&\n            this.model !== \"gpt-4\") {\n            if (method === undefined) {\n                method = \"jsonSchema\";\n            }\n        }\n        else if (method === \"jsonSchema\") {\n            console.warn(`[WARNING]: JSON Schema is not supported for model \"${this.model}\". Falling back to tool calling.`);\n        }\n        if (method === \"jsonMode\") {\n            let outputFormatSchema;\n            if (isInteropZodSchema(schema)) {\n                outputParser = StructuredOutputParser.fromZodSchema(schema);\n                outputFormatSchema = toJsonSchema(schema);\n            }\n            else {\n                outputParser = new JsonOutputParser();\n            }\n            llm = this.withConfig({\n                response_format: { type: \"json_object\" },\n                ls_structured_output_format: {\n                    kwargs: { method: \"jsonMode\" },\n                    schema: outputFormatSchema,\n                },\n            });\n        }\n        else if (method === \"jsonSchema\") {\n            llm = this.withConfig({\n                response_format: {\n                    type: \"json_schema\",\n                    json_schema: {\n                        name: name ?? \"extract\",\n                        description: getSchemaDescription(schema),\n                        schema,\n                        strict: config?.strict,\n                    },\n                },\n                ls_structured_output_format: {\n                    kwargs: { method: \"jsonSchema\" },\n                    schema: toJsonSchema(schema),\n                },\n            });\n            if (isInteropZodSchema(schema)) {\n                const altParser = StructuredOutputParser.fromZodSchema(schema);\n                outputParser = RunnableLambda.from((aiMessage) => {\n                    if (\"parsed\" in aiMessage.additional_kwargs) {\n                        return aiMessage.additional_kwargs.parsed;\n                    }\n                    return altParser;\n                });\n            }\n            else {\n                outputParser = new JsonOutputParser();\n            }\n        }\n        else {\n            let functionName = name ?? \"extract\";\n            // Is function calling\n            if (isInteropZodSchema(schema)) {\n                const asJsonSchema = toJsonSchema(schema);\n                llm = this.withConfig({\n                    tools: [\n                        {\n                            type: \"function\",\n                            function: {\n                                name: functionName,\n                                description: asJsonSchema.description,\n                                parameters: asJsonSchema,\n                            },\n                        },\n                    ],\n                    tool_choice: {\n                        type: \"function\",\n                        function: {\n                            name: functionName,\n                        },\n                    },\n                    ls_structured_output_format: {\n                        kwargs: { method: \"functionCalling\" },\n                        schema: asJsonSchema,\n                    },\n                    // Do not pass `strict` argument to OpenAI if `config.strict` is undefined\n                    ...(config?.strict !== undefined ? { strict: config.strict } : {}),\n                });\n                outputParser = new JsonOutputKeyToolsParser({\n                    returnSingle: true,\n                    keyName: functionName,\n                    zodSchema: schema,\n                });\n            }\n            else {\n                let openAIFunctionDefinition;\n                if (typeof schema.name === \"string\" &&\n                    typeof schema.parameters === \"object\" &&\n                    schema.parameters != null) {\n                    openAIFunctionDefinition = schema;\n                    functionName = schema.name;\n                }\n                else {\n                    functionName = schema.title ?? functionName;\n                    openAIFunctionDefinition = {\n                        name: functionName,\n                        description: schema.description ?? \"\",\n                        parameters: schema,\n                    };\n                }\n                llm = this.withConfig({\n                    tools: [\n                        {\n                            type: \"function\",\n                            function: openAIFunctionDefinition,\n                        },\n                    ],\n                    tool_choice: {\n                        type: \"function\",\n                        function: {\n                            name: functionName,\n                        },\n                    },\n                    ls_structured_output_format: {\n                        kwargs: { method: \"functionCalling\" },\n                        schema: toJsonSchema(schema),\n                    },\n                    // Do not pass `strict` argument to OpenAI if `config.strict` is undefined\n                    ...(config?.strict !== undefined ? { strict: config.strict } : {}),\n                });\n                outputParser = new JsonOutputKeyToolsParser({\n                    returnSingle: true,\n                    keyName: functionName,\n                });\n            }\n        }\n        if (!includeRaw) {\n            return llm.pipe(outputParser);\n        }\n        const parserAssign = RunnablePassthrough.assign({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            parsed: (input, config) => outputParser.invoke(input.raw, config),\n        });\n        const parserNone = RunnablePassthrough.assign({\n            parsed: () => null,\n        });\n        const parsedWithFallback = parserAssign.withFallbacks({\n            fallbacks: [parserNone],\n        });\n        return RunnableSequence.from([{ raw: llm }, parsedWithFallback]);\n    }\n}\nfunction isStructuredOutputMethodParams(x\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    return (x !== undefined &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof x.schema ===\n            \"object\");\n}\n// inlined from openai/lib/parser.ts\nfunction makeParseableResponseFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: \"auto-parseable-response-format\",\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nfunction interopZodResponseFormat(zodSchema, name, props) {\n    if (isZodSchemaV3(zodSchema)) {\n        return zodResponseFormat(zodSchema, name, props);\n    }\n    if (isZodSchemaV4(zodSchema)) {\n        return makeParseableResponseFormat({\n            type: \"json_schema\",\n            json_schema: {\n                ...props,\n                name,\n                strict: true,\n                schema: z4.toJSONSchema(zodSchema, {\n                    cycles: \"ref\", // equivalent to nameStrategy: 'duplicate-ref'\n                    reused: \"ref\", // equivalent to $refStrategy: 'extract-to-root'\n                    override(ctx) {\n                        ctx.jsonSchema.title = name; // equivalent to `name` property\n                        // TODO: implement `nullableStrategy` patch-fix (zod doesn't support openApi3 json schema target)\n                        // TODO: implement `openaiStrictMode` patch-fix (where optional properties without `nullable` are not supported)\n                    },\n                    /// property equivalents from native `zodResponseFormat` fn\n                    // openaiStrictMode: true,\n                    // name,\n                    // nameStrategy: 'duplicate-ref',\n                    // $refStrategy: 'extract-to-root',\n                    // nullableStrategy: 'property',\n                }),\n            },\n        }, (content) => z4.parse(zodSchema, JSON.parse(content)));\n    }\n    throw new Error(\"Unsupported schema response format\");\n}\n","export const VERSION = '0.19.0'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import 'groq-sdk/shims/${shims.kind}'\\` before importing anything else from groq-sdk`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import 'groq-sdk/shims/${shims.kind}'\\` after \\`import 'groq-sdk/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n//# sourceMappingURL=registry.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n//# sourceMappingURL=MultipartBody.mjs.map","import { MultipartBody } from \"./MultipartBody.mjs\";\nexport function getRuntime({ manuallyImported } = {}) {\n    const recommendation = manuallyImported ?\n        `You may need to use polyfills`\n        : `Add one of these imports before your first \\`import … from 'groq-sdk'\\`:\n- \\`import 'groq-sdk/shims/node'\\` (if you're running on Node)\n- \\`import 'groq-sdk/shims/web'\\` (otherwise)\n`;\n    let _fetch, _Request, _Response, _Headers;\n    try {\n        // @ts-ignore\n        _fetch = fetch;\n        // @ts-ignore\n        _Request = Request;\n        // @ts-ignore\n        _Response = Response;\n        // @ts-ignore\n        _Headers = Headers;\n    }\n    catch (error) {\n        throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\n    }\n    return {\n        kind: 'web',\n        fetch: _fetch,\n        Request: _Request,\n        Response: _Response,\n        Headers: _Headers,\n        FormData: \n        // @ts-ignore\n        typeof FormData !== 'undefined' ? FormData : (class FormData {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\n            }\n        }),\n        Blob: typeof Blob !== 'undefined' ? Blob : (class Blob {\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\n            }\n        }),\n        File: \n        // @ts-ignore\n        typeof File !== 'undefined' ? File : (class File {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\n            }\n        }),\n        ReadableStream: \n        // @ts-ignore\n        typeof ReadableStream !== 'undefined' ? ReadableStream : (class ReadableStream {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`);\n            }\n        }),\n        getMultipartRequestOptions: async (\n        // @ts-ignore\n        form, opts) => ({\n            ...opts,\n            body: new MultipartBody(form),\n        }),\n        getDefaultAgent: (url) => undefined,\n        fileFromPath: () => {\n            throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/groq/groq-typescript#file-uploads');\n        },\n        isFsReadStream: (value) => false,\n    };\n}\n//# sourceMappingURL=web-runtime.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'groq-sdk/_shims/auto/runtime';\nexport const init = () => {\n  if (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\n};\nexport * from './registry.mjs';\n\ninit();\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class GroqError extends Error {\n}\nexport class APIError extends GroqError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.error = error;\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse;\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n}\nexport class AuthenticationError extends APIError {\n}\nexport class PermissionDeniedError extends APIError {\n}\nexport class NotFoundError extends APIError {\n}\nexport class ConflictError extends APIError {\n}\nexport class UnprocessableEntityError extends APIError {\n}\nexport class RateLimitError extends APIError {\n}\nexport class InternalServerError extends APIError {\n}\n//# sourceMappingURL=error.mjs.map","import { ReadableStream } from \"../_shims/index.mjs\";\nimport { GroqError } from \"../error.mjs\";\nimport { APIError } from \"../error.mjs\";\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        const decoder = new SSEDecoder();\n        async function* iterMessages() {\n            if (!response.body) {\n                controller.abort();\n                throw new GroqError(`Attempted to iterate over a response with no body`);\n            }\n            const lineDecoder = new LineDecoder();\n            const iter = readableStreamAsyncIterable(response.body);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    const sse = decoder.decode(line);\n                    if (sse)\n                        yield sse;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                const sse = decoder.decode(line);\n                if (sse)\n                    yield sse;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of iterMessages()) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null || sse.event === 'error') {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(data.error.status_code, data.error, data.error.message, undefined);\n                        }\n                        yield data;\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = readableStreamAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        const encoder = new TextEncoder();\n        return new ReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nclass LineDecoder {\n    constructor() {\n        this.buffer = [];\n        this.trailingCR = false;\n    }\n    decode(chunk) {\n        let text = this.decodeText(chunk);\n        if (this.trailingCR) {\n            text = '\\r' + text;\n            this.trailingCR = false;\n        }\n        if (text.endsWith('\\r')) {\n            this.trailingCR = true;\n            text = text.slice(0, -1);\n        }\n        if (!text) {\n            return [];\n        }\n        const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\n        let lines = text.split(LineDecoder.NEWLINE_REGEXP);\n        if (lines.length === 1 && !trailingNewline) {\n            this.buffer.push(lines[0]);\n            return [];\n        }\n        if (this.buffer.length > 0) {\n            lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\n            this.buffer = [];\n        }\n        if (!trailingNewline) {\n            this.buffer = [lines.pop() || ''];\n        }\n        return lines;\n    }\n    decodeText(bytes) {\n        if (bytes == null)\n            return '';\n        if (typeof bytes === 'string')\n            return bytes;\n        // Node:\n        if (typeof Buffer !== 'undefined') {\n            if (bytes instanceof Buffer) {\n                return bytes.toString();\n            }\n            if (bytes instanceof Uint8Array) {\n                return Buffer.from(bytes).toString();\n            }\n            throw new GroqError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n        }\n        // Browser\n        if (typeof TextDecoder !== 'undefined') {\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n                return this.textDecoder.decode(bytes);\n            }\n            throw new GroqError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n        }\n        throw new GroqError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n    }\n    flush() {\n        if (!this.buffer.length && !this.trailingCR) {\n            return [];\n        }\n        const lines = [this.buffer.join('')];\n        this.buffer = [];\n        this.trailingCR = false;\n        return lines;\n    }\n}\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r', '\\x0b', '\\x0c', '\\x1c', '\\x1d', '\\x1e', '\\x85', '\\u2028', '\\u2029']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r\\x0b\\x0c\\x1c\\x1d\\x1e\\x85\\u2028\\u2029]/g;\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function readableStreamAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceMappingURL=streaming.mjs.map","import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        return value;\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        // we need to convert the `Blob` into an array buffer because the `Blob` class\n        // that `node-fetch` defines is incompatible with the web standard which results\n        // in `new File` interpreting it as a string instead of binary data.\n        const data = isBlobLike(blob) ? [(await blob.arrayBuffer())] : [blob];\n        return new File(data, name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options?.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n            ?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./lib/streaming.mjs\";\nimport { GroqError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, init, } from \"./_shims/index.mjs\";\n// try running side effects outside of _shims/index to workaround https://github.com/vercel/next.js/issues/76881\ninit();\nimport { isBlobLike, isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        if (props.options.__streamClass) {\n            return props.options.__streamClass.fromSSEResponse(response, props.controller);\n        }\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    const mediaType = contentType?.split(';')[0]?.trim();\n    const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n    if (isJSON) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return json;\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props), props));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'groq-sdk'`:\n     * - `import 'groq-sdk/shims/node'` (if you're running on Node)\n     * - `import 'groq-sdk/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data and the raw `Response` instance.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'groq-sdk'`:\n     * - `import 'groq-sdk/shims/node'` (if you're running on Node)\n     * - `import 'groq-sdk/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 60000, // 1 minute\n    httpAgent, fetch: overriddenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overriddenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then(async (opts) => {\n            const body = opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n                : opts?.body instanceof DataView ? opts.body\n                    : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n                        : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n                            : opts?.body;\n            return { method, path, ...opts, body };\n        }));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        else if (ArrayBuffer.isView(body)) {\n            return body.byteLength.toString();\n        }\n        return null;\n    }\n    buildRequest(options, { retryCount = 0 } = {}) {\n        options = { ...options };\n        const { method, path, query, headers: headers = {} } = options;\n        const body = ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n            options.body\n            : isMultipartBody(options.body) ? options.body.body\n                : options.body ? JSON.stringify(options.body, null, 2)\n                    : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = options.timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    buildHeaders({ options, headers, contentLength, retryCount, }) {\n        const reqHeaders = {};\n        if (contentLength) {\n            reqHeaders['content-length'] = contentLength;\n        }\n        const defaultHeaders = this.defaultHeaders(options);\n        applyHeadersMut(reqHeaders, defaultHeaders);\n        applyHeadersMut(reqHeaders, headers);\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['content-type'];\n        }\n        // Don't set theses headers if they were already set or removed through default headers or by the caller.\n        // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n        // for the removal case.\n        if (getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n            getHeader(headers, 'x-stainless-retry-count') === undefined) {\n            reqHeaders['x-stainless-retry-count'] = String(retryCount);\n        }\n        if (getHeader(defaultHeaders, 'x-stainless-timeout') === undefined &&\n            getHeader(headers, 'x-stainless-timeout') === undefined &&\n            options.timeout) {\n            reqHeaders['x-stainless-timeout'] = String(options.timeout);\n        }\n        this.validateHeaders(reqHeaders, headers);\n        return reqHeaders;\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n            debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new GroqError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...options,\n        };\n        if (fetchOptions.method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = fetchOptions.method.toUpperCase();\n        }\n        return (\n        // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n        this.fetch.call(undefined, url, fetchOptions).finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new GroqError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __binaryRequest: true,\n    __binaryResponse: true,\n    __streamClass: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new GroqError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new GroqError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new GroqError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new GroqError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new GroqError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n    for (const k in newHeaders) {\n        if (!hasOwn(newHeaders, k))\n            continue;\n        const lowerKey = k.toLowerCase();\n        if (!lowerKey)\n            continue;\n        const val = newHeaders[k];\n        if (val === null) {\n            delete targetHeaders[lowerKey];\n        }\n        else if (val !== undefined) {\n            targetHeaders[lowerKey] = val;\n        }\n    }\n}\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n        console.log(`Groq:DEBUG:${action}`, ...args);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const foundHeader = getHeader(headers, header);\n    if (foundHeader === undefined) {\n        throw new Error(`Could not find ${header} header`);\n    }\n    return foundHeader;\n};\nexport const getHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    return undefined;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new GroqError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n//# sourceMappingURL=core.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     */\n    create(body, options) {\n        return this._client.post('/openai/v1/audio/speech', {\n            body,\n            ...options,\n            headers: { Accept: 'application/octet-stream', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=speech.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Transcriptions extends APIResource {\n    /**\n     * Transcribes audio into the input language.\n     */\n    create(body, options) {\n        return this._client.post('/openai/v1/audio/transcriptions', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n}\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Translations extends APIResource {\n    /**\n     * Translates audio into English.\n     */\n    create(body, options) {\n        return this._client.post('/openai/v1/audio/translations', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n}\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport { Speech } from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport { Transcriptions } from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nimport { Translations } from \"./translations.mjs\";\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.speech = new SpeechAPI.Speech(this._client);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n    }\n}\nAudio.Speech = Speech;\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */\n    create(body, options) {\n        return this._client.post('/openai/v1/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchId, options) {\n        return this._client.get(`/openai/v1/batches/${batchId}`, options);\n    }\n    /**\n     * List your organization's batches.\n     */\n    list(options) {\n        return this._client.get('/openai/v1/batches', options);\n    }\n    /**\n     * Cancels a batch.\n     */\n    cancel(batchId, options) {\n        return this._client.post(`/openai/v1/batches/${batchId}/cancel`, options);\n    }\n}\n//# sourceMappingURL=batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/openai/v1/chat/completions', {\n            body,\n            ...options,\n            stream: body.stream ?? false,\n        });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions.mjs\";\nimport { Completions, } from \"./completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\nChat.Completions = Completions;\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Completions extends APIResource {\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     */\n    create(body, options) {\n        return this._client.post('/openai/v1/embeddings', { body, ...options });\n    }\n}\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport * as Core from \"../core.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints.\n     *\n     * The Batch API only supports `.jsonl` files up to 100 MB in size. The input also\n     * has a specific required [format](/docs/batch).\n     *\n     * Please contact us if you need to increase these storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/openai/v1/files', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Returns a list of files.\n     */\n    list(options) {\n        return this._client.get('/openai/v1/files', options);\n    }\n    /**\n     * Delete a file.\n     */\n    delete(fileId, options) {\n        return this._client.delete(`/openai/v1/files/${fileId}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileId, options) {\n        return this._client.get(`/openai/v1/files/${fileId}/content`, options);\n    }\n    /**\n     * Returns information about a file.\n     */\n    info(fileId, options) {\n        return this._client.get(`/openai/v1/files/${fileId}`, options);\n    }\n}\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Get a specific model\n     */\n    retrieve(model, options) {\n        return this._client.get(`/openai/v1/models/${model}`, options);\n    }\n    /**\n     * get all available models\n     */\n    list(options) {\n        return this._client.get('/openai/v1/models', options);\n    }\n    /**\n     * Delete a model\n     */\n    delete(model, options) {\n        return this._client.delete(`/openai/v1/models/${model}`, options);\n    }\n}\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a;\nimport * as Core from \"./core.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { Batches, } from \"./resources/batches.mjs\";\nimport { Completions } from \"./resources/completions.mjs\";\nimport { Embeddings, } from \"./resources/embeddings.mjs\";\nimport { Files, } from \"./resources/files.mjs\";\nimport { Models } from \"./resources/models.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\n/**\n * API Client for interfacing with the Groq API.\n */\nexport class Groq extends Core.APIClient {\n    /**\n     * API Client for interfacing with the Groq API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['GROQ_API_KEY'] ?? undefined]\n     * @param {string} [opts.baseURL=process.env['GROQ_BASE_URL'] ?? https://api.groq.com] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=1 minute] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('GROQ_BASE_URL'), apiKey = Core.readEnv('GROQ_API_KEY'), ...opts } = {}) {\n        if (apiKey === undefined) {\n            throw new Errors.GroqError(\"The GROQ_API_KEY environment variable is missing or empty; either provide it, or instantiate the Groq client with an apiKey option, like new Groq({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            ...opts,\n            baseURL: baseURL || `https://api.groq.com`,\n        };\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n            throw new Errors.GroqError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew Groq({ apiKey, dangerouslyAllowBrowser: true })\");\n        }\n        super({\n            baseURL: options.baseURL,\n            timeout: options.timeout ?? 60000 /* 1 minute */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.audio = new API.Audio(this);\n        this.models = new API.Models(this);\n        this.batches = new API.Batches(this);\n        this.files = new API.Files(this);\n        this._options = options;\n        this.apiKey = apiKey;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            ...this._options.defaultHeaders,\n        };\n    }\n    authHeaders(opts) {\n        return { Authorization: `Bearer ${this.apiKey}` };\n    }\n}\n_a = Groq;\nGroq.Groq = _a;\nGroq.DEFAULT_TIMEOUT = 60000; // 1 minute\nGroq.GroqError = Errors.GroqError;\nGroq.APIError = Errors.APIError;\nGroq.APIConnectionError = Errors.APIConnectionError;\nGroq.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nGroq.APIUserAbortError = Errors.APIUserAbortError;\nGroq.NotFoundError = Errors.NotFoundError;\nGroq.ConflictError = Errors.ConflictError;\nGroq.RateLimitError = Errors.RateLimitError;\nGroq.BadRequestError = Errors.BadRequestError;\nGroq.AuthenticationError = Errors.AuthenticationError;\nGroq.InternalServerError = Errors.InternalServerError;\nGroq.PermissionDeniedError = Errors.PermissionDeniedError;\nGroq.UnprocessableEntityError = Errors.UnprocessableEntityError;\nGroq.toFile = Uploads.toFile;\nGroq.fileFromPath = Uploads.fileFromPath;\nGroq.Completions = Completions;\nGroq.Chat = Chat;\nGroq.Embeddings = Embeddings;\nGroq.Audio = Audio;\nGroq.Models = Models;\nGroq.Batches = Batches;\nGroq.Files = Files;\nexport { toFile, fileFromPath } from \"./uploads.mjs\";\nexport { GroqError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } from \"./error.mjs\";\nexport default Groq;\n//# sourceMappingURL=index.mjs.map","import { toJsonSchema } from \"@langchain/core/utils/json_schema\";\nimport { BaseChatModel, } from \"@langchain/core/language_models/chat_models\";\nimport { AIMessage, AIMessageChunk, ChatMessage, ChatMessageChunk, HumanMessageChunk, SystemMessageChunk, isAIMessage, FunctionMessageChunk, ToolMessageChunk, } from \"@langchain/core/messages\";\nimport { ChatGenerationChunk, } from \"@langchain/core/outputs\";\nimport { getEnvironmentVariable } from \"@langchain/core/utils/env\";\nimport { isInteropZodSchema, } from \"@langchain/core/utils/types\";\nimport Groq from \"groq-sdk\";\nimport { RunnablePassthrough, RunnableSequence, } from \"@langchain/core/runnables\";\nimport { JsonOutputParser, StructuredOutputParser, } from \"@langchain/core/output_parsers\";\nimport { JsonOutputKeyToolsParser, parseToolCall, makeInvalidToolCall, convertLangChainToolCallToOpenAI, } from \"@langchain/core/output_parsers/openai_tools\";\nimport { convertToOpenAITool } from \"@langchain/core/utils/function_calling\";\n/**\n * Const list of fields that we'll pick from the `ChatCompletionCreateParams` interface\n * to use as the options allowed to be passed to invocation methods.\n *\n * @internal\n */\nconst CREATE_PARAMS_BASE_CALL_KEYS = [\n    // \"messages\", // passed as input arg to invocation methods\n    // \"model\", // don't allow override on invoke\n    \"frequency_penalty\",\n    \"function_call\",\n    \"functions\",\n    \"logit_bias\",\n    \"logprobs\",\n    \"max_completion_tokens\",\n    \"max_tokens\",\n    \"n\",\n    \"parallel_tool_calls\",\n    \"presence_penalty\",\n    \"reasoning_format\",\n    \"response_format\",\n    \"seed\",\n    // TODO: also pass as constructor arg\n    \"service_tier\",\n    \"stop\",\n    // \"stream\", // determined by invocation method\n    // other models only specify temperature as a constructor arg, but I don't see the harm in\n    // allowing overrides on invocation\n    \"temperature\",\n    \"tool_choice\",\n    // \"tools\", // need to allow users to specify langchain style tools, so we use a different type\n    \"top_logprobs\",\n    \"top_p\",\n    // \"user\", // don't allow override on invoke\n];\nconst ADDED_CALL_KEYS = [\n    \"headers\",\n    \"promptIndex\",\n    \"stream_options\",\n    \"tools\",\n];\nconst ALL_CALL_KEYS = [\n    ...CREATE_PARAMS_BASE_CALL_KEYS,\n    ...ADDED_CALL_KEYS,\n];\nexport function messageToGroqRole(message) {\n    const type = message._getType();\n    switch (type) {\n        case \"system\":\n            return \"system\";\n        case \"ai\":\n            return \"assistant\";\n        case \"human\":\n            return \"user\";\n        case \"function\":\n            return \"function\";\n        case \"tool\":\n            // Not yet supported as a type\n            return \"tool\";\n        default:\n            throw new Error(`Unknown message type: ${type}`);\n    }\n}\nfunction convertMessagesToGroqParams(messages) {\n    return messages.map((message) => {\n        if (typeof message.content !== \"string\") {\n            throw new Error(\"Non string message content not supported\");\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const completionParam = {\n            role: messageToGroqRole(message),\n            content: message.content,\n            name: message.name,\n            function_call: message.additional_kwargs.function_call,\n            tool_calls: message.additional_kwargs.tool_calls,\n            tool_call_id: message.tool_call_id,\n        };\n        if (isAIMessage(message) && !!message.tool_calls?.length) {\n            completionParam.tool_calls = message.tool_calls.map(convertLangChainToolCallToOpenAI);\n        }\n        else {\n            if (message.additional_kwargs.tool_calls != null) {\n                completionParam.tool_calls = message.additional_kwargs.tool_calls;\n            }\n            if (message.tool_call_id != null) {\n                completionParam.tool_call_id = message.tool_call_id;\n            }\n        }\n        return completionParam;\n    });\n}\nfunction groqResponseToChatMessage(message, usageMetadata, responseMetadata) {\n    const rawToolCalls = message.tool_calls;\n    switch (message.role) {\n        case \"assistant\": {\n            const toolCalls = [];\n            const invalidToolCalls = [];\n            for (const rawToolCall of rawToolCalls ?? []) {\n                try {\n                    toolCalls.push(parseToolCall(rawToolCall, { returnId: true }));\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (e) {\n                    invalidToolCalls.push(makeInvalidToolCall(rawToolCall, e.message));\n                }\n            }\n            return new AIMessage({\n                content: message.content || \"\",\n                additional_kwargs: { tool_calls: rawToolCalls },\n                tool_calls: toolCalls,\n                invalid_tool_calls: invalidToolCalls,\n                usage_metadata: usageMetadata,\n                response_metadata: responseMetadata,\n            });\n        }\n        default:\n            return new ChatMessage(message.content || \"\", message.role ?? \"unknown\");\n    }\n}\nfunction _convertDeltaToMessageChunk(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndelta, defaultRole, rawResponse, lastMessageId) {\n    const role = delta.role ?? defaultRole;\n    const content = delta.content ?? \"\";\n    let additional_kwargs;\n    if (delta.function_call) {\n        additional_kwargs = {\n            function_call: delta.function_call,\n        };\n    }\n    else if (delta.tool_calls) {\n        additional_kwargs = {\n            tool_calls: delta.tool_calls,\n        };\n    }\n    else {\n        additional_kwargs = {};\n    }\n    if (delta.audio) {\n        additional_kwargs.audio = {\n            ...delta.audio,\n            index: rawResponse.choices[0].index,\n        };\n    }\n    let usage;\n    let groqMessageId = lastMessageId;\n    let timing;\n    const xGroq = rawResponse.x_groq;\n    if (xGroq?.usage) {\n        usage = {\n            input_tokens: xGroq.usage.prompt_tokens,\n            output_tokens: xGroq.usage.completion_tokens,\n            total_tokens: xGroq.usage.total_tokens,\n        };\n        timing = {\n            completion_time: xGroq.usage.completion_time,\n            prompt_time: xGroq.usage.prompt_time,\n            queue_time: xGroq.usage.queue_time,\n            total_time: xGroq.usage.total_time,\n        };\n    }\n    if (xGroq?.id) {\n        groqMessageId = xGroq.id;\n    }\n    const response_metadata = { usage, timing };\n    if (role === \"user\") {\n        return new HumanMessageChunk({ content, response_metadata });\n    }\n    else if (role === \"assistant\") {\n        const toolCallChunks = [];\n        if (Array.isArray(delta.tool_calls)) {\n            for (const rawToolCall of delta.tool_calls) {\n                toolCallChunks.push({\n                    name: rawToolCall.function?.name,\n                    args: rawToolCall.function?.arguments,\n                    id: rawToolCall.id,\n                    index: rawToolCall.index,\n                    type: \"tool_call_chunk\",\n                });\n            }\n        }\n        return new AIMessageChunk({\n            content,\n            tool_call_chunks: toolCallChunks,\n            additional_kwargs,\n            id: groqMessageId,\n            response_metadata,\n        });\n    }\n    else if (role === \"system\") {\n        return new SystemMessageChunk({ content, response_metadata });\n    }\n    else if (role === \"developer\") {\n        return new SystemMessageChunk({\n            content,\n            response_metadata,\n            additional_kwargs: {\n                __openai_role__: \"developer\",\n            },\n        });\n    }\n    else if (role === \"function\") {\n        return new FunctionMessageChunk({\n            content,\n            additional_kwargs,\n            name: delta.name,\n            response_metadata,\n        });\n    }\n    else if (role === \"tool\") {\n        return new ToolMessageChunk({\n            content,\n            additional_kwargs,\n            tool_call_id: delta.tool_call_id,\n            response_metadata,\n        });\n    }\n    else {\n        return new ChatMessageChunk({ content, role, response_metadata });\n    }\n}\n/*\nfunction _oldConvertDeltaToMessageChunk(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  delta: Record<string, any>,\n  rawResponse: ChatCompletionsAPI.ChatCompletionChunk,\n  index: number,\n  defaultRole: GroqRoleEnum | undefined,\n  xGroq?: ChatCompletionsAPI.ChatCompletionChunk.XGroq\n): {\n  message: BaseMessageChunk;\n  toolCallData?: {\n    id: string;\n    name: string;\n    index: number;\n    type: \"tool_call_chunk\";\n  }[];\n} {\n  const { role } = delta;\n  const content = delta.content ?? \"\";\n  let additional_kwargs;\n  if (delta.function_call) {\n    additional_kwargs = {\n      function_call: delta.function_call,\n    };\n  } else if (delta.tool_calls) {\n    additional_kwargs = {\n      tool_calls: delta.tool_calls,\n    };\n  } else {\n    additional_kwargs = {};\n  }\n\n  let usageMetadata: UsageMetadata | undefined;\n  let groqMessageId: string | undefined;\n  if (xGroq?.usage) {\n    usageMetadata = {\n      input_tokens: xGroq.usage.prompt_tokens,\n      output_tokens: xGroq.usage.completion_tokens,\n      total_tokens: xGroq.usage.total_tokens,\n    };\n    groqMessageId = xGroq.id;\n  }\n\n  if (role === \"user\") {\n    return {\n      message: new HumanMessageChunk({ content }),\n    };\n  } else if (role === \"assistant\") {\n    const toolCallChunks = _convertDeltaToolCallToToolCallChunk(\n      delta.tool_calls,\n      index\n    );\n    return {\n      message: new AIMessageChunk({\n        content,\n        additional_kwargs,\n        tool_call_chunks: toolCallChunks\n          ? toolCallChunks.map((tc) => ({\n              type: tc.type,\n              args: tc.args,\n              index: tc.index,\n            }))\n          : undefined,\n        usage_metadata: usageMetadata,\n        id: groqMessageId,\n      }),\n      toolCallData: toolCallChunks\n        ? toolCallChunks.map((tc) => ({\n            id: tc.id ?? \"\",\n            name: tc.name ?? \"\",\n            index: tc.index ?? index,\n            type: \"tool_call_chunk\",\n          }))\n        : undefined,\n    };\n  } else if (role === \"system\") {\n    return {\n      message: new SystemMessageChunk({ content }),\n    };\n  } else {\n    return {\n      message: new ChatMessageChunk({ content, role }),\n    };\n  }\n}\n*/\n/**\n * Groq chat model integration.\n *\n * The Groq API is compatible to the OpenAI API with some limitations. View the\n * full API ref at:\n * @link {https://docs.api.groq.com/md/openai.oas.html}\n *\n * Setup:\n * Install `@langchain/groq` and set an environment variable named `GROQ_API_KEY`.\n *\n * ```bash\n * npm install @langchain/groq\n * export GROQ_API_KEY=\"your-api-key\"\n * ```\n *\n * ## [Constructor args](https://api.js.langchain.com/classes/langchain_groq.ChatGroq.html#constructor)\n *\n * ## [Runtime args](https://api.js.langchain.com/interfaces/langchain_groq.ChatGroqCallOptions.html)\n *\n * Runtime args can be passed as the second argument to any of the base runnable methods `.invoke`. `.stream`, `.batch`, etc.\n * They can also be passed via `.withConfig`, or the second arg in `.bindTools`, like shown in the examples below:\n *\n * ```typescript\n * // When calling `.withConfig`, call options should be passed via the first argument\n * const llmWithArgsBound = llm.withConfig({\n *   stop: [\"\\n\"],\n * });\n *\n * // When calling `.bindTools`, call options should be passed via the second argument\n * const llmWithTools = llm.bindTools(\n *   [...],\n *   {\n *     tool_choice: \"auto\",\n *   }\n * );\n * ```\n *\n * ## Examples\n *\n * <details open>\n * <summary><strong>Instantiate</strong></summary>\n *\n * ```typescript\n * import { ChatGroq } from '@langchain/groq';\n *\n * const llm = new ChatGroq({\n *   model: \"llama-3.3-70b-versatile\",\n *   temperature: 0,\n *   // other params...\n * });\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Invoking</strong></summary>\n *\n * ```typescript\n * const input = `Translate \"I love programming\" into French.`;\n *\n * // Models also accept a list of chat messages or a formatted prompt\n * const result = await llm.invoke(input);\n * console.log(result);\n * ```\n *\n * ```txt\n * AIMessage {\n *   \"content\": \"The French translation of \\\"I love programming\\\" is \\\"J'aime programmer\\\". In this sentence, \\\"J'aime\\\" is the first person singular conjugation of the French verb \\\"aimer\\\" which means \\\"to love\\\", and \\\"programmer\\\" is the French infinitive for \\\"to program\\\". I hope this helps! Let me know if you have any other questions.\",\n *   \"additional_kwargs\": {},\n *   \"response_metadata\": {\n *     \"tokenUsage\": {\n *       \"completionTokens\": 82,\n *       \"promptTokens\": 20,\n *       \"totalTokens\": 102\n *     },\n *     \"finish_reason\": \"stop\"\n *   },\n *   \"tool_calls\": [],\n *   \"invalid_tool_calls\": []\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Streaming Chunks</strong></summary>\n *\n * ```typescript\n * for await (const chunk of await llm.stream(input)) {\n *   console.log(chunk);\n * }\n * ```\n *\n * ```txt\n * AIMessageChunk {\n *   \"content\": \"\",\n *   \"additional_kwargs\": {},\n *   \"response_metadata\": {\n *     \"finishReason\": null\n *   },\n *   \"tool_calls\": [],\n *   \"tool_call_chunks\": [],\n *   \"invalid_tool_calls\": []\n * }\n * AIMessageChunk {\n *   \"content\": \"The\",\n *   \"additional_kwargs\": {},\n *   \"response_metadata\": {\n *     \"finishReason\": null\n *   },\n *   \"tool_calls\": [],\n *   \"tool_call_chunks\": [],\n *   \"invalid_tool_calls\": []\n * }\n * AIMessageChunk {\n *   \"content\": \" French\",\n *   \"additional_kwargs\": {},\n *   \"response_metadata\": {\n *     \"finishReason\": null\n *   },\n *   \"tool_calls\": [],\n *   \"tool_call_chunks\": [],\n *   \"invalid_tool_calls\": []\n * }\n * AIMessageChunk {\n *   \"content\": \" translation\",\n *   \"additional_kwargs\": {},\n *   \"response_metadata\": {\n *     \"finishReason\": null\n *   },\n *   \"tool_calls\": [],\n *   \"tool_call_chunks\": [],\n *   \"invalid_tool_calls\": []\n * }\n * AIMessageChunk {\n *   \"content\": \" of\",\n *   \"additional_kwargs\": {},\n *   \"response_metadata\": {\n *     \"finishReason\": null\n *   },\n *   \"tool_calls\": [],\n *   \"tool_call_chunks\": [],\n *   \"invalid_tool_calls\": []\n * }\n * AIMessageChunk {\n *   \"content\": \" \\\"\",\n *   \"additional_kwargs\": {},\n *   \"response_metadata\": {\n *     \"finishReason\": null\n *   },\n *   \"tool_calls\": [],\n *   \"tool_call_chunks\": [],\n *   \"invalid_tool_calls\": []\n * }\n * AIMessageChunk {\n *   \"content\": \"I\",\n *   \"additional_kwargs\": {},\n *   \"response_metadata\": {\n *     \"finishReason\": null\n *   },\n *   \"tool_calls\": [],\n *   \"tool_call_chunks\": [],\n *   \"invalid_tool_calls\": []\n * }\n * AIMessageChunk {\n *   \"content\": \" love\",\n *   \"additional_kwargs\": {},\n *   \"response_metadata\": {\n *     \"finishReason\": null\n *   },\n *   \"tool_calls\": [],\n *   \"tool_call_chunks\": [],\n *   \"invalid_tool_calls\": []\n * }\n * ...\n * AIMessageChunk {\n *   \"content\": \".\",\n *   \"additional_kwargs\": {},\n *   \"response_metadata\": {\n *     \"finishReason\": null\n *   },\n *   \"tool_calls\": [],\n *   \"tool_call_chunks\": [],\n *   \"invalid_tool_calls\": []\n * }\n * AIMessageChunk {\n *   \"content\": \"\",\n *   \"additional_kwargs\": {},\n *   \"response_metadata\": {\n *     \"finishReason\": \"stop\"\n *   },\n *   \"tool_calls\": [],\n *   \"tool_call_chunks\": [],\n *   \"invalid_tool_calls\": []\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Aggregate Streamed Chunks</strong></summary>\n *\n * ```typescript\n * import { AIMessageChunk } from '@langchain/core/messages';\n * import { concat } from '@langchain/core/utils/stream';\n *\n * const stream = await llm.stream(input);\n * let full: AIMessageChunk | undefined;\n * for await (const chunk of stream) {\n *   full = !full ? chunk : concat(full, chunk);\n * }\n * console.log(full);\n * ```\n *\n * ```txt\n * AIMessageChunk {\n *   \"content\": \"The French translation of \\\"I love programming\\\" is \\\"J'aime programmer\\\". In this sentence, \\\"J'aime\\\" is the first person singular conjugation of the French verb \\\"aimer\\\" which means \\\"to love\\\", and \\\"programmer\\\" is the French infinitive for \\\"to program\\\". I hope this helps! Let me know if you have any other questions.\",\n *   \"additional_kwargs\": {},\n *   \"response_metadata\": {\n *     \"finishReason\": \"stop\"\n *   },\n *   \"tool_calls\": [],\n *   \"tool_call_chunks\": [],\n *   \"invalid_tool_calls\": []\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Bind tools</strong></summary>\n *\n * ```typescript\n * import { z } from 'zod';\n *\n * const llmForToolCalling = new ChatGroq({\n *   model: \"llama3-groq-70b-8192-tool-use-preview\",\n *   temperature: 0,\n *   // other params...\n * });\n *\n * const GetWeather = {\n *   name: \"GetWeather\",\n *   description: \"Get the current weather in a given location\",\n *   schema: z.object({\n *     location: z.string().describe(\"The city and state, e.g. San Francisco, CA\")\n *   }),\n * }\n *\n * const GetPopulation = {\n *   name: \"GetPopulation\",\n *   description: \"Get the current population in a given location\",\n *   schema: z.object({\n *     location: z.string().describe(\"The city and state, e.g. San Francisco, CA\")\n *   }),\n * }\n *\n * const llmWithTools = llmForToolCalling.bindTools([GetWeather, GetPopulation]);\n * const aiMsg = await llmWithTools.invoke(\n *   \"Which city is hotter today and which is bigger: LA or NY?\"\n * );\n * console.log(aiMsg.tool_calls);\n * ```\n *\n * ```txt\n * [\n *   {\n *     name: 'GetWeather',\n *     args: { location: 'Los Angeles, CA' },\n *     type: 'tool_call',\n *     id: 'call_cd34'\n *   },\n *   {\n *     name: 'GetWeather',\n *     args: { location: 'New York, NY' },\n *     type: 'tool_call',\n *     id: 'call_68rf'\n *   },\n *   {\n *     name: 'GetPopulation',\n *     args: { location: 'Los Angeles, CA' },\n *     type: 'tool_call',\n *     id: 'call_f81z'\n *   },\n *   {\n *     name: 'GetPopulation',\n *     args: { location: 'New York, NY' },\n *     type: 'tool_call',\n *     id: 'call_8byt'\n *   }\n * ]\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Structured Output</strong></summary>\n *\n * ```typescript\n * import { z } from 'zod';\n *\n * const Joke = z.object({\n *   setup: z.string().describe(\"The setup of the joke\"),\n *   punchline: z.string().describe(\"The punchline to the joke\"),\n *   rating: z.number().optional().describe(\"How funny the joke is, from 1 to 10\")\n * }).describe('Joke to tell user.');\n *\n * const structuredLlm = llmForToolCalling.withStructuredOutput(Joke, { name: \"Joke\" });\n * const jokeResult = await structuredLlm.invoke(\"Tell me a joke about cats\");\n * console.log(jokeResult);\n * ```\n *\n * ```txt\n * {\n *   setup: \"Why don't cats play poker in the wild?\",\n *   punchline: 'Because there are too many cheetahs.'\n * }\n * ```\n * </details>\n *\n * <br />\n */\nexport class ChatGroq extends BaseChatModel {\n    get lc_serialized_keys() {\n        return [\n            \"client\",\n            \"model\",\n            \"temperature\",\n            \"stop\",\n            \"stopSequences\",\n            \"maxTokens\",\n            \"streaming\",\n            \"apiKey\",\n            \"streamUsage\",\n            \"topP\",\n            \"frequencyPenalty\",\n            \"presencePenalty\",\n            \"logprobs\",\n            \"n\",\n            \"logitBias\",\n            \"user\",\n            \"reasoningFormat\",\n            \"serviceTier\",\n            \"topLogprobs\",\n        ];\n    }\n    static lc_name() {\n        return \"ChatGroq\";\n    }\n    _llmType() {\n        return \"groq\";\n    }\n    get lc_secrets() {\n        return {\n            apiKey: \"GROQ_API_KEY\",\n        };\n    }\n    get callKeys() {\n        return [...super.callKeys, ...ALL_CALL_KEYS];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"chat_models\", \"groq\"]\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"model\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"temperature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0.7\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stopSequences\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streamUsage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"topP\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"frequencyPenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"presencePenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"logprobs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"n\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"logitBias\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"user\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reasoningFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serviceTier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"topLogprobs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        const apiKey = fields.apiKey || getEnvironmentVariable(\"GROQ_API_KEY\");\n        if (!apiKey) {\n            throw new Error(`Groq API key not found. Please set the GROQ_API_KEY environment variable or provide the key into \"apiKey\"`);\n        }\n        const defaultHeaders = {\n            \"User-Agent\": \"langchainjs\",\n            ...(fields.defaultHeaders ?? {}),\n        };\n        this.client = new Groq({\n            apiKey,\n            dangerouslyAllowBrowser: true,\n            baseURL: fields.baseUrl,\n            timeout: fields.timeout,\n            httpAgent: fields.httpAgent,\n            fetch: fields.fetch,\n            maxRetries: 0,\n            defaultHeaders,\n            defaultQuery: fields.defaultQuery,\n        });\n        this.apiKey = apiKey;\n        this.temperature = fields.temperature ?? this.temperature;\n        this.model = fields.model;\n        this.streaming = fields.streaming ?? this.streaming;\n        this.stop =\n            fields.stopSequences ??\n                (typeof fields.stop === \"string\" ? [fields.stop] : fields.stop) ??\n                [];\n        this.stopSequences = this.stop;\n        this.maxTokens = fields.maxTokens;\n        this.topP = fields.topP;\n        this.frequencyPenalty = fields.frequencyPenalty;\n        this.presencePenalty = fields.presencePenalty;\n        this.logprobs = fields.logprobs;\n        this.n = fields.n;\n        this.logitBias = fields.logitBias;\n        this.user = fields.user;\n    }\n    getLsParams(options) {\n        const params = this.invocationParams(options);\n        return {\n            ls_provider: \"groq\",\n            ls_model_name: this.model,\n            ls_model_type: \"chat\",\n            ls_temperature: params.temperature ?? this.temperature,\n            ls_max_tokens: params.max_tokens ?? this.maxTokens,\n            ls_stop: options.stop,\n        };\n    }\n    async completionWithRetry(request, options) {\n        return this.caller.call(async () => this.client.chat.completions.create(request, options));\n    }\n    invocationParams(options, extra) {\n        const params = super.invocationParams(options);\n        let streamOptionsConfig = {};\n        if (options?.stream_options !== undefined) {\n            streamOptionsConfig = { stream_options: options.stream_options };\n        }\n        else if ((this.streamUsage && this.streaming) || extra?.streaming) {\n            streamOptionsConfig = { stream_options: { include_usage: true } };\n        }\n        const toReturn = {\n            model: this.model,\n            frequency_penalty: this.frequencyPenalty,\n            function_call: options?.function_call,\n            functions: options?.functions,\n            logit_bias: this.logitBias,\n            logprobs: this.logprobs,\n            // max_completion_tokens\n            // max_tokens\n            n: this.n,\n            parallel_tool_calls: options?.parallel_tool_calls,\n            presence_penalty: this.presencePenalty,\n            reasoning_format: this.reasoningFormat,\n            response_format: options?.response_format,\n            seed: options?.seed,\n            service_tier: this.serviceTier,\n            stop: options?.stop ?? this.stopSequences,\n            temperature: options?.temperature ?? this.temperature,\n            tool_choice: _formatToGroqToolChoice(options?.tool_choice),\n            tools: options?.tools?.length\n                ? options.tools.map((tool) => convertToOpenAITool(tool))\n                : undefined,\n            top_logprobs: this.topLogprobs,\n            top_p: this.topP,\n            user: this.user,\n            // if include_usage is set or streamUsage then stream must be set to true.\n            stream: this.streaming,\n            ...params,\n            ...streamOptionsConfig,\n        };\n        toReturn.max_completion_tokens =\n            options?.max_completion_tokens ?? options?.max_tokens ?? this.maxTokens;\n        if (toReturn.max_completion_tokens === -1) {\n            delete toReturn.max_completion_tokens;\n        }\n        return toReturn;\n    }\n    bindTools(tools, kwargs) {\n        return this.withConfig({\n            tools: tools.map((tool) => convertToOpenAITool(tool)),\n            ...kwargs,\n        });\n    }\n    async *_streamResponseChunks(messages, options, runManager) {\n        const params = this.invocationParams(options, { streaming: true });\n        const messagesMapped = convertMessagesToGroqParams(messages);\n        const response = await this.completionWithRetry({\n            ...params,\n            messages: messagesMapped,\n            stream: true,\n        }, {\n            signal: options?.signal,\n            headers: options?.headers,\n        });\n        let role;\n        let lastMessageId;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let responseMetadata;\n        for await (const data of response) {\n            responseMetadata = data;\n            const choice = data?.choices[0];\n            if (!choice) {\n                continue;\n            }\n            // The `role` field is populated in the first delta of the response\n            // but is not present in subsequent deltas. Extract it when available.\n            if (choice.delta?.role) {\n                role = choice.delta.role;\n            }\n            const chunk = _convertDeltaToMessageChunk(choice.delta, role, data, lastMessageId);\n            const newTokenIndices = {\n                prompt: options.promptIndex ?? 0,\n                completion: choice.index ?? 0,\n            };\n            if (typeof chunk.content !== \"string\") {\n                console.log(\"[WARNING]: Received non-string content from OpenAI. This is currently not supported.\");\n                continue;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const generationInfo = { ...newTokenIndices };\n            if (choice.finish_reason != null) {\n                generationInfo.finish_reason = choice.finish_reason;\n                // Only include system fingerprint in the last chunk for now\n                // to avoid concatenation issues\n                generationInfo.system_fingerprint = data.system_fingerprint;\n                generationInfo.model_name = data.model;\n            }\n            const generationChunk = new ChatGenerationChunk({\n                message: chunk,\n                text: chunk.content,\n                generationInfo,\n            });\n            yield generationChunk;\n            await runManager?.handleLLMNewToken(generationChunk.text ?? \"\", newTokenIndices, undefined, undefined, undefined, { chunk: generationChunk });\n        }\n        if (responseMetadata) {\n            if (\"choices\" in responseMetadata) {\n                delete responseMetadata.choices;\n            }\n            yield new ChatGenerationChunk({\n                message: new AIMessageChunk({\n                    content: \"\",\n                    response_metadata: responseMetadata,\n                }),\n                text: \"\",\n            });\n        }\n        if (options.signal?.aborted) {\n            throw new Error(\"AbortError\");\n        }\n    }\n    async _generate(messages, options, runManager) {\n        if (this.streaming) {\n            const tokenUsage = {};\n            const stream = this._streamResponseChunks(messages, options, runManager);\n            const finalChunks = {};\n            for await (const chunk of stream) {\n                const index = chunk.generationInfo?.completion ?? 0;\n                if (finalChunks[index] === undefined) {\n                    finalChunks[index] = chunk;\n                }\n                else {\n                    finalChunks[index] = finalChunks[index].concat(chunk);\n                }\n            }\n            const generations = Object.entries(finalChunks)\n                .sort(([aKey], [bKey]) => parseInt(aKey, 10) - parseInt(bKey, 10))\n                .map(([_, value]) => value);\n            return { generations, llmOutput: { estimatedTokenUsage: tokenUsage } };\n        }\n        else {\n            return this._generateNonStreaming(messages, options, runManager);\n        }\n    }\n    async _generateNonStreaming(messages, options, _runManager) {\n        const tokenUsage = {};\n        const params = this.invocationParams(options);\n        const messagesMapped = convertMessagesToGroqParams(messages);\n        const data = await this.completionWithRetry({\n            ...params,\n            stream: false,\n            messages: messagesMapped,\n        }, {\n            signal: options?.signal,\n            headers: options?.headers,\n        });\n        if (\"usage\" in data && data.usage) {\n            const { completion_tokens: completionTokens, prompt_tokens: promptTokens, total_tokens: totalTokens, } = data.usage;\n            if (completionTokens) {\n                tokenUsage.completionTokens =\n                    (tokenUsage.completionTokens ?? 0) + completionTokens;\n            }\n            if (promptTokens) {\n                tokenUsage.promptTokens = (tokenUsage.promptTokens ?? 0) + promptTokens;\n            }\n            if (totalTokens) {\n                tokenUsage.totalTokens = (tokenUsage.totalTokens ?? 0) + totalTokens;\n            }\n        }\n        const generations = [];\n        if (\"choices\" in data && data.choices) {\n            for (const part of data.choices) {\n                const text = part.message?.content ?? \"\";\n                let usageMetadata;\n                if (tokenUsage.totalTokens !== undefined) {\n                    usageMetadata = {\n                        input_tokens: tokenUsage.promptTokens ?? 0,\n                        output_tokens: tokenUsage.completionTokens ?? 0,\n                        total_tokens: tokenUsage.totalTokens,\n                    };\n                }\n                // extract all fields from the response object except\n                // choices to be included as response metadata\n                const { choices: _choices, ...metadata } = data;\n                const generation = {\n                    text,\n                    message: groqResponseToChatMessage(part.message ?? { role: \"assistant\" }, usageMetadata, metadata),\n                };\n                generation.generationInfo = {\n                    ...(part.finish_reason ? { finish_reason: part.finish_reason } : {}),\n                    ...(part.logprobs ? { logprobs: part.logprobs } : {}),\n                };\n                generations.push(generation);\n            }\n        }\n        return {\n            generations,\n            llmOutput: { tokenUsage },\n        };\n    }\n    withStructuredOutput(outputSchema, config) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const schema = outputSchema;\n        const name = config?.name;\n        const method = config?.method;\n        const includeRaw = config?.includeRaw;\n        let functionName = name ?? \"extract\";\n        let outputParser;\n        let llm;\n        if (method === \"jsonMode\") {\n            llm = this.withConfig({\n                response_format: { type: \"json_object\" },\n            });\n            if (isInteropZodSchema(schema)) {\n                outputParser = StructuredOutputParser.fromZodSchema(schema);\n            }\n            else {\n                outputParser = new JsonOutputParser();\n            }\n        }\n        else {\n            if (isInteropZodSchema(schema)) {\n                const asJsonSchema = toJsonSchema(schema);\n                llm = this.bindTools([\n                    {\n                        type: \"function\",\n                        function: {\n                            name: functionName,\n                            description: asJsonSchema.description,\n                            parameters: asJsonSchema,\n                        },\n                    },\n                ]).withConfig({\n                    tool_choice: {\n                        type: \"function\",\n                        function: {\n                            name: functionName,\n                        },\n                    },\n                });\n                outputParser = new JsonOutputKeyToolsParser({\n                    returnSingle: true,\n                    keyName: functionName,\n                    zodSchema: schema,\n                });\n            }\n            else {\n                let openAIFunctionDefinition;\n                if (typeof schema.name === \"string\" &&\n                    typeof schema.parameters === \"object\" &&\n                    schema.parameters != null) {\n                    openAIFunctionDefinition = schema;\n                    functionName = schema.name;\n                }\n                else {\n                    functionName = schema.title ?? functionName;\n                    openAIFunctionDefinition = {\n                        name: functionName,\n                        description: schema.description ?? \"\",\n                        parameters: schema,\n                    };\n                }\n                llm = this.bindTools([\n                    {\n                        type: \"function\",\n                        function: openAIFunctionDefinition,\n                    },\n                ]).withConfig({\n                    tool_choice: {\n                        type: \"function\",\n                        function: {\n                            name: functionName,\n                        },\n                    },\n                });\n                outputParser = new JsonOutputKeyToolsParser({\n                    returnSingle: true,\n                    keyName: functionName,\n                });\n            }\n        }\n        if (!includeRaw) {\n            return llm.pipe(outputParser).withConfig({\n                runName: \"ChatGroqStructuredOutput\",\n            });\n        }\n        const parserAssign = RunnablePassthrough.assign({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            parsed: (input, config) => outputParser.invoke(input.raw, config),\n        });\n        const parserNone = RunnablePassthrough.assign({\n            parsed: () => null,\n        });\n        const parsedWithFallback = parserAssign.withFallbacks({\n            fallbacks: [parserNone],\n        });\n        return RunnableSequence.from([\n            {\n                raw: llm,\n            },\n            parsedWithFallback,\n        ]).withConfig({\n            runName: \"ChatGroqStructuredOutput\",\n        });\n    }\n}\nfunction _formatToGroqToolChoice(toolChoice) {\n    if (!toolChoice) {\n        return undefined;\n    }\n    else if (toolChoice === \"any\" || toolChoice === \"required\") {\n        return \"required\";\n    }\n    else if (toolChoice === \"auto\") {\n        return \"auto\";\n    }\n    else if (toolChoice === \"none\") {\n        return \"none\";\n    }\n    else if (typeof toolChoice === \"string\") {\n        return {\n            type: \"function\",\n            function: {\n                name: toolChoice,\n            },\n        };\n    }\n    else {\n        return toolChoice;\n    }\n}\n","/**\n * Contains the list of OpenAPI data types\n * as defined by https://swagger.io/docs/specification/data-models/data-types/\n * @public\n */\nvar SchemaType;\n(function (SchemaType) {\n    /** String type. */\n    SchemaType[\"STRING\"] = \"string\";\n    /** Number type. */\n    SchemaType[\"NUMBER\"] = \"number\";\n    /** Integer type. */\n    SchemaType[\"INTEGER\"] = \"integer\";\n    /** Boolean type. */\n    SchemaType[\"BOOLEAN\"] = \"boolean\";\n    /** Array type. */\n    SchemaType[\"ARRAY\"] = \"array\";\n    /** Object type. */\n    SchemaType[\"OBJECT\"] = \"object\";\n})(SchemaType || (SchemaType = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @public\n */\nvar ExecutableCodeLanguage;\n(function (ExecutableCodeLanguage) {\n    ExecutableCodeLanguage[\"LANGUAGE_UNSPECIFIED\"] = \"language_unspecified\";\n    ExecutableCodeLanguage[\"PYTHON\"] = \"python\";\n})(ExecutableCodeLanguage || (ExecutableCodeLanguage = {}));\n/**\n * Possible outcomes of code execution.\n * @public\n */\nvar Outcome;\n(function (Outcome) {\n    /**\n     * Unspecified status. This value should not be used.\n     */\n    Outcome[\"OUTCOME_UNSPECIFIED\"] = \"outcome_unspecified\";\n    /**\n     * Code execution completed successfully.\n     */\n    Outcome[\"OUTCOME_OK\"] = \"outcome_ok\";\n    /**\n     * Code execution finished but with a failure. `stderr` should contain the\n     * reason.\n     */\n    Outcome[\"OUTCOME_FAILED\"] = \"outcome_failed\";\n    /**\n     * Code execution ran for too long, and was cancelled. There may or may not\n     * be a partial output present.\n     */\n    Outcome[\"OUTCOME_DEADLINE_EXCEEDED\"] = \"outcome_deadline_exceeded\";\n})(Outcome || (Outcome = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Possible roles.\n * @public\n */\nconst POSSIBLE_ROLES = [\"user\", \"model\", \"function\", \"system\"];\n/**\n * Harm categories that would cause prompts or candidates to be blocked.\n * @public\n */\nvar HarmCategory;\n(function (HarmCategory) {\n    HarmCategory[\"HARM_CATEGORY_UNSPECIFIED\"] = \"HARM_CATEGORY_UNSPECIFIED\";\n    HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n    HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n    HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n    HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n    HarmCategory[\"HARM_CATEGORY_CIVIC_INTEGRITY\"] = \"HARM_CATEGORY_CIVIC_INTEGRITY\";\n})(HarmCategory || (HarmCategory = {}));\n/**\n * Threshold above which a prompt or candidate will be blocked.\n * @public\n */\nvar HarmBlockThreshold;\n(function (HarmBlockThreshold) {\n    /** Threshold is unspecified. */\n    HarmBlockThreshold[\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"] = \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\";\n    /** Content with NEGLIGIBLE will be allowed. */\n    HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    /** Content with NEGLIGIBLE and LOW will be allowed. */\n    HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    /** Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed. */\n    HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    /** All content will be allowed. */\n    HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(HarmBlockThreshold || (HarmBlockThreshold = {}));\n/**\n * Probability that a prompt or candidate matches a harm category.\n * @public\n */\nvar HarmProbability;\n(function (HarmProbability) {\n    /** Probability is unspecified. */\n    HarmProbability[\"HARM_PROBABILITY_UNSPECIFIED\"] = \"HARM_PROBABILITY_UNSPECIFIED\";\n    /** Content has a negligible chance of being unsafe. */\n    HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n    /** Content has a low chance of being unsafe. */\n    HarmProbability[\"LOW\"] = \"LOW\";\n    /** Content has a medium chance of being unsafe. */\n    HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n    /** Content has a high chance of being unsafe. */\n    HarmProbability[\"HIGH\"] = \"HIGH\";\n})(HarmProbability || (HarmProbability = {}));\n/**\n * Reason that a prompt was blocked.\n * @public\n */\nvar BlockReason;\n(function (BlockReason) {\n    // A blocked reason was not specified.\n    BlockReason[\"BLOCKED_REASON_UNSPECIFIED\"] = \"BLOCKED_REASON_UNSPECIFIED\";\n    // Content was blocked by safety settings.\n    BlockReason[\"SAFETY\"] = \"SAFETY\";\n    // Content was blocked, but the reason is uncategorized.\n    BlockReason[\"OTHER\"] = \"OTHER\";\n})(BlockReason || (BlockReason = {}));\n/**\n * Reason that a candidate finished.\n * @public\n */\nvar FinishReason;\n(function (FinishReason) {\n    // Default value. This value is unused.\n    FinishReason[\"FINISH_REASON_UNSPECIFIED\"] = \"FINISH_REASON_UNSPECIFIED\";\n    // Natural stop point of the model or provided stop sequence.\n    FinishReason[\"STOP\"] = \"STOP\";\n    // The maximum number of tokens as specified in the request was reached.\n    FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n    // The candidate content was flagged for safety reasons.\n    FinishReason[\"SAFETY\"] = \"SAFETY\";\n    // The candidate content was flagged for recitation reasons.\n    FinishReason[\"RECITATION\"] = \"RECITATION\";\n    // The candidate content was flagged for using an unsupported language.\n    FinishReason[\"LANGUAGE\"] = \"LANGUAGE\";\n    // Token generation stopped because the content contains forbidden terms.\n    FinishReason[\"BLOCKLIST\"] = \"BLOCKLIST\";\n    // Token generation stopped for potentially containing prohibited content.\n    FinishReason[\"PROHIBITED_CONTENT\"] = \"PROHIBITED_CONTENT\";\n    // Token generation stopped because the content potentially contains Sensitive Personally Identifiable Information (SPII).\n    FinishReason[\"SPII\"] = \"SPII\";\n    // The function call generated by the model is invalid.\n    FinishReason[\"MALFORMED_FUNCTION_CALL\"] = \"MALFORMED_FUNCTION_CALL\";\n    // Unknown reason.\n    FinishReason[\"OTHER\"] = \"OTHER\";\n})(FinishReason || (FinishReason = {}));\n/**\n * Task type for embedding content.\n * @public\n */\nvar TaskType;\n(function (TaskType) {\n    TaskType[\"TASK_TYPE_UNSPECIFIED\"] = \"TASK_TYPE_UNSPECIFIED\";\n    TaskType[\"RETRIEVAL_QUERY\"] = \"RETRIEVAL_QUERY\";\n    TaskType[\"RETRIEVAL_DOCUMENT\"] = \"RETRIEVAL_DOCUMENT\";\n    TaskType[\"SEMANTIC_SIMILARITY\"] = \"SEMANTIC_SIMILARITY\";\n    TaskType[\"CLASSIFICATION\"] = \"CLASSIFICATION\";\n    TaskType[\"CLUSTERING\"] = \"CLUSTERING\";\n})(TaskType || (TaskType = {}));\n/**\n * @public\n */\nvar FunctionCallingMode;\n(function (FunctionCallingMode) {\n    // Unspecified function calling mode. This value should not be used.\n    FunctionCallingMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    // Default model behavior, model decides to predict either a function call\n    // or a natural language repspose.\n    FunctionCallingMode[\"AUTO\"] = \"AUTO\";\n    // Model is constrained to always predicting a function call only.\n    // If \"allowed_function_names\" are set, the predicted function call will be\n    // limited to any one of \"allowed_function_names\", else the predicted\n    // function call will be any one of the provided \"function_declarations\".\n    FunctionCallingMode[\"ANY\"] = \"ANY\";\n    // Model will not predict any function call. Model behavior is same as when\n    // not passing any function declarations.\n    FunctionCallingMode[\"NONE\"] = \"NONE\";\n})(FunctionCallingMode || (FunctionCallingMode = {}));\n/**\n * The mode of the predictor to be used in dynamic retrieval.\n * @public\n */\nvar DynamicRetrievalMode;\n(function (DynamicRetrievalMode) {\n    // Unspecified function calling mode. This value should not be used.\n    DynamicRetrievalMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    // Run retrieval only when system decides it is necessary.\n    DynamicRetrievalMode[\"MODE_DYNAMIC\"] = \"MODE_DYNAMIC\";\n})(DynamicRetrievalMode || (DynamicRetrievalMode = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Basic error type for this SDK.\n * @public\n */\nclass GoogleGenerativeAIError extends Error {\n    constructor(message) {\n        super(`[GoogleGenerativeAI Error]: ${message}`);\n    }\n}\n/**\n * Errors in the contents of a response from the model. This includes parsing\n * errors, or responses including a safety block reason.\n * @public\n */\nclass GoogleGenerativeAIResponseError extends GoogleGenerativeAIError {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\n/**\n * Error class covering HTTP errors when calling the server. Includes HTTP\n * status, statusText, and optional details, if provided in the server response.\n * @public\n */\nclass GoogleGenerativeAIFetchError extends GoogleGenerativeAIError {\n    constructor(message, status, statusText, errorDetails) {\n        super(message);\n        this.status = status;\n        this.statusText = statusText;\n        this.errorDetails = errorDetails;\n    }\n}\n/**\n * Errors in the contents of a request originating from user input.\n * @public\n */\nclass GoogleGenerativeAIRequestInputError extends GoogleGenerativeAIError {\n}\n/**\n * Error thrown when a request is aborted, either due to a timeout or\n * intentional cancellation by the user.\n * @public\n */\nclass GoogleGenerativeAIAbortError extends GoogleGenerativeAIError {\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_BASE_URL = \"https://generativelanguage.googleapis.com\";\nconst DEFAULT_API_VERSION = \"v1beta\";\n/**\n * We can't `require` package.json if this runs on web. We will use rollup to\n * swap in the version number here at build time.\n */\nconst PACKAGE_VERSION = \"0.24.1\";\nconst PACKAGE_LOG_HEADER = \"genai-js\";\nvar Task;\n(function (Task) {\n    Task[\"GENERATE_CONTENT\"] = \"generateContent\";\n    Task[\"STREAM_GENERATE_CONTENT\"] = \"streamGenerateContent\";\n    Task[\"COUNT_TOKENS\"] = \"countTokens\";\n    Task[\"EMBED_CONTENT\"] = \"embedContent\";\n    Task[\"BATCH_EMBED_CONTENTS\"] = \"batchEmbedContents\";\n})(Task || (Task = {}));\nclass RequestUrl {\n    constructor(model, task, apiKey, stream, requestOptions) {\n        this.model = model;\n        this.task = task;\n        this.apiKey = apiKey;\n        this.stream = stream;\n        this.requestOptions = requestOptions;\n    }\n    toString() {\n        var _a, _b;\n        const apiVersion = ((_a = this.requestOptions) === null || _a === void 0 ? void 0 : _a.apiVersion) || DEFAULT_API_VERSION;\n        const baseUrl = ((_b = this.requestOptions) === null || _b === void 0 ? void 0 : _b.baseUrl) || DEFAULT_BASE_URL;\n        let url = `${baseUrl}/${apiVersion}/${this.model}:${this.task}`;\n        if (this.stream) {\n            url += \"?alt=sse\";\n        }\n        return url;\n    }\n}\n/**\n * Simple, but may become more complex if we add more versions to log.\n */\nfunction getClientHeaders(requestOptions) {\n    const clientHeaders = [];\n    if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.apiClient) {\n        clientHeaders.push(requestOptions.apiClient);\n    }\n    clientHeaders.push(`${PACKAGE_LOG_HEADER}/${PACKAGE_VERSION}`);\n    return clientHeaders.join(\" \");\n}\nasync function getHeaders(url) {\n    var _a;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"x-goog-api-client\", getClientHeaders(url.requestOptions));\n    headers.append(\"x-goog-api-key\", url.apiKey);\n    let customHeaders = (_a = url.requestOptions) === null || _a === void 0 ? void 0 : _a.customHeaders;\n    if (customHeaders) {\n        if (!(customHeaders instanceof Headers)) {\n            try {\n                customHeaders = new Headers(customHeaders);\n            }\n            catch (e) {\n                throw new GoogleGenerativeAIRequestInputError(`unable to convert customHeaders value ${JSON.stringify(customHeaders)} to Headers: ${e.message}`);\n            }\n        }\n        for (const [headerName, headerValue] of customHeaders.entries()) {\n            if (headerName === \"x-goog-api-key\") {\n                throw new GoogleGenerativeAIRequestInputError(`Cannot set reserved header name ${headerName}`);\n            }\n            else if (headerName === \"x-goog-api-client\") {\n                throw new GoogleGenerativeAIRequestInputError(`Header name ${headerName} can only be set using the apiClient field`);\n            }\n            headers.append(headerName, headerValue);\n        }\n    }\n    return headers;\n}\nasync function constructModelRequest(model, task, apiKey, stream, body, requestOptions) {\n    const url = new RequestUrl(model, task, apiKey, stream, requestOptions);\n    return {\n        url: url.toString(),\n        fetchOptions: Object.assign(Object.assign({}, buildFetchOptions(requestOptions)), { method: \"POST\", headers: await getHeaders(url), body }),\n    };\n}\nasync function makeModelRequest(model, task, apiKey, stream, body, requestOptions = {}, \n// Allows this to be stubbed for tests\nfetchFn = fetch) {\n    const { url, fetchOptions } = await constructModelRequest(model, task, apiKey, stream, body, requestOptions);\n    return makeRequest(url, fetchOptions, fetchFn);\n}\nasync function makeRequest(url, fetchOptions, fetchFn = fetch) {\n    let response;\n    try {\n        response = await fetchFn(url, fetchOptions);\n    }\n    catch (e) {\n        handleResponseError(e, url);\n    }\n    if (!response.ok) {\n        await handleResponseNotOk(response, url);\n    }\n    return response;\n}\nfunction handleResponseError(e, url) {\n    let err = e;\n    if (err.name === \"AbortError\") {\n        err = new GoogleGenerativeAIAbortError(`Request aborted when fetching ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n    }\n    else if (!(e instanceof GoogleGenerativeAIFetchError ||\n        e instanceof GoogleGenerativeAIRequestInputError)) {\n        err = new GoogleGenerativeAIError(`Error fetching from ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n    }\n    throw err;\n}\nasync function handleResponseNotOk(response, url) {\n    let message = \"\";\n    let errorDetails;\n    try {\n        const json = await response.json();\n        message = json.error.message;\n        if (json.error.details) {\n            message += ` ${JSON.stringify(json.error.details)}`;\n            errorDetails = json.error.details;\n        }\n    }\n    catch (e) {\n        // ignored\n    }\n    throw new GoogleGenerativeAIFetchError(`Error fetching from ${url.toString()}: [${response.status} ${response.statusText}] ${message}`, response.status, response.statusText, errorDetails);\n}\n/**\n * Generates the request options to be passed to the fetch API.\n * @param requestOptions - The user-defined request options.\n * @returns The generated request options.\n */\nfunction buildFetchOptions(requestOptions) {\n    const fetchOptions = {};\n    if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.signal) !== undefined || (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n        const controller = new AbortController();\n        if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n            setTimeout(() => controller.abort(), requestOptions.timeout);\n        }\n        if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.signal) {\n            requestOptions.signal.addEventListener(\"abort\", () => {\n                controller.abort();\n            });\n        }\n        fetchOptions.signal = controller.signal;\n    }\n    return fetchOptions;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Adds convenience helper methods to a response object, including stream\n * chunks (as long as each chunk is a complete GenerateContentResponse JSON).\n */\nfunction addHelpers(response) {\n    response.text = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning text from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getText(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Text not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return \"\";\n    };\n    /**\n     * TODO: remove at next major version\n     */\n    response.functionCall = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning function calls from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            console.warn(`response.functionCall() is deprecated. ` +\n                `Use response.functionCalls() instead.`);\n            return getFunctionCalls(response)[0];\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return undefined;\n    };\n    response.functionCalls = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning function calls from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getFunctionCalls(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return undefined;\n    };\n    return response;\n}\n/**\n * Returns all text found in all parts of first candidate.\n */\nfunction getText(response) {\n    var _a, _b, _c, _d;\n    const textStrings = [];\n    if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n        for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n            if (part.text) {\n                textStrings.push(part.text);\n            }\n            if (part.executableCode) {\n                textStrings.push(\"\\n```\" +\n                    part.executableCode.language +\n                    \"\\n\" +\n                    part.executableCode.code +\n                    \"\\n```\\n\");\n            }\n            if (part.codeExecutionResult) {\n                textStrings.push(\"\\n```\\n\" + part.codeExecutionResult.output + \"\\n```\\n\");\n            }\n        }\n    }\n    if (textStrings.length > 0) {\n        return textStrings.join(\"\");\n    }\n    else {\n        return \"\";\n    }\n}\n/**\n * Returns functionCall of first candidate.\n */\nfunction getFunctionCalls(response) {\n    var _a, _b, _c, _d;\n    const functionCalls = [];\n    if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n        for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n            if (part.functionCall) {\n                functionCalls.push(part.functionCall);\n            }\n        }\n    }\n    if (functionCalls.length > 0) {\n        return functionCalls;\n    }\n    else {\n        return undefined;\n    }\n}\nconst badFinishReasons = [\n    FinishReason.RECITATION,\n    FinishReason.SAFETY,\n    FinishReason.LANGUAGE,\n];\nfunction hadBadFinishReason(candidate) {\n    return (!!candidate.finishReason &&\n        badFinishReasons.includes(candidate.finishReason));\n}\nfunction formatBlockErrorMessage(response) {\n    var _a, _b, _c;\n    let message = \"\";\n    if ((!response.candidates || response.candidates.length === 0) &&\n        response.promptFeedback) {\n        message += \"Response was blocked\";\n        if ((_a = response.promptFeedback) === null || _a === void 0 ? void 0 : _a.blockReason) {\n            message += ` due to ${response.promptFeedback.blockReason}`;\n        }\n        if ((_b = response.promptFeedback) === null || _b === void 0 ? void 0 : _b.blockReasonMessage) {\n            message += `: ${response.promptFeedback.blockReasonMessage}`;\n        }\n    }\n    else if ((_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0]) {\n        const firstCandidate = response.candidates[0];\n        if (hadBadFinishReason(firstCandidate)) {\n            message += `Candidate was blocked due to ${firstCandidate.finishReason}`;\n            if (firstCandidate.finishMessage) {\n                message += `: ${firstCandidate.finishMessage}`;\n            }\n        }\n    }\n    return message;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst responseLineRE = /^data\\: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n/**\n * Process a response.body stream from the backend and return an\n * iterator that provides one complete GenerateContentResponse at a time\n * and a promise that resolves with a single aggregated\n * GenerateContentResponse.\n *\n * @param response - Response from a fetch call\n */\nfunction processStream(response) {\n    const inputStream = response.body.pipeThrough(new TextDecoderStream(\"utf8\", { fatal: true }));\n    const responseStream = getResponseStream(inputStream);\n    const [stream1, stream2] = responseStream.tee();\n    return {\n        stream: generateResponseSequence(stream1),\n        response: getResponsePromise(stream2),\n    };\n}\nasync function getResponsePromise(stream) {\n    const allResponses = [];\n    const reader = stream.getReader();\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n            return addHelpers(aggregateResponses(allResponses));\n        }\n        allResponses.push(value);\n    }\n}\nfunction generateResponseSequence(stream) {\n    return __asyncGenerator(this, arguments, function* generateResponseSequence_1() {\n        const reader = stream.getReader();\n        while (true) {\n            const { value, done } = yield __await(reader.read());\n            if (done) {\n                break;\n            }\n            yield yield __await(addHelpers(value));\n        }\n    });\n}\n/**\n * Reads a raw stream from the fetch response and join incomplete\n * chunks, returning a new stream that provides a single complete\n * GenerateContentResponse in each iteration.\n */\nfunction getResponseStream(inputStream) {\n    const reader = inputStream.getReader();\n    const stream = new ReadableStream({\n        start(controller) {\n            let currentText = \"\";\n            return pump();\n            function pump() {\n                return reader\n                    .read()\n                    .then(({ value, done }) => {\n                    if (done) {\n                        if (currentText.trim()) {\n                            controller.error(new GoogleGenerativeAIError(\"Failed to parse stream\"));\n                            return;\n                        }\n                        controller.close();\n                        return;\n                    }\n                    currentText += value;\n                    let match = currentText.match(responseLineRE);\n                    let parsedResponse;\n                    while (match) {\n                        try {\n                            parsedResponse = JSON.parse(match[1]);\n                        }\n                        catch (e) {\n                            controller.error(new GoogleGenerativeAIError(`Error parsing JSON response: \"${match[1]}\"`));\n                            return;\n                        }\n                        controller.enqueue(parsedResponse);\n                        currentText = currentText.substring(match[0].length);\n                        match = currentText.match(responseLineRE);\n                    }\n                    return pump();\n                })\n                    .catch((e) => {\n                    let err = e;\n                    err.stack = e.stack;\n                    if (err.name === \"AbortError\") {\n                        err = new GoogleGenerativeAIAbortError(\"Request aborted when reading from the stream\");\n                    }\n                    else {\n                        err = new GoogleGenerativeAIError(\"Error reading from the stream\");\n                    }\n                    throw err;\n                });\n            }\n        },\n    });\n    return stream;\n}\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single\n * GenerateContentResponse.\n */\nfunction aggregateResponses(responses) {\n    const lastResponse = responses[responses.length - 1];\n    const aggregatedResponse = {\n        promptFeedback: lastResponse === null || lastResponse === void 0 ? void 0 : lastResponse.promptFeedback,\n    };\n    for (const response of responses) {\n        if (response.candidates) {\n            let candidateIndex = 0;\n            for (const candidate of response.candidates) {\n                if (!aggregatedResponse.candidates) {\n                    aggregatedResponse.candidates = [];\n                }\n                if (!aggregatedResponse.candidates[candidateIndex]) {\n                    aggregatedResponse.candidates[candidateIndex] = {\n                        index: candidateIndex,\n                    };\n                }\n                // Keep overwriting, the last one will be final\n                aggregatedResponse.candidates[candidateIndex].citationMetadata =\n                    candidate.citationMetadata;\n                aggregatedResponse.candidates[candidateIndex].groundingMetadata =\n                    candidate.groundingMetadata;\n                aggregatedResponse.candidates[candidateIndex].finishReason =\n                    candidate.finishReason;\n                aggregatedResponse.candidates[candidateIndex].finishMessage =\n                    candidate.finishMessage;\n                aggregatedResponse.candidates[candidateIndex].safetyRatings =\n                    candidate.safetyRatings;\n                /**\n                 * Candidates should always have content and parts, but this handles\n                 * possible malformed responses.\n                 */\n                if (candidate.content && candidate.content.parts) {\n                    if (!aggregatedResponse.candidates[candidateIndex].content) {\n                        aggregatedResponse.candidates[candidateIndex].content = {\n                            role: candidate.content.role || \"user\",\n                            parts: [],\n                        };\n                    }\n                    const newPart = {};\n                    for (const part of candidate.content.parts) {\n                        if (part.text) {\n                            newPart.text = part.text;\n                        }\n                        if (part.functionCall) {\n                            newPart.functionCall = part.functionCall;\n                        }\n                        if (part.executableCode) {\n                            newPart.executableCode = part.executableCode;\n                        }\n                        if (part.codeExecutionResult) {\n                            newPart.codeExecutionResult = part.codeExecutionResult;\n                        }\n                        if (Object.keys(newPart).length === 0) {\n                            newPart.text = \"\";\n                        }\n                        aggregatedResponse.candidates[candidateIndex].content.parts.push(newPart);\n                    }\n                }\n            }\n            candidateIndex++;\n        }\n        if (response.usageMetadata) {\n            aggregatedResponse.usageMetadata = response.usageMetadata;\n        }\n    }\n    return aggregatedResponse;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateContentStream(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.STREAM_GENERATE_CONTENT, apiKey, \n    /* stream */ true, JSON.stringify(params), requestOptions);\n    return processStream(response);\n}\nasync function generateContent(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.GENERATE_CONTENT, apiKey, \n    /* stream */ false, JSON.stringify(params), requestOptions);\n    const responseJson = await response.json();\n    const enhancedResponse = addHelpers(responseJson);\n    return {\n        response: enhancedResponse,\n    };\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction formatSystemInstruction(input) {\n    // null or undefined\n    if (input == null) {\n        return undefined;\n    }\n    else if (typeof input === \"string\") {\n        return { role: \"system\", parts: [{ text: input }] };\n    }\n    else if (input.text) {\n        return { role: \"system\", parts: [input] };\n    }\n    else if (input.parts) {\n        if (!input.role) {\n            return { role: \"system\", parts: input.parts };\n        }\n        else {\n            return input;\n        }\n    }\n}\nfunction formatNewContent(request) {\n    let newParts = [];\n    if (typeof request === \"string\") {\n        newParts = [{ text: request }];\n    }\n    else {\n        for (const partOrString of request) {\n            if (typeof partOrString === \"string\") {\n                newParts.push({ text: partOrString });\n            }\n            else {\n                newParts.push(partOrString);\n            }\n        }\n    }\n    return assignRoleToPartsAndValidateSendMessageRequest(newParts);\n}\n/**\n * When multiple Part types (i.e. FunctionResponsePart and TextPart) are\n * passed in a single Part array, we may need to assign different roles to each\n * part. Currently only FunctionResponsePart requires a role other than 'user'.\n * @private\n * @param parts Array of parts to pass to the model\n * @returns Array of content items\n */\nfunction assignRoleToPartsAndValidateSendMessageRequest(parts) {\n    const userContent = { role: \"user\", parts: [] };\n    const functionContent = { role: \"function\", parts: [] };\n    let hasUserContent = false;\n    let hasFunctionContent = false;\n    for (const part of parts) {\n        if (\"functionResponse\" in part) {\n            functionContent.parts.push(part);\n            hasFunctionContent = true;\n        }\n        else {\n            userContent.parts.push(part);\n            hasUserContent = true;\n        }\n    }\n    if (hasUserContent && hasFunctionContent) {\n        throw new GoogleGenerativeAIError(\"Within a single message, FunctionResponse cannot be mixed with other type of part in the request for sending chat message.\");\n    }\n    if (!hasUserContent && !hasFunctionContent) {\n        throw new GoogleGenerativeAIError(\"No content is provided for sending chat message.\");\n    }\n    if (hasUserContent) {\n        return userContent;\n    }\n    return functionContent;\n}\nfunction formatCountTokensInput(params, modelParams) {\n    var _a;\n    let formattedGenerateContentRequest = {\n        model: modelParams === null || modelParams === void 0 ? void 0 : modelParams.model,\n        generationConfig: modelParams === null || modelParams === void 0 ? void 0 : modelParams.generationConfig,\n        safetySettings: modelParams === null || modelParams === void 0 ? void 0 : modelParams.safetySettings,\n        tools: modelParams === null || modelParams === void 0 ? void 0 : modelParams.tools,\n        toolConfig: modelParams === null || modelParams === void 0 ? void 0 : modelParams.toolConfig,\n        systemInstruction: modelParams === null || modelParams === void 0 ? void 0 : modelParams.systemInstruction,\n        cachedContent: (_a = modelParams === null || modelParams === void 0 ? void 0 : modelParams.cachedContent) === null || _a === void 0 ? void 0 : _a.name,\n        contents: [],\n    };\n    const containsGenerateContentRequest = params.generateContentRequest != null;\n    if (params.contents) {\n        if (containsGenerateContentRequest) {\n            throw new GoogleGenerativeAIRequestInputError(\"CountTokensRequest must have one of contents or generateContentRequest, not both.\");\n        }\n        formattedGenerateContentRequest.contents = params.contents;\n    }\n    else if (containsGenerateContentRequest) {\n        formattedGenerateContentRequest = Object.assign(Object.assign({}, formattedGenerateContentRequest), params.generateContentRequest);\n    }\n    else {\n        // Array or string\n        const content = formatNewContent(params);\n        formattedGenerateContentRequest.contents = [content];\n    }\n    return { generateContentRequest: formattedGenerateContentRequest };\n}\nfunction formatGenerateContentInput(params) {\n    let formattedRequest;\n    if (params.contents) {\n        formattedRequest = params;\n    }\n    else {\n        // Array or string\n        const content = formatNewContent(params);\n        formattedRequest = { contents: [content] };\n    }\n    if (params.systemInstruction) {\n        formattedRequest.systemInstruction = formatSystemInstruction(params.systemInstruction);\n    }\n    return formattedRequest;\n}\nfunction formatEmbedContentInput(params) {\n    if (typeof params === \"string\" || Array.isArray(params)) {\n        const content = formatNewContent(params);\n        return { content };\n    }\n    return params;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// https://ai.google.dev/api/rest/v1beta/Content#part\nconst VALID_PART_FIELDS = [\n    \"text\",\n    \"inlineData\",\n    \"functionCall\",\n    \"functionResponse\",\n    \"executableCode\",\n    \"codeExecutionResult\",\n];\nconst VALID_PARTS_PER_ROLE = {\n    user: [\"text\", \"inlineData\"],\n    function: [\"functionResponse\"],\n    model: [\"text\", \"functionCall\", \"executableCode\", \"codeExecutionResult\"],\n    // System instructions shouldn't be in history anyway.\n    system: [\"text\"],\n};\nfunction validateChatHistory(history) {\n    let prevContent = false;\n    for (const currContent of history) {\n        const { role, parts } = currContent;\n        if (!prevContent && role !== \"user\") {\n            throw new GoogleGenerativeAIError(`First content should be with role 'user', got ${role}`);\n        }\n        if (!POSSIBLE_ROLES.includes(role)) {\n            throw new GoogleGenerativeAIError(`Each item should include role field. Got ${role} but valid roles are: ${JSON.stringify(POSSIBLE_ROLES)}`);\n        }\n        if (!Array.isArray(parts)) {\n            throw new GoogleGenerativeAIError(\"Content should have 'parts' property with an array of Parts\");\n        }\n        if (parts.length === 0) {\n            throw new GoogleGenerativeAIError(\"Each Content should have at least one part\");\n        }\n        const countFields = {\n            text: 0,\n            inlineData: 0,\n            functionCall: 0,\n            functionResponse: 0,\n            fileData: 0,\n            executableCode: 0,\n            codeExecutionResult: 0,\n        };\n        for (const part of parts) {\n            for (const key of VALID_PART_FIELDS) {\n                if (key in part) {\n                    countFields[key] += 1;\n                }\n            }\n        }\n        const validParts = VALID_PARTS_PER_ROLE[role];\n        for (const key of VALID_PART_FIELDS) {\n            if (!validParts.includes(key) && countFields[key] > 0) {\n                throw new GoogleGenerativeAIError(`Content with role '${role}' can't contain '${key}' part`);\n            }\n        }\n        prevContent = true;\n    }\n}\n/**\n * Returns true if the response is valid (could be appended to the history), flase otherwise.\n */\nfunction isValidResponse(response) {\n    var _a;\n    if (response.candidates === undefined || response.candidates.length === 0) {\n        return false;\n    }\n    const content = (_a = response.candidates[0]) === null || _a === void 0 ? void 0 : _a.content;\n    if (content === undefined) {\n        return false;\n    }\n    if (content.parts === undefined || content.parts.length === 0) {\n        return false;\n    }\n    for (const part of content.parts) {\n        if (part === undefined || Object.keys(part).length === 0) {\n            return false;\n        }\n        if (part.text !== undefined && part.text === \"\") {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Do not log a message for this error.\n */\nconst SILENT_ERROR = \"SILENT_ERROR\";\n/**\n * ChatSession class that enables sending chat messages and stores\n * history of sent and received messages so far.\n *\n * @public\n */\nclass ChatSession {\n    constructor(apiKey, model, params, _requestOptions = {}) {\n        this.model = model;\n        this.params = params;\n        this._requestOptions = _requestOptions;\n        this._history = [];\n        this._sendPromise = Promise.resolve();\n        this._apiKey = apiKey;\n        if (params === null || params === void 0 ? void 0 : params.history) {\n            validateChatHistory(params.history);\n            this._history = params.history;\n        }\n    }\n    /**\n     * Gets the chat history so far. Blocked prompts are not added to history.\n     * Blocked candidates are not added to history, nor are the prompts that\n     * generated them.\n     */\n    async getHistory() {\n        await this._sendPromise;\n        return this._history;\n    }\n    /**\n     * Sends a chat message and receives a non-streaming\n     * {@link GenerateContentResult}.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async sendMessage(request, requestOptions = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        await this._sendPromise;\n        const newContent = formatNewContent(request);\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n            toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n            systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n            cachedContent: (_f = this.params) === null || _f === void 0 ? void 0 : _f.cachedContent,\n            contents: [...this._history, newContent],\n        };\n        const chatSessionRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        let finalResult;\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => generateContent(this._apiKey, this.model, generateContentRequest, chatSessionRequestOptions))\n            .then((result) => {\n            var _a;\n            if (isValidResponse(result.response)) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({ parts: [], \n                    // Response seems to come back without a role set.\n                    role: \"model\" }, (_a = result.response.candidates) === null || _a === void 0 ? void 0 : _a[0].content);\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(result.response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n            finalResult = result;\n        })\n            .catch((e) => {\n            // Resets _sendPromise to avoid subsequent calls failing and throw error.\n            this._sendPromise = Promise.resolve();\n            throw e;\n        });\n        await this._sendPromise;\n        return finalResult;\n    }\n    /**\n     * Sends a chat message and receives the response as a\n     * {@link GenerateContentStreamResult} containing an iterable stream\n     * and a response promise.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async sendMessageStream(request, requestOptions = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        await this._sendPromise;\n        const newContent = formatNewContent(request);\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n            toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n            systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n            cachedContent: (_f = this.params) === null || _f === void 0 ? void 0 : _f.cachedContent,\n            contents: [...this._history, newContent],\n        };\n        const chatSessionRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        const streamPromise = generateContentStream(this._apiKey, this.model, generateContentRequest, chatSessionRequestOptions);\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => streamPromise)\n            // This must be handled to avoid unhandled rejection, but jump\n            // to the final catch block with a label to not log this error.\n            .catch((_ignored) => {\n            throw new Error(SILENT_ERROR);\n        })\n            .then((streamResult) => streamResult.response)\n            .then((response) => {\n            if (isValidResponse(response)) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({}, response.candidates[0].content);\n                // Response seems to come back without a role set.\n                if (!responseContent.role) {\n                    responseContent.role = \"model\";\n                }\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n        })\n            .catch((e) => {\n            // Errors in streamPromise are already catchable by the user as\n            // streamPromise is returned.\n            // Avoid duplicating the error message in logs.\n            if (e.message !== SILENT_ERROR) {\n                // Users do not have access to _sendPromise to catch errors\n                // downstream from streamPromise, so they should not throw.\n                console.error(e);\n            }\n        });\n        return streamPromise;\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function countTokens(apiKey, model, params, singleRequestOptions) {\n    const response = await makeModelRequest(model, Task.COUNT_TOKENS, apiKey, false, JSON.stringify(params), singleRequestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function embedContent(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.EMBED_CONTENT, apiKey, false, JSON.stringify(params), requestOptions);\n    return response.json();\n}\nasync function batchEmbedContents(apiKey, model, params, requestOptions) {\n    const requestsWithModel = params.requests.map((request) => {\n        return Object.assign(Object.assign({}, request), { model });\n    });\n    const response = await makeModelRequest(model, Task.BATCH_EMBED_CONTENTS, apiKey, false, JSON.stringify({ requests: requestsWithModel }), requestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for generative model APIs.\n * @public\n */\nclass GenerativeModel {\n    constructor(apiKey, modelParams, _requestOptions = {}) {\n        this.apiKey = apiKey;\n        this._requestOptions = _requestOptions;\n        if (modelParams.model.includes(\"/\")) {\n            // Models may be named \"models/model-name\" or \"tunedModels/model-name\"\n            this.model = modelParams.model;\n        }\n        else {\n            // If path is not included, assume it's a non-tuned model.\n            this.model = `models/${modelParams.model}`;\n        }\n        this.generationConfig = modelParams.generationConfig || {};\n        this.safetySettings = modelParams.safetySettings || [];\n        this.tools = modelParams.tools;\n        this.toolConfig = modelParams.toolConfig;\n        this.systemInstruction = formatSystemInstruction(modelParams.systemInstruction);\n        this.cachedContent = modelParams.cachedContent;\n    }\n    /**\n     * Makes a single non-streaming call to the model\n     * and returns an object containing a single {@link GenerateContentResponse}.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async generateContent(request, requestOptions = {}) {\n        var _a;\n        const formattedParams = formatGenerateContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return generateContent(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, formattedParams), generativeModelRequestOptions);\n    }\n    /**\n     * Makes a single streaming call to the model and returns an object\n     * containing an iterable stream that iterates over all chunks in the\n     * streaming response as well as a promise that returns the final\n     * aggregated response.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async generateContentStream(request, requestOptions = {}) {\n        var _a;\n        const formattedParams = formatGenerateContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return generateContentStream(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, formattedParams), generativeModelRequestOptions);\n    }\n    /**\n     * Gets a new {@link ChatSession} instance which can be used for\n     * multi-turn chats.\n     */\n    startChat(startChatParams) {\n        var _a;\n        return new ChatSession(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, startChatParams), this._requestOptions);\n    }\n    /**\n     * Counts the tokens in the provided request.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async countTokens(request, requestOptions = {}) {\n        const formattedParams = formatCountTokensInput(request, {\n            model: this.model,\n            generationConfig: this.generationConfig,\n            safetySettings: this.safetySettings,\n            tools: this.tools,\n            toolConfig: this.toolConfig,\n            systemInstruction: this.systemInstruction,\n            cachedContent: this.cachedContent,\n        });\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return countTokens(this.apiKey, this.model, formattedParams, generativeModelRequestOptions);\n    }\n    /**\n     * Embeds the provided content.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async embedContent(request, requestOptions = {}) {\n        const formattedParams = formatEmbedContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return embedContent(this.apiKey, this.model, formattedParams, generativeModelRequestOptions);\n    }\n    /**\n     * Embeds an array of {@link EmbedContentRequest}s.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async batchEmbedContents(batchEmbedContentRequest, requestOptions = {}) {\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return batchEmbedContents(this.apiKey, this.model, batchEmbedContentRequest, generativeModelRequestOptions);\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Top-level class for this SDK\n * @public\n */\nclass GoogleGenerativeAI {\n    constructor(apiKey) {\n        this.apiKey = apiKey;\n    }\n    /**\n     * Gets a {@link GenerativeModel} instance for the provided model name.\n     */\n    getGenerativeModel(modelParams, requestOptions) {\n        if (!modelParams.model) {\n            throw new GoogleGenerativeAIError(`Must provide a model name. ` +\n                `Example: genai.getGenerativeModel({ model: 'my-model-name' })`);\n        }\n        return new GenerativeModel(this.apiKey, modelParams, requestOptions);\n    }\n    /**\n     * Creates a {@link GenerativeModel} instance from provided content cache.\n     */\n    getGenerativeModelFromCachedContent(cachedContent, modelParams, requestOptions) {\n        if (!cachedContent.name) {\n            throw new GoogleGenerativeAIRequestInputError(\"Cached content must contain a `name` field.\");\n        }\n        if (!cachedContent.model) {\n            throw new GoogleGenerativeAIRequestInputError(\"Cached content must contain a `model` field.\");\n        }\n        /**\n         * Not checking tools and toolConfig for now as it would require a deep\n         * equality comparison and isn't likely to be a common case.\n         */\n        const disallowedDuplicates = [\"model\", \"systemInstruction\"];\n        for (const key of disallowedDuplicates) {\n            if ((modelParams === null || modelParams === void 0 ? void 0 : modelParams[key]) &&\n                cachedContent[key] &&\n                (modelParams === null || modelParams === void 0 ? void 0 : modelParams[key]) !== cachedContent[key]) {\n                if (key === \"model\") {\n                    const modelParamsComp = modelParams.model.startsWith(\"models/\")\n                        ? modelParams.model.replace(\"models/\", \"\")\n                        : modelParams.model;\n                    const cachedContentComp = cachedContent.model.startsWith(\"models/\")\n                        ? cachedContent.model.replace(\"models/\", \"\")\n                        : cachedContent.model;\n                    if (modelParamsComp === cachedContentComp) {\n                        continue;\n                    }\n                }\n                throw new GoogleGenerativeAIRequestInputError(`Different value for \"${key}\" specified in modelParams` +\n                    ` (${modelParams[key]}) and cachedContent (${cachedContent[key]})`);\n            }\n        }\n        const modelParamsFromCache = Object.assign(Object.assign({}, modelParams), { model: cachedContent.model, tools: cachedContent.tools, toolConfig: cachedContent.toolConfig, systemInstruction: cachedContent.systemInstruction, cachedContent });\n        return new GenerativeModel(this.apiKey, modelParamsFromCache, requestOptions);\n    }\n}\n\nexport { BlockReason, ChatSession, DynamicRetrievalMode, ExecutableCodeLanguage, FinishReason, FunctionCallingMode, GenerativeModel, GoogleGenerativeAI, GoogleGenerativeAIAbortError, GoogleGenerativeAIError, GoogleGenerativeAIFetchError, GoogleGenerativeAIRequestInputError, GoogleGenerativeAIResponseError, HarmBlockThreshold, HarmCategory, HarmProbability, Outcome, POSSIBLE_ROLES, SchemaType, TaskType };\n//# sourceMappingURL=index.mjs.map\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { isInteropZodSchema, } from \"@langchain/core/utils/types\";\nimport { toJsonSchema, } from \"@langchain/core/utils/json_schema\";\nexport function removeAdditionalProperties(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nobj) {\n    if (typeof obj === \"object\" && obj !== null) {\n        const newObj = { ...obj };\n        if (\"additionalProperties\" in newObj) {\n            delete newObj.additionalProperties;\n        }\n        if (\"$schema\" in newObj) {\n            delete newObj.$schema;\n        }\n        if (\"strict\" in newObj) {\n            delete newObj.strict;\n        }\n        for (const key in newObj) {\n            if (key in newObj) {\n                if (Array.isArray(newObj[key])) {\n                    newObj[key] = newObj[key].map(removeAdditionalProperties);\n                }\n                else if (typeof newObj[key] === \"object\" && newObj[key] !== null) {\n                    newObj[key] = removeAdditionalProperties(newObj[key]);\n                }\n            }\n        }\n        return newObj;\n    }\n    return obj;\n}\nexport function schemaToGenerativeAIParameters(schema) {\n    // GenerativeAI doesn't accept either the $schema or additionalProperties\n    // attributes, so we need to explicitly remove them.\n    const jsonSchema = removeAdditionalProperties(isInteropZodSchema(schema) ? toJsonSchema(schema) : schema);\n    const { $schema, ...rest } = jsonSchema;\n    return rest;\n}\nexport function jsonSchemaToGeminiParameters(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nschema) {\n    // Gemini doesn't accept either the $schema or additionalProperties\n    // attributes, so we need to explicitly remove them.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const jsonSchema = removeAdditionalProperties(schema);\n    const { $schema, ...rest } = jsonSchema;\n    return rest;\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import { AIMessage, AIMessageChunk, ChatMessage, isAIMessage, isBaseMessage, isToolMessage, parseBase64DataUrl, convertToProviderContentBlock, isDataContentBlock, } from \"@langchain/core/messages\";\nimport { ChatGenerationChunk, } from \"@langchain/core/outputs\";\nimport { isLangChainTool } from \"@langchain/core/utils/function_calling\";\nimport { isOpenAITool } from \"@langchain/core/language_models/base\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsonSchemaToGeminiParameters, schemaToGenerativeAIParameters, } from \"./zod_to_genai_parameters.js\";\nexport function getMessageAuthor(message) {\n    const type = message._getType();\n    if (ChatMessage.isInstance(message)) {\n        return message.role;\n    }\n    if (type === \"tool\") {\n        return type;\n    }\n    return message.name ?? type;\n}\n/**\n * Maps a message type to a Google Generative AI chat author.\n * @param message The message to map.\n * @param model The model to use for mapping.\n * @returns The message type mapped to a Google Generative AI chat author.\n */\nexport function convertAuthorToRole(author) {\n    switch (author) {\n        /**\n         *  Note: Gemini currently is not supporting system messages\n         *  we will convert them to human messages and merge with following\n         * */\n        case \"supervisor\":\n        case \"ai\":\n        case \"model\": // getMessageAuthor returns message.name. code ex.: return message.name ?? type;\n            return \"model\";\n        case \"system\":\n            return \"system\";\n        case \"human\":\n            return \"user\";\n        case \"tool\":\n        case \"function\":\n            return \"function\";\n        default:\n            throw new Error(`Unknown / unsupported author: ${author}`);\n    }\n}\nfunction messageContentMedia(content) {\n    if (\"mimeType\" in content && \"data\" in content) {\n        return {\n            inlineData: {\n                mimeType: content.mimeType,\n                data: content.data,\n            },\n        };\n    }\n    if (\"mimeType\" in content && \"fileUri\" in content) {\n        return {\n            fileData: {\n                mimeType: content.mimeType,\n                fileUri: content.fileUri,\n            },\n        };\n    }\n    throw new Error(\"Invalid media content\");\n}\nfunction inferToolNameFromPreviousMessages(message, previousMessages) {\n    return previousMessages\n        .map((msg) => {\n        if (isAIMessage(msg)) {\n            return msg.tool_calls ?? [];\n        }\n        return [];\n    })\n        .flat()\n        .find((toolCall) => {\n        return toolCall.id === message.tool_call_id;\n    })?.name;\n}\nfunction _getStandardContentBlockConverter(isMultimodalModel) {\n    const standardContentBlockConverter = {\n        providerName: \"Google Gemini\",\n        fromStandardTextBlock(block) {\n            return {\n                text: block.text,\n            };\n        },\n        fromStandardImageBlock(block) {\n            if (!isMultimodalModel) {\n                throw new Error(\"This model does not support images\");\n            }\n            if (block.source_type === \"url\") {\n                const data = parseBase64DataUrl({ dataUrl: block.url });\n                if (data) {\n                    return {\n                        inlineData: {\n                            mimeType: data.mime_type,\n                            data: data.data,\n                        },\n                    };\n                }\n                else {\n                    return {\n                        fileData: {\n                            mimeType: block.mime_type ?? \"\",\n                            fileUri: block.url,\n                        },\n                    };\n                }\n            }\n            if (block.source_type === \"base64\") {\n                return {\n                    inlineData: {\n                        mimeType: block.mime_type ?? \"\",\n                        data: block.data,\n                    },\n                };\n            }\n            throw new Error(`Unsupported source type: ${block.source_type}`);\n        },\n        fromStandardAudioBlock(block) {\n            if (!isMultimodalModel) {\n                throw new Error(\"This model does not support audio\");\n            }\n            if (block.source_type === \"url\") {\n                const data = parseBase64DataUrl({ dataUrl: block.url });\n                if (data) {\n                    return {\n                        inlineData: {\n                            mimeType: data.mime_type,\n                            data: data.data,\n                        },\n                    };\n                }\n                else {\n                    return {\n                        fileData: {\n                            mimeType: block.mime_type ?? \"\",\n                            fileUri: block.url,\n                        },\n                    };\n                }\n            }\n            if (block.source_type === \"base64\") {\n                return {\n                    inlineData: {\n                        mimeType: block.mime_type ?? \"\",\n                        data: block.data,\n                    },\n                };\n            }\n            throw new Error(`Unsupported source type: ${block.source_type}`);\n        },\n        fromStandardFileBlock(block) {\n            if (!isMultimodalModel) {\n                throw new Error(\"This model does not support files\");\n            }\n            if (block.source_type === \"text\") {\n                return {\n                    text: block.text,\n                };\n            }\n            if (block.source_type === \"url\") {\n                const data = parseBase64DataUrl({ dataUrl: block.url });\n                if (data) {\n                    return {\n                        inlineData: {\n                            mimeType: data.mime_type,\n                            data: data.data,\n                        },\n                    };\n                }\n                else {\n                    return {\n                        fileData: {\n                            mimeType: block.mime_type ?? \"\",\n                            fileUri: block.url,\n                        },\n                    };\n                }\n            }\n            if (block.source_type === \"base64\") {\n                return {\n                    inlineData: {\n                        mimeType: block.mime_type ?? \"\",\n                        data: block.data,\n                    },\n                };\n            }\n            throw new Error(`Unsupported source type: ${block.source_type}`);\n        },\n    };\n    return standardContentBlockConverter;\n}\nfunction _convertLangChainContentToPart(content, isMultimodalModel) {\n    if (isDataContentBlock(content)) {\n        return convertToProviderContentBlock(content, _getStandardContentBlockConverter(isMultimodalModel));\n    }\n    if (content.type === \"text\") {\n        return { text: content.text };\n    }\n    else if (content.type === \"executableCode\") {\n        return { executableCode: content.executableCode };\n    }\n    else if (content.type === \"codeExecutionResult\") {\n        return { codeExecutionResult: content.codeExecutionResult };\n    }\n    else if (content.type === \"image_url\") {\n        if (!isMultimodalModel) {\n            throw new Error(`This model does not support images`);\n        }\n        let source;\n        if (typeof content.image_url === \"string\") {\n            source = content.image_url;\n        }\n        else if (typeof content.image_url === \"object\" &&\n            \"url\" in content.image_url) {\n            source = content.image_url.url;\n        }\n        else {\n            throw new Error(\"Please provide image as base64 encoded data URL\");\n        }\n        const [dm, data] = source.split(\",\");\n        if (!dm.startsWith(\"data:\")) {\n            throw new Error(\"Please provide image as base64 encoded data URL\");\n        }\n        const [mimeType, encoding] = dm.replace(/^data:/, \"\").split(\";\");\n        if (encoding !== \"base64\") {\n            throw new Error(\"Please provide image as base64 encoded data URL\");\n        }\n        return {\n            inlineData: {\n                data,\n                mimeType,\n            },\n        };\n    }\n    else if (content.type === \"media\") {\n        return messageContentMedia(content);\n    }\n    else if (content.type === \"tool_use\") {\n        return {\n            functionCall: {\n                name: content.name,\n                args: content.input,\n            },\n        };\n    }\n    else if (content.type?.includes(\"/\") &&\n        // Ensure it's a single slash.\n        content.type.split(\"/\").length === 2 &&\n        \"data\" in content &&\n        typeof content.data === \"string\") {\n        return {\n            inlineData: {\n                mimeType: content.type,\n                data: content.data,\n            },\n        };\n    }\n    else if (\"functionCall\" in content) {\n        // No action needed here — function calls will be added later from message.tool_calls\n        return undefined;\n    }\n    else {\n        if (\"type\" in content) {\n            throw new Error(`Unknown content type ${content.type}`);\n        }\n        else {\n            throw new Error(`Unknown content ${JSON.stringify(content)}`);\n        }\n    }\n}\nexport function convertMessageContentToParts(message, isMultimodalModel, previousMessages) {\n    if (isToolMessage(message)) {\n        const messageName = message.name ??\n            inferToolNameFromPreviousMessages(message, previousMessages);\n        if (messageName === undefined) {\n            throw new Error(`Google requires a tool name for each tool call response, and we could not infer a called tool name for ToolMessage \"${message.id}\" from your passed messages. Please populate a \"name\" field on that ToolMessage explicitly.`);\n        }\n        const result = Array.isArray(message.content)\n            ? message.content\n                .map((c) => _convertLangChainContentToPart(c, isMultimodalModel))\n                .filter((p) => p !== undefined)\n            : message.content;\n        if (message.status === \"error\") {\n            return [\n                {\n                    functionResponse: {\n                        name: messageName,\n                        // The API expects an object with an `error` field if the function call fails.\n                        // `error` must be a valid object (not a string or array), so we wrap `message.content` here\n                        response: { error: { details: result } },\n                    },\n                },\n            ];\n        }\n        return [\n            {\n                functionResponse: {\n                    name: messageName,\n                    // again, can't have a string or array value for `response`, so we wrap it as an object here\n                    response: { result },\n                },\n            },\n        ];\n    }\n    let functionCalls = [];\n    const messageParts = [];\n    if (typeof message.content === \"string\" && message.content) {\n        messageParts.push({ text: message.content });\n    }\n    if (Array.isArray(message.content)) {\n        messageParts.push(...message.content\n            .map((c) => _convertLangChainContentToPart(c, isMultimodalModel))\n            .filter((p) => p !== undefined));\n    }\n    if (isAIMessage(message) && message.tool_calls?.length) {\n        functionCalls = message.tool_calls.map((tc) => {\n            return {\n                functionCall: {\n                    name: tc.name,\n                    args: tc.args,\n                },\n            };\n        });\n    }\n    return [...messageParts, ...functionCalls];\n}\nexport function convertBaseMessagesToContent(messages, isMultimodalModel, convertSystemMessageToHumanContent = false) {\n    return messages.reduce((acc, message, index) => {\n        if (!isBaseMessage(message)) {\n            throw new Error(\"Unsupported message input\");\n        }\n        const author = getMessageAuthor(message);\n        if (author === \"system\" && index !== 0) {\n            throw new Error(\"System message should be the first one\");\n        }\n        const role = convertAuthorToRole(author);\n        const prevContent = acc.content[acc.content.length];\n        if (!acc.mergeWithPreviousContent &&\n            prevContent &&\n            prevContent.role === role) {\n            throw new Error(\"Google Generative AI requires alternate messages between authors\");\n        }\n        const parts = convertMessageContentToParts(message, isMultimodalModel, messages.slice(0, index));\n        if (acc.mergeWithPreviousContent) {\n            const prevContent = acc.content[acc.content.length - 1];\n            if (!prevContent) {\n                throw new Error(\"There was a problem parsing your system message. Please try a prompt without one.\");\n            }\n            prevContent.parts.push(...parts);\n            return {\n                mergeWithPreviousContent: false,\n                content: acc.content,\n            };\n        }\n        let actualRole = role;\n        if (actualRole === \"function\" ||\n            (actualRole === \"system\" && !convertSystemMessageToHumanContent)) {\n            // GenerativeAI API will throw an error if the role is not \"user\" or \"model.\"\n            actualRole = \"user\";\n        }\n        const content = {\n            role: actualRole,\n            parts,\n        };\n        return {\n            mergeWithPreviousContent: author === \"system\" && !convertSystemMessageToHumanContent,\n            content: [...acc.content, content],\n        };\n    }, { content: [], mergeWithPreviousContent: false }).content;\n}\nexport function mapGenerateContentResultToChatResult(response, extra) {\n    // if rejected or error, return empty generations with reason in filters\n    if (!response.candidates ||\n        response.candidates.length === 0 ||\n        !response.candidates[0]) {\n        return {\n            generations: [],\n            llmOutput: {\n                filters: response.promptFeedback,\n            },\n        };\n    }\n    const functionCalls = response.functionCalls();\n    const [candidate] = response.candidates;\n    const { content: candidateContent, ...generationInfo } = candidate;\n    let content;\n    if (Array.isArray(candidateContent?.parts) &&\n        candidateContent.parts.length === 1 &&\n        candidateContent.parts[0].text) {\n        content = candidateContent.parts[0].text;\n    }\n    else if (Array.isArray(candidateContent?.parts) &&\n        candidateContent.parts.length > 0) {\n        content = candidateContent.parts.map((p) => {\n            if (\"text\" in p) {\n                return {\n                    type: \"text\",\n                    text: p.text,\n                };\n            }\n            else if (\"executableCode\" in p) {\n                return {\n                    type: \"executableCode\",\n                    executableCode: p.executableCode,\n                };\n            }\n            else if (\"codeExecutionResult\" in p) {\n                return {\n                    type: \"codeExecutionResult\",\n                    codeExecutionResult: p.codeExecutionResult,\n                };\n            }\n            return p;\n        });\n    }\n    else {\n        // no content returned - likely due to abnormal stop reason, e.g. malformed function call\n        content = [];\n    }\n    let text = \"\";\n    if (typeof content === \"string\") {\n        text = content;\n    }\n    else if (Array.isArray(content) && content.length > 0) {\n        const block = content.find((b) => \"text\" in b);\n        text = block?.text ?? text;\n    }\n    const generation = {\n        text,\n        message: new AIMessage({\n            content: content ?? \"\",\n            tool_calls: functionCalls?.map((fc) => {\n                return {\n                    ...fc,\n                    type: \"tool_call\",\n                    id: \"id\" in fc && typeof fc.id === \"string\" ? fc.id : uuidv4(),\n                };\n            }),\n            additional_kwargs: {\n                ...generationInfo,\n            },\n            usage_metadata: extra?.usageMetadata,\n        }),\n        generationInfo,\n    };\n    return {\n        generations: [generation],\n        llmOutput: {\n            tokenUsage: {\n                promptTokens: extra?.usageMetadata?.input_tokens,\n                completionTokens: extra?.usageMetadata?.output_tokens,\n                totalTokens: extra?.usageMetadata?.total_tokens,\n            },\n        },\n    };\n}\nexport function convertResponseContentToChatGenerationChunk(response, extra) {\n    if (!response.candidates || response.candidates.length === 0) {\n        return null;\n    }\n    const functionCalls = response.functionCalls();\n    const [candidate] = response.candidates;\n    const { content: candidateContent, ...generationInfo } = candidate;\n    let content;\n    // Checks if some parts do not have text. If false, it means that the content is a string.\n    if (Array.isArray(candidateContent?.parts) &&\n        candidateContent.parts.every((p) => \"text\" in p)) {\n        content = candidateContent.parts.map((p) => p.text).join(\"\");\n    }\n    else if (Array.isArray(candidateContent?.parts)) {\n        content = candidateContent.parts.map((p) => {\n            if (\"text\" in p) {\n                return {\n                    type: \"text\",\n                    text: p.text,\n                };\n            }\n            else if (\"executableCode\" in p) {\n                return {\n                    type: \"executableCode\",\n                    executableCode: p.executableCode,\n                };\n            }\n            else if (\"codeExecutionResult\" in p) {\n                return {\n                    type: \"codeExecutionResult\",\n                    codeExecutionResult: p.codeExecutionResult,\n                };\n            }\n            return p;\n        });\n    }\n    else {\n        // no content returned - likely due to abnormal stop reason, e.g. malformed function call\n        content = [];\n    }\n    let text = \"\";\n    if (content && typeof content === \"string\") {\n        text = content;\n    }\n    else if (Array.isArray(content)) {\n        const block = content.find((b) => \"text\" in b);\n        text = block?.text ?? \"\";\n    }\n    const toolCallChunks = [];\n    if (functionCalls) {\n        toolCallChunks.push(...functionCalls.map((fc) => ({\n            ...fc,\n            args: JSON.stringify(fc.args),\n            index: extra.index,\n            type: \"tool_call_chunk\",\n            id: \"id\" in fc && typeof fc.id === \"string\" ? fc.id : uuidv4(),\n        })));\n    }\n    return new ChatGenerationChunk({\n        text,\n        message: new AIMessageChunk({\n            content: content || \"\",\n            name: !candidateContent ? undefined : candidateContent.role,\n            tool_call_chunks: toolCallChunks,\n            // Each chunk can have unique \"generationInfo\", and merging strategy is unclear,\n            // so leave blank for now.\n            additional_kwargs: {},\n            usage_metadata: extra.usageMetadata,\n        }),\n        generationInfo,\n    });\n}\nexport function convertToGenerativeAITools(tools) {\n    if (tools.every((tool) => \"functionDeclarations\" in tool &&\n        Array.isArray(tool.functionDeclarations))) {\n        return tools;\n    }\n    return [\n        {\n            functionDeclarations: tools.map((tool) => {\n                if (isLangChainTool(tool)) {\n                    const jsonSchema = schemaToGenerativeAIParameters(tool.schema);\n                    if (jsonSchema.type === \"object\" &&\n                        \"properties\" in jsonSchema &&\n                        Object.keys(jsonSchema.properties).length === 0) {\n                        return {\n                            name: tool.name,\n                            description: tool.description,\n                        };\n                    }\n                    return {\n                        name: tool.name,\n                        description: tool.description,\n                        parameters: jsonSchema,\n                    };\n                }\n                if (isOpenAITool(tool)) {\n                    return {\n                        name: tool.function.name,\n                        description: tool.function.description ?? `A function available to call.`,\n                        parameters: jsonSchemaToGeminiParameters(tool.function.parameters),\n                    };\n                }\n                return tool;\n            }),\n        },\n    ];\n}\n","import { BaseLLMOutputParser, OutputParserException, } from \"@langchain/core/output_parsers\";\nimport { interopSafeParseAsync, } from \"@langchain/core/utils/types\";\nexport class GoogleGenerativeAIToolsOutputParser extends BaseLLMOutputParser {\n    static lc_name() {\n        return \"GoogleGenerativeAIToolsOutputParser\";\n    }\n    constructor(params) {\n        super(params);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"google_genai\", \"output_parsers\"]\n        });\n        Object.defineProperty(this, \"returnId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        /** The type of tool calls to return. */\n        Object.defineProperty(this, \"keyName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Whether to return only the first tool call. */\n        Object.defineProperty(this, \"returnSingle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"zodSchema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.keyName = params.keyName;\n        this.returnSingle = params.returnSingle ?? this.returnSingle;\n        this.zodSchema = params.zodSchema;\n    }\n    async _validateResult(result) {\n        if (this.zodSchema === undefined) {\n            return result;\n        }\n        const zodParsedResult = await interopSafeParseAsync(this.zodSchema, result);\n        if (zodParsedResult.success) {\n            return zodParsedResult.data;\n        }\n        else {\n            throw new OutputParserException(`Failed to parse. Text: \"${JSON.stringify(result, null, 2)}\". Error: ${JSON.stringify(zodParsedResult.error.issues)}`, JSON.stringify(result, null, 2));\n        }\n    }\n    async parseResult(generations) {\n        const tools = generations.flatMap((generation) => {\n            const { message } = generation;\n            if (!(\"tool_calls\" in message) || !Array.isArray(message.tool_calls)) {\n                return [];\n            }\n            return message.tool_calls;\n        });\n        if (tools[0] === undefined) {\n            throw new Error(\"No parseable tool calls provided to GoogleGenerativeAIToolsOutputParser.\");\n        }\n        const [tool] = tools;\n        const validatedResult = await this._validateResult(tool.args);\n        return validatedResult;\n    }\n}\n","import { FunctionCallingMode, } from \"@google/generative-ai\";\nimport { isLangChainTool } from \"@langchain/core/utils/function_calling\";\nimport { isOpenAITool, } from \"@langchain/core/language_models/base\";\nimport { convertToGenerativeAITools } from \"./common.js\";\nimport { removeAdditionalProperties } from \"./zod_to_genai_parameters.js\";\nexport function convertToolsToGenAI(tools, extra) {\n    // Extract function declaration processing to a separate function\n    const genAITools = processTools(tools);\n    // Simplify tool config creation\n    const toolConfig = createToolConfig(genAITools, extra);\n    return { tools: genAITools, toolConfig };\n}\nfunction processTools(tools) {\n    let functionDeclarationTools = [];\n    const genAITools = [];\n    tools.forEach((tool) => {\n        if (isLangChainTool(tool)) {\n            const [convertedTool] = convertToGenerativeAITools([\n                tool,\n            ]);\n            if (convertedTool.functionDeclarations) {\n                functionDeclarationTools.push(...convertedTool.functionDeclarations);\n            }\n        }\n        else if (isOpenAITool(tool)) {\n            const { functionDeclarations } = convertOpenAIToolToGenAI(tool);\n            if (functionDeclarations) {\n                functionDeclarationTools.push(...functionDeclarations);\n            }\n            else {\n                throw new Error(\"Failed to convert OpenAI structured tool to GenerativeAI tool\");\n            }\n        }\n        else {\n            genAITools.push(tool);\n        }\n    });\n    const genAIFunctionDeclaration = genAITools.find((t) => \"functionDeclarations\" in t);\n    if (genAIFunctionDeclaration) {\n        return genAITools.map((tool) => {\n            if (functionDeclarationTools?.length > 0 &&\n                \"functionDeclarations\" in tool) {\n                const newTool = {\n                    functionDeclarations: [\n                        ...(tool.functionDeclarations || []),\n                        ...functionDeclarationTools,\n                    ],\n                };\n                // Clear the functionDeclarationTools array so it is not passed again\n                functionDeclarationTools = [];\n                return newTool;\n            }\n            return tool;\n        });\n    }\n    return [\n        ...genAITools,\n        ...(functionDeclarationTools.length > 0\n            ? [\n                {\n                    functionDeclarations: functionDeclarationTools,\n                },\n            ]\n            : []),\n    ];\n}\nfunction convertOpenAIToolToGenAI(tool) {\n    return {\n        functionDeclarations: [\n            {\n                name: tool.function.name,\n                description: tool.function.description,\n                parameters: removeAdditionalProperties(tool.function.parameters),\n            },\n        ],\n    };\n}\nfunction createToolConfig(genAITools, extra) {\n    if (!genAITools.length || !extra)\n        return undefined;\n    const { toolChoice, allowedFunctionNames } = extra;\n    const modeMap = {\n        any: FunctionCallingMode.ANY,\n        auto: FunctionCallingMode.AUTO,\n        none: FunctionCallingMode.NONE,\n    };\n    if (toolChoice && [\"any\", \"auto\", \"none\"].includes(toolChoice)) {\n        return {\n            functionCallingConfig: {\n                mode: modeMap[toolChoice] ?? \"MODE_UNSPECIFIED\",\n                allowedFunctionNames,\n            },\n        };\n    }\n    if (typeof toolChoice === \"string\" || allowedFunctionNames) {\n        return {\n            functionCallingConfig: {\n                mode: FunctionCallingMode.ANY,\n                allowedFunctionNames: [\n                    ...(allowedFunctionNames ?? []),\n                    ...(toolChoice && typeof toolChoice === \"string\" ? [toolChoice] : []),\n                ],\n            },\n        };\n    }\n    return undefined;\n}\n","import { GoogleGenerativeAI as GenerativeAI, } from \"@google/generative-ai\";\nimport { getEnvironmentVariable } from \"@langchain/core/utils/env\";\nimport { BaseChatModel, } from \"@langchain/core/language_models/chat_models\";\nimport { RunnablePassthrough, RunnableSequence, } from \"@langchain/core/runnables\";\nimport { isInteropZodSchema, } from \"@langchain/core/utils/types\";\nimport { JsonOutputParser, } from \"@langchain/core/output_parsers\";\nimport { schemaToGenerativeAIParameters, removeAdditionalProperties, } from \"./utils/zod_to_genai_parameters.js\";\nimport { convertBaseMessagesToContent, convertResponseContentToChatGenerationChunk, mapGenerateContentResultToChatResult, } from \"./utils/common.js\";\nimport { GoogleGenerativeAIToolsOutputParser } from \"./output_parsers.js\";\nimport { convertToolsToGenAI } from \"./utils/tools.js\";\n/**\n * Google Generative AI chat model integration.\n *\n * Setup:\n * Install `@langchain/google-genai` and set an environment variable named `GOOGLE_API_KEY`.\n *\n * ```bash\n * npm install @langchain/google-genai\n * export GOOGLE_API_KEY=\"your-api-key\"\n * ```\n *\n * ## [Constructor args](https://api.js.langchain.com/classes/langchain_google_genai.ChatGoogleGenerativeAI.html#constructor)\n *\n * ## [Runtime args](https://api.js.langchain.com/interfaces/langchain_google_genai.GoogleGenerativeAIChatCallOptions.html)\n *\n * Runtime args can be passed as the second argument to any of the base runnable methods `.invoke`. `.stream`, `.batch`, etc.\n * They can also be passed via `.withConfig`, or the second arg in `.bindTools`, like shown in the examples below:\n *\n * ```typescript\n * // When calling `.withConfig`, call options should be passed via the first argument\n * const llmWithArgsBound = llm.withConfig({\n *   stop: [\"\\n\"],\n * });\n *\n * // When calling `.bindTools`, call options should be passed via the second argument\n * const llmWithTools = llm.bindTools(\n *   [...],\n *   {\n *     stop: [\"\\n\"],\n *   }\n * );\n * ```\n *\n * ## Examples\n *\n * <details open>\n * <summary><strong>Instantiate</strong></summary>\n *\n * ```typescript\n * import { ChatGoogleGenerativeAI } from '@langchain/google-genai';\n *\n * const llm = new ChatGoogleGenerativeAI({\n *   model: \"gemini-1.5-flash\",\n *   temperature: 0,\n *   maxRetries: 2,\n *   // apiKey: \"...\",\n *   // other params...\n * });\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Invoking</strong></summary>\n *\n * ```typescript\n * const input = `Translate \"I love programming\" into French.`;\n *\n * // Models also accept a list of chat messages or a formatted prompt\n * const result = await llm.invoke(input);\n * console.log(result);\n * ```\n *\n * ```txt\n * AIMessage {\n *   \"content\": \"There are a few ways to translate \\\"I love programming\\\" into French, depending on the level of formality and nuance you want to convey:\\n\\n**Formal:**\\n\\n* **J'aime la programmation.** (This is the most literal and formal translation.)\\n\\n**Informal:**\\n\\n* **J'adore programmer.** (This is a more enthusiastic and informal translation.)\\n* **J'aime beaucoup programmer.** (This is a slightly less enthusiastic but still informal translation.)\\n\\n**More specific:**\\n\\n* **J'aime beaucoup coder.** (This specifically refers to writing code.)\\n* **J'aime beaucoup développer des logiciels.** (This specifically refers to developing software.)\\n\\nThe best translation will depend on the context and your intended audience. \\n\",\n *   \"response_metadata\": {\n *     \"finishReason\": \"STOP\",\n *     \"index\": 0,\n *     \"safetyRatings\": [\n *       {\n *         \"category\": \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\n *         \"probability\": \"NEGLIGIBLE\"\n *       },\n *       {\n *         \"category\": \"HARM_CATEGORY_HATE_SPEECH\",\n *         \"probability\": \"NEGLIGIBLE\"\n *       },\n *       {\n *         \"category\": \"HARM_CATEGORY_HARASSMENT\",\n *         \"probability\": \"NEGLIGIBLE\"\n *       },\n *       {\n *         \"category\": \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n *         \"probability\": \"NEGLIGIBLE\"\n *       }\n *     ]\n *   },\n *   \"usage_metadata\": {\n *     \"input_tokens\": 10,\n *     \"output_tokens\": 149,\n *     \"total_tokens\": 159\n *   }\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Streaming Chunks</strong></summary>\n *\n * ```typescript\n * for await (const chunk of await llm.stream(input)) {\n *   console.log(chunk);\n * }\n * ```\n *\n * ```txt\n * AIMessageChunk {\n *   \"content\": \"There\",\n *   \"response_metadata\": {\n *     \"index\": 0\n *   }\n *   \"usage_metadata\": {\n *     \"input_tokens\": 10,\n *     \"output_tokens\": 1,\n *     \"total_tokens\": 11\n *   }\n * }\n * AIMessageChunk {\n *   \"content\": \" are a few ways to translate \\\"I love programming\\\" into French, depending on\",\n * }\n * AIMessageChunk {\n *   \"content\": \" the level of formality and nuance you want to convey:\\n\\n**Formal:**\\n\\n\",\n * }\n * AIMessageChunk {\n *   \"content\": \"* **J'aime la programmation.** (This is the most literal and formal translation.)\\n\\n**Informal:**\\n\\n* **J'adore programmer.** (This\",\n * }\n * AIMessageChunk {\n *   \"content\": \" is a more enthusiastic and informal translation.)\\n* **J'aime beaucoup programmer.** (This is a slightly less enthusiastic but still informal translation.)\\n\\n**More\",\n * }\n * AIMessageChunk {\n *   \"content\": \" specific:**\\n\\n* **J'aime beaucoup coder.** (This specifically refers to writing code.)\\n* **J'aime beaucoup développer des logiciels.** (This specifically refers to developing software.)\\n\\nThe best translation will depend on the context and\",\n * }\n * AIMessageChunk {\n *   \"content\": \" your intended audience. \\n\",\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Aggregate Streamed Chunks</strong></summary>\n *\n * ```typescript\n * import { AIMessageChunk } from '@langchain/core/messages';\n * import { concat } from '@langchain/core/utils/stream';\n *\n * const stream = await llm.stream(input);\n * let full: AIMessageChunk | undefined;\n * for await (const chunk of stream) {\n *   full = !full ? chunk : concat(full, chunk);\n * }\n * console.log(full);\n * ```\n *\n * ```txt\n * AIMessageChunk {\n *   \"content\": \"There are a few ways to translate \\\"I love programming\\\" into French, depending on the level of formality and nuance you want to convey:\\n\\n**Formal:**\\n\\n* **J'aime la programmation.** (This is the most literal and formal translation.)\\n\\n**Informal:**\\n\\n* **J'adore programmer.** (This is a more enthusiastic and informal translation.)\\n* **J'aime beaucoup programmer.** (This is a slightly less enthusiastic but still informal translation.)\\n\\n**More specific:**\\n\\n* **J'aime beaucoup coder.** (This specifically refers to writing code.)\\n* **J'aime beaucoup développer des logiciels.** (This specifically refers to developing software.)\\n\\nThe best translation will depend on the context and your intended audience. \\n\",\n *   \"usage_metadata\": {\n *     \"input_tokens\": 10,\n *     \"output_tokens\": 277,\n *     \"total_tokens\": 287\n *   }\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Bind tools</strong></summary>\n *\n * ```typescript\n * import { z } from 'zod';\n *\n * const GetWeather = {\n *   name: \"GetWeather\",\n *   description: \"Get the current weather in a given location\",\n *   schema: z.object({\n *     location: z.string().describe(\"The city and state, e.g. San Francisco, CA\")\n *   }),\n * }\n *\n * const GetPopulation = {\n *   name: \"GetPopulation\",\n *   description: \"Get the current population in a given location\",\n *   schema: z.object({\n *     location: z.string().describe(\"The city and state, e.g. San Francisco, CA\")\n *   }),\n * }\n *\n * const llmWithTools = llm.bindTools([GetWeather, GetPopulation]);\n * const aiMsg = await llmWithTools.invoke(\n *   \"Which city is hotter today and which is bigger: LA or NY?\"\n * );\n * console.log(aiMsg.tool_calls);\n * ```\n *\n * ```txt\n * [\n *   {\n *     name: 'GetWeather',\n *     args: { location: 'Los Angeles, CA' },\n *     type: 'tool_call'\n *   },\n *   {\n *     name: 'GetWeather',\n *     args: { location: 'New York, NY' },\n *     type: 'tool_call'\n *   },\n *   {\n *     name: 'GetPopulation',\n *     args: { location: 'Los Angeles, CA' },\n *     type: 'tool_call'\n *   },\n *   {\n *     name: 'GetPopulation',\n *     args: { location: 'New York, NY' },\n *     type: 'tool_call'\n *   }\n * ]\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Structured Output</strong></summary>\n *\n * ```typescript\n * const Joke = z.object({\n *   setup: z.string().describe(\"The setup of the joke\"),\n *   punchline: z.string().describe(\"The punchline to the joke\"),\n *   rating: z.number().optional().describe(\"How funny the joke is, from 1 to 10\")\n * }).describe('Joke to tell user.');\n *\n * const structuredLlm = llm.withStructuredOutput(Joke, { name: \"Joke\" });\n * const jokeResult = await structuredLlm.invoke(\"Tell me a joke about cats\");\n * console.log(jokeResult);\n * ```\n *\n * ```txt\n * {\n *   setup: \"Why don\\\\'t cats play poker?\",\n *   punchline: \"Why don\\\\'t cats play poker? Because they always have an ace up their sleeve!\"\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Multimodal</strong></summary>\n *\n * ```typescript\n * import { HumanMessage } from '@langchain/core/messages';\n *\n * const imageUrl = \"https://example.com/image.jpg\";\n * const imageData = await fetch(imageUrl).then(res => res.arrayBuffer());\n * const base64Image = Buffer.from(imageData).toString('base64');\n *\n * const message = new HumanMessage({\n *   content: [\n *     { type: \"text\", text: \"describe the weather in this image\" },\n *     {\n *       type: \"image_url\",\n *       image_url: { url: `data:image/jpeg;base64,${base64Image}` },\n *     },\n *   ]\n * });\n *\n * const imageDescriptionAiMsg = await llm.invoke([message]);\n * console.log(imageDescriptionAiMsg.content);\n * ```\n *\n * ```txt\n * The weather in the image appears to be clear and sunny. The sky is mostly blue with a few scattered white clouds, indicating fair weather. The bright sunlight is casting shadows on the green, grassy hill, suggesting it is a pleasant day with good visibility. There are no signs of rain or stormy conditions.\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Usage Metadata</strong></summary>\n *\n * ```typescript\n * const aiMsgForMetadata = await llm.invoke(input);\n * console.log(aiMsgForMetadata.usage_metadata);\n * ```\n *\n * ```txt\n * { input_tokens: 10, output_tokens: 149, total_tokens: 159 }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Response Metadata</strong></summary>\n *\n * ```typescript\n * const aiMsgForResponseMetadata = await llm.invoke(input);\n * console.log(aiMsgForResponseMetadata.response_metadata);\n * ```\n *\n * ```txt\n * {\n *   finishReason: 'STOP',\n *   index: 0,\n *   safetyRatings: [\n *     {\n *       category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT',\n *       probability: 'NEGLIGIBLE'\n *     },\n *     {\n *       category: 'HARM_CATEGORY_HATE_SPEECH',\n *       probability: 'NEGLIGIBLE'\n *     },\n *     { category: 'HARM_CATEGORY_HARASSMENT', probability: 'NEGLIGIBLE' },\n *     {\n *       category: 'HARM_CATEGORY_DANGEROUS_CONTENT',\n *       probability: 'NEGLIGIBLE'\n *     }\n *   ]\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Document Messages</strong></summary>\n *\n * This example will show you how to pass documents such as PDFs to Google\n * Generative AI through messages.\n *\n * ```typescript\n * const pdfPath = \"/Users/my_user/Downloads/invoice.pdf\";\n * const pdfBase64 = await fs.readFile(pdfPath, \"base64\");\n *\n * const response = await llm.invoke([\n *   [\"system\", \"Use the provided documents to answer the question\"],\n *   [\n *     \"user\",\n *     [\n *       {\n *         type: \"application/pdf\", // If the `type` field includes a single slash (`/`), it will be treated as inline data.\n *         data: pdfBase64,\n *       },\n *       {\n *         type: \"text\",\n *         text: \"Summarize the contents of this PDF\",\n *       },\n *     ],\n *   ],\n * ]);\n *\n * console.log(response.content);\n * ```\n *\n * ```txt\n * This is a billing invoice from Twitter Developers for X API Basic Access. The transaction date is January 7, 2025,\n * and the amount is $194.34, which has been paid. The subscription period is from January 7, 2025 21:02 to February 7, 2025 00:00 (UTC).\n * The tax is $0.00, with a tax rate of 0%. The total amount is $194.34. The payment was made using a Visa card ending in 7022,\n * expiring in 12/2026. The billing address is Brace Sproul, 1234 Main Street, San Francisco, CA, US 94103. The company being billed is\n * X Corp, located at 865 FM 1209 Building 2, Bastrop, TX, US 78602. Terms and conditions apply.\n * ```\n * </details>\n *\n * <br />\n */\nexport class ChatGoogleGenerativeAI extends BaseChatModel {\n    static lc_name() {\n        return \"ChatGoogleGenerativeAI\";\n    }\n    get lc_secrets() {\n        return {\n            apiKey: \"GOOGLE_API_KEY\",\n        };\n    }\n    get lc_aliases() {\n        return {\n            apiKey: \"google_api_key\",\n        };\n    }\n    get _isMultimodalModel() {\n        return (this.model.includes(\"vision\") ||\n            this.model.startsWith(\"gemini-1.5\") ||\n            this.model.startsWith(\"gemini-2\"));\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"chat_models\", \"google_genai\"]\n        });\n        Object.defineProperty(this, \"model\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"temperature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // default value chosen based on model\n        Object.defineProperty(this, \"maxOutputTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"topP\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // default value chosen based on model\n        Object.defineProperty(this, \"topK\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // default value chosen based on model\n        Object.defineProperty(this, \"stopSequences\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"safetySettings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"json\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streamUsage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"convertSystemMessageToHumanContent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.model = fields.model.replace(/^models\\//, \"\");\n        this.maxOutputTokens = fields.maxOutputTokens ?? this.maxOutputTokens;\n        if (this.maxOutputTokens && this.maxOutputTokens < 0) {\n            throw new Error(\"`maxOutputTokens` must be a positive integer\");\n        }\n        this.temperature = fields.temperature ?? this.temperature;\n        if (this.temperature && (this.temperature < 0 || this.temperature > 2)) {\n            throw new Error(\"`temperature` must be in the range of [0.0,2.0]\");\n        }\n        this.topP = fields.topP ?? this.topP;\n        if (this.topP && this.topP < 0) {\n            throw new Error(\"`topP` must be a positive integer\");\n        }\n        if (this.topP && this.topP > 1) {\n            throw new Error(\"`topP` must be below 1.\");\n        }\n        this.topK = fields.topK ?? this.topK;\n        if (this.topK && this.topK < 0) {\n            throw new Error(\"`topK` must be a positive integer\");\n        }\n        this.stopSequences = fields.stopSequences ?? this.stopSequences;\n        this.apiKey = fields.apiKey ?? getEnvironmentVariable(\"GOOGLE_API_KEY\");\n        if (!this.apiKey) {\n            throw new Error(\"Please set an API key for Google GenerativeAI \" +\n                \"in the environment variable GOOGLE_API_KEY \" +\n                \"or in the `apiKey` field of the \" +\n                \"ChatGoogleGenerativeAI constructor\");\n        }\n        this.safetySettings = fields.safetySettings ?? this.safetySettings;\n        if (this.safetySettings && this.safetySettings.length > 0) {\n            const safetySettingsSet = new Set(this.safetySettings.map((s) => s.category));\n            if (safetySettingsSet.size !== this.safetySettings.length) {\n                throw new Error(\"The categories in `safetySettings` array must be unique\");\n            }\n        }\n        this.streaming = fields.streaming ?? this.streaming;\n        this.json = fields.json;\n        this.client = new GenerativeAI(this.apiKey).getGenerativeModel({\n            model: this.model,\n            safetySettings: this.safetySettings,\n            generationConfig: {\n                stopSequences: this.stopSequences,\n                maxOutputTokens: this.maxOutputTokens,\n                temperature: this.temperature,\n                topP: this.topP,\n                topK: this.topK,\n                ...(this.json ? { responseMimeType: \"application/json\" } : {}),\n            },\n        }, {\n            apiVersion: fields.apiVersion,\n            baseUrl: fields.baseUrl,\n        });\n        this.streamUsage = fields.streamUsage ?? this.streamUsage;\n    }\n    useCachedContent(cachedContent, modelParams, requestOptions) {\n        if (!this.apiKey)\n            return;\n        this.client = new GenerativeAI(this.apiKey).getGenerativeModelFromCachedContent(cachedContent, modelParams, requestOptions);\n    }\n    get useSystemInstruction() {\n        return typeof this.convertSystemMessageToHumanContent === \"boolean\"\n            ? !this.convertSystemMessageToHumanContent\n            : this.computeUseSystemInstruction;\n    }\n    get computeUseSystemInstruction() {\n        // This works on models from April 2024 and later\n        //   Vertex AI: gemini-1.5-pro and gemini-1.0-002 and later\n        //   AI Studio: gemini-1.5-pro-latest\n        if (this.model === \"gemini-1.0-pro-001\") {\n            return false;\n        }\n        else if (this.model.startsWith(\"gemini-pro-vision\")) {\n            return false;\n        }\n        else if (this.model.startsWith(\"gemini-1.0-pro-vision\")) {\n            return false;\n        }\n        else if (this.model === \"gemini-pro\") {\n            // on AI Studio gemini-pro is still pointing at gemini-1.0-pro-001\n            return false;\n        }\n        return true;\n    }\n    getLsParams(options) {\n        return {\n            ls_provider: \"google_genai\",\n            ls_model_name: this.model,\n            ls_model_type: \"chat\",\n            ls_temperature: this.client.generationConfig.temperature,\n            ls_max_tokens: this.client.generationConfig.maxOutputTokens,\n            ls_stop: options.stop,\n        };\n    }\n    _combineLLMOutput() {\n        return [];\n    }\n    _llmType() {\n        return \"googlegenerativeai\";\n    }\n    bindTools(tools, kwargs) {\n        return this.withConfig({\n            tools: convertToolsToGenAI(tools)?.tools,\n            ...kwargs,\n        });\n    }\n    invocationParams(options) {\n        const toolsAndConfig = options?.tools?.length\n            ? convertToolsToGenAI(options.tools, {\n                toolChoice: options.tool_choice,\n                allowedFunctionNames: options.allowedFunctionNames,\n            })\n            : undefined;\n        if (options?.responseSchema) {\n            this.client.generationConfig.responseSchema = options.responseSchema;\n            this.client.generationConfig.responseMimeType = \"application/json\";\n        }\n        else {\n            this.client.generationConfig.responseSchema = undefined;\n            this.client.generationConfig.responseMimeType = this.json\n                ? \"application/json\"\n                : undefined;\n        }\n        return {\n            ...(toolsAndConfig?.tools ? { tools: toolsAndConfig.tools } : {}),\n            ...(toolsAndConfig?.toolConfig\n                ? { toolConfig: toolsAndConfig.toolConfig }\n                : {}),\n        };\n    }\n    async _generate(messages, options, runManager) {\n        const prompt = convertBaseMessagesToContent(messages, this._isMultimodalModel, this.useSystemInstruction);\n        let actualPrompt = prompt;\n        if (prompt[0].role === \"system\") {\n            const [systemInstruction] = prompt;\n            this.client.systemInstruction = systemInstruction;\n            actualPrompt = prompt.slice(1);\n        }\n        const parameters = this.invocationParams(options);\n        // Handle streaming\n        if (this.streaming) {\n            const tokenUsage = {};\n            const stream = this._streamResponseChunks(messages, options, runManager);\n            const finalChunks = {};\n            for await (const chunk of stream) {\n                const index = chunk.generationInfo?.completion ?? 0;\n                if (finalChunks[index] === undefined) {\n                    finalChunks[index] = chunk;\n                }\n                else {\n                    finalChunks[index] = finalChunks[index].concat(chunk);\n                }\n            }\n            const generations = Object.entries(finalChunks)\n                .sort(([aKey], [bKey]) => parseInt(aKey, 10) - parseInt(bKey, 10))\n                .map(([_, value]) => value);\n            return { generations, llmOutput: { estimatedTokenUsage: tokenUsage } };\n        }\n        const res = await this.completionWithRetry({\n            ...parameters,\n            contents: actualPrompt,\n        });\n        let usageMetadata;\n        if (\"usageMetadata\" in res.response) {\n            const genAIUsageMetadata = res.response.usageMetadata;\n            usageMetadata = {\n                input_tokens: genAIUsageMetadata.promptTokenCount ?? 0,\n                output_tokens: genAIUsageMetadata.candidatesTokenCount ?? 0,\n                total_tokens: genAIUsageMetadata.totalTokenCount ?? 0,\n            };\n        }\n        const generationResult = mapGenerateContentResultToChatResult(res.response, {\n            usageMetadata,\n        });\n        // may not have generations in output if there was a refusal for safety reasons, malformed function call, etc.\n        if (generationResult.generations?.length > 0) {\n            await runManager?.handleLLMNewToken(generationResult.generations[0]?.text ?? \"\");\n        }\n        return generationResult;\n    }\n    async *_streamResponseChunks(messages, options, runManager) {\n        const prompt = convertBaseMessagesToContent(messages, this._isMultimodalModel, this.useSystemInstruction);\n        let actualPrompt = prompt;\n        if (prompt[0].role === \"system\") {\n            const [systemInstruction] = prompt;\n            this.client.systemInstruction = systemInstruction;\n            actualPrompt = prompt.slice(1);\n        }\n        const parameters = this.invocationParams(options);\n        const request = {\n            ...parameters,\n            contents: actualPrompt,\n        };\n        const stream = await this.caller.callWithOptions({ signal: options?.signal }, async () => {\n            const { stream } = await this.client.generateContentStream(request);\n            return stream;\n        });\n        let usageMetadata;\n        let index = 0;\n        for await (const response of stream) {\n            if (\"usageMetadata\" in response &&\n                this.streamUsage !== false &&\n                options.streamUsage !== false) {\n                const genAIUsageMetadata = response.usageMetadata;\n                if (!usageMetadata) {\n                    usageMetadata = {\n                        input_tokens: genAIUsageMetadata.promptTokenCount ?? 0,\n                        output_tokens: genAIUsageMetadata.candidatesTokenCount ?? 0,\n                        total_tokens: genAIUsageMetadata.totalTokenCount ?? 0,\n                    };\n                }\n                else {\n                    // Under the hood, LangChain combines the prompt tokens. Google returns the updated\n                    // total each time, so we need to find the difference between the tokens.\n                    const outputTokenDiff = (genAIUsageMetadata.candidatesTokenCount ?? 0) -\n                        usageMetadata.output_tokens;\n                    usageMetadata = {\n                        input_tokens: 0,\n                        output_tokens: outputTokenDiff,\n                        total_tokens: outputTokenDiff,\n                    };\n                }\n            }\n            const chunk = convertResponseContentToChatGenerationChunk(response, {\n                usageMetadata,\n                index,\n            });\n            index += 1;\n            if (!chunk) {\n                continue;\n            }\n            yield chunk;\n            await runManager?.handleLLMNewToken(chunk.text ?? \"\");\n        }\n    }\n    async completionWithRetry(request, options) {\n        return this.caller.callWithOptions({ signal: options?.signal }, async () => {\n            try {\n                return await this.client.generateContent(request);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (e) {\n                // TODO: Improve error handling\n                if (e.message?.includes(\"400 Bad Request\")) {\n                    e.status = 400;\n                }\n                throw e;\n            }\n        });\n    }\n    withStructuredOutput(outputSchema, config) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const schema = outputSchema;\n        const name = config?.name;\n        const method = config?.method;\n        const includeRaw = config?.includeRaw;\n        if (method === \"jsonMode\") {\n            throw new Error(`ChatGoogleGenerativeAI only supports \"jsonSchema\" or \"functionCalling\" as a method.`);\n        }\n        let llm;\n        let outputParser;\n        if (method === \"functionCalling\") {\n            let functionName = name ?? \"extract\";\n            let tools;\n            if (isInteropZodSchema(schema)) {\n                const jsonSchema = schemaToGenerativeAIParameters(schema);\n                tools = [\n                    {\n                        functionDeclarations: [\n                            {\n                                name: functionName,\n                                description: jsonSchema.description ?? \"A function available to call.\",\n                                parameters: jsonSchema,\n                            },\n                        ],\n                    },\n                ];\n                outputParser = new GoogleGenerativeAIToolsOutputParser({\n                    returnSingle: true,\n                    keyName: functionName,\n                    zodSchema: schema,\n                });\n            }\n            else {\n                let geminiFunctionDefinition;\n                if (typeof schema.name === \"string\" &&\n                    typeof schema.parameters === \"object\" &&\n                    schema.parameters != null) {\n                    geminiFunctionDefinition = schema;\n                    geminiFunctionDefinition.parameters = removeAdditionalProperties(schema.parameters);\n                    functionName = schema.name;\n                }\n                else {\n                    geminiFunctionDefinition = {\n                        name: functionName,\n                        description: schema.description ?? \"\",\n                        parameters: removeAdditionalProperties(schema),\n                    };\n                }\n                tools = [\n                    {\n                        functionDeclarations: [geminiFunctionDefinition],\n                    },\n                ];\n                outputParser = new GoogleGenerativeAIToolsOutputParser({\n                    returnSingle: true,\n                    keyName: functionName,\n                });\n            }\n            llm = this.bindTools(tools).withConfig({\n                allowedFunctionNames: [functionName],\n            });\n        }\n        else {\n            const jsonSchema = schemaToGenerativeAIParameters(schema);\n            llm = this.withConfig({\n                responseSchema: jsonSchema,\n            });\n            outputParser = new JsonOutputParser();\n        }\n        if (!includeRaw) {\n            return llm.pipe(outputParser).withConfig({\n                runName: \"ChatGoogleGenerativeAIStructuredOutput\",\n            });\n        }\n        const parserAssign = RunnablePassthrough.assign({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            parsed: (input, config) => outputParser.invoke(input.raw, config),\n        });\n        const parserNone = RunnablePassthrough.assign({\n            parsed: () => null,\n        });\n        const parsedWithFallback = parserAssign.withFallbacks({\n            fallbacks: [parserNone],\n        });\n        return RunnableSequence.from([\n            {\n                raw: llm,\n            },\n            parsedWithFallback,\n        ]).withConfig({\n            runName: \"StructuredOutputRunnable\",\n        });\n    }\n}\n","var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            overrideMap,\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * @deprecated Use z.string().min(1) instead.\n     * @see {@link ZodString.min}\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nfunction custom(check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n","import z, { ZodTypeAny } from 'zod'\nimport { SchemaItem } from 'src/services/database/types'\n\nexport const convertToTypeScriptInterface = (data: SchemaItem[]): string => {\n  const generateInterfaceString = (items: SchemaItem[], parentId: string | null = null): string => {\n    let interfaceString = '{\\n'\n\n    items\n      .filter((item) => item.parent_id === parentId)\n      .forEach((item) => {\n        if (item.type === 'object') {\n          const nestedItems = data.filter((nestedItem) => nestedItem.parent_id === item.id)\n          const nestedInterface = generateInterfaceString(nestedItems, item.id)\n          interfaceString += `  ${item.name}${item.required ? '' : '?'}: ${nestedInterface}\\n`\n        } else {\n          interfaceString += `  // ${item.description || ''}\\n  ${item.name}${item.required ? '' : '?'}: ${item.type};\\n`\n        }\n      })\n\n    interfaceString += '}'\n    return interfaceString\n  }\n\n  return generateInterfaceString(data)\n}\n\nexport const convertToJSON = (data: SchemaItem[]): string => {\n  const generateSchemaString = (items: SchemaItem[], parentId: string | null = null): string => {\n    let schemaString = ''\n\n    items\n      .filter((item) => item.parent_id === parentId)\n      .forEach((item) => {\n        if (item.type === 'object') {\n          const nestedSchema = generateSchemaString(items, item.id)\n          schemaString += `    \"${item.name}\": ${nestedSchema},\\n`\n        } else {\n          schemaString += `    \"${item.name}\": { \"required\": ${item.required}, \"explain\": \"${item.description}\", \"type\": \"${item.type}\" },\\n`\n        }\n      })\n\n    return schemaString\n  }\n\n  let schemaString = '{\\n'\n\n  schemaString += generateSchemaString(data)\n\n  schemaString += '}'\n  return schemaString\n}\n\nexport const convertToZodSchemaString = (data: SchemaItem[]): string => {\n  const generateSchemaString = (items: SchemaItem[], parentId: string | null = null): string => {\n    let schemaString = ''\n\n    items\n      .filter((item) => item.parent_id === parentId)\n      .forEach((item) => {\n        if (item.type === 'object') {\n          const nestedSchema = generateSchemaString(items, item.id)\n          schemaString += `    ${item.name}: z.object({\\n${nestedSchema}    })${item.required ? '' : '.optional()'}.describe('${item.description || ''}'),\\n`\n        } else {\n          schemaString += `    ${item.name}: z.${item.type}()${item.required ? '' : '.optional()'}.describe('${item.description || ''}'),\\n`\n        }\n      })\n\n    return schemaString\n  }\n\n  let schemaString = 'const schema = z.object({\\n'\n\n  schemaString += generateSchemaString(data)\n\n  schemaString += '});'\n  return schemaString\n}\n\nexport const convertToZodSchema = (data: SchemaItem[]) => {\n  const schemaObject: { [key: string]: ZodTypeAny } = {}\n\n  const typeMap: { [key in Exclude<SchemaItem['type'], 'object' | 'array'>]: () => ZodTypeAny } = {\n    string: z.string,\n    number: z.number,\n    boolean: z.boolean,\n    enum: () => z.enum(['']),\n  }\n\n  data.forEach((item) => {\n    if (!item.parent_id) {\n      if (item.type === 'object') {\n        const nestedItems = data.filter((nestedItem) => nestedItem.parent_id === item.id)\n        const nestedSchemaObject: { [key: string]: ZodTypeAny } = {}\n        nestedItems.forEach((nestedItem) => {\n          if (nestedItem.type === 'object' || nestedItem.type === 'array') {\n            return\n          }\n          nestedSchemaObject[nestedItem.name] = typeMap[nestedItem.type]()\n          if (!nestedItem.required) {\n            nestedSchemaObject[nestedItem.name] = nestedSchemaObject[nestedItem.name].optional()\n          }\n        })\n        schemaObject[item.name] = z.object(nestedSchemaObject)\n        if (!item.required) {\n          schemaObject[item.name] = schemaObject[item.name].optional()\n        }\n      } else if (item.type === 'array') {\n        schemaObject[item.name] = z.array(z.string())\n        if (!item.required) {\n          schemaObject[item.name] = schemaObject[item.name].optional()\n        }\n      } else if (item.type === 'enum') {\n        schemaObject[item.name] = z.enum((item.enum || '').split(',') as [string, ...string[]]) // Replace with actual enum values\n        if (!item.required) {\n          schemaObject[item.name] = schemaObject[item.name].optional()\n        }\n      } else {\n        schemaObject[item.name] = typeMap[item.type]()\n        if (!item.required) {\n          schemaObject[item.name] = schemaObject[item.name].optional()\n        }\n      }\n    }\n  })\n\n  return z.object(schemaObject)\n}\n","import { useCallback } from 'react'\nimport { useSessionState } from 'src/states/session'\nimport secureSession from 'src/utils/secure-session'\nimport SessionPassphraseDialog from 'src/components/dialogs/SessionPassphraseDialog'\nimport { useModalRef } from 'src/hooks/use-modal-ref'\nimport { decryptSymmetric } from 'src/utils/aes'\nimport { useToast } from 'src/lib/hooks/use-toast'\nimport { useTranslation } from 'react-i18next'\n\nexport const useConfirmPassphrase = () => {\n  const { toast } = useToast()\n  const { t } = useTranslation('errors')\n  const currentSession = useSessionState((state) => state.currentSession)\n  const { modalRef: sessionPassphraseDialogRef } = useModalRef(SessionPassphraseDialog)\n\n  const confirmPassphrase = useCallback(async () => {\n    if (!currentSession?.passphrase) {\n      throw new Error('Session is not found')\n    }\n    const passphraseExisted = await secureSession.exists('passphrase')\n    if (!passphraseExisted) {\n      await new Promise<void>((resolve, reject) => {\n        sessionPassphraseDialogRef.current.show({\n          onConfirm: async (passkey) => {\n            try {\n              const result = await decryptSymmetric(currentSession.passphrase!, passkey)\n              await secureSession.set('passphrase', result)\n              resolve()\n            } catch (error) {\n              toast({\n                content: t('invalid_passphrase'),\n                variant: 'destructive',\n              })\n              reject(error)\n            } finally {\n              sessionPassphraseDialogRef.current.hide()\n            }\n          },\n          onCancel: () => {\n            reject()\n          },\n        })\n      })\n    }\n  }, [currentSession?.passphrase, sessionPassphraseDialogRef, t, toast])\n\n  return {\n    confirmPassphrase,\n  }\n}\n","import { useCallback } from 'react'\nimport { BaseMessage, BaseMessageChunk } from '@langchain/core/messages'\nimport { BaseChatModel } from '@langchain/core/language_models/chat_models'\nimport { ChatOpenAI } from '@langchain/openai'\nimport { ChatGroq } from '@langchain/groq'\nimport { ChatGoogleGenerativeAI } from '@langchain/google-genai'\nimport { LLM, LLMProviderEnum, Schema, SchemaItem } from 'src/services/database/types'\nimport secureSession from 'src/utils/secure-session'\nimport { decryptSymmetric } from 'src/utils/aes'\nimport { convertToZodSchema } from 'src/utils/schema-format'\nimport { useConfirmPassphrase } from './use-confirm-passphrase'\n\nconst llmInvoke = async (\n  model: BaseChatModel,\n  messages: BaseMessage[],\n  {\n    schemas,\n    onMessageUpdate,\n  }: {\n    schemas?: Schema[]\n    onMessageUpdate?: (data: { content: string; chunk?: BaseMessageChunk }) => void\n  },\n) => {\n  let content = ''\n  let lastChunk: BaseMessageChunk | undefined\n  if (schemas?.length) {\n    const schemaItems = schemas\n      .filter((item) => item.schema_items?.length)\n      .flatMap((schema) => schema.schema_items) as SchemaItem[]\n    const structuredLLM = model.withStructuredOutput(convertToZodSchema(schemaItems))\n\n    const streamResponse = await structuredLLM.stream(messages)\n\n    for await (const data of streamResponse) {\n      content = JSON.stringify(data)\n      onMessageUpdate?.({ content: content })\n    }\n  } else {\n    const streamResponse = await model.stream(messages)\n\n    for await (const data of streamResponse) {\n      content += `${data.content}`\n      lastChunk = data\n      onMessageUpdate?.({ content, chunk: data })\n    }\n  }\n  return {\n    lastChunk,\n    content,\n  }\n}\n\nexport const useLangchainLLM = () => {\n  const { confirmPassphrase } = useConfirmPassphrase()\n\n  const stream = useCallback(\n    async (\n      messages: BaseMessage[],\n      info?: {\n        schemas?: Schema[]\n        tools?: {\n          name: string\n          description: string\n          schemaItems: SchemaItem[]\n        }[]\n        onMessageUpdate?: (data: { content: string; chunk?: BaseMessageChunk }) => void\n        onMessageFinish?: (data: { content: string; lastChunk?: BaseMessageChunk }) => void\n        provider?: `${LLMProviderEnum}`\n        llm?: LLM\n      },\n    ) => {\n      const { schemas, onMessageUpdate, onMessageFinish } = info || {}\n      await confirmPassphrase()\n      const encrypted = info?.llm?.encrypted\n      const options = info?.llm?.options || ({} as Record<string, unknown>)\n      if (!encrypted?.key || typeof encrypted.key !== 'string') {\n        throw new Error('API Key is not found')\n      }\n      const passphrase = await secureSession.get('passphrase')\n      if (!passphrase) {\n        throw new Error('Passphrase is not found')\n      }\n      const apiKey = await decryptSymmetric(encrypted.key, passphrase!)\n      if (!apiKey) {\n        throw new Error('API Key is not found')\n      }\n\n      let content = ''\n      let lastChunk: BaseMessageChunk | undefined\n\n      switch (info?.provider) {\n        case LLMProviderEnum.GoogleGenerativeAI:\n          {\n            const model = new ChatGoogleGenerativeAI({\n              apiKey,\n              model: info?.llm?.name || 'gemini-1.5-flash',\n              temperature: options?.temperature ? +options.temperature : undefined,\n              topK: options?.topK ? +options.topK : undefined,\n              topP: options?.topP ? +options.topP : undefined,\n              stopSequences: options?.stop ? (options.stop as string[]) : undefined,\n              maxOutputTokens: options?.maxTokens ? +options.maxTokens : undefined,\n            })\n            if (encrypted?.enabled_google_search_retrieval) {\n              const searchRetrievalTool = {\n                googleSearchRetrieval: {\n                  dynamicRetrievalConfig: {\n                    mode: 'MODE_DYNAMIC', // Use Dynamic Retrieval\n                    dynamicThreshold: 0.7, // Default for Dynamic Retrieval threshold\n                  },\n                },\n              }\n              model.bindTools([searchRetrievalTool])\n            }\n            const result = await llmInvoke(model, messages, {\n              schemas,\n              onMessageUpdate,\n            })\n            content = result.content\n            lastChunk = result.lastChunk\n          }\n          break\n        case LLMProviderEnum.Groq:\n          {\n            const model = new ChatGroq({\n              apiKey,\n              model: info?.llm?.name || '',\n              temperature: options?.temperature ? +options.temperature : undefined,\n              stopSequences: options?.stop ? (options.stop as string[]) : undefined,\n              maxTokens: options?.maxTokens ? +options.maxTokens : undefined,\n            })\n            const result = await llmInvoke(model, messages, {\n              schemas,\n              onMessageUpdate,\n            })\n            content = result.content\n            lastChunk = result.lastChunk\n          }\n          break\n        case LLMProviderEnum.OpenAI:\n          {\n            const model = new ChatOpenAI({\n              apiKey,\n              model: info?.llm?.name,\n              temperature: options?.temperature ? +options.temperature : undefined,\n              topP: options?.topP ? +options.topP : undefined,\n              stopSequences: options?.stop ? (options.stop as string[]) : undefined,\n              maxTokens: options?.maxTokens ? +options.maxTokens : undefined,\n            })\n            const result = await llmInvoke(model, messages, {\n              schemas,\n              onMessageUpdate,\n            })\n            content = result.content\n            lastChunk = result.lastChunk\n          }\n          break\n        default:\n          throw new Error('Provider is not supported')\n      }\n      onMessageFinish?.({\n        content,\n        lastChunk,\n      })\n      return {\n        lastChunk,\n        content,\n      }\n    },\n    [confirmPassphrase],\n  )\n\n  return {\n    stream,\n  }\n}\n","import { useCallback } from 'react'\nimport { LLM, LLMProviderEnum, Schema, SchemaItem } from 'src/services/database/types'\nimport { useLocalLLM } from 'src/services/local-llm'\nimport { BaseMessage, BaseMessageChunk } from '@langchain/core/messages'\n\nimport { useLangchainLLM } from './use-langchain-llm'\n\nexport const useLLM = () => {\n  const localLLM = useLocalLLM()\n  const langchainLLM = useLangchainLLM()\n\n  const stream = useCallback(\n    (\n      provider: `${LLMProviderEnum}`,\n      messages: BaseMessage[],\n      info?: {\n        schemas?: Schema[]\n        tools?: {\n          name: string\n          description: string\n          schemaItems: SchemaItem[]\n        }[]\n        onMessageUpdate?: (data: {\n          content: string\n          chunk?: BaseMessageChunk | BaseMessage\n        }) => void\n        onMessageFinish?: (data: {\n          content: string\n          lastChunk?: BaseMessageChunk | BaseMessage\n        }) => void\n        llm?: LLM\n      },\n    ) => {\n      switch (provider) {\n        case LLMProviderEnum.WebLLM:\n        case LLMProviderEnum.Wllama:\n          return localLLM.stream(messages, info)\n        case LLMProviderEnum.GoogleGenerativeAI:\n        case LLMProviderEnum.Groq:\n        case LLMProviderEnum.OpenAI:\n          return langchainLLM.stream(messages, {\n            ...info,\n            provider,\n          })\n        default:\n          throw new Error('Provider is not supported')\n      }\n    },\n    [langchainLLM, localLLM],\n  )\n\n  return {\n    stream,\n  }\n}\n","import * as React from \"react\";\nconst SvgSnowflake = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", xmlnsXlink: \"http://www.w3.org/1999/xlink\", fill: \"none\", height: 192, viewBox: \"0 0 150 150\", width: 192, ...props }, /* @__PURE__ */ React.createElement(\"clipPath\", { id: \"a\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"m0 0h150v150h-150z\" })), /* @__PURE__ */ React.createElement(\"g\", { clipPath: \"url(#a)\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"m150 0h-150v150h150z\", fill: \"#29b5e8\" }), /* @__PURE__ */ React.createElement(\"path\", { clipRule: \"evenodd\", d: \"m130.375 67.2532-14.096 8.1221 14.096 8.0536c.843.4872 1.581 1.1357 2.174 1.9084.592.7727 1.026 1.6545 1.278 2.5951.251.9406.315 1.9215.188 2.8867-.128.9652-.444 1.8959-.931 2.7388-.488.843-1.136 1.5817-1.909 2.174s-1.654 1.0267-2.595 1.2782-1.921.3154-2.887.1878c-.965-.1275-1.896-.444-2.739-.9312l-25.2559-14.5496c-1.1575-.6696-2.1128-1.6394-2.765-2.8068-.6523-1.1674-.9773-2.4893-.9408-3.826.0198-.5792.1089-1.1538.2653-1.7117.517-1.8711 1.7458-3.4654 3.4234-4.4419l25.256-14.4983c.847-.4892 1.782-.8067 2.751-.9343.97-.1275 1.955-.0627 2.899.1909.945.2536 1.83.6909 2.605 1.287.775.596 1.425 1.3391 1.913 2.1866.49.8402.808 1.7693.935 2.7334.128.964.063 1.9439-.191 2.8826-.254.9388-.692 1.8177-1.288 2.5859-.597.7681-1.34 1.4101-2.186 1.8887zm-13.343 39.3698-25.2478-14.5243c-1.1296-.6483-2.4091-.9896-3.7115-.9902s-2.5823.3397-3.7124.987c-1.1301.6472-2.0712 1.579-2.7297 2.7026-.6585 1.1237-1.0115 2.4001-1.0239 3.7024v29.0135c.0654 1.928.8772 3.755 2.264 5.095 1.3869 1.341 3.2403 2.09 5.1691 2.09 1.9289 0 3.7823-.749 5.1691-2.09 1.3868-1.34 2.1986-3.167 2.264-5.095v-16.261l14.1301 8.122c.843.488 1.774.805 2.739.933.966.128 1.947.064 2.888-.187s1.823-.685 2.596-1.277c.774-.592 1.423-1.331 1.91-2.174.488-.843.805-1.773.933-2.739.128-.965.065-1.946-.186-2.887s-.685-1.824-1.277-2.597-1.331-1.422-2.174-1.91zm-29.0992-28.3806-10.527 10.3986c-.3601.3349-.8269.5319-1.318.5563h-3.0897c-.49-.0294-.9551-.2257-1.318-.5563l-10.4671-10.4329c-.3274-.3573-.521-.817-.5478-1.3009v-3.081c.0283-.4861.2215-.9481.5478-1.3095l10.4671-10.4329c.3637-.3281.829-.5214 1.318-.5477h3.0897c.4899.0228.9562.2166 1.318.5477l10.4928 10.4329c.3237.3623.514.8243.5392 1.3095v3.081c-.0237.483-.2143.9428-.5392 1.3009zm-8.3874-2.8928c-.0404-.499-.2485-.9696-.5905-1.3352l-3.0383-3.004c-.3641-.3275-.8291-.5207-1.318-.5478h-.1113c-.4867.0255-.9495.2191-1.3094.5478l-3.0383 3.004c-.3262.3676-.5165.8358-.5392 1.3266v.1113c.0215.4834.2124.9439.5392 1.3009l3.0554 2.9955c.3607.3274.823.5208 1.3094.5477h.1113c.4889-.027.9539-.2203 1.318-.5477l3.0383-3.0212c.3282-.3576.5244-.8166.5563-1.3009zm-47.4914-31.2217 25.2563 14.4811c1.1308.648 2.4115.989 3.7149.9889 1.3033 0 2.584-.3409 3.7148-.989 1.1309-.648 2.0725-1.5806 2.7314-2.7051.659-1.1245 1.0123-2.4018 1.0249-3.7051v-28.9879c-.0654-1.9277-.8772-3.7546-2.264-5.0952s-3.2402-2.0899-5.1691-2.0899c-1.9288 0-3.7822.7493-5.169 2.0899-1.3869 1.3406-2.1987 3.1675-2.2641 5.0952v16.2613l-14.1473-8.1307c-.8429-.4877-1.7737-.8047-2.7392-.9328-.9654-.1281-1.9466-.0647-2.8876.1864s-1.8232.6852-2.5965 1.2773c-.7732.5921-1.4222 1.3307-1.91 2.1736-.4878.843-.8048 1.7738-.9329 2.7392-.128.9655-.0647 1.9467.1864 2.8876.2512.941.6852 1.8233 1.2773 2.5965.5921.7733 1.3307 1.4223 2.1737 1.9101zm55.4252 15.4739c1.4914.118 2.9836-.2193 4.2793-.9671l25.2475-14.5496c.843-.4877 1.582-1.1368 2.174-1.91s1.026-1.6555 1.277-2.5965.315-1.9222.187-2.8876c-.128-.9655-.445-1.8962-.933-2.7392-.488-.8429-1.137-1.5816-1.91-2.1737-.774-.5921-1.656-1.0261-2.597-1.2772-1.9-.5072-3.924-.2387-5.627.7464l-14.1298 8.1991v-16.2613c-.0654-1.9277-.8772-3.7546-2.264-5.0952-1.3868-1.3405-3.2402-2.0899-5.1691-2.0899-1.9288 0-3.7822.7494-5.169 2.0899-1.3869 1.3406-2.1987 3.1675-2.2641 5.0952v29.0136c-.0023 1.8784.7086 3.6876 1.9892 5.0619 1.2805 1.3743 3.0351 2.2111 4.909 2.3412zm-25.8554 31.5298c-1.4916-.1213-2.9847.2162-4.2793.9671l-25.2905 14.4893c-1.7024.985-2.9438 2.607-3.451 4.507s-.2387 3.924.7465 5.627c.9851 1.702 2.6061 2.943 4.5065 3.451 1.9004.507 3.9244.238 5.6268-.747l14.1473-8.122v16.261c.0654 1.928.8772 3.755 2.2641 5.096 1.3868 1.34 3.2402 2.09 5.169 2.09 1.9289 0 3.7823-.75 5.1691-2.09 1.3868-1.341 2.1986-3.168 2.264-5.096v-29.0645c-.0038-1.869-.7144-3.6673-1.9891-5.0341s-3.0192-2.2009-4.8834-2.3348zm-6.8468-13.5825c.4875-1.6032.414-3.3247-.2083-4.8806-.6224-1.5559-1.7564-2.8532-3.2152-3.6779l-25.2306-14.541c-1.704-.976-3.7248-1.2385-5.6216-.7303-1.8968.5083-3.5155 1.7461-4.5032 3.4433-.4889.84-.8065 1.7686-.9343 2.732-.1278.9635-.0632 1.9428.1899 2.8811.2531.9384.6897 1.8173 1.2846 2.5858.595.7686 1.3364 1.4115 2.1814 1.8917l14.096 8.1221-14.096 8.0536c-.8429.4861-1.5819 1.1334-2.1746 1.9051-.5928.7717-1.0277 1.6526-1.2801 2.5923-.2523.9398-.317 1.9201-.1905 2.8849s.4418 1.8952.9279 2.7382c.4861.8429 1.1335 1.5819 1.9051 2.1746.7717.5928 1.6526 1.0277 2.5924 1.2801.9397.2523 1.92.317 2.8848.1905s1.8952-.4418 2.7382-.9279l25.2306-14.5496c1.6248-.9071 2.8451-2.3965 3.4149-4.168z\", fill: \"#fff\", fillRule: \"evenodd\" })));\nexport default SvgSnowflake;\n","import * as React from \"react\";\nconst SvgGemma = (props) => /* @__PURE__ */ React.createElement(\"svg\", { className: \"mr-2 w-5 h-5\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 48 48\", width: 48, height: 48, ...props }, /* @__PURE__ */ React.createElement(\"path\", { fill: \"#fbc02d\", d: \"M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12 s5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24s8.955,20,20,20 s20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z\" }), /* @__PURE__ */ React.createElement(\"path\", { fill: \"#e53935\", d: \"M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039 l5.657-5.657C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z\" }), /* @__PURE__ */ React.createElement(\"path\", { fill: \"#4caf50\", d: \"M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36 c-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z\" }), /* @__PURE__ */ React.createElement(\"path\", { fill: \"#1565c0\", d: \"M43.611,20.083L43.595,20L42,20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571 c0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z\" }));\nexport default SvgGemma;\n","import * as React from \"react\";\nconst SvgPhi = (props) => /* @__PURE__ */ React.createElement(\"svg\", { className: \"mr-2 w-5 h-5\", width: 1024, height: 1024, viewBox: \"0 0 1024 1024\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M44.522 44.5217H489.739V489.739H44.522V44.5217Z\", fill: \"#F35325\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M534.261 44.5217H979.478V489.739H534.261V44.5217Z\", fill: \"#81BC06\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M44.522 534.261H489.739V979.478H44.522V534.261Z\", fill: \"#05A6F0\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M534.261 534.261H979.478V979.478H534.261V534.261Z\", fill: \"#FFBA08\" }));\nexport default SvgPhi;\n","import * as React from \"react\";\nconst SvgMeta = (props) => /* @__PURE__ */ React.createElement(\"svg\", { id: \"Layer_1\", \"data-name\": \"Layer 1\", xmlns: \"http://www.w3.org/2000/svg\", xmlnsXlink: \"http://www.w3.org/1999/xlink\", viewBox: \"0 0 287.56 191\", ...props }, /* @__PURE__ */ React.createElement(\"defs\", null, /* @__PURE__ */ React.createElement(\"style\", null, \".cls-1{fill:#0081fb;}.cls-2{fill:url(#linear-gradient);}.cls-3{fill:url(#linear-gradient-2);}\"), /* @__PURE__ */ React.createElement(\"linearGradient\", { id: \"linear-gradient\", x1: 62.34, y1: 101.45, x2: 260.34, y2: 91.45, gradientTransform: \"matrix(1, 0, 0, -1, 0, 192)\", gradientUnits: \"userSpaceOnUse\" }, /* @__PURE__ */ React.createElement(\"stop\", { offset: 0, stopColor: \"#0064e1\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 0.4, stopColor: \"#0064e1\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 0.83, stopColor: \"#0073ee\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 1, stopColor: \"#0082fb\" })), /* @__PURE__ */ React.createElement(\"linearGradient\", { id: \"linear-gradient-2\", x1: 41.42, y1: 53, x2: 41.42, y2: 126, gradientTransform: \"matrix(1, 0, 0, -1, 0, 192)\", gradientUnits: \"userSpaceOnUse\" }, /* @__PURE__ */ React.createElement(\"stop\", { offset: 0, stopColor: \"#0082fb\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 1, stopColor: \"#0064e0\" }))), /* @__PURE__ */ React.createElement(\"title\", null, \"facebook-meta\"), /* @__PURE__ */ React.createElement(\"path\", { className: \"cls-1\", d: \"M31.06,126c0,11,2.41,19.41,5.56,24.51A19,19,0,0,0,53.19,160c8.1,0,15.51-2,29.79-21.76,11.44-15.83,24.92-38,34-52l15.36-23.6c10.67-16.39,23-34.61,37.18-47C181.07,5.6,193.54,0,206.09,0c21.07,0,41.14,12.21,56.5,35.11,16.81,25.08,25,56.67,25,89.27,0,19.38-3.82,33.62-10.32,44.87C271,180.13,258.72,191,238.13,191V160c17.63,0,22-16.2,22-34.74,0-26.42-6.16-55.74-19.73-76.69-9.63-14.86-22.11-23.94-35.84-23.94-14.85,0-26.8,11.2-40.23,31.17-7.14,10.61-14.47,23.54-22.7,38.13l-9.06,16c-18.2,32.27-22.81,39.62-31.91,51.75C84.74,183,71.12,191,53.19,191c-21.27,0-34.72-9.21-43-23.09C3.34,156.6,0,141.76,0,124.85Z\" }), /* @__PURE__ */ React.createElement(\"path\", { className: \"cls-2\", d: \"M24.49,37.3C38.73,15.35,59.28,0,82.85,0c13.65,0,27.22,4,41.39,15.61,15.5,12.65,32,33.48,52.63,67.81l7.39,12.32c17.84,29.72,28,45,33.93,52.22,7.64,9.26,13,12,19.94,12,17.63,0,22-16.2,22-34.74l27.4-.86c0,19.38-3.82,33.62-10.32,44.87C271,180.13,258.72,191,238.13,191c-12.8,0-24.14-2.78-36.68-14.61-9.64-9.08-20.91-25.21-29.58-39.71L146.08,93.6c-12.94-21.62-24.81-37.74-31.68-45C107,40.71,97.51,31.23,82.35,31.23c-12.27,0-22.69,8.61-31.41,21.78Z\" }), /* @__PURE__ */ React.createElement(\"path\", { className: \"cls-3\", d: \"M82.35,31.23c-12.27,0-22.69,8.61-31.41,21.78C38.61,71.62,31.06,99.34,31.06,126c0,11,2.41,19.41,5.56,24.51L10.14,167.91C3.34,156.6,0,141.76,0,124.85,0,94.1,8.44,62.05,24.49,37.3,38.73,15.35,59.28,0,82.85,0Z\" }));\nexport default SvgMeta;\n","import * as React from \"react\";\nconst SvgMistral = (props) => /* @__PURE__ */ React.createElement(\"svg\", { className: \"mr-2 w-5 h-5\", width: 256, height: 233, viewBox: \"0 0 256 233\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M186.182 0h46.545v46.545h-46.545z\" }), /* @__PURE__ */ React.createElement(\"path\", { fill: \"#f7d046\", d: \"M209.455 0H256v46.545h-46.545z\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M0 0h46.545v46.545H0zm0 46.545h46.545V93.09H0zm0 46.546h46.545v46.545H0zm0 46.545h46.545v46.545H0zm0 46.546h46.545v46.545H0z\" }), /* @__PURE__ */ React.createElement(\"path\", { fill: \"#f7d046\", d: \"M23.273 0h46.545v46.545H23.273z\" }), /* @__PURE__ */ React.createElement(\"path\", { fill: \"#f2a73b\", d: \"M209.455 46.545H256V93.09h-46.545zm-186.182 0h46.545V93.09H23.273z\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M139.636 46.545h46.545V93.09h-46.545z\" }), /* @__PURE__ */ React.createElement(\"path\", { fill: \"#f2a73b\", d: \"M162.909 46.545h46.545V93.09h-46.545zm-93.091 0h46.545V93.09H69.818z\" }), /* @__PURE__ */ React.createElement(\"path\", { fill: \"#ee792f\", d: \"M116.364 93.091h46.545v46.545h-46.545zm46.545 0h46.545v46.545h-46.545zm-93.091 0h46.545v46.545H69.818z\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M93.091 139.636h46.545v46.545H93.091z\" }), /* @__PURE__ */ React.createElement(\"path\", { fill: \"#eb5829\", d: \"M116.364 139.636h46.545v46.545h-46.545z\" }), /* @__PURE__ */ React.createElement(\"path\", { fill: \"#ee792f\", d: \"M209.455 93.091H256v46.545h-46.545zm-186.182 0h46.545v46.545H23.273z\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M186.182 139.636h46.545v46.545h-46.545z\" }), /* @__PURE__ */ React.createElement(\"path\", { fill: \"#eb5829\", d: \"M209.455 139.636H256v46.545h-46.545z\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M186.182 186.182h46.545v46.545h-46.545z\" }), /* @__PURE__ */ React.createElement(\"path\", { fill: \"#eb5829\", d: \"M23.273 139.636h46.545v46.545H23.273z\" }), /* @__PURE__ */ React.createElement(\"path\", { fill: \"#ea3326\", d: \"M209.455 186.182H256v46.545h-46.545zm-186.182 0h46.545v46.545H23.273z\" }));\nexport default SvgMistral;\n","export default \"__VITE_ASSET__DdUdr_Bn__\"","export default \"__VITE_ASSET__D9N3XKEi__\"","export default \"__VITE_ASSET__DytfCzg8__\"","export default \"__VITE_ASSET__D8MtxSKb__\"","export default \"__VITE_ASSET__BL3uqumY__\"","export default \"__VITE_ASSET__eN$yTMJu__\"","export default \"__VITE_ASSET__DfCjF5kV__\"","import * as React from \"react\";\nconst SvgOpenaiDark = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 256, height: 260, preserveAspectRatio: \"xMidYMid\", viewBox: \"0 0 256 260\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { fill: \"#fff\", d: \"M239.184 106.203a64.716 64.716 0 0 0-5.576-53.103C219.452 28.459 191 15.784 163.213 21.74A65.586 65.586 0 0 0 52.096 45.22a64.716 64.716 0 0 0-43.23 31.36c-14.31 24.602-11.061 55.634 8.033 76.74a64.665 64.665 0 0 0 5.525 53.102c14.174 24.65 42.644 37.324 70.446 31.36a64.72 64.72 0 0 0 48.754 21.744c28.481.025 53.714-18.361 62.414-45.481a64.767 64.767 0 0 0 43.229-31.36c14.137-24.558 10.875-55.423-8.083-76.483Zm-97.56 136.338a48.397 48.397 0 0 1-31.105-11.255l1.535-.87 51.67-29.825a8.595 8.595 0 0 0 4.247-7.367v-72.85l21.845 12.636c.218.111.37.32.409.563v60.367c-.056 26.818-21.783 48.545-48.601 48.601Zm-104.466-44.61a48.345 48.345 0 0 1-5.781-32.589l1.534.921 51.722 29.826a8.339 8.339 0 0 0 8.441 0l63.181-36.425v25.221a.87.87 0 0 1-.358.665l-52.335 30.184c-23.257 13.398-52.97 5.431-66.404-17.803ZM23.549 85.38a48.499 48.499 0 0 1 25.58-21.333v61.39a8.288 8.288 0 0 0 4.195 7.316l62.874 36.272-21.845 12.636a.819.819 0 0 1-.767 0L41.353 151.53c-23.211-13.454-31.171-43.144-17.804-66.405v.256Zm179.466 41.695-63.08-36.63L161.73 77.86a.819.819 0 0 1 .768 0l52.233 30.184a48.6 48.6 0 0 1-7.316 87.635v-61.391a8.544 8.544 0 0 0-4.4-7.213Zm21.742-32.69-1.535-.922-51.619-30.081a8.39 8.39 0 0 0-8.492 0L99.98 99.808V74.587a.716.716 0 0 1 .307-.665l52.233-30.133a48.652 48.652 0 0 1 72.236 50.391v.205ZM88.061 139.097l-21.845-12.585a.87.87 0 0 1-.41-.614V65.685a48.652 48.652 0 0 1 79.757-37.346l-1.535.87-51.67 29.825a8.595 8.595 0 0 0-4.246 7.367l-.051 72.697Zm11.868-25.58 28.138-16.217 28.188 16.218v32.434l-28.086 16.218-28.188-16.218-.052-32.434Z\" }));\nexport default SvgOpenaiDark;\n","import * as React from \"react\";\nconst SvgOpenaiLight = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 256, height: 260, preserveAspectRatio: \"xMidYMid\", viewBox: \"0 0 256 260\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M239.184 106.203a64.716 64.716 0 0 0-5.576-53.103C219.452 28.459 191 15.784 163.213 21.74A65.586 65.586 0 0 0 52.096 45.22a64.716 64.716 0 0 0-43.23 31.36c-14.31 24.602-11.061 55.634 8.033 76.74a64.665 64.665 0 0 0 5.525 53.102c14.174 24.65 42.644 37.324 70.446 31.36a64.72 64.72 0 0 0 48.754 21.744c28.481.025 53.714-18.361 62.414-45.481a64.767 64.767 0 0 0 43.229-31.36c14.137-24.558 10.875-55.423-8.083-76.483Zm-97.56 136.338a48.397 48.397 0 0 1-31.105-11.255l1.535-.87 51.67-29.825a8.595 8.595 0 0 0 4.247-7.367v-72.85l21.845 12.636c.218.111.37.32.409.563v60.367c-.056 26.818-21.783 48.545-48.601 48.601Zm-104.466-44.61a48.345 48.345 0 0 1-5.781-32.589l1.534.921 51.722 29.826a8.339 8.339 0 0 0 8.441 0l63.181-36.425v25.221a.87.87 0 0 1-.358.665l-52.335 30.184c-23.257 13.398-52.97 5.431-66.404-17.803ZM23.549 85.38a48.499 48.499 0 0 1 25.58-21.333v61.39a8.288 8.288 0 0 0 4.195 7.316l62.874 36.272-21.845 12.636a.819.819 0 0 1-.767 0L41.353 151.53c-23.211-13.454-31.171-43.144-17.804-66.405v.256Zm179.466 41.695-63.08-36.63L161.73 77.86a.819.819 0 0 1 .768 0l52.233 30.184a48.6 48.6 0 0 1-7.316 87.635v-61.391a8.544 8.544 0 0 0-4.4-7.213Zm21.742-32.69-1.535-.922-51.619-30.081a8.39 8.39 0 0 0-8.492 0L99.98 99.808V74.587a.716.716 0 0 1 .307-.665l52.233-30.133a48.652 48.652 0 0 1 72.236 50.391v.205ZM88.061 139.097l-21.845-12.585a.87.87 0 0 1-.41-.614V65.685a48.652 48.652 0 0 1 79.757-37.346l-1.535.87-51.67 29.825a8.595 8.595 0 0 0-4.246 7.367l-.051 72.697Zm11.868-25.58 28.138-16.217 28.188 16.218v32.434l-28.086 16.218-28.188-16.218-.052-32.434Z\" }));\nexport default SvgOpenaiLight;\n","import { memo } from 'react'\nimport { cn } from 'src/lib/utils'\nimport { useAppState } from 'src/states/app'\n\nimport SnowflakeIcon from 'src/assets/svgs/snowflake.svg?react'\nimport GemmaIcon from 'src/assets/svgs/gemma.svg?react'\nimport PhiIcon from 'src/assets/svgs/phi.svg?react'\nimport MetaIcon from 'src/assets/svgs/meta.svg?react'\nimport MistralIcon from 'src/assets/svgs/mistral.svg?react'\nimport qwenImage from 'src/assets/images/qwen.webp'\nimport smollmImage from 'src/assets/images/smollm.png'\nimport stablelmImage from 'src/assets/images/stablelm.png'\nimport nomicImage from 'src/assets/images/nomic.webp'\nimport joshuaImage from 'src/assets/images/joshua.webp'\nimport deepseekImage from 'src/assets/images/deepseek.png'\nimport redpajamaImage from 'src/assets/images/redpajama.png'\nimport OpenAIDarkIcon from 'src/assets/svgs/openai_dark.svg?react'\nimport OpenAILightIcon from 'src/assets/svgs/openai_light.svg?react'\n\nimport LazyIcon from './LazyIcon'\n\ntype LLMIconProps = {\n  name: string\n  className?: string\n}\n\nconst LLMIcon = memo(({ name, className, ...props }: LLMIconProps) => {\n  const theme = useAppState((state) => state.theme)\n\n  name = name.toLowerCase()\n\n  if (name.includes('gpt')) {\n    if (theme === 'dark') {\n      return <OpenAIDarkIcon className={cn('w-5 h-5', className)} {...props} />\n    }\n    return <OpenAILightIcon className={cn('w-5 h-5', className)} {...props} />\n  } else if (name?.includes('deepseek')) {\n    return (\n      <img\n        className={cn('w-5 h-5 rounded-full', className)}\n        src={deepseekImage}\n        alt=\"deepseek\"\n        {...props}\n      />\n    )\n  } else if (name?.includes('redpajama')) {\n    return (\n      <img\n        className={cn('w-5 h-5 rounded-full', className)}\n        src={redpajamaImage}\n        alt=\"deepseek\"\n        {...props}\n      />\n    )\n  } else if (name.includes('gemma') || name.includes('gemini')) {\n    return <GemmaIcon className={cn('w-5 h-5', className)} {...props} />\n  } else if (name?.includes('qwen')) {\n    return <img className={cn('w-5 h-5', className)} src={qwenImage} alt=\"qwen\" {...props} />\n  } else if (name?.includes('phi')) {\n    return <PhiIcon className={cn('w-5 h-5', className)} {...props} />\n  } else if (name?.includes('llama')) {\n    return <MetaIcon className={cn('w-5 h-5', className)} {...props} />\n  } else if (name?.includes('smollm')) {\n    return <img className={cn('w-5 h-5', className)} src={smollmImage} alt=\"smollm\" {...props} />\n  } else if (name?.includes('mistral')) {\n    return <MistralIcon className={cn('w-5 h-5', className)} {...props} />\n  } else if (name?.includes('snowflake')) {\n    return <SnowflakeIcon className={cn('w-5 h-5 rounded-full', className)} {...props} />\n  } else if (name?.includes('stablelm')) {\n    return (\n      <img\n        className={cn('w-5 h-5 rounded-full', className)}\n        src={stablelmImage}\n        alt=\"stablelm\"\n        {...props}\n      />\n    )\n  } else if (name?.includes('nomic')) {\n    return (\n      <img\n        className={cn('w-5 h-5 rounded-full', className)}\n        src={nomicImage}\n        alt=\"nomic\"\n        {...props}\n      />\n    )\n  } else if (name?.includes('Xenova') || name?.includes('janus')) {\n    return (\n      <img\n        className={cn('w-5 h-5 rounded-full', className)}\n        src={joshuaImage}\n        alt=\"Xenova\"\n        {...props}\n      />\n    )\n  }\n\n  return <LazyIcon className={cn('w-5 h-5', className)} name={'brain'} />\n})\n\nexport default LLMIcon\n"],"names":["global","LLMStatusEnum","LLMModelTypeEnum","LLMProviderEnum","_generate","mirror","obj","patches","path","invertible","newKeys","_objectKeys","oldKeys","deleted","t","key","oldVal","hasOwnProperty","newVal","escapePathComponent","_deepClone","compare","tree1","tree2","deepCompareStrict","a","b","typeofa","length","i","aKeys","bKeys","k","handleStream","streamResponse","onMessageUpdate","content","response","lastChunk","chunks","chunk","c","useLocalLLMInfo","getCurrentModelInfo","useLocalLLMState","state","useCallback","provider","useUnloadLocalLLM","unLoadModel","useLocalLLM","toolsCallingStream","structuredStream","stream","webLLMStream","messages","info","tools","schemas","onMessageFinish","logWarn","wllamaStream","wllamaStreamInner","_token","_piece","newToken","AIMessage","Reflect","factory","root","sloppyModeThis","exporter","makeExporter","target","previous","value","functionThis","indirectEvalThis","hasOwn","supportsSymbol","toPrimitiveSymbol","iteratorSymbol","supportsCreate","supportsProto","downLevel","HashMap","MakeDictionary","map","functionPrototype","_Map","CreateMapPolyfill","_Set","CreateSetPolyfill","_WeakMap","CreateWeakMapPolyfill","registrySymbol","metadataRegistry","GetOrCreateMetadataRegistry","metadataProvider","CreateMetadataProvider","decorate","decorators","propertyKey","attributes","IsUndefined","IsArray","IsConstructor","DecorateConstructor","IsObject","IsNull","ToPropertyKey","DecorateProperty","metadata","metadataKey","metadataValue","decorator","IsPropertyKey","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","getMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","GetMetadataProvider","decorated","descriptor","MetadataKey","O","P","parent","OrdinaryGetPrototypeOf","ToBoolean","MetadataValue","ownKeys","parentKeys","set","keys","_i","ownKeys_1","hasKey","_a","parentKeys_1","Type","x","IsSymbol","ToPrimitive","input","PreferredType","hint","exoticToPrim","GetMethod","result","OrdinaryToPrimitive","valueOf","toString_2","toString_1","IsCallable","argument","ToString","SameValueZero","y","V","func","GetIterator","method","iterator","IteratorValue","iterResult","IteratorStep","IteratorClose","f","proto","prototype","prototypeProto","constructor","CreateMetadataRegistry","fallback","CreateFallbackProvider","first","second","rest","targetProviderMap","registry","registerProvider","getProvider","setProvider","getProviderNoCache","next","providerMap","hasProvider","existingProvider","targetMetadata","OrdinaryDeleteMetadata","GetOrCreateMetadataMap","Create","createdTargetMetadata","metadataMap","keysObj","nextValue","e","reflect","metadataOwner","metadataPropertySet","registeredProvider","cacheSentinel","arraySentinel","MapIterator","values","selector","index","error","Map","size","getKey","getValue","getEntry","insert","_","Set","UUID_SIZE","rootKey","CreateUniqueKey","WeakMap","table","GetOrCreateWeakMapTable","CreateUUID","create","FillRandomBytes","buffer","GenRandomBytes","array","data","offset","byte","Buffer","ObjectUtils","val","sources","source","prop","list","TypeORMError","message","LockNotSupportedOnGivenDriverError","UpdateValuesMissingError","InstanceChecker","name","EntityNotFoundError","entityClass","criteria","OptimisticLockVersionMismatchError","entity","expectedVersion","actualVersion","LimitOnUpdateNotSupportedError","MissingDeleteDateColumnError","entityMetadata","ReturningStatementNotSupportedError","EntityPropertyNotFoundError","propertyPath","NoVersionOrUpdateDateColumnError","InsertValuesMissingError","OptimisticLockCanNotBeUsedError","FindRelationsNotFoundError","notFoundRelations","relation","PessimisticLockTransactionRequiredError","OffsetWithoutLimitNotSupportedError","Alias","alias","QueryBuilderUtils","str","aliasName","propertyName","inherits_browserModule","ctor","superCtor","TempCtor","require$$0","Hash","blockSize","finalSize","enc","block","accum","assigned","remainder","rem","bits","lowBits","highBits","hash","inherits","require$$1","require$$2","K","W","Sha","rotl5","num","rotl30","ft","s","d","M","j","H","sha","Sha1","rotl1","sha1","Sha256","ch","z","maj","sigma0","sigma1","gamma0","gamma1","g","h","T1","T2","sha256","require$$3","Sha224","sha224","Sha512","Ch","xl","Gamma0","Gamma0l","Gamma1","Gamma1l","getCarry","ah","bh","dh","eh","fh","gh","hh","al","bl","cl","dl","el","fl","gl","hl","xh","gamma0l","gamma1l","Wi7h","Wi7l","Wi16h","Wi16l","Wil","Wih","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Kih","Kil","chh","chl","t1l","t1h","t2l","t2h","writeInt64BE","l","sha512","SHA512","Sha384","sha384","exports","sha_jsModule","algorithm","Algorithm","require$$4","require$$5","shorten","options","segmentLength","separator","termLength","acc","segmentTerms","shortSegment","term","hashFunction","shajs","hashedInput","VersionUtils","version","targetVersion","v1","parseVersion","v2","v","DriverUtils","driver","buildOptions","urlDriverOptions","maxAliasLength","joiner","newAlias","shortenedAlias","url","type","firstSlashes","preBase","secondSlash","base","afterBase","lastAtSign","usernameAndPassword","hostAndPort","username","password","firstColon","host","port","afterQuestionMark","hostReplicaSet","replicaSet","optionsObject","optionsList","optionKey","optionValue","optionItem","connectionUrl","JoinAttribute","connection","queryExpressionMap","joinAttribute","select","column","relationOwnerSelection","aliasProperty","RelationIdAttribute","relationIdAttribute","parentAlias","relationProperty","RelationCountAttribute","expressionMap","relationCountAttribute","QueryExpressionMap","entityOrderBy","orderBy","aliasExpression","relationMetadata","join","relationId","relationCount","where","having","groupBy","cteOptions","Brackets","whereFactory","ApplyValueTransformers","transformer","databaseValue","transformedValue","_transformer","entityValue","FindOperator","useParameter","multipleParameters","getSql","objectLiteralParameters","In","ESCAPE_REGEXP","escapeRegExp","QueryBuilder","connectionOrQueryBuilder","queryRunner","selection","selectionAliasName","entityOrTableNameUpdateSet","maybeUpdateSet","updateSet","mainAlias","entityTargetOrPropertyPath","maybePropertyPath","entityTarget","parameters","parameterName","childMetadata","query","sql","comment","enabled","queryBuilder","tablePath","isSubquery","subQueryBuilder","subquery","statement","replacements","replaceAliasNamePrefix","allColumns","joinColumn","replacementKeys","replaceAliasNamePrefixes","matches","match","pre","p","conditionsArray","whereExpression","condition","returningType","columns","columnsExpression","columnName","clauses","clause","expression","alwaysWrap","databaseRequireRecusiveHint","cte","cteBodyExpression","cteHeader","escapedColumnNames","recursiveClause","materializeClause","ids","normalized","id","primaryColumn","qb","subQuery","propertyPathParts","part","joinAttr","fullRelationPath","aliasPropertyPath","prefix","paths","subPaths","joinColumns","primaryColumns","propertyPaths","containedWhere","aliasPath","parameterValue","operator","whereQueryBuilder","wheres","conditions","DeleteResult","queryResult","DeleteQueryBuilder","transactionStartedByUs","deleteResult","output","returning","tableName","returningExpression","getRandomValues","rnds8","rng","byteToHex","unsafeStringify","arr","randomUUID","native$1","v4","buf","native","rnds","BroadcasterResult","InsertResult","ReturningResultsEntityUpdator","updateResult","entities","entityIndex","newRaw","rawItem","rawItemIndex","returningColumns","updationColumns","entityId","loadedReturningColumns","insertResult","insertionColumns","needToCheckGenerated","generatedMaps","generatedMap","entityIds","returningResult","InsertQueryBuilder","valueSets","broadcastResult","valueSet","declareSql","selectOutputSql","returningResultsEntityUpdator","columnPath","insertSql","statementOrOverwrite","conflictTarget","orUpdateOptions","valuesExpression","overwrite","conflict","skipUpdateIfNoValuesChanged","indexPredicate","updatePart","valueSetIndex","columnIndex","uuidv4","paramName","geomFromText","insertionIndex","RelationUpdater","relationValue","ofs","of","ofIndex","junctionMetadata","firstColumnValues","secondColumnValues","bulkInserted","firstColumnVal","secondColumnVal","inserted","RelationRemover","valueIndex","firstColumnValIndex","secondColumnValIndex","RelationQueryBuilder","added","removed","results","OrmUtils","classesAndStrings","cls","propertyCallback","groupedArray","grouped","criteriaOrProperty","uniqueArray","item","found","itemValue","uniqueItem","memo","args","leftChain","rightChain","segments","len","props","recursiveChild","firstId","secondId","object","arr1","arr2","element","lists","otherLists","otherList","enumMatch","chars","currentQuotes","enumValues","idx","char","RawSqlResultsToEntityTransformer","rawRelationIdResults","rawRelationCountResults","rawResults","group","rawResult","keyValue","items","discriminatorValues","discriminatorMetadata","childEntityMetadata","hasColumns","hasRelations","hasRelationIds","hasRelationCounts","hasData","rawSqlResults","rawRelationIdResult","valueMap","idMaps","properties","mapToProperty","property","rawRelationCountResult","referenceColumnName","referenceColumnValue","rawSqlResult","relationIdRawResult","agg","idMap","entityPrimaryIds","RelationIdLoader$1","relationIdAttributes","rawEntities","promises","relationIdAttr","duplicates","rawEntity","duplicateParts","duplicatePart","duplicate","tableAlias","parameterParts","queryPart","inverseJoinColumns","junctionAlias","inverseSideTableName","inverseSideTableAlias","junctionTableName","mappedColumns","joinColumnConditions","mappedColumn","inverseJoinColumnCondition","RelationIdLoader","entityOrEntities","relatedEntityOrRelatedEntities","relatedEntities","entitiesOrEntities","relatedEntityOrEntities","isMany","relationIds","inverseColumns","entityRelationIds","relatedEntity","condition1","condition2","hasAllJoinColumnsInEntity","relationIdMaps","relationIdMap","entityColumnValue","relatedEntityColumnValue","joinColumnName","primaryColumnName","joinColumnIndex","RelationIdMetadataToAttributeTransformer","attribute","parentAliasName","RelationCountLoader","relationCountAttributes","onlyUnique","self","relationCountAttr","inverseRelation","inverseSideTable","inverseSidePropertyName","referenceColumnValues","joinTableColumnName","inverseJoinColumnName","firstJunctionColumn","secondJunctionColumn","vals","RelationCountMetadataToAttributeTransformer","FindOptionsUtils","possibleOptions","allRelations","matchedBaseRelations","regexp","relationAlias","relationName","relMetadata","addJoin","joinAlreadyAdded","addSelect","SelectQueryBuilder","findOptions","milliseconds","distinct","distinctOn","entityOrProperty","mapAsEntity","aliasNameOrOptions","queryBuilderFactory","timeTravelFn","sort","order","nulls","limit","take","skip","lockMode","lockVersion","lockTables","onLocked","entitiesAndRaw","cacheId","count","releaseFn","enabledOrMillisecondsOrId","maybeMilliseconds","option","direction","isMappingMany","joinAttributeMetadata","conditionDeleteColumn","isSubQuery","allSelects","excludedSelects","excludedSelect","useIndex","froms","selectDistinct","selectDistinctOn","maxExecutionTime","on","destinationTableName","destinationTableAlias","appendedCondition","destinationJoin","junctionCondition","destinationCondition","orderBys","orderValue","criteriaParts","orderAlias","lockTablesClause","onLockExpression","hasMainAlias","nonSelectedPrimaryColumns","finalSelects","escapedAliasName","selectionPath","selections","mainSelect","distinctAlias","countSql","relations","tableNames","relationIdLoader","relationCountLoader","selects","mainAliasName","querySelects","columnAlias","originalQuery","originalQueryTimeTravel","paramKey","paramKeyResult","queryStrategyRelationIdLoader","QueryStrategyRelationIdLoader","relationTarget","relatedEntityGroups","relatedEntityGroup","selectString","orderCriteria","orderByObject","queryId","cacheOptions","savedQueryResultCacheOptions","isCachingEnabled","cacheError","embedPrefix","embed","joinAlias","eagerRelation","eagerRelationJoinAlias","whereItem","andConditions","sqlOperator","UpdateResult","SoftDeleteQueryBuilder","entityIdMap","updateColumnAndValues","UpdateQueryBuilder","updateSql","statements","valuesSet","valuesSetNormalized","updatedColumns","registerQueryBuilders","MetadataTableType","m","w","ms","parse","fmtLong","fmtShort","n","msAbs","plural","isPlural","setup","env","createDebug","coerce","disable","enable","destroy","selectColor","namespace","prevTime","enableOverride","namespacesCache","enabledCache","debug","curr","format","formatter","extend","delimiter","newDebug","namespaces","split","toNamespace","common","formatArgs","save","load","useColors","localstorage","warned","module","lastC","r","process","define_process_env_default","formatters","useLoadModel","loadModel","loadModelFromHF","Bt","At","kt","Y","gt","Et","vt","St","bt","Pt","u","ht","_t","U.useRef","U.useEffect","Ot","wt","Gt","xt","Tt","D","S.useState","G","F","Z","S.useMemo","T","S.useCallback","B","A","q","S.useEffect","jt","n.createContext","Lt","n.forwardRef","Nt","X","lt","ut","dt","nt","n.useState","I","n.useCallback","n.useMemo","n.useRef","J","n.useImperativeHandle","n.useEffect","o","L","N","mt","C","E","Dt","Ht","et","Wt","pt","Rt","yt","Q","$","R","ot","rt","st","at","ct","It","it","Mt","n.createElement","tt","Ct","n.Fragment","InputOTP","React.forwardRef","className","containerClassName","ref","jsx","OTPInput","cn","InputOTPGroup","InputOTPSlot","hidden","inputOTPContext","React.useContext","OTPInputContext","hasFakeCaret","isActive","jsxs","Dot","InputOTPSeparator","SessionPassphraseDialog","onConfirm","onCancel","currentModal","useModal","useTranslation","setName","useState","handleChangeOTP","newValue","handleSubmit","handleHide","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","DialogFooter","Button","_arrayBufferFromHexString","hexString","_stringToArrayBuffer","_digestMessage","_arrayBufferToHexString","generatePassphrase","passphrase","getKeyFromPassphrase","getIvFromPassphrase","encryptSymmetric","keyHex","ivHex","messageBuffer","encryptedBuffer","encryptAes","decryptSymmetric","encryptedHex","decryptedBuffer","decryptAes","fileArrayBuffer","ivArrayBuffer","keyArrayBuffer","secretKey","encryptData","encryptedInfo","encrypted","passphraseConfirm","rawPassphrase","sessionPassphraseDialog","resolve","reject","passkey","secureSession","useModalRef","modalComponent","modal","modalRef","useRef","BasePromptValue","Serializable","StringPromptValue","HumanMessage","ChatPromptValue","fields","getBufferString","__classPrivateFieldSet","receiver","kind","__classPrivateFieldGet","uuid4","crypto","u8","randomByte","isAbortError","err","castToError","OpenAIError","APIError","status","headers","msg","errorResponse","APIConnectionError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","cause","LengthFinishReasonError","ContentFilterFinishReasonError","InvalidWebhookSignatureError","startsWithSchemeRegexp","isAbsoluteURL","isArray","isReadonlyArray","maybeObj","isEmptyObj","_k","isObj","validatePositiveInteger","safeJSON","text","sleep","VERSION","isRunningInBrowser","getDetectedPlatform","getPlatformProperties","detectedPlatform","normalizePlatform","normalizeArch","browserInfo","getBrowserInfo","browserPatterns","pattern","major","minor","patch","arch","platform","_platformHeaders","getPlatformHeaders","getDefaultFetch","makeReadableStream","ReadableStream","ReadableStreamFrom","iterable","iter","controller","done","ReadableStreamToAsyncIterable","reader","cancelPromise","CancelReadableStream","FallbackEncoder","body","default_format","default_formatter","RFC1738","has","hex_table","encode","_defaultEncoder","charset","_kind","string","$0","out","segment","is_buffer","maybe_map","fn","mapped","array_prefix_generators","push_to_array","value_or_array","toISOString","defaults","date","is_non_nullish_primitive","sentinel","inner_stringify","generateArrayPrefix","commaRoundTrip","allowEmptyArrays","strictNullHandling","skipNulls","encodeDotInKeys","encoder","filter","allowDots","serializeDate","encodeValuesOnly","sideChannel","tmp_sc","step","find_flag","pos","key_value","obj_keys","encoded_prefix","adjusted_prefix","encoded_key","key_prefix","valueSideChannel","normalize_stringify_options","opts","arrayFormat","stringify","joined","concatBytes","buffers","encodeUTF8_","encodeUTF8","decodeUTF8_","decodeUTF8","bytes","decoder","_LineDecoder_buffer","_LineDecoder_carriageReturnIndex","LineDecoder$1","binaryChunk","lines","patternIndex","findNewlineIndex","endIndex","line","LineDecoder","startIndex","findDoubleNewlineIndex","Stream$1","Stream","consumed","sse","_iterSSEMessages","readableStream","iterLines","lineDecoder","left","right","teeIterator","queue","ctrl","sseDecoder","SSEDecoder","sseChunk","iterSSEChunks","newData","SSEDecoder$1","fieldname","partition","levelNumbers","parseLogLevel","maybeLevel","sourceName","client","loggerFor","noop","makeLogFn","fnLevel","logger","logLevel","noopLogger","cachedLoggers","cachedLogger","levelLogger","formatRequestDetails","details","defaultParseResponse","requestLogID","retryOfRequestLogID","startTime","mediaType","json","addRequestID","_APIPromise_client","APIPromise","responsePromise","parseResponse","transform","onfulfilled","onrejected","onfinally","_AbstractPage_client","AbstractPage","nextOptions","page","request","Page","CursorPage","checkFileSupport","isOldNode","makeFile","fileBits","fileName","getName","isAsyncIterable","multipartFormRequestOptions","fetch","createForm","supportsFormDataMap","supportsFormData","fetchObject","cached","promise","FetchResponse","form","addFormValue","isNamedBlob","entry","isBlobLike","isFileLike","isResponseLike","toFile","blob","getBytes","parts","propsForError","APIResource$1","encodeURIPath","createPathTagFunction","pathEncoder","statics","params","postPath","previousValue","currentValue","pathOnly","invalidSegments","invalidSegmentPattern","lastEnd","underline","spaces","arrows","APIResource","completionID","isRunnableFunctionWithParse","isAssistantMessage","isToolMessage","_EventStream_instances","_EventStream_connectedPromise","_EventStream_resolveConnectedPromise","_EventStream_rejectConnectedPromise","_EventStream_endPromise","_EventStream_resolveEndPromise","_EventStream_rejectEndPromise","_EventStream_listeners","_EventStream_ended","_EventStream_errored","_EventStream_aborted","_EventStream_catchingPromiseCreated","_EventStream_handleError","EventStream","executor","event","listener","listeners","APIUserAbortError","openAIError","makeParseableResponseFormat","response_format","parser","isAutoParsableResponseFormat","isAutoParsableTool","tool","maybeParseChatCompletion","completion","hasAutoParseableInput","choice","parseChatCompletion","choices","toolCall","parseToolCall","parseResponseFormat","inputTool","shouldParseToolCall","validateInputTools","_AbstractChatCompletionRunner_instances","_AbstractChatCompletionRunner_getFinalContent","_AbstractChatCompletionRunner_getFinalMessage","_AbstractChatCompletionRunner_getFinalFunctionToolCall","_AbstractChatCompletionRunner_getFinalFunctionToolCallResult","_AbstractChatCompletionRunner_calculateTotalUsage","_AbstractChatCompletionRunner_validateParams","_AbstractChatCompletionRunner_stringifyFunctionCallResult","DEFAULT_MAX_CHAT_COMPLETIONS","AbstractChatCompletionRunner","chatCompletion","emit","tool_call","finalMessage","finalContent","finalFunctionCall","finalFunctionCallResult","signal","role","tool_choice","restParams","singleFunctionToCall","maxChatCompletions","inputTools","functionsByName","tool_call_id","parsed","rawContent","total","usage","ChatCompletionRunner","runner","STR","NUM","ARR","OBJ","NULL","BOOL","NAN","INFINITY","MINUS_INFINITY","INF","SPECIAL","ATOM","COLLECTION","ALL","Allow","PartialJSON","MalformedJSON","parseJSON","jsonString","allowPartial","_parseJSON","allow","markPartialJSON","throwMalformedError","parseAny","skipBlank","parseStr","parseObj","parseArr","parseNum","start","escape","partialParse","_ChatCompletionStream_instances","_ChatCompletionStream_params","_ChatCompletionStream_choiceEventStates","_ChatCompletionStream_currentChatCompletionSnapshot","_ChatCompletionStream_beginRequest","_ChatCompletionStream_getChoiceEventState","_ChatCompletionStream_addChunk","_ChatCompletionStream_emitToolCallDoneEvent","_ChatCompletionStream_emitContentDoneEvents","_ChatCompletionStream_endRequest","_ChatCompletionStream_getAutoParseableResponseFormat","_ChatCompletionStream_accumulateChatCompletion","ChatCompletionStream","chatId","choiceSnapshot","toolCallDelta","toolCallSnapshot","toolCallIndex","responseFormat","snapshot","finalizeChatCompletion","_b","_c","_d","delta","finish_reason","logprobs","other","refusal","function_call","tool_calls","pushQueue","readQueue","created","model","system_fingerprint","choiceRest","messageRest","toolRest","fnRest","ChatCompletionStreamingRunner","MessagesAPI.Messages","Completions","Messages","CompletionsAPI.Completions","Chat","brand_privateNullableHeaders","iterateHeaders","shouldClear","row","didClear","buildHeaders","newHeaders","targetHeaders","nullHeaders","seenHeaders","lowerName","TranscriptionsAPI.Transcriptions","TranslationsAPI.Translations","SpeechAPI.Speech","Audio","Transcriptions","Translations","Speech","batchID","Assistants","assistantID","Sessions","TranscriptionSessions","Realtime","SessionsAPI.Sessions","TranscriptionSessionsAPI.TranscriptionSessions","threadID","messageID","thread_id","Steps","stepID","run_id","runID","toFloat32Array","base64Str","binaryStr","readEnv","define_globalThis_process_env_default","_AssistantStream_instances","_AssistantStream_events","_AssistantStream_runStepSnapshots","_AssistantStream_messageSnapshots","_AssistantStream_messageSnapshot","_AssistantStream_finalRun","_AssistantStream_currentContentIndex","_AssistantStream_currentContent","_AssistantStream_currentToolCallIndex","_AssistantStream_currentToolCall","_AssistantStream_currentEvent","_AssistantStream_currentRunSnapshot","_AssistantStream_currentRunStepSnapshot","_AssistantStream_addEvent","_AssistantStream_endRequest","_AssistantStream_handleMessage","_AssistantStream_handleRunStep","_AssistantStream_handleEvent","_AssistantStream_accumulateRunStep","_AssistantStream_accumulateMessage","_AssistantStream_accumulateContent","_AssistantStream_handleRun","AssistantStream","runId","runs","run","thread","threadId","deltaValue","accValue","deltaEntry","accEntry","accumulatedMessage","newContent","snapshotContent","textDelta","currentContent","accumulatedRunStep","accumulated","contentElement","StepsAPI.Steps","include","sleepInterval","headerInterval","headerIntervalMs","Runs","Threads","RunsAPI.Runs","Beta","RealtimeAPI.Realtime","AssistantsAPI.Assistants","ThreadsAPI.Threads","Content","fileID","container_id","ContentAPI.Content","containerID","Files","Containers","FilesAPI.Files","hasUserProvidedEncodingFormat","encoding_format","embeddingBase64Obj","embeddingBase64Str","OutputItems","outputItemID","eval_id","OutputItemsAPI.OutputItems","evalID","Evals","pollInterval","maxWait","TERMINAL_STATES","file","APIConnectionTimeoutError","Methods","Alpha","GradersAPI.Graders","Graders","Permissions","fineTunedModelCheckpoint","permissionID","fine_tuned_model_checkpoint","PermissionsAPI.Permissions","Checkpoints","fineTuningJobID","Jobs","CheckpointsAPI.Checkpoints","FineTuning","MethodsAPI.Methods","JobsAPI.Jobs","AlphaAPI.Alpha","GraderModels","GraderModelsAPI.GraderModels","Images","Moderations","maybeParseResponse","parseTextFormat","addOutputText","getInputToolByName","input_tools","rsp","texts","_ResponseStream_instances","_ResponseStream_params","_ResponseStream_currentResponseSnapshot","_ResponseStream_finalResponse","_ResponseStream_beginRequest","_ResponseStream_addEvent","_ResponseStream_endRequest","_ResponseStream_accumulateResponse","ResponseStream","starting_after","maybeEmit","parsedResponse","finalizeResponse","InputItems","responseID","Responses","InputItemsAPI.InputItems","Parts","uploadID","Uploads","PartsAPI.Parts","allSettledWithThrow","rejected","FileBatches","vectorStoreID","vector_store_id","vectorStoreId","batch","files","fileIds","configuredConcurrency","concurrencyLimit","fileIterator","allFileIds","processFiles","fileObj","workers","fileResponse","fileInfo","VectorStores","FileBatchesAPI.FileBatches","_Webhooks_instances","_Webhooks_validateSecret","_Webhooks_getRequiredHeader","Webhooks","payload","secret","tolerance","headersObj","signatureHeader","timestamp","webhookId","timestampSeconds","nowSeconds","signatures","decodedSecret","signedPayload","signature","signatureBytes","_OpenAI_instances","_OpenAI_encoder","_OpenAI_baseURLOverridden","OpenAI$1","baseURL","apiKey","organization","project","webhookSecret","API.Completions","API.Chat","API.Embeddings","API.Files","API.Images","API.Audio","API.Moderations","API.Models","API.FineTuning","API.Graders","API.VectorStores","API.Webhooks","API.Beta","API.Batches","API.Uploads","API.Responses","API.Evals","API.Containers","Errors.OpenAIError","defaultLogLevel","Shims.getDefaultFetch","Opts.FallbackEncoder","qs.stringify","Errors.APIError","defaultBaseURL","defaultQuery","remainingRetries","optionsInput","retriesRemaining","maxRetries","req","timeout","retryLogStr","Errors.APIUserAbortError","headersTime","retryMessage","isTimeout","Errors.APIConnectionTimeoutError","Errors.APIConnectionError","specialHeaders","responseInfo","shouldRetry","Shims.CancelReadableStream","errText","errJSON","errMessage","Pagination.PagePromise","init","isReadableBody","fetchOptions","shouldRetryHeader","responseHeaders","timeoutMillis","retryAfterMillisHeader","timeoutMs","retryAfterHeader","timeoutSeconds","numRetries","sleepSeconds","jitter","inputOptions","retryCount","bodyHeaders","reqHeaders","idempotencyHeaders","rawHeaders","Shims.ReadableStreamFrom","OpenAI","Errors.NotFoundError","Errors.ConflictError","Errors.RateLimitError","Errors.BadRequestError","Errors.AuthenticationError","Errors.InternalServerError","Errors.PermissionDeniedError","Errors.UnprocessableEntityError","Errors.InvalidWebhookSignatureError","Uploads.toFile","Embeddings","Models","Batches","UploadsAPIUploads","$constructor","initializer","inst","def","Parent","Definition","$ZodAsyncError","globalConfig","config","newConfig","getEnumValues","entries","numericValues","jsonStringifyReplacer","captureStackTrace","_args","unwrapMessage","finalizeIssue","iss","ctx","full","util.jsonStringifyReplacer","$ZodRealError","_parse","_Err","schema","_ctx","_params","core.$ZodAsyncError","util.finalizeIssue","core.config","util.captureStackTrace","errors.$ZodRealError","$ZodRegistry","_meta","meta","pm","globalRegistry","JSONSchemaGenerator","formatMap","seen","overrideSchema","_json","minimum","maximum","patterns","contentEncoding","regexes","regex","multipleOf","exclusiveMaximum","exclusiveMinimum","shape","allKeys","requiredKeys","isSimpleIntersection","allOf","prefixItems","mime","inner","catchValue","innerType","isTransforming","makeURI","defsSegment","externalId","defUriPrefix","defId","extractToDef","ext","flattenRef","zodSchema","_cached","refSchema","defs","toJSONSchema","gen","external","_schema","HEX_CHARS","EXTRA","SHIFT","blocks","sharedMemory","notString","code","h0","h1","h2","h3","h4","dataView","hasLoggedWarning","insecureHash","getCacheKey","strings","BaseCache","keyEncoderFn","GLOBAL_MAP","InMemoryCache","prompt","llmKey","getModelNameForTiktoken","modelName","isOpenAITool","getVerbosity","BaseLangChain","Runnable","BaseLanguageModel","callbacks","callbackManager","cache","AsyncCaller","textContent","numTokens","encodingForModel","coerceMessageLikeToMessage","callOptions","_data","RunnablePassthrough","ensureConfig","generator","finalOutput","finalOutputSupported","concat","mapping","RunnableAssign","RunnableMap","_formatForTracing","messagesToTrace","messageToTrace","isURLContentBlock","isBase64ContentBlock","convertToOpenAIImageBlock","BaseChatModel","runnableConfig","promptValue","_messages","_options","_runManager","inheritableMetadata","callbackManager_","CallbackManager","extra","runManagers","generationChunk","llmOutput","isAIMessageChunk","runManager","providerName","parsedOptions","handledOptions","startedRunManagers","baseMessages","messageList","generations","llmOutputs","callbackHandlerPrefersStreaming","aggregated","pResult","generation","RUN_KEY","manager","llmStringKey","missingPromptIndices","cachedResults","baseMessage","promiseResult","isBaseMessage","isAIMessage","promptIndex","promptValues","promptMessages","outputSchema","description","getSchemaDescription","includeRaw","functionName","isInteropZodSchema","toJsonSchema","llm","outputParser","RunnableLambda","tc","parserAssign","parserNone","parsedWithFallback","RunnableSequence","BaseLLMOutputParser","_prompt","BaseOutputParser","OutputParserException","observation","sendToLLM","addLangChainErrorFields","BaseTransformOutputParser","inputGenerator","BaseCumulativeTransformOutputParser","prevParsed","accGen","chunkGen","isBaseMessageChunk","ChatGenerationChunk","convertToChunk","GenerationChunk","StructuredOutputParser","z.object","z.string","escapedJson","_match","capturedGroup","interopParseAsync","JsonOutputParser","prev","parseJsonMarkdown","rawToolCall","functionArgs","parsePartialJson","parsedToolCall","convertLangChainToolCallToOpenAI","makeInvalidToolCall","errorMsg","JsonOutputToolsParser","partial","toolCalls","parsedToolCalls","backwardsCompatibleToolCall","JsonOutputKeyToolsParser","zodParsedResult","interopSafeParseAsync","matchingResults","returnedValues","ignoreOverride","defaultOptions","getDefaultOptions","zodDef","getRefs","currentPath","addErrorMessage","res","errorMessage","refs","setResponseValueAndErrors","util","assertIs","_arg","assertNever","_x","validKeys","filtered","checker","joinValues","objectUtil","ZodError","issues","sub","subs","actualProto","_mapper","mapper","issue","fieldErrors","processError","formErrors","errorUtil","ZodFirstPartyTypeKind","parseAnyDef","parseArrayDef","parseDef","parseBigintDef","check","parseBooleanDef","parseBrandedDef","_def","parseCatchDef","parseDateDef","overrideDateStrategy","strategy","integerDateParser","parseDefaultDef","parseEffectsDef","forceResolution","parseEnumDef","isJsonSchema7AllOfType","parseIntersectionDef","unevaluatedProperties","mergedAllOf","nestedSchema","additionalProperties","parseLiteralDef","parsedType","emojiRegex","zodPatterns","parseStringDef","processPattern","escapeNonAlphaNumeric","addFormat","addPattern","processRegExp","regexOrFunction","flags","isEscaped","inCharGroup","inCharRange","regexTest","parseRecordDef","keyType","parseMapDef","parseNativeEnumDef","actualValues","parsedTypes","parseNeverDef","parseNullDef","primitiveMappings","parseUnionDef","asAnyOf","types","uniqueTypes","anyOf","parseNullableDef","parseNumberDef","decideAdditionalProperties","parseObjectDef","propName","propDef","parsedDef","parseOptionalDef","innerSchema","parsePipelineDef","parsePromiseDef","parseSetDef","parseTupleDef","parseUndefinedDef","parseUnknownDef","parseReadonlyDef","seenItem","overrideResult","seenSchema","get$ref","newItem","jsonSchema","selectParser","addMeta","getRelativePath","pathA","pathB","typeName","zodToJsonSchema","main","title","definitions","processedDefinitions","newDefinitions","combined","_zodToJsonSchema","zodResponseFormat","zodObject","getEndpoint","azureOpenAIApiDeploymentName","azureOpenAIApiInstanceName","azureOpenAIApiKey","azureOpenAIBasePath","azureADTokenProvider","azureOpenAIEndpoint","isStructuredTool","isRunnableToolLike","isStructuredToolParams","isLangChainTool","convertToOpenAIFunction","convertToOpenAITool","toolDef","lc_error_code","wrapOpenAIClientError","formatToOpenAIToolChoice","toolChoice","isAnyOfProp","formatFunctionDefinitions","functions","formatObjectProperties","indent","param","formatType","_convertToOpenAITool","formatToOpenAITool","extractGenericMessageCustomRole","messageToOpenAIRole","ChatMessage","completionsApiContentBlockConverter","parseBase64DataUrl","rawMimeType","mimeType","parseMimeType","_convertMessagesToOpenAIParams","isReasoningModel","isDataContentBlock","convertToProviderContentBlock","completionParam","audioMessage","_FUNCTION_CALL_IDS_MAP_KEY","_convertReasoningSummaryToOpenAIResponsesParams","reasoning","summary","last","_convertMessagesToOpenAIResponsesParams","zdrEnabled","lcMsg","additional_kwargs","toolMessage","oaiScreenshot","lcImage","reasoningItem","functionCallIds","toolOutputs","fallthroughCallTypes","fallthroughCalls","_convertOpenAIResponsesMessageToBaseMessage","messageId","invalid_tool_calls","response_metadata","fnAdapter","_convertOpenAIResponsesDeltaToBaseMessageChunk","generationInfo","usage_metadata","tool_call_chunks","AIMessageChunk","isBuiltInTool","isBuiltInToolChoice","_reduceChatOpenAIToolsForResponses","reducedTools","_convertChatOpenAIToolTypeToOpenAITool","ChatOpenAI","getEnvironmentVariable","kwargs","strict","resFormat","interopZodResponseFormat","formatted","streamOptionsConfig","rawResponse","rawToolCalls","invalidToolCalls","defaultRole","HumanMessageChunk","toolCallChunks","SystemMessageChunk","FunctionMessageChunk","ToolMessageChunk","ChatMessageChunk","streamIterable","messagesMapped","newTokenIndices","inputTokenDetails","outputTokenDetails","invocationParams","finalChunk","usesBuiltInTools","hasResponsesOnlyKwargs","usageMetadata","finalChunks","aKey","bKey","promptTokenUsage","completionTokenUsage","completionTokens","promptTokens","totalTokens","promptTokensDetails","completionTokensDetails","tokens","promptDefinitions","totalCount","tokensPerMessage","tokensPerName","countPerMessage","textCount","roleCount","nameCount","openAIMessage","requestOptions","openAIEndpointConfig","endpoint","OpenAIClient","isStructuredOutputMethodParams","outputFormatSchema","altParser","aiMessage","asJsonSchema","openAIFunctionDefinition","isZodSchemaV3","isZodSchemaV4","z4.toJSONSchema","z4.parse","auto","FormData","File","getMultipartRequestOptions","getDefaultAgent","fileFromPath","isFsReadStream","setShims","shims","MultipartBody","getRuntime","manuallyImported","recommendation","_fetch","_Request","_Response","_Headers","shims.kind","shims.setShims","auto.getRuntime","GroqError","iterMessages","readableStreamAsyncIterable","trailingNewline","isUploadable","isAsyncIterableIterator","getStringFromMaybeBuffer","isMultipartBody","APIClient","httpAgent","overriddenFetch","customHeaders","contentLength","minAgentTimeout","defaultHeaders","applyHeadersMut","shimsKind","getHeader","header","createResponseHeaders","PagePromise","lowerKey","action","isHeadersProtocol","lowerCasedHeader","intercapsHeader","_m","g1","g2","Core.multipartFormRequestOptions","batchId","fileId","Groq","Core.APIClient","Core.readEnv","Errors.GroqError","Core.isRunningInBrowser","Uploads.fileFromPath","CREATE_PARAMS_BASE_CALL_KEYS","ADDED_CALL_KEYS","ALL_CALL_KEYS","messageToGroqRole","convertMessagesToGroqParams","groqResponseToChatMessage","responseMetadata","_convertDeltaToMessageChunk","lastMessageId","groqMessageId","timing","xGroq","ChatGroq","toReturn","_formatToGroqToolChoice","tokenUsage","_choices","SchemaType","ExecutableCodeLanguage","Outcome","POSSIBLE_ROLES","HarmCategory","HarmBlockThreshold","HarmProbability","BlockReason","FinishReason","TaskType","FunctionCallingMode","DynamicRetrievalMode","GoogleGenerativeAIError","GoogleGenerativeAIResponseError","GoogleGenerativeAIFetchError","statusText","errorDetails","GoogleGenerativeAIRequestInputError","GoogleGenerativeAIAbortError","DEFAULT_BASE_URL","DEFAULT_API_VERSION","PACKAGE_VERSION","PACKAGE_LOG_HEADER","Task","RequestUrl","task","apiVersion","getClientHeaders","clientHeaders","getHeaders","headerName","headerValue","constructModelRequest","buildFetchOptions","makeModelRequest","fetchFn","makeRequest","handleResponseError","handleResponseNotOk","addHelpers","hadBadFinishReason","formatBlockErrorMessage","getText","getFunctionCalls","textStrings","functionCalls","badFinishReasons","candidate","firstCandidate","__await","__asyncGenerator","thisArg","_arguments","verb","resume","settle","fulfill","responseLineRE","processStream","inputStream","responseStream","getResponseStream","stream1","stream2","generateResponseSequence","getResponsePromise","allResponses","aggregateResponses","currentText","pump","responses","lastResponse","aggregatedResponse","candidateIndex","newPart","generateContentStream","generateContent","responseJson","formatSystemInstruction","formatNewContent","newParts","partOrString","assignRoleToPartsAndValidateSendMessageRequest","userContent","functionContent","hasUserContent","hasFunctionContent","formatCountTokensInput","modelParams","formattedGenerateContentRequest","containsGenerateContentRequest","formatGenerateContentInput","formattedRequest","formatEmbedContentInput","VALID_PART_FIELDS","VALID_PARTS_PER_ROLE","validateChatHistory","history","prevContent","currContent","countFields","validParts","isValidResponse","SILENT_ERROR","ChatSession","_requestOptions","_e","_f","generateContentRequest","chatSessionRequestOptions","finalResult","responseContent","blockErrorMessage","streamPromise","_ignored","streamResult","countTokens","singleRequestOptions","embedContent","batchEmbedContents","requestsWithModel","GenerativeModel","formattedParams","generativeModelRequestOptions","startChatParams","batchEmbedContentRequest","GoogleGenerativeAI","cachedContent","disallowedDuplicates","modelParamsComp","cachedContentComp","modelParamsFromCache","removeAdditionalProperties","newObj","schemaToGenerativeAIParameters","$schema","jsonSchemaToGeminiParameters","getMessageAuthor","convertAuthorToRole","author","messageContentMedia","inferToolNameFromPreviousMessages","previousMessages","_getStandardContentBlockConverter","isMultimodalModel","_convertLangChainContentToPart","dm","encoding","convertMessageContentToParts","messageName","messageParts","convertBaseMessagesToContent","convertSystemMessageToHumanContent","actualRole","mapGenerateContentResultToChatResult","candidateContent","fc","convertResponseContentToChatGenerationChunk","convertToGenerativeAITools","GoogleGenerativeAIToolsOutputParser","convertToolsToGenAI","genAITools","processTools","toolConfig","createToolConfig","functionDeclarationTools","convertedTool","functionDeclarations","convertOpenAIToolToGenAI","newTool","allowedFunctionNames","modeMap","ChatGoogleGenerativeAI","GenerativeAI","toolsAndConfig","actualPrompt","systemInstruction","genAIUsageMetadata","generationResult","outputTokenDiff","geminiFunctionDefinition","ZodParsedType","getParsedType","ZodIssueCode","quotelessJson","errorMap","overrideErrorMap","setErrorMap","getErrorMap","makeIssue","errorMaps","issueData","fullPath","fullIssue","maps","EMPTY_PATH","addIssueToContext","overrideMap","ParseStatus","arrayValue","INVALID","pairs","syncPairs","pair","finalObject","DIRTY","OK","isAborted","isDirty","isValid","isAsync","_ZodEnum_cache","_ZodNativeEnum_cache","ParseInputLazyPath","handleResult","processCreateParams","invalid_type_error","required_error","ZodType","maybeAsyncResult","getIssueProperties","setError","refinementData","refinement","ZodEffects","ZodOptional","ZodNullable","ZodArray","ZodPromise","ZodUnion","incoming","ZodIntersection","defaultValueFunc","ZodDefault","ZodBranded","catchValueFunc","ZodCatch","This","ZodPipeline","ZodReadonly","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","nanoidRegex","durationRegex","emailRegex","_emojiRegex","ipv4Regex","ipv6Regex","base64Regex","dateRegexSource","dateRegex","timeRegexSource","timeRegex","datetimeRegex","isValidIP","ip","ZodString","tooBig","tooSmall","validation","minLength","maxLength","min","max","floatSafeRemainder","valDecCount","stepDecCount","decCount","valInt","stepInt","ZodNumber","inclusive","ZodBigInt","ZodBoolean","ZodDate","minDate","maxDate","ZodSymbol","ZodUndefined","ZodNull","ZodAny","ZodUnknown","ZodNever","ZodVoid","deepPartialify","ZodObject","newShape","fieldSchema","ZodTuple","shapeKeys","extraKeys","keyValidator","unknownKeys","catchall","defaultError","augmentation","merging","mask","newField","createZodEnum","handleResults","unionErrors","childCtx","dirty","getDiscriminator","ZodLazy","ZodLiteral","ZodEnum","ZodNativeEnum","ZodDiscriminatedUnion","discriminator","discriminatorValue","optionsMap","mergeValues","aType","bType","sharedKeys","sharedValue","newArray","itemA","itemB","handleParsed","parsedLeft","parsedRight","merged","itemIndex","ZodRecord","valueType","third","ZodMap","finalMap","ZodSet","finalizeSet","elements","parsedSet","minSize","maxSize","ZodFunction","makeArgsIssue","makeReturnsIssue","returns","me","parsedArgs","parsedReturns","returnType","getter","expectedValues","newDef","opt","nativeEnumValues","promisified","effect","checkCtx","arg","processed","executeRefinement","preprocess","newCtx","ZodNaN","BRAND","inResult","freeze","custom","fatal","_fatal","p2","late","instanceOfType","stringType","numberType","nanType","bigIntType","booleanType","dateType","symbolType","undefinedType","nullType","anyType","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","intersectionType","tupleType","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","pipelineType","ostring","onumber","oboolean","NEVER","convertToTypeScriptInterface","generateInterfaceString","parentId","interfaceString","nestedItems","nestedItem","nestedInterface","convertToZodSchemaString","generateSchemaString","schemaString","convertToZodSchema","schemaObject","typeMap","nestedSchemaObject","useConfirmPassphrase","toast","useToast","currentSession","useSessionState","sessionPassphraseDialogRef","llmInvoke","schemaItems","useLangchainLLM","confirmPassphrase","searchRetrievalTool","useLLM","localLLM","langchainLLM","SvgSnowflake","React.createElement","SvgGemma","SvgPhi","SvgMeta","SvgMistral","qwenImage","smollmImage","stablelmImage","nomicImage","joshuaImage","deepseekImage","redpajamaImage","SvgOpenaiDark","SvgOpenaiLight","LLMIcon","theme","useAppState","OpenAIDarkIcon","OpenAILightIcon","GemmaIcon","PhiIcon","MetaIcon","MistralIcon","SnowflakeIcon","LazyIcon"],"mappings":"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","x_google_ignoreList":[0,2,3,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276]}