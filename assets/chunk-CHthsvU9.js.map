{"version":3,"mappings":"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","names":["FlowNodePlaceholderTypeEnum","FUNC_ERROR_TEXT","negate","predicate","args","getAllKeysIn","require$$3","object","props","arrayMap","prop","baseIteratee","path","value","pickBy_1","pickBy","require$$0","require$$1","require$$2","omitBy","omitBy_1","isUndefined_1","isUndefined","cc","names","out","i","tmp","k","noop","dispatch","n","_","t","Dispatch","parseTypenames","name","types","callback","T","typename","get","set","copy","that","type","c","namespaces","xhtml","namespace","prefix","creatorInherit","document","uri","creatorFixed","fullname","creator","none","selector","selection_select","select","groups","subgroups","m","j","group","subnode","node","Selection","array","x","selectorAll","arrayAll","selection_selectAll","parents","matcher","childMatcher","match","find","childFirst","selection_selectChild","childFind","filter","children","childrenFilter","subgroup","update","selection_enter","sparse","parent","datum","EnterNode","child","next","constant$3","enter","groupLength","dataLength","data","bindKey","exit","nodeByKeyValue","keyValue","keyValues","key","selection_data","bind","bindIndex","constant","arraylike","updateGroup","exitGroup","enterGroup","i0","i1","previous","selection_exit","selection_join","onupdate","onexit","onenter","selection","context","m0","groups0","m1","groups1","merges","group1","merge","group0","selection_order","selection_sort","compare","ascending","compareNode","a","b","sortgroup","sortgroups","selection_call","selection_nodes","selection_node","selection_size","size","selection_empty","attrRemove","attrRemoveNS","attrConstant","attrConstantNS","v","attrFunctionNS","selection_attr","attrFunction","defaultView","styleRemove","styleConstant","priority","styleFunction","selection_style","propertyRemove","propertyConstant","selection_property","propertyFunction","classArray","string","ClassList","classedAdd","list","classList","classedTrue","classedRemove","selection_classed","classedFunction","classedFalse","textRemove","textConstant","textFunction","selection_text","htmlRemove","htmlConstant","htmlFunction","selection_html","selection_raise","lower","selection_lower","selection_append","create","constantNull","selection_insert","before","remove","selection_remove","selection_cloneShallow","clone","selection_clone","selection_cloneDeep","selection_datum","contextListener","event","typenames","onRemove","on","o","onAdd","listener","options","selection_on","dispatchEvent","params","dispatchConstant","dispatchFunction","selection_dispatch","selection_iterator","selection_selection","selection_selectChildren","selection_filter","selection_merge","selection_each","sourceEvent","pointer","svg","point","nonpassive","nopropagation","noevent$1","root","view","noevent","nonpassivecapture","yesdrag","noclick","constant$2","DragEvent","subject","identifier","active","dx","target","dy","d","defaultFilter","touchable","defaultTouchable","gestures","listeners","mousedowny","mousemoving","touchending","clickDistance2","mousedowned","touchmoved","touchended","container","mouseupped","nodrag","gesture","mousemoved","touchstarted","touches","beforestart","p","touch","s","drag","p0","define","constructor","factory","prototype","definition","brighter","darker","reI","reP","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","reN","named","channels","color_formatHex","color_formatHex8","color_formatRgb","color_formatHsl","hslConvert","color","format","reHex","rgbn","l","rgba","hsla","Rgb","r","g","rgbConvert","Color","rgb","opacity","extend","clampi","clampa","rgb_formatHex","rgb_formatHex8","rgb_formatRgb","hex","h","Hsl","min","max","hsl","m2","hsl2rgb","clamph","clampt","constant$1","exponential","y","gamma","nogamma","linear","interpolateRgb","rgbGamma","start","end","colorRgb","interpolateNumber","reA","reB","interpolateString","bi","am","bm","bs","number","q","one","decompose","scaleX","scaleY","skewX","f","degrees","svgNode","parseCss","identity","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","rotate","scale","interpolateTransformCss","interpolateTransformSvg","parseSvg","epsilon2","cosh","sinh","tanh","zoom","uy0","w0","ux1","p1","uy1","w1","ux0","d2","S","rho","b0","rho4","rho2","d1","b1","r0","coshr0","u","_1","_2","_4","zoomRho","frame","timeout","interval","pokeDelay","taskTail","clockLast","clockNow","clockSkew","clock","setFrame","now","clearNow","Timer","timer","delay","time","sleep","timerFlush","taskHead","e","wake","poke","nap","t0","t2","t1","elapsed","emptyTween","CREATED","SCHEDULED","STARTING","RUNNING","ENDING","schedule","index","timing","schedules","id","emptyOn","init","STARTED","self","tween","ENDED","tick","stop","interrupt","empty","selection_interrupt","tweenRemove","tween0","tween1","tweenFunction","transition_tween","tweenValue","transition","interpolate","value1","string00","string1","string0","interpolate0","string10","transition_attr","attrInterpolate","attrTweenNS","attrInterpolateNS","transition_attrTween","attrTween","delayFunction","delayConstant","transition_delay","durationFunction","durationConstant","transition_duration","easeConstant","transition_ease","easeVarying","transition_easeVarying","transition_filter","transition_merge","Transition","onFunction","on0","on1","sit","transition_on","removeFunction","transition_select","inherit","transition_selection","styleNull","style","styleMaybeRemove","listener0","transition_style","styleInterpolate","styleTween","transition_styleTween","transition_text","textInterpolate","textTween","transition_textTween","transition_transition","id0","id1","newId","resolve","reject","cancel","transition_selectAll","selection_prototype","transition_remove","transition_end","easeCubicInOut","selection_transition","ZoomEvent","transform","Transform","location","defaultExtent","defaultTransform","defaultWheelDelta","defaultConstrain","dx0","translateExtent","extent","dy1","dx1","wheelDelta","duration","interpolateZoom","touchDelay","wheeled","dblclicked","collection","k1","centroid","constrain","w","clean","Gesture","scaleExtent","wheelidled","currentTarget","x0","dragDisable","y0","started","touchstarting","touchfirst","l1","dp","dl","l0","tapDistance","errorMessages","nodeType","sourceHandle","targetHandle","handleType","lib","elementSelectionKeys","ConnectionMode","PanOnScrollMode","SelectionMode","initialConnection","ConnectionLineType","MarkerType","Position","handleConnectionChange","cb","diff","connection","getConnectionStatus","isValid","isEdgeBase","element","isInternalNodeBase","getNodePositionWithOrigin","nodeOrigin","width","height","getNodeDimensions","origin","offsetX","offsetY","getNodesBounds","nodes","box","nodeOrId","isId","currentNode","nodeBox","nodeToBox","getBoundsOfBoxes","boxToRect","getInternalNodesBounds","nodeLookup","getNodesInside","rect","ty","tScale","paneRect","pointToRendererPoint","measured","selectable","excludeNonSelectableNodes","hidden","getOverlappingArea","nodeToRect","area","partiallyVisible","partially","overlappingArea","visibleNodes","getConnectedEdges","edges","nodeIds","edge","getFitViewNodes","fitViewNodes","optionNodeIds","fitView","panZoom","minZoom","bounds","maxZoom","viewport","calculateNodePosition","nodeId","nodeExtent","onError","parentX","parentNode","parentWidth","parentHeight","isCoordinateExtent","nextPosition","positionAbsolute","parentY","getElementsToRemove","nodesToRemove","onBeforeDelete","matchingNodes","isIncluded","parentHit","edgesToRemove","deletableEdges","matchingEdges","onBeforeDeleteResult","position","dimensions","clamp","clampPositionToParent","childPosition","childDimensions","clampPosition","calcAutoPanVelocity","calcAutoPan","pos","speed","distance","yMovement","xMovement","box1","box2","rectToBox","y2","x2","getBoundsOfRects","rect1","rect2","rectA","xOverlap","rectB","yOverlap","isRectObject","obj","isNumeric","devWarn","snapPosition","snapGrid","tx","snapToGrid","rendererPointToPoint","getViewportForBounds","padding","xZoom","yZoom","clampedZoom","boundsCenterX","boundsCenterY","isMacOs","nodeHasDimensions","evaluateAbsolutePosition","parentId","getPointerPosition","containerBounds","ySnapped","pointerPos","xSnapped","getDimensions","getHostForElement","isInputDOMNode","inputTags","isMouseEvent","getEventPosition","evtX","evtY","getHandleBounds","nodeBounds","handles","handleBounds","handle","getBezierEdgeCenter","sourceX","sourceY","targetX","targetY","sourceControlY","targetControlY","sourceControlX","centerY","centerX","curvature","getControlWithCurvature","x1","calculateControlOffset","y1","sourcePosition","targetControlX","targetPosition","labelX","getEdgeCenter","xOffset","yOffset","getElevatedEdgeZIndex","selected","zIndex","selectedZIndex","sourceNode","targetNode","edgeOrConnectedNodeSelected","isEdgeVisible","edgeBox","viewRect","getEdgeId","source","connectionExists","el","addEdge","getStraightPath","getDirection","getPoints","center","offset","sourceDir","handleDirections","sourceGapped","targetGapped","targetDir","dir","dirAccessor","currDir","points","sourceGapOffset","defaultCenterY","verticalSplit","horizontalSplit","targetSource","gapOffset","targetGapOffset","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","sourceTarget","targetGapPoint","maxXDistance","sourceGapPoint","maxYDistance","defaultOffsetX","getBend","bendSize","xDir","yDir","getSmoothStepPath","borderRadius","labelY","res","segment","isNodeInitialized","getEdgePosition","sourceHandleBounds","toHandleBounds","getHandle$1","targetHandleBounds","getHandlePosition","marker","defaultColor","defaultMarkerEnd","ids","markers","defaultMarkerStart","markerId","getMarkerId","defaultOptions","infiniteExtent","result","incoming","updateAbsolutePositions","parentLookup","_options","positionWithOrigin","clampedPosition","adoptUserNodesDefaultOptions","tmpLookup","userNode","internalNode","selectedNodeZ","updateChildNode","updateParentLookup","elevateNodesOnSelect","mergeObjects","z","calculateChildXYZ","positionChanged","calculateZ","childNode","absolutePosition","childZ","parentZ","handleExpandParent","changes","parentExpansions","expandedRect","yChange","newWidth","newHeight","widthChange","heightChange","xChange","updates","domNode","updatedInternals","viewportNode","parentExpandChildren","dimensionChanged","parentExpandChanges","panBy","delta","nextViewport","transformChanged","connectionLookup","prevTarget","sourceKey","prevSource","targetKey","isParentSelected","hasSelector","current","getDragItems","dragItems","mousePos","getEventHandlerParams","nodesFromDragItems","dragItem","dragging","getStoreItems","onDragStart","lastPos","autoPanId","mousePosition","dragStarted","d3Selection","abortDrag","noDragClassName","isSelectable","nodeClickDistance","updateNodes","dragEvent","onSelectionDrag","updateNodePositions","hasChange","nodesBox","adjustedNodeExtent","onDrag","currentNodes","onNodeDrag","autoPan","multiSelectionActive","selectNodesOnDrag","onNodeDragStart","onSelectionDragStart","unselectNodesAndEdges","nodesDraggable","d3DragInstance","nodeDragThreshold","startDrag","autoPanOnNodeDrag","autoPanStarted","onSelectionDragStop","onDragStop","handleSelector","destroy","getNodesWithinDistance","ADDITIONAL_DISTANCE","connectionRadius","fromHandle","minDistance","closeNodes","allHandles","closestHandles","getHandle","withAbsolutePosition","handleId","edgeUpdaterType","handleDomNode","isConnectionValid","isHandleValid","isInsideConnectionRadius","alwaysValid","onPointerDown","autoPanOnConnect","flowId","cancelConnection","onConnectStart","onConnect","updateConnection","getTransform","getFromHandle","autoPanSpeed","closestHandle","clickedHandle","getHandleType","fromHandleInternal","connectionMode","fromNodeInternal","newConnection","oppositePosition","previousConnection","onPointerMove","onPointerUp","getClosestHandle","isValidHandle","doc","inProgress","finalConnectionState","connectionState","onConnectEnd","onReconnectEnd","fromNodeId","fromHandleId","isValidConnection","isTarget","fromType","handleBelow","handleToCheck","handleNodeId","connectable","connectableEnd","XYMinimap","getViewScale","zoomStep","pannable","zoomable","nextZoom","pinchDelta","panStart","panStartHandler","panCurrent","panDelta","moveScale","zoomAndPanHandler","panHandler","zoomHandler","viewChanged","eventViewport","prevViewport","transformToViewport","zoomIdentity","isWrappedWithClass","className","panOnDrag","usedButton","getD3Transition","hasDuration","onEnd","d3Zoom","panOnScrollMode","panOnScrollSpeed","zoomOnPinch","onPanZoomStart","onPanZoom","onPanZoomEnd","noWheelClassName","currentZoom","deltaNormalize","deltaX","deltaY","zoomPanValues","preventScrolling","d3ZoomHandler","createPanZoomStartHandler","onDraggingChange","createPanZoomHandler","onPaneContextMenu","onTransformChange","isRightClickPan","createFilter","zoomOnDoubleClick","userSelectionActive","zoomScroll","zoomActivationKeyPressed","zoomOnScroll","panOnScroll","noPanClassName","buttonAllowed","XYPanZoom","bbox","paneClickDistance","setViewportConstrained","d3DblClickZoomHandler","d3ZoomInstance","createPanOnScrollHandler","createZoomOnScrollHandler","panZoomHandler","panZoomEndHandler","createPanZoomEndHandler","viewportToTransform","contrainedTransform","nextTransform","setTransform","currentTransform","getViewport","scaleTo","scaleBy","factor","setScaleExtent","setTranslateExtent","setClickDistance","validDistance","setViewport","ResizeControlVariant","getResizeDirection","affectsX","deltaHeight","prevHeight","direction","deltaWidth","affectsY","getControlDirection","controlPosition","isVertical","isHorizontal","lowerBound","getUpperExtentClamp","upperExtent","upperBound","maxSize","getDimensionsAfterResize","startValues","controlDirection","pointerPosition","keepAspectRatio","isDiagonal","minWidth","maxWidth","minHeight","startHeight","aspectRatio","distX","originOffsetX","startWidth","originOffsetY","clampX","getSizeClamp","maxHeight","getLowerExtentClamp","startX","distY","yExtentClamp","startY","clampY","childExtent","xExtentClamp","aspectHeightClamp","aspectExtentClamp","aspectWidthClamp","initPrevValues","initStartValues","nodeToParentExtent","nodeToChildExtent","XYResizer","onChange","onResizeStart","shouldResize","childNodes","parentExtent","dragHandler","paneDomNode","prevValues","childId","storeNodeOrigin","childChanges","prevX","prevY","prevWidth","boundaries","isWidthChange","isHeightChange","isXPosChange","isYPosChange","change","xLimit","yLimit","onResize","nextValues","onResizeEnd","createStoreImpl","state","setState","partial","replace","nextState","previousState","getState","__vite_import_meta_env__","initialState","api","createState","useDebugValue","ReactExports","useSyncExternalStoreWithSelector","useSyncExternalStoreExports","arg","useStoreWithEqualityFn","equalityFn","slice","createWithEqualityFnImpl","createStore","useBoundStoreWithEqualityFn","defaultEqualityFn","createWithEqualityFn","shallow$1","objA","objB","keysA","keyA","StoreContext","createContext","Provider$1","zustandErrorMessage","useStore","store","useContext","useMemo","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$o","jsx","ariaLiveStyle","ariaLiveMessage","A11yDescriptions","rfId","disableKeyboardA11y","jsxs","Fragment","AriaLiveMessage","rest","pointerEvents","positionClasses","Attribution","Panel","selector$m","selectedEdges","selectedNodes","selectId","shallow","SelectionListenerInner","areEqual","useEffect","fn","onSelectionChange","SelectionListener","storeHasSelectionChangeHandlers","changeSelector","defaultNodeOrigin","defaultViewport","fieldsToTrack","reactFlowFieldsToTrack","selector$l","StoreUpdater","setNodes","setEdges","setMinZoom","reset","setDefaultNodesAndEdges","setPaneClickDistance","useRef","fieldName","fieldValue","previousFieldValue","previousFields","setMaxZoom","getMediaQuery","useColorModeClass","colorMode","useState","updateColorModeClass","mediaQuery","keyCodes","keysFlat","keys","item","keyCode","defaultDoc","downHandler","modifierPressed","keyOrCode","pressedKeys","isMatchingKey","setKeyPressed","resetHandler","keyPressed","isUp","useKeyOrCode","eventCode","keysToWatch","useViewportHelper","useStoreApi","tZoom","tX","tY","clientPosition","domX","correctedPosition","flowPosition","rendererPosition","updatedElements","changesMap","addItemChanges","elementChanges","elements","updatedElement","applyChange","applyNodeChanges","applyChanges","createSelectionChange","getSelectionChanges","items","selectedIds","mutateItem","willBeSelected","lookup","itemsLookup","lookupItem","storeItem","isNode","isEdge","forwardRef","useIsomorphicLayoutEffect","useLayoutEffect","useQueue","serial","createQueue","setSerial","queueItems","queue","runQueue","BatchProvider","useCallback","onNodesChange","payload","getElementsDiffChanges","nodeQueueHandler","edgeQueueHandler","hasDefaultEdges","onEdgesChange","edgeQueue","nodeQueue","batchContext","BatchContext","selector$k","useReactFlow","viewportHelper","useBatchContext","generalHelper","getNodeRect","nodeToUse","nodeUpdate","prevNodes","nextNode","updateEdge","prevEdges","edgeUpdate","nextEdge","getInternalNode","newNodes","newEdges","onEdgesDelete","triggerNodeChanges","triggerEdgeChanges","onDelete","hasMatchingEdges","hasMatchingNodes","elementToRemoveChange","edgeChanges","nodeChanges","nodeOrRect","isRect","nodeRect","hasNodesOption","currNodeRect","updateNode","dataUpdate","nextData","viewportInitialized","useGlobalKeyHandler","deleteKeyCode","deleteKeyPressed","useKeyPress","deleteKeyOptions","multiSelectionKeyPressed","deleteElements","useResizeHandler","updateDimensions","resizeObserver","containerStyle","ZoomPane","zoomActivationKeyCode","zoomPane","selector$j","onViewportChange","isControlledViewport","vp","onMoveStart","onViewportChangeStart","onMove","onViewportChangeEnd","onMoveEnd","selector$i","userSelectionRect","containerRef","handler","selector$h","isSelecting","selectionMode","onSelectionEnd","onPaneClick","onPaneMouseMove","prevSelectedNodesCount","prevSelectedEdgesCount","edgeIdLookup","hasActiveSelection","onClick","onWheel","onPaneScroll","edgeLookup","elementsSelectable","resetSelectedElements","selectionInProgress","nextUserSelectRect","mouseX","mouseY","selectedEdgeIds","selectedNodeIds","selectedNode","edgeIds","edgeId","resetUserSelection","selectionKeyPressed","selectionOnDrag","draggable","wrapHandler","onContextMenu","onPaneMouseEnter","handleNodeClick","unselect","addSelectedNodes","nodeRef","useDrag","xyDrag","setDragging","useMoveSelectedNodes","nodeUpdates","xVelo","yVelo","xDiff","yDiff","NodeIdContext","useNodeId","connectingSelector","toHandle","connectingTo","HandleComponent","isConnectable","onMouseDown","onTouchStart","connectOnClick","isPossibleEndHandle","onConnectAction","edgeParams","isMouseTriggered","isConnectableStart","XYHandle","currentStore","onConnectExtended","connectionClickStartHandle","isValidConnectionStore","onClickConnectStart","isValidConnectionHandler","connectionClone","onClickConnectEnd","isConnectableEnd","clickConnecting","connectingFrom","Handle","fixedForwardRef","InputNode","DefaultNode","OutputNode","arrowKeyDiffs","builtinNodeTypes","selector$f","transformString","moveSelectedNodes","onSelectionContextMenu","win","FlowRendererComponent","onPaneMouseLeave","onSelectionStart","multiSelectionKeyCode","_panOnScroll","_panOnDrag","nodesSelectionActive","selectionKeyCode","Pane","memo","onlyRenderVisible","selector$c","entries","entry","updateNodeInternals","isInitialized","observedNode","prevType","onMouseLeave","internals","isParent","NodeComponent","nodeTypes","nodesConnectable","nodesFocusable","hasDimensions","useNodeObserver","nodeDimensions","inlineDimensions","getNodeInlineStyleDimensions","isDraggable","onMouseEnter","onMouseEnterHandler","onMouseMove","onDoubleClickHandler","onDoubleClick","onMouseMoveHandler","onMouseLeaveHandler","onSelectNodeHandler","isFocusable","ARIA_NODE_DESC_KEY","Provider","NodeRendererComponent","selector$b","NodeRenderer","useVisibleEdgeIds","visibleEdgeIds","strokeWidth","ArrowSymbol","MarkerSymbols","Symbol","useMarkerSymbol","orient","MarkerDefinitions","defaultEdgeOptions","createMarkerIds","Marker","MarkerDefinitions$1","EdgeTextComponent","label","labelStyle","labelBgStyle","edgeTextBbox","setEdgeTextBbox","edgeTextClasses","textBbox","edgeTextRef","labelBgPadding","labelBgBorderRadius","EdgeText","BaseEdge","markerEnd","markerStart","interactionWidth","getSimpleBezierPath","getControl","createSimpleBezierEdge","labelShowBg","_id","SimpleBezierEdge","SimpleBezierEdgeInternal","createSmoothStepEdge","pathOptions","SmoothStepEdge","SmoothStepEdgeInternal","createStepEdge","StepEdgeInternal","createStraightEdge","StraightEdgeInternal","StraightEdge","createBezierEdge","BezierEdge","BezierEdgeInternal","builtinEdgeTypes","nullPosition","shiftX","shiftY","shift","EdgeUpdaterClassName","EdgeAnchor","radius","onMouseOut","EdgeUpdateAnchors","isReconnectable","onReconnect","onReconnectStart","setUpdateHover","handleEdgeUpdater","setReconnecting","oppositeHandle","onConnectEdge","_onReconnectEnd","onReconnectTargetMouseDown","onReconnectMouseEnter","reconnectRadius","onReconnectSourceMouseDown","onReconnectMouseOut","edgesFocusable","edgesReconnectable","edgeType","EdgeComponent","updateHover","edgePosition","markerStartUrl","markerEndUrl","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseLeave","edgeRef","onEdgeClick","onEdgeDoubleClick","onEdgeMouseMove","reconnecting","selector$a","defaultMarkerColor","onlyRenderVisibleElements","EdgeWrapper","edgeTypes","EdgeRendererComponent","rfInstance","useViewportSync","selector$8","syncViewport","connectionSelector","storeSelector$1","useConnection","getSelector","combinedSelector","ConnectionLineWrapper","selector$7","ConnectionLine","CustomComponent","fromNode","toNode","from","toPosition","fromPosition","getBezierPath","pathParams","useNodeOrEdgeTypesWarning","emptyTypes","nodeOrEdgeTypes","onNodeClick","onNodeDoubleClick","onNodeContextMenu","connectionLineType","connectionLineStyle","useStylesLoadedWarning","useOnInitHandler","panActivationKeyCode","Viewport","EdgeRenderer","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","GraphView","getInitialState","defaultNodes","defaultEdges","storeEdges","storeNodes","fitView$1","fitViewDone","fitViewSync","fitViewOnInit","nextFitViewDone","fitViewOnInitOptions","debug","hasDefaultNodes","updatedEdges","applyEdgeChanges","nextNodeExtent","ReactFlowProvider","wrapperStyle","onInit","connectionLineComponent","defaultViewport$1","fitViewOptions","attributionPosition","elevateEdgesOnSelect","Wrapper","onNodesDelete","selector$5","useHandleConnections","_nodeId","prevConnections","connections","_connections","useInternalNode","variant","BackgroundVariant","selector$3","lineWidth","defaultSize","isCross","gap","gapXY","patternDimensions","bgColor","ref","_patternId","scaledGap","scaledOffset","isDots","patternClassName","LinePattern","Background","PlusIcon","MinusIcon","FitViewIcon","LockIcon","UnlockIcon","ControlButton","selector$2","showZoom","showFitView","onZoomIn","onZoomOut","onFitView","onInteractiveChange","ariaLabel","isInteractive","minZoomReached","zoomIn","onZoomInHandler","zoomOut","onToggleInteractivity","orientationClass","orientation","maxZoomReached","onZoomOutHandler","onFitViewHandler","ControlsComponent","Controls","MiniMapNodeComponent","shapeRendering","background","fill","strokeColor","selectorNodeIds","func","nodeClassName","nodeBorderRadius","nodeStrokeWidth","nodeColor","nodeStrokeColorFunc","NodeComponentWrapper","nodeColorFunc","NodeComponentWrapperInner","nodeClassNameFunc","MiniMapNodes$1","MiniMapNodes","viewBB","nodeStrokeColor","nodeComponent","maskStrokeColor","maskStrokeWidth","inversePan","flowWidth","flowHeight","selector$1","elementWidth","defaultWidth","elementHeight","defaultHeight","boundingRect","scaledWidth","offsetScale","viewScale","viewWidth","viewHeight","minimapInstance","viewScaleRef","onSvgClick","onSvgNodeClick","maskColor","labelledBy","MiniMapComponent","contextNodeId","defaultPosition","positionChange","dimensionChange","childChange","resizer","positionClassNames","colorStyleProp","resizeControlRef","controlStyle","NodeResizeControl","ResizeControl","NodeResizer","isVisible","handleStyle","lineStyle","XY_RESIZER_LINE_POSITIONS","lineClassName","handleClassName","isMergeableObject","isNonNullObject","stringValue","canUseSymbol","REACT_ELEMENT_TYPE","emptyTarget","val","cloneUnlessOtherwiseSpecified","defaultArrayMerge","getMergeFunction","customMerge","deepmerge","getEnumerableOwnPropertySymbols","getKeys","propertyIsOnObject","property","propertyIsUnsafe","mergeObject","destination","targetIsArray","sourceAndTargetTypesMatch","sourceIsArray","prev","deepmerge_1","cjs","flowNodeToNode","flowEdgeToEdge","nodeFlowToEdge","filterUserConnections","flowNodesToNodeChanges","flowNodes","flowNodeSources","newIds","oldNode","newNode","flowEdgesToEdgeChanges","flowEdges","deletedIds","old","currentEdges","updatedIds","SESSION_INFO_SIZE","SYSTEM_NODE_IDS","FlowNodeTypeEnum","SESSION_INFO_NODE","EMBEDDING_MODEL","TOOLBOX_NODE_SIZE","DEFAULT_EMBEDDING_MODEL","APPLICATION_BAR_MODEL","DEFAULT_SYSTEM_NODES","TOOLBOX_NODE","DISABLED_DELETE_NODE_TYPES","defaultFlowState","query","getRepository","all","flowNodeDatas","entityGroups","entityName","In","groupNodes","getFlowStateActions","timestamps","syncNodeQueue","timestamp","syncEdgeQueue","syncType","option","findFlowNodesWithSource","currentFlowNodes","currentflowEdges","error","currentEdge","logWarn","inputNode","newFlowNodes","currentSession","useSessionState","flowNode","nanoid","currentNodeData","inputEdge","BasePromptTemplate","inputVariables","userVariables","partialVariables","partialValues","input","tags","metadata","PromptTemplate","__vitePreload","prompt","FewShotPromptTemplate","BaseStringPromptTemplate","values","StringPromptValue","objectToString","isFunction","typeStr","escapeRegExp","propName","primitiveHasOwnProperty","primitive","regExpTest","re","nonSpaceRe","isWhitespace","testRegExp","escapeHtml","entityMap","equalsRe","curlyRe","tagRe","parseTemplate","template","lineHasNonSpace","sections","hasTag","nonSpace","indentation","stripSpace","spaces","openingTagRe","closingCurlyRe","tagsToCompile","spaceRe","closingTagRe","Scanner","token","openSection","scanner","chr","tokens","tagIndex","whiteRe","squashedTokens","numTokens","lastToken","nestedTokens","collector","section","Writer","partials","config","indentedValue","mustache","escape","isArray","cache","defaultWriter","configureMustache","parseFString","chars","bracket","nextBracket","text","mustacheTemplateToNodes","temp","parseMustache","parsed","interpolateFString","interpolateMustache","renderTemplate","templateFormat","inputValues","DEFAULT_FORMATTER_MAPPING","addLangChainErrorFields","DEFAULT_PARSER_MAPPING","checkValidTemplate","validFormats","acc","message","dummyInputs","imageUrl","exampleSeparator","newInputVariables","iv","promptDict","OpenAIEmbeddings","Embeddings","fieldsWithDefaults","getEnvironmentVariable","apiKey","batches","chunkArray","batchRequests","batch","embeddings","batchResponse","request","endpoint","getEndpoint","OpenAIClient","requestOptions","wrapOpenAIClientError","GoogleGenerativeAIEmbeddings","fields","GoogleGenerativeAI","req","documents","batchEmbedChunks","chunk","useLangchainEmbedding","confirmPassphrase","embeddingNode","provider","encrypted","passphrase","secureSession","LLMProviderEnum","useEmbedding","indexLocalEmbedding","useLocalEmbeddingState","similaritySearchWithScoreLocalEmbedding","getEmbedding","embbedingEntity","setLoading","info","embedding","loading","similaritySearchWithScore","MarkdownPreview","MarkdownViewer","theme","components","Suspense","cn","prevProps","nextProps","Card","CardHeader","React.forwardRef","CardTitle","CardDescription","CardContent","CardFooter","LLMSetting","setShow","setOptions","handleOpenChange","show","LazyIcon","Label","PopoverContent","Input","pre","hanleSubmit","badgeVariants","LLMInfo","cloud","model","isCached","useTranslation","modelTypeToString","modelTypeBadges","Badge","isFunctionCalling","splitter","docs","WebPDFLoader","BaseDocumentLoader","blob","splitPages","parsedItemSeparator","pdfjs","parsedPdf","getDocument","content","textItems","lastY"],"ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,116,117,118,119,120,121,122,131,132],"sources":["../../src/services/database/types/flow-node-placeholder.ts","../../node_modules/lodash/negate.js","../../node_modules/lodash/pickBy.js","../../node_modules/lodash/omitBy.js","../../node_modules/lodash/isUndefined.js","../../node_modules/classcat/index.js","../../node_modules/d3-dispatch/src/dispatch.js","../../node_modules/d3-selection/src/namespaces.js","../../node_modules/d3-selection/src/namespace.js","../../node_modules/d3-selection/src/creator.js","../../node_modules/d3-selection/src/selector.js","../../node_modules/d3-selection/src/selection/select.js","../../node_modules/d3-selection/src/array.js","../../node_modules/d3-selection/src/selectorAll.js","../../node_modules/d3-selection/src/selection/selectAll.js","../../node_modules/d3-selection/src/matcher.js","../../node_modules/d3-selection/src/selection/selectChild.js","../../node_modules/d3-selection/src/selection/selectChildren.js","../../node_modules/d3-selection/src/selection/filter.js","../../node_modules/d3-selection/src/selection/sparse.js","../../node_modules/d3-selection/src/selection/enter.js","../../node_modules/d3-selection/src/constant.js","../../node_modules/d3-selection/src/selection/data.js","../../node_modules/d3-selection/src/selection/exit.js","../../node_modules/d3-selection/src/selection/join.js","../../node_modules/d3-selection/src/selection/merge.js","../../node_modules/d3-selection/src/selection/order.js","../../node_modules/d3-selection/src/selection/sort.js","../../node_modules/d3-selection/src/selection/call.js","../../node_modules/d3-selection/src/selection/nodes.js","../../node_modules/d3-selection/src/selection/node.js","../../node_modules/d3-selection/src/selection/size.js","../../node_modules/d3-selection/src/selection/empty.js","../../node_modules/d3-selection/src/selection/each.js","../../node_modules/d3-selection/src/selection/attr.js","../../node_modules/d3-selection/src/window.js","../../node_modules/d3-selection/src/selection/style.js","../../node_modules/d3-selection/src/selection/property.js","../../node_modules/d3-selection/src/selection/classed.js","../../node_modules/d3-selection/src/selection/text.js","../../node_modules/d3-selection/src/selection/html.js","../../node_modules/d3-selection/src/selection/raise.js","../../node_modules/d3-selection/src/selection/lower.js","../../node_modules/d3-selection/src/selection/append.js","../../node_modules/d3-selection/src/selection/insert.js","../../node_modules/d3-selection/src/selection/remove.js","../../node_modules/d3-selection/src/selection/clone.js","../../node_modules/d3-selection/src/selection/datum.js","../../node_modules/d3-selection/src/selection/on.js","../../node_modules/d3-selection/src/selection/dispatch.js","../../node_modules/d3-selection/src/selection/iterator.js","../../node_modules/d3-selection/src/selection/index.js","../../node_modules/d3-selection/src/select.js","../../node_modules/d3-selection/src/sourceEvent.js","../../node_modules/d3-selection/src/pointer.js","../../node_modules/d3-drag/src/noevent.js","../../node_modules/d3-drag/src/nodrag.js","../../node_modules/d3-drag/src/constant.js","../../node_modules/d3-drag/src/event.js","../../node_modules/d3-drag/src/drag.js","../../node_modules/d3-color/src/define.js","../../node_modules/d3-color/src/color.js","../../node_modules/d3-interpolate/src/constant.js","../../node_modules/d3-interpolate/src/color.js","../../node_modules/d3-interpolate/src/rgb.js","../../node_modules/d3-interpolate/src/number.js","../../node_modules/d3-interpolate/src/string.js","../../node_modules/d3-interpolate/src/transform/decompose.js","../../node_modules/d3-interpolate/src/transform/parse.js","../../node_modules/d3-interpolate/src/transform/index.js","../../node_modules/d3-interpolate/src/zoom.js","../../node_modules/d3-timer/src/timer.js","../../node_modules/d3-timer/src/timeout.js","../../node_modules/d3-transition/src/transition/schedule.js","../../node_modules/d3-transition/src/interrupt.js","../../node_modules/d3-transition/src/selection/interrupt.js","../../node_modules/d3-transition/src/transition/tween.js","../../node_modules/d3-transition/src/transition/interpolate.js","../../node_modules/d3-transition/src/transition/attr.js","../../node_modules/d3-transition/src/transition/attrTween.js","../../node_modules/d3-transition/src/transition/delay.js","../../node_modules/d3-transition/src/transition/duration.js","../../node_modules/d3-transition/src/transition/ease.js","../../node_modules/d3-transition/src/transition/easeVarying.js","../../node_modules/d3-transition/src/transition/filter.js","../../node_modules/d3-transition/src/transition/merge.js","../../node_modules/d3-transition/src/transition/on.js","../../node_modules/d3-transition/src/transition/remove.js","../../node_modules/d3-transition/src/transition/select.js","../../node_modules/d3-transition/src/transition/selectAll.js","../../node_modules/d3-transition/src/transition/selection.js","../../node_modules/d3-transition/src/transition/style.js","../../node_modules/d3-transition/src/transition/styleTween.js","../../node_modules/d3-transition/src/transition/text.js","../../node_modules/d3-transition/src/transition/textTween.js","../../node_modules/d3-transition/src/transition/transition.js","../../node_modules/d3-transition/src/transition/end.js","../../node_modules/d3-transition/src/transition/index.js","../../node_modules/d3-ease/src/cubic.js","../../node_modules/d3-transition/src/selection/transition.js","../../node_modules/d3-transition/src/selection/index.js","../../node_modules/d3-zoom/src/constant.js","../../node_modules/d3-zoom/src/event.js","../../node_modules/d3-zoom/src/transform.js","../../node_modules/d3-zoom/src/noevent.js","../../node_modules/d3-zoom/src/zoom.js","../../node_modules/@xyflow/system/dist/esm/index.js","../../node_modules/@xyflow/react/node_modules/zustand/esm/vanilla.mjs","../../node_modules/@xyflow/react/node_modules/zustand/esm/traditional.mjs","../../node_modules/@xyflow/react/node_modules/zustand/esm/shallow.mjs","../../node_modules/@xyflow/react/dist/esm/index.js","../../node_modules/deepmerge/dist/cjs.js","../../src/utils/flow.ts","../../src/constants/nodes.ts","../../src/states/flow/state.ts","../../src/states/flow/actions.ts","../../node_modules/@langchain/core/dist/prompts/base.js","../../node_modules/@langchain/core/dist/prompts/string.js","../../node_modules/mustache/mustache.mjs","../../node_modules/@langchain/core/dist/prompts/template.js","../../node_modules/@langchain/core/dist/prompts/prompt.js","../../node_modules/@langchain/openai/dist/embeddings.js","../../node_modules/@langchain/google-genai/dist/embeddings.js","../../src/hooks/mutations/use-langchain-embedding.ts","../../src/hooks/mutations/use-embedding.ts","../../src/components/molecules/MarkdownViewer/index.tsx","../../src/lib/shadcn/ui/card.tsx","../../src/components/atoms/LLMSetting.tsx","../../src/constants/local-llm.ts","../../src/lib/shadcn/ui/badge.tsx","../../src/components/atoms/LLMInfo.tsx","../../node_modules/@langchain/core/dist/document_loaders/base.js","../../node_modules/@langchain/community/dist/document_loaders/web/pdf.js"],"sourcesContent":["export enum FlowNodePlaceholderTypeEnum {\n  VECTOR_DATABASE_RETREIVER = 'VECTOR_DATABASE_RETREIVER',\n  DEFAULT_EMBEDDING_MODEL = 'DEFAULT_EMBEDDING_MODEL',\n}\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n","var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n","export default function cc(names) {\n  if (typeof names === \"string\" || typeof names === \"number\") return \"\" + names\n\n  let out = \"\"\n\n  if (Array.isArray(names)) {\n    for (let i = 0, tmp; i < names.length; i++) {\n      if ((tmp = cc(names[i])) !== \"\") {\n        out += (out && \" \") + tmp\n      }\n    }\n  } else {\n    for (let k in names) {\n      if (names[k]) out += (out && \" \") + k\n    }\n  }\n\n  return out\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n","import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","// Given something array like (or null), returns something that is strictly an\n// array. This is used to ensure that array-like objects passed to d3.selectAll\n// or selection.selectAll are converted into proper arrays when creating a\n// selection; we don’t ever want to create a selection backed by a live\n// HTMLCollection or NodeList. However, note that selection.selectAll will use a\n// static NodeList as a group, since it safely derived from querySelectorAll.\nexport default function array(x) {\n  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    return array(select.apply(this, arguments));\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n","import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return Array.from(this.children);\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = arraylike(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\n// Given some data, this returns an array-like view of it: an object that\n// exposes a length property and allows numeric indexing. Note that unlike\n// selectAll, this isn’t worried about “live” collections because the resulting\n// array will only be used briefly while data is being bound. (It is possible to\n// cause the data to change while iterating by using a key function, but please\n// don’t; we’d rather avoid a gratuitous copy.)\nfunction arraylike(data) {\n  return typeof data === \"object\" && \"length\" in data\n    ? data // Array, TypedArray, NodeList, array-like\n    : Array.from(data); // Map, Set, iterable, string, or anything else\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  if (typeof onenter === \"function\") {\n    enter = onenter(enter);\n    if (enter) enter = enter.selection();\n  } else {\n    enter = enter.append(onenter + \"\");\n  }\n  if (onupdate != null) {\n    update = onupdate(update);\n    if (update) update = update.selection();\n  }\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(context) {\n  var selection = context.selection ? context.selection() : context;\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n","import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n","import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n","import {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","export default function(event) {\n  let sourceEvent;\n  while (sourceEvent = event.sourceEvent) event = sourceEvent;\n  return event;\n}\n","import sourceEvent from \"./sourceEvent.js\";\n\nexport default function(event, node) {\n  event = sourceEvent(event);\n  if (node === undefined) node = event.currentTarget;\n  if (node) {\n    var svg = node.ownerSVGElement || node;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n    if (node.getBoundingClientRect) {\n      var rect = node.getBoundingClientRect();\n      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n    }\n  }\n  return [event.pageX, event.pageY];\n}\n","// These are typically used in conjunction with noevent to ensure that we can\n// preventDefault on the event.\nexport const nonpassive = {passive: false};\nexport const nonpassivecapture = {capture: true, passive: false};\n\nexport function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent, {nonpassivecapture} from \"./noevent.js\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, nonpassivecapture);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, nonpassivecapture);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, nonpassivecapture);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default x => () => x;\n","export default function DragEvent(type, {\n  sourceEvent,\n  subject,\n  target,\n  identifier,\n  active,\n  x, y, dx, dy,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    subject: {value: subject, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    identifier: {value: identifier, enumerable: true, configurable: true},\n    active: {value: active, enumerable: true, configurable: true},\n    x: {value: x, enumerable: true, configurable: true},\n    y: {value: y, enumerable: true, configurable: true},\n    dx: {value: dx, enumerable: true, configurable: true},\n    dy: {value: dy, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {select, pointer} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag.js\";\nimport noevent, {nonpassive, nonpassivecapture, nopropagation} from \"./noevent.js\";\nimport constant from \"./constant.js\";\nimport DragEvent from \"./event.js\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(event, d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved, nonpassive)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned(event, d) {\n    if (touchending || !filter.call(this, event, d)) return;\n    var gesture = beforestart(this, container.call(this, event, d), event, d, \"mouse\");\n    if (!gesture) return;\n    select(event.view)\n      .on(\"mousemove.drag\", mousemoved, nonpassivecapture)\n      .on(\"mouseup.drag\", mouseupped, nonpassivecapture);\n    nodrag(event.view);\n    nopropagation(event);\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\", event);\n  }\n\n  function mousemoved(event) {\n    noevent(event);\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\", event);\n  }\n\n  function mouseupped(event) {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent(event);\n    gestures.mouse(\"end\", event);\n  }\n\n  function touchstarted(event, d) {\n    if (!filter.call(this, event, d)) return;\n    var touches = event.changedTouches,\n        c = container.call(this, event, d),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {\n        nopropagation(event);\n        gesture(\"start\", event, touches[i]);\n      }\n    }\n  }\n\n  function touchmoved(event) {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent(event);\n        gesture(\"drag\", event, touches[i]);\n      }\n    }\n  }\n\n  function touchended(event) {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation(event);\n        gesture(\"end\", event, touches[i]);\n      }\n    }\n  }\n\n  function beforestart(that, container, event, d, identifier, touch) {\n    var dispatch = listeners.copy(),\n        p = pointer(touch || event, container), dx, dy,\n        s;\n\n    if ((s = subject.call(that, new DragEvent(\"beforestart\", {\n        sourceEvent: event,\n        target: drag,\n        identifier,\n        active,\n        x: p[0],\n        y: p[1],\n        dx: 0,\n        dy: 0,\n        dispatch\n      }), d)) == null) return;\n\n    dx = s.x - p[0] || 0;\n    dy = s.y - p[1] || 0;\n\n    return function gesture(type, event, touch) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[identifier] = gesture, n = active++; break;\n        case \"end\": delete gestures[identifier], --active; // falls through\n        case \"drag\": p = pointer(touch || event, container), n = active; break;\n      }\n      dispatch.call(\n        type,\n        that,\n        new DragEvent(type, {\n          sourceEvent: event,\n          subject: s,\n          target: drag,\n          identifier,\n          active: n,\n          x: p[0] + dx,\n          y: p[1] + dy,\n          dx: p[0] - p0[0],\n          dy: p[1] - p0[1],\n          dispatch\n        }),\n        d\n      );\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\nexport default (function zoomRho(rho, rho2, rho4) {\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000 * rho / Math.SQRT2;\n\n    return i;\n  }\n\n  zoom.rho = function(_) {\n    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\n    return zoomRho(_1, _2, _4);\n  };\n\n  return zoom;\n})(Math.SQRT2, 2, 4);\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import interrupt from \"../interrupt.js\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule.js\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule.js\";\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    set(this, id).ease = v;\n  };\n}\n\nexport default function(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index.js\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule.js\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {tweenValue} from \"./tween.js\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","function textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n","import {Transition, newId} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr.js\";\nimport transition_attrTween from \"./attrTween.js\";\nimport transition_delay from \"./delay.js\";\nimport transition_duration from \"./duration.js\";\nimport transition_ease from \"./ease.js\";\nimport transition_easeVarying from \"./easeVarying.js\";\nimport transition_filter from \"./filter.js\";\nimport transition_merge from \"./merge.js\";\nimport transition_on from \"./on.js\";\nimport transition_remove from \"./remove.js\";\nimport transition_select from \"./select.js\";\nimport transition_selectAll from \"./selectAll.js\";\nimport transition_selection from \"./selection.js\";\nimport transition_style from \"./style.js\";\nimport transition_styleTween from \"./styleTween.js\";\nimport transition_text from \"./text.js\";\nimport transition_textTween from \"./textTween.js\";\nimport transition_transition from \"./transition.js\";\nimport transition_tween from \"./tween.js\";\nimport transition_end from \"./end.js\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  selectChild: selection_prototype.selectChild,\n  selectChildren: selection_prototype.selectChildren,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  easeVarying: transition_easeVarying,\n  end: transition_end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt.js\";\nimport selection_transition from \"./transition.js\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","export default x => () => x;\n","export default function ZoomEvent(type, {\n  sourceEvent,\n  target,\n  transform,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    transform: {value: transform, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {select, pointer} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport ZoomEvent from \"./event.js\";\nimport {Transform, identity} from \"./transform.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\n// Ignore right-click, since that should open the context menu.\n// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\nfunction defaultFilter(event) {\n  return (!event.ctrlKey || event.type === 'wheel') && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta(event) {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchfirst,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0,\n      tapDistance = 10;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled, {passive: false})\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point, event) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point, event);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n          .event(event)\n          .start()\n          .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n          .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p, event) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p, event);\n  };\n\n  zoom.scaleTo = function(selection, k, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p, event);\n  };\n\n  zoom.translateBy = function(selection, x, y, event) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    }, null, event);\n  };\n\n  zoom.translateTo = function(selection, x, y, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p, event);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point, event) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).event(event).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).event(event).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args).event(event),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.sourceEvent = null;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    event: function(event) {\n      if (event) this.sourceEvent = event;\n      return this;\n    },\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new ZoomEvent(type, {\n          sourceEvent: this.sourceEvent,\n          target: zoom,\n          type,\n          transform: this.that.__zoom,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function wheeled(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, args).event(event),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = pointer(event);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent(event);\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned(event, ...args) {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var currentTarget = event.currentTarget,\n        g = gesture(this, args, true).event(event),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = pointer(event, currentTarget),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation(event);\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved(event) {\n      noevent(event);\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.event(event)\n       .zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped(event) {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent(event);\n      g.event(event).end();\n    }\n  }\n\n  function dblclicked(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\n\n    noevent(event);\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0, event);\n    else select(this).call(zoom.transform, t1, p0, event);\n  }\n\n  function touchstarted(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, args, event.changedTouches.length === n).event(event),\n        started, i, t, p;\n\n    nopropagation(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation(event);\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        t = pointer(t, this);\n        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\n          var p = select(this).on(\"dblclick.zoom\");\n          if (p) p.apply(this, arguments);\n        }\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  zoom.tapDistance = function(_) {\n    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\n  };\n\n  return zoom;\n}\n","import { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoom, zoomIdentity, zoomTransform } from 'd3-zoom';\n\nconst errorMessages = {\n    error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    error003: (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n    error005: () => 'Only child nodes can use a parent extent.',\n    error006: () => \"Can't create edge. An edge needs a source and a target.\",\n    error007: (id) => `The old edge with id=${id} does not exist.`,\n    error009: (type) => `Marker type \"${type}\" doesn't exist.`,\n    error008: (handleType, { id, sourceHandle, targetHandle }) => `Couldn't create edge for ${handleType} handle id: \"${handleType === 'source' ? sourceHandle : targetHandle}\", edge id: ${id}.`,\n    error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    error011: (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n    error012: (id) => `Node with id \"${id}\" does not exist, it may have been removed. This can happen when a node is deleted before the \"onNodeClick\" handler is called.`,\n    error013: (lib = 'react') => `It seems that you haven't loaded the styles. Please import '@xyflow/${lib}/dist/style.css' or base.css to make sure everything is working properly.`,\n};\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\nconst initialConnection = {\n    inProgress: false,\n    isValid: null,\n    from: null,\n    fromHandle: null,\n    fromPosition: null,\n    fromNode: null,\n    to: null,\n    toHandle: null,\n    toPosition: null,\n    toNode: null,\n};\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\n\n/**\n * @internal\n */\nfunction areConnectionMapsEqual(a, b) {\n    if (!a && !b) {\n        return true;\n    }\n    if (!a || !b || a.size !== b.size) {\n        return false;\n    }\n    if (!a.size && !b.size) {\n        return true;\n    }\n    for (const key of a.keys()) {\n        if (!b.has(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * We call the callback for all connections in a that are not in b\n *\n * @internal\n */\nfunction handleConnectionChange(a, b, cb) {\n    if (!cb) {\n        return;\n    }\n    const diff = [];\n    a.forEach((connection, key) => {\n        if (!b?.has(key)) {\n            diff.push(connection);\n        }\n    });\n    if (diff.length) {\n        cb(diff);\n    }\n}\nfunction getConnectionStatus(isValid) {\n    return isValid === null ? null : isValid ? 'valid' : 'invalid';\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Test whether an object is useable as an Edge\n * @public\n * @remarks In TypeScript this is a type guard that will narrow the type of whatever you pass in to Edge if it returns true\n * @param element - The element to test\n * @returns A boolean indicating whether the element is an Edge\n */\nconst isEdgeBase = (element) => 'id' in element && 'source' in element && 'target' in element;\n/**\n * Test whether an object is useable as a Node\n * @public\n * @remarks In TypeScript this is a type guard that will narrow the type of whatever you pass in to Node if it returns true\n * @param element - The element to test\n * @returns A boolean indicating whether the element is an Node\n */\nconst isNodeBase = (element) => 'id' in element && 'position' in element && !('source' in element) && !('target' in element);\nconst isInternalNodeBase = (element) => 'id' in element && 'internals' in element && !('source' in element) && !('target' in element);\n/**\n * Pass in a node, and get connected nodes where edge.source === node.id\n * @public\n * @param node - The node to get the connected nodes from\n * @param nodes - The array of all nodes\n * @param edges - The array of all edges\n * @returns An array of nodes that are connected over eges where the source is the given node\n */\nconst getOutgoers = (node, nodes, edges) => {\n    if (!node.id) {\n        return [];\n    }\n    const outgoerIds = new Set();\n    edges.forEach((edge) => {\n        if (edge.source === node.id) {\n            outgoerIds.add(edge.target);\n        }\n    });\n    return nodes.filter((n) => outgoerIds.has(n.id));\n};\n/**\n * Pass in a node, and get connected nodes where edge.target === node.id\n * @public\n * @param node - The node to get the connected nodes from\n * @param nodes - The array of all nodes\n * @param edges - The array of all edges\n * @returns An array of nodes that are connected over eges where the target is the given node\n */\nconst getIncomers = (node, nodes, edges) => {\n    if (!node.id) {\n        return [];\n    }\n    const incomersIds = new Set();\n    edges.forEach((edge) => {\n        if (edge.target === node.id) {\n            incomersIds.add(edge.source);\n        }\n    });\n    return nodes.filter((n) => incomersIds.has(n.id));\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    const { width, height } = getNodeDimensions(node);\n    const origin = node.origin ?? nodeOrigin;\n    const offsetX = width * origin[0];\n    const offsetY = height * origin[1];\n    return {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n};\n/**\n * Internal function for determining a bounding box that contains all given nodes in an array.\n * @public\n * @remarks Useful when combined with {@link getViewportForBounds} to calculate the correct transform to fit the given nodes in a viewport.\n * @param nodes - Nodes to calculate the bounds for\n * @param params.nodeOrigin - Origin of the nodes: [0, 0] - top left, [0.5, 0.5] - center\n * @returns Bounding box enclosing all nodes\n */\nconst getNodesBounds = (nodes, params = { nodeOrigin: [0, 0], nodeLookup: undefined }) => {\n    if (process.env.NODE_ENV === 'development' && !params.nodeLookup) {\n        console.warn('Please use `getNodesBounds` from `useReactFlow`/`useSvelteFlow` hook to ensure correct values for sub flows. If not possible, you have to provide a nodeLookup to support sub flows.');\n    }\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, nodeOrId) => {\n        const isId = typeof nodeOrId === 'string';\n        let currentNode = !params.nodeLookup && !isId ? nodeOrId : undefined;\n        if (params.nodeLookup) {\n            currentNode = isId\n                ? params.nodeLookup.get(nodeOrId)\n                : !isInternalNodeBase(nodeOrId)\n                    ? params.nodeLookup.get(nodeOrId.id)\n                    : nodeOrId;\n        }\n        const nodeBox = currentNode ? nodeToBox(currentNode, params.nodeOrigin) : { x: 0, y: 0, x2: 0, y2: 0 };\n        return getBoundsOfBoxes(currBox, nodeBox);\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\n/**\n * Determines a bounding box that contains all given nodes in an array\n * @internal\n */\nconst getInternalNodesBounds = (nodeLookup, params = {}) => {\n    if (nodeLookup.size === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    let box = { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity };\n    nodeLookup.forEach((node) => {\n        if (params.filter === undefined || params.filter(node)) {\n            const nodeBox = nodeToBox(node);\n            box = getBoundsOfBoxes(box, nodeBox);\n        }\n    });\n    return boxToRect(box);\n};\nconst getNodesInside = (nodes, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false) => {\n    const paneRect = {\n        ...pointToRendererPoint(rect, [tx, ty, tScale]),\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    for (const node of nodes.values()) {\n        const { measured, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            continue;\n        }\n        const width = measured.width ?? node.width ?? node.initialWidth ?? null;\n        const height = measured.height ?? node.height ?? node.initialHeight ?? null;\n        const overlappingArea = getOverlappingArea(paneRect, nodeToRect(node));\n        const area = (width ?? 0) * (height ?? 0);\n        const partiallyVisible = partially && overlappingArea > 0;\n        const forceInitialRender = !node.internals.handleBounds;\n        const isVisible = forceInitialRender || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    }\n    return visibleNodes;\n};\n/**\n * Get all connecting edges for a given set of nodes\n * @param nodes - Nodes you want to get the connected edges for\n * @param edges - All edges\n * @returns Array of edges that connect any of the given nodes with each other\n */\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = new Set();\n    nodes.forEach((node) => {\n        nodeIds.add(node.id);\n    });\n    return edges.filter((edge) => nodeIds.has(edge.source) || nodeIds.has(edge.target));\n};\nfunction getFitViewNodes(nodeLookup, options) {\n    const fitViewNodes = new Map();\n    const optionNodeIds = options?.nodes ? new Set(options.nodes.map((node) => node.id)) : null;\n    nodeLookup.forEach((n) => {\n        const isVisible = n.measured.width && n.measured.height && (options?.includeHiddenNodes || !n.hidden);\n        if (isVisible && (!optionNodeIds || optionNodeIds.has(n.id))) {\n            fitViewNodes.set(n.id, n);\n        }\n    });\n    return fitViewNodes;\n}\nasync function fitView({ nodes, width, height, panZoom, minZoom, maxZoom }, options) {\n    if (nodes.size === 0) {\n        return Promise.resolve(false);\n    }\n    const bounds = getInternalNodesBounds(nodes);\n    const viewport = getViewportForBounds(bounds, width, height, options?.minZoom ?? minZoom, options?.maxZoom ?? maxZoom, options?.padding ?? 0.1);\n    await panZoom.setViewport(viewport, { duration: options?.duration });\n    return Promise.resolve(true);\n}\n/**\n * This function calculates the next position of a node, taking into account the node's extent, parent node, and origin.\n *\n * @internal\n * @returns position, positionAbsolute\n */\nfunction calculateNodePosition({ nodeId, nextPosition, nodeLookup, nodeOrigin = [0, 0], nodeExtent, onError, }) {\n    const node = nodeLookup.get(nodeId);\n    const parentNode = node.parentId ? nodeLookup.get(node.parentId) : undefined;\n    const { x: parentX, y: parentY } = parentNode ? parentNode.internals.positionAbsolute : { x: 0, y: 0 };\n    const origin = node.origin ?? nodeOrigin;\n    let extent = nodeExtent;\n    if (node.extent === 'parent' && !node.expandParent) {\n        if (!parentNode) {\n            onError?.('005', errorMessages['error005']());\n        }\n        else {\n            const parentWidth = parentNode.measured.width;\n            const parentHeight = parentNode.measured.height;\n            if (parentWidth && parentHeight) {\n                extent = [\n                    [parentX, parentY],\n                    [parentX + parentWidth, parentY + parentHeight],\n                ];\n            }\n        }\n    }\n    else if (parentNode && isCoordinateExtent(node.extent)) {\n        extent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    const positionAbsolute = isCoordinateExtent(extent)\n        ? clampPosition(nextPosition, extent, node.measured)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentX + node.measured.width * origin[0],\n            y: positionAbsolute.y - parentY + node.measured.height * origin[1],\n        },\n        positionAbsolute,\n    };\n}\n/**\n * Pass in nodes & edges to delete, get arrays of nodes and edges that actually can be deleted\n * @internal\n * @param param.nodesToRemove - The nodes to remove\n * @param param.edgesToRemove - The edges to remove\n * @param param.nodes - All nodes\n * @param param.edges - All edges\n * @param param.onBeforeDelete - Callback to check which nodes and edges can be deleted\n * @returns nodes: nodes that can be deleted, edges: edges that can be deleted\n */\nasync function getElementsToRemove({ nodesToRemove = [], edgesToRemove = [], nodes, edges, onBeforeDelete, }) {\n    const nodeIds = new Set(nodesToRemove.map((node) => node.id));\n    const matchingNodes = [];\n    for (const node of nodes) {\n        if (node.deletable === false) {\n            continue;\n        }\n        const isIncluded = nodeIds.has(node.id);\n        const parentHit = !isIncluded && node.parentId && matchingNodes.find((n) => n.id === node.parentId);\n        if (isIncluded || parentHit) {\n            matchingNodes.push(node);\n        }\n    }\n    const edgeIds = new Set(edgesToRemove.map((edge) => edge.id));\n    const deletableEdges = edges.filter((edge) => edge.deletable !== false);\n    const connectedEdges = getConnectedEdges(matchingNodes, deletableEdges);\n    const matchingEdges = connectedEdges;\n    for (const edge of deletableEdges) {\n        const isIncluded = edgeIds.has(edge.id);\n        if (isIncluded && !matchingEdges.find((e) => e.id === edge.id)) {\n            matchingEdges.push(edge);\n        }\n    }\n    if (!onBeforeDelete) {\n        return {\n            edges: matchingEdges,\n            nodes: matchingNodes,\n        };\n    }\n    const onBeforeDeleteResult = await onBeforeDelete({\n        nodes: matchingNodes,\n        edges: matchingEdges,\n    });\n    if (typeof onBeforeDeleteResult === 'boolean') {\n        return onBeforeDeleteResult ? { edges: matchingEdges, nodes: matchingNodes } : { edges: [], nodes: [] };\n    }\n    return onBeforeDeleteResult;\n}\n\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent, dimensions) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0] - (dimensions?.width ?? 0)),\n    y: clamp(position.y, extent[0][1], extent[1][1] - (dimensions?.height ?? 0)),\n});\nfunction clampPositionToParent(childPosition, childDimensions, parent) {\n    const { width: parentWidth, height: parentHeight } = getNodeDimensions(parent);\n    const { x: parentX, y: parentY } = parent.internals.positionAbsolute;\n    return clampPosition(childPosition, [\n        [parentX, parentY],\n        [parentX + parentWidth, parentY + parentHeight],\n    ], childDimensions);\n}\n/**\n * Calculates the velocity of panning when the mouse is close to the edge of the canvas\n * @internal\n * @param value - One dimensional poition of the mouse (x or y)\n * @param min - Minimal position on canvas before panning starts\n * @param max - Maximal position on canvas before panning starts\n * @returns - A number between 0 and 1 that represents the velocity of panning\n */\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, min) / min;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, min) / min;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds, speed = 15, distance = 40) => {\n    const xMovement = calcAutoPanVelocity(pos.x, distance, bounds.width - distance) * speed;\n    const yMovement = calcAutoPanVelocity(pos.y, distance, bounds.height - distance) * speed;\n    return [xMovement, yMovement];\n};\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node, nodeOrigin = [0, 0]) => {\n    const { x, y } = isInternalNodeBase(node)\n        ? node.internals.positionAbsolute\n        : getNodePositionWithOrigin(node, nodeOrigin);\n    return {\n        x,\n        y,\n        width: node.measured?.width ?? node.width ?? node.initialWidth ?? 0,\n        height: node.measured?.height ?? node.height ?? node.initialHeight ?? 0,\n    };\n};\nconst nodeToBox = (node, nodeOrigin = [0, 0]) => {\n    const { x, y } = isInternalNodeBase(node)\n        ? node.internals.positionAbsolute\n        : getNodePositionWithOrigin(node, nodeOrigin);\n    return {\n        x,\n        y,\n        x2: x + (node.measured?.width ?? node.width ?? node.initialWidth ?? 0),\n        y2: y + (node.measured?.height ?? node.height ?? node.initialHeight ?? 0),\n    };\n};\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\n// used for a11y key board controls for nodes and edges\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst snapPosition = (position, snapGrid = [1, 1]) => {\n    return {\n        x: snapGrid[0] * Math.round(position.x / snapGrid[0]),\n        y: snapGrid[1] * Math.round(position.y / snapGrid[1]),\n    };\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid = false, snapGrid = [1, 1]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    return snapToGrid ? snapPosition(position, snapGrid) : position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\n/**\n * Returns a viewport that encloses the given bounds with optional padding.\n * @public\n * @remarks You can determine bounds of nodes with {@link getNodesBounds} and {@link getBoundsOfRects}\n * @param bounds - Bounds to fit inside viewport\n * @param width - Width of the viewport\n * @param height  - Height of the viewport\n * @param minZoom - Minimum zoom level of the resulting viewport\n * @param maxZoom - Maximum zoom level of the resulting viewport\n * @param padding - Optional padding around the bounds\n * @returns A transforned {@link Viewport} that encloses the given bounds which you can pass to e.g. {@link setViewport}\n * @example\n * const { x, y, zoom } = getViewportForBounds(\n  { x: 0, y: 0, width: 100, height: 100},\n  1200, 800, 0.5, 2);\n */\nconst getViewportForBounds = (bounds, width, height, minZoom, maxZoom, padding) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return { x, y, zoom: clampedZoom };\n};\nconst isMacOs = () => typeof navigator !== 'undefined' && navigator?.userAgent?.indexOf('Mac') >= 0;\nfunction isCoordinateExtent(extent) {\n    return extent !== undefined && extent !== 'parent';\n}\nfunction getNodeDimensions(node) {\n    return {\n        width: node.measured?.width ?? node.width ?? node.initialWidth ?? 0,\n        height: node.measured?.height ?? node.height ?? node.initialHeight ?? 0,\n    };\n}\nfunction nodeHasDimensions(node) {\n    return ((node.measured?.width ?? node.width ?? node.initialWidth) !== undefined &&\n        (node.measured?.height ?? node.height ?? node.initialHeight) !== undefined);\n}\n/**\n * Convert child position to aboslute position\n *\n * @internal\n * @param position\n * @param parentId\n * @param nodeLookup\n * @param nodeOrigin\n * @returns an internal node with an absolute position\n */\nfunction evaluateAbsolutePosition(position, dimensions = { width: 0, height: 0 }, parentId, nodeLookup, nodeOrigin) {\n    const positionAbsolute = { ...position };\n    const parent = nodeLookup.get(parentId);\n    if (parent) {\n        const origin = parent.origin || nodeOrigin;\n        positionAbsolute.x += parent.internals.positionAbsolute.x - (dimensions.width ?? 0) * origin[0];\n        positionAbsolute.y += parent.internals.positionAbsolute.y - (dimensions.height ?? 0) * origin[1];\n    }\n    return positionAbsolute;\n}\n\nfunction getPointerPosition(event, { snapGrid = [0, 0], snapToGrid = false, transform, containerBounds }) {\n    const { x, y } = getEventPosition(event);\n    const pointerPos = pointToRendererPoint({ x: x - (containerBounds?.left ?? 0), y: y - (containerBounds?.top ?? 0) }, transform);\n    const { x: xSnapped, y: ySnapped } = snapToGrid ? snapPosition(pointerPos, snapGrid) : pointerPos;\n    // we need the snapped position in order to be able to skip unnecessary drag events\n    return {\n        xSnapped,\n        ySnapped,\n        ...pointerPos,\n    };\n}\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst inputTags = ['INPUT', 'SELECT', 'TEXTAREA'];\nfunction isInputDOMNode(event) {\n    // using composed path for handling shadow dom\n    const target = (event.composedPath?.()?.[0] || event.target);\n    const isInput = inputTags.includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouse = isMouseEvent(event);\n    const evtX = isMouse ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouse ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\n// The handle bounds are calculated relative to the node element.\n// We store them in the internals object of the node in order to avoid\n// unnecessary recalculations.\nconst getHandleBounds = (type, nodeElement, nodeBounds, zoom, nodeId) => {\n    const handles = nodeElement.querySelectorAll(`.${type}`);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    return Array.from(handles).map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            type,\n            nodeId,\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left) / zoom,\n            y: (handleBounds.top - nodeBounds.top) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\n\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\n/**\n * Get a bezier path from source to target handle\n * @param params.sourceX - The x position of the source handle\n * @param params.sourceY - The y position of the source handle\n * @param params.sourcePosition - The position of the source handle (default: Position.Bottom)\n * @param params.targetX - The x position of the target handle\n * @param params.targetY - The y position of the target handle\n * @param params.targetPosition - The position of the target handle (default: Position.Top)\n * @param params.curvature - The curvature of the bezier edge\n * @returns A path string you can use in an SVG, the labelX and labelY position (center of path) and offsetX, offsetY between source handle and label\n * @example\n *  const source = { x: 0, y: 20 };\n    const target = { x: 150, y: 100 };\n    \n    const [path, labelX, labelY, offsetX, offsetY] = getBezierPath({\n      sourceX: source.x,\n      sourceY: source.y,\n      sourcePosition: Position.Right,\n      targetX: target.x,\n      targetY: target.y,\n      targetPosition: Position.Left,\n});\n */\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\n\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getElevatedEdgeZIndex({ sourceNode, targetNode, selected = false, zIndex = 0, elevateOnSelect = false, }) {\n    if (!elevateOnSelect) {\n        return zIndex;\n    }\n    const edgeOrConnectedNodeSelected = selected || targetNode.selected || sourceNode.selected;\n    const selectedZIndex = Math.max(sourceNode.internals.z || 0, targetNode.internals.z || 0, 1000);\n    return zIndex + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n}\nfunction isEdgeVisible({ sourceNode, targetNode, width, height, transform }) {\n    const edgeBox = getBoundsOfBoxes(nodeToBox(sourceNode), nodeToBox(targetNode));\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewRect = {\n        x: -transform[0] / transform[2],\n        y: -transform[1] / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    };\n    return getOverlappingArea(viewRect, boxToRect(edgeBox)) > 0;\n}\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `xy-edge__${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\n/**\n * This util is a convenience function to add a new Edge to an array of edges\n * @remarks It also performs some validation to make sure you don't add an invalid edge or duplicate an existing one.\n * @public\n * @param edgeParams - Either an Edge or a Connection you want to add\n * @param edges -  The array of all current edges\n * @returns A new array of edges with the new edge added\n */\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    let edge;\n    if (isEdgeBase(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    if (edge.sourceHandle === null) {\n        delete edge.sourceHandle;\n    }\n    if (edge.targetHandle === null) {\n        delete edge.targetHandle;\n    }\n    return edges.concat(edge);\n};\n/**\n * A handy utility to reconnect an existing edge with new properties\n * @param oldEdge - The edge you want to update\n * @param newConnection - The new connection you want to update the edge with\n * @param edges - The array of all current edges\n * @param options.shouldReplaceId - should the id of the old edge be replaced with the new connection id\n * @returns the updated edges array\n */\nconst reconnectEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdge.id);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['error007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\n\n/**\n * Get a straight path from source to target handle\n * @param params.sourceX - The x position of the source handle\n * @param params.sourceY - The y position of the source handle\n * @param params.targetX - The x position of the target handle\n * @param params.targetY - The y position of the target handle\n * @returns A path string you can use in an SVG, the labelX and labelY position (center of path) and offsetX, offsetY between source handle and label\n * @example\n *  const source = { x: 0, y: 20 };\n    const target = { x: 150, y: 100 };\n    \n    const [path, labelX, labelY, offsetX, offsetY] = getStraightPath({\n      sourceX: source.x,\n      sourceY: source.y,\n      sourcePosition: Position.Right,\n      targetX: target.x,\n      targetY: target.y,\n      targetPosition: Position.Left,\n    });\n */\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const sourceGapOffset = { x: 0, y: 0 };\n    const targetGapOffset = { x: 0, y: 0 };\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x ?? defaultCenterX;\n        centerY = center.y ?? defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        if (sourcePosition === targetPosition) {\n            const diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n            // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n            if (diff <= offset) {\n                const gapOffset = Math.min(offset - 1, offset - diff);\n                if (sourceDir[dirAccessor] === currDir) {\n                    sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n                else {\n                    targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n            }\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        const sourceGapPoint = { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y };\n        const targetGapPoint = { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y };\n        const maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n        const maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n        // we want to place the label on the longest segment of the edge\n        if (maxXDistance >= maxYDistance) {\n            centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n            centerY = points[0].y;\n        }\n        else {\n            centerX = points[0].x;\n            centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n        }\n    }\n    const pathPoints = [\n        source,\n        { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y },\n        ...points,\n        { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y },\n        target,\n    ];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\n/**\n * Get a smooth step path from source to target handle\n * @param params.sourceX - The x position of the source handle\n * @param params.sourceY - The y position of the source handle\n * @param params.sourcePosition - The position of the source handle (default: Position.Bottom)\n * @param params.targetX - The x position of the target handle\n * @param params.targetY - The y position of the target handle\n * @param params.targetPosition - The position of the target handle (default: Position.Top)\n * @returns A path string you can use in an SVG, the labelX and labelY position (center of path) and offsetX, offsetY between source handle and label\n * @example\n *  const source = { x: 0, y: 20 };\n    const target = { x: 150, y: 100 };\n    \n    const [path, labelX, labelY, offsetX, offsetY] = getSmoothStepPath({\n      sourceX: source.x,\n      sourceY: source.y,\n      sourcePosition: Position.Right,\n      targetX: target.x,\n      targetY: target.y,\n      targetPosition: Position.Left,\n    });\n */\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\n\nfunction isNodeInitialized(node) {\n    return (node &&\n        !!(node.internals.handleBounds || node.handles?.length) &&\n        !!(node.measured.width || node.width || node.initialWidth));\n}\nfunction getEdgePosition(params) {\n    const { sourceNode, targetNode } = params;\n    if (!isNodeInitialized(sourceNode) || !isNodeInitialized(targetNode)) {\n        return null;\n    }\n    const sourceHandleBounds = sourceNode.internals.handleBounds || toHandleBounds(sourceNode.handles);\n    const targetHandleBounds = targetNode.internals.handleBounds || toHandleBounds(targetNode.handles);\n    const sourceHandle = getHandle$1(sourceHandleBounds?.source ?? [], params.sourceHandle);\n    const targetHandle = getHandle$1(\n    // when connection type is loose we can define all handles as sources and connect source -> source\n    params.connectionMode === ConnectionMode.Strict\n        ? targetHandleBounds?.target ?? []\n        : (targetHandleBounds?.target ?? []).concat(targetHandleBounds?.source ?? []), params.targetHandle);\n    if (!sourceHandle || !targetHandle) {\n        params.onError?.('008', errorMessages['error008'](!sourceHandle ? 'source' : 'target', {\n            id: params.id,\n            sourceHandle: params.sourceHandle,\n            targetHandle: params.targetHandle,\n        }));\n        return null;\n    }\n    const sourcePosition = sourceHandle?.position || Position.Bottom;\n    const targetPosition = targetHandle?.position || Position.Top;\n    const source = getHandlePosition(sourceNode, sourceHandle, sourcePosition);\n    const target = getHandlePosition(targetNode, targetHandle, targetPosition);\n    return {\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n        sourcePosition,\n        targetPosition,\n    };\n}\nfunction toHandleBounds(handles) {\n    if (!handles) {\n        return null;\n    }\n    const source = [];\n    const target = [];\n    for (const handle of handles) {\n        handle.width = handle.width ?? 1;\n        handle.height = handle.height ?? 1;\n        if (handle.type === 'source') {\n            source.push(handle);\n        }\n        else if (handle.type === 'target') {\n            target.push(handle);\n        }\n    }\n    return {\n        source,\n        target,\n    };\n}\nfunction getHandlePosition(node, handle, fallbackPosition = Position.Left, center = false) {\n    const x = (handle?.x ?? 0) + node.internals.positionAbsolute.x;\n    const y = (handle?.y ?? 0) + node.internals.positionAbsolute.y;\n    const { width, height } = handle ?? getNodeDimensions(node);\n    if (center) {\n        return { x: x + width / 2, y: y + height / 2 };\n    }\n    const position = handle?.position ?? fallbackPosition;\n    switch (position) {\n        case Position.Top:\n            return { x: x + width / 2, y };\n        case Position.Right:\n            return { x: x + width, y: y + height / 2 };\n        case Position.Bottom:\n            return { x: x + width / 2, y: y + height };\n        case Position.Left:\n            return { x, y: y + height / 2 };\n    }\n}\nfunction getHandle$1(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    // if no handleId is given, we use the first handle, otherwise we check for the id\n    return (!handleId ? bounds[0] : bounds.find((d) => d.id === handleId)) || null;\n}\n\nfunction getMarkerId(marker, id) {\n    if (!marker) {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = id ? `${id}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n}\nfunction createMarkerIds(edges, { id, defaultColor, defaultMarkerStart, defaultMarkerEnd, }) {\n    const ids = new Set();\n    return edges\n        .reduce((markers, edge) => {\n        [edge.markerStart || defaultMarkerStart, edge.markerEnd || defaultMarkerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, id);\n                if (!ids.has(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.add(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n}\n\nfunction getNodeToolbarTransform(nodeRect, viewport, position, offset, align) {\n    let alignmentOffset = 0.5;\n    if (align === 'start') {\n        alignmentOffset = 0;\n    }\n    else if (align === 'end') {\n        alignmentOffset = 1;\n    }\n    // position === Position.Top\n    // we set the x any y position of the toolbar based on the nodes position\n    let pos = [\n        (nodeRect.x + nodeRect.width * alignmentOffset) * viewport.zoom + viewport.x,\n        nodeRect.y * viewport.zoom + viewport.y - offset,\n    ];\n    // and than shift it based on the alignment. The shift values are in %.\n    let shift = [-100 * alignmentOffset, -100];\n    switch (position) {\n        case Position.Right:\n            pos = [\n                (nodeRect.x + nodeRect.width) * viewport.zoom + viewport.x + offset,\n                (nodeRect.y + nodeRect.height * alignmentOffset) * viewport.zoom + viewport.y,\n            ];\n            shift = [0, -100 * alignmentOffset];\n            break;\n        case Position.Bottom:\n            pos[1] = (nodeRect.y + nodeRect.height) * viewport.zoom + viewport.y + offset;\n            shift[1] = 0;\n            break;\n        case Position.Left:\n            pos = [\n                nodeRect.x * viewport.zoom + viewport.x - offset,\n                (nodeRect.y + nodeRect.height * alignmentOffset) * viewport.zoom + viewport.y,\n            ];\n            shift = [-100, -100 * alignmentOffset];\n            break;\n    }\n    return `translate(${pos[0]}px, ${pos[1]}px) translate(${shift[0]}%, ${shift[1]}%)`;\n}\n\nconst defaultOptions = {\n    nodeOrigin: [0, 0],\n    nodeExtent: infiniteExtent,\n    elevateNodesOnSelect: true,\n    defaults: {},\n};\nconst adoptUserNodesDefaultOptions = {\n    ...defaultOptions,\n    checkEquality: true,\n};\nfunction mergeObjects(base, incoming) {\n    const result = { ...base };\n    for (const key in incoming) {\n        if (incoming[key] !== undefined) {\n            // typecast is safe here, because we check for undefined\n            result[key] = incoming[key];\n        }\n    }\n    return result;\n}\nfunction updateAbsolutePositions(nodeLookup, parentLookup, options) {\n    const _options = mergeObjects(defaultOptions, options);\n    for (const node of nodeLookup.values()) {\n        if (node.parentId) {\n            updateChildNode(node, nodeLookup, parentLookup, _options);\n        }\n        else {\n            const positionWithOrigin = getNodePositionWithOrigin(node, _options.nodeOrigin);\n            const extent = isCoordinateExtent(node.extent) ? node.extent : _options.nodeExtent;\n            const clampedPosition = clampPosition(positionWithOrigin, extent, getNodeDimensions(node));\n            node.internals.positionAbsolute = clampedPosition;\n        }\n    }\n}\nfunction adoptUserNodes(nodes, nodeLookup, parentLookup, options) {\n    const _options = mergeObjects(adoptUserNodesDefaultOptions, options);\n    const tmpLookup = new Map(nodeLookup);\n    const selectedNodeZ = _options?.elevateNodesOnSelect ? 1000 : 0;\n    nodeLookup.clear();\n    parentLookup.clear();\n    for (const userNode of nodes) {\n        let internalNode = tmpLookup.get(userNode.id);\n        if (_options.checkEquality && userNode === internalNode?.internals.userNode) {\n            nodeLookup.set(userNode.id, internalNode);\n        }\n        else {\n            const positionWithOrigin = getNodePositionWithOrigin(userNode, _options.nodeOrigin);\n            const extent = isCoordinateExtent(userNode.extent) ? userNode.extent : _options.nodeExtent;\n            const clampedPosition = clampPosition(positionWithOrigin, extent, getNodeDimensions(userNode));\n            internalNode = {\n                ..._options.defaults,\n                ...userNode,\n                measured: {\n                    width: userNode.measured?.width,\n                    height: userNode.measured?.height,\n                },\n                internals: {\n                    positionAbsolute: clampedPosition,\n                    // if user re-initializes the node or removes `measured` for whatever reason, we reset the handleBounds so that the node gets re-measured\n                    handleBounds: !userNode.measured ? undefined : internalNode?.internals.handleBounds,\n                    z: calculateZ(userNode, selectedNodeZ),\n                    userNode,\n                },\n            };\n            nodeLookup.set(userNode.id, internalNode);\n        }\n        if (userNode.parentId) {\n            updateChildNode(internalNode, nodeLookup, parentLookup, options);\n        }\n    }\n}\nfunction updateParentLookup(node, parentLookup) {\n    if (!node.parentId) {\n        return;\n    }\n    const childNodes = parentLookup.get(node.parentId);\n    if (childNodes) {\n        childNodes.set(node.id, node);\n    }\n    else {\n        parentLookup.set(node.parentId, new Map([[node.id, node]]));\n    }\n}\n/**\n * Updates positionAbsolute and zIndex of a child node and the parentLookup.\n */\nfunction updateChildNode(node, nodeLookup, parentLookup, options) {\n    const { elevateNodesOnSelect, nodeOrigin, nodeExtent } = mergeObjects(defaultOptions, options);\n    const parentId = node.parentId;\n    const parentNode = nodeLookup.get(parentId);\n    if (!parentNode) {\n        console.warn(`Parent node ${parentId} not found. Please make sure that parent nodes are in front of their child nodes in the nodes array.`);\n        return;\n    }\n    updateParentLookup(node, parentLookup);\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    const { x, y, z } = calculateChildXYZ(node, parentNode, nodeOrigin, nodeExtent, selectedNodeZ);\n    const { positionAbsolute } = node.internals;\n    const positionChanged = x !== positionAbsolute.x || y !== positionAbsolute.y;\n    if (positionChanged || z !== node.internals.z) {\n        node.internals = {\n            ...node.internals,\n            positionAbsolute: positionChanged ? { x, y } : positionAbsolute,\n            z,\n        };\n    }\n}\nfunction calculateZ(node, selectedNodeZ) {\n    return (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n}\nfunction calculateChildXYZ(childNode, parentNode, nodeOrigin, nodeExtent, selectedNodeZ) {\n    const { x: parentX, y: parentY } = parentNode.internals.positionAbsolute;\n    const childDimensions = getNodeDimensions(childNode);\n    const positionWithOrigin = getNodePositionWithOrigin(childNode, nodeOrigin);\n    const clampedPosition = isCoordinateExtent(childNode.extent)\n        ? clampPosition(positionWithOrigin, childNode.extent, childDimensions)\n        : positionWithOrigin;\n    let absolutePosition = clampPosition({ x: parentX + clampedPosition.x, y: parentY + clampedPosition.y }, nodeExtent, childDimensions);\n    if (childNode.extent === 'parent') {\n        absolutePosition = clampPositionToParent(absolutePosition, childDimensions, parentNode);\n    }\n    const childZ = calculateZ(childNode, selectedNodeZ);\n    const parentZ = parentNode.internals.z ?? 0;\n    return {\n        x: absolutePosition.x,\n        y: absolutePosition.y,\n        z: parentZ > childZ ? parentZ : childZ,\n    };\n}\nfunction handleExpandParent(children, nodeLookup, parentLookup, nodeOrigin = [0, 0]) {\n    const changes = [];\n    const parentExpansions = new Map();\n    // determine the expanded rectangle the child nodes would take for each parent\n    for (const child of children) {\n        const parent = nodeLookup.get(child.parentId);\n        if (!parent) {\n            continue;\n        }\n        const parentRect = parentExpansions.get(child.parentId)?.expandedRect ?? nodeToRect(parent);\n        const expandedRect = getBoundsOfRects(parentRect, child.rect);\n        parentExpansions.set(child.parentId, { expandedRect, parent });\n    }\n    if (parentExpansions.size > 0) {\n        parentExpansions.forEach(({ expandedRect, parent }, parentId) => {\n            // determine the position & dimensions of the parent\n            const positionAbsolute = parent.internals.positionAbsolute;\n            const dimensions = getNodeDimensions(parent);\n            const origin = parent.origin ?? nodeOrigin;\n            // determine how much the parent expands in width and position\n            const xChange = expandedRect.x < positionAbsolute.x ? Math.round(Math.abs(positionAbsolute.x - expandedRect.x)) : 0;\n            const yChange = expandedRect.y < positionAbsolute.y ? Math.round(Math.abs(positionAbsolute.y - expandedRect.y)) : 0;\n            const newWidth = Math.max(dimensions.width, Math.round(expandedRect.width));\n            const newHeight = Math.max(dimensions.height, Math.round(expandedRect.height));\n            const widthChange = (newWidth - dimensions.width) * origin[0];\n            const heightChange = (newHeight - dimensions.height) * origin[1];\n            // We need to correct the position of the parent node if the origin is not [0,0]\n            if (xChange > 0 || yChange > 0 || widthChange || heightChange) {\n                changes.push({\n                    id: parentId,\n                    type: 'position',\n                    position: {\n                        x: parent.position.x - xChange + widthChange,\n                        y: parent.position.y - yChange + heightChange,\n                    },\n                });\n                // We move all child nodes in the oppsite direction\n                // so the x,y changes of the parent do not move the children\n                parentLookup.get(parentId)?.forEach((childNode) => {\n                    if (!children.some((child) => child.id === childNode.id)) {\n                        changes.push({\n                            id: childNode.id,\n                            type: 'position',\n                            position: {\n                                x: childNode.position.x + xChange,\n                                y: childNode.position.y + yChange,\n                            },\n                        });\n                    }\n                });\n            }\n            // We need to correct the dimensions of the parent node if the origin is not [0,0]\n            if (dimensions.width < expandedRect.width || dimensions.height < expandedRect.height || xChange || yChange) {\n                changes.push({\n                    id: parentId,\n                    type: 'dimensions',\n                    setAttributes: true,\n                    dimensions: {\n                        width: newWidth + (xChange ? origin[0] * xChange - widthChange : 0),\n                        height: newHeight + (yChange ? origin[1] * yChange - heightChange : 0),\n                    },\n                });\n            }\n        });\n    }\n    return changes;\n}\nfunction updateNodeInternals(updates, nodeLookup, parentLookup, domNode, nodeOrigin, nodeExtent) {\n    const viewportNode = domNode?.querySelector('.xyflow__viewport');\n    let updatedInternals = false;\n    if (!viewportNode) {\n        return { changes: [], updatedInternals };\n    }\n    const changes = [];\n    const style = window.getComputedStyle(viewportNode);\n    const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n    // in this array we collect nodes, that might trigger changes (like expanding parent)\n    const parentExpandChildren = [];\n    for (const update of updates.values()) {\n        const node = nodeLookup.get(update.id);\n        if (!node) {\n            continue;\n        }\n        if (node.hidden) {\n            node.internals = {\n                ...node.internals,\n                handleBounds: undefined,\n            };\n            updatedInternals = true;\n        }\n        else {\n            const dimensions = getDimensions(update.nodeElement);\n            const dimensionChanged = node.measured.width !== dimensions.width || node.measured.height !== dimensions.height;\n            const doUpdate = !!(dimensions.width &&\n                dimensions.height &&\n                (dimensionChanged || !node.internals.handleBounds || update.force));\n            if (doUpdate) {\n                const nodeBounds = update.nodeElement.getBoundingClientRect();\n                const extent = isCoordinateExtent(node.extent) ? node.extent : nodeExtent;\n                let { positionAbsolute } = node.internals;\n                if (node.parentId && node.extent === 'parent') {\n                    positionAbsolute = clampPositionToParent(positionAbsolute, dimensions, nodeLookup.get(node.parentId));\n                }\n                else if (extent) {\n                    positionAbsolute = clampPosition(positionAbsolute, extent, dimensions);\n                }\n                node.measured = dimensions;\n                node.internals = {\n                    ...node.internals,\n                    positionAbsolute,\n                    handleBounds: {\n                        source: getHandleBounds('source', update.nodeElement, nodeBounds, zoom, node.id),\n                        target: getHandleBounds('target', update.nodeElement, nodeBounds, zoom, node.id),\n                    },\n                };\n                if (node.parentId) {\n                    updateChildNode(node, nodeLookup, parentLookup, { nodeOrigin });\n                }\n                updatedInternals = true;\n                if (dimensionChanged) {\n                    changes.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                    if (node.expandParent && node.parentId) {\n                        parentExpandChildren.push({\n                            id: node.id,\n                            parentId: node.parentId,\n                            rect: nodeToRect(node, nodeOrigin),\n                        });\n                    }\n                }\n            }\n        }\n    }\n    if (parentExpandChildren.length > 0) {\n        const parentExpandChanges = handleExpandParent(parentExpandChildren, nodeLookup, parentLookup, nodeOrigin);\n        changes.push(...parentExpandChanges);\n    }\n    return { changes, updatedInternals };\n}\nasync function panBy({ delta, panZoom, transform, translateExtent, width, height, }) {\n    if (!panZoom || (!delta.x && !delta.y)) {\n        return Promise.resolve(false);\n    }\n    const nextViewport = await panZoom.setViewportConstrained({\n        x: transform[0] + delta.x,\n        y: transform[1] + delta.y,\n        zoom: transform[2],\n    }, [\n        [0, 0],\n        [width, height],\n    ], translateExtent);\n    const transformChanged = !!nextViewport &&\n        (nextViewport.x !== transform[0] || nextViewport.y !== transform[1] || nextViewport.k !== transform[2]);\n    return Promise.resolve(transformChanged);\n}\nfunction updateConnectionLookup(connectionLookup, edgeLookup, edges) {\n    connectionLookup.clear();\n    edgeLookup.clear();\n    for (const edge of edges) {\n        const { source, target, sourceHandle = null, targetHandle = null } = edge;\n        const sourceKey = `${source}-source-${sourceHandle}`;\n        const targetKey = `${target}-target-${targetHandle}`;\n        const prevSource = connectionLookup.get(sourceKey) || new Map();\n        const prevTarget = connectionLookup.get(targetKey) || new Map();\n        const connection = { edgeId: edge.id, source, target, sourceHandle, targetHandle };\n        edgeLookup.set(edge.id, edge);\n        connectionLookup.set(sourceKey, prevSource.set(`${target}-${targetHandle}`, connection));\n        connectionLookup.set(targetKey, prevTarget.set(`${source}-${sourceHandle}`, connection));\n    }\n}\n\nfunction shallowNodeData(a, b) {\n    if (a === null || b === null) {\n        return false;\n    }\n    const _a = Array.isArray(a) ? a : [a];\n    const _b = Array.isArray(b) ? b : [b];\n    if (_a.length !== _b.length) {\n        return false;\n    }\n    for (let i = 0; i < _a.length; i++) {\n        if (_a[i].id !== _b[i].id || _a[i].type !== _b[i].type || !Object.is(_a[i].data, _b[i].data)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction isParentSelected(node, nodeLookup) {\n    if (!node.parentId) {\n        return false;\n    }\n    const parentNode = nodeLookup.get(node.parentId);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeLookup);\n}\nfunction hasSelector(target, selector, domNode) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === domNode)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeLookup, nodesDraggable, mousePos, nodeId) {\n    const dragItems = new Map();\n    for (const [id, node] of nodeLookup) {\n        if ((node.selected || node.id === nodeId) &&\n            (!node.parentId || !isParentSelected(node, nodeLookup)) &&\n            (node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'))) {\n            const internalNode = nodeLookup.get(id);\n            if (internalNode) {\n                dragItems.set(id, {\n                    id,\n                    position: internalNode.position || { x: 0, y: 0 },\n                    distance: {\n                        x: mousePos.x - internalNode.internals.positionAbsolute.x,\n                        y: mousePos.y - internalNode.internals.positionAbsolute.y,\n                    },\n                    extent: internalNode.extent,\n                    parentId: internalNode.parentId,\n                    origin: internalNode.origin,\n                    expandParent: internalNode.expandParent,\n                    internals: {\n                        positionAbsolute: internalNode.internals.positionAbsolute || { x: 0, y: 0 },\n                    },\n                    measured: {\n                        width: internalNode.measured.width ?? 0,\n                        height: internalNode.measured.height ?? 0,\n                    },\n                });\n            }\n        }\n    }\n    return dragItems;\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeLookup, dragging = true, }) {\n    const nodesFromDragItems = [];\n    for (const [id, dragItem] of dragItems) {\n        const node = nodeLookup.get(id)?.internals.userNode;\n        if (node) {\n            nodesFromDragItems.push({\n                ...node,\n                position: dragItem.position,\n                dragging,\n            });\n        }\n    }\n    if (!nodeId) {\n        return [nodesFromDragItems[0], nodesFromDragItems];\n    }\n    const node = nodeLookup.get(nodeId)?.internals.userNode;\n    return [\n        !node\n            ? nodesFromDragItems[0]\n            : {\n                ...node,\n                position: dragItems.get(nodeId)?.position || node.position,\n                dragging,\n            },\n        nodesFromDragItems,\n    ];\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction XYDrag({ onNodeMouseDown, getStoreItems, onDragStart, onDrag, onDragStop, }) {\n    let lastPos = { x: null, y: null };\n    let autoPanId = 0;\n    let dragItems = new Map();\n    let autoPanStarted = false;\n    let mousePosition = { x: 0, y: 0 };\n    let containerBounds = null;\n    let dragStarted = false;\n    let d3Selection = null;\n    let abortDrag = false; // prevents unintentional dragging on multitouch\n    // public functions\n    function update({ noDragClassName, handleSelector, domNode, isSelectable, nodeId, nodeClickDistance = 0, }) {\n        d3Selection = select(domNode);\n        function updateNodes({ x, y }, dragEvent) {\n            const { nodeLookup, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onNodeDrag, onSelectionDrag, onError, updateNodePositions, } = getStoreItems();\n            lastPos = { x, y };\n            let hasChange = false;\n            let nodesBox = { x: 0, y: 0, x2: 0, y2: 0 };\n            if (dragItems.size > 1 && nodeExtent) {\n                const rect = getInternalNodesBounds(dragItems);\n                nodesBox = rectToBox(rect);\n            }\n            for (const [id, dragItem] of dragItems) {\n                if (!nodeLookup.has(id)) {\n                    // if the node is not in the nodeLookup anymore, it was probably deleted while dragging\n                    // and we don't need to update it anymore\n                    continue;\n                }\n                let nextPosition = { x: x - dragItem.distance.x, y: y - dragItem.distance.y };\n                if (snapToGrid) {\n                    nextPosition = snapPosition(nextPosition, snapGrid);\n                }\n                // if there is selection with multiple nodes and a node extent is set, we need to adjust the node extent for each node\n                // based on its position so that the node stays at it's position relative to the selection.\n                let adjustedNodeExtent = [\n                    [nodeExtent[0][0], nodeExtent[0][1]],\n                    [nodeExtent[1][0], nodeExtent[1][1]],\n                ];\n                if (dragItems.size > 1 && nodeExtent && !dragItem.extent) {\n                    const { positionAbsolute } = dragItem.internals;\n                    const x1 = positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n                    const x2 = positionAbsolute.x + dragItem.measured.width - nodesBox.x2 + nodeExtent[1][0];\n                    const y1 = positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n                    const y2 = positionAbsolute.y + dragItem.measured.height - nodesBox.y2 + nodeExtent[1][1];\n                    adjustedNodeExtent = [\n                        [x1, y1],\n                        [x2, y2],\n                    ];\n                }\n                const { position, positionAbsolute } = calculateNodePosition({\n                    nodeId: id,\n                    nextPosition,\n                    nodeLookup,\n                    nodeExtent: adjustedNodeExtent,\n                    nodeOrigin,\n                    onError,\n                });\n                // we want to make sure that we only fire a change event when there is a change\n                hasChange = hasChange || dragItem.position.x !== position.x || dragItem.position.y !== position.y;\n                dragItem.position = position;\n                dragItem.internals.positionAbsolute = positionAbsolute;\n            }\n            if (!hasChange) {\n                return;\n            }\n            updateNodePositions(dragItems, true);\n            if (dragEvent && (onDrag || onNodeDrag || (!nodeId && onSelectionDrag))) {\n                const [currentNode, currentNodes] = getEventHandlerParams({\n                    nodeId,\n                    dragItems,\n                    nodeLookup,\n                });\n                onDrag?.(dragEvent, dragItems, currentNode, currentNodes);\n                onNodeDrag?.(dragEvent, currentNode, currentNodes);\n                if (!nodeId) {\n                    onSelectionDrag?.(dragEvent, currentNodes);\n                }\n            }\n        }\n        async function autoPan() {\n            if (!containerBounds) {\n                return;\n            }\n            const { transform, panBy, autoPanSpeed } = getStoreItems();\n            const [xMovement, yMovement] = calcAutoPan(mousePosition, containerBounds, autoPanSpeed);\n            if (xMovement !== 0 || yMovement !== 0) {\n                lastPos.x = (lastPos.x ?? 0) - xMovement / transform[2];\n                lastPos.y = (lastPos.y ?? 0) - yMovement / transform[2];\n                if (await panBy({ x: xMovement, y: yMovement })) {\n                    updateNodes(lastPos, null);\n                }\n            }\n            autoPanId = requestAnimationFrame(autoPan);\n        }\n        function startDrag(event) {\n            const { nodeLookup, multiSelectionActive, nodesDraggable, transform, snapGrid, snapToGrid, selectNodesOnDrag, onNodeDragStart, onSelectionDragStart, unselectNodesAndEdges, } = getStoreItems();\n            dragStarted = true;\n            if ((!selectNodesOnDrag || !isSelectable) && !multiSelectionActive && nodeId) {\n                if (!nodeLookup.get(nodeId)?.selected) {\n                    // we need to reset selected nodes when selectNodesOnDrag=false\n                    unselectNodesAndEdges();\n                }\n            }\n            if (isSelectable && selectNodesOnDrag && nodeId) {\n                onNodeMouseDown?.(nodeId);\n            }\n            const pointerPos = getPointerPosition(event.sourceEvent, { transform, snapGrid, snapToGrid, containerBounds });\n            lastPos = pointerPos;\n            dragItems = getDragItems(nodeLookup, nodesDraggable, pointerPos, nodeId);\n            if (dragItems.size > 0 && (onDragStart || onNodeDragStart || (!nodeId && onSelectionDragStart))) {\n                const [currentNode, currentNodes] = getEventHandlerParams({\n                    nodeId,\n                    dragItems,\n                    nodeLookup,\n                });\n                onDragStart?.(event.sourceEvent, dragItems, currentNode, currentNodes);\n                onNodeDragStart?.(event.sourceEvent, currentNode, currentNodes);\n                if (!nodeId) {\n                    onSelectionDragStart?.(event.sourceEvent, currentNodes);\n                }\n            }\n        }\n        const d3DragInstance = drag()\n            .clickDistance(nodeClickDistance)\n            .on('start', (event) => {\n            const { domNode, nodeDragThreshold, transform, snapGrid, snapToGrid } = getStoreItems();\n            containerBounds = domNode?.getBoundingClientRect() || null;\n            abortDrag = false;\n            if (nodeDragThreshold === 0) {\n                startDrag(event);\n            }\n            const pointerPos = getPointerPosition(event.sourceEvent, { transform, snapGrid, snapToGrid, containerBounds });\n            lastPos = pointerPos;\n            mousePosition = getEventPosition(event.sourceEvent, containerBounds);\n        })\n            .on('drag', (event) => {\n            const { autoPanOnNodeDrag, transform, snapGrid, snapToGrid, nodeDragThreshold, nodeLookup } = getStoreItems();\n            const pointerPos = getPointerPosition(event.sourceEvent, { transform, snapGrid, snapToGrid, containerBounds });\n            if ((event.sourceEvent.type === 'touchmove' && event.sourceEvent.touches.length > 1) ||\n                // if user deletes a node while dragging, we need to abort the drag to prevent errors\n                (nodeId && !nodeLookup.has(nodeId))) {\n                abortDrag = true;\n            }\n            if (abortDrag) {\n                return;\n            }\n            if (!autoPanStarted && autoPanOnNodeDrag && dragStarted) {\n                autoPanStarted = true;\n                autoPan();\n            }\n            if (!dragStarted) {\n                const x = pointerPos.xSnapped - (lastPos.x ?? 0);\n                const y = pointerPos.ySnapped - (lastPos.y ?? 0);\n                const distance = Math.sqrt(x * x + y * y);\n                if (distance > nodeDragThreshold) {\n                    startDrag(event);\n                }\n            }\n            // skip events without movement\n            if ((lastPos.x !== pointerPos.xSnapped || lastPos.y !== pointerPos.ySnapped) && dragItems && dragStarted) {\n                // dragEvent = event.sourceEvent as MouseEvent;\n                mousePosition = getEventPosition(event.sourceEvent, containerBounds);\n                updateNodes(pointerPos, event.sourceEvent);\n            }\n        })\n            .on('end', (event) => {\n            if (!dragStarted || abortDrag) {\n                return;\n            }\n            autoPanStarted = false;\n            dragStarted = false;\n            cancelAnimationFrame(autoPanId);\n            if (dragItems.size > 0) {\n                const { nodeLookup, updateNodePositions, onNodeDragStop, onSelectionDragStop } = getStoreItems();\n                updateNodePositions(dragItems, false);\n                if (onDragStop || onNodeDragStop || (!nodeId && onSelectionDragStop)) {\n                    const [currentNode, currentNodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems,\n                        nodeLookup,\n                        dragging: false,\n                    });\n                    onDragStop?.(event.sourceEvent, dragItems, currentNode, currentNodes);\n                    onNodeDragStop?.(event.sourceEvent, currentNode, currentNodes);\n                    if (!nodeId) {\n                        onSelectionDragStop?.(event.sourceEvent, currentNodes);\n                    }\n                }\n            }\n        })\n            .filter((event) => {\n            const target = event.target;\n            const isDraggable = !event.button &&\n                (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, domNode)) &&\n                (!handleSelector || hasSelector(target, handleSelector, domNode));\n            return isDraggable;\n        });\n        d3Selection.call(d3DragInstance);\n    }\n    function destroy() {\n        d3Selection?.on('.drag', null);\n    }\n    return {\n        update,\n        destroy,\n    };\n}\n\nfunction getNodesWithinDistance(position, nodeLookup, distance) {\n    const nodes = [];\n    const rect = {\n        x: position.x - distance,\n        y: position.y - distance,\n        width: distance * 2,\n        height: distance * 2,\n    };\n    for (const node of nodeLookup.values()) {\n        if (getOverlappingArea(rect, nodeToRect(node)) > 0) {\n            nodes.push(node);\n        }\n    }\n    return nodes;\n}\n// this distance is used for the area around the user pointer\n// while doing a connection for finding the closest nodes\nconst ADDITIONAL_DISTANCE = 250;\nfunction getClosestHandle(position, connectionRadius, nodeLookup, fromHandle) {\n    let closestHandles = [];\n    let minDistance = Infinity;\n    const closeNodes = getNodesWithinDistance(position, nodeLookup, connectionRadius + ADDITIONAL_DISTANCE);\n    for (const node of closeNodes) {\n        const allHandles = [...(node.internals.handleBounds?.source ?? []), ...(node.internals.handleBounds?.target ?? [])];\n        for (const handle of allHandles) {\n            // if the handle is the same as the fromHandle we skip it\n            if (fromHandle.nodeId === handle.nodeId && fromHandle.type === handle.type && fromHandle.id === handle.id) {\n                continue;\n            }\n            // determine absolute position of the handle\n            const { x, y } = getHandlePosition(node, handle, handle.position, true);\n            const distance = Math.sqrt(Math.pow(x - position.x, 2) + Math.pow(y - position.y, 2));\n            if (distance > connectionRadius) {\n                continue;\n            }\n            if (distance < minDistance) {\n                closestHandles = [{ ...handle, x, y }];\n                minDistance = distance;\n            }\n            else if (distance === minDistance) {\n                // when multiple handles are on the same distance we collect all of them\n                closestHandles.push({ ...handle, x, y });\n            }\n        }\n    }\n    if (!closestHandles.length) {\n        return null;\n    }\n    // when multiple handles overlay each other we prefer the opposite handle\n    if (closestHandles.length > 1) {\n        const oppositeHandleType = fromHandle.type === 'source' ? 'target' : 'source';\n        return closestHandles.find((handle) => handle.type === oppositeHandleType) ?? closestHandles[0];\n    }\n    return closestHandles[0];\n}\nfunction getHandle(nodeId, handleType, handleId, nodeLookup, connectionMode, withAbsolutePosition = false) {\n    const node = nodeLookup.get(nodeId);\n    if (!node) {\n        return null;\n    }\n    const handles = connectionMode === 'strict'\n        ? node.internals.handleBounds?.[handleType]\n        : [...(node.internals.handleBounds?.source ?? []), ...(node.internals.handleBounds?.target ?? [])];\n    const handle = (handleId ? handles?.find((h) => h.id === handleId) : handles?.[0]) ?? null;\n    return handle && withAbsolutePosition\n        ? { ...handle, ...getHandlePosition(node, handle, handle.position, true) }\n        : handle;\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction isConnectionValid(isInsideConnectionRadius, isHandleValid) {\n    let isValid = null;\n    if (isHandleValid) {\n        isValid = true;\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        isValid = false;\n    }\n    return isValid;\n}\n\nconst alwaysValid = () => true;\nfunction onPointerDown(event, { connectionMode, connectionRadius, handleId, nodeId, edgeUpdaterType, isTarget, domNode, nodeLookup, lib, autoPanOnConnect, flowId, panBy, cancelConnection, onConnectStart, onConnect, onConnectEnd, isValidConnection = alwaysValid, onReconnectEnd, updateConnection, getTransform, getFromHandle, autoPanSpeed, }) {\n    // when xyflow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    let autoPanId = 0;\n    let closestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    const fromHandleInternal = getHandle(nodeId, handleType, handleId, nodeLookup, connectionMode);\n    if (!fromHandleInternal) {\n        return;\n    }\n    let position = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    function autoPan() {\n        if (!autoPanOnConnect || !containerBounds) {\n            return;\n        }\n        const [x, y] = calcAutoPan(position, containerBounds, autoPanSpeed);\n        panBy({ x, y });\n        autoPanId = requestAnimationFrame(autoPan);\n    }\n    // Stays the same for all consecutive pointermove events\n    const fromHandle = {\n        ...fromHandleInternal,\n        nodeId,\n        type: handleType,\n        position: fromHandleInternal.position,\n    };\n    const fromNodeInternal = nodeLookup.get(nodeId);\n    const from = getHandlePosition(fromNodeInternal, fromHandle, Position.Left, true);\n    const newConnection = {\n        inProgress: true,\n        isValid: null,\n        from,\n        fromHandle,\n        fromPosition: fromHandle.position,\n        fromNode: fromNodeInternal,\n        to: position,\n        toHandle: null,\n        toPosition: oppositePosition[fromHandle.position],\n        toNode: null,\n    };\n    updateConnection(newConnection);\n    let previousConnection = newConnection;\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        if (!getFromHandle() || !fromHandle) {\n            onPointerUp(event);\n            return;\n        }\n        const transform = getTransform();\n        position = getEventPosition(event, containerBounds);\n        closestHandle = getClosestHandle(pointToRendererPoint(position, transform, false, [1, 1]), connectionRadius, nodeLookup, fromHandle);\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        const result = isValidHandle(event, {\n            handle: closestHandle,\n            connectionMode,\n            fromNodeId: nodeId,\n            fromHandleId: handleId,\n            fromType: isTarget ? 'target' : 'source',\n            isValidConnection,\n            doc,\n            lib,\n            flowId,\n            nodeLookup,\n        });\n        handleDomNode = result.handleDomNode;\n        connection = result.connection;\n        isValid = isConnectionValid(!!closestHandle, result.isValid);\n        const newConnection = {\n            // from stays the same\n            ...previousConnection,\n            isValid,\n            to: closestHandle && isValid\n                ? rendererPointToPoint({ x: closestHandle.x, y: closestHandle.y }, transform)\n                : position,\n            toHandle: result.toHandle,\n            toPosition: isValid && result.toHandle ? result.toHandle.position : oppositePosition[fromHandle.position],\n            toNode: result.toHandle ? nodeLookup.get(result.toHandle.nodeId) : null,\n        };\n        // we don't want to trigger an update when the connection\n        // is snapped to the same handle as before\n        if (isValid &&\n            closestHandle &&\n            previousConnection.toHandle &&\n            newConnection.toHandle &&\n            previousConnection.toHandle.type === newConnection.toHandle.type &&\n            previousConnection.toHandle.nodeId === newConnection.toHandle.nodeId &&\n            previousConnection.toHandle.id === newConnection.toHandle.id &&\n            previousConnection.to.x === newConnection.to.x &&\n            previousConnection.to.y === newConnection.to.y) {\n            return;\n        }\n        updateConnection(newConnection);\n        previousConnection = newConnection;\n    }\n    function onPointerUp(event) {\n        if ((closestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { inProgress, ...connectionState } = previousConnection;\n        const finalConnectionState = {\n            ...connectionState,\n            toPosition: previousConnection.toHandle ? previousConnection.toPosition : null,\n        };\n        onConnectEnd?.(event, finalConnectionState);\n        if (edgeUpdaterType) {\n            onReconnectEnd?.(event, finalConnectionState);\n        }\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(event, { handle, connectionMode, fromNodeId, fromHandleId, fromType, doc, lib, flowId, isValidConnection = alwaysValid, nodeLookup, }) {\n    const isTarget = fromType === 'target';\n    const handleDomNode = handle\n        ? doc.querySelector(`.${lib}-flow__handle[data-id=\"${flowId}-${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`)\n        : null;\n    const { x, y } = getEventPosition(event);\n    const handleBelow = doc.elementFromPoint(x, y);\n    // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n    // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n    const handleToCheck = handleBelow?.classList.contains(`${lib}-flow__handle`) ? handleBelow : handleDomNode;\n    const result = {\n        handleDomNode: handleToCheck,\n        isValid: false,\n        connection: null,\n        toHandle: null,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connectable = handleToCheck.classList.contains('connectable');\n        const connectableEnd = handleToCheck.classList.contains('connectableend');\n        if (!handleNodeId || !handleType) {\n            return result;\n        }\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        const isConnectable = connectable && connectableEnd;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = isConnectable &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        result.isValid = isValid && isValidConnection(connection);\n        result.toHandle = getHandle(handleNodeId, handleType, handleId, nodeLookup, connectionMode, false);\n    }\n    return result;\n}\nconst XYHandle = {\n    onPointerDown,\n    isValid: isValidHandle,\n};\n\nfunction XYMinimap({ domNode, panZoom, getTransform, getViewScale }) {\n    const selection = select(domNode);\n    function update({ translateExtent, width, height, zoomStep = 10, pannable = true, zoomable = true, inversePan = false, }) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const zoomHandler = (event) => {\n            const transform = getTransform();\n            if (event.sourceEvent.type !== 'wheel' || !panZoom) {\n                return;\n            }\n            const pinchDelta = -event.sourceEvent.deltaY *\n                (event.sourceEvent.deltaMode === 1 ? 0.05 : event.sourceEvent.deltaMode ? 1 : 0.002) *\n                zoomStep;\n            const nextZoom = transform[2] * Math.pow(2, pinchDelta);\n            panZoom.scaleTo(nextZoom);\n        };\n        let panStart = [0, 0];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const panStartHandler = (event) => {\n            if (event.sourceEvent.type === 'mousedown' || event.sourceEvent.type === 'touchstart') {\n                panStart = [\n                    event.sourceEvent.clientX ?? event.sourceEvent.touches[0].clientX,\n                    event.sourceEvent.clientY ?? event.sourceEvent.touches[0].clientY,\n                ];\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const panHandler = (event) => {\n            const transform = getTransform();\n            if ((event.sourceEvent.type !== 'mousemove' && event.sourceEvent.type !== 'touchmove') || !panZoom) {\n                return;\n            }\n            const panCurrent = [\n                event.sourceEvent.clientX ?? event.sourceEvent.touches[0].clientX,\n                event.sourceEvent.clientY ?? event.sourceEvent.touches[0].clientY,\n            ];\n            const panDelta = [panCurrent[0] - panStart[0], panCurrent[1] - panStart[1]];\n            panStart = panCurrent;\n            const moveScale = getViewScale() * Math.max(transform[2], Math.log(transform[2])) * (inversePan ? -1 : 1);\n            const position = {\n                x: transform[0] - panDelta[0] * moveScale,\n                y: transform[1] - panDelta[1] * moveScale,\n            };\n            const extent = [\n                [0, 0],\n                [width, height],\n            ];\n            panZoom.setViewportConstrained({\n                x: position.x,\n                y: position.y,\n                zoom: transform[2],\n            }, extent, translateExtent);\n        };\n        const zoomAndPanHandler = zoom()\n            .on('start', panStartHandler)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            .on('zoom', pannable ? panHandler : null)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            .on('zoom.wheel', zoomable ? zoomHandler : null);\n        selection.call(zoomAndPanHandler, {});\n    }\n    function destroy() {\n        selection.on('zoom', null);\n    }\n    return {\n        update,\n        destroy,\n        pointer,\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst viewChanged = (prevViewport, eventViewport) => prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\nconst transformToViewport = (transform) => ({\n    x: transform.x,\n    y: transform.y,\n    zoom: transform.k,\n});\nconst viewportToTransform = ({ x, y, zoom }) => zoomIdentity.translate(x, y).scale(zoom);\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst getD3Transition = (selection, duration = 0, onEnd = () => { }) => {\n    const hasDuration = typeof duration === 'number' && duration > 0;\n    if (!hasDuration) {\n        onEnd();\n    }\n    return hasDuration ? selection.transition().duration(duration).on('end', onEnd) : selection;\n};\nconst wheelDelta = (event) => {\n    const factor = event.ctrlKey && isMacOs() ? 10 : 1;\n    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\n\nfunction createPanOnScrollHandler({ zoomPanValues, noWheelClassName, d3Selection, d3Zoom, panOnScrollMode, panOnScrollSpeed, zoomOnPinch, onPanZoomStart, onPanZoom, onPanZoomEnd, }) {\n    return (event) => {\n        if (isWrappedWithClass(event, noWheelClassName)) {\n            return false;\n        }\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        const currentZoom = d3Selection.property('__zoom').k || 1;\n        // macos sets ctrlKey=true for pinch gesture on a trackpad\n        if (event.ctrlKey && zoomOnPinch) {\n            const point = pointer(event);\n            const pinchDelta = wheelDelta(event);\n            const zoom = currentZoom * Math.pow(2, pinchDelta);\n            // @ts-ignore\n            d3Zoom.scaleTo(d3Selection, zoom, point, event);\n            return;\n        }\n        // increase scroll speed in firefox\n        // firefox: deltaMode === 1; chrome: deltaMode === 0\n        const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n        let deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n        let deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n        // this enables vertical scrolling with shift + scroll on windows\n        if (!isMacOs() && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n            deltaX = event.deltaY * deltaNormalize;\n            deltaY = 0;\n        }\n        d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed, \n        // @ts-ignore\n        { internal: true });\n        const nextViewport = transformToViewport(d3Selection.property('__zoom'));\n        clearTimeout(zoomPanValues.panScrollTimeout);\n        // for pan on scroll we need to handle the event calls on our own\n        // we can't use the start, zoom and end events from d3-zoom\n        // because start and move gets called on every scroll event and not once at the beginning\n        if (!zoomPanValues.isPanScrolling) {\n            zoomPanValues.isPanScrolling = true;\n            onPanZoomStart?.(event, nextViewport);\n        }\n        if (zoomPanValues.isPanScrolling) {\n            onPanZoom?.(event, nextViewport);\n            zoomPanValues.panScrollTimeout = setTimeout(() => {\n                onPanZoomEnd?.(event, nextViewport);\n                zoomPanValues.isPanScrolling = false;\n            }, 150);\n        }\n    };\n}\nfunction createZoomOnScrollHandler({ noWheelClassName, preventScrolling, d3ZoomHandler }) {\n    return function (event, d) {\n        // we still want to enable pinch zooming even if preventScrolling is set to false\n        const preventZoom = !preventScrolling && event.type === 'wheel' && !event.ctrlKey;\n        if (preventZoom || isWrappedWithClass(event, noWheelClassName)) {\n            return null;\n        }\n        event.preventDefault();\n        d3ZoomHandler.call(this, event, d);\n    };\n}\nfunction createPanZoomStartHandler({ zoomPanValues, onDraggingChange, onPanZoomStart }) {\n    return (event) => {\n        if (event.sourceEvent?.internal) {\n            return;\n        }\n        const viewport = transformToViewport(event.transform);\n        // we need to remember it here, because it's always 0 in the \"zoom\" event\n        zoomPanValues.mouseButton = event.sourceEvent?.button || 0;\n        zoomPanValues.isZoomingOrPanning = true;\n        zoomPanValues.prevViewport = viewport;\n        if (event.sourceEvent?.type === 'mousedown') {\n            onDraggingChange(true);\n        }\n        if (onPanZoomStart) {\n            onPanZoomStart?.(event.sourceEvent, viewport);\n        }\n    };\n}\nfunction createPanZoomHandler({ zoomPanValues, panOnDrag, onPaneContextMenu, onTransformChange, onPanZoom, }) {\n    return (event) => {\n        zoomPanValues.usedRightMouseButton = !!(onPaneContextMenu && isRightClickPan(panOnDrag, zoomPanValues.mouseButton ?? 0));\n        if (!event.sourceEvent?.sync) {\n            onTransformChange([event.transform.x, event.transform.y, event.transform.k]);\n        }\n        if (onPanZoom && !event.sourceEvent?.internal) {\n            onPanZoom?.(event.sourceEvent, transformToViewport(event.transform));\n        }\n    };\n}\nfunction createPanZoomEndHandler({ zoomPanValues, panOnDrag, panOnScroll, onDraggingChange, onPanZoomEnd, onPaneContextMenu, }) {\n    return (event) => {\n        if (event.sourceEvent?.internal) {\n            return;\n        }\n        zoomPanValues.isZoomingOrPanning = false;\n        if (onPaneContextMenu &&\n            isRightClickPan(panOnDrag, zoomPanValues.mouseButton ?? 0) &&\n            !zoomPanValues.usedRightMouseButton &&\n            event.sourceEvent) {\n            onPaneContextMenu(event.sourceEvent);\n        }\n        zoomPanValues.usedRightMouseButton = false;\n        onDraggingChange(false);\n        if (onPanZoomEnd && viewChanged(zoomPanValues.prevViewport, event.transform)) {\n            const viewport = transformToViewport(event.transform);\n            zoomPanValues.prevViewport = viewport;\n            clearTimeout(zoomPanValues.timerId);\n            zoomPanValues.timerId = setTimeout(() => {\n                onPanZoomEnd?.(event.sourceEvent, viewport);\n            }, \n            // we need a setTimeout for panOnScroll to supress multiple end events fired during scroll\n            panOnScroll ? 150 : 0);\n        }\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createFilter({ zoomActivationKeyPressed, zoomOnScroll, zoomOnPinch, panOnDrag, panOnScroll, zoomOnDoubleClick, userSelectionActive, noWheelClassName, noPanClassName, lib, }) {\n    return (event) => {\n        const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n        const pinchZoom = zoomOnPinch && event.ctrlKey;\n        if (event.button === 1 &&\n            event.type === 'mousedown' &&\n            (isWrappedWithClass(event, `${lib}-flow__node`) || isWrappedWithClass(event, `${lib}-flow__edge`))) {\n            return true;\n        }\n        // if all interactions are disabled, we prevent all zoom events\n        if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n            return false;\n        }\n        // during a selection we prevent all other interactions\n        if (userSelectionActive) {\n            return false;\n        }\n        // if the target element is inside an element with the nowheel class, we prevent zooming\n        if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n            return false;\n        }\n        // if the target element is inside an element with the nopan class, we prevent panning\n        if (isWrappedWithClass(event, noPanClassName) &&\n            (event.type !== 'wheel' || (panOnScroll && event.type === 'wheel' && !zoomActivationKeyPressed))) {\n            return false;\n        }\n        if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n            return false;\n        }\n        if (!zoomOnPinch && event.type === 'touchstart' && event.touches?.length > 1) {\n            event.preventDefault(); // if you manage to start with 2 touches, we prevent native zoom\n            return false;\n        }\n        // when there is no scroll handling enabled, we prevent all wheel events\n        if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n            return false;\n        }\n        // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n        if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n            return false;\n        }\n        // if the pane is only movable using allowed clicks\n        if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && event.type === 'mousedown') {\n            return false;\n        }\n        // We only allow right clicks if pan on drag is set to right click\n        const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n        // default filter for d3-zoom\n        return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n    };\n}\n\nfunction XYPanZoom({ domNode, minZoom, maxZoom, paneClickDistance, translateExtent, viewport, onPanZoom, onPanZoomStart, onPanZoomEnd, onDraggingChange, }) {\n    const zoomPanValues = {\n        isZoomingOrPanning: false,\n        usedRightMouseButton: false,\n        prevViewport: { x: 0, y: 0, zoom: 0 },\n        mouseButton: 0,\n        timerId: undefined,\n        panScrollTimeout: undefined,\n        isPanScrolling: false,\n    };\n    const bbox = domNode.getBoundingClientRect();\n    const d3ZoomInstance = zoom()\n        .clickDistance(!isNumeric(paneClickDistance) || paneClickDistance < 0 ? 0 : paneClickDistance)\n        .scaleExtent([minZoom, maxZoom])\n        .translateExtent(translateExtent);\n    const d3Selection = select(domNode).call(d3ZoomInstance);\n    setViewportConstrained({\n        x: viewport.x,\n        y: viewport.y,\n        zoom: clamp(viewport.zoom, minZoom, maxZoom),\n    }, [\n        [0, 0],\n        [bbox.width, bbox.height],\n    ], translateExtent);\n    const d3ZoomHandler = d3Selection.on('wheel.zoom');\n    const d3DblClickZoomHandler = d3Selection.on('dblclick.zoom');\n    d3ZoomInstance.wheelDelta(wheelDelta);\n    function setTransform(transform, options) {\n        if (d3Selection) {\n            return new Promise((resolve) => {\n                d3ZoomInstance?.transform(getD3Transition(d3Selection, options?.duration, () => resolve(true)), transform);\n            });\n        }\n        return Promise.resolve(false);\n    }\n    // public functions\n    function update({ noWheelClassName, noPanClassName, onPaneContextMenu, userSelectionActive, panOnScroll, panOnDrag, panOnScrollMode, panOnScrollSpeed, preventScrolling, zoomOnPinch, zoomOnScroll, zoomOnDoubleClick, zoomActivationKeyPressed, lib, onTransformChange, }) {\n        if (userSelectionActive && !zoomPanValues.isZoomingOrPanning) {\n            destroy();\n        }\n        const isPanOnScroll = panOnScroll && !zoomActivationKeyPressed && !userSelectionActive;\n        const wheelHandler = isPanOnScroll\n            ? createPanOnScrollHandler({\n                zoomPanValues,\n                noWheelClassName,\n                d3Selection,\n                d3Zoom: d3ZoomInstance,\n                panOnScrollMode,\n                panOnScrollSpeed,\n                zoomOnPinch,\n                onPanZoomStart,\n                onPanZoom,\n                onPanZoomEnd,\n            })\n            : createZoomOnScrollHandler({\n                noWheelClassName,\n                preventScrolling,\n                d3ZoomHandler,\n            });\n        d3Selection.on('wheel.zoom', wheelHandler, { passive: false });\n        if (!userSelectionActive) {\n            // pan zoom start\n            const startHandler = createPanZoomStartHandler({\n                zoomPanValues,\n                onDraggingChange,\n                onPanZoomStart,\n            });\n            d3ZoomInstance.on('start', startHandler);\n            // pan zoom\n            const panZoomHandler = createPanZoomHandler({\n                zoomPanValues,\n                panOnDrag,\n                onPaneContextMenu: !!onPaneContextMenu,\n                onPanZoom,\n                onTransformChange,\n            });\n            d3ZoomInstance.on('zoom', panZoomHandler);\n            // pan zoom end\n            const panZoomEndHandler = createPanZoomEndHandler({\n                zoomPanValues,\n                panOnDrag,\n                panOnScroll,\n                onPaneContextMenu,\n                onPanZoomEnd,\n                onDraggingChange,\n            });\n            d3ZoomInstance.on('end', panZoomEndHandler);\n        }\n        const filter = createFilter({\n            zoomActivationKeyPressed,\n            panOnDrag,\n            zoomOnScroll,\n            panOnScroll,\n            zoomOnDoubleClick,\n            zoomOnPinch,\n            userSelectionActive,\n            noPanClassName,\n            noWheelClassName,\n            lib,\n        });\n        d3ZoomInstance.filter(filter);\n        // We cannot add zoomOnDoubleClick to the filter above because\n        // double tapping on touch screens circumvents the filter and\n        // dblclick.zoom is fired on the selection directly\n        if (zoomOnDoubleClick) {\n            d3Selection.on('dblclick.zoom', d3DblClickZoomHandler);\n        }\n        else {\n            d3Selection.on('dblclick.zoom', null);\n        }\n    }\n    function destroy() {\n        d3ZoomInstance.on('zoom', null);\n    }\n    async function setViewportConstrained(viewport, extent, translateExtent) {\n        const nextTransform = viewportToTransform(viewport);\n        const contrainedTransform = d3ZoomInstance?.constrain()(nextTransform, extent, translateExtent);\n        if (contrainedTransform) {\n            await setTransform(contrainedTransform);\n        }\n        return new Promise((resolve) => resolve(contrainedTransform));\n    }\n    async function setViewport(viewport, options) {\n        const nextTransform = viewportToTransform(viewport);\n        await setTransform(nextTransform, options);\n        return new Promise((resolve) => resolve(nextTransform));\n    }\n    function syncViewport(viewport) {\n        if (d3Selection) {\n            const nextTransform = viewportToTransform(viewport);\n            const currentTransform = d3Selection.property('__zoom');\n            if (currentTransform.k !== viewport.zoom ||\n                currentTransform.x !== viewport.x ||\n                currentTransform.y !== viewport.y) {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                d3ZoomInstance?.transform(d3Selection, nextTransform, null, { sync: true });\n            }\n        }\n    }\n    function getViewport() {\n        const transform = d3Selection ? zoomTransform(d3Selection.node()) : { x: 0, y: 0, k: 1 };\n        return { x: transform.x, y: transform.y, zoom: transform.k };\n    }\n    function scaleTo(zoom, options) {\n        if (d3Selection) {\n            return new Promise((resolve) => {\n                d3ZoomInstance?.scaleTo(getD3Transition(d3Selection, options?.duration, () => resolve(true)), zoom);\n            });\n        }\n        return Promise.resolve(false);\n    }\n    function scaleBy(factor, options) {\n        if (d3Selection) {\n            return new Promise((resolve) => {\n                d3ZoomInstance?.scaleBy(getD3Transition(d3Selection, options?.duration, () => resolve(true)), factor);\n            });\n        }\n        return Promise.resolve(false);\n    }\n    function setScaleExtent(scaleExtent) {\n        d3ZoomInstance?.scaleExtent(scaleExtent);\n    }\n    function setTranslateExtent(translateExtent) {\n        d3ZoomInstance?.translateExtent(translateExtent);\n    }\n    function setClickDistance(distance) {\n        const validDistance = !isNumeric(distance) || distance < 0 ? 0 : distance;\n        d3ZoomInstance?.clickDistance(validDistance);\n    }\n    return {\n        update,\n        destroy,\n        setViewport,\n        setViewportConstrained,\n        getViewport,\n        scaleTo,\n        scaleBy,\n        setScaleExtent,\n        setTranslateExtent,\n        syncViewport,\n        setClickDistance,\n    };\n}\n\nvar ResizeControlVariant;\n(function (ResizeControlVariant) {\n    ResizeControlVariant[\"Line\"] = \"line\";\n    ResizeControlVariant[\"Handle\"] = \"handle\";\n})(ResizeControlVariant || (ResizeControlVariant = {}));\nconst XY_RESIZER_HANDLE_POSITIONS = ['top-left', 'top-right', 'bottom-left', 'bottom-right'];\nconst XY_RESIZER_LINE_POSITIONS = ['top', 'right', 'bottom', 'left'];\n\n/**\n * Get all connecting edges for a given set of nodes\n * @param width - new width of the node\n * @param prevWidth - previous width of the node\n * @param height - new height of the node\n * @param prevHeight - previous height of the node\n * @param affectsX - whether to invert the resize direction for the x axis\n * @param affectsY - whether to invert the resize direction for the y axis\n * @returns array of two numbers representing the direction of the resize for each axis, 0 = no change, 1 = increase, -1 = decrease\n */\nfunction getResizeDirection({ width, prevWidth, height, prevHeight, affectsX, affectsY, }) {\n    const deltaWidth = width - prevWidth;\n    const deltaHeight = height - prevHeight;\n    const direction = [deltaWidth > 0 ? 1 : deltaWidth < 0 ? -1 : 0, deltaHeight > 0 ? 1 : deltaHeight < 0 ? -1 : 0];\n    if (deltaWidth && affectsX) {\n        direction[0] = direction[0] * -1;\n    }\n    if (deltaHeight && affectsY) {\n        direction[1] = direction[1] * -1;\n    }\n    return direction;\n}\n/**\n * Parses the control position that is being dragged to dimensions that are being resized\n * @param controlPosition - position of the control that is being dragged\n * @returns isHorizontal, isVertical, affectsX, affectsY,\n */\nfunction getControlDirection(controlPosition) {\n    const isHorizontal = controlPosition.includes('right') || controlPosition.includes('left');\n    const isVertical = controlPosition.includes('bottom') || controlPosition.includes('top');\n    const affectsX = controlPosition.includes('left');\n    const affectsY = controlPosition.includes('top');\n    return {\n        isHorizontal,\n        isVertical,\n        affectsX,\n        affectsY,\n    };\n}\nfunction getLowerExtentClamp(lowerExtent, lowerBound) {\n    return Math.max(0, lowerBound - lowerExtent);\n}\nfunction getUpperExtentClamp(upperExtent, upperBound) {\n    return Math.max(0, upperExtent - upperBound);\n}\nfunction getSizeClamp(size, minSize, maxSize) {\n    return Math.max(0, minSize - size, size - maxSize);\n}\nfunction xor(a, b) {\n    return a ? !b : b;\n}\n/**\n * Calculates new width & height and x & y of node after resize based on pointer position\n * @description - Buckle up, this is a chunky one... If you want to determine the new dimensions of a node after a resize,\n * you have to account for all possible restrictions: min/max width/height of the node, the maximum extent the node is allowed\n * to move in (in this case: resize into) determined by the parent node, the minimal extent determined by child nodes\n * with expandParent or extent: 'parent' set and oh yeah, these things also have to work with keepAspectRatio!\n * The way this is done is by determining how much each of these restricting actually restricts the resize and then applying the\n * strongest restriction. Because the resize affects x, y and width, height and width, height of a opposing side with keepAspectRatio,\n * the resize amount is always kept in distX & distY amount (the distance in mouse movement)\n * Instead of clamping each value, we first calculate the biggest 'clamp' (for the lack of a better name) and then apply it to all values.\n * To complicate things nodeOrigin has to be taken into account as well. This is done by offsetting the nodes as if their origin is [0, 0],\n * then calculating the restrictions as usual\n * @param startValues - starting values of resize\n * @param controlDirection - dimensions affected by the resize\n * @param pointerPosition - the current pointer position corrected for snapping\n * @param boundaries - minimum and maximum dimensions of the node\n * @param keepAspectRatio - prevent changes of asprect ratio\n * @returns x, y, width and height of the node after resize\n */\nfunction getDimensionsAfterResize(startValues, controlDirection, pointerPosition, boundaries, keepAspectRatio, nodeOrigin, extent, childExtent) {\n    let { affectsX, affectsY } = controlDirection;\n    const { isHorizontal, isVertical } = controlDirection;\n    const isDiagonal = isHorizontal && isVertical;\n    const { xSnapped, ySnapped } = pointerPosition;\n    const { minWidth, maxWidth, minHeight, maxHeight } = boundaries;\n    const { x: startX, y: startY, width: startWidth, height: startHeight, aspectRatio } = startValues;\n    let distX = Math.floor(isHorizontal ? xSnapped - startValues.pointerX : 0);\n    let distY = Math.floor(isVertical ? ySnapped - startValues.pointerY : 0);\n    const newWidth = startWidth + (affectsX ? -distX : distX);\n    const newHeight = startHeight + (affectsY ? -distY : distY);\n    const originOffsetX = -nodeOrigin[0] * startWidth;\n    const originOffsetY = -nodeOrigin[1] * startHeight;\n    // Check if maxWidth, minWWidth, maxHeight, minHeight are restricting the resize\n    let clampX = getSizeClamp(newWidth, minWidth, maxWidth);\n    let clampY = getSizeClamp(newHeight, minHeight, maxHeight);\n    // Check if extent is restricting the resize\n    if (extent) {\n        let xExtentClamp = 0;\n        let yExtentClamp = 0;\n        if (affectsX && distX < 0) {\n            xExtentClamp = getLowerExtentClamp(startX + distX + originOffsetX, extent[0][0]);\n        }\n        else if (!affectsX && distX > 0) {\n            xExtentClamp = getUpperExtentClamp(startX + newWidth + originOffsetX, extent[1][0]);\n        }\n        if (affectsY && distY < 0) {\n            yExtentClamp = getLowerExtentClamp(startY + distY + originOffsetY, extent[0][1]);\n        }\n        else if (!affectsY && distY > 0) {\n            yExtentClamp = getUpperExtentClamp(startY + newHeight + originOffsetY, extent[1][1]);\n        }\n        clampX = Math.max(clampX, xExtentClamp);\n        clampY = Math.max(clampY, yExtentClamp);\n    }\n    // Check if the child extent is restricting the resize\n    if (childExtent) {\n        let xExtentClamp = 0;\n        let yExtentClamp = 0;\n        if (affectsX && distX > 0) {\n            xExtentClamp = getUpperExtentClamp(startX + distX, childExtent[0][0]);\n        }\n        else if (!affectsX && distX < 0) {\n            xExtentClamp = getLowerExtentClamp(startX + newWidth, childExtent[1][0]);\n        }\n        if (affectsY && distY > 0) {\n            yExtentClamp = getUpperExtentClamp(startY + distY, childExtent[0][1]);\n        }\n        else if (!affectsY && distY < 0) {\n            yExtentClamp = getLowerExtentClamp(startY + newHeight, childExtent[1][1]);\n        }\n        clampX = Math.max(clampX, xExtentClamp);\n        clampY = Math.max(clampY, yExtentClamp);\n    }\n    // Check if the aspect ratio resizing of the other side is restricting the resize\n    if (keepAspectRatio) {\n        if (isHorizontal) {\n            // Check if the max dimensions might be restricting the resize\n            const aspectHeightClamp = getSizeClamp(newWidth / aspectRatio, minHeight, maxHeight) * aspectRatio;\n            clampX = Math.max(clampX, aspectHeightClamp);\n            // Check if the extent is restricting the resize\n            if (extent) {\n                let aspectExtentClamp = 0;\n                if ((!affectsX && !affectsY) || (affectsX && !affectsY && isDiagonal)) {\n                    aspectExtentClamp =\n                        getUpperExtentClamp(startY + originOffsetY + newWidth / aspectRatio, extent[1][1]) * aspectRatio;\n                }\n                else {\n                    aspectExtentClamp =\n                        getLowerExtentClamp(startY + originOffsetY + (affectsX ? distX : -distX) / aspectRatio, extent[0][1]) *\n                            aspectRatio;\n                }\n                clampX = Math.max(clampX, aspectExtentClamp);\n            }\n            // Check if the child extent is restricting the resize\n            if (childExtent) {\n                let aspectExtentClamp = 0;\n                if ((!affectsX && !affectsY) || (affectsX && !affectsY && isDiagonal)) {\n                    aspectExtentClamp = getLowerExtentClamp(startY + newWidth / aspectRatio, childExtent[1][1]) * aspectRatio;\n                }\n                else {\n                    aspectExtentClamp =\n                        getUpperExtentClamp(startY + (affectsX ? distX : -distX) / aspectRatio, childExtent[0][1]) * aspectRatio;\n                }\n                clampX = Math.max(clampX, aspectExtentClamp);\n            }\n        }\n        // Do the same thing for vertical resizing\n        if (isVertical) {\n            const aspectWidthClamp = getSizeClamp(newHeight * aspectRatio, minWidth, maxWidth) / aspectRatio;\n            clampY = Math.max(clampY, aspectWidthClamp);\n            if (extent) {\n                let aspectExtentClamp = 0;\n                if ((!affectsX && !affectsY) || (affectsY && !affectsX && isDiagonal)) {\n                    aspectExtentClamp =\n                        getUpperExtentClamp(startX + newHeight * aspectRatio + originOffsetX, extent[1][0]) / aspectRatio;\n                }\n                else {\n                    aspectExtentClamp =\n                        getLowerExtentClamp(startX + (affectsY ? distY : -distY) * aspectRatio + originOffsetX, extent[0][0]) /\n                            aspectRatio;\n                }\n                clampY = Math.max(clampY, aspectExtentClamp);\n            }\n            if (childExtent) {\n                let aspectExtentClamp = 0;\n                if ((!affectsX && !affectsY) || (affectsY && !affectsX && isDiagonal)) {\n                    aspectExtentClamp = getLowerExtentClamp(startX + newHeight * aspectRatio, childExtent[1][0]) / aspectRatio;\n                }\n                else {\n                    aspectExtentClamp =\n                        getUpperExtentClamp(startX + (affectsY ? distY : -distY) * aspectRatio, childExtent[0][0]) / aspectRatio;\n                }\n                clampY = Math.max(clampY, aspectExtentClamp);\n            }\n        }\n    }\n    distY = distY + (distY < 0 ? clampY : -clampY);\n    distX = distX + (distX < 0 ? clampX : -clampX);\n    if (keepAspectRatio) {\n        if (isDiagonal) {\n            if (newWidth > newHeight * aspectRatio) {\n                distY = (xor(affectsX, affectsY) ? -distX : distX) / aspectRatio;\n            }\n            else {\n                distX = (xor(affectsX, affectsY) ? -distY : distY) * aspectRatio;\n            }\n        }\n        else {\n            if (isHorizontal) {\n                distY = distX / aspectRatio;\n                affectsY = affectsX;\n            }\n            else {\n                distX = distY * aspectRatio;\n                affectsX = affectsY;\n            }\n        }\n    }\n    const x = affectsX ? startX + distX : startX;\n    const y = affectsY ? startY + distY : startY;\n    return {\n        width: startWidth + (affectsX ? -distX : distX),\n        height: startHeight + (affectsY ? -distY : distY),\n        x: nodeOrigin[0] * distX * (!affectsX ? 1 : -1) + x,\n        y: nodeOrigin[1] * distY * (!affectsY ? 1 : -1) + y,\n    };\n}\n\nconst initPrevValues = { width: 0, height: 0, x: 0, y: 0 };\nconst initStartValues = {\n    ...initPrevValues,\n    pointerX: 0,\n    pointerY: 0,\n    aspectRatio: 1,\n};\nfunction nodeToParentExtent(node) {\n    return [\n        [0, 0],\n        [node.measured.width, node.measured.height],\n    ];\n}\nfunction nodeToChildExtent(child, parent, nodeOrigin) {\n    const x = parent.position.x + child.position.x;\n    const y = parent.position.y + child.position.y;\n    const width = child.measured.width ?? 0;\n    const height = child.measured.height ?? 0;\n    const originOffsetX = nodeOrigin[0] * width;\n    const originOffsetY = nodeOrigin[1] * height;\n    return [\n        [x - originOffsetX, y - originOffsetY],\n        [x + width - originOffsetX, y + height - originOffsetY],\n    ];\n}\nfunction XYResizer({ domNode, nodeId, getStoreItems, onChange, onEnd }) {\n    const selection = select(domNode);\n    function update({ controlPosition, boundaries, keepAspectRatio, onResizeStart, onResize, onResizeEnd, shouldResize, }) {\n        let prevValues = { ...initPrevValues };\n        let startValues = { ...initStartValues };\n        const controlDirection = getControlDirection(controlPosition);\n        let node = undefined;\n        let containerBounds = null;\n        let childNodes = [];\n        let parentNode = undefined; // Needed to fix expandParent\n        let parentExtent = undefined;\n        let childExtent = undefined;\n        const dragHandler = drag()\n            .on('start', (event) => {\n            const { nodeLookup, transform, snapGrid, snapToGrid, nodeOrigin, paneDomNode } = getStoreItems();\n            node = nodeLookup.get(nodeId);\n            if (!node) {\n                return;\n            }\n            containerBounds = paneDomNode?.getBoundingClientRect() ?? null;\n            const { xSnapped, ySnapped } = getPointerPosition(event.sourceEvent, {\n                transform,\n                snapGrid,\n                snapToGrid,\n                containerBounds,\n            });\n            prevValues = {\n                width: node.measured.width ?? 0,\n                height: node.measured.height ?? 0,\n                x: node.position.x ?? 0,\n                y: node.position.y ?? 0,\n            };\n            startValues = {\n                ...prevValues,\n                pointerX: xSnapped,\n                pointerY: ySnapped,\n                aspectRatio: prevValues.width / prevValues.height,\n            };\n            parentNode = undefined;\n            if (node.parentId && (node.extent === 'parent' || node.expandParent)) {\n                parentNode = nodeLookup.get(node.parentId);\n                parentExtent = parentNode && node.extent === 'parent' ? nodeToParentExtent(parentNode) : undefined;\n            }\n            // Collect all child nodes to correct their relative positions when top/left changes\n            // Determine largest minimal extent the parent node is allowed to resize to\n            childNodes = [];\n            childExtent = undefined;\n            for (const [childId, child] of nodeLookup) {\n                if (child.parentId === nodeId) {\n                    childNodes.push({\n                        id: childId,\n                        position: { ...child.position },\n                        extent: child.extent,\n                    });\n                    if (child.extent === 'parent' || child.expandParent) {\n                        const extent = nodeToChildExtent(child, node, child.origin ?? nodeOrigin);\n                        if (childExtent) {\n                            childExtent = [\n                                [Math.min(extent[0][0], childExtent[0][0]), Math.min(extent[0][1], childExtent[0][1])],\n                                [Math.max(extent[1][0], childExtent[1][0]), Math.max(extent[1][1], childExtent[1][1])],\n                            ];\n                        }\n                        else {\n                            childExtent = extent;\n                        }\n                    }\n                }\n            }\n            onResizeStart?.(event, { ...prevValues });\n        })\n            .on('drag', (event) => {\n            const { transform, snapGrid, snapToGrid, nodeOrigin: storeNodeOrigin } = getStoreItems();\n            const pointerPosition = getPointerPosition(event.sourceEvent, {\n                transform,\n                snapGrid,\n                snapToGrid,\n                containerBounds,\n            });\n            const childChanges = [];\n            if (!node) {\n                return;\n            }\n            const { x: prevX, y: prevY, width: prevWidth, height: prevHeight } = prevValues;\n            const change = {};\n            const nodeOrigin = node.origin ?? storeNodeOrigin;\n            const { width, height, x, y } = getDimensionsAfterResize(startValues, controlDirection, pointerPosition, boundaries, keepAspectRatio, nodeOrigin, parentExtent, childExtent);\n            const isWidthChange = width !== prevWidth;\n            const isHeightChange = height !== prevHeight;\n            const isXPosChange = x !== prevX && isWidthChange;\n            const isYPosChange = y !== prevY && isHeightChange;\n            if (!isXPosChange && !isYPosChange && !isWidthChange && !isHeightChange) {\n                return;\n            }\n            if (isXPosChange || isYPosChange || nodeOrigin[0] === 1 || nodeOrigin[1] === 1) {\n                change.x = isXPosChange ? x : prevValues.x;\n                change.y = isYPosChange ? y : prevValues.y;\n                prevValues.x = change.x;\n                prevValues.y = change.y;\n                // when top/left changes, correct the relative positions of child nodes\n                // so that they stay in the same position\n                if (childNodes.length > 0) {\n                    const xChange = x - prevX;\n                    const yChange = y - prevY;\n                    for (const childNode of childNodes) {\n                        childNode.position = {\n                            x: childNode.position.x - xChange + nodeOrigin[0] * (width - prevWidth),\n                            y: childNode.position.y - yChange + nodeOrigin[1] * (height - prevHeight),\n                        };\n                        childChanges.push(childNode);\n                    }\n                }\n            }\n            if (isWidthChange || isHeightChange) {\n                change.width = isWidthChange ? width : prevValues.width;\n                change.height = isHeightChange ? height : prevValues.height;\n                prevValues.width = change.width;\n                prevValues.height = change.height;\n            }\n            // Fix expandParent when resizing from top/left\n            if (parentNode && node.expandParent) {\n                const xLimit = nodeOrigin[0] * (change.width ?? 0);\n                if (change.x && change.x < xLimit) {\n                    prevValues.x = xLimit;\n                    startValues.x = startValues.x - (change.x - xLimit);\n                }\n                const yLimit = nodeOrigin[1] * (change.height ?? 0);\n                if (change.y && change.y < yLimit) {\n                    prevValues.y = yLimit;\n                    startValues.y = startValues.y - (change.y - yLimit);\n                }\n            }\n            const direction = getResizeDirection({\n                width: prevValues.width,\n                prevWidth,\n                height: prevValues.height,\n                prevHeight,\n                affectsX: controlDirection.affectsX,\n                affectsY: controlDirection.affectsY,\n            });\n            const nextValues = { ...prevValues, direction };\n            const callResize = shouldResize?.(event, nextValues);\n            if (callResize === false) {\n                return;\n            }\n            onResize?.(event, nextValues);\n            onChange(change, childChanges);\n        })\n            .on('end', (event) => {\n            onResizeEnd?.(event, { ...prevValues });\n            onEnd?.();\n        });\n        selection.call(dragHandler);\n    }\n    function destroy() {\n        selection.on('.drag', null);\n    }\n    return {\n        update,\n        destroy,\n    };\n}\n\nexport { ConnectionLineType, ConnectionMode, MarkerType, PanOnScrollMode, Position, ResizeControlVariant, SelectionMode, XYDrag, XYHandle, XYMinimap, XYPanZoom, XYResizer, XY_RESIZER_HANDLE_POSITIONS, XY_RESIZER_LINE_POSITIONS, addEdge, adoptUserNodes, areConnectionMapsEqual, boxToRect, calcAutoPan, calculateNodePosition, clamp, clampPosition, clampPositionToParent, createMarkerIds, devWarn, elementSelectionKeys, errorMessages, evaluateAbsolutePosition, fitView, getBezierEdgeCenter, getBezierPath, getBoundsOfBoxes, getBoundsOfRects, getConnectedEdges, getConnectionStatus, getDimensions, getEdgeCenter, getEdgePosition, getElementsToRemove, getElevatedEdgeZIndex, getEventPosition, getFitViewNodes, getHandleBounds, getHandlePosition, getHostForElement, getIncomers, getInternalNodesBounds, getMarkerId, getNodeDimensions, getNodePositionWithOrigin, getNodeToolbarTransform, getNodesBounds, getNodesInside, getOutgoers, getOverlappingArea, getPointerPosition, getSmoothStepPath, getStraightPath, getViewportForBounds, handleConnectionChange, handleExpandParent, infiniteExtent, initialConnection, isCoordinateExtent, isEdgeBase, isEdgeVisible, isInputDOMNode, isInternalNodeBase, isMacOs, isMouseEvent, isNodeBase, isNumeric, isRectObject, nodeHasDimensions, nodeToBox, nodeToRect, oppositePosition, panBy, pointToRendererPoint, reconnectEdge, rectToBox, rendererPointToPoint, shallowNodeData, snapPosition, updateAbsolutePositions, updateConnectionLookup, updateNodeInternals };\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","import ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\nimport { createStore } from 'zustand/vanilla';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nconst identity = (arg) => arg;\nfunction useStoreWithEqualityFn(api, selector = identity, equalityFn) {\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createWithEqualityFnImpl = (createState, defaultEqualityFn) => {\n  const api = createStore(createState);\n  const useBoundStoreWithEqualityFn = (selector, equalityFn = defaultEqualityFn) => useStoreWithEqualityFn(api, selector, equalityFn);\n  Object.assign(useBoundStoreWithEqualityFn, api);\n  return useBoundStoreWithEqualityFn;\n};\nconst createWithEqualityFn = (createState, defaultEqualityFn) => createState ? createWithEqualityFnImpl(createState, defaultEqualityFn) : createWithEqualityFnImpl;\n\nexport { createWithEqualityFn, useStoreWithEqualityFn };\n","function shallow$1(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  if (objA instanceof Map && objB instanceof Map) {\n    if (objA.size !== objB.size) return false;\n    for (const [key, value] of objA) {\n      if (!Object.is(value, objB.get(key))) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (objA instanceof Set && objB instanceof Set) {\n    if (objA.size !== objB.size) return false;\n    for (const value of objA) {\n      if (!objB.has(value)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (const keyA of keysA) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keyA) || !Object.is(objA[keyA], objB[keyA])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar shallow = (objA, objB) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { shallow } from 'zustand/shallow'`.\"\n    );\n  }\n  return shallow$1(objA, objB);\n};\n\nexport { shallow as default, shallow$1 as shallow };\n","\"use client\"\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport cc from 'classcat';\nimport { errorMessages, infiniteExtent, isInputDOMNode, getFitViewNodes, getDimensions, fitView, getViewportForBounds, pointToRendererPoint, rendererPointToPoint, isNodeBase, isEdgeBase, getElementsToRemove, isRectObject, nodeToRect, getOverlappingArea, getNodesBounds, evaluateAbsolutePosition, XYPanZoom, PanOnScrollMode, SelectionMode, getEventPosition, getNodesInside, XYDrag, snapPosition, calculateNodePosition, Position, ConnectionMode, isMouseEvent, XYHandle, getHostForElement, addEdge, getInternalNodesBounds, isNumeric, nodeHasDimensions, getNodeDimensions, elementSelectionKeys, isEdgeVisible, MarkerType, createMarkerIds, getBezierEdgeCenter, getSmoothStepPath, getStraightPath, getBezierPath, getEdgePosition, getElevatedEdgeZIndex, getMarkerId, getConnectionStatus, ConnectionLineType, updateConnectionLookup, adoptUserNodes, initialConnection, devWarn, updateNodeInternals, updateAbsolutePositions, handleExpandParent, panBy, isMacOs, areConnectionMapsEqual, handleConnectionChange, shallowNodeData, XYMinimap, getBoundsOfRects, ResizeControlVariant, XYResizer, XY_RESIZER_LINE_POSITIONS, XY_RESIZER_HANDLE_POSITIONS, getNodeToolbarTransform } from '@xyflow/system';\nexport { ConnectionLineType, ConnectionMode, MarkerType, PanOnScrollMode, Position, SelectionMode, addEdge, getBezierEdgeCenter, getBezierPath, getConnectedEdges, getEdgeCenter, getIncomers, getNodesBounds, getOutgoers, getSmoothStepPath, getStraightPath, getViewportForBounds, reconnectEdge } from '@xyflow/system';\nimport { createContext, useContext, useMemo, useEffect, useRef, useState, forwardRef, useLayoutEffect, useCallback, memo } from 'react';\nimport { useStoreWithEqualityFn, createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst zustandErrorMessage = errorMessages['error001']();\n/**\n * Hook for accessing the internal store. Should only be used in rare cases.\n *\n * @public\n * @param selector\n * @param equalityFn\n * @returns The selected state slice\n *\n * @example\n * const nodes = useStore((state: ReactFlowState<MyNodeType>) => state.nodes);\n *\n */\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStoreWithEqualityFn(store, selector, equalityFn);\n}\nfunction useStoreApi() {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n    }), [store]);\n}\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$o = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$o);\n    return (jsx(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle, children: ariaLiveMessage }));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (jsxs(Fragment, { children: [jsxs(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style, children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' '] }), jsx(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style, children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\" }), !disableKeyboardA11y && jsx(AriaLiveMessage, { rfId: rfId })] }));\n}\n\nconst selector$n = (s) => (s.userSelectionActive ? 'none' : 'all');\nfunction Panel({ position = 'top-left', children, className, style, ...rest }) {\n    const pointerEvents = useStore(selector$n);\n    const positionClasses = `${position}`.split('-');\n    return (jsx(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest, children: children }));\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (jsx(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\", children: jsx(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\", children: \"React Flow\" }) }));\n}\n\nconst selector$m = (s) => {\n    const selectedNodes = [];\n    const selectedEdges = [];\n    for (const [, node] of s.nodeLookup) {\n        if (node.selected) {\n            selectedNodes.push(node.internals.userNode);\n        }\n    }\n    for (const [, edge] of s.edgeLookup) {\n        if (edge.selected) {\n            selectedEdges.push(edge);\n        }\n    }\n    return { selectedNodes, selectedEdges };\n};\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\nfunction SelectionListenerInner({ onSelectionChange }) {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$m, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChangeHandlers.forEach((fn) => fn(params));\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n}\nconst changeSelector = (s) => !!s.onSelectionChangeHandlers;\nfunction SelectionListener({ onSelectionChange }) {\n    const storeHasSelectionChangeHandlers = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChangeHandlers) {\n        return jsx(SelectionListenerInner, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst defaultNodeOrigin = [0, 0];\nconst defaultViewport = { x: 0, y: 0, zoom: 1 };\n\n/*\n * This component helps us to update the store with the values coming from the user.\n * We distinguish between values we can update directly with `useDirectStoreUpdater` (like `snapGrid`)\n * and values that have a dedicated setter function in the store (like `setNodes`).\n */\n// these fields exist in the global store and we need to keep them up to date\nconst reactFlowFieldsToTrack = [\n    'nodes',\n    'edges',\n    'defaultNodes',\n    'defaultEdges',\n    'onConnect',\n    'onConnectStart',\n    'onConnectEnd',\n    'onClickConnectStart',\n    'onClickConnectEnd',\n    'nodesDraggable',\n    'nodesConnectable',\n    'nodesFocusable',\n    'edgesFocusable',\n    'edgesReconnectable',\n    'elevateNodesOnSelect',\n    'elevateEdgesOnSelect',\n    'minZoom',\n    'maxZoom',\n    'nodeExtent',\n    'onNodesChange',\n    'onEdgesChange',\n    'elementsSelectable',\n    'connectionMode',\n    'snapGrid',\n    'snapToGrid',\n    'translateExtent',\n    'connectOnClick',\n    'defaultEdgeOptions',\n    'fitView',\n    'fitViewOptions',\n    'onNodesDelete',\n    'onEdgesDelete',\n    'onDelete',\n    'onNodeDrag',\n    'onNodeDragStart',\n    'onNodeDragStop',\n    'onSelectionDrag',\n    'onSelectionDragStart',\n    'onSelectionDragStop',\n    'onMoveStart',\n    'onMove',\n    'onMoveEnd',\n    'noPanClassName',\n    'nodeOrigin',\n    'autoPanOnConnect',\n    'autoPanOnNodeDrag',\n    'onError',\n    'connectionRadius',\n    'isValidConnection',\n    'selectNodesOnDrag',\n    'nodeDragThreshold',\n    'onBeforeDelete',\n    'debug',\n    'autoPanSpeed',\n    'paneClickDistance',\n];\n// rfId doesn't exist in ReactFlowProps, but it's one of the fields we want to update\nconst fieldsToTrack = [...reactFlowFieldsToTrack, 'rfId'];\nconst selector$l = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setPaneClickDistance: s.setPaneClickDistance,\n});\nconst initPrevValues = {\n    // these are values that are also passed directly to other components\n    // than the StoreUpdater. We can reduce the number of setStore calls\n    // by setting the same values here as prev fields.\n    translateExtent: infiniteExtent,\n    nodeOrigin: defaultNodeOrigin,\n    minZoom: 0.5,\n    maxZoom: 2,\n    elementsSelectable: true,\n    noPanClassName: 'nopan',\n    rfId: '1',\n    paneClickDistance: 0,\n};\nfunction StoreUpdater(props) {\n    const { setNodes, setEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, setDefaultNodesAndEdges, setPaneClickDistance, } = useStore(selector$l, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        setDefaultNodesAndEdges(props.defaultNodes, props.defaultEdges);\n        return () => {\n            // when we reset the store we also need to reset the previous fields\n            previousFields.current = initPrevValues;\n            reset();\n        };\n    }, []);\n    const previousFields = useRef(initPrevValues);\n    useEffect(() => {\n        for (const fieldName of fieldsToTrack) {\n            const fieldValue = props[fieldName];\n            const previousFieldValue = previousFields.current[fieldName];\n            if (fieldValue === previousFieldValue)\n                continue;\n            if (typeof props[fieldName] === 'undefined')\n                continue;\n            // Custom handling with dedicated setters for some fields\n            if (fieldName === 'nodes')\n                setNodes(fieldValue);\n            else if (fieldName === 'edges')\n                setEdges(fieldValue);\n            else if (fieldName === 'minZoom')\n                setMinZoom(fieldValue);\n            else if (fieldName === 'maxZoom')\n                setMaxZoom(fieldValue);\n            else if (fieldName === 'translateExtent')\n                setTranslateExtent(fieldValue);\n            else if (fieldName === 'nodeExtent')\n                setNodeExtent(fieldValue);\n            else if (fieldName === 'paneClickDistance')\n                setPaneClickDistance(fieldValue);\n            // Renamed fields\n            else if (fieldName === 'fitView')\n                store.setState({ fitViewOnInit: fieldValue });\n            else if (fieldName === 'fitViewOptions')\n                store.setState({ fitViewOnInitOptions: fieldValue });\n            // General case\n            else\n                store.setState({ [fieldName]: fieldValue });\n        }\n        previousFields.current = props;\n    }, \n    // Only re-run the effect if one of the fields we track changes\n    fieldsToTrack.map((fieldName) => props[fieldName]));\n    return null;\n}\n\nfunction getMediaQuery() {\n    if (typeof window === 'undefined' || !window.matchMedia) {\n        return null;\n    }\n    return window.matchMedia('(prefers-color-scheme: dark)');\n}\n/**\n * Hook for receiving the current color mode class 'dark' or 'light'.\n *\n * @internal\n * @param colorMode - The color mode to use ('dark', 'light' or 'system')\n */\nfunction useColorModeClass(colorMode) {\n    const [colorModeClass, setColorModeClass] = useState(colorMode === 'system' ? null : colorMode);\n    useEffect(() => {\n        if (colorMode !== 'system') {\n            setColorModeClass(colorMode);\n            return;\n        }\n        const mediaQuery = getMediaQuery();\n        const updateColorModeClass = () => setColorModeClass(mediaQuery?.matches ? 'dark' : 'light');\n        updateColorModeClass();\n        mediaQuery?.addEventListener('change', updateColorModeClass);\n        return () => {\n            mediaQuery?.removeEventListener('change', updateColorModeClass);\n        };\n    }, [colorMode]);\n    return colorModeClass !== null ? colorModeClass : getMediaQuery()?.matches ? 'dark' : 'light';\n}\n\nconst defaultDoc = typeof document !== 'undefined' ? document : null;\n/**\n * Hook for handling key events.\n *\n * @public\n * @param param.keyCode - The key code (string or array of strings) to use\n * @param param.options - Options\n * @returns boolean\n */\nfunction useKeyPress(\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nkeyCode = null, options = { target: defaultDoc, actInsideInputWithModifier: true }) {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember if a modifier key is pressed in order to track it\n    const modifierPressed = useRef(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr\n                .filter((kc) => typeof kc === 'string')\n                // we first replace all '+' with '\\n'  which we will use to split the keys on\n                // then we replace '\\n\\n' with '\\n+', this way we can also support the combination 'key++'\n                // in the end we simply split on '\\n' to get the key array\n                .map((kc) => kc.replace('+', '\\n').replace('\\n\\n', '\\n+').split('\\n'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        const target = options?.target || defaultDoc;\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n                const preventAction = (!modifierPressed.current || (modifierPressed.current && !options.actInsideInputWithModifier)) &&\n                    isInputDOMNode(event);\n                if (preventAction) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                const preventAction = (!modifierPressed.current || (modifierPressed.current && !options.actInsideInputWithModifier)) &&\n                    isInputDOMNode(event);\n                if (preventAction) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n                // fix for Mac: when cmd key is pressed, keyup is not triggered for any other key, see: https://stackoverflow.com/questions/27380018/when-cmd-key-is-kept-pressed-keyup-is-not-triggered-for-any-other-key\n                if (event.key === 'Meta') {\n                    pressedKeys.current.clear();\n                }\n                modifierPressed.current = false;\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            target?.addEventListener('keydown', downHandler);\n            target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            window.addEventListener('contextmenu', resetHandler);\n            return () => {\n                target?.removeEventListener('keydown', downHandler);\n                target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n                window.removeEventListener('contextmenu', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n}\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\n/**\n * Hook for getting viewport helper functions.\n *\n * @internal\n * @returns viewport helper functions\n */\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    return useMemo(() => {\n        return {\n            zoomIn: (options) => {\n                const { panZoom } = store.getState();\n                return panZoom ? panZoom.scaleBy(1.2, { duration: options?.duration }) : Promise.resolve(false);\n            },\n            zoomOut: (options) => {\n                const { panZoom } = store.getState();\n                return panZoom ? panZoom.scaleBy(1 / 1.2, { duration: options?.duration }) : Promise.resolve(false);\n            },\n            zoomTo: (zoomLevel, options) => {\n                const { panZoom } = store.getState();\n                return panZoom ? panZoom.scaleTo(zoomLevel, { duration: options?.duration }) : Promise.resolve(false);\n            },\n            getZoom: () => store.getState().transform[2],\n            setViewport: async (viewport, options) => {\n                const { transform: [tX, tY, tZoom], panZoom, } = store.getState();\n                if (!panZoom) {\n                    return Promise.resolve(false);\n                }\n                await panZoom.setViewport({\n                    x: viewport.x ?? tX,\n                    y: viewport.y ?? tY,\n                    zoom: viewport.zoom ?? tZoom,\n                }, { duration: options?.duration });\n                return Promise.resolve(true);\n            },\n            getViewport: () => {\n                const [x, y, zoom] = store.getState().transform;\n                return { x, y, zoom };\n            },\n            fitView: (options) => {\n                const { nodeLookup, minZoom, maxZoom, panZoom, domNode } = store.getState();\n                if (!panZoom || !domNode) {\n                    return Promise.resolve(false);\n                }\n                const fitViewNodes = getFitViewNodes(nodeLookup, options);\n                const { width, height } = getDimensions(domNode);\n                return fitView({\n                    nodes: fitViewNodes,\n                    width,\n                    height,\n                    minZoom,\n                    maxZoom,\n                    panZoom,\n                }, options);\n            },\n            setCenter: async (x, y, options) => {\n                const { width, height, maxZoom, panZoom } = store.getState();\n                const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                const centerX = width / 2 - x * nextZoom;\n                const centerY = height / 2 - y * nextZoom;\n                if (!panZoom) {\n                    return Promise.resolve(false);\n                }\n                await panZoom.setViewport({\n                    x: centerX,\n                    y: centerY,\n                    zoom: nextZoom,\n                }, { duration: options?.duration });\n                return Promise.resolve(true);\n            },\n            fitBounds: async (bounds, options) => {\n                const { width, height, minZoom, maxZoom, panZoom } = store.getState();\n                const viewport = getViewportForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                if (!panZoom) {\n                    return Promise.resolve(false);\n                }\n                await panZoom.setViewport(viewport, { duration: options?.duration });\n                return Promise.resolve(true);\n            },\n            screenToFlowPosition: (clientPosition, options = { snapToGrid: true }) => {\n                const { transform, snapGrid, domNode } = store.getState();\n                if (!domNode) {\n                    return clientPosition;\n                }\n                const { x: domX, y: domY } = domNode.getBoundingClientRect();\n                const correctedPosition = {\n                    x: clientPosition.x - domX,\n                    y: clientPosition.y - domY,\n                };\n                return pointToRendererPoint(correctedPosition, transform, options.snapToGrid, snapGrid);\n            },\n            flowToScreenPosition: (flowPosition) => {\n                const { transform, domNode } = store.getState();\n                if (!domNode) {\n                    return flowPosition;\n                }\n                const { x: domX, y: domY } = domNode.getBoundingClientRect();\n                const rendererPosition = rendererPointToPoint(flowPosition, transform);\n                return {\n                    x: rendererPosition.x + domX,\n                    y: rendererPosition.y + domY,\n                };\n            },\n        };\n    }, []);\n};\n\n// This function applies changes to nodes or edges that are triggered by React Flow internally.\n// When you drag a node for example, React Flow will send a position change update.\n// This function then applies the changes and returns the updated elements.\nfunction applyChanges(changes, elements) {\n    const updatedElements = [];\n    // By storing a map of changes for each element, we can a quick lookup as we\n    // iterate over the elements array!\n    const changesMap = new Map();\n    const addItemChanges = [];\n    for (const change of changes) {\n        if (change.type === 'add') {\n            addItemChanges.push(change);\n            continue;\n        }\n        else if (change.type === 'remove' || change.type === 'replace') {\n            // For a 'remove' change we can safely ignore any other changes queued for\n            // the same element, it's going to be removed anyway!\n            changesMap.set(change.id, [change]);\n        }\n        else {\n            const elementChanges = changesMap.get(change.id);\n            if (elementChanges) {\n                // If we have some changes queued already, we can do a mutable update of\n                // that array and save ourselves some copying.\n                elementChanges.push(change);\n            }\n            else {\n                changesMap.set(change.id, [change]);\n            }\n        }\n    }\n    for (const element of elements) {\n        const changes = changesMap.get(element.id);\n        // When there are no changes for an element we can just push it unmodified,\n        // no need to copy it.\n        if (!changes) {\n            updatedElements.push(element);\n            continue;\n        }\n        // If we have a 'remove' change queued, it'll be the only change in the array\n        if (changes[0].type === 'remove') {\n            continue;\n        }\n        if (changes[0].type === 'replace') {\n            updatedElements.push({ ...changes[0].item });\n            continue;\n        }\n        // For other types of changes, we want to start with a shallow copy of the\n        // object so React knows this element has changed. Sequential changes will\n        /// each _mutate_ this object, so there's only ever one copy.\n        const updatedElement = { ...element };\n        for (const change of changes) {\n            applyChange(change, updatedElement);\n        }\n        updatedElements.push(updatedElement);\n    }\n    // we need to wait for all changes to be applied before adding new items\n    // to be able to add them at the correct index\n    if (addItemChanges.length) {\n        addItemChanges.forEach((change) => {\n            if (change.index !== undefined) {\n                updatedElements.splice(change.index, 0, { ...change.item });\n            }\n            else {\n                updatedElements.push({ ...change.item });\n            }\n        });\n    }\n    return updatedElements;\n}\n// Applies a single change to an element. This is a *mutable* update.\nfunction applyChange(change, element) {\n    switch (change.type) {\n        case 'select': {\n            element.selected = change.selected;\n            break;\n        }\n        case 'position': {\n            if (typeof change.position !== 'undefined') {\n                element.position = change.position;\n            }\n            if (typeof change.dragging !== 'undefined') {\n                element.dragging = change.dragging;\n            }\n            break;\n        }\n        case 'dimensions': {\n            if (typeof change.dimensions !== 'undefined') {\n                element.measured ??= {};\n                element.measured.width = change.dimensions.width;\n                element.measured.height = change.dimensions.height;\n                if (change.setAttributes) {\n                    element.width = change.dimensions.width;\n                    element.height = change.dimensions.height;\n                }\n            }\n            if (typeof change.resizing === 'boolean') {\n                element.resizing = change.resizing;\n            }\n            break;\n        }\n    }\n}\n/**\n * Drop in function that applies node changes to an array of nodes.\n * @public\n * @remarks Various events on the <ReactFlow /> component can produce an {@link NodeChange} that describes how to update the edges of your flow in some way.\n If you don't need any custom behaviour, this util can be used to take an array of these changes and apply them to your edges.\n * @param changes - Array of changes to apply\n * @param nodes - Array of nodes to apply the changes to\n * @returns Array of updated nodes\n * @example\n *  const onNodesChange = useCallback(\n      (changes) => {\n        setNodes((oldNodes) => applyNodeChanges(changes, oldNodes));\n      },\n      [setNodes],\n    );\n  \n    return (\n      <ReactFLow nodes={nodes} edges={edges} onNodesChange={onNodesChange} />\n    );\n */\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\n/**\n * Drop in function that applies edge changes to an array of edges.\n * @public\n * @remarks Various events on the <ReactFlow /> component can produce an {@link EdgeChange} that describes how to update the edges of your flow in some way.\n If you don't need any custom behaviour, this util can be used to take an array of these changes and apply them to your edges.\n * @param changes - Array of changes to apply\n * @param edges - Array of edge to apply the changes to\n * @returns Array of updated edges\n * @example\n *  const onEdgesChange = useCallback(\n      (changes) => {\n        setEdges((oldEdges) => applyEdgeChanges(changes, oldEdges));\n      },\n      [setEdges],\n    );\n  \n    return (\n      <ReactFlow nodes={nodes} edges={edges} onEdgesChange={onEdgesChange} />\n    );\n */\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nfunction createSelectionChange(id, selected) {\n    return {\n        id,\n        type: 'select',\n        selected,\n    };\n}\nfunction getSelectionChanges(items, selectedIds = new Set(), mutateItem = false) {\n    const changes = [];\n    for (const [id, item] of items) {\n        const willBeSelected = selectedIds.has(id);\n        // we don't want to set all items to selected=false on the first selection\n        if (!(item.selected === undefined && !willBeSelected) && item.selected !== willBeSelected) {\n            if (mutateItem) {\n                // this hack is needed for nodes. When the user dragged a node, it's selected.\n                // When another node gets dragged, we need to deselect the previous one,\n                // in order to have only one selected node at a time - the onNodesChange callback comes too late here :/\n                item.selected = willBeSelected;\n            }\n            changes.push(createSelectionChange(item.id, willBeSelected));\n        }\n    }\n    return changes;\n}\nfunction getElementsDiffChanges({ items = [], lookup, }) {\n    const changes = [];\n    const itemsLookup = new Map(items.map((item) => [item.id, item]));\n    for (const [index, item] of items.entries()) {\n        const lookupItem = lookup.get(item.id);\n        const storeItem = lookupItem?.internals?.userNode ?? lookupItem;\n        if (storeItem !== undefined && storeItem !== item) {\n            changes.push({ id: item.id, item: item, type: 'replace' });\n        }\n        if (storeItem === undefined) {\n            changes.push({ item: item, type: 'add', index });\n        }\n    }\n    for (const [id] of lookup) {\n        const nextNode = itemsLookup.get(id);\n        if (nextNode === undefined) {\n            changes.push({ id, type: 'remove' });\n        }\n    }\n    return changes;\n}\nfunction elementToRemoveChange(item) {\n    return {\n        id: item.id,\n        type: 'remove',\n    };\n}\n\n/**\n * Test whether an object is useable as a Node\n * @public\n * @remarks In TypeScript this is a type guard that will narrow the type of whatever you pass in to Node if it returns true\n * @param element - The element to test\n * @returns A boolean indicating whether the element is an Node\n */\nconst isNode = (element) => isNodeBase(element);\n/**\n * Test whether an object is useable as an Edge\n * @public\n * @remarks In TypeScript this is a type guard that will narrow the type of whatever you pass in to Edge if it returns true\n * @param element - The element to test\n * @returns A boolean indicating whether the element is an Edge\n */\nconst isEdge = (element) => isEdgeBase(element);\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction fixedForwardRef(render) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return forwardRef(render);\n}\n\n// we need this hook to prevent a warning when using react-flow in SSR\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\n/**\n * This hook returns a queue that can be used to batch updates.\n *\n * @param runQueue - a function that gets called when the queue is flushed\n * @internal\n *\n * @returns a Queue object\n */\nfunction useQueue(runQueue) {\n    // Because we're using a ref above, we need some way to let React know when to\n    // actually process the queue. We increment this number any time we mutate the\n    // queue, creating a new state to trigger the layout effect below.\n    // Using a boolean dirty flag here instead would lead to issues related to\n    // automatic batching. (https://github.com/xyflow/xyflow/issues/4779)\n    const [serial, setSerial] = useState(BigInt(0));\n    // A reference of all the batched updates to process before the next render. We\n    // want a reference here so multiple synchronous calls to `setNodes` etc can be\n    // batched together.\n    const [queue] = useState(() => createQueue(() => setSerial(n => n + BigInt(1))));\n    // Layout effects are guaranteed to run before the next render which means we\n    // shouldn't run into any issues with stale state or weird issues that come from\n    // rendering things one frame later than expected (we used to use `setTimeout`).\n    useIsomorphicLayoutEffect(() => {\n        const queueItems = queue.get();\n        if (queueItems.length) {\n            runQueue(queueItems);\n            queue.reset();\n        }\n    }, [serial]);\n    return queue;\n}\nfunction createQueue(cb) {\n    let queue = [];\n    return {\n        get: () => queue,\n        reset: () => {\n            queue = [];\n        },\n        push: (item) => {\n            queue.push(item);\n            cb();\n        },\n    };\n}\n\nconst BatchContext = createContext(null);\n/**\n * This is a context provider that holds and processes the node and edge update queues\n * that are needed to handle setNodes, addNodes, setEdges and addEdges.\n *\n * @internal\n */\nfunction BatchProvider({ children, }) {\n    const store = useStoreApi();\n    const nodeQueueHandler = useCallback((queueItems) => {\n        const { nodes = [], setNodes, hasDefaultNodes, onNodesChange, nodeLookup } = store.getState();\n        // This is essentially an `Array.reduce` in imperative clothing. Processing\n        // this queue is a relatively hot path so we'd like to avoid the overhead of\n        // array methods where we can.\n        let next = nodes;\n        for (const payload of queueItems) {\n            next = typeof payload === 'function' ? payload(next) : payload;\n        }\n        if (hasDefaultNodes) {\n            setNodes(next);\n        }\n        else if (onNodesChange) {\n            onNodesChange(getElementsDiffChanges({\n                items: next,\n                lookup: nodeLookup,\n            }));\n        }\n    }, []);\n    const nodeQueue = useQueue(nodeQueueHandler);\n    const edgeQueueHandler = useCallback((queueItems) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange, edgeLookup } = store.getState();\n        let next = edges;\n        for (const payload of queueItems) {\n            next = typeof payload === 'function' ? payload(next) : payload;\n        }\n        if (hasDefaultEdges) {\n            setEdges(next);\n        }\n        else if (onEdgesChange) {\n            onEdgesChange(getElementsDiffChanges({\n                items: next,\n                lookup: edgeLookup,\n            }));\n        }\n    }, []);\n    const edgeQueue = useQueue(edgeQueueHandler);\n    const value = useMemo(() => ({ nodeQueue, edgeQueue }), []);\n    return jsx(BatchContext.Provider, { value: value, children: children });\n}\nfunction useBatchContext() {\n    const batchContext = useContext(BatchContext);\n    if (!batchContext) {\n        throw new Error('useBatchContext must be used within a BatchProvider');\n    }\n    return batchContext;\n}\n\nconst selector$k = (s) => !!s.panZoom;\n/**\n * Hook for accessing the ReactFlow instance.\n *\n * @public\n * @returns ReactFlowInstance\n */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const batchContext = useBatchContext();\n    const viewportInitialized = useStore(selector$k);\n    const generalHelper = useMemo(() => {\n        const getInternalNode = (id) => store.getState().nodeLookup.get(id);\n        const setNodes = (payload) => {\n            batchContext.nodeQueue.push(payload);\n        };\n        const setEdges = (payload) => {\n            batchContext.edgeQueue.push(payload);\n        };\n        const getNodeRect = (node) => {\n            const { nodeLookup, nodeOrigin } = store.getState();\n            const nodeToUse = isNode(node) ? node : nodeLookup.get(node.id);\n            const position = nodeToUse.parentId\n                ? evaluateAbsolutePosition(nodeToUse.position, nodeToUse.measured, nodeToUse.parentId, nodeLookup, nodeOrigin)\n                : nodeToUse.position;\n            const nodeWithPosition = {\n                id: nodeToUse.id,\n                position,\n                width: nodeToUse.measured?.width ?? nodeToUse.width,\n                height: nodeToUse.measured?.height ?? nodeToUse.height,\n                data: nodeToUse.data,\n            };\n            return nodeToRect(nodeWithPosition);\n        };\n        const updateNode = (id, nodeUpdate, options = { replace: false }) => {\n            setNodes((prevNodes) => prevNodes.map((node) => {\n                if (node.id === id) {\n                    const nextNode = typeof nodeUpdate === 'function' ? nodeUpdate(node) : nodeUpdate;\n                    return options.replace && isNode(nextNode) ? nextNode : { ...node, ...nextNode };\n                }\n                return node;\n            }));\n        };\n        const updateEdge = (id, edgeUpdate, options = { replace: false }) => {\n            setEdges((prevEdges) => prevEdges.map((edge) => {\n                if (edge.id === id) {\n                    const nextEdge = typeof edgeUpdate === 'function' ? edgeUpdate(edge) : edgeUpdate;\n                    return options.replace && isEdge(nextEdge) ? nextEdge : { ...edge, ...nextEdge };\n                }\n                return edge;\n            }));\n        };\n        return {\n            getNodes: () => store.getState().nodes.map((n) => ({ ...n })),\n            getNode: (id) => getInternalNode(id)?.internals.userNode,\n            getInternalNode,\n            getEdges: () => {\n                const { edges = [] } = store.getState();\n                return edges.map((e) => ({ ...e }));\n            },\n            getEdge: (id) => store.getState().edgeLookup.get(id),\n            setNodes,\n            setEdges,\n            addNodes: (payload) => {\n                const newNodes = Array.isArray(payload) ? payload : [payload];\n                batchContext.nodeQueue.push((nodes) => [...nodes, ...newNodes]);\n            },\n            addEdges: (payload) => {\n                const newEdges = Array.isArray(payload) ? payload : [payload];\n                batchContext.edgeQueue.push((edges) => [...edges, ...newEdges]);\n            },\n            toObject: () => {\n                const { nodes = [], edges = [], transform } = store.getState();\n                const [x, y, zoom] = transform;\n                return {\n                    nodes: nodes.map((n) => ({ ...n })),\n                    edges: edges.map((e) => ({ ...e })),\n                    viewport: {\n                        x,\n                        y,\n                        zoom,\n                    },\n                };\n            },\n            deleteElements: async ({ nodes: nodesToRemove = [], edges: edgesToRemove = [] }) => {\n                const { nodes, edges, onNodesDelete, onEdgesDelete, triggerNodeChanges, triggerEdgeChanges, onDelete, onBeforeDelete, } = store.getState();\n                const { nodes: matchingNodes, edges: matchingEdges } = await getElementsToRemove({\n                    nodesToRemove,\n                    edgesToRemove,\n                    nodes,\n                    edges,\n                    onBeforeDelete,\n                });\n                const hasMatchingEdges = matchingEdges.length > 0;\n                const hasMatchingNodes = matchingNodes.length > 0;\n                if (hasMatchingEdges) {\n                    const edgeChanges = matchingEdges.map(elementToRemoveChange);\n                    onEdgesDelete?.(matchingEdges);\n                    triggerEdgeChanges(edgeChanges);\n                }\n                if (hasMatchingNodes) {\n                    const nodeChanges = matchingNodes.map(elementToRemoveChange);\n                    onNodesDelete?.(matchingNodes);\n                    triggerNodeChanges(nodeChanges);\n                }\n                if (hasMatchingNodes || hasMatchingEdges) {\n                    onDelete?.({ nodes: matchingNodes, edges: matchingEdges });\n                }\n                return { deletedNodes: matchingNodes, deletedEdges: matchingEdges };\n            },\n            getIntersectingNodes: (nodeOrRect, partially = true, nodes) => {\n                const isRect = isRectObject(nodeOrRect);\n                const nodeRect = isRect ? nodeOrRect : getNodeRect(nodeOrRect);\n                const hasNodesOption = nodes !== undefined;\n                if (!nodeRect) {\n                    return [];\n                }\n                return (nodes || store.getState().nodes).filter((n) => {\n                    const internalNode = store.getState().nodeLookup.get(n.id);\n                    if (internalNode && !isRect && (n.id === nodeOrRect.id || !internalNode.internals.positionAbsolute)) {\n                        return false;\n                    }\n                    const currNodeRect = nodeToRect(hasNodesOption ? n : internalNode);\n                    const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n                    const partiallyVisible = partially && overlappingArea > 0;\n                    return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n                });\n            },\n            isNodeIntersecting: (nodeOrRect, area, partially = true) => {\n                const isRect = isRectObject(nodeOrRect);\n                const nodeRect = isRect ? nodeOrRect : getNodeRect(nodeOrRect);\n                if (!nodeRect) {\n                    return false;\n                }\n                const overlappingArea = getOverlappingArea(nodeRect, area);\n                const partiallyVisible = partially && overlappingArea > 0;\n                return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n            },\n            updateNode,\n            updateNodeData: (id, dataUpdate, options = { replace: false }) => {\n                updateNode(id, (node) => {\n                    const nextData = typeof dataUpdate === 'function' ? dataUpdate(node) : dataUpdate;\n                    return options.replace ? { ...node, data: nextData } : { ...node, data: { ...node.data, ...nextData } };\n                }, options);\n            },\n            updateEdge,\n            updateEdgeData: (id, dataUpdate, options = { replace: false }) => {\n                updateEdge(id, (edge) => {\n                    const nextData = typeof dataUpdate === 'function' ? dataUpdate(edge) : dataUpdate;\n                    return options.replace ? { ...edge, data: nextData } : { ...edge, data: { ...edge.data, ...nextData } };\n                }, options);\n            },\n            getNodesBounds: (nodes) => {\n                const { nodeLookup, nodeOrigin } = store.getState();\n                return getNodesBounds(nodes, { nodeLookup, nodeOrigin });\n            },\n            getHandleConnections: ({ type, id, nodeId }) => Array.from(store\n                .getState()\n                .connectionLookup.get(`${nodeId}-${type}-${id ?? null}`)\n                ?.values() ?? []),\n        };\n    }, []);\n    return useMemo(() => {\n        return {\n            ...generalHelper,\n            ...viewportHelper,\n            viewportInitialized,\n        };\n    }, [viewportInitialized]);\n}\n\nconst selected = (item) => item.selected;\nconst deleteKeyOptions = { actInsideInputWithModifier: false };\nconst win$1 = typeof window !== 'undefined' ? window : undefined;\n/**\n * Hook for handling global key events.\n *\n * @internal\n */\nfunction useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode, }) {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode, deleteKeyOptions);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode, { target: win$1 });\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, nodes } = store.getState();\n            deleteElements({ nodes: nodes.filter(selected), edges: edges.filter(selected) });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n}\n\n/**\n * Hook for handling resize events.\n *\n * @internal\n */\nfunction useResizeHandler(domNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        const updateDimensions = () => {\n            if (!domNode.current) {\n                return false;\n            }\n            const size = getDimensions(domNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['error004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        if (domNode.current) {\n            updateDimensions();\n            window.addEventListener('resize', updateDimensions);\n            const resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(domNode.current);\n            return () => {\n                window.removeEventListener('resize', updateDimensions);\n                if (resizeObserver && domNode.current) {\n                    resizeObserver.unobserve(domNode.current);\n                }\n            };\n        }\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\nconst selector$j = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    lib: s.lib,\n});\nfunction ZoomPane({ onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, onViewportChange, isControlledViewport, paneClickDistance, }) {\n    const store = useStoreApi();\n    const zoomPane = useRef(null);\n    const { userSelectionActive, lib } = useStore(selector$j, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const panZoom = useRef();\n    useResizeHandler(zoomPane);\n    const onTransformChange = useCallback((transform) => {\n        onViewportChange?.({ x: transform[0], y: transform[1], zoom: transform[2] });\n        if (!isControlledViewport) {\n            store.setState({ transform });\n        }\n    }, [onViewportChange, isControlledViewport]);\n    useEffect(() => {\n        if (zoomPane.current) {\n            panZoom.current = XYPanZoom({\n                domNode: zoomPane.current,\n                minZoom,\n                maxZoom,\n                translateExtent,\n                viewport: defaultViewport,\n                paneClickDistance,\n                onDraggingChange: (paneDragging) => store.setState({ paneDragging }),\n                onPanZoomStart: (event, vp) => {\n                    const { onViewportChangeStart, onMoveStart } = store.getState();\n                    onMoveStart?.(event, vp);\n                    onViewportChangeStart?.(vp);\n                },\n                onPanZoom: (event, vp) => {\n                    const { onViewportChange, onMove } = store.getState();\n                    onMove?.(event, vp);\n                    onViewportChange?.(vp);\n                },\n                onPanZoomEnd: (event, vp) => {\n                    const { onViewportChangeEnd, onMoveEnd } = store.getState();\n                    onMoveEnd?.(event, vp);\n                    onViewportChangeEnd?.(vp);\n                },\n            });\n            const { x, y, zoom } = panZoom.current.getViewport();\n            store.setState({\n                panZoom: panZoom.current,\n                transform: [x, y, zoom],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n            return () => {\n                panZoom.current?.destroy();\n            };\n        }\n    }, []);\n    useEffect(() => {\n        panZoom.current?.update({\n            onPaneContextMenu,\n            zoomOnScroll,\n            zoomOnPinch,\n            panOnScroll,\n            panOnScrollSpeed,\n            panOnScrollMode,\n            zoomOnDoubleClick,\n            panOnDrag,\n            zoomActivationKeyPressed,\n            preventScrolling,\n            noPanClassName,\n            userSelectionActive,\n            noWheelClassName,\n            lib,\n            onTransformChange,\n        });\n    }, [\n        onPaneContextMenu,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        panOnScrollSpeed,\n        panOnScrollMode,\n        zoomOnDoubleClick,\n        panOnDrag,\n        zoomActivationKeyPressed,\n        preventScrolling,\n        noPanClassName,\n        userSelectionActive,\n        noWheelClassName,\n        lib,\n        onTransformChange,\n    ]);\n    return (jsx(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle, children: children }));\n}\n\nconst selector$i = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$i, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (jsx(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$h = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nfunction Pane({ isSelecting, selectionKeyPressed, selectionMode = SelectionMode.Full, panOnDrag, selectionOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const edgeIdLookup = useRef(new Map());\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$h, shallow);\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    // Used to prevent click events when the user lets go of the selectionKey during a selection\n    const selectionInProgress = useRef(false);\n    const selectionStarted = useRef(false);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        // We prevent click events when the user let go of the selectionKey during a selection\n        if (selectionInProgress.current) {\n            selectionInProgress.current = false;\n            return;\n        }\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onPointerDown = (event) => {\n        const { resetSelectedElements, domNode, edgeLookup } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        event.target?.setPointerCapture?.(event.pointerId);\n        selectionStarted.current = true;\n        selectionInProgress.current = false;\n        edgeIdLookup.current = new Map();\n        for (const [id, edge] of edgeLookup) {\n            edgeIdLookup.current.set(edge.source, edgeIdLookup.current.get(edge.source)?.add(id) || new Set([id]));\n            edgeIdLookup.current.set(edge.target, edgeIdLookup.current.get(edge.target)?.add(id) || new Set([id]));\n        }\n        const { x, y } = getEventPosition(event.nativeEvent, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onPointerMove = (event) => {\n        const { userSelectionRect, edgeLookup, transform, nodeLookup, triggerNodeChanges, triggerEdgeChanges } = store.getState();\n        if (!containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        selectionInProgress.current = true;\n        const { x: mouseX, y: mouseY } = getEventPosition(event.nativeEvent, containerBounds.current);\n        const { startX, startY } = userSelectionRect;\n        const nextUserSelectRect = {\n            startX,\n            startY,\n            x: mouseX < startX ? mouseX : startX,\n            y: mouseY < startY ? mouseY : startY,\n            width: Math.abs(mouseX - startX),\n            height: Math.abs(mouseY - startY),\n        };\n        const selectedNodes = getNodesInside(nodeLookup, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true);\n        const selectedEdgeIds = new Set();\n        const selectedNodeIds = new Set();\n        for (const selectedNode of selectedNodes) {\n            selectedNodeIds.add(selectedNode.id);\n            const edgeIds = edgeIdLookup.current.get(selectedNode.id);\n            if (edgeIds) {\n                for (const edgeId of edgeIds) {\n                    selectedEdgeIds.add(edgeId);\n                }\n            }\n        }\n        if (prevSelectedNodesCount.current !== selectedNodeIds.size) {\n            prevSelectedNodesCount.current = selectedNodeIds.size;\n            const changes = getSelectionChanges(nodeLookup, selectedNodeIds, true);\n            triggerNodeChanges(changes);\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.size) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.size;\n            const changes = getSelectionChanges(edgeLookup, selectedEdgeIds);\n            triggerEdgeChanges(changes);\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n            userSelectionActive: true,\n            nodesSelectionActive: false,\n        });\n    };\n    const onPointerUp = (event) => {\n        if (event.button !== 0 || !selectionStarted.current) {\n            return;\n        }\n        event.target?.releasePointerCapture?.(event.pointerId);\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        if (prevSelectedNodesCount.current > 0) {\n            store.setState({ nodesSelectionActive: true });\n        }\n        resetUserSelection();\n        onSelectionEnd?.(event);\n        // If the user kept holding the selectionKey during the selection,\n        // we need to reset the selectionInProgress, so the next click event is not prevented\n        if (selectionKeyPressed || selectionOnDrag) {\n            selectionInProgress.current = false;\n        }\n        selectionStarted.current = false;\n    };\n    const draggable = panOnDrag === true || (Array.isArray(panOnDrag) && panOnDrag.includes(0));\n    return (jsxs(\"div\", { className: cc(['react-flow__pane', { draggable, dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onPointerEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onPointerDown: hasActiveSelection ? onPointerDown : onPaneMouseMove, onPointerMove: hasActiveSelection ? onPointerMove : onPaneMouseMove, onPointerUp: hasActiveSelection ? onPointerUp : undefined, onPointerLeave: onPaneMouseLeave, ref: container, style: containerStyle, children: [children, jsx(UserSelection, {})] }));\n}\n\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, nodeRef, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeLookup, onError } = store.getState();\n    const node = nodeLookup.get(id);\n    if (!node) {\n        onError?.('012', errorMessages['error012'](id));\n        return;\n    }\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node], edges: [] });\n        requestAnimationFrame(() => nodeRef?.current?.blur());\n    }\n}\n\n/**\n * Hook for calling XYDrag helper from @xyflow/system.\n *\n * @internal\n */\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, nodeClickDistance, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const xyDrag = useRef();\n    useEffect(() => {\n        xyDrag.current = XYDrag({\n            getStoreItems: () => store.getState(),\n            onNodeMouseDown: (id) => {\n                handleNodeClick({\n                    id,\n                    store,\n                    nodeRef,\n                });\n            },\n            onDragStart: () => {\n                setDragging(true);\n            },\n            onDragStop: () => {\n                setDragging(false);\n            },\n        });\n    }, []);\n    useEffect(() => {\n        if (disabled) {\n            xyDrag.current?.destroy();\n        }\n        else if (nodeRef.current) {\n            xyDrag.current?.update({\n                noDragClassName,\n                handleSelector,\n                domNode: nodeRef.current,\n                isSelectable,\n                nodeId,\n                nodeClickDistance,\n            });\n            return () => {\n                xyDrag.current?.destroy();\n            };\n        }\n    }, [noDragClassName, handleSelector, disabled, isSelectable, nodeRef, nodeId]);\n    return dragging;\n}\n\nconst selectedAndDraggable = (nodesDraggable) => (n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined'));\n/**\n * Hook for updating node positions by passing a direction and factor\n *\n * @internal\n * @returns function for updating node positions\n */\nfunction useMoveSelectedNodes() {\n    const store = useStoreApi();\n    const moveSelectedNodes = useCallback((params) => {\n        const { nodeExtent, snapToGrid, snapGrid, nodesDraggable, onError, updateNodePositions, nodeLookup, nodeOrigin } = store.getState();\n        const nodeUpdates = new Map();\n        const isSelected = selectedAndDraggable(nodesDraggable);\n        // by default a node moves 5px on each key press\n        // if snap grid is enabled, we use that for the velocity\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const xDiff = params.direction.x * xVelo * params.factor;\n        const yDiff = params.direction.y * yVelo * params.factor;\n        for (const [, node] of nodeLookup) {\n            if (!isSelected(node)) {\n                continue;\n            }\n            let nextPosition = {\n                x: node.internals.positionAbsolute.x + xDiff,\n                y: node.internals.positionAbsolute.y + yDiff,\n            };\n            if (snapToGrid) {\n                nextPosition = snapPosition(nextPosition, snapGrid);\n            }\n            const { position, positionAbsolute } = calculateNodePosition({\n                nodeId: node.id,\n                nextPosition,\n                nodeLookup,\n                nodeExtent,\n                nodeOrigin,\n                onError,\n            });\n            node.position = position;\n            node.internals.positionAbsolute = positionAbsolute;\n            nodeUpdates.set(node.id, node);\n        }\n        updateNodePositions(nodeUpdates);\n    }, []);\n    return moveSelectedNodes;\n}\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst selector$g = (s) => ({\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n    rfId: s.rfId,\n});\nconst connectingSelector = (nodeId, handleId, type) => (state) => {\n    const { connectionClickStartHandle: clickHandle, connectionMode, connection } = state;\n    const { fromHandle, toHandle, isValid } = connection;\n    const connectingTo = toHandle?.nodeId === nodeId && toHandle?.id === handleId && toHandle?.type === type;\n    return {\n        connectingFrom: fromHandle?.nodeId === nodeId && fromHandle?.id === handleId && fromHandle?.type === type,\n        connectingTo,\n        clickConnecting: clickHandle?.nodeId === nodeId && clickHandle?.id === handleId && clickHandle?.type === type,\n        isPossibleEndHandle: connectionMode === ConnectionMode.Strict\n            ? fromHandle?.type !== type\n            : nodeId !== fromHandle?.nodeId || handleId !== fromHandle?.id,\n        connectionInProcess: !!fromHandle,\n        valid: connectingTo && isValid,\n    };\n};\nfunction HandleComponent({ type = 'source', position = Position.Top, isValidConnection, isConnectable = true, isConnectableStart = true, isConnectableEnd = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) {\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    const { connectOnClick, noPanClassName, rfId } = useStore(selector$g, shallow);\n    const { connectingFrom, connectingTo, clickConnecting, isPossibleEndHandle, connectionInProcess, valid } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['error010']());\n    }\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges, setEdges } = store.getState();\n            setEdges(addEdge(edgeParams, edges));\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        if (!nodeId) {\n            return;\n        }\n        const isMouseTriggered = isMouseEvent(event.nativeEvent);\n        if (isConnectableStart &&\n            ((isMouseTriggered && event.button === 0) || !isMouseTriggered)) {\n            const currentStore = store.getState();\n            XYHandle.onPointerDown(event.nativeEvent, {\n                autoPanOnConnect: currentStore.autoPanOnConnect,\n                connectionMode: currentStore.connectionMode,\n                connectionRadius: currentStore.connectionRadius,\n                domNode: currentStore.domNode,\n                nodeLookup: currentStore.nodeLookup,\n                lib: currentStore.lib,\n                isTarget,\n                handleId,\n                nodeId,\n                flowId: currentStore.rfId,\n                panBy: currentStore.panBy,\n                cancelConnection: currentStore.cancelConnection,\n                onConnectStart: currentStore.onConnectStart,\n                onConnectEnd: currentStore.onConnectEnd,\n                updateConnection: currentStore.updateConnection,\n                onConnect: onConnectExtended,\n                isValidConnection: isValidConnection || currentStore.isValidConnection,\n                getTransform: () => store.getState().transform,\n                getFromHandle: () => store.getState().connection.fromHandle,\n                autoPanSpeed: currentStore.autoPanSpeed,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionClickStartHandle, connectionMode, isValidConnection: isValidConnectionStore, lib, rfId: flowId, nodeLookup, connection: connectionState, } = store.getState();\n        if (!nodeId || (!connectionClickStartHandle && !isConnectableStart)) {\n            return;\n        }\n        if (!connectionClickStartHandle) {\n            onClickConnectStart?.(event.nativeEvent, { nodeId, handleId, handleType: type });\n            store.setState({ connectionClickStartHandle: { nodeId, type, id: handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const isValidConnectionHandler = isValidConnection || isValidConnectionStore;\n        const { connection, isValid } = XYHandle.isValid(event.nativeEvent, {\n            handle: {\n                nodeId,\n                id: handleId,\n                type,\n            },\n            connectionMode,\n            fromNodeId: connectionClickStartHandle.nodeId,\n            fromHandleId: connectionClickStartHandle.id || null,\n            fromType: connectionClickStartHandle.type,\n            isValidConnection: isValidConnectionHandler,\n            flowId,\n            doc,\n            lib,\n            nodeLookup,\n        });\n        if (isValid && connection) {\n            onConnectExtended(connection);\n        }\n        const connectionClone = structuredClone(connectionState);\n        delete connectionClone.inProgress;\n        connectionClone.toPosition = connectionClone.toHandle ? connectionClone.toHandle.position : null;\n        onClickConnectEnd?.(event, connectionClone);\n        store.setState({ connectionClickStartHandle: null });\n    };\n    return (jsx(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${rfId}-${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connectablestart: isConnectableStart,\n                connectableend: isConnectableEnd,\n                clickconnecting: clickConnecting,\n                connectingfrom: connectingFrom,\n                connectingto: connectingTo,\n                valid,\n                // shows where you can start a connection from\n                // and where you can end it while connecting\n                connectionindicator: isConnectable &&\n                    (!connectionInProcess || isPossibleEndHandle) &&\n                    (connectionInProcess ? isConnectableEnd : isConnectableStart),\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest, children: children }));\n}\n/**\n * The Handle component is a UI element that is used to connect nodes.\n */\nconst Handle = memo(fixedForwardRef(HandleComponent));\n\nfunction InputNode({ data, isConnectable, sourcePosition = Position.Bottom }) {\n    return (jsxs(Fragment, { children: [data?.label, jsx(Handle, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\n}\n\nfunction DefaultNode({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) {\n    return (jsxs(Fragment, { children: [jsx(Handle, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label, jsx(Handle, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\n}\n\nfunction GroupNode() {\n    return null;\n}\n\nfunction OutputNode({ data, isConnectable, targetPosition = Position.Top }) {\n    return (jsxs(Fragment, { children: [jsx(Handle, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label] }));\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nconst builtinNodeTypes = {\n    input: InputNode,\n    default: DefaultNode,\n    output: OutputNode,\n    group: GroupNode,\n};\nfunction getNodeInlineStyleDimensions(node) {\n    if (node.internals.handleBounds === undefined) {\n        return {\n            width: node.width ?? node.initialWidth ?? node.style?.width,\n            height: node.height ?? node.initialHeight ?? node.style?.height,\n        };\n    }\n    return {\n        width: node.width ?? node.style?.width,\n        height: node.height ?? node.style?.height,\n    };\n}\n\nconst selector$f = (s) => {\n    const { width, height, x, y } = getInternalNodesBounds(s.nodeLookup, {\n        filter: (node) => !!node.selected,\n    });\n    return {\n        width: isNumeric(width) ? width : null,\n        height: isNumeric(height) ? height : null,\n        userSelectionActive: s.userSelectionActive,\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]}) translate(${x}px,${y}px)`,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y, }) {\n    const store = useStoreApi();\n    const { width, height, transformString, userSelectionActive } = useStore(selector$f, shallow);\n    const moveSelectedNodes = useMoveSelectedNodes();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store.getState().nodes.filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            moveSelectedNodes({\n                direction: arrowKeyDiffs[event.key],\n                factor: event.shiftKey ? 4 : 1,\n            });\n        }\n    };\n    return (jsx(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        }, children: jsx(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n            } }) }));\n}\n\nconst win = typeof window !== 'undefined' ? window : undefined;\nconst selector$e = (s) => {\n    return { nodesSelectionActive: s.nodesSelectionActive, userSelectionActive: s.userSelectionActive };\n};\nfunction FlowRendererComponent({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, paneClickDistance, deleteKeyCode, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll: _panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, onViewportChange, isControlledViewport, }) {\n    const { nodesSelectionActive, userSelectionActive } = useStore(selector$e);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode, { target: win });\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode, { target: win });\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const panOnScroll = panActivationKeyPressed || _panOnScroll;\n    const _selectionOnDrag = selectionOnDrag && panOnDrag !== true;\n    const isSelecting = selectionKeyPressed || userSelectionActive || _selectionOnDrag;\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (jsx(ZoomPane, { onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, onViewportChange: onViewportChange, isControlledViewport: isControlledViewport, paneClickDistance: paneClickDistance, children: jsxs(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode, selectionKeyPressed: selectionKeyPressed, selectionOnDrag: _selectionOnDrag, children: [children, nodesSelectionActive && (jsx(NodesSelection, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y }))] }) }));\n}\nFlowRendererComponent.displayName = 'FlowRenderer';\nconst FlowRenderer = memo(FlowRendererComponent);\n\nconst selector$d = (onlyRenderVisible) => (s) => {\n    return onlyRenderVisible\n        ? getNodesInside(s.nodeLookup, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true).map((node) => node.id)\n        : Array.from(s.nodeLookup.keys());\n};\n/**\n * Hook for getting the visible node ids from the store.\n *\n * @internal\n * @param onlyRenderVisible\n * @returns array with visible node ids\n */\nfunction useVisibleNodeIds(onlyRenderVisible) {\n    const nodeIds = useStore(useCallback(selector$d(onlyRenderVisible), [onlyRenderVisible]), shallow);\n    return nodeIds;\n}\n\nconst selector$c = (s) => s.updateNodeInternals;\nfunction useResizeObserver() {\n    const updateNodeInternals = useStore(selector$c);\n    const [resizeObserver] = useState(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        return new ResizeObserver((entries) => {\n            const updates = new Map();\n            entries.forEach((entry) => {\n                const id = entry.target.getAttribute('data-id');\n                updates.set(id, {\n                    id,\n                    nodeElement: entry.target,\n                    force: true,\n                });\n            });\n            updateNodeInternals(updates);\n        });\n    });\n    useEffect(() => {\n        return () => {\n            resizeObserver?.disconnect();\n        };\n    }, [resizeObserver]);\n    return resizeObserver;\n}\n\n/**\n * Hook to handle the resize observation + internal updates for the passed node.\n *\n * @internal\n * @returns nodeRef - reference to the node element\n */\nfunction useNodeObserver({ node, nodeType, hasDimensions, resizeObserver, }) {\n    const store = useStoreApi();\n    const nodeRef = useRef(null);\n    const observedNode = useRef(null);\n    const prevSourcePosition = useRef(node.sourcePosition);\n    const prevTargetPosition = useRef(node.targetPosition);\n    const prevType = useRef(nodeType);\n    const isInitialized = hasDimensions && !!node.internals.handleBounds;\n    useEffect(() => {\n        if (nodeRef.current && !node.hidden && (!isInitialized || observedNode.current !== nodeRef.current)) {\n            if (observedNode.current) {\n                resizeObserver?.unobserve(observedNode.current);\n            }\n            resizeObserver?.observe(nodeRef.current);\n            observedNode.current = nodeRef.current;\n        }\n    }, [isInitialized, node.hidden]);\n    useEffect(() => {\n        return () => {\n            if (observedNode.current) {\n                resizeObserver?.unobserve(observedNode.current);\n                observedNode.current = null;\n            }\n        };\n    }, []);\n    useEffect(() => {\n        if (nodeRef.current) {\n            // when the user programmatically changes the source or handle position, we need to update the internals\n            // to make sure the edges are updated correctly\n            const typeChanged = prevType.current !== nodeType;\n            const sourcePosChanged = prevSourcePosition.current !== node.sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== node.targetPosition;\n            if (typeChanged || sourcePosChanged || targetPosChanged) {\n                prevType.current = nodeType;\n                prevSourcePosition.current = node.sourcePosition;\n                prevTargetPosition.current = node.targetPosition;\n                store\n                    .getState()\n                    .updateNodeInternals(new Map([[node.id, { id: node.id, nodeElement: nodeRef.current, force: true }]]));\n            }\n        }\n    }, [node.id, nodeType, node.sourcePosition, node.targetPosition]);\n    return nodeRef;\n}\n\nfunction NodeWrapper({ id, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, nodesDraggable, elementsSelectable, nodesConnectable, nodesFocusable, resizeObserver, noDragClassName, noPanClassName, disableKeyboardA11y, rfId, nodeTypes, nodeExtent, nodeClickDistance, onError, }) {\n    const { node, internals, isParent } = useStore((s) => {\n        const node = s.nodeLookup.get(id);\n        const isParent = s.parentLookup.has(id);\n        return {\n            node,\n            internals: node.internals,\n            isParent,\n        };\n    }, shallow);\n    let nodeType = node.type || 'default';\n    let NodeComponent = nodeTypes?.[nodeType] || builtinNodeTypes[nodeType];\n    if (NodeComponent === undefined) {\n        onError?.('003', errorMessages['error003'](nodeType));\n        nodeType = 'default';\n        NodeComponent = builtinNodeTypes.default;\n    }\n    const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n    const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n    const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n    const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n    const store = useStoreApi();\n    const hasDimensions = nodeHasDimensions(node);\n    const nodeRef = useNodeObserver({ node, nodeType, hasDimensions, resizeObserver });\n    const dragging = useDrag({\n        nodeRef,\n        disabled: node.hidden || !isDraggable,\n        noDragClassName,\n        handleSelector: node.dragHandle,\n        nodeId: id,\n        isSelectable,\n        nodeClickDistance,\n    });\n    const moveSelectedNodes = useMoveSelectedNodes();\n    if (node.hidden) {\n        return null;\n    }\n    const nodeDimensions = getNodeDimensions(node);\n    const inlineDimensions = getNodeInlineStyleDimensions(node);\n    const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n    const onMouseEnterHandler = onMouseEnter\n        ? (event) => onMouseEnter(event, { ...internals.userNode })\n        : undefined;\n    const onMouseMoveHandler = onMouseMove\n        ? (event) => onMouseMove(event, { ...internals.userNode })\n        : undefined;\n    const onMouseLeaveHandler = onMouseLeave\n        ? (event) => onMouseLeave(event, { ...internals.userNode })\n        : undefined;\n    const onContextMenuHandler = onContextMenu\n        ? (event) => onContextMenu(event, { ...internals.userNode })\n        : undefined;\n    const onDoubleClickHandler = onDoubleClick\n        ? (event) => onDoubleClick(event, { ...internals.userNode })\n        : undefined;\n    const onSelectNodeHandler = (event) => {\n        const { selectNodesOnDrag, nodeDragThreshold } = store.getState();\n        if (isSelectable && (!selectNodesOnDrag || !isDraggable || nodeDragThreshold > 0)) {\n            // this handler gets called by XYDrag on drag start when selectNodesOnDrag=true\n            // here we only need to call it when selectNodesOnDrag=false\n            handleNodeClick({\n                id,\n                store,\n                nodeRef,\n            });\n        }\n        if (onClick) {\n            onClick(event, { ...internals.userNode });\n        }\n    };\n    const onKeyDown = (event) => {\n        if (isInputDOMNode(event.nativeEvent) || disableKeyboardA11y) {\n            return;\n        }\n        if (elementSelectionKeys.includes(event.key) && isSelectable) {\n            const unselect = event.key === 'Escape';\n            handleNodeClick({\n                id,\n                store,\n                unselect,\n                nodeRef,\n            });\n        }\n        else if (isDraggable && node.selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            store.setState({\n                ariaLiveMessage: `Moved selected node ${event.key\n                    .replace('Arrow', '')\n                    .toLowerCase()}. New position, x: ${~~internals.positionAbsolute.x}, y: ${~~internals.positionAbsolute.y}`,\n            });\n            moveSelectedNodes({\n                direction: arrowKeyDiffs[event.key],\n                factor: event.shiftKey ? 4 : 1,\n            });\n        }\n    };\n    return (jsx(\"div\", { className: cc([\n            'react-flow__node',\n            `react-flow__node-${nodeType}`,\n            {\n                // this is overwritable by passing `nopan` as a class name\n                [noPanClassName]: isDraggable,\n            },\n            node.className,\n            {\n                selected: node.selected,\n                selectable: isSelectable,\n                parent: isParent,\n                draggable: isDraggable,\n                dragging,\n            },\n        ]), ref: nodeRef, style: {\n            zIndex: internals.z,\n            transform: `translate(${internals.positionAbsolute.x}px,${internals.positionAbsolute.y}px)`,\n            pointerEvents: hasPointerEvents ? 'all' : 'none',\n            visibility: hasDimensions ? 'visible' : 'hidden',\n            ...node.style,\n            ...inlineDimensions,\n        }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": node.ariaLabel, children: jsx(Provider, { value: id, children: jsx(NodeComponent, { id: id, data: node.data, type: nodeType, positionAbsoluteX: internals.positionAbsolute.x, positionAbsoluteY: internals.positionAbsolute.y, selected: node.selected, selectable: isSelectable, draggable: isDraggable, deletable: node.deletable ?? true, isConnectable: isConnectable, sourcePosition: node.sourcePosition, targetPosition: node.targetPosition, dragging: dragging, dragHandle: node.dragHandle, zIndex: internals.z, parentId: node.parentId, ...nodeDimensions }) }) }));\n}\n\nconst selector$b = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    onError: s.onError,\n});\nfunction NodeRendererComponent(props) {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, onError } = useStore(selector$b, shallow);\n    const nodeIds = useVisibleNodeIds(props.onlyRenderVisibleElements);\n    const resizeObserver = useResizeObserver();\n    return (jsx(\"div\", { className: \"react-flow__nodes\", style: containerStyle, children: nodeIds.map((nodeId) => {\n            return (\n            // The split of responsibilities between NodeRenderer and\n            // NodeComponentWrapper may appear weird. However, it’s designed to\n            // minimize the cost of updates when individual nodes change.\n            //\n            // For example, when you’re dragging a single node, that node gets\n            // updated multiple times per second. If `NodeRenderer` were to update\n            // every time, it would have to re-run the `nodes.map()` loop every\n            // time. This gets pricey with hundreds of nodes, especially if every\n            // loop cycle does more than just rendering a JSX element!\n            //\n            // As a result of this choice, we took the following implementation\n            // decisions:\n            // - NodeRenderer subscribes *only* to node IDs – and therefore\n            //   rerender *only* when visible nodes are added or removed.\n            // - NodeRenderer performs all operations the result of which can be\n            //   shared between nodes (such as creating the `ResizeObserver`\n            //   instance, or subscribing to `selector`). This means extra prop\n            //   drilling into `NodeComponentWrapper`, but it means we need to run\n            //   these operations only once – instead of once per node.\n            // - Any operations that you’d normally write inside `nodes.map` are\n            //   moved into `NodeComponentWrapper`. This ensures they are\n            //   memorized – so if `NodeRenderer` *has* to rerender, it only\n            //   needs to regenerate the list of nodes, nothing else.\n            jsx(NodeWrapper, { id: nodeId, nodeTypes: props.nodeTypes, nodeExtent: props.nodeExtent, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, resizeObserver: resizeObserver, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, elementsSelectable: elementsSelectable, nodeClickDistance: props.nodeClickDistance, onError: onError }, nodeId));\n        }) }));\n}\nNodeRendererComponent.displayName = 'NodeRenderer';\nconst NodeRenderer = memo(NodeRendererComponent);\n\n/**\n * Hook for getting the visible edge ids from the store.\n *\n * @internal\n * @param onlyRenderVisible\n * @returns array with visible edge ids\n */\nfunction useVisibleEdgeIds(onlyRenderVisible) {\n    const edgeIds = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges.map((edge) => edge.id);\n        }\n        const visibleEdgeIds = [];\n        if (s.width && s.height) {\n            for (const edge of s.edges) {\n                const sourceNode = s.nodeLookup.get(edge.source);\n                const targetNode = s.nodeLookup.get(edge.target);\n                if (sourceNode &&\n                    targetNode &&\n                    isEdgeVisible({\n                        sourceNode,\n                        targetNode,\n                        width: s.width,\n                        height: s.height,\n                        transform: s.transform,\n                    })) {\n                    visibleEdgeIds.push(edge.id);\n                }\n            }\n        }\n        return visibleEdgeIds;\n    }, [onlyRenderVisible]), shallow);\n    return edgeIds;\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { style: {\n            stroke: color,\n            strokeWidth,\n        }, strokeLinecap: \"round\", strokeLinejoin: \"round\", fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { style: {\n            stroke: color,\n            fill: color,\n            strokeWidth,\n        }, strokeLinecap: \"round\", strokeLinejoin: \"round\", points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['error009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (jsx(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\", children: jsx(Symbol, { color: color, strokeWidth: strokeWidth }) }));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const edges = useStore((s) => s.edges);\n    const defaultEdgeOptions = useStore((s) => s.defaultEdgeOptions);\n    const markers = useMemo(() => {\n        const markers = createMarkerIds(edges, {\n            id: rfId,\n            defaultColor,\n            defaultMarkerStart: defaultEdgeOptions?.markerStart,\n            defaultMarkerEnd: defaultEdgeOptions?.markerEnd,\n        });\n        return markers;\n    }, [edges, defaultEdgeOptions, rfId, defaultColor]);\n    if (!markers.length) {\n        return null;\n    }\n    return (jsx(\"svg\", { className: \"react-flow__marker\", children: jsx(\"defs\", { children: markers.map((marker) => (jsx(Marker, { id: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient }, marker.id))) }) }));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nfunction EdgeTextComponent({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) {\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 1, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    const edgeTextRef = useRef(null);\n    useEffect(() => {\n        if (edgeTextRef.current) {\n            const textBbox = edgeTextRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (jsxs(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest, children: [labelShowBg && (jsx(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })), jsx(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeTextRef, style: labelStyle, children: label }), children] }));\n}\nEdgeTextComponent.displayName = 'EdgeText';\nconst EdgeText = memo(EdgeTextComponent);\n\nfunction BaseEdge({ id, path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, className, interactionWidth = 20, }) {\n    return (jsxs(Fragment, { children: [jsx(\"path\", { id: id, style: style, d: path, fill: \"none\", className: cc(['react-flow__edge-path', className]), markerEnd: markerEnd, markerStart: markerStart }), interactionWidth && (jsx(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })), label && isNumeric(labelX) && isNumeric(labelY) ? (jsx(EdgeText, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null] }));\n}\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nfunction createSimpleBezierEdge(params) {\n    // eslint-disable-next-line react/display-name\n    return memo(({ id, sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n        const [path, labelX, labelY] = getSimpleBezierPath({\n            sourceX,\n            sourceY,\n            sourcePosition,\n            targetX,\n            targetY,\n            targetPosition,\n        });\n        const _id = params.isInternal ? undefined : id;\n        return (jsx(BaseEdge, { id: _id, path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n    });\n}\nconst SimpleBezierEdge = createSimpleBezierEdge({ isInternal: false });\nconst SimpleBezierEdgeInternal = createSimpleBezierEdge({ isInternal: true });\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\nSimpleBezierEdgeInternal.displayName = 'SimpleBezierEdgeInternal';\n\nfunction createSmoothStepEdge(params) {\n    // eslint-disable-next-line react/display-name\n    return memo(({ id, sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n        const [path, labelX, labelY] = getSmoothStepPath({\n            sourceX,\n            sourceY,\n            sourcePosition,\n            targetX,\n            targetY,\n            targetPosition,\n            borderRadius: pathOptions?.borderRadius,\n            offset: pathOptions?.offset,\n        });\n        const _id = params.isInternal ? undefined : id;\n        return (jsx(BaseEdge, { id: _id, path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n    });\n}\nconst SmoothStepEdge = createSmoothStepEdge({ isInternal: false });\nconst SmoothStepEdgeInternal = createSmoothStepEdge({ isInternal: true });\nSmoothStepEdge.displayName = 'SmoothStepEdge';\nSmoothStepEdgeInternal.displayName = 'SmoothStepEdgeInternal';\n\nfunction createStepEdge(params) {\n    // eslint-disable-next-line react/display-name\n    return memo(({ id, ...props }) => {\n        const _id = params.isInternal ? undefined : id;\n        return (jsx(SmoothStepEdge, { ...props, id: _id, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) }));\n    });\n}\nconst StepEdge = createStepEdge({ isInternal: false });\nconst StepEdgeInternal = createStepEdge({ isInternal: true });\nStepEdge.displayName = 'StepEdge';\nStepEdgeInternal.displayName = 'StepEdgeInternal';\n\nfunction createStraightEdge(params) {\n    // eslint-disable-next-line react/display-name\n    return memo(({ id, sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n        const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n        const _id = params.isInternal ? undefined : id;\n        return (jsx(BaseEdge, { id: _id, path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n    });\n}\nconst StraightEdge = createStraightEdge({ isInternal: false });\nconst StraightEdgeInternal = createStraightEdge({ isInternal: true });\nStraightEdge.displayName = 'StraightEdge';\nStraightEdgeInternal.displayName = 'StraightEdgeInternal';\n\nfunction createBezierEdge(params) {\n    // eslint-disable-next-line react/display-name\n    return memo(({ id, sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n        const [path, labelX, labelY] = getBezierPath({\n            sourceX,\n            sourceY,\n            sourcePosition,\n            targetX,\n            targetY,\n            targetPosition,\n            curvature: pathOptions?.curvature,\n        });\n        const _id = params.isInternal ? undefined : id;\n        return (jsx(BaseEdge, { id: _id, path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n    });\n}\nconst BezierEdge = createBezierEdge({ isInternal: false });\nconst BezierEdgeInternal = createBezierEdge({ isInternal: true });\nBezierEdge.displayName = 'BezierEdge';\nBezierEdgeInternal.displayName = 'BezierEdgeInternal';\n\nconst builtinEdgeTypes = {\n    default: BezierEdgeInternal,\n    straight: StraightEdgeInternal,\n    step: StepEdgeInternal,\n    smoothstep: SmoothStepEdgeInternal,\n    simplebezier: SimpleBezierEdgeInternal,\n};\nconst nullPosition = {\n    sourceX: null,\n    sourceY: null,\n    targetX: null,\n    targetY: null,\n    sourcePosition: null,\n    targetPosition: null,\n};\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nfunction EdgeAnchor({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) {\n    return (jsx(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n}\n\nfunction EdgeUpdateAnchors({ isReconnectable, reconnectRadius, edge, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, onReconnect, onReconnectStart, onReconnectEnd, setReconnecting, setUpdateHover, }) {\n    const store = useStoreApi();\n    const handleEdgeUpdater = (event, oppositeHandle) => {\n        // avoid triggering edge updater if mouse btn is not left\n        if (event.button !== 0) {\n            return;\n        }\n        const { autoPanOnConnect, domNode, isValidConnection, connectionMode, connectionRadius, lib, onConnectStart, onConnectEnd, cancelConnection, nodeLookup, rfId: flowId, panBy, updateConnection, } = store.getState();\n        const isTarget = oppositeHandle.type === 'target';\n        setReconnecting(true);\n        onReconnectStart?.(event, edge, oppositeHandle.type);\n        const _onReconnectEnd = (evt, connectionState) => {\n            setReconnecting(false);\n            onReconnectEnd?.(evt, edge, oppositeHandle.type, connectionState);\n        };\n        const onConnectEdge = (connection) => onReconnect?.(edge, connection);\n        XYHandle.onPointerDown(event.nativeEvent, {\n            autoPanOnConnect,\n            connectionMode,\n            connectionRadius,\n            domNode,\n            handleId: oppositeHandle.id,\n            nodeId: oppositeHandle.nodeId,\n            nodeLookup,\n            isTarget,\n            edgeUpdaterType: oppositeHandle.type,\n            lib,\n            flowId,\n            cancelConnection,\n            panBy,\n            isValidConnection,\n            onConnect: onConnectEdge,\n            onConnectStart,\n            onConnectEnd,\n            onReconnectEnd: _onReconnectEnd,\n            updateConnection,\n            getTransform: () => store.getState().transform,\n            getFromHandle: () => store.getState().connection.fromHandle,\n        });\n    };\n    const onReconnectSourceMouseDown = (event) => handleEdgeUpdater(event, { nodeId: edge.target, id: edge.targetHandle ?? null, type: 'target' });\n    const onReconnectTargetMouseDown = (event) => handleEdgeUpdater(event, { nodeId: edge.source, id: edge.sourceHandle ?? null, type: 'source' });\n    const onReconnectMouseEnter = () => setUpdateHover(true);\n    const onReconnectMouseOut = () => setUpdateHover(false);\n    return (jsxs(Fragment, { children: [(isReconnectable === true || isReconnectable === 'source') && (jsx(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: reconnectRadius, onMouseDown: onReconnectSourceMouseDown, onMouseEnter: onReconnectMouseEnter, onMouseOut: onReconnectMouseOut, type: \"source\" })), (isReconnectable === true || isReconnectable === 'target') && (jsx(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: reconnectRadius, onMouseDown: onReconnectTargetMouseDown, onMouseEnter: onReconnectMouseEnter, onMouseOut: onReconnectMouseOut, type: \"target\" }))] }));\n}\n\nfunction EdgeWrapper({ id, edgesFocusable, edgesReconnectable, elementsSelectable, onClick, onDoubleClick, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, reconnectRadius, onReconnect, onReconnectStart, onReconnectEnd, rfId, edgeTypes, noPanClassName, onError, disableKeyboardA11y, }) {\n    let edge = useStore((s) => s.edgeLookup.get(id));\n    const defaultEdgeOptions = useStore((s) => s.defaultEdgeOptions);\n    edge = defaultEdgeOptions ? { ...defaultEdgeOptions, ...edge } : edge;\n    let edgeType = edge.type || 'default';\n    let EdgeComponent = edgeTypes?.[edgeType] || builtinEdgeTypes[edgeType];\n    if (EdgeComponent === undefined) {\n        onError?.('011', errorMessages['error011'](edgeType));\n        edgeType = 'default';\n        EdgeComponent = builtinEdgeTypes.default;\n    }\n    const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n    const isReconnectable = typeof onReconnect !== 'undefined' &&\n        (edge.reconnectable || (edgesReconnectable && typeof edge.reconnectable === 'undefined'));\n    const isSelectable = !!(edge.selectable || (elementsSelectable && typeof edge.selectable === 'undefined'));\n    const edgeRef = useRef(null);\n    const [updateHover, setUpdateHover] = useState(false);\n    const [reconnecting, setReconnecting] = useState(false);\n    const store = useStoreApi();\n    const { zIndex, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition } = useStore(useCallback((store) => {\n        const sourceNode = store.nodeLookup.get(edge.source);\n        const targetNode = store.nodeLookup.get(edge.target);\n        if (!sourceNode || !targetNode) {\n            return {\n                zIndex: edge.zIndex,\n                ...nullPosition,\n            };\n        }\n        const edgePosition = getEdgePosition({\n            id,\n            sourceNode,\n            targetNode,\n            sourceHandle: edge.sourceHandle || null,\n            targetHandle: edge.targetHandle || null,\n            connectionMode: store.connectionMode,\n            onError,\n        });\n        const zIndex = getElevatedEdgeZIndex({\n            selected: edge.selected,\n            zIndex: edge.zIndex,\n            sourceNode,\n            targetNode,\n            elevateOnSelect: store.elevateEdgesOnSelect,\n        });\n        return {\n            zIndex,\n            ...(edgePosition || nullPosition),\n        };\n    }, [edge.source, edge.target, edge.sourceHandle, edge.targetHandle, edge.selected, edge.zIndex]), shallow);\n    const markerStartUrl = useMemo(() => (edge.markerStart ? `url('#${getMarkerId(edge.markerStart, rfId)}')` : undefined), [edge.markerStart, rfId]);\n    const markerEndUrl = useMemo(() => (edge.markerEnd ? `url('#${getMarkerId(edge.markerEnd, rfId)}')` : undefined), [edge.markerEnd, rfId]);\n    if (edge.hidden || sourceX === null || sourceY === null || targetX === null || targetY === null) {\n        return null;\n    }\n    const onEdgeClick = (event) => {\n        const { addSelectedEdges, unselectNodesAndEdges, multiSelectionActive } = store.getState();\n        if (isSelectable) {\n            store.setState({ nodesSelectionActive: false });\n            if (edge.selected && multiSelectionActive) {\n                unselectNodesAndEdges({ nodes: [], edges: [edge] });\n                edgeRef.current?.blur();\n            }\n            else {\n                addSelectedEdges([id]);\n            }\n        }\n        if (onClick) {\n            onClick(event, edge);\n        }\n    };\n    const onEdgeDoubleClick = onDoubleClick\n        ? (event) => {\n            onDoubleClick(event, { ...edge });\n        }\n        : undefined;\n    const onEdgeContextMenu = onContextMenu\n        ? (event) => {\n            onContextMenu(event, { ...edge });\n        }\n        : undefined;\n    const onEdgeMouseEnter = onMouseEnter\n        ? (event) => {\n            onMouseEnter(event, { ...edge });\n        }\n        : undefined;\n    const onEdgeMouseMove = onMouseMove\n        ? (event) => {\n            onMouseMove(event, { ...edge });\n        }\n        : undefined;\n    const onEdgeMouseLeave = onMouseLeave\n        ? (event) => {\n            onMouseLeave(event, { ...edge });\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (!disableKeyboardA11y && elementSelectionKeys.includes(event.key) && isSelectable) {\n            const { unselectNodesAndEdges, addSelectedEdges } = store.getState();\n            const unselect = event.key === 'Escape';\n            if (unselect) {\n                edgeRef.current?.blur();\n                unselectNodesAndEdges({ edges: [edge] });\n            }\n            else {\n                addSelectedEdges([id]);\n            }\n        }\n    };\n    return (jsx(\"svg\", { style: { zIndex }, children: jsxs(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${edgeType}`,\n                edge.className,\n                noPanClassName,\n                {\n                    selected: edge.selected,\n                    animated: edge.animated,\n                    inactive: !isSelectable && !onClick,\n                    updating: updateHover,\n                    selectable: isSelectable,\n                },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClick, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : 'img', \"data-id\": id, \"data-testid\": `rf__edge-${id}`, \"aria-label\": edge.ariaLabel === null ? undefined : edge.ariaLabel || `Edge from ${edge.source} to ${edge.target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef, children: [!reconnecting && (jsx(EdgeComponent, { id: id, source: edge.source, target: edge.target, type: edge.type, selected: edge.selected, animated: edge.animated, selectable: isSelectable, deletable: edge.deletable ?? true, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, data: edge.data, style: edge.style, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth })), isReconnectable && (jsx(EdgeUpdateAnchors, { edge: edge, isReconnectable: isReconnectable, reconnectRadius: reconnectRadius, onReconnect: onReconnect, onReconnectStart: onReconnectStart, onReconnectEnd: onReconnectEnd, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, setUpdateHover: setUpdateHover, setReconnecting: setReconnecting }))] }) }));\n}\n\nconst selector$a = (s) => ({\n    width: s.width,\n    height: s.height,\n    edgesFocusable: s.edgesFocusable,\n    edgesReconnectable: s.edgesReconnectable,\n    elementsSelectable: s.elementsSelectable,\n    connectionMode: s.connectionMode,\n    onError: s.onError,\n});\nfunction EdgeRendererComponent({ defaultMarkerColor, onlyRenderVisibleElements, rfId, edgeTypes, noPanClassName, onReconnect, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, reconnectRadius, onEdgeDoubleClick, onReconnectStart, onReconnectEnd, disableKeyboardA11y, }) {\n    const { edgesFocusable, edgesReconnectable, elementsSelectable, onError } = useStore(selector$a, shallow);\n    const edgeIds = useVisibleEdgeIds(onlyRenderVisibleElements);\n    return (jsxs(\"div\", { className: \"react-flow__edges\", children: [jsx(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }), edgeIds.map((id) => {\n                return (jsx(EdgeWrapper, { id: id, edgesFocusable: edgesFocusable, edgesReconnectable: edgesReconnectable, elementsSelectable: elementsSelectable, noPanClassName: noPanClassName, onReconnect: onReconnect, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, reconnectRadius: reconnectRadius, onDoubleClick: onEdgeDoubleClick, onReconnectStart: onReconnectStart, onReconnectEnd: onReconnectEnd, rfId: rfId, onError: onError, edgeTypes: edgeTypes, disableKeyboardA11y: disableKeyboardA11y }, id));\n            })] }));\n}\nEdgeRendererComponent.displayName = 'EdgeRenderer';\nconst EdgeRenderer = memo(EdgeRendererComponent);\n\nconst selector$9 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$9);\n    return (jsx(\"div\", { className: \"react-flow__viewport xyflow__viewport react-flow__container\", style: { transform }, children: children }));\n}\n\n/**\n * Hook for calling onInit handler.\n *\n * @internal\n */\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst selector$8 = (state) => state.panZoom?.syncViewport;\n/**\n * Hook for syncing the viewport with the panzoom instance.\n *\n * @internal\n * @param viewport\n */\nfunction useViewportSync(viewport) {\n    const syncViewport = useStore(selector$8);\n    const store = useStoreApi();\n    useEffect(() => {\n        if (viewport) {\n            syncViewport?.(viewport);\n            store.setState({ transform: [viewport.x, viewport.y, viewport.zoom] });\n        }\n    }, [viewport, syncViewport]);\n    return null;\n}\n\nfunction storeSelector$1(s) {\n    return s.connection.inProgress\n        ? { ...s.connection, to: pointToRendererPoint(s.connection.to, s.transform) }\n        : { ...s.connection };\n}\nfunction getSelector(connectionSelector) {\n    if (connectionSelector) {\n        const combinedSelector = (s) => {\n            const connection = storeSelector$1(s);\n            return connectionSelector(connection);\n        };\n        return combinedSelector;\n    }\n    return storeSelector$1;\n}\n/**\n * Hook for accessing the connection state.\n *\n * @public\n * @returns ConnectionState\n */\nfunction useConnection(connectionSelector) {\n    const combinedSelector = getSelector(connectionSelector);\n    return useStore(combinedSelector, shallow);\n}\n\nconst selector$7 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    isValid: s.connection.isValid,\n    inProgress: s.connection.inProgress,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodesConnectable, width, height, isValid, inProgress } = useStore(selector$7, shallow);\n    const renderConnection = !!(width && nodesConnectable && inProgress);\n    if (!renderConnection) {\n        return null;\n    }\n    return (jsx(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__connectionline react-flow__container\", children: jsx(\"g\", { className: cc(['react-flow__connection', getConnectionStatus(isValid)]), children: jsx(ConnectionLine, { style: style, type: type, CustomComponent: component, isValid: isValid }) }) }));\n}\nconst ConnectionLine = ({ style, type = ConnectionLineType.Bezier, CustomComponent, isValid }) => {\n    const { inProgress, from, fromNode, fromHandle, fromPosition, to, toNode, toHandle, toPosition } = useConnection();\n    if (!inProgress) {\n        return;\n    }\n    if (CustomComponent) {\n        return (jsx(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: from.x, fromY: from.y, toX: to.x, toY: to.y, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: getConnectionStatus(isValid), toNode: toNode, toHandle: toHandle }));\n    }\n    let path = '';\n    const pathParams = {\n        sourceX: from.x,\n        sourceY: from.y,\n        sourcePosition: fromPosition,\n        targetX: to.x,\n        targetY: to.y,\n        targetPosition: toPosition,\n    };\n    switch (type) {\n        case ConnectionLineType.Bezier:\n            [path] = getBezierPath(pathParams);\n            break;\n        case ConnectionLineType.SimpleBezier:\n            [path] = getSimpleBezierPath(pathParams);\n            break;\n        case ConnectionLineType.Step:\n            [path] = getSmoothStepPath({\n                ...pathParams,\n                borderRadius: 0,\n            });\n            break;\n        case ConnectionLineType.SmoothStep:\n            [path] = getSmoothStepPath(pathParams);\n            break;\n        default:\n            [path] = getStraightPath(pathParams);\n    }\n    return jsx(\"path\", { d: path, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\n\nconst emptyTypes = {};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypesWarning(nodeOrEdgeTypes = emptyTypes) {\n    const typesRef = useRef(nodeOrEdgeTypes);\n    const store = useStoreApi();\n    useEffect(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const usedKeys = new Set([...Object.keys(typesRef.current), ...Object.keys(nodeOrEdgeTypes)]);\n            for (const key of usedKeys) {\n                if (typesRef.current[key] !== nodeOrEdgeTypes[key]) {\n                    store.getState().onError?.('002', errorMessages['error002']());\n                    break;\n                }\n            }\n            typesRef.current = nodeOrEdgeTypes;\n        }\n    }, [nodeOrEdgeTypes]);\n}\n\nfunction useStylesLoadedWarning() {\n    const store = useStoreApi();\n    const checked = useRef(false);\n    useEffect(() => {\n        if (process.env.NODE_ENV === 'development') {\n            if (!checked.current) {\n                const pane = document.querySelector('.react-flow__pane');\n                if (pane && !(window.getComputedStyle(pane).zIndex === '1')) {\n                    store.getState().onError?.('013', errorMessages['error013']('react'));\n                }\n                checked.current = true;\n            }\n        }\n    }, []);\n}\n\nfunction GraphViewComponent({ nodeTypes, edgeTypes, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, paneClickDistance, nodeClickDistance, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, reconnectRadius, onReconnect, onReconnectStart, onReconnectEnd, noDragClassName, noWheelClassName, noPanClassName, disableKeyboardA11y, nodeExtent, rfId, viewport, onViewportChange, }) {\n    useNodeOrEdgeTypesWarning(nodeTypes);\n    useNodeOrEdgeTypesWarning(edgeTypes);\n    useStylesLoadedWarning();\n    useOnInitHandler(onInit);\n    useViewportSync(viewport);\n    return (jsx(FlowRenderer, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, paneClickDistance: paneClickDistance, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, onViewportChange: onViewportChange, isControlledViewport: !!viewport, children: jsxs(Viewport, { children: [jsx(EdgeRenderer, { edgeTypes: edgeTypes, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onReconnect: onReconnect, onReconnectStart: onReconnectStart, onReconnectEnd: onReconnectEnd, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, reconnectRadius: reconnectRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId }), jsx(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle }), jsx(\"div\", { className: \"react-flow__edgelabel-renderer\" }), jsx(NodeRenderer, { nodeTypes: nodeTypes, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, nodeClickDistance: nodeClickDistance, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeExtent: nodeExtent, rfId: rfId }), jsx(\"div\", { className: \"react-flow__viewport-portal\" })] }) }));\n}\nGraphViewComponent.displayName = 'GraphView';\nconst GraphView = memo(GraphViewComponent);\n\nconst getInitialState = ({ nodes, edges, defaultNodes, defaultEdges, width, height, fitView, nodeOrigin, nodeExtent, } = {}) => {\n    const nodeLookup = new Map();\n    const parentLookup = new Map();\n    const connectionLookup = new Map();\n    const edgeLookup = new Map();\n    const storeEdges = defaultEdges ?? edges ?? [];\n    const storeNodes = defaultNodes ?? nodes ?? [];\n    const storeNodeOrigin = nodeOrigin ?? [0, 0];\n    const storeNodeExtent = nodeExtent ?? infiniteExtent;\n    updateConnectionLookup(connectionLookup, edgeLookup, storeEdges);\n    adoptUserNodes(storeNodes, nodeLookup, parentLookup, {\n        nodeOrigin: storeNodeOrigin,\n        nodeExtent: storeNodeExtent,\n        elevateNodesOnSelect: false,\n    });\n    let transform = [0, 0, 1];\n    if (fitView && width && height) {\n        const bounds = getInternalNodesBounds(nodeLookup, {\n            filter: (node) => !!((node.width || node.initialWidth) && (node.height || node.initialHeight)),\n        });\n        const { x, y, zoom } = getViewportForBounds(bounds, width, height, 0.5, 2, 0.1);\n        transform = [x, y, zoom];\n    }\n    return {\n        rfId: '1',\n        width: 0,\n        height: 0,\n        transform,\n        nodes: storeNodes,\n        nodeLookup,\n        parentLookup,\n        edges: storeEdges,\n        edgeLookup,\n        connectionLookup,\n        onNodesChange: null,\n        onEdgesChange: null,\n        hasDefaultNodes: defaultNodes !== undefined,\n        hasDefaultEdges: defaultEdges !== undefined,\n        panZoom: null,\n        minZoom: 0.5,\n        maxZoom: 2,\n        translateExtent: infiniteExtent,\n        nodeExtent: storeNodeExtent,\n        nodesSelectionActive: false,\n        userSelectionActive: false,\n        userSelectionRect: null,\n        connectionMode: ConnectionMode.Strict,\n        domNode: null,\n        paneDragging: false,\n        noPanClassName: 'nopan',\n        nodeOrigin: storeNodeOrigin,\n        nodeDragThreshold: 1,\n        snapGrid: [15, 15],\n        snapToGrid: false,\n        nodesDraggable: true,\n        nodesConnectable: true,\n        nodesFocusable: true,\n        edgesFocusable: true,\n        edgesReconnectable: true,\n        elementsSelectable: true,\n        elevateNodesOnSelect: true,\n        elevateEdgesOnSelect: false,\n        fitViewOnInit: false,\n        fitViewDone: false,\n        fitViewOnInitOptions: undefined,\n        selectNodesOnDrag: true,\n        multiSelectionActive: false,\n        connection: { ...initialConnection },\n        connectionClickStartHandle: null,\n        connectOnClick: true,\n        ariaLiveMessage: '',\n        autoPanOnConnect: true,\n        autoPanOnNodeDrag: true,\n        autoPanSpeed: 15,\n        connectionRadius: 20,\n        onError: devWarn,\n        isValidConnection: undefined,\n        onSelectionChangeHandlers: [],\n        lib: 'react',\n        debug: false,\n    };\n};\n\nconst createStore = ({ nodes, edges, defaultNodes, defaultEdges, width, height, fitView: fitView$1, nodeOrigin, nodeExtent, }) => createWithEqualityFn((set, get) => ({\n    ...getInitialState({ nodes, edges, width, height, fitView: fitView$1, nodeOrigin, nodeExtent, defaultNodes, defaultEdges }),\n    setNodes: (nodes) => {\n        const { nodeLookup, parentLookup, nodeOrigin, elevateNodesOnSelect } = get();\n        // setNodes() is called exclusively in response to user actions:\n        // - either when the `<ReactFlow nodes>` prop is updated in the controlled ReactFlow setup,\n        // - or when the user calls something like `reactFlowInstance.setNodes()` in an uncontrolled ReactFlow setup.\n        //\n        // When this happens, we take the note objects passed by the user and extend them with fields\n        // relevant for internal React Flow operations.\n        adoptUserNodes(nodes, nodeLookup, parentLookup, {\n            nodeOrigin,\n            nodeExtent,\n            elevateNodesOnSelect,\n            checkEquality: true,\n        });\n        set({ nodes });\n    },\n    setEdges: (edges) => {\n        const { connectionLookup, edgeLookup } = get();\n        updateConnectionLookup(connectionLookup, edgeLookup, edges);\n        set({ edges });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        if (nodes) {\n            const { setNodes } = get();\n            setNodes(nodes);\n            set({ hasDefaultNodes: true });\n        }\n        if (edges) {\n            const { setEdges } = get();\n            setEdges(edges);\n            set({ hasDefaultEdges: true });\n        }\n    },\n    // Every node gets registerd at a ResizeObserver. Whenever a node\n    // changes its dimensions, this function is called to measure the\n    // new dimensions and update the nodes.\n    updateNodeInternals: (updates, params = { triggerFitView: true }) => {\n        const { triggerNodeChanges, nodeLookup, parentLookup, fitViewOnInit, fitViewDone, fitViewOnInitOptions, domNode, nodeOrigin, nodeExtent, debug, fitViewSync, } = get();\n        const { changes, updatedInternals } = updateNodeInternals(updates, nodeLookup, parentLookup, domNode, nodeOrigin, nodeExtent);\n        if (!updatedInternals) {\n            return;\n        }\n        updateAbsolutePositions(nodeLookup, parentLookup, { nodeOrigin, nodeExtent });\n        if (params.triggerFitView) {\n            // we call fitView once initially after all dimensions are set\n            let nextFitViewDone = fitViewDone;\n            if (!fitViewDone && fitViewOnInit) {\n                nextFitViewDone = fitViewSync({\n                    ...fitViewOnInitOptions,\n                    nodes: fitViewOnInitOptions?.nodes,\n                });\n            }\n            // here we are cirmumventing the onNodesChange handler\n            // in order to be able to display nodes even if the user\n            // has not provided an onNodesChange handler.\n            // Nodes are only rendered if they have a width and height\n            // attribute which they get from this handler.\n            set({ fitViewDone: nextFitViewDone });\n        }\n        else {\n            // we always want to trigger useStore calls whenever updateNodeInternals is called\n            set({});\n        }\n        if (changes?.length > 0) {\n            if (debug) {\n                console.log('React Flow: trigger node changes', changes);\n            }\n            triggerNodeChanges?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, dragging = false) => {\n        const parentExpandChildren = [];\n        const changes = [];\n        for (const [id, dragItem] of nodeDragItems) {\n            const change = {\n                id,\n                type: 'position',\n                position: dragItem.position,\n                dragging,\n            };\n            if (dragItem?.expandParent && dragItem?.parentId && change.position) {\n                parentExpandChildren.push({\n                    id,\n                    parentId: dragItem.parentId,\n                    rect: {\n                        ...dragItem.internals.positionAbsolute,\n                        width: dragItem.measured.width,\n                        height: dragItem.measured.height,\n                    },\n                });\n                change.position.x = Math.max(0, change.position.x);\n                change.position.y = Math.max(0, change.position.y);\n            }\n            changes.push(change);\n        }\n        if (parentExpandChildren.length > 0) {\n            const { nodeLookup, parentLookup, nodeOrigin } = get();\n            const parentExpandChanges = handleExpandParent(parentExpandChildren, nodeLookup, parentLookup, nodeOrigin);\n            changes.push(...parentExpandChanges);\n        }\n        get().triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, setNodes, nodes, hasDefaultNodes, debug } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const updatedNodes = applyNodeChanges(changes, nodes);\n                setNodes(updatedNodes);\n            }\n            if (debug) {\n                console.log('React Flow: trigger node changes', changes);\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    triggerEdgeChanges: (changes) => {\n        const { onEdgesChange, setEdges, edges, hasDefaultEdges, debug } = get();\n        if (changes?.length) {\n            if (hasDefaultEdges) {\n                const updatedEdges = applyEdgeChanges(changes, edges);\n                setEdges(updatedEdges);\n            }\n            if (debug) {\n                console.log('React Flow: trigger edge changes', changes);\n            }\n            onEdgesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edgeLookup, nodeLookup, triggerNodeChanges, triggerEdgeChanges } = get();\n        if (multiSelectionActive) {\n            const nodeChanges = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n            triggerNodeChanges(nodeChanges);\n            return;\n        }\n        triggerNodeChanges(getSelectionChanges(nodeLookup, new Set([...selectedNodeIds]), true));\n        triggerEdgeChanges(getSelectionChanges(edgeLookup));\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edgeLookup, nodeLookup, triggerNodeChanges, triggerEdgeChanges } = get();\n        if (multiSelectionActive) {\n            const changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n            triggerEdgeChanges(changedEdges);\n            return;\n        }\n        triggerEdgeChanges(getSelectionChanges(edgeLookup, new Set([...selectedEdgeIds])));\n        triggerNodeChanges(getSelectionChanges(nodeLookup, new Set(), true));\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, nodes: storeNodes, nodeLookup, triggerNodeChanges, triggerEdgeChanges } = get();\n        const nodesToUnselect = nodes ? nodes : storeNodes;\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const nodeChanges = nodesToUnselect.map((n) => {\n            const internalNode = nodeLookup.get(n.id);\n            if (internalNode) {\n                // we need to unselect the internal node that was selected previously before we\n                // send the change to the user to prevent it to be selected while dragging the new node\n                internalNode.selected = false;\n            }\n            return createSelectionChange(n.id, false);\n        });\n        const edgeChanges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        triggerNodeChanges(nodeChanges);\n        triggerEdgeChanges(edgeChanges);\n    },\n    setMinZoom: (minZoom) => {\n        const { panZoom, maxZoom } = get();\n        panZoom?.setScaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { panZoom, minZoom } = get();\n        panZoom?.setScaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().panZoom?.setTranslateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    setPaneClickDistance: (clickDistance) => {\n        get().panZoom?.setClickDistance(clickDistance);\n    },\n    resetSelectedElements: () => {\n        const { edges, nodes, triggerNodeChanges, triggerEdgeChanges } = get();\n        const nodeChanges = nodes.reduce((res, node) => (node.selected ? [...res, createSelectionChange(node.id, false)] : res), []);\n        const edgeChanges = edges.reduce((res, edge) => (edge.selected ? [...res, createSelectionChange(edge.id, false)] : res), []);\n        triggerNodeChanges(nodeChanges);\n        triggerEdgeChanges(edgeChanges);\n    },\n    setNodeExtent: (nextNodeExtent) => {\n        const { nodes, nodeLookup, parentLookup, nodeOrigin, elevateNodesOnSelect, nodeExtent } = get();\n        if (nextNodeExtent[0][0] === nodeExtent[0][0] &&\n            nextNodeExtent[0][1] === nodeExtent[0][1] &&\n            nextNodeExtent[1][0] === nodeExtent[1][0] &&\n            nextNodeExtent[1][1] === nodeExtent[1][1]) {\n            return;\n        }\n        adoptUserNodes(nodes, nodeLookup, parentLookup, {\n            nodeOrigin,\n            nodeExtent: nextNodeExtent,\n            elevateNodesOnSelect,\n            checkEquality: false,\n        });\n        set({ nodeExtent: nextNodeExtent });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, panZoom, translateExtent } = get();\n        return panBy({ delta, panZoom, transform, translateExtent, width, height });\n    },\n    fitView: (options) => {\n        const { panZoom, width, height, minZoom, maxZoom, nodeLookup } = get();\n        if (!panZoom) {\n            return Promise.resolve(false);\n        }\n        const fitViewNodes = getFitViewNodes(nodeLookup, options);\n        return fitView({\n            nodes: fitViewNodes,\n            width,\n            height,\n            panZoom,\n            minZoom,\n            maxZoom,\n        }, options);\n    },\n    // we can't call an asnychronous function in updateNodeInternals\n    // for that we created this sync version of fitView\n    fitViewSync: (options) => {\n        const { panZoom, width, height, minZoom, maxZoom, nodeLookup } = get();\n        if (!panZoom) {\n            return false;\n        }\n        const fitViewNodes = getFitViewNodes(nodeLookup, options);\n        fitView({\n            nodes: fitViewNodes,\n            width,\n            height,\n            panZoom,\n            minZoom,\n            maxZoom,\n        }, options);\n        return fitViewNodes.size > 0;\n    },\n    cancelConnection: () => {\n        set({\n            connection: { ...initialConnection },\n        });\n    },\n    updateConnection: (connection) => {\n        set({ connection });\n    },\n    reset: () => set({ ...getInitialState() }),\n}), Object.is);\n\nfunction ReactFlowProvider({ initialNodes: nodes, initialEdges: edges, defaultNodes, defaultEdges, initialWidth: width, initialHeight: height, fitView, nodeOrigin, nodeExtent, children, }) {\n    const [store] = useState(() => createStore({\n        nodes,\n        edges,\n        defaultNodes,\n        defaultEdges,\n        width,\n        height,\n        fitView,\n        nodeOrigin,\n        nodeExtent,\n    }));\n    return (jsx(Provider$1, { value: store, children: jsx(BatchProvider, { children: children }) }));\n}\n\nfunction Wrapper({ children, nodes, edges, defaultNodes, defaultEdges, width, height, fitView, nodeOrigin, nodeExtent, }) {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return jsx(Fragment, { children: children });\n    }\n    return (jsx(ReactFlowProvider, { initialNodes: nodes, initialEdges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, initialWidth: width, initialHeight: height, fitView: fitView, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, children: children }));\n}\n\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nfunction ReactFlow({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes, edgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, onBeforeDelete, connectionMode, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = isMacOs() ? 'Meta' : 'Control', zoomActivationKeyCode = isMacOs() ? 'Meta' : 'Control', snapToGrid, snapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = defaultNodeOrigin, edgesFocusable, edgesReconnectable, elementsSelectable = true, defaultViewport: defaultViewport$1 = defaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, paneClickDistance = 0, nodeClickDistance = 0, children, onReconnect, onReconnectStart, onReconnectEnd, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, reconnectRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView, fitViewOptions, connectOnClick, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect, elevateEdgesOnSelect, disableKeyboardA11y = false, autoPanOnConnect, autoPanOnNodeDrag, autoPanSpeed, connectionRadius, isValidConnection, onError, style, id, nodeDragThreshold, viewport, onViewportChange, width, height, colorMode = 'light', debug, ...rest }, ref) {\n    const rfId = id || '1';\n    const colorModeClassName = useColorModeClass(colorMode);\n    return (jsx(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className, colorModeClassName]), \"data-testid\": \"rf__wrapper\", id: id, children: jsxs(Wrapper, { nodes: nodes, edges: edges, width: width, height: height, fitView: fitView, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, children: [jsx(GraphView, { onInit: onInit, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypes, edgeTypes: edgeTypes, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, defaultViewport: defaultViewport$1, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, paneClickDistance: paneClickDistance, nodeClickDistance: nodeClickDistance, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onReconnect: onReconnect, onReconnectStart: onReconnectStart, onReconnectEnd: onReconnectEnd, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, reconnectRadius: reconnectRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeExtent: nodeExtent, viewport: viewport, onViewportChange: onViewportChange }), jsx(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, edgesReconnectable: edgesReconnectable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, elevateEdgesOnSelect: elevateEdgesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onDelete: onDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, autoPanSpeed: autoPanSpeed, onError: onError, connectionRadius: connectionRadius, isValidConnection: isValidConnection, selectNodesOnDrag: selectNodesOnDrag, nodeDragThreshold: nodeDragThreshold, onBeforeDelete: onBeforeDelete, paneClickDistance: paneClickDistance, debug: debug }), jsx(SelectionListener, { onSelectionChange: onSelectionChange }), children, jsx(Attribution, { proOptions: proOptions, position: attributionPosition }), jsx(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y })] }) }));\n}\nvar index = fixedForwardRef(ReactFlow);\n\nconst selector$6 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$6);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nconst selector$5 = (s) => s.domNode?.querySelector('.react-flow__viewport-portal');\nfunction ViewportPortal({ children }) {\n    const viewPortalDiv = useStore(selector$5);\n    if (!viewPortalDiv) {\n        return null;\n    }\n    return createPortal(children, viewPortalDiv);\n}\n\n/**\n * Hook for updating node internals.\n *\n * @public\n * @returns function for updating node internals\n */\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeInternals } = store.getState();\n        const updateIds = Array.isArray(id) ? id : [id];\n        const updates = new Map();\n        updateIds.forEach((updateId) => {\n            const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${updateId}\"]`);\n            if (nodeElement) {\n                updates.set(updateId, { id: updateId, nodeElement, force: true });\n            }\n        });\n        requestAnimationFrame(() => updateNodeInternals(updates, { triggerFitView: false }));\n    }, []);\n}\n\nconst nodesSelector = (state) => state.nodes;\n/**\n * Hook for getting the current nodes from the store.\n *\n * @public\n * @returns An array of nodes\n */\nfunction useNodes() {\n    const nodes = useStore(nodesSelector, shallow);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\n/**\n * Hook for getting the current edges from the store.\n *\n * @public\n * @returns An array of edges\n */\nfunction useEdges() {\n    const edges = useStore(edgesSelector, shallow);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\n/**\n * Hook for getting the current viewport from the store.\n *\n * @public\n * @returns The current viewport\n */\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/**\n * Hook for managing the state of nodes - should only be used for prototyping / simple use cases.\n *\n * @public\n * @param initialNodes\n * @returns an array [nodes, setNodes, onNodesChange]\n */\nfunction useNodesState(initialNodes) {\n    const [nodes, setNodes] = useState(initialNodes);\n    const onNodesChange = useCallback((changes) => setNodes((nds) => applyNodeChanges(changes, nds)), []);\n    return [nodes, setNodes, onNodesChange];\n}\n/**\n * Hook for managing the state of edges - should only be used for prototyping / simple use cases.\n *\n * @public\n * @param initialEdges\n * @returns an array [edges, setEdges, onEdgesChange]\n */\nfunction useEdgesState(initialEdges) {\n    const [edges, setEdges] = useState(initialEdges);\n    const onEdgesChange = useCallback((changes) => setEdges((eds) => applyEdgeChanges(changes, eds)), []);\n    return [edges, setEdges, onEdgesChange];\n}\n\n/**\n * Hook for registering an onViewportChange handler.\n *\n * @public\n * @param params.onStart - gets called when the viewport starts changing\n * @param params.onChange - gets called when the viewport changes\n * @param params.onEnd - gets called when the viewport stops changing\n */\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\n/**\n * Hook for registering an onSelectionChange handler.\n *\n * @public\n * @param params.onChange - The handler to register\n */\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        const nextOnSelectionChangeHandlers = [...store.getState().onSelectionChangeHandlers, onChange];\n        store.setState({ onSelectionChangeHandlers: nextOnSelectionChangeHandlers });\n        return () => {\n            const nextHandlers = store.getState().onSelectionChangeHandlers.filter((fn) => fn !== onChange);\n            store.setState({ onSelectionChangeHandlers: nextHandlers });\n        };\n    }, [onChange]);\n}\n\nconst selector$4 = (options) => (s) => {\n    if (s.nodeLookup.size === 0) {\n        return false;\n    }\n    for (const [, { hidden, internals }] of s.nodeLookup) {\n        if (options.includeHiddenNodes || !hidden) {\n            if (internals.handleBounds === undefined || !nodeHasDimensions(internals.userNode)) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\nconst defaultOptions = {\n    includeHiddenNodes: false,\n};\n/**\n * Hook which returns true when all nodes are initialized.\n *\n * @public\n * @param options.includeHiddenNodes - defaults to false\n * @returns boolean indicating whether all nodes are initialized\n */\nfunction useNodesInitialized(options = defaultOptions) {\n    const initialized = useStore(selector$4(options));\n    return initialized;\n}\n\n/**\n * Hook to check if a <Handle /> is connected to another <Handle /> and get the connections.\n *\n * @public\n * @param param.type - handle type 'source' or 'target'\n * @param param.nodeId - node id - if not provided, the node id from the NodeIdContext is used\n * @param param.id - the handle id (this is only needed if the node has multiple handles of the same type)\n * @param param.onConnect - gets called when a connection is established\n * @param param.onDisconnect - gets called when a connection is removed\n * @returns an array with handle connections\n */\nfunction useHandleConnections({ type, id = null, nodeId, onConnect, onDisconnect, }) {\n    const _nodeId = useNodeId();\n    const currentNodeId = nodeId ?? _nodeId;\n    const prevConnections = useRef(null);\n    const connections = useStore((state) => state.connectionLookup.get(`${currentNodeId}-${type}-${id}`), areConnectionMapsEqual);\n    useEffect(() => {\n        // @todo dicuss if onConnect/onDisconnect should be called when the component mounts/unmounts\n        if (prevConnections.current && prevConnections.current !== connections) {\n            const _connections = connections ?? new Map();\n            handleConnectionChange(prevConnections.current, _connections, onDisconnect);\n            handleConnectionChange(_connections, prevConnections.current, onConnect);\n        }\n        prevConnections.current = connections ?? new Map();\n    }, [connections, onConnect, onDisconnect]);\n    return useMemo(() => Array.from(connections?.values() ?? []), [connections]);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodesData(nodeIds) {\n    const nodesData = useStore(useCallback((s) => {\n        const data = [];\n        const isArrayOfIds = Array.isArray(nodeIds);\n        const _nodeIds = isArrayOfIds ? nodeIds : [nodeIds];\n        for (const nodeId of _nodeIds) {\n            const node = s.nodeLookup.get(nodeId);\n            if (node) {\n                data.push({\n                    id: node.id,\n                    type: node.type,\n                    data: node.data,\n                });\n            }\n        }\n        return isArrayOfIds ? data : data[0] ?? null;\n    }, [nodeIds]), shallowNodeData);\n    return nodesData;\n}\n\n/**\n * Hook for getting an internal node by id\n *\n * @public\n * @param id - id of the node\n * @returns array with visible node ids\n */\nfunction useInternalNode(id) {\n    const node = useStore(useCallback((s) => s.nodeLookup.get(id), [id]), shallow);\n    return node;\n}\n\nfunction LinePattern({ dimensions, lineWidth, variant, className }) {\n    return (jsx(\"path\", { strokeWidth: lineWidth, d: `M${dimensions[0] / 2} 0 V${dimensions[1]} M0 ${dimensions[1] / 2} H${dimensions[0]}`, className: cc(['react-flow__background-pattern', variant, className]) }));\n}\nfunction DotPattern({ radius, className }) {\n    return (jsx(\"circle\", { cx: radius, cy: radius, r: radius, className: cc(['react-flow__background-pattern', 'dots', className]) }));\n}\n\nvar BackgroundVariant;\n(function (BackgroundVariant) {\n    BackgroundVariant[\"Lines\"] = \"lines\";\n    BackgroundVariant[\"Dots\"] = \"dots\";\n    BackgroundVariant[\"Cross\"] = \"cross\";\n})(BackgroundVariant || (BackgroundVariant = {}));\n\nconst defaultSize = {\n    [BackgroundVariant.Dots]: 1,\n    [BackgroundVariant.Lines]: 1,\n    [BackgroundVariant.Cross]: 6,\n};\nconst selector$3 = (s) => ({ transform: s.transform, patternId: `pattern-${s.rfId}` });\nfunction BackgroundComponent({ id, variant = BackgroundVariant.Dots, \n// only used for dots and cross\ngap = 20, \n// only used for lines and cross\nsize, lineWidth = 1, offset = 0, color, bgColor, style, className, patternClassName, }) {\n    const ref = useRef(null);\n    const { transform, patternId } = useStore(selector$3, shallow);\n    const patternSize = size || defaultSize[variant];\n    const isDots = variant === BackgroundVariant.Dots;\n    const isCross = variant === BackgroundVariant.Cross;\n    const gapXY = Array.isArray(gap) ? gap : [gap, gap];\n    const scaledGap = [gapXY[0] * transform[2] || 1, gapXY[1] * transform[2] || 1];\n    const scaledSize = patternSize * transform[2];\n    const offsetXY = Array.isArray(offset) ? offset : [offset, offset];\n    const patternDimensions = isCross ? [scaledSize, scaledSize] : scaledGap;\n    const scaledOffset = [\n        offsetXY[0] * transform[2] || 1 + patternDimensions[0] / 2,\n        offsetXY[1] * transform[2] || 1 + patternDimensions[1] / 2,\n    ];\n    const _patternId = `${patternId}${id ? id : ''}`;\n    return (jsxs(\"svg\", { className: cc(['react-flow__background', className]), style: {\n            ...style,\n            ...containerStyle,\n            '--xy-background-color-props': bgColor,\n            '--xy-background-pattern-color-props': color,\n        }, ref: ref, \"data-testid\": \"rf__background\", children: [jsx(\"pattern\", { id: _patternId, x: transform[0] % scaledGap[0], y: transform[1] % scaledGap[1], width: scaledGap[0], height: scaledGap[1], patternUnits: \"userSpaceOnUse\", patternTransform: `translate(-${scaledOffset[0]},-${scaledOffset[1]})`, children: isDots ? (jsx(DotPattern, { radius: scaledSize / 2, className: patternClassName })) : (jsx(LinePattern, { dimensions: patternDimensions, lineWidth: lineWidth, variant: variant, className: patternClassName })) }), jsx(\"rect\", { x: \"0\", y: \"0\", width: \"100%\", height: \"100%\", fill: `url(#${_patternId})` })] }));\n}\nBackgroundComponent.displayName = 'Background';\nconst Background = memo(BackgroundComponent);\n\nfunction PlusIcon() {\n    return (jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 32 32\", children: jsx(\"path\", { d: \"M32 18.133H18.133V32h-4.266V18.133H0v-4.266h13.867V0h4.266v13.867H32z\" }) }));\n}\n\nfunction MinusIcon() {\n    return (jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 32 5\", children: jsx(\"path\", { d: \"M0 0h32v4.2H0z\" }) }));\n}\n\nfunction FitViewIcon() {\n    return (jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 32 30\", children: jsx(\"path\", { d: \"M3.692 4.63c0-.53.4-.938.939-.938h5.215V0H4.708C2.13 0 0 2.054 0 4.63v5.216h3.692V4.631zM27.354 0h-5.2v3.692h5.17c.53 0 .984.4.984.939v5.215H32V4.631A4.624 4.624 0 0027.354 0zm.954 24.83c0 .532-.4.94-.939.94h-5.215v3.768h5.215c2.577 0 4.631-2.13 4.631-4.707v-5.139h-3.692v5.139zm-23.677.94c-.531 0-.939-.4-.939-.94v-5.138H0v5.139c0 2.577 2.13 4.707 4.708 4.707h5.138V25.77H4.631z\" }) }));\n}\n\nfunction LockIcon() {\n    return (jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 25 32\", children: jsx(\"path\", { d: \"M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0 8 0 4.571 3.429 4.571 7.619v3.048H3.048A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047zm4.724-13.866H7.467V7.619c0-2.59 2.133-4.724 4.723-4.724 2.591 0 4.724 2.133 4.724 4.724v3.048z\" }) }));\n}\n\nfunction UnlockIcon() {\n    return (jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 25 32\", children: jsx(\"path\", { d: \"M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0c-4.114 1.828-1.37 2.133.305 2.438 1.676.305 4.42 2.59 4.42 5.181v3.048H3.047A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047z\" }) }));\n}\n\nfunction ControlButton({ children, className, ...rest }) {\n    return (jsx(\"button\", { type: \"button\", className: cc(['react-flow__controls-button', className]), ...rest, children: children }));\n}\n\nconst selector$2 = (s) => ({\n    isInteractive: s.nodesDraggable || s.nodesConnectable || s.elementsSelectable,\n    minZoomReached: s.transform[2] <= s.minZoom,\n    maxZoomReached: s.transform[2] >= s.maxZoom,\n});\nfunction ControlsComponent({ style, showZoom = true, showFitView = true, showInteractive = true, fitViewOptions, onZoomIn, onZoomOut, onFitView, onInteractiveChange, className, children, position = 'bottom-left', orientation = 'vertical', 'aria-label': ariaLabel = 'React Flow controls', }) {\n    const store = useStoreApi();\n    const { isInteractive, minZoomReached, maxZoomReached } = useStore(selector$2, shallow);\n    const { zoomIn, zoomOut, fitView } = useReactFlow();\n    const onZoomInHandler = () => {\n        zoomIn();\n        onZoomIn?.();\n    };\n    const onZoomOutHandler = () => {\n        zoomOut();\n        onZoomOut?.();\n    };\n    const onFitViewHandler = () => {\n        fitView(fitViewOptions);\n        onFitView?.();\n    };\n    const onToggleInteractivity = () => {\n        store.setState({\n            nodesDraggable: !isInteractive,\n            nodesConnectable: !isInteractive,\n            elementsSelectable: !isInteractive,\n        });\n        onInteractiveChange?.(!isInteractive);\n    };\n    const orientationClass = orientation === 'horizontal' ? 'horizontal' : 'vertical';\n    return (jsxs(Panel, { className: cc(['react-flow__controls', orientationClass, className]), position: position, style: style, \"data-testid\": \"rf__controls\", \"aria-label\": ariaLabel, children: [showZoom && (jsxs(Fragment, { children: [jsx(ControlButton, { onClick: onZoomInHandler, className: \"react-flow__controls-zoomin\", title: \"zoom in\", \"aria-label\": \"zoom in\", disabled: maxZoomReached, children: jsx(PlusIcon, {}) }), jsx(ControlButton, { onClick: onZoomOutHandler, className: \"react-flow__controls-zoomout\", title: \"zoom out\", \"aria-label\": \"zoom out\", disabled: minZoomReached, children: jsx(MinusIcon, {}) })] })), showFitView && (jsx(ControlButton, { className: \"react-flow__controls-fitview\", onClick: onFitViewHandler, title: \"fit view\", \"aria-label\": \"fit view\", children: jsx(FitViewIcon, {}) })), showInteractive && (jsx(ControlButton, { className: \"react-flow__controls-interactive\", onClick: onToggleInteractivity, title: \"toggle interactivity\", \"aria-label\": \"toggle interactivity\", children: isInteractive ? jsx(UnlockIcon, {}) : jsx(LockIcon, {}) })), children] }));\n}\nControlsComponent.displayName = 'Controls';\nconst Controls = memo(ControlsComponent);\n\nfunction MiniMapNodeComponent({ id, x, y, width, height, style, color, strokeColor, strokeWidth, className, borderRadius, shapeRendering, selected, onClick, }) {\n    const { background, backgroundColor } = style || {};\n    const fill = (color || background || backgroundColor);\n    return (jsx(\"rect\", { className: cc(['react-flow__minimap-node', { selected }, className]), x: x, y: y, rx: borderRadius, ry: borderRadius, width: width, height: height, style: {\n            fill,\n            stroke: strokeColor,\n            strokeWidth,\n        }, shapeRendering: shapeRendering, onClick: onClick ? (event) => onClick(event, id) : undefined }));\n}\nconst MiniMapNode = memo(MiniMapNodeComponent);\n\nconst selectorNodeIds = (s) => s.nodes.map((node) => node.id);\nconst getAttrFunction = (func) => func instanceof Function ? func : () => func;\nfunction MiniMapNodes({ nodeStrokeColor, nodeColor, nodeClassName = '', nodeBorderRadius = 5, nodeStrokeWidth, \n// We need to rename the prop to be `CapitalCase` so that JSX will render it as\n// a component properly.\nnodeComponent: NodeComponent = MiniMapNode, onClick, }) {\n    const nodeIds = useStore(selectorNodeIds, shallow);\n    const nodeColorFunc = getAttrFunction(nodeColor);\n    const nodeStrokeColorFunc = getAttrFunction(nodeStrokeColor);\n    const nodeClassNameFunc = getAttrFunction(nodeClassName);\n    const shapeRendering = typeof window === 'undefined' || !!window.chrome ? 'crispEdges' : 'geometricPrecision';\n    return (jsx(Fragment, { children: nodeIds.map((nodeId) => (\n        // The split of responsibilities between MiniMapNodes and\n        // NodeComponentWrapper may appear weird. However, it’s designed to\n        // minimize the cost of updates when individual nodes change.\n        //\n        // For more details, see a similar commit in `NodeRenderer/index.tsx`.\n        jsx(NodeComponentWrapper, { id: nodeId, nodeColorFunc: nodeColorFunc, nodeStrokeColorFunc: nodeStrokeColorFunc, nodeClassNameFunc: nodeClassNameFunc, nodeBorderRadius: nodeBorderRadius, nodeStrokeWidth: nodeStrokeWidth, NodeComponent: NodeComponent, onClick: onClick, shapeRendering: shapeRendering }, nodeId))) }));\n}\nfunction NodeComponentWrapperInner({ id, nodeColorFunc, nodeStrokeColorFunc, nodeClassNameFunc, nodeBorderRadius, nodeStrokeWidth, shapeRendering, NodeComponent, onClick, }) {\n    const { node, x, y, width, height } = useStore((s) => {\n        const node = s.nodeLookup.get(id);\n        const { x, y } = node.internals.positionAbsolute;\n        const { width, height } = getNodeDimensions(node);\n        return {\n            node,\n            x,\n            y,\n            width,\n            height,\n        };\n    }, shallow);\n    if (!node || node.hidden || !nodeHasDimensions(node)) {\n        return null;\n    }\n    return (jsx(NodeComponent, { x: x, y: y, width: width, height: height, style: node.style, selected: !!node.selected, className: nodeClassNameFunc(node), color: nodeColorFunc(node), borderRadius: nodeBorderRadius, strokeColor: nodeStrokeColorFunc(node), strokeWidth: nodeStrokeWidth, shapeRendering: shapeRendering, onClick: onClick, id: node.id }));\n}\nconst NodeComponentWrapper = memo(NodeComponentWrapperInner);\nvar MiniMapNodes$1 = memo(MiniMapNodes);\n\nconst defaultWidth = 200;\nconst defaultHeight = 150;\nconst selector$1 = (s) => {\n    const viewBB = {\n        x: -s.transform[0] / s.transform[2],\n        y: -s.transform[1] / s.transform[2],\n        width: s.width / s.transform[2],\n        height: s.height / s.transform[2],\n    };\n    return {\n        viewBB,\n        boundingRect: s.nodeLookup.size > 0 ? getBoundsOfRects(getInternalNodesBounds(s.nodeLookup), viewBB) : viewBB,\n        rfId: s.rfId,\n        panZoom: s.panZoom,\n        translateExtent: s.translateExtent,\n        flowWidth: s.width,\n        flowHeight: s.height,\n    };\n};\nconst ARIA_LABEL_KEY = 'react-flow__minimap-desc';\nfunction MiniMapComponent({ style, className, nodeStrokeColor, nodeColor, nodeClassName = '', nodeBorderRadius = 5, nodeStrokeWidth, \n// We need to rename the prop to be `CapitalCase` so that JSX will render it as\n// a component properly.\nnodeComponent, bgColor, maskColor, maskStrokeColor, maskStrokeWidth, position = 'bottom-right', onClick, onNodeClick, pannable = false, zoomable = false, ariaLabel = 'React Flow mini map', inversePan, zoomStep = 10, offsetScale = 5, }) {\n    const store = useStoreApi();\n    const svg = useRef(null);\n    const { boundingRect, viewBB, rfId, panZoom, translateExtent, flowWidth, flowHeight } = useStore(selector$1, shallow);\n    const elementWidth = style?.width ?? defaultWidth;\n    const elementHeight = style?.height ?? defaultHeight;\n    const scaledWidth = boundingRect.width / elementWidth;\n    const scaledHeight = boundingRect.height / elementHeight;\n    const viewScale = Math.max(scaledWidth, scaledHeight);\n    const viewWidth = viewScale * elementWidth;\n    const viewHeight = viewScale * elementHeight;\n    const offset = offsetScale * viewScale;\n    const x = boundingRect.x - (viewWidth - boundingRect.width) / 2 - offset;\n    const y = boundingRect.y - (viewHeight - boundingRect.height) / 2 - offset;\n    const width = viewWidth + offset * 2;\n    const height = viewHeight + offset * 2;\n    const labelledBy = `${ARIA_LABEL_KEY}-${rfId}`;\n    const viewScaleRef = useRef(0);\n    const minimapInstance = useRef();\n    viewScaleRef.current = viewScale;\n    useEffect(() => {\n        if (svg.current && panZoom) {\n            minimapInstance.current = XYMinimap({\n                domNode: svg.current,\n                panZoom,\n                getTransform: () => store.getState().transform,\n                getViewScale: () => viewScaleRef.current,\n            });\n            return () => {\n                minimapInstance.current?.destroy();\n            };\n        }\n    }, [panZoom]);\n    useEffect(() => {\n        minimapInstance.current?.update({\n            translateExtent,\n            width: flowWidth,\n            height: flowHeight,\n            inversePan,\n            pannable,\n            zoomStep,\n            zoomable,\n        });\n    }, [pannable, zoomable, inversePan, zoomStep, translateExtent, flowWidth, flowHeight]);\n    const onSvgClick = onClick\n        ? (event) => {\n            const [x, y] = minimapInstance.current?.pointer(event) || [0, 0];\n            onClick(event, { x, y });\n        }\n        : undefined;\n    const onSvgNodeClick = onNodeClick\n        ? useCallback((event, nodeId) => {\n            const node = store.getState().nodeLookup.get(nodeId);\n            onNodeClick(event, node);\n        }, [])\n        : undefined;\n    return (jsx(Panel, { position: position, style: {\n            ...style,\n            '--xy-minimap-background-color-props': typeof bgColor === 'string' ? bgColor : undefined,\n            '--xy-minimap-mask-background-color-props': typeof maskColor === 'string' ? maskColor : undefined,\n            '--xy-minimap-mask-stroke-color-props': typeof maskStrokeColor === 'string' ? maskStrokeColor : undefined,\n            '--xy-minimap-mask-stroke-width-props': typeof maskStrokeWidth === 'number' ? maskStrokeWidth * viewScale : undefined,\n            '--xy-minimap-node-background-color-props': typeof nodeColor === 'string' ? nodeColor : undefined,\n            '--xy-minimap-node-stroke-color-props': typeof nodeStrokeColor === 'string' ? nodeStrokeColor : undefined,\n            '--xy-minimap-node-stroke-width-props': typeof nodeStrokeWidth === 'string' ? nodeStrokeWidth : undefined,\n        }, className: cc(['react-flow__minimap', className]), \"data-testid\": \"rf__minimap\", children: jsxs(\"svg\", { width: elementWidth, height: elementHeight, viewBox: `${x} ${y} ${width} ${height}`, className: \"react-flow__minimap-svg\", role: \"img\", \"aria-labelledby\": labelledBy, ref: svg, onClick: onSvgClick, children: [ariaLabel && jsx(\"title\", { id: labelledBy, children: ariaLabel }), jsx(MiniMapNodes$1, { onClick: onSvgNodeClick, nodeColor: nodeColor, nodeStrokeColor: nodeStrokeColor, nodeBorderRadius: nodeBorderRadius, nodeClassName: nodeClassName, nodeStrokeWidth: nodeStrokeWidth, nodeComponent: nodeComponent }), jsx(\"path\", { className: \"react-flow__minimap-mask\", d: `M${x - offset},${y - offset}h${width + offset * 2}v${height + offset * 2}h${-width - offset * 2}z\n        M${viewBB.x},${viewBB.y}h${viewBB.width}v${viewBB.height}h${-viewBB.width}z`, fillRule: \"evenodd\", pointerEvents: \"none\" })] }) }));\n}\nMiniMapComponent.displayName = 'MiniMap';\nconst MiniMap = memo(MiniMapComponent);\n\nfunction ResizeControl({ nodeId, position, variant = ResizeControlVariant.Handle, className, style = {}, children, color, minWidth = 10, minHeight = 10, maxWidth = Number.MAX_VALUE, maxHeight = Number.MAX_VALUE, keepAspectRatio = false, shouldResize, onResizeStart, onResize, onResizeEnd, }) {\n    const contextNodeId = useNodeId();\n    const id = typeof nodeId === 'string' ? nodeId : contextNodeId;\n    const store = useStoreApi();\n    const resizeControlRef = useRef(null);\n    const defaultPosition = variant === ResizeControlVariant.Line ? 'right' : 'bottom-right';\n    const controlPosition = position ?? defaultPosition;\n    const resizer = useRef(null);\n    useEffect(() => {\n        if (!resizeControlRef.current || !id) {\n            return;\n        }\n        if (!resizer.current) {\n            resizer.current = XYResizer({\n                domNode: resizeControlRef.current,\n                nodeId: id,\n                getStoreItems: () => {\n                    const { nodeLookup, transform, snapGrid, snapToGrid, nodeOrigin, domNode } = store.getState();\n                    return {\n                        nodeLookup,\n                        transform,\n                        snapGrid,\n                        snapToGrid,\n                        nodeOrigin,\n                        paneDomNode: domNode,\n                    };\n                },\n                onChange: (change, childChanges) => {\n                    const { triggerNodeChanges, nodeLookup, parentLookup, nodeOrigin } = store.getState();\n                    const changes = [];\n                    const nextPosition = { x: change.x, y: change.y };\n                    const node = nodeLookup.get(id);\n                    if (node && node.expandParent && node.parentId) {\n                        const origin = node.origin ?? nodeOrigin;\n                        const width = change.width ?? node.measured.width;\n                        const height = change.height ?? node.measured.height;\n                        const child = {\n                            id: node.id,\n                            parentId: node.parentId,\n                            rect: {\n                                width,\n                                height,\n                                ...evaluateAbsolutePosition({\n                                    x: change.x ?? node.position.x,\n                                    y: change.y ?? node.position.y,\n                                }, { width, height }, node.parentId, nodeLookup, origin),\n                            },\n                        };\n                        const parentExpandChanges = handleExpandParent([child], nodeLookup, parentLookup, nodeOrigin);\n                        changes.push(...parentExpandChanges);\n                        // when the parent was expanded by the child node, its position will be clamped at\n                        // 0,0 when node origin is 0,0 and to width, height if it's 1,1\n                        nextPosition.x = change.x ? Math.max(origin[0] * width, change.x) : undefined;\n                        nextPosition.y = change.y ? Math.max(origin[1] * height, change.y) : undefined;\n                    }\n                    if (nextPosition.x !== undefined && nextPosition.y !== undefined) {\n                        const positionChange = {\n                            id,\n                            type: 'position',\n                            position: { ...nextPosition },\n                        };\n                        changes.push(positionChange);\n                    }\n                    if (change.width !== undefined && change.height !== undefined) {\n                        const dimensionChange = {\n                            id,\n                            type: 'dimensions',\n                            resizing: true,\n                            setAttributes: true,\n                            dimensions: {\n                                width: change.width,\n                                height: change.height,\n                            },\n                        };\n                        changes.push(dimensionChange);\n                    }\n                    for (const childChange of childChanges) {\n                        const positionChange = {\n                            ...childChange,\n                            type: 'position',\n                        };\n                        changes.push(positionChange);\n                    }\n                    triggerNodeChanges(changes);\n                },\n                onEnd: () => {\n                    const dimensionChange = {\n                        id: id,\n                        type: 'dimensions',\n                        resizing: false,\n                    };\n                    store.getState().triggerNodeChanges([dimensionChange]);\n                },\n            });\n        }\n        resizer.current.update({\n            controlPosition,\n            boundaries: {\n                minWidth,\n                minHeight,\n                maxWidth,\n                maxHeight,\n            },\n            keepAspectRatio,\n            onResizeStart,\n            onResize,\n            onResizeEnd,\n            shouldResize,\n        });\n        return () => {\n            resizer.current?.destroy();\n        };\n    }, [\n        controlPosition,\n        minWidth,\n        minHeight,\n        maxWidth,\n        maxHeight,\n        keepAspectRatio,\n        onResizeStart,\n        onResize,\n        onResizeEnd,\n        shouldResize,\n    ]);\n    const positionClassNames = controlPosition.split('-');\n    const colorStyleProp = variant === ResizeControlVariant.Line ? 'borderColor' : 'backgroundColor';\n    const controlStyle = color ? { ...style, [colorStyleProp]: color } : style;\n    return (jsx(\"div\", { className: cc(['react-flow__resize-control', 'nodrag', ...positionClassNames, variant, className]), ref: resizeControlRef, style: controlStyle, children: children }));\n}\nconst NodeResizeControl = memo(ResizeControl);\n\nfunction NodeResizer({ nodeId, isVisible = true, handleClassName, handleStyle, lineClassName, lineStyle, color, minWidth = 10, minHeight = 10, maxWidth = Number.MAX_VALUE, maxHeight = Number.MAX_VALUE, keepAspectRatio = false, shouldResize, onResizeStart, onResize, onResizeEnd, }) {\n    if (!isVisible) {\n        return null;\n    }\n    return (jsxs(Fragment, { children: [XY_RESIZER_LINE_POSITIONS.map((position) => (jsx(NodeResizeControl, { className: lineClassName, style: lineStyle, nodeId: nodeId, position: position, variant: ResizeControlVariant.Line, color: color, minWidth: minWidth, minHeight: minHeight, maxWidth: maxWidth, maxHeight: maxHeight, onResizeStart: onResizeStart, keepAspectRatio: keepAspectRatio, shouldResize: shouldResize, onResize: onResize, onResizeEnd: onResizeEnd }, position))), XY_RESIZER_HANDLE_POSITIONS.map((position) => (jsx(NodeResizeControl, { className: handleClassName, style: handleStyle, nodeId: nodeId, position: position, color: color, minWidth: minWidth, minHeight: minHeight, maxWidth: maxWidth, maxHeight: maxHeight, onResizeStart: onResizeStart, keepAspectRatio: keepAspectRatio, shouldResize: shouldResize, onResize: onResize, onResizeEnd: onResizeEnd }, position)))] }));\n}\n\nconst selector = (state) => state.domNode?.querySelector('.react-flow__renderer');\nfunction NodeToolbarPortal({ children }) {\n    const wrapperRef = useStore(selector);\n    if (!wrapperRef) {\n        return null;\n    }\n    return createPortal(children, wrapperRef);\n}\n\nconst nodeEqualityFn = (a, b) => a?.internals.positionAbsolute.x !== b?.internals.positionAbsolute.x ||\n    a?.internals.positionAbsolute.y !== b?.internals.positionAbsolute.y ||\n    a?.measured.width !== b?.measured.width ||\n    a?.measured.height !== b?.measured.height ||\n    a?.selected !== b?.selected ||\n    a?.internals.z !== b?.internals.z;\nconst nodesEqualityFn = (a, b) => {\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const [key, node] of a) {\n        if (nodeEqualityFn(node, b.get(key))) {\n            return false;\n        }\n    }\n    return true;\n};\nconst storeSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n    selectedNodesCount: state.nodes.filter((node) => node.selected).length,\n});\nfunction NodeToolbar({ nodeId, children, className, style, isVisible, position = Position.Top, offset = 10, align = 'center', ...rest }) {\n    const contextNodeId = useNodeId();\n    const nodesSelector = useCallback((state) => {\n        const nodeIds = Array.isArray(nodeId) ? nodeId : [nodeId || contextNodeId || ''];\n        const internalNodes = nodeIds.reduce((res, id) => {\n            const node = state.nodeLookup.get(id);\n            if (node) {\n                res.set(node.id, node);\n            }\n            return res;\n        }, new Map());\n        return internalNodes;\n    }, [nodeId, contextNodeId]);\n    const nodes = useStore(nodesSelector, nodesEqualityFn);\n    const { x, y, zoom, selectedNodesCount } = useStore(storeSelector, shallow);\n    // if isVisible is not set, we show the toolbar only if its node is selected and no other node is selected\n    const isActive = typeof isVisible === 'boolean'\n        ? isVisible\n        : nodes.size === 1 && nodes.values().next().value.selected && selectedNodesCount === 1;\n    if (!isActive || !nodes.size) {\n        return null;\n    }\n    const nodeRect = getInternalNodesBounds(nodes);\n    const nodesArray = Array.from(nodes.values());\n    const zIndex = Math.max(...nodesArray.map((node) => node.internals.z + 1));\n    const wrapperStyle = {\n        position: 'absolute',\n        transform: getNodeToolbarTransform(nodeRect, { x, y, zoom }, position, offset, align),\n        zIndex,\n        ...style,\n    };\n    return (jsx(NodeToolbarPortal, { children: jsx(\"div\", { style: wrapperStyle, className: cc(['react-flow__node-toolbar', className]), ...rest, \"data-id\": nodesArray.reduce((acc, node) => `${acc}${node.id} `, '').trim(), children: children }) }));\n}\n\nexport { Background, BackgroundVariant, BaseEdge, BezierEdge, ControlButton, Controls, EdgeLabelRenderer, EdgeText, Handle, MiniMap, NodeResizeControl, NodeResizer, NodeToolbar, Panel, index as ReactFlow, ReactFlowProvider, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, ViewportPortal, applyEdgeChanges, applyNodeChanges, getSimpleBezierPath, isEdge, isNode, useConnection, useEdges, useEdgesState, useHandleConnections, useInternalNode, useKeyPress, useNodeId, useNodes, useNodesData, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import { Connection, Node, Edge, EdgeChange, NodeChange } from '@xyflow/react'\nimport deepmerge from 'deepmerge'\nimport isUndefined from 'lodash/isUndefined'\nimport omitBy from 'lodash/omitBy'\nimport { EntityArrayTypes, EntityTypesMap, FlowEdge, FlowNode } from 'src/services/database/types'\n\nexport const flowNodeToNode = (node: FlowNode, data: Record<string, unknown>): Node => {\n  return {\n    id: node.id,\n    type: node.node_type,\n    position: {\n      x: node.x || 0,\n      y: node.y || 0,\n    },\n    width: node.width || undefined,\n    height: node.height || undefined,\n    data: {\n      loading: false,\n      flowNode: node,\n      ...data,\n    },\n  }\n}\n\nexport const flowEdgeToEdge = (edge: FlowEdge): Edge => {\n  return {\n    id: edge.id,\n    target: edge.target,\n    source: edge.target,\n    targetHandle: edge.targetHandle,\n    sourceHandle: edge.sourceHandle,\n  }\n}\n\nexport const nodeFlowToEdge = (edge: FlowEdge): Edge => {\n  return {\n    id: edge.id,\n    source: edge.source,\n    target: edge.target,\n    targetHandle: edge.targetHandle,\n    sourceHandle: edge.sourceHandle,\n  }\n}\n\nexport const filterUserConnections = (connections: Connection[]) => {\n  return connections.filter((connection) =>\n    'edgeId' in connection ? `${connection.edgeId}`.startsWith('xy-edge__') : false,\n  )\n}\n\nexport const flowNodesToNodeChanges = (\n  flowNodes: FlowNode[],\n  currentNodes: Node[],\n  flowNodeSources: Partial<Record<keyof EntityTypesMap, EntityArrayTypes>>,\n): { changes: NodeChange[]; newIds: string[] } => {\n  const newIds: string[] = []\n  const changes = flowNodes.map((node) => {\n    const oldNode = currentNodes.find((item) => node.id === item.id)\n    if (!oldNode) {\n      newIds.push(node.id)\n    }\n\n    const source = flowNodeSources?.[node.source_type]?.find((item) => item?.id === node.source_id)\n\n    const newNode = flowNodeToNode(node, {\n      ...oldNode?.data,\n      entity: source,\n    })\n\n    return {\n      type: oldNode ? 'replace' : 'add',\n      id: node.id,\n      item: oldNode\n        ? deepmerge({ ...(oldNode || {}), data: undefined }, omitBy(newNode, isUndefined))\n        : newNode,\n    } as NodeChange\n  })\n\n  return {\n    changes,\n    newIds: [],\n  }\n}\n\nexport const flowEdgesToEdgeChanges = (\n  flowEdges: FlowEdge[],\n  currentEdges: Edge[],\n): { changes: EdgeChange[]; updatedIds: string[]; deletedIds: string[] } => {\n  const updatedIds: string[] = []\n  const deletedIds: string[] = []\n  const changes = flowEdges.map((item) => {\n    const old = currentEdges.find(\n      (edge) => item.source === edge.source && item.target === edge.target,\n    )\n    if (!old || old.id !== item.id) {\n      // ID mismatch\n      if (old) {\n        deletedIds.push(old.id)\n      }\n      return {\n        type: 'add' as const,\n        item: nodeFlowToEdge(item),\n      } as EdgeChange\n    }\n    updatedIds.push(item.id)\n    return {\n      type: 'replace' as const,\n      item: nodeFlowToEdge(item),\n    } as EdgeChange\n  })\n  currentEdges.forEach((edge) => {\n    if (!updatedIds.includes(edge.id)) {\n      deletedIds.push(edge.id)\n    }\n  })\n  return {\n    changes,\n    updatedIds,\n    deletedIds,\n  }\n}\n","import { Node } from '@xyflow/react'\nimport { FlowNodeTypeEnum } from 'src/services/database/types'\n\nimport { DEFAULT_EMBEDDING_MODEL } from './embedding'\n\nexport const TOOLBOX_NODE_SIZE = {\n  width: 440,\n  height: 360,\n}\n\nexport const SESSION_INFO_SIZE = {\n  width: 380,\n  height: 650,\n}\n\nexport const SYSTEM_NODE_IDS = {\n  [FlowNodeTypeEnum.Toolbox]: 'toolbox',\n  [FlowNodeTypeEnum.SessionInfo]: 'session-info',\n  [FlowNodeTypeEnum.DefaultEmbeddingModel]: 'default-embedding-model',\n  [FlowNodeTypeEnum.ApplicationBar]: 'application-bar',\n}\n\nexport const TOOLBOX_NODE: Node = {\n  id: SYSTEM_NODE_IDS[FlowNodeTypeEnum.Toolbox],\n  type: FlowNodeTypeEnum.Toolbox,\n  position: { x: 10 + SESSION_INFO_SIZE.width + 20, y: 10 },\n  measured: TOOLBOX_NODE_SIZE,\n  data: {},\n}\n\nexport const SESSION_INFO_NODE: Node = {\n  id: SYSTEM_NODE_IDS[FlowNodeTypeEnum.SessionInfo],\n  type: FlowNodeTypeEnum.SessionInfo,\n  position: { x: 10, y: 10 },\n  measured: SESSION_INFO_SIZE,\n  data: {},\n}\n\nexport const EMBEDDING_MODEL: Node = {\n  id: SYSTEM_NODE_IDS[FlowNodeTypeEnum.DefaultEmbeddingModel],\n  type: FlowNodeTypeEnum.DefaultEmbeddingModel,\n  position: { x: 10 + SESSION_INFO_SIZE.width + TOOLBOX_NODE_SIZE.width + 40, y: 80 },\n  data: {\n    model: DEFAULT_EMBEDDING_MODEL,\n  },\n}\n\nexport const APPLICATION_BAR_MODEL: Node = {\n  id: SYSTEM_NODE_IDS[FlowNodeTypeEnum.ApplicationBar],\n  type: FlowNodeTypeEnum.ApplicationBar,\n  position: { x: 10 + SESSION_INFO_SIZE.width + TOOLBOX_NODE_SIZE.width + 40, y: 10 },\n  data: {},\n}\n\nexport const DEFAULT_SYSTEM_NODES = [\n  TOOLBOX_NODE,\n  SESSION_INFO_NODE,\n  EMBEDDING_MODEL,\n  APPLICATION_BAR_MODEL,\n]\n\nexport const DISABLED_DELETE_NODE_TYPES = [\n  FlowNodeTypeEnum.Toolbox,\n  FlowNodeTypeEnum.SessionInfo,\n  FlowNodeTypeEnum.ApplicationBar,\n  FlowNodeTypeEnum.EditorApp,\n]\n","import type { Edge, Node } from '@xyflow/react'\nimport { DEFAULT_SYSTEM_NODES } from 'src/constants/nodes'\nimport type { FlowEdge, FlowNode, AppEntityNames } from 'src/services/database/types'\nimport { FindManyOptions } from 'typeorm'\n\nexport interface FlowState {\n  flowEdges: FlowEdge[]\n  flowNodes: FlowNode[]\n  ready: boolean\n  flowEdgeLoading?: boolean\n  flowNodeLoading?: boolean\n  syncedNodes: string[]\n  syncedEdges: string[]\n  syncNodeQueue: {\n    query: FindManyOptions<FlowNode>\n    timestamp: number\n    syncType: `${AppEntityNames}`\n  }[]\n  syncEdgeQueue: { timestamp: number }[]\n  edges: Edge[]\n  nodes: Node[]\n}\n\nexport const defaultFlowState: FlowState = {\n  flowNodes: [],\n  flowEdges: [],\n  ready: true,\n  flowEdgeLoading: false,\n  flowNodeLoading: false,\n  syncedNodes: [],\n  syncedEdges: [],\n  syncNodeQueue: [],\n  syncEdgeQueue: [],\n  edges: [],\n  nodes: DEFAULT_SYSTEM_NODES,\n}\n","import omitBy from 'lodash/omitBy'\nimport isUndefined from 'lodash/isUndefined'\nimport {\n  addEdge,\n  applyEdgeChanges,\n  applyNodeChanges,\n  Connection,\n  EdgeChange,\n  NodeChange,\n  type Edge,\n  type Node,\n} from '@xyflow/react'\nimport { nanoid } from 'nanoid'\nimport deepmerge from 'deepmerge'\nimport {\n  AppEntityNames,\n  EntityArrayTypes,\n  EntityTypes,\n  FlowEdge,\n  FlowNode,\n} from 'src/services/database/types'\nimport { In, type FindManyOptions } from 'src/services/database/typeorm-wrapper'\nimport type { GetState, SetState } from 'src/utils/zustand'\nimport { getRepository } from 'src/services/database'\nimport {\n  flowEdgesToEdgeChanges,\n  flowEdgeToEdge,\n  flowNodesToNodeChanges,\n  flowNodeToNode,\n} from 'src/utils/flow'\nimport { logWarn } from 'src/utils/logger'\n\nimport { defaultFlowState, FlowState } from './state'\nimport { useSessionState } from '../session'\n\nexport interface FlowStateActions {\n  reset: () => void\n  // Database node\n  findFlowNodesWithSource: (\n    query: FindManyOptions<FlowNode>,\n    option?: { clean?: boolean },\n  ) => Promise<FlowNode[]>\n  findFlowEdges: (\n    query?: FindManyOptions<FlowEdge>,\n    option?: { clean?: boolean },\n  ) => Promise<FlowEdge[]>\n  deleteFlowNode: (node: Partial<FlowNode>) => Promise<void>\n  deleteFlowEdge: (edge: Partial<FlowEdge>) => Promise<void>\n  createOrUpdateFlowNode: (\n    node: Partial<FlowNode>,\n    options?: { lazy?: boolean },\n  ) => Promise<FlowNode | undefined>\n  createOrUpdateFlowEdge: (\n    edge: Partial<FlowEdge>,\n    options?: { lazy?: boolean },\n  ) => Promise<FlowEdge | undefined>\n  // Handle change queue\n  pushSyncNodeQueue: (syncType: `${AppEntityNames}`, query: FindManyOptions<FlowNode>) => void\n  pushSyncEdgeQueue: () => void\n  removeSyncNodeQueue: (timestamps: number[]) => void\n  removeSyncEdgeQueue: (timestamps: number[]) => void\n  // Real flow node\n  setNodes: (newNodes: Node[] | ((old: Node[]) => Node[])) => void\n  setEdges: (newEdges: Edge[] | ((old: Edge[]) => Edge[])) => void\n  updateNodes: (changes: NodeChange<Node>[]) => void\n  updateEdges: (changes: EdgeChange<Edge>[]) => void\n  flowNodesToNodes: (newNodes: FlowNode[]) => void\n  flowEdgesToEdges: (newEdges: FlowEdge[]) => void\n  addConnectionToEdges: (connection: Connection) => void\n  // Update directly no additional logic\n  updateFlowNode: (node: Partial<FlowNode>, options?: { silent?: boolean }) => Promise<void>\n  getNodes: (nodeIds: string[]) => Node[]\n}\n\nexport const findFlowNodesWithSource = async (query: FindManyOptions<FlowNode>) => {\n  const flowNodes = await getRepository('FlowNode').find(query)\n  const entityGroups = flowNodes.reduce(\n    (all: Partial<Record<`${AppEntityNames}`, FlowNode[]>>, node) => {\n      if (!all[node.source_type]) {\n        all[node.source_type] = []\n      }\n      all[node.source_type]?.push(node)\n      return all\n    },\n    {},\n  )\n  const flowNodeDatas: Partial<Record<`${AppEntityNames}`, EntityArrayTypes>> = {}\n  await Promise.all(\n    Object.entries(entityGroups).map(async ([key, groupNodes]) => {\n      const entityName = key as AppEntityNames\n      flowNodeDatas[entityName] = (await getRepository(entityName).find({\n        where: {\n          id: In(groupNodes.map((node) => node.source_id)),\n        },\n      })) as EntityArrayTypes\n    }),\n  )\n  return {\n    flowNodes,\n    entityGroups,\n    flowNodeDatas,\n  }\n}\n\nexport const getFlowStateActions = (\n  set: SetState<FlowState>,\n  get: GetState<FlowState>,\n): FlowStateActions => {\n  return {\n    reset: () => {\n      set(defaultFlowState)\n    },\n    setNodes: (newNodes) => {\n      if (typeof newNodes === 'function') {\n        set({ nodes: newNodes(get().nodes) })\n        return\n      }\n      set({ nodes: newNodes })\n    },\n    setEdges: (newEdges) => {\n      if (typeof newEdges === 'function') {\n        set({ edges: newEdges(get().edges) })\n        return\n      }\n      set({ edges: newEdges })\n    },\n    updateNodes: (changes) => {\n      const nodes = get().nodes\n      set({ nodes: applyNodeChanges(changes, nodes) })\n    },\n    updateEdges: (changes) => {\n      const edges = get().edges\n      set({ edges: applyEdgeChanges(changes, edges) })\n    },\n    addConnectionToEdges: (connection: Connection) => {\n      const edges = get().edges\n      set({ edges: addEdge(connection, edges) })\n    },\n    flowNodesToNodes: (\n      flowNodes,\n      flowNodeDatas: Partial<Record<`${AppEntityNames}`, EntityArrayTypes>> = {},\n    ) => {\n      const currentNodes = get().nodes\n      const { changes } = flowNodesToNodeChanges(flowNodes, currentNodes, flowNodeDatas)\n      set({ nodes: applyNodeChanges(changes, currentNodes) })\n    },\n    flowEdgesToEdges: (flowEdges) => {\n      const currentEdges = get().edges\n      const { changes, updatedIds, deletedIds } = flowEdgesToEdgeChanges(flowEdges, currentEdges)\n      // Remove unused edges\n      currentEdges.forEach((edge) => {\n        if (!updatedIds.includes(edge.id)) {\n          deletedIds.push(edge.id)\n        }\n      })\n      deletedIds.forEach((id) => {\n        changes.push({ type: 'remove' as const, id: id })\n      })\n      set({ edges: applyEdgeChanges(changes, currentEdges) })\n    },\n    getNodes: (nodeIds) => {\n      const nodes = get().nodes\n      return nodes.filter((node) => nodeIds.includes(node.id))\n    },\n    removeSyncNodeQueue: (timestamps) => {\n      const { syncNodeQueue } = get()\n      for (const timestamp of timestamps) {\n        const index = syncNodeQueue.findIndex((item) => item.timestamp === timestamp)\n        if (index > -1) {\n          syncNodeQueue.splice(index, 1)\n        }\n      }\n      set({ syncNodeQueue })\n    },\n    removeSyncEdgeQueue: (timestamps) => {\n      const { syncEdgeQueue } = get()\n      for (const timestamp of timestamps) {\n        const index = syncEdgeQueue.findIndex((item) => item.timestamp === timestamp)\n        if (index > -1) {\n          syncEdgeQueue.splice(index, 1)\n        }\n      }\n      set({ syncEdgeQueue })\n    },\n    pushSyncNodeQueue: (syncType, query) => {\n      const { syncNodeQueue } = get()\n      set({\n        syncNodeQueue: [...syncNodeQueue, { query, timestamp: Date.now(), syncType }],\n      })\n    },\n    pushSyncEdgeQueue: () => {\n      const { syncEdgeQueue } = get()\n      set({\n        syncEdgeQueue: [...syncEdgeQueue, { timestamp: Date.now() }],\n      })\n    },\n    findFlowNodesWithSource: async (query, option) => {\n      try {\n        set({ flowNodeLoading: true })\n        const { flowNodes, flowNodeDatas } = await findFlowNodesWithSource(query)\n\n        if (option?.clean) {\n          set({\n            flowNodes: flowNodes,\n            nodes: flowNodes.map((item) => {\n              const source = flowNodeDatas?.[item.source_type]?.find(\n                (data) => data.id === item.source_id,\n              )\n              return flowNodeToNode(item, { data: source })\n            }),\n          })\n        } else {\n          const currentFlowNodes = get().flowNodes\n          const ids = flowNodes.map((node) => node.id)\n          const currentNodes = get().nodes\n          const { changes } = flowNodesToNodeChanges(flowNodes, currentNodes, flowNodeDatas)\n          set({\n            flowNodes: [...currentFlowNodes.filter((item) => !ids.includes(item.id)), ...flowNodes],\n            nodes: applyNodeChanges(changes, currentNodes),\n          })\n        }\n        return flowNodes\n      } finally {\n        set({ flowNodeLoading: false })\n      }\n    },\n    findFlowEdges: async (query, option) => {\n      try {\n        set({ flowEdgeLoading: true })\n        const flowEdges = await getRepository('FlowEdge').find(query)\n        const currentflowEdges = get().flowEdges\n        const ids = flowEdges.map((edge) => edge.id)\n\n        if (option?.clean) {\n          set({\n            flowEdges,\n            edges: flowEdges.map((item) => flowEdgeToEdge(item)),\n          })\n        } else {\n          const currentEdges = get().edges\n          const { changes } = flowEdgesToEdgeChanges(flowEdges, currentEdges)\n          set({\n            flowEdges: [...currentflowEdges.filter((item) => !ids.includes(item.id)), ...flowEdges],\n            edges: applyEdgeChanges(changes, currentEdges),\n          })\n        }\n        return flowEdges\n      } finally {\n        set({ flowEdgeLoading: false })\n      }\n    },\n    deleteFlowNode: async (node) => {\n      try {\n        if (!node.id && !node.source_type && !node.source_id) {\n          throw new Error('Missing flow node indentify')\n        }\n        const currentNode = await getRepository('FlowNode').findOne({\n          where: node.id\n            ? { id: node.id }\n            : {\n                source_type: node.source_type,\n                source_id: node.source_id,\n              },\n        })\n        if (currentNode) {\n          await getRepository('FlowNode').delete(currentNode.id)\n          const flowNodes = get().flowNodes\n          if (currentNode.source_type && currentNode.source_id) {\n            await getRepository(currentNode.source_type)\n              .delete(currentNode.source_id)\n              .catch((error) => {\n                logWarn(\n                  'Failed to delete source entity',\n                  currentNode.source_type,\n                  currentNode.source_id,\n                  error,\n                )\n              })\n          }\n\n          const nodes = get().nodes\n          set({\n            flowNodes: flowNodes.filter((item) => item.id !== currentNode.id),\n            nodes: applyNodeChanges([{ type: 'remove', id: currentNode.id }], nodes),\n          })\n        }\n      } catch (error) {\n        logWarn('Failed to delete flow node', error)\n      }\n    },\n    deleteFlowEdge: async (edge) => {\n      try {\n        if (!edge.id && !edge.source && !edge.target) {\n          throw new Error('Missing flow edge indentify')\n        }\n        const currentEdge = await getRepository('FlowEdge').findOne({\n          where: edge.id\n            ? { id: edge.id }\n            : {\n                source: edge.source,\n                target: edge.target,\n              },\n        })\n        if (currentEdge) {\n          await getRepository('FlowEdge').delete(currentEdge.id)\n          const flowEdges = get().flowEdges\n\n          set({\n            flowEdges: flowEdges.filter((item) => item.id !== currentEdge.id),\n          })\n        }\n      } catch (error) {\n        logWarn('Failed to delete flow edge', error)\n      }\n    },\n    updateFlowNode: async (inputNode, options) => {\n      try {\n        const currentSession = useSessionState.getState().currentSession\n        if (!currentSession?.id) {\n          throw new Error('Session not found')\n        }\n        if (!inputNode.id) {\n          throw new Error('Missing flow node indentify')\n        }\n\n        await getRepository('FlowNode').update(inputNode.id, inputNode)\n\n        const flowNodes = get().flowNodes\n\n        const newFlowNodes = flowNodes.map((item) => {\n          if (item.id === inputNode.id) {\n            return {\n              ...item,\n              ...inputNode,\n            }\n          }\n          return item\n        })\n\n        set({\n          flowNodes: options?.silent ? newFlowNodes : [...newFlowNodes],\n        })\n      } catch (error) {\n        logWarn('Failed to create or update flow node', error, inputNode)\n      }\n    },\n    createOrUpdateFlowNode: async (inputNode, options) => {\n      try {\n        const currentSession = useSessionState.getState().currentSession\n        if (!currentSession?.id) {\n          throw new Error('Session not found')\n        }\n        if (!inputNode.id && (!inputNode.source_type || !inputNode.source_id)) {\n          throw new Error('Missing flow node indentify')\n        }\n\n        let flowNode: FlowNode\n        let currentNode = inputNode?.id\n          ? get().flowNodes.find((item) => item.id === inputNode.id)\n          : undefined\n\n        // TODO: find in database if not found in current state\n        if (!currentNode && (inputNode.id || (inputNode.source_type && inputNode.source_id))) {\n          currentNode = await getRepository('FlowNode').findOne({\n            where: inputNode.id\n              ? { id: inputNode.id }\n              : {\n                  source_type: inputNode.source_type,\n                  source_id: inputNode.source_id,\n                },\n          })\n        }\n\n        if (currentNode) {\n          flowNode = deepmerge(currentNode, omitBy(inputNode, isUndefined))\n\n          if (options?.lazy) {\n            getRepository('FlowNode').update(currentNode.id, flowNode)\n          } else {\n            await getRepository('FlowNode').update(currentNode.id, flowNode)\n          }\n        } else if (inputNode.source_id && inputNode.source_type) {\n          flowNode = {\n            ...inputNode,\n            source_id: `${inputNode.source_id}`,\n            source_type: `${inputNode.source_type}` as AppEntityNames,\n            node_type: inputNode.node_type || 'NEW_MESSAGE',\n            session_id: inputNode.session_id || currentSession?.id,\n          } as FlowNode\n          if (options?.lazy) {\n            flowNode.id = nanoid()\n            getRepository('FlowNode').save(flowNode)\n          } else {\n            flowNode = await getRepository('FlowNode').save(flowNode)\n          }\n        } else {\n          throw new Error('Missing source id and type')\n        }\n\n        let source: EntityTypes | undefined\n\n        const currentNodeData = get().nodes.find((item) => item.id === flowNode.id)\n        if (flowNode.source_type && !currentNodeData) {\n          source = await getRepository(flowNode.source_type).findOne({\n            where: { id: inputNode.source_id },\n          })\n        } else if (flowNode.source_type && currentNodeData) {\n          source = currentNodeData?.data?.entity as EntityTypes\n        }\n\n        const flowNodes = get().flowNodes\n        const nodes = get().nodes\n\n        const { changes } = flowNodesToNodeChanges([flowNode], nodes, {\n          [flowNode.source_type]: [source],\n        })\n\n        set({\n          flowNodes: [...flowNodes.filter((item) => item.id !== flowNode.id), flowNode],\n          nodes: applyNodeChanges(changes, nodes),\n        })\n        return flowNode\n      } catch (error) {\n        logWarn('Failed to create or update flow node', error, inputNode)\n      }\n    },\n    createOrUpdateFlowEdge: async (inputEdge, options) => {\n      try {\n        const currentSession = useSessionState.getState().currentSession\n        if (!currentSession?.id) {\n          throw new Error('Session not found')\n        }\n        if (!inputEdge.id && (!inputEdge.source || !inputEdge.target)) {\n          throw new Error('Missing flow node indentify')\n        }\n        let edge: FlowEdge\n\n        let currentEdge = inputEdge?.id\n          ? get().flowEdges.find((item) => item.id === inputEdge.id)\n          : undefined\n\n        if (currentEdge && (inputEdge.id || (inputEdge.source && inputEdge.target))) {\n          currentEdge = await getRepository('FlowEdge').findOne({\n            where: inputEdge.id\n              ? { id: inputEdge.id }\n              : {\n                  source: inputEdge.source,\n                  target: inputEdge.target,\n                },\n          })\n        }\n        if (currentEdge) {\n          edge = deepmerge(currentEdge, omitBy(inputEdge, isUndefined))\n          if (options?.lazy) {\n            getRepository('FlowEdge').update(currentEdge.id, edge)\n          } else {\n            await getRepository('FlowEdge').update(currentEdge.id, edge)\n          }\n        } else if (inputEdge.source && inputEdge.target) {\n          edge = {\n            ...inputEdge,\n            source: `${inputEdge.source}`,\n            target: `${inputEdge.target}`,\n            session_id: inputEdge.session_id || currentSession?.id,\n          } as FlowEdge\n          if (options?.lazy) {\n            edge.id = nanoid()\n            getRepository('FlowEdge').save(edge)\n          } else {\n            edge = await getRepository('FlowEdge').save(edge)\n          }\n        } else {\n          throw new Error('Missing source and target')\n        }\n\n        const flowEdges = get().flowEdges\n        const edges = get().edges\n\n        set({\n          flowEdges: [...flowEdges.filter((item) => item.id !== edge.id), edge],\n          edges: applyEdgeChanges(flowEdgesToEdgeChanges([edge], edges).changes, edges),\n        })\n        return edge\n      } catch (error) {\n        logWarn('Failed to create or update flow node', error)\n      }\n    },\n  }\n}\n","// Default generic \"any\" values are for backwards compatibility.\n// Replace with \"string\" when we are comfortable with a breaking change.\nimport { Runnable } from \"../runnables/base.js\";\n/**\n * Base class for prompt templates. Exposes a format method that returns a\n * string prompt given a set of input values.\n */\nexport class BasePromptTemplate extends Runnable {\n    get lc_attributes() {\n        return {\n            partialVariables: undefined, // python doesn't support this yet\n        };\n    }\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompts\", this._getPromptType()]\n        });\n        Object.defineProperty(this, \"inputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"partialVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Metadata to be used for tracing.\n         */\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Tags to be used for tracing. */\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const { inputVariables } = input;\n        if (inputVariables.includes(\"stop\")) {\n            throw new Error(\"Cannot have an input variable named 'stop', as it is used internally, please rename.\");\n        }\n        Object.assign(this, input);\n    }\n    /**\n     * Merges partial variables and user variables.\n     * @param userVariables The user variables to merge with the partial variables.\n     * @returns A Promise that resolves to an object containing the merged variables.\n     */\n    async mergePartialAndUserVariables(userVariables) {\n        const partialVariables = this.partialVariables ?? {};\n        const partialValues = {};\n        for (const [key, value] of Object.entries(partialVariables)) {\n            if (typeof value === \"string\") {\n                partialValues[key] = value;\n            }\n            else {\n                partialValues[key] = await value();\n            }\n        }\n        const allKwargs = {\n            ...partialValues,\n            ...userVariables,\n        };\n        return allKwargs;\n    }\n    /**\n     * Invokes the prompt template with the given input and options.\n     * @param input The input to invoke the prompt template with.\n     * @param options Optional configuration for the callback.\n     * @returns A Promise that resolves to the output of the prompt template.\n     */\n    async invoke(input, options) {\n        const metadata = {\n            ...this.metadata,\n            ...options?.metadata,\n        };\n        const tags = [...(this.tags ?? []), ...(options?.tags ?? [])];\n        return this._callWithConfig((input) => this.formatPromptValue(input), input, { ...options, tags, metadata, runType: \"prompt\" });\n    }\n    /**\n     * Return a json-like object representing this prompt template.\n     * @deprecated\n     */\n    serialize() {\n        throw new Error(\"Use .toJSON() instead\");\n    }\n    /**\n     * @deprecated\n     * Load a prompt template from a json-like object describing it.\n     *\n     * @remarks\n     * Deserializing needs to be async because templates (e.g. {@link FewShotPromptTemplate}) can\n     * reference remote resources that we read asynchronously with a web\n     * request.\n     */\n    static async deserialize(data) {\n        switch (data._type) {\n            case \"prompt\": {\n                const { PromptTemplate } = await import(\"./prompt.js\");\n                return PromptTemplate.deserialize(data);\n            }\n            case undefined: {\n                const { PromptTemplate } = await import(\"./prompt.js\");\n                return PromptTemplate.deserialize({ ...data, _type: \"prompt\" });\n            }\n            case \"few_shot\": {\n                const { FewShotPromptTemplate } = await import(\"./few_shot.js\");\n                return FewShotPromptTemplate.deserialize(data);\n            }\n            default:\n                throw new Error(`Invalid prompt type in config: ${data._type}`);\n        }\n    }\n}\n","// Default generic \"any\" values are for backwards compatibility.\n// Replace with \"string\" when we are comfortable with a breaking change.\nimport { StringPromptValue, } from \"../prompt_values.js\";\nimport { BasePromptTemplate } from \"./base.js\";\n/**\n * Base class for string prompt templates. It extends the\n * BasePromptTemplate class and overrides the formatPromptValue method to\n * return a StringPromptValue.\n */\nexport class BaseStringPromptTemplate extends BasePromptTemplate {\n    /**\n     * Formats the prompt given the input values and returns a formatted\n     * prompt value.\n     * @param values The input values to format the prompt.\n     * @returns A Promise that resolves to a formatted prompt value.\n     */\n    async formatPromptValue(values) {\n        const formattedPrompt = await this.format(values);\n        return new StringPromptValue(formattedPrompt);\n    }\n}\n","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\nvar objectToString = Object.prototype.toString;\nvar isArray = Array.isArray || function isArrayPolyfill (object) {\n  return objectToString.call(object) === '[object Array]';\n};\n\nfunction isFunction (object) {\n  return typeof object === 'function';\n}\n\n/**\n * More correct typeof string handling array\n * which normally returns typeof 'object'\n */\nfunction typeStr (obj) {\n  return isArray(obj) ? 'array' : typeof obj;\n}\n\nfunction escapeRegExp (string) {\n  return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Null safe way of checking whether or not an object,\n * including its prototype, has a given property\n */\nfunction hasProperty (obj, propName) {\n  return obj != null && typeof obj === 'object' && (propName in obj);\n}\n\n/**\n * Safe way of detecting whether or not the given thing is a primitive and\n * whether it has the given property\n */\nfunction primitiveHasOwnProperty (primitive, propName) {\n  return (\n    primitive != null\n    && typeof primitive !== 'object'\n    && primitive.hasOwnProperty\n    && primitive.hasOwnProperty(propName)\n  );\n}\n\n// Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n// See https://github.com/janl/mustache.js/issues/189\nvar regExpTest = RegExp.prototype.test;\nfunction testRegExp (re, string) {\n  return regExpTest.call(re, string);\n}\n\nvar nonSpaceRe = /\\S/;\nfunction isWhitespace (string) {\n  return !testRegExp(nonSpaceRe, string);\n}\n\nvar entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nfunction escapeHtml (string) {\n  return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n    return entityMap[s];\n  });\n}\n\nvar whiteRe = /\\s*/;\nvar spaceRe = /\\s+/;\nvar equalsRe = /\\s*=/;\nvar curlyRe = /\\s*\\}/;\nvar tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n/**\n * Breaks up the given `template` string into a tree of tokens. If the `tags`\n * argument is given here it must be an array with two string values: the\n * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n * course, the default is to use mustaches (i.e. mustache.tags).\n *\n * A token is an array with at least 4 elements. The first element is the\n * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n * all text that appears outside a symbol this element is \"text\".\n *\n * The second element of a token is its \"value\". For mustache tags this is\n * whatever else was inside the tag besides the opening symbol. For text tokens\n * this is the text itself.\n *\n * The third and fourth elements of the token are the start and end indices,\n * respectively, of the token in the original template.\n *\n * Tokens that are the root node of a subtree contain two more elements: 1) an\n * array of tokens in the subtree and 2) the index in the original template at\n * which the closing tag for that section begins.\n *\n * Tokens for partials also contain two more elements: 1) a string value of\n * indendation prior to that tag and 2) the index of that tag on that line -\n * eg a value of 2 indicates the partial is the third tag on this line.\n */\nfunction parseTemplate (template, tags) {\n  if (!template)\n    return [];\n  var lineHasNonSpace = false;\n  var sections = [];     // Stack to hold section tokens\n  var tokens = [];       // Buffer to hold the tokens\n  var spaces = [];       // Indices of whitespace tokens on the current line\n  var hasTag = false;    // Is there a {{tag}} on the current line?\n  var nonSpace = false;  // Is there a non-space char on the current line?\n  var indentation = '';  // Tracks indentation for tags that use it\n  var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n  // Strips all whitespace tokens array for the current line\n  // if there was a {{#tag}} on it and otherwise only space.\n  function stripSpace () {\n    if (hasTag && !nonSpace) {\n      while (spaces.length)\n        delete tokens[spaces.pop()];\n    } else {\n      spaces = [];\n    }\n\n    hasTag = false;\n    nonSpace = false;\n  }\n\n  var openingTagRe, closingTagRe, closingCurlyRe;\n  function compileTags (tagsToCompile) {\n    if (typeof tagsToCompile === 'string')\n      tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n    if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n      throw new Error('Invalid tags: ' + tagsToCompile);\n\n    openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n    closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n    closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n  }\n\n  compileTags(tags || mustache.tags);\n\n  var scanner = new Scanner(template);\n\n  var start, type, value, chr, token, openSection;\n  while (!scanner.eos()) {\n    start = scanner.pos;\n\n    // Match any text between tags.\n    value = scanner.scanUntil(openingTagRe);\n\n    if (value) {\n      for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n        chr = value.charAt(i);\n\n        if (isWhitespace(chr)) {\n          spaces.push(tokens.length);\n          indentation += chr;\n        } else {\n          nonSpace = true;\n          lineHasNonSpace = true;\n          indentation += ' ';\n        }\n\n        tokens.push([ 'text', chr, start, start + 1 ]);\n        start += 1;\n\n        // Check for whitespace on the current line.\n        if (chr === '\\n') {\n          stripSpace();\n          indentation = '';\n          tagIndex = 0;\n          lineHasNonSpace = false;\n        }\n      }\n    }\n\n    // Match the opening tag.\n    if (!scanner.scan(openingTagRe))\n      break;\n\n    hasTag = true;\n\n    // Get the tag type.\n    type = scanner.scan(tagRe) || 'name';\n    scanner.scan(whiteRe);\n\n    // Get the tag value.\n    if (type === '=') {\n      value = scanner.scanUntil(equalsRe);\n      scanner.scan(equalsRe);\n      scanner.scanUntil(closingTagRe);\n    } else if (type === '{') {\n      value = scanner.scanUntil(closingCurlyRe);\n      scanner.scan(curlyRe);\n      scanner.scanUntil(closingTagRe);\n      type = '&';\n    } else {\n      value = scanner.scanUntil(closingTagRe);\n    }\n\n    // Match the closing tag.\n    if (!scanner.scan(closingTagRe))\n      throw new Error('Unclosed tag at ' + scanner.pos);\n\n    if (type == '>') {\n      token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n    } else {\n      token = [ type, value, start, scanner.pos ];\n    }\n    tagIndex++;\n    tokens.push(token);\n\n    if (type === '#' || type === '^') {\n      sections.push(token);\n    } else if (type === '/') {\n      // Check section nesting.\n      openSection = sections.pop();\n\n      if (!openSection)\n        throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n      if (openSection[1] !== value)\n        throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n    } else if (type === 'name' || type === '{' || type === '&') {\n      nonSpace = true;\n    } else if (type === '=') {\n      // Set the tags for the next time around.\n      compileTags(value);\n    }\n  }\n\n  stripSpace();\n\n  // Make sure there are no open sections when we're done.\n  openSection = sections.pop();\n\n  if (openSection)\n    throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n  return nestTokens(squashTokens(tokens));\n}\n\n/**\n * Combines the values of consecutive text tokens in the given `tokens` array\n * to a single token.\n */\nfunction squashTokens (tokens) {\n  var squashedTokens = [];\n\n  var token, lastToken;\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n    token = tokens[i];\n\n    if (token) {\n      if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n        lastToken[1] += token[1];\n        lastToken[3] = token[3];\n      } else {\n        squashedTokens.push(token);\n        lastToken = token;\n      }\n    }\n  }\n\n  return squashedTokens;\n}\n\n/**\n * Forms the given array of `tokens` into a nested tree structure where\n * tokens that represent a section have two additional items: 1) an array of\n * all tokens that appear in that section and 2) the index in the original\n * template that represents the end of that section.\n */\nfunction nestTokens (tokens) {\n  var nestedTokens = [];\n  var collector = nestedTokens;\n  var sections = [];\n\n  var token, section;\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n    token = tokens[i];\n\n    switch (token[0]) {\n      case '#':\n      case '^':\n        collector.push(token);\n        sections.push(token);\n        collector = token[4] = [];\n        break;\n      case '/':\n        section = sections.pop();\n        section[5] = token[2];\n        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n        break;\n      default:\n        collector.push(token);\n    }\n  }\n\n  return nestedTokens;\n}\n\n/**\n * A simple string scanner that is used by the template parser to find\n * tokens in template strings.\n */\nfunction Scanner (string) {\n  this.string = string;\n  this.tail = string;\n  this.pos = 0;\n}\n\n/**\n * Returns `true` if the tail is empty (end of string).\n */\nScanner.prototype.eos = function eos () {\n  return this.tail === '';\n};\n\n/**\n * Tries to match the given regular expression at the current position.\n * Returns the matched text if it can match, the empty string otherwise.\n */\nScanner.prototype.scan = function scan (re) {\n  var match = this.tail.match(re);\n\n  if (!match || match.index !== 0)\n    return '';\n\n  var string = match[0];\n\n  this.tail = this.tail.substring(string.length);\n  this.pos += string.length;\n\n  return string;\n};\n\n/**\n * Skips all text until the given regular expression can be matched. Returns\n * the skipped string, which is the entire tail if no match can be made.\n */\nScanner.prototype.scanUntil = function scanUntil (re) {\n  var index = this.tail.search(re), match;\n\n  switch (index) {\n    case -1:\n      match = this.tail;\n      this.tail = '';\n      break;\n    case 0:\n      match = '';\n      break;\n    default:\n      match = this.tail.substring(0, index);\n      this.tail = this.tail.substring(index);\n  }\n\n  this.pos += match.length;\n\n  return match;\n};\n\n/**\n * Represents a rendering context by wrapping a view object and\n * maintaining a reference to the parent context.\n */\nfunction Context (view, parentContext) {\n  this.view = view;\n  this.cache = { '.': this.view };\n  this.parent = parentContext;\n}\n\n/**\n * Creates a new context using the given view with this context\n * as the parent.\n */\nContext.prototype.push = function push (view) {\n  return new Context(view, this);\n};\n\n/**\n * Returns the value of the given name in this context, traversing\n * up the context hierarchy if the value is absent in this context's view.\n */\nContext.prototype.lookup = function lookup (name) {\n  var cache = this.cache;\n\n  var value;\n  if (cache.hasOwnProperty(name)) {\n    value = cache[name];\n  } else {\n    var context = this, intermediateValue, names, index, lookupHit = false;\n\n    while (context) {\n      if (name.indexOf('.') > 0) {\n        intermediateValue = context.view;\n        names = name.split('.');\n        index = 0;\n\n        /**\n         * Using the dot notion path in `name`, we descend through the\n         * nested objects.\n         *\n         * To be certain that the lookup has been successful, we have to\n         * check if the last object in the path actually has the property\n         * we are looking for. We store the result in `lookupHit`.\n         *\n         * This is specially necessary for when the value has been set to\n         * `undefined` and we want to avoid looking up parent contexts.\n         *\n         * In the case where dot notation is used, we consider the lookup\n         * to be successful even if the last \"object\" in the path is\n         * not actually an object but a primitive (e.g., a string, or an\n         * integer), because it is sometimes useful to access a property\n         * of an autoboxed primitive, such as the length of a string.\n         **/\n        while (intermediateValue != null && index < names.length) {\n          if (index === names.length - 1)\n            lookupHit = (\n              hasProperty(intermediateValue, names[index])\n              || primitiveHasOwnProperty(intermediateValue, names[index])\n            );\n\n          intermediateValue = intermediateValue[names[index++]];\n        }\n      } else {\n        intermediateValue = context.view[name];\n\n        /**\n         * Only checking against `hasProperty`, which always returns `false` if\n         * `context.view` is not an object. Deliberately omitting the check\n         * against `primitiveHasOwnProperty` if dot notation is not used.\n         *\n         * Consider this example:\n         * ```\n         * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n         * ```\n         *\n         * If we were to check also against `primitiveHasOwnProperty`, as we do\n         * in the dot notation case, then render call would return:\n         *\n         * \"The length of a football field is 9.\"\n         *\n         * rather than the expected:\n         *\n         * \"The length of a football field is 100 yards.\"\n         **/\n        lookupHit = hasProperty(context.view, name);\n      }\n\n      if (lookupHit) {\n        value = intermediateValue;\n        break;\n      }\n\n      context = context.parent;\n    }\n\n    cache[name] = value;\n  }\n\n  if (isFunction(value))\n    value = value.call(this.view);\n\n  return value;\n};\n\n/**\n * A Writer knows how to take a stream of tokens and render them to a\n * string, given a context. It also maintains a cache of templates to\n * avoid the need to parse the same template twice.\n */\nfunction Writer () {\n  this.templateCache = {\n    _cache: {},\n    set: function set (key, value) {\n      this._cache[key] = value;\n    },\n    get: function get (key) {\n      return this._cache[key];\n    },\n    clear: function clear () {\n      this._cache = {};\n    }\n  };\n}\n\n/**\n * Clears all cached templates in this writer.\n */\nWriter.prototype.clearCache = function clearCache () {\n  if (typeof this.templateCache !== 'undefined') {\n    this.templateCache.clear();\n  }\n};\n\n/**\n * Parses and caches the given `template` according to the given `tags` or\n * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n * that is generated from the parse.\n */\nWriter.prototype.parse = function parse (template, tags) {\n  var cache = this.templateCache;\n  var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n  var isCacheEnabled = typeof cache !== 'undefined';\n  var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\n\n  if (tokens == undefined) {\n    tokens = parseTemplate(template, tags);\n    isCacheEnabled && cache.set(cacheKey, tokens);\n  }\n  return tokens;\n};\n\n/**\n * High-level method that is used to render the given `template` with\n * the given `view`.\n *\n * The optional `partials` argument may be an object that contains the\n * names and templates of partials that are used in the template. It may\n * also be a function that is used to load partial templates on the fly\n * that takes a single argument: the name of the partial.\n *\n * If the optional `config` argument is given here, then it should be an\n * object with a `tags` attribute or an `escape` attribute or both.\n * If an array is passed, then it will be interpreted the same way as\n * a `tags` attribute on a `config` object.\n *\n * The `tags` attribute of a `config` object must be an array with two\n * string values: the opening and closing tags used in the template (e.g.\n * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n *\n * The `escape` attribute of a `config` object must be a function which\n * accepts a string as input and outputs a safely escaped string.\n * If an `escape` function is not provided, then an HTML-safe string\n * escaping function is used as the default.\n */\nWriter.prototype.render = function render (template, view, partials, config) {\n  var tags = this.getConfigTags(config);\n  var tokens = this.parse(template, tags);\n  var context = (view instanceof Context) ? view : new Context(view, undefined);\n  return this.renderTokens(tokens, context, partials, template, config);\n};\n\n/**\n * Low-level method that renders the given array of `tokens` using\n * the given `context` and `partials`.\n *\n * Note: The `originalTemplate` is only ever used to extract the portion\n * of the original template that was contained in a higher-order section.\n * If the template doesn't use higher-order sections, this argument may\n * be omitted.\n */\nWriter.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, config) {\n  var buffer = '';\n\n  var token, symbol, value;\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n    value = undefined;\n    token = tokens[i];\n    symbol = token[0];\n\n    if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate, config);\n    else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate, config);\n    else if (symbol === '>') value = this.renderPartial(token, context, partials, config);\n    else if (symbol === '&') value = this.unescapedValue(token, context);\n    else if (symbol === 'name') value = this.escapedValue(token, context, config);\n    else if (symbol === 'text') value = this.rawValue(token);\n\n    if (value !== undefined)\n      buffer += value;\n  }\n\n  return buffer;\n};\n\nWriter.prototype.renderSection = function renderSection (token, context, partials, originalTemplate, config) {\n  var self = this;\n  var buffer = '';\n  var value = context.lookup(token[1]);\n\n  // This function is used to render an arbitrary template\n  // in the current context by higher-order sections.\n  function subRender (template) {\n    return self.render(template, context, partials, config);\n  }\n\n  if (!value) return;\n\n  if (isArray(value)) {\n    for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n      buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate, config);\n    }\n  } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n    buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate, config);\n  } else if (isFunction(value)) {\n    if (typeof originalTemplate !== 'string')\n      throw new Error('Cannot use higher-order sections without the original template');\n\n    // Extract the portion of the original template that the section contains.\n    value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n    if (value != null)\n      buffer += value;\n  } else {\n    buffer += this.renderTokens(token[4], context, partials, originalTemplate, config);\n  }\n  return buffer;\n};\n\nWriter.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate, config) {\n  var value = context.lookup(token[1]);\n\n  // Use JavaScript's definition of falsy. Include empty arrays.\n  // See https://github.com/janl/mustache.js/issues/186\n  if (!value || (isArray(value) && value.length === 0))\n    return this.renderTokens(token[4], context, partials, originalTemplate, config);\n};\n\nWriter.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n  var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n  var partialByNl = partial.split('\\n');\n  for (var i = 0; i < partialByNl.length; i++) {\n    if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n      partialByNl[i] = filteredIndentation + partialByNl[i];\n    }\n  }\n  return partialByNl.join('\\n');\n};\n\nWriter.prototype.renderPartial = function renderPartial (token, context, partials, config) {\n  if (!partials) return;\n  var tags = this.getConfigTags(config);\n\n  var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n  if (value != null) {\n    var lineHasNonSpace = token[6];\n    var tagIndex = token[5];\n    var indentation = token[4];\n    var indentedValue = value;\n    if (tagIndex == 0 && indentation) {\n      indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n    }\n    var tokens = this.parse(indentedValue, tags);\n    return this.renderTokens(tokens, context, partials, indentedValue, config);\n  }\n};\n\nWriter.prototype.unescapedValue = function unescapedValue (token, context) {\n  var value = context.lookup(token[1]);\n  if (value != null)\n    return value;\n};\n\nWriter.prototype.escapedValue = function escapedValue (token, context, config) {\n  var escape = this.getConfigEscape(config) || mustache.escape;\n  var value = context.lookup(token[1]);\n  if (value != null)\n    return (typeof value === 'number' && escape === mustache.escape) ? String(value) : escape(value);\n};\n\nWriter.prototype.rawValue = function rawValue (token) {\n  return token[1];\n};\n\nWriter.prototype.getConfigTags = function getConfigTags (config) {\n  if (isArray(config)) {\n    return config;\n  }\n  else if (config && typeof config === 'object') {\n    return config.tags;\n  }\n  else {\n    return undefined;\n  }\n};\n\nWriter.prototype.getConfigEscape = function getConfigEscape (config) {\n  if (config && typeof config === 'object' && !isArray(config)) {\n    return config.escape;\n  }\n  else {\n    return undefined;\n  }\n};\n\nvar mustache = {\n  name: 'mustache.js',\n  version: '4.2.0',\n  tags: [ '{{', '}}' ],\n  clearCache: undefined,\n  escape: undefined,\n  parse: undefined,\n  render: undefined,\n  Scanner: undefined,\n  Context: undefined,\n  Writer: undefined,\n  /**\n   * Allows a user to override the default caching strategy, by providing an\n   * object with set, get and clear methods. This can also be used to disable\n   * the cache by setting it to the literal `undefined`.\n   */\n  set templateCache (cache) {\n    defaultWriter.templateCache = cache;\n  },\n  /**\n   * Gets the default or overridden caching object from the default writer.\n   */\n  get templateCache () {\n    return defaultWriter.templateCache;\n  }\n};\n\n// All high-level mustache.* functions use this writer.\nvar defaultWriter = new Writer();\n\n/**\n * Clears all cached templates in the default writer.\n */\nmustache.clearCache = function clearCache () {\n  return defaultWriter.clearCache();\n};\n\n/**\n * Parses and caches the given template in the default writer and returns the\n * array of tokens it contains. Doing this ahead of time avoids the need to\n * parse templates on the fly as they are rendered.\n */\nmustache.parse = function parse (template, tags) {\n  return defaultWriter.parse(template, tags);\n};\n\n/**\n * Renders the `template` with the given `view`, `partials`, and `config`\n * using the default writer.\n */\nmustache.render = function render (template, view, partials, config) {\n  if (typeof template !== 'string') {\n    throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                        'but \"' + typeStr(template) + '\" was given as the first ' +\n                        'argument for mustache#render(template, view, partials)');\n  }\n\n  return defaultWriter.render(template, view, partials, config);\n};\n\n// Export the escaping function so that the user may override it.\n// See https://github.com/janl/mustache.js/issues/244\nmustache.escape = escapeHtml;\n\n// Export these mainly for testing, but also for advanced usage.\nmustache.Scanner = Scanner;\nmustache.Context = Context;\nmustache.Writer = Writer;\n\nexport default mustache;\n","import mustache from \"mustache\";\nimport { addLangChainErrorFields } from \"../errors/index.js\";\nfunction configureMustache() {\n    // Use unescaped HTML\n    // https://github.com/janl/mustache.js?tab=readme-ov-file#variables\n    mustache.escape = (text) => text;\n}\nexport const parseFString = (template) => {\n    // Core logic replicated from internals of pythons built in Formatter class.\n    // https://github.com/python/cpython/blob/135ec7cefbaffd516b77362ad2b2ad1025af462e/Objects/stringlib/unicode_format.h#L700-L706\n    const chars = template.split(\"\");\n    const nodes = [];\n    const nextBracket = (bracket, start) => {\n        for (let i = start; i < chars.length; i += 1) {\n            if (bracket.includes(chars[i])) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    let i = 0;\n    while (i < chars.length) {\n        if (chars[i] === \"{\" && i + 1 < chars.length && chars[i + 1] === \"{\") {\n            nodes.push({ type: \"literal\", text: \"{\" });\n            i += 2;\n        }\n        else if (chars[i] === \"}\" &&\n            i + 1 < chars.length &&\n            chars[i + 1] === \"}\") {\n            nodes.push({ type: \"literal\", text: \"}\" });\n            i += 2;\n        }\n        else if (chars[i] === \"{\") {\n            const j = nextBracket(\"}\", i);\n            if (j < 0) {\n                throw new Error(\"Unclosed '{' in template.\");\n            }\n            nodes.push({\n                type: \"variable\",\n                name: chars.slice(i + 1, j).join(\"\"),\n            });\n            i = j + 1;\n        }\n        else if (chars[i] === \"}\") {\n            throw new Error(\"Single '}' in template.\");\n        }\n        else {\n            const next = nextBracket(\"{}\", i);\n            const text = (next < 0 ? chars.slice(i) : chars.slice(i, next)).join(\"\");\n            nodes.push({ type: \"literal\", text });\n            i = next < 0 ? chars.length : next;\n        }\n    }\n    return nodes;\n};\n/**\n * Convert the result of mustache.parse into an array of ParsedTemplateNode,\n * to make it compatible with other LangChain string parsing template formats.\n *\n * @param {mustache.TemplateSpans} template The result of parsing a mustache template with the mustache.js library.\n * @returns {ParsedTemplateNode[]}\n */\nconst mustacheTemplateToNodes = (template) => template.map((temp) => {\n    if (temp[0] === \"name\") {\n        const name = temp[1].includes(\".\") ? temp[1].split(\".\")[0] : temp[1];\n        return { type: \"variable\", name };\n    }\n    else if ([\"#\", \"&\", \"^\", \">\"].includes(temp[0])) {\n        // # represents a section, \"&\" represents an unescaped variable.\n        // These should both be considered variables.\n        return { type: \"variable\", name: temp[1] };\n    }\n    else {\n        return { type: \"literal\", text: temp[1] };\n    }\n});\nexport const parseMustache = (template) => {\n    configureMustache();\n    const parsed = mustache.parse(template);\n    return mustacheTemplateToNodes(parsed);\n};\nexport const interpolateFString = (template, values) => {\n    return parseFString(template).reduce((res, node) => {\n        if (node.type === \"variable\") {\n            if (node.name in values) {\n                const stringValue = typeof values[node.name] === \"string\"\n                    ? values[node.name]\n                    : JSON.stringify(values[node.name]);\n                return res + stringValue;\n            }\n            throw new Error(`(f-string) Missing value for input ${node.name}`);\n        }\n        return res + node.text;\n    }, \"\");\n};\nexport const interpolateMustache = (template, values) => {\n    configureMustache();\n    return mustache.render(template, values);\n};\nexport const DEFAULT_FORMATTER_MAPPING = {\n    \"f-string\": interpolateFString,\n    mustache: interpolateMustache,\n};\nexport const DEFAULT_PARSER_MAPPING = {\n    \"f-string\": parseFString,\n    mustache: parseMustache,\n};\nexport const renderTemplate = (template, templateFormat, inputValues) => {\n    try {\n        return DEFAULT_FORMATTER_MAPPING[templateFormat](template, inputValues);\n    }\n    catch (e) {\n        const error = addLangChainErrorFields(e, \"INVALID_PROMPT_INPUT\");\n        throw error;\n    }\n};\nexport const parseTemplate = (template, templateFormat) => DEFAULT_PARSER_MAPPING[templateFormat](template);\nexport const checkValidTemplate = (template, templateFormat, inputVariables) => {\n    if (!(templateFormat in DEFAULT_FORMATTER_MAPPING)) {\n        const validFormats = Object.keys(DEFAULT_FORMATTER_MAPPING);\n        throw new Error(`Invalid template format. Got \\`${templateFormat}\\`;\n                         should be one of ${validFormats}`);\n    }\n    try {\n        const dummyInputs = inputVariables.reduce((acc, v) => {\n            acc[v] = \"foo\";\n            return acc;\n        }, {});\n        if (Array.isArray(template)) {\n            template.forEach((message) => {\n                if (message.type === \"text\") {\n                    renderTemplate(message.text, templateFormat, dummyInputs);\n                }\n                else if (message.type === \"image_url\") {\n                    if (typeof message.image_url === \"string\") {\n                        renderTemplate(message.image_url, templateFormat, dummyInputs);\n                    }\n                    else {\n                        const imageUrl = message.image_url.url;\n                        renderTemplate(imageUrl, templateFormat, dummyInputs);\n                    }\n                }\n                else {\n                    throw new Error(`Invalid message template received. ${JSON.stringify(message, null, 2)}`);\n                }\n            });\n        }\n        else {\n            renderTemplate(template, templateFormat, dummyInputs);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }\n    catch (e) {\n        throw new Error(`Invalid prompt schema: ${e.message}`);\n    }\n};\n","// Default generic \"any\" values are for backwards compatibility.\n// Replace with \"string\" when we are comfortable with a breaking change.\nimport { BaseStringPromptTemplate } from \"./string.js\";\nimport { checkValidTemplate, parseTemplate, renderTemplate, } from \"./template.js\";\n/**\n * Schema to represent a basic prompt for an LLM.\n * @augments BasePromptTemplate\n * @augments PromptTemplateInput\n *\n * @example\n * ```ts\n * import { PromptTemplate } from \"langchain/prompts\";\n *\n * const prompt = new PromptTemplate({\n *   inputVariables: [\"foo\"],\n *   template: \"Say {foo}\",\n * });\n * ```\n */\nexport class PromptTemplate extends BaseStringPromptTemplate {\n    static lc_name() {\n        return \"PromptTemplate\";\n    }\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"template\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"templateFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"f-string\"\n        });\n        Object.defineProperty(this, \"validateTemplate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /**\n         * Additional fields which should be included inside\n         * the message content array if using a complex message\n         * content.\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"additionalContentFields\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // If input is mustache and validateTemplate is not defined, set it to false\n        if (input.templateFormat === \"mustache\" &&\n            input.validateTemplate === undefined) {\n            this.validateTemplate = false;\n        }\n        Object.assign(this, input);\n        if (this.validateTemplate) {\n            if (this.templateFormat === \"mustache\") {\n                throw new Error(\"Mustache templates cannot be validated.\");\n            }\n            let totalInputVariables = this.inputVariables;\n            if (this.partialVariables) {\n                totalInputVariables = totalInputVariables.concat(Object.keys(this.partialVariables));\n            }\n            checkValidTemplate(this.template, this.templateFormat, totalInputVariables);\n        }\n    }\n    _getPromptType() {\n        return \"prompt\";\n    }\n    /**\n     * Formats the prompt template with the provided values.\n     * @param values The values to be used to format the prompt template.\n     * @returns A promise that resolves to a string which is the formatted prompt.\n     */\n    async format(values) {\n        const allValues = await this.mergePartialAndUserVariables(values);\n        return renderTemplate(this.template, this.templateFormat, allValues);\n    }\n    /**\n     * Take examples in list format with prefix and suffix to create a prompt.\n     *\n     * Intended to be used a a way to dynamically create a prompt from examples.\n     *\n     * @param examples - List of examples to use in the prompt.\n     * @param suffix - String to go after the list of examples. Should generally set up the user's input.\n     * @param inputVariables - A list of variable names the final prompt template will expect\n     * @param exampleSeparator - The separator to use in between examples\n     * @param prefix - String that should go before any examples. Generally includes examples.\n     *\n     * @returns The final prompt template generated.\n     */\n    static fromExamples(examples, suffix, inputVariables, exampleSeparator = \"\\n\\n\", prefix = \"\") {\n        const template = [prefix, ...examples, suffix].join(exampleSeparator);\n        return new PromptTemplate({\n            inputVariables,\n            template,\n        });\n    }\n    static fromTemplate(template, options) {\n        const { templateFormat = \"f-string\", ...rest } = options ?? {};\n        const names = new Set();\n        parseTemplate(template, templateFormat).forEach((node) => {\n            if (node.type === \"variable\") {\n                names.add(node.name);\n            }\n        });\n        return new PromptTemplate({\n            // Rely on extracted types\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            inputVariables: [...names],\n            templateFormat,\n            template,\n            ...rest,\n        });\n    }\n    /**\n     * Partially applies values to the prompt template.\n     * @param values The values to be partially applied to the prompt template.\n     * @returns A new instance of PromptTemplate with the partially applied values.\n     */\n    async partial(values) {\n        const newInputVariables = this.inputVariables.filter((iv) => !(iv in values));\n        const newPartialVariables = {\n            ...(this.partialVariables ?? {}),\n            ...values,\n        };\n        const promptDict = {\n            ...this,\n            inputVariables: newInputVariables,\n            partialVariables: newPartialVariables,\n        };\n        return new PromptTemplate(promptDict);\n    }\n    serialize() {\n        if (this.outputParser !== undefined) {\n            throw new Error(\"Cannot serialize a prompt template with an output parser\");\n        }\n        return {\n            _type: this._getPromptType(),\n            input_variables: this.inputVariables,\n            template: this.template,\n            template_format: this.templateFormat,\n        };\n    }\n    static async deserialize(data) {\n        if (!data.template) {\n            throw new Error(\"Prompt template must have a template\");\n        }\n        const res = new PromptTemplate({\n            inputVariables: data.input_variables,\n            template: data.template,\n            templateFormat: data.template_format,\n        });\n        return res;\n    }\n}\n","import { OpenAI as OpenAIClient } from \"openai\";\nimport { getEnvironmentVariable } from \"@langchain/core/utils/env\";\nimport { Embeddings } from \"@langchain/core/embeddings\";\nimport { chunkArray } from \"@langchain/core/utils/chunk_array\";\nimport { getEndpoint } from \"./utils/azure.js\";\nimport { wrapOpenAIClientError } from \"./utils/openai.js\";\n/**\n * Class for generating embeddings using the OpenAI API.\n *\n * To use with Azure, import the `AzureOpenAIEmbeddings` class.\n *\n * @example\n * ```typescript\n * // Embed a query using OpenAIEmbeddings to generate embeddings for a given text\n * const model = new OpenAIEmbeddings();\n * const res = await model.embedQuery(\n *   \"What would be a good company name for a company that makes colorful socks?\",\n * );\n * console.log({ res });\n *\n * ```\n */\nexport class OpenAIEmbeddings extends Embeddings {\n    constructor(fields) {\n        const fieldsWithDefaults = { maxConcurrency: 2, ...fields };\n        super(fieldsWithDefaults);\n        Object.defineProperty(this, \"model\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"text-embedding-ada-002\"\n        });\n        /** @deprecated Use \"model\" instead */\n        Object.defineProperty(this, \"modelName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"batchSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 512\n        });\n        // TODO: Update to `false` on next minor release (see: https://github.com/langchain-ai/langchainjs/pull/3612)\n        Object.defineProperty(this, \"stripNewLines\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /**\n         * The number of dimensions the resulting output embeddings should have.\n         * Only supported in `text-embedding-3` and later models.\n         */\n        Object.defineProperty(this, \"dimensions\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"organization\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const apiKey = fieldsWithDefaults?.apiKey ??\n            fieldsWithDefaults?.openAIApiKey ??\n            getEnvironmentVariable(\"OPENAI_API_KEY\");\n        this.organization =\n            fieldsWithDefaults?.configuration?.organization ??\n                getEnvironmentVariable(\"OPENAI_ORGANIZATION\");\n        this.model =\n            fieldsWithDefaults?.model ?? fieldsWithDefaults?.modelName ?? this.model;\n        this.modelName = this.model;\n        this.batchSize = fieldsWithDefaults?.batchSize ?? this.batchSize;\n        this.stripNewLines =\n            fieldsWithDefaults?.stripNewLines ?? this.stripNewLines;\n        this.timeout = fieldsWithDefaults?.timeout;\n        this.dimensions = fieldsWithDefaults?.dimensions;\n        this.clientConfig = {\n            apiKey,\n            organization: this.organization,\n            dangerouslyAllowBrowser: true,\n            ...fields?.configuration,\n        };\n    }\n    /**\n     * Method to generate embeddings for an array of documents. Splits the\n     * documents into batches and makes requests to the OpenAI API to generate\n     * embeddings.\n     * @param texts Array of documents to generate embeddings for.\n     * @returns Promise that resolves to a 2D array of embeddings for each document.\n     */\n    async embedDocuments(texts) {\n        const batches = chunkArray(this.stripNewLines ? texts.map((t) => t.replace(/\\n/g, \" \")) : texts, this.batchSize);\n        const batchRequests = batches.map((batch) => {\n            const params = {\n                model: this.model,\n                input: batch,\n            };\n            if (this.dimensions) {\n                params.dimensions = this.dimensions;\n            }\n            return this.embeddingWithRetry(params);\n        });\n        const batchResponses = await Promise.all(batchRequests);\n        const embeddings = [];\n        for (let i = 0; i < batchResponses.length; i += 1) {\n            const batch = batches[i];\n            const { data: batchResponse } = batchResponses[i];\n            for (let j = 0; j < batch.length; j += 1) {\n                embeddings.push(batchResponse[j].embedding);\n            }\n        }\n        return embeddings;\n    }\n    /**\n     * Method to generate an embedding for a single document. Calls the\n     * embeddingWithRetry method with the document as the input.\n     * @param text Document to generate an embedding for.\n     * @returns Promise that resolves to an embedding for the document.\n     */\n    async embedQuery(text) {\n        const params = {\n            model: this.model,\n            input: this.stripNewLines ? text.replace(/\\n/g, \" \") : text,\n        };\n        if (this.dimensions) {\n            params.dimensions = this.dimensions;\n        }\n        const { data } = await this.embeddingWithRetry(params);\n        return data[0].embedding;\n    }\n    /**\n     * Private method to make a request to the OpenAI API to generate\n     * embeddings. Handles the retry logic and returns the response from the\n     * API.\n     * @param request Request to send to the OpenAI API.\n     * @returns Promise that resolves to the response from the API.\n     */\n    async embeddingWithRetry(request) {\n        if (!this.client) {\n            const openAIEndpointConfig = {\n                baseURL: this.clientConfig.baseURL,\n            };\n            const endpoint = getEndpoint(openAIEndpointConfig);\n            const params = {\n                ...this.clientConfig,\n                baseURL: endpoint,\n                timeout: this.timeout,\n                maxRetries: 0,\n            };\n            if (!params.baseURL) {\n                delete params.baseURL;\n            }\n            this.client = new OpenAIClient(params);\n        }\n        const requestOptions = {};\n        return this.caller.call(async () => {\n            try {\n                const res = await this.client.embeddings.create(request, requestOptions);\n                return res;\n            }\n            catch (e) {\n                const error = wrapOpenAIClientError(e);\n                throw error;\n            }\n        });\n    }\n}\n","import { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport { getEnvironmentVariable } from \"@langchain/core/utils/env\";\nimport { Embeddings } from \"@langchain/core/embeddings\";\nimport { chunkArray } from \"@langchain/core/utils/chunk_array\";\n/**\n * Class that extends the Embeddings class and provides methods for\n * generating embeddings using the Google Palm API.\n * @example\n * ```typescript\n * const model = new GoogleGenerativeAIEmbeddings({\n *   apiKey: \"<YOUR API KEY>\",\n *   modelName: \"embedding-001\",\n * });\n *\n * // Embed a single query\n * const res = await model.embedQuery(\n *   \"What would be a good company name for a company that makes colorful socks?\"\n * );\n * console.log({ res });\n *\n * // Embed multiple documents\n * const documentRes = await model.embedDocuments([\"Hello world\", \"Bye bye\"]);\n * console.log({ documentRes });\n * ```\n */\nexport class GoogleGenerativeAIEmbeddings extends Embeddings {\n    constructor(fields) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"modelName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"embedding-001\"\n        });\n        Object.defineProperty(this, \"model\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"embedding-001\"\n        });\n        Object.defineProperty(this, \"taskType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"title\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stripNewLines\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"maxBatchSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 100\n        }); // Max batch size for embedDocuments set by GenerativeModel client's batchEmbedContents call\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.modelName =\n            fields?.model?.replace(/^models\\//, \"\") ??\n                fields?.modelName?.replace(/^models\\//, \"\") ??\n                this.modelName;\n        this.model = this.modelName;\n        this.taskType = fields?.taskType ?? this.taskType;\n        this.title = fields?.title ?? this.title;\n        if (this.title && this.taskType !== \"RETRIEVAL_DOCUMENT\") {\n            throw new Error(\"title can only be sepcified with TaskType.RETRIEVAL_DOCUMENT\");\n        }\n        this.apiKey = fields?.apiKey ?? getEnvironmentVariable(\"GOOGLE_API_KEY\");\n        if (!this.apiKey) {\n            throw new Error(\"Please set an API key for Google GenerativeAI \" +\n                \"in the environmentb variable GOOGLE_API_KEY \" +\n                \"or in the `apiKey` field of the \" +\n                \"GoogleGenerativeAIEmbeddings constructor\");\n        }\n        this.client = new GoogleGenerativeAI(this.apiKey).getGenerativeModel({\n            model: this.model,\n        }, {\n            baseUrl: fields?.baseUrl,\n        });\n    }\n    _convertToContent(text) {\n        const cleanedText = this.stripNewLines ? text.replace(/\\n/g, \" \") : text;\n        return {\n            content: { role: \"user\", parts: [{ text: cleanedText }] },\n            taskType: this.taskType,\n            title: this.title,\n        };\n    }\n    async _embedQueryContent(text) {\n        const req = this._convertToContent(text);\n        const res = await this.client.embedContent(req);\n        return res.embedding.values ?? [];\n    }\n    async _embedDocumentsContent(documents) {\n        const batchEmbedChunks = chunkArray(documents, this.maxBatchSize);\n        const batchEmbedRequests = batchEmbedChunks.map((chunk) => ({\n            requests: chunk.map((doc) => this._convertToContent(doc)),\n        }));\n        const responses = await Promise.allSettled(batchEmbedRequests.map((req) => this.client.batchEmbedContents(req)));\n        const embeddings = responses.flatMap((res, idx) => {\n            if (res.status === \"fulfilled\") {\n                return res.value.embeddings.map((e) => e.values || []);\n            }\n            else {\n                return Array(batchEmbedChunks[idx].length).fill([]);\n            }\n        });\n        return embeddings;\n    }\n    /**\n     * Method that takes a document as input and returns a promise that\n     * resolves to an embedding for the document. It calls the _embedText\n     * method with the document as the input.\n     * @param document Document for which to generate an embedding.\n     * @returns Promise that resolves to an embedding for the input document.\n     */\n    embedQuery(document) {\n        return this.caller.call(this._embedQueryContent.bind(this), document);\n    }\n    /**\n     * Method that takes an array of documents as input and returns a promise\n     * that resolves to a 2D array of embeddings for each document. It calls\n     * the _embedText method for each document in the array.\n     * @param documents Array of documents for which to generate embeddings.\n     * @returns Promise that resolves to a 2D array of embeddings for each input document.\n     */\n    embedDocuments(documents) {\n        return this.caller.call(this._embedDocumentsContent.bind(this), documents);\n    }\n}\n","import { useCallback } from 'react'\nimport { OpenAIEmbeddings } from '@langchain/openai'\nimport { GoogleGenerativeAIEmbeddings } from '@langchain/google-genai'\nimport { FlowNodePlaceholder, LLMProviderEnum } from 'src/services/database/types'\nimport secureSession from 'src/utils/secure-session'\nimport { decryptSymmetric } from 'src/utils/aes'\nimport { useConfirmPassphrase } from './use-confirm-passphrase'\n\nexport const useLangchainEmbedding = () => {\n  const { confirmPassphrase } = useConfirmPassphrase()\n\n  const getEmbedding = useCallback(\n    async (embeddingNode: FlowNodePlaceholder) => {\n      const encrypted = embeddingNode?.encrypted\n      const provider = embeddingNode.data?.provider\n      await confirmPassphrase()\n      if (!encrypted?.provider && !encrypted?.key) {\n        throw new Error('API Key is not found.')\n      }\n      const passphrase = await secureSession.get('passphrase')\n      if (!passphrase) {\n        throw new Error('Passphrase is not found')\n      }\n      const apiKey = await decryptSymmetric(`${encrypted.key}`, passphrase!)\n      if (!apiKey || !provider) {\n        throw new Error('API Key or provider is not found.')\n      }\n\n      switch (provider) {\n        case LLMProviderEnum.OpenAI:\n          return new OpenAIEmbeddings({\n            apiKey,\n            model: 'text-embedding-3-small',\n          })\n        case LLMProviderEnum.GoogleGenerativeAI:\n          return new GoogleGenerativeAIEmbeddings({\n            apiKey,\n            model: 'text-embedding-004',\n          })\n        default:\n          throw new Error('Provider is not supported')\n      }\n    },\n    [confirmPassphrase],\n  )\n\n  return {\n    getEmbedding,\n  }\n}\n","import { useCallback, useState } from 'react'\nimport type { FlowNodePlaceholder } from 'src/services/database/entities'\nimport { useLocalEmbeddingState } from 'src/services/local-embedding'\nimport { useLangchainEmbedding } from 'src/hooks/mutations/use-langchain-embedding'\n\nexport const useEmbedding = () => {\n  const [loading, setLoading] = useState(false)\n  const indexLocalEmbedding = useLocalEmbeddingState((state) => state.index)\n  const similaritySearchWithScoreLocalEmbedding = useLocalEmbeddingState(\n    (state) => state.similaritySearchWithScore,\n  )\n  const { getEmbedding } = useLangchainEmbedding()\n  const similaritySearchWithScore = useCallback(\n    async (\n      embbedingEntity?: FlowNodePlaceholder | undefined,\n      ...args: Parameters<typeof similaritySearchWithScoreLocalEmbedding>\n    ) => {\n      try {\n        const [info, options] = args\n        setLoading(true)\n        if (\n          !embbedingEntity ||\n          !embbedingEntity.data?.provider ||\n          embbedingEntity.data?.provider === 'local_transformers'\n        ) {\n          return similaritySearchWithScoreLocalEmbedding(info, options)\n        }\n\n        const embedding = await getEmbedding(embbedingEntity)\n\n        return similaritySearchWithScoreLocalEmbedding(\n          {\n            ...info,\n            embedding,\n          },\n          options,\n        )\n      } finally {\n        setLoading(false)\n      }\n    },\n    [getEmbedding, similaritySearchWithScoreLocalEmbedding],\n  )\n\n  const index = useCallback(\n    async (\n      embbedingEntity?: FlowNodePlaceholder | undefined,\n      ...args: Parameters<typeof indexLocalEmbedding>\n    ) => {\n      try {\n        const [info, documents] = args\n        setLoading(true)\n        if (\n          !embbedingEntity ||\n          !embbedingEntity.data?.provider ||\n          embbedingEntity.data?.provider === 'local_transformers'\n        ) {\n          return indexLocalEmbedding(info, documents)\n        }\n\n        const embedding = await getEmbedding(embbedingEntity)\n\n        return indexLocalEmbedding(\n          {\n            ...info,\n            embedding,\n          },\n          documents,\n        )\n      } finally {\n        setLoading(false)\n      }\n    },\n    [getEmbedding, indexLocalEmbedding],\n  )\n\n  return {\n    loading,\n    index,\n    similaritySearchWithScore,\n  }\n}\n","import { lazy, memo, PropsWithChildren, Suspense, useMemo } from 'react'\nimport type { MarkdownPreviewProps } from '@uiw/react-markdown-preview'\nimport { useAppState } from 'src/states/app'\nimport { cn } from 'src/lib/utils'\n\nconst MarkdownPreview = lazy(() => import('@uiw/react-markdown-preview'))\n\nexport const MarkdownViewer: React.FC<MarkdownPreviewProps> = memo(\n  ({ source, className, ...rest }) => {\n    const theme = useAppState((state) => state.theme)\n\n    const components = useMemo(\n      () => ({\n        pre: ({ children, className, ...rest }: PropsWithChildren & { className?: string }) => (\n          <pre {...rest} className={cn(className, 'nowheel')}>\n            {children}\n          </pre>\n        ),\n        think: ({ children }: PropsWithChildren) => (\n          <>\n            <code className=\"!rounded-none\">Think: </code>\n            <blockquote className=\"think\">{children}</blockquote>\n          </>\n        ),\n      }),\n      [],\n    )\n\n    return (\n      <Suspense>\n        <MarkdownPreview\n          className={cn(\n            '!text-sm [&_p]:leading-relaxed !max-w-full !bg-transparent !font-sans',\n            className,\n          )}\n          source={source}\n          wrapperElement={{\n            'data-color-mode': theme === 'dark' ? 'dark' : 'light',\n          }}\n          components={components}\n          {...rest}\n        />\n      </Suspense>\n    )\n  },\n  (prevProps, nextProps) => prevProps.source === nextProps.source,\n)\n","import * as React from 'react'\n\nimport { cn } from 'src/lib/utils'\n\nconst Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn('rounded-lg border bg-card text-card-foreground shadow-sm', className)}\n      {...props}\n    />\n  ),\n)\nCard.displayName = 'Card'\n\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('flex flex-col space-y-1.5 p-6', className)} {...props} />\n  ),\n)\nCardHeader.displayName = 'CardHeader'\n\nconst CardTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, ...props }, ref) => (\n    <h3\n      ref={ref}\n      className={cn('text-2xl font-semibold leading-none tracking-tight', className)}\n      {...props}\n    />\n  ),\n)\nCardTitle.displayName = 'CardTitle'\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn('text-sm text-muted-foreground', className)} {...props} />\n))\nCardDescription.displayName = 'CardDescription'\n\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n  ),\n)\nCardContent.displayName = 'CardContent'\n\nconst CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('flex items-center p-6 pt-0', className)} {...props} />\n  ),\n)\nCardFooter.displayName = 'CardFooter'\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import { memo, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Label } from 'src/lib/shadcn/ui/label'\nimport LazyIcon from './LazyIcon'\nimport { Input } from 'src/lib/shadcn/ui/input'\nimport { Button } from 'src/lib/shadcn/ui/button'\nimport { Popover, PopoverContent, PopoverTrigger } from 'src/lib/shadcn/ui/popover'\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from 'src/lib/shadcn/ui/card'\n\nexport const LLMSetting = memo(\n  (props: {\n    name?: string\n    className?: string\n    options?: Record<string, unknown>\n    onChangeOptions?: (options: Record<string, unknown>) => Promise<void>\n  }) => {\n    const [show, setShow] = useState(false)\n    const [options, setOptions] = useState<Record<string, unknown>>(props.options || {})\n    const { t } = useTranslation('atoms')\n\n    const handleOpenChange = () => {\n      if (!show) {\n        setOptions(props.options || {})\n      }\n      setShow(!show)\n    }\n\n    const hanleSubmit = () => {\n      props.onChangeOptions?.(options || {})\n      setShow(false)\n    }\n\n    return (\n      <div className={props.className}>\n        <Popover open={show} onOpenChange={setShow}>\n          <PopoverTrigger asChild>\n            <div className=\"flex justify-end gap-2\">\n              <Button onClick={handleOpenChange} variant=\"link\" className=\"flex items-center px-0\">\n                <LazyIcon name=\"settings\" />\n                <Label>{t('llm_setting.title')}</Label>\n              </Button>\n            </div>\n          </PopoverTrigger>\n          <PopoverContent className=\"w-full p-0\">\n            {show ? (\n              <Card className=\"!border-none\">\n                <CardHeader>\n                  <CardTitle>{t('llm_setting.title')}</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div>\n                    <Label>{t('llm_setting.temperature')}:</Label>\n                    <Input\n                      type=\"number\"\n                      value={options.temperature ? `${options.temperature}` : ''}\n                      onChange={(e) =>\n                        setOptions((pre) => ({\n                          ...pre,\n                          temperature: e.target.value,\n                        }))\n                      }\n                    />\n                  </div>\n                  <div>\n                    <Label>{t('llm_setting.top_p')}:</Label>\n                    <Input\n                      type=\"number\"\n                      value={options.topP ? `${options.topP}` : ''}\n                      onChange={(e) =>\n                        setOptions((pre) => ({\n                          ...pre,\n                          topP: e.target.value,\n                        }))\n                      }\n                    />\n                  </div>\n                  <div>\n                    <Label>{t('llm_setting.top_k')}:</Label>\n                    <Input\n                      type=\"number\"\n                      value={options.topK ? `${options.topK}` : ''}\n                      onChange={(e) =>\n                        setOptions((pre) => ({\n                          ...pre,\n                          topK: e.target.value,\n                        }))\n                      }\n                    />\n                  </div>\n                  <div>\n                    <Label>{t('llm_setting.max_tokens')}:</Label>\n                    <Input\n                      type=\"number\"\n                      value={options.maxTokens ? `${options.maxTokens}` : ''}\n                      onChange={(e) =>\n                        setOptions((pre) => ({\n                          ...pre,\n                          maxTokens: e.target.value,\n                        }))\n                      }\n                    />\n                  </div>\n                  <div>\n                    <Label>{t('llm_setting.stop_sequences')}:</Label>\n                    <Input\n                      placeholder={t('llm_setting.stop_sequences_placeholder')}\n                      value={options.stop ? `${options.stop}` : ''}\n                      onChange={(e) =>\n                        setOptions((pre) => ({\n                          ...pre,\n                          stop: e.target.value,\n                        }))\n                      }\n                    />\n                  </div>\n                </CardContent>\n                <CardFooter className=\"flex justify-end\">\n                  <Button variant=\"secondary\" onClick={hanleSubmit}>\n                    {t('llm_setting.save')}\n                  </Button>\n                </CardFooter>\n              </Card>\n            ) : undefined}\n          </PopoverContent>\n        </Popover>\n      </div>\n    )\n  },\n)\n","export const RECOMMENDATION_LOCAL_LLMS = [\n  'Qwen3-1.7B-q4f16_1-MLC',\n  'Qwen2.5-Coder-1.5B-Instruct-q4f16_1-MLC',\n  'stablelm-2-zephyr-1_6b-q4f16_1-MLC-1k',\n  'Phi-3.5-mini-instruct-q4f16_1-MLC-1k',\n  'Llama-3.2-3B-Instruct-q4f32_1-MLC',\n  'DeepSeek-R1-Distill-Qwen-7B-q4f16_1-MLC',\n]\n","import * as React from 'react'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from 'src/lib/utils'\n\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default: 'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary:\n          'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return <div className={cn(badgeVariants({ variant }), className)} {...props} />\n}\n\nexport { Badge, badgeVariants }\n","import { memo, useCallback, useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport type { ModelRecord } from '@mlc-ai/web-llm'\nimport { RECOMMENDATION_LOCAL_LLMS } from 'src/constants/local-llm'\nimport { Badge } from 'src/lib/shadcn/ui/badge'\n\nexport const LLMInfo = memo(\n  (props: {\n    name?: string\n    isFunctionCalling: boolean\n    isCached: boolean\n    cloud: boolean\n    model?: ModelRecord\n  }) => {\n    const { cloud, name, model, isCached, isFunctionCalling } = props\n    const { t } = useTranslation('atoms')\n\n    const modelTypeToString = useCallback((modelType?: unknown) => {\n      if (modelType === 1) {\n        return 'llm_info.model_types.embedding'\n      }\n      if (modelType === 2) {\n        return 'llm_info.model_types.vlm'\n      }\n      return 'llm_info.model_types.llm'\n    }, [])\n\n    const modelTypeBadges = useMemo(() => {\n      if (!model) {\n        return undefined\n      }\n      switch (model.model_type) {\n        case 0:\n        case 1:\n          return <Badge className=\"\">{t(modelTypeToString(model.model_type))}</Badge>\n        case 2:\n          return (\n            <>\n              <Badge className=\"\">{t(modelTypeToString(0))}</Badge>\n              <Badge className=\"\">{t(modelTypeToString(model.model_type))}</Badge>\n            </>\n          )\n      }\n    }, [model, modelTypeToString, t])\n\n    if (!model) {\n      return undefined\n    }\n\n    return (\n      <>\n        {modelTypeBadges}\n        {RECOMMENDATION_LOCAL_LLMS.some((item) => name && item.includes(name)) ? (\n          <Badge className=\"\" variant=\"outline\">\n            {t('llm_info.recommended')}\n          </Badge>\n        ) : null}\n        {isCached ? (\n          <Badge className=\"\" variant=\"outline\">\n            {t('llm_info.cached')}\n          </Badge>\n        ) : null}\n        {cloud ? (\n          <Badge className=\"\" variant=\"outline\">\n            {t('llm_info.cloud')}\n          </Badge>\n        ) : null}\n        {isFunctionCalling ? (\n          <Badge className=\"\" variant=\"outline\">\n            {t('llm_info.function_calling')}\n          </Badge>\n        ) : null}\n        {model?.low_resource_required ? (\n          <Badge className=\"\" variant=\"outline\">\n            {t('llm_info.low_resource_required')}\n          </Badge>\n        ) : null}\n        {model?.overrides?.context_window_size ? (\n          <Badge className=\"\" variant=\"outline\">\n            {model.overrides.context_window_size.toLocaleString('en-US')} Tokens\n          </Badge>\n        ) : null}\n        {model?.vram_required_MB ? (\n          <Badge className=\"\" variant=\"outline\">\n            VRAM: {model.vram_required_MB.toLocaleString('en-US')} MB\n          </Badge>\n        ) : null}\n      </>\n    )\n  },\n)\n","/**\n * Abstract class that provides a default implementation for the\n * loadAndSplit() method from the DocumentLoader interface. The load()\n * method is left abstract and needs to be implemented by subclasses.\n */\nexport class BaseDocumentLoader {\n    /**\n     * @deprecated Use `this.load()` and `splitter.splitDocuments()` individually.\n     * Loads the documents and splits them using a specified text splitter.\n     * @param textSplitter The TextSplitter instance to use for splitting the loaded documents. Defaults to a RecursiveCharacterTextSplitter instance.\n     * @returns A Promise that resolves with an array of Document instances, each split according to the provided TextSplitter.\n     */\n    async loadAndSplit(splitter) {\n        if (splitter === undefined) {\n            throw new Error(\"You must pass a text splitter to use this method.\");\n        }\n        const docs = await this.load();\n        return splitter.invoke(docs);\n    }\n}\n","import { Document } from \"@langchain/core/documents\";\nimport { BaseDocumentLoader } from \"@langchain/core/document_loaders/base\";\n/**\n * A document loader for loading data from PDFs.\n * @example\n * ```typescript\n * const loader = new WebPDFLoader(new Blob());\n * const docs = await loader.load();\n * console.log({ docs });\n * ```\n */\nexport class WebPDFLoader extends BaseDocumentLoader {\n    constructor(blob, { splitPages = true, pdfjs = PDFLoaderImports, parsedItemSeparator = \"\", } = {}) {\n        super();\n        Object.defineProperty(this, \"blob\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"splitPages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"pdfjs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"parsedItemSeparator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.blob = blob;\n        this.splitPages = splitPages ?? this.splitPages;\n        this.pdfjs = pdfjs;\n        this.parsedItemSeparator = parsedItemSeparator;\n    }\n    /**\n     * Loads the contents of the PDF as documents.\n     * @returns An array of Documents representing the retrieved data.\n     */\n    async load() {\n        const { getDocument, version } = await this.pdfjs();\n        const parsedPdf = await getDocument({\n            data: new Uint8Array(await this.blob.arrayBuffer()),\n            useWorkerFetch: false,\n            isEvalSupported: false,\n            useSystemFonts: true,\n        }).promise;\n        const meta = await parsedPdf.getMetadata().catch(() => null);\n        const documents = [];\n        for (let i = 1; i <= parsedPdf.numPages; i += 1) {\n            const page = await parsedPdf.getPage(i);\n            const content = await page.getTextContent();\n            if (content.items.length === 0) {\n                continue;\n            }\n            // Eliminate excessive newlines\n            // Source: https://github.com/albertcui/pdf-parse/blob/7086fc1cc9058545cdf41dd0646d6ae5832c7107/lib/pdf-parse.js#L16\n            let lastY;\n            const textItems = [];\n            for (const item of content.items) {\n                if (\"str\" in item) {\n                    if (lastY === item.transform[5] || !lastY) {\n                        textItems.push(item.str);\n                    }\n                    else {\n                        textItems.push(`\\n${item.str}`);\n                    }\n                    // eslint-disable-next-line prefer-destructuring\n                    lastY = item.transform[5];\n                }\n            }\n            const text = textItems.join(this.parsedItemSeparator);\n            documents.push(new Document({\n                pageContent: text,\n                metadata: {\n                    pdf: {\n                        version,\n                        info: meta?.info,\n                        metadata: meta?.metadata,\n                        totalPages: parsedPdf.numPages,\n                    },\n                    loc: {\n                        pageNumber: i,\n                    },\n                },\n            }));\n        }\n        if (this.splitPages) {\n            return documents;\n        }\n        if (documents.length === 0) {\n            return [];\n        }\n        return [\n            new Document({\n                pageContent: documents.map((doc) => doc.pageContent).join(\"\\n\\n\"),\n                metadata: {\n                    pdf: {\n                        version,\n                        info: meta?.info,\n                        metadata: meta?.metadata,\n                        totalPages: parsedPdf.numPages,\n                    },\n                },\n            }),\n        ];\n        return documents;\n    }\n}\nasync function PDFLoaderImports() {\n    try {\n        const { default: mod } = await import(\"pdf-parse/lib/pdf.js/v1.10.100/build/pdf.js\");\n        const { getDocument, version } = mod;\n        return { getDocument, version };\n    }\n    catch (e) {\n        console.error(e);\n        throw new Error(\"Failed to load pdf-parse. Please install it with eg. `npm install pdf-parse`.\");\n    }\n}\n"],"file":"assets/chunk-CHthsvU9.js"}