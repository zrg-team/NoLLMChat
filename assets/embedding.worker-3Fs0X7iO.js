function ax(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var _0={exports:{}},_r=_0.exports={},Is,ks;function ec(){throw new Error("setTimeout has not been defined")}function tc(){throw new Error("clearTimeout has not been defined")}(function(){try{typeof setTimeout=="function"?Is=setTimeout:Is=ec}catch{Is=ec}try{typeof clearTimeout=="function"?ks=clearTimeout:ks=tc}catch{ks=tc}})();function g0(e){if(Is===setTimeout)return setTimeout(e,0);if((Is===ec||!Is)&&setTimeout)return Is=setTimeout,setTimeout(e,0);try{return Is(e,0)}catch{try{return Is.call(null,e,0)}catch{return Is.call(this,e,0)}}}function lx(e){if(ks===clearTimeout)return clearTimeout(e);if((ks===tc||!ks)&&clearTimeout)return ks=clearTimeout,clearTimeout(e);try{return ks(e)}catch{try{return ks.call(null,e)}catch{return ks.call(this,e)}}}var Us=[],di=!1,Fn,ya=-1;function ux(){!di||!Fn||(di=!1,Fn.length?Us=Fn.concat(Us):ya=-1,Us.length&&w0())}function w0(){if(!di){var e=g0(ux);di=!0;for(var r=Us.length;r;){for(Fn=Us,Us=[];++ya<r;)Fn&&Fn[ya].run();ya=-1,r=Us.length}Fn=null,di=!1,lx(e)}}_r.nextTick=function(e){var r=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)r[t-1]=arguments[t];Us.push(new y0(e,r)),Us.length===1&&!di&&g0(w0)};function y0(e,r){this.fun=e,this.array=r}y0.prototype.run=function(){this.fun.apply(null,this.array)};_r.title="browser";_r.browser=!0;_r.env={};_r.argv=[];_r.version="";_r.versions={};function Vs(){}_r.on=Vs;_r.addListener=Vs;_r.once=Vs;_r.off=Vs;_r.removeListener=Vs;_r.removeAllListeners=Vs;_r.emit=Vs;_r.prependListener=Vs;_r.prependOnceListener=Vs;_r.listeners=function(e){return[]};_r.binding=function(e){throw new Error("process.binding is not supported")};_r.cwd=function(){return"/"};_r.chdir=function(e){throw new Error("process.chdir is not supported")};_r.umask=function(){return 0};var cx=_0.exports;const En=ax(cx);var M0={},Oa={};Oa.byteLength=hx;Oa.toByteArray=fx;Oa.fromByteArray=wx;var Fs=[],ns=[],dx=typeof Uint8Array<"u"?Uint8Array:Array,Yl="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(var ii=0,px=Yl.length;ii<px;++ii)Fs[ii]=Yl[ii],ns[Yl.charCodeAt(ii)]=ii;ns[45]=62;ns[95]=63;function b0(e){var r=e.length;if(r%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var t=e.indexOf("=");t===-1&&(t=r);var s=t===r?0:4-t%4;return[t,s]}function hx(e){var r=b0(e),t=r[0],s=r[1];return(t+s)*3/4-s}function mx(e,r,t){return(r+t)*3/4-t}function fx(e){var r,t=b0(e),s=t[0],n=t[1],i=new dx(mx(e,s,n)),o=0,a=n>0?s-4:s,l;for(l=0;l<a;l+=4)r=ns[e.charCodeAt(l)]<<18|ns[e.charCodeAt(l+1)]<<12|ns[e.charCodeAt(l+2)]<<6|ns[e.charCodeAt(l+3)],i[o++]=r>>16&255,i[o++]=r>>8&255,i[o++]=r&255;return n===2&&(r=ns[e.charCodeAt(l)]<<2|ns[e.charCodeAt(l+1)]>>4,i[o++]=r&255),n===1&&(r=ns[e.charCodeAt(l)]<<10|ns[e.charCodeAt(l+1)]<<4|ns[e.charCodeAt(l+2)]>>2,i[o++]=r>>8&255,i[o++]=r&255),i}function _x(e){return Fs[e>>18&63]+Fs[e>>12&63]+Fs[e>>6&63]+Fs[e&63]}function gx(e,r,t){for(var s,n=[],i=r;i<t;i+=3)s=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255),n.push(_x(s));return n.join("")}function wx(e){for(var r,t=e.length,s=t%3,n=[],i=16383,o=0,a=t-s;o<a;o+=i)n.push(gx(e,o,o+i>a?a:o+i));return s===1?(r=e[t-1],n.push(Fs[r>>2]+Fs[r<<4&63]+"==")):s===2&&(r=(e[t-2]<<8)+e[t-1],n.push(Fs[r>>10]+Fs[r>>4&63]+Fs[r<<2&63]+"=")),n.join("")}var xc={};/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */xc.read=function(e,r,t,s,n){var i,o,a=n*8-s-1,l=(1<<a)-1,d=l>>1,c=-7,u=t?n-1:0,p=t?-1:1,_=e[r+u];for(u+=p,i=_&(1<<-c)-1,_>>=-c,c+=a;c>0;i=i*256+e[r+u],u+=p,c-=8);for(o=i&(1<<-c)-1,i>>=-c,c+=s;c>0;o=o*256+e[r+u],u+=p,c-=8);if(i===0)i=1-d;else{if(i===l)return o?NaN:(_?-1:1)*(1/0);o=o+Math.pow(2,s),i=i-d}return(_?-1:1)*o*Math.pow(2,i-s)};xc.write=function(e,r,t,s,n,i){var o,a,l,d=i*8-n-1,c=(1<<d)-1,u=c>>1,p=n===23?Math.pow(2,-24)-Math.pow(2,-77):0,_=s?0:i-1,f=s?1:-1,P=r<0||r===0&&1/r<0?1:0;for(r=Math.abs(r),isNaN(r)||r===1/0?(a=isNaN(r)?1:0,o=c):(o=Math.floor(Math.log(r)/Math.LN2),r*(l=Math.pow(2,-o))<1&&(o--,l*=2),o+u>=1?r+=p/l:r+=p*Math.pow(2,1-u),r*l>=2&&(o++,l/=2),o+u>=c?(a=0,o=c):o+u>=1?(a=(r*l-1)*Math.pow(2,n),o=o+u):(a=r*Math.pow(2,u-1)*Math.pow(2,n),o=0));n>=8;e[t+_]=a&255,_+=f,a/=256,n-=8);for(o=o<<n|a,d+=n;d>0;e[t+_]=o&255,_+=f,o/=256,d-=8);e[t+_-f]|=P*128};/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */(function(e){const r=Oa,t=xc,s=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;e.Buffer=c,e.SlowBuffer=T,e.INSPECT_MAX_BYTES=50;const n=2147483647;e.kMaxLength=n;const{Uint8Array:i,ArrayBuffer:o,SharedArrayBuffer:a}=globalThis;c.TYPED_ARRAY_SUPPORT=l(),!c.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function l(){try{const O=new i(1),E={foo:function(){return 42}};return Object.setPrototypeOf(E,i.prototype),Object.setPrototypeOf(O,E),O.foo()===42}catch{return!1}}Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}});function d(O){if(O>n)throw new RangeError('The value "'+O+'" is invalid for option "size"');const E=new i(O);return Object.setPrototypeOf(E,c.prototype),E}function c(O,E,S){if(typeof O=="number"){if(typeof E=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return f(O)}return u(O,E,S)}c.poolSize=8192;function u(O,E,S){if(typeof O=="string")return P(O,E);if(o.isView(O))return y(O);if(O==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof O);if(nt(O,o)||O&&nt(O.buffer,o)||typeof a<"u"&&(nt(O,a)||O&&nt(O.buffer,a)))return g(O,E,S);if(typeof O=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');const ee=O.valueOf&&O.valueOf();if(ee!=null&&ee!==O)return c.from(ee,E,S);const de=I(O);if(de)return de;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof O[Symbol.toPrimitive]=="function")return c.from(O[Symbol.toPrimitive]("string"),E,S);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof O)}c.from=function(O,E,S){return u(O,E,S)},Object.setPrototypeOf(c.prototype,i.prototype),Object.setPrototypeOf(c,i);function p(O){if(typeof O!="number")throw new TypeError('"size" argument must be of type number');if(O<0)throw new RangeError('The value "'+O+'" is invalid for option "size"')}function _(O,E,S){return p(O),O<=0?d(O):E!==void 0?typeof S=="string"?d(O).fill(E,S):d(O).fill(E):d(O)}c.alloc=function(O,E,S){return _(O,E,S)};function f(O){return p(O),d(O<0?0:v(O)|0)}c.allocUnsafe=function(O){return f(O)},c.allocUnsafeSlow=function(O){return f(O)};function P(O,E){if((typeof E!="string"||E==="")&&(E="utf8"),!c.isEncoding(E))throw new TypeError("Unknown encoding: "+E);const S=x(O,E)|0;let ee=d(S);const de=ee.write(O,E);return de!==S&&(ee=ee.slice(0,de)),ee}function A(O){const E=O.length<0?0:v(O.length)|0,S=d(E);for(let ee=0;ee<E;ee+=1)S[ee]=O[ee]&255;return S}function y(O){if(nt(O,i)){const E=new i(O);return g(E.buffer,E.byteOffset,E.byteLength)}return A(O)}function g(O,E,S){if(E<0||O.byteLength<E)throw new RangeError('"offset" is outside of buffer bounds');if(O.byteLength<E+(S||0))throw new RangeError('"length" is outside of buffer bounds');let ee;return E===void 0&&S===void 0?ee=new i(O):S===void 0?ee=new i(O,E):ee=new i(O,E,S),Object.setPrototypeOf(ee,c.prototype),ee}function I(O){if(c.isBuffer(O)){const E=v(O.length)|0,S=d(E);return S.length===0||O.copy(S,0,0,E),S}if(O.length!==void 0)return typeof O.length!="number"||et(O.length)?d(0):A(O);if(O.type==="Buffer"&&Array.isArray(O.data))return A(O.data)}function v(O){if(O>=n)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+n.toString(16)+" bytes");return O|0}function T(O){return+O!=O&&(O=0),c.alloc(+O)}c.isBuffer=function(E){return E!=null&&E._isBuffer===!0&&E!==c.prototype},c.compare=function(E,S){if(nt(E,i)&&(E=c.from(E,E.offset,E.byteLength)),nt(S,i)&&(S=c.from(S,S.offset,S.byteLength)),!c.isBuffer(E)||!c.isBuffer(S))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(E===S)return 0;let ee=E.length,de=S.length;for(let Me=0,ye=Math.min(ee,de);Me<ye;++Me)if(E[Me]!==S[Me]){ee=E[Me],de=S[Me];break}return ee<de?-1:de<ee?1:0},c.isEncoding=function(E){switch(String(E).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(E,S){if(!Array.isArray(E))throw new TypeError('"list" argument must be an Array of Buffers');if(E.length===0)return c.alloc(0);let ee;if(S===void 0)for(S=0,ee=0;ee<E.length;++ee)S+=E[ee].length;const de=c.allocUnsafe(S);let Me=0;for(ee=0;ee<E.length;++ee){let ye=E[ee];if(nt(ye,i))Me+ye.length>de.length?(c.isBuffer(ye)||(ye=c.from(ye)),ye.copy(de,Me)):i.prototype.set.call(de,ye,Me);else if(c.isBuffer(ye))ye.copy(de,Me);else throw new TypeError('"list" argument must be an Array of Buffers');Me+=ye.length}return de};function x(O,E){if(c.isBuffer(O))return O.length;if(o.isView(O)||nt(O,o))return O.byteLength;if(typeof O!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof O);const S=O.length,ee=arguments.length>2&&arguments[2]===!0;if(!ee&&S===0)return 0;let de=!1;for(;;)switch(E){case"ascii":case"latin1":case"binary":return S;case"utf8":case"utf-8":return Ke(O).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S*2;case"hex":return S>>>1;case"base64":return Be(O).length;default:if(de)return ee?-1:Ke(O).length;E=(""+E).toLowerCase(),de=!0}}c.byteLength=x;function b(O,E,S){let ee=!1;if((E===void 0||E<0)&&(E=0),E>this.length||((S===void 0||S>this.length)&&(S=this.length),S<=0)||(S>>>=0,E>>>=0,S<=E))return"";for(O||(O="utf8");;)switch(O){case"hex":return D(this,E,S);case"utf8":case"utf-8":return se(this,E,S);case"ascii":return ce(this,E,S);case"latin1":case"binary":return N(this,E,S);case"base64":return K(this,E,S);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Q(this,E,S);default:if(ee)throw new TypeError("Unknown encoding: "+O);O=(O+"").toLowerCase(),ee=!0}}c.prototype._isBuffer=!0;function $(O,E,S){const ee=O[E];O[E]=O[S],O[S]=ee}c.prototype.swap16=function(){const E=this.length;if(E%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let S=0;S<E;S+=2)$(this,S,S+1);return this},c.prototype.swap32=function(){const E=this.length;if(E%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let S=0;S<E;S+=4)$(this,S,S+3),$(this,S+1,S+2);return this},c.prototype.swap64=function(){const E=this.length;if(E%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let S=0;S<E;S+=8)$(this,S,S+7),$(this,S+1,S+6),$(this,S+2,S+5),$(this,S+3,S+4);return this},c.prototype.toString=function(){const E=this.length;return E===0?"":arguments.length===0?se(this,0,E):b.apply(this,arguments)},c.prototype.toLocaleString=c.prototype.toString,c.prototype.equals=function(E){if(!c.isBuffer(E))throw new TypeError("Argument must be a Buffer");return this===E?!0:c.compare(this,E)===0},c.prototype.inspect=function(){let E="";const S=e.INSPECT_MAX_BYTES;return E=this.toString("hex",0,S).replace(/(.{2})/g,"$1 ").trim(),this.length>S&&(E+=" ... "),"<Buffer "+E+">"},s&&(c.prototype[s]=c.prototype.inspect),c.prototype.compare=function(E,S,ee,de,Me){if(nt(E,i)&&(E=c.from(E,E.offset,E.byteLength)),!c.isBuffer(E))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof E);if(S===void 0&&(S=0),ee===void 0&&(ee=E?E.length:0),de===void 0&&(de=0),Me===void 0&&(Me=this.length),S<0||ee>E.length||de<0||Me>this.length)throw new RangeError("out of range index");if(de>=Me&&S>=ee)return 0;if(de>=Me)return-1;if(S>=ee)return 1;if(S>>>=0,ee>>>=0,de>>>=0,Me>>>=0,this===E)return 0;let ye=Me-de,bt=ee-S;const L=Math.min(ye,bt),oe=this.slice(de,Me),V=E.slice(S,ee);for(let ne=0;ne<L;++ne)if(oe[ne]!==V[ne]){ye=oe[ne],bt=V[ne];break}return ye<bt?-1:bt<ye?1:0};function j(O,E,S,ee,de){if(O.length===0)return-1;if(typeof S=="string"?(ee=S,S=0):S>2147483647?S=2147483647:S<-2147483648&&(S=-2147483648),S=+S,et(S)&&(S=de?0:O.length-1),S<0&&(S=O.length+S),S>=O.length){if(de)return-1;S=O.length-1}else if(S<0)if(de)S=0;else return-1;if(typeof E=="string"&&(E=c.from(E,ee)),c.isBuffer(E))return E.length===0?-1:B(O,E,S,ee,de);if(typeof E=="number")return E=E&255,typeof i.prototype.indexOf=="function"?de?i.prototype.indexOf.call(O,E,S):i.prototype.lastIndexOf.call(O,E,S):B(O,[E],S,ee,de);throw new TypeError("val must be string, number or Buffer")}function B(O,E,S,ee,de){let Me=1,ye=O.length,bt=E.length;if(ee!==void 0&&(ee=String(ee).toLowerCase(),ee==="ucs2"||ee==="ucs-2"||ee==="utf16le"||ee==="utf-16le")){if(O.length<2||E.length<2)return-1;Me=2,ye/=2,bt/=2,S/=2}function L(V,ne){return Me===1?V[ne]:V.readUInt16BE(ne*Me)}let oe;if(de){let V=-1;for(oe=S;oe<ye;oe++)if(L(O,oe)===L(E,V===-1?0:oe-V)){if(V===-1&&(V=oe),oe-V+1===bt)return V*Me}else V!==-1&&(oe-=oe-V),V=-1}else for(S+bt>ye&&(S=ye-bt),oe=S;oe>=0;oe--){let V=!0;for(let ne=0;ne<bt;ne++)if(L(O,oe+ne)!==L(E,ne)){V=!1;break}if(V)return oe}return-1}c.prototype.includes=function(E,S,ee){return this.indexOf(E,S,ee)!==-1},c.prototype.indexOf=function(E,S,ee){return j(this,E,S,ee,!0)},c.prototype.lastIndexOf=function(E,S,ee){return j(this,E,S,ee,!1)};function X(O,E,S,ee){S=Number(S)||0;const de=O.length-S;ee?(ee=Number(ee),ee>de&&(ee=de)):ee=de;const Me=E.length;ee>Me/2&&(ee=Me/2);let ye;for(ye=0;ye<ee;++ye){const bt=parseInt(E.substr(ye*2,2),16);if(et(bt))return ye;O[S+ye]=bt}return ye}function re(O,E,S,ee){return Ye(Ke(E,O.length-S),O,S,ee)}function z(O,E,S,ee){return Ye(He(E),O,S,ee)}function te(O,E,S,ee){return Ye(Be(E),O,S,ee)}function W(O,E,S,ee){return Ye(Xe(E,O.length-S),O,S,ee)}c.prototype.write=function(E,S,ee,de){if(S===void 0)de="utf8",ee=this.length,S=0;else if(ee===void 0&&typeof S=="string")de=S,ee=this.length,S=0;else if(isFinite(S))S=S>>>0,isFinite(ee)?(ee=ee>>>0,de===void 0&&(de="utf8")):(de=ee,ee=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");const Me=this.length-S;if((ee===void 0||ee>Me)&&(ee=Me),E.length>0&&(ee<0||S<0)||S>this.length)throw new RangeError("Attempt to write outside buffer bounds");de||(de="utf8");let ye=!1;for(;;)switch(de){case"hex":return X(this,E,S,ee);case"utf8":case"utf-8":return re(this,E,S,ee);case"ascii":case"latin1":case"binary":return z(this,E,S,ee);case"base64":return te(this,E,S,ee);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return W(this,E,S,ee);default:if(ye)throw new TypeError("Unknown encoding: "+de);de=(""+de).toLowerCase(),ye=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function K(O,E,S){return E===0&&S===O.length?r.fromByteArray(O):r.fromByteArray(O.slice(E,S))}function se(O,E,S){S=Math.min(O.length,S);const ee=[];let de=E;for(;de<S;){const Me=O[de];let ye=null,bt=Me>239?4:Me>223?3:Me>191?2:1;if(de+bt<=S){let L,oe,V,ne;switch(bt){case 1:Me<128&&(ye=Me);break;case 2:L=O[de+1],(L&192)===128&&(ne=(Me&31)<<6|L&63,ne>127&&(ye=ne));break;case 3:L=O[de+1],oe=O[de+2],(L&192)===128&&(oe&192)===128&&(ne=(Me&15)<<12|(L&63)<<6|oe&63,ne>2047&&(ne<55296||ne>57343)&&(ye=ne));break;case 4:L=O[de+1],oe=O[de+2],V=O[de+3],(L&192)===128&&(oe&192)===128&&(V&192)===128&&(ne=(Me&15)<<18|(L&63)<<12|(oe&63)<<6|V&63,ne>65535&&ne<1114112&&(ye=ne))}}ye===null?(ye=65533,bt=1):ye>65535&&(ye-=65536,ee.push(ye>>>10&1023|55296),ye=56320|ye&1023),ee.push(ye),de+=bt}return ue(ee)}const J=4096;function ue(O){const E=O.length;if(E<=J)return String.fromCharCode.apply(String,O);let S="",ee=0;for(;ee<E;)S+=String.fromCharCode.apply(String,O.slice(ee,ee+=J));return S}function ce(O,E,S){let ee="";S=Math.min(O.length,S);for(let de=E;de<S;++de)ee+=String.fromCharCode(O[de]&127);return ee}function N(O,E,S){let ee="";S=Math.min(O.length,S);for(let de=E;de<S;++de)ee+=String.fromCharCode(O[de]);return ee}function D(O,E,S){const ee=O.length;(!E||E<0)&&(E=0),(!S||S<0||S>ee)&&(S=ee);let de="";for(let Me=E;Me<S;++Me)de+=mt[O[Me]];return de}function Q(O,E,S){const ee=O.slice(E,S);let de="";for(let Me=0;Me<ee.length-1;Me+=2)de+=String.fromCharCode(ee[Me]+ee[Me+1]*256);return de}c.prototype.slice=function(E,S){const ee=this.length;E=~~E,S=S===void 0?ee:~~S,E<0?(E+=ee,E<0&&(E=0)):E>ee&&(E=ee),S<0?(S+=ee,S<0&&(S=0)):S>ee&&(S=ee),S<E&&(S=E);const de=this.subarray(E,S);return Object.setPrototypeOf(de,c.prototype),de};function U(O,E,S){if(O%1!==0||O<0)throw new RangeError("offset is not uint");if(O+E>S)throw new RangeError("Trying to access beyond buffer length")}c.prototype.readUintLE=c.prototype.readUIntLE=function(E,S,ee){E=E>>>0,S=S>>>0,ee||U(E,S,this.length);let de=this[E],Me=1,ye=0;for(;++ye<S&&(Me*=256);)de+=this[E+ye]*Me;return de},c.prototype.readUintBE=c.prototype.readUIntBE=function(E,S,ee){E=E>>>0,S=S>>>0,ee||U(E,S,this.length);let de=this[E+--S],Me=1;for(;S>0&&(Me*=256);)de+=this[E+--S]*Me;return de},c.prototype.readUint8=c.prototype.readUInt8=function(E,S){return E=E>>>0,S||U(E,1,this.length),this[E]},c.prototype.readUint16LE=c.prototype.readUInt16LE=function(E,S){return E=E>>>0,S||U(E,2,this.length),this[E]|this[E+1]<<8},c.prototype.readUint16BE=c.prototype.readUInt16BE=function(E,S){return E=E>>>0,S||U(E,2,this.length),this[E]<<8|this[E+1]},c.prototype.readUint32LE=c.prototype.readUInt32LE=function(E,S){return E=E>>>0,S||U(E,4,this.length),(this[E]|this[E+1]<<8|this[E+2]<<16)+this[E+3]*16777216},c.prototype.readUint32BE=c.prototype.readUInt32BE=function(E,S){return E=E>>>0,S||U(E,4,this.length),this[E]*16777216+(this[E+1]<<16|this[E+2]<<8|this[E+3])},c.prototype.readBigUInt64LE=rt(function(E){E=E>>>0,$e(E,"offset");const S=this[E],ee=this[E+7];(S===void 0||ee===void 0)&&Se(E,this.length-8);const de=S+this[++E]*2**8+this[++E]*2**16+this[++E]*2**24,Me=this[++E]+this[++E]*2**8+this[++E]*2**16+ee*2**24;return BigInt(de)+(BigInt(Me)<<BigInt(32))}),c.prototype.readBigUInt64BE=rt(function(E){E=E>>>0,$e(E,"offset");const S=this[E],ee=this[E+7];(S===void 0||ee===void 0)&&Se(E,this.length-8);const de=S*2**24+this[++E]*2**16+this[++E]*2**8+this[++E],Me=this[++E]*2**24+this[++E]*2**16+this[++E]*2**8+ee;return(BigInt(de)<<BigInt(32))+BigInt(Me)}),c.prototype.readIntLE=function(E,S,ee){E=E>>>0,S=S>>>0,ee||U(E,S,this.length);let de=this[E],Me=1,ye=0;for(;++ye<S&&(Me*=256);)de+=this[E+ye]*Me;return Me*=128,de>=Me&&(de-=Math.pow(2,8*S)),de},c.prototype.readIntBE=function(E,S,ee){E=E>>>0,S=S>>>0,ee||U(E,S,this.length);let de=S,Me=1,ye=this[E+--de];for(;de>0&&(Me*=256);)ye+=this[E+--de]*Me;return Me*=128,ye>=Me&&(ye-=Math.pow(2,8*S)),ye},c.prototype.readInt8=function(E,S){return E=E>>>0,S||U(E,1,this.length),this[E]&128?(255-this[E]+1)*-1:this[E]},c.prototype.readInt16LE=function(E,S){E=E>>>0,S||U(E,2,this.length);const ee=this[E]|this[E+1]<<8;return ee&32768?ee|4294901760:ee},c.prototype.readInt16BE=function(E,S){E=E>>>0,S||U(E,2,this.length);const ee=this[E+1]|this[E]<<8;return ee&32768?ee|4294901760:ee},c.prototype.readInt32LE=function(E,S){return E=E>>>0,S||U(E,4,this.length),this[E]|this[E+1]<<8|this[E+2]<<16|this[E+3]<<24},c.prototype.readInt32BE=function(E,S){return E=E>>>0,S||U(E,4,this.length),this[E]<<24|this[E+1]<<16|this[E+2]<<8|this[E+3]},c.prototype.readBigInt64LE=rt(function(E){E=E>>>0,$e(E,"offset");const S=this[E],ee=this[E+7];(S===void 0||ee===void 0)&&Se(E,this.length-8);const de=this[E+4]+this[E+5]*2**8+this[E+6]*2**16+(ee<<24);return(BigInt(de)<<BigInt(32))+BigInt(S+this[++E]*2**8+this[++E]*2**16+this[++E]*2**24)}),c.prototype.readBigInt64BE=rt(function(E){E=E>>>0,$e(E,"offset");const S=this[E],ee=this[E+7];(S===void 0||ee===void 0)&&Se(E,this.length-8);const de=(S<<24)+this[++E]*2**16+this[++E]*2**8+this[++E];return(BigInt(de)<<BigInt(32))+BigInt(this[++E]*2**24+this[++E]*2**16+this[++E]*2**8+ee)}),c.prototype.readFloatLE=function(E,S){return E=E>>>0,S||U(E,4,this.length),t.read(this,E,!0,23,4)},c.prototype.readFloatBE=function(E,S){return E=E>>>0,S||U(E,4,this.length),t.read(this,E,!1,23,4)},c.prototype.readDoubleLE=function(E,S){return E=E>>>0,S||U(E,8,this.length),t.read(this,E,!0,52,8)},c.prototype.readDoubleBE=function(E,S){return E=E>>>0,S||U(E,8,this.length),t.read(this,E,!1,52,8)};function ae(O,E,S,ee,de,Me){if(!c.isBuffer(O))throw new TypeError('"buffer" argument must be a Buffer instance');if(E>de||E<Me)throw new RangeError('"value" argument is out of bounds');if(S+ee>O.length)throw new RangeError("Index out of range")}c.prototype.writeUintLE=c.prototype.writeUIntLE=function(E,S,ee,de){if(E=+E,S=S>>>0,ee=ee>>>0,!de){const bt=Math.pow(2,8*ee)-1;ae(this,E,S,ee,bt,0)}let Me=1,ye=0;for(this[S]=E&255;++ye<ee&&(Me*=256);)this[S+ye]=E/Me&255;return S+ee},c.prototype.writeUintBE=c.prototype.writeUIntBE=function(E,S,ee,de){if(E=+E,S=S>>>0,ee=ee>>>0,!de){const bt=Math.pow(2,8*ee)-1;ae(this,E,S,ee,bt,0)}let Me=ee-1,ye=1;for(this[S+Me]=E&255;--Me>=0&&(ye*=256);)this[S+Me]=E/ye&255;return S+ee},c.prototype.writeUint8=c.prototype.writeUInt8=function(E,S,ee){return E=+E,S=S>>>0,ee||ae(this,E,S,1,255,0),this[S]=E&255,S+1},c.prototype.writeUint16LE=c.prototype.writeUInt16LE=function(E,S,ee){return E=+E,S=S>>>0,ee||ae(this,E,S,2,65535,0),this[S]=E&255,this[S+1]=E>>>8,S+2},c.prototype.writeUint16BE=c.prototype.writeUInt16BE=function(E,S,ee){return E=+E,S=S>>>0,ee||ae(this,E,S,2,65535,0),this[S]=E>>>8,this[S+1]=E&255,S+2},c.prototype.writeUint32LE=c.prototype.writeUInt32LE=function(E,S,ee){return E=+E,S=S>>>0,ee||ae(this,E,S,4,4294967295,0),this[S+3]=E>>>24,this[S+2]=E>>>16,this[S+1]=E>>>8,this[S]=E&255,S+4},c.prototype.writeUint32BE=c.prototype.writeUInt32BE=function(E,S,ee){return E=+E,S=S>>>0,ee||ae(this,E,S,4,4294967295,0),this[S]=E>>>24,this[S+1]=E>>>16,this[S+2]=E>>>8,this[S+3]=E&255,S+4};function Ae(O,E,S,ee,de){Ce(E,ee,de,O,S,7);let Me=Number(E&BigInt(4294967295));O[S++]=Me,Me=Me>>8,O[S++]=Me,Me=Me>>8,O[S++]=Me,Me=Me>>8,O[S++]=Me;let ye=Number(E>>BigInt(32)&BigInt(4294967295));return O[S++]=ye,ye=ye>>8,O[S++]=ye,ye=ye>>8,O[S++]=ye,ye=ye>>8,O[S++]=ye,S}function Ee(O,E,S,ee,de){Ce(E,ee,de,O,S,7);let Me=Number(E&BigInt(4294967295));O[S+7]=Me,Me=Me>>8,O[S+6]=Me,Me=Me>>8,O[S+5]=Me,Me=Me>>8,O[S+4]=Me;let ye=Number(E>>BigInt(32)&BigInt(4294967295));return O[S+3]=ye,ye=ye>>8,O[S+2]=ye,ye=ye>>8,O[S+1]=ye,ye=ye>>8,O[S]=ye,S+8}c.prototype.writeBigUInt64LE=rt(function(E,S=0){return Ae(this,E,S,BigInt(0),BigInt("0xffffffffffffffff"))}),c.prototype.writeBigUInt64BE=rt(function(E,S=0){return Ee(this,E,S,BigInt(0),BigInt("0xffffffffffffffff"))}),c.prototype.writeIntLE=function(E,S,ee,de){if(E=+E,S=S>>>0,!de){const L=Math.pow(2,8*ee-1);ae(this,E,S,ee,L-1,-L)}let Me=0,ye=1,bt=0;for(this[S]=E&255;++Me<ee&&(ye*=256);)E<0&&bt===0&&this[S+Me-1]!==0&&(bt=1),this[S+Me]=(E/ye>>0)-bt&255;return S+ee},c.prototype.writeIntBE=function(E,S,ee,de){if(E=+E,S=S>>>0,!de){const L=Math.pow(2,8*ee-1);ae(this,E,S,ee,L-1,-L)}let Me=ee-1,ye=1,bt=0;for(this[S+Me]=E&255;--Me>=0&&(ye*=256);)E<0&&bt===0&&this[S+Me+1]!==0&&(bt=1),this[S+Me]=(E/ye>>0)-bt&255;return S+ee},c.prototype.writeInt8=function(E,S,ee){return E=+E,S=S>>>0,ee||ae(this,E,S,1,127,-128),E<0&&(E=255+E+1),this[S]=E&255,S+1},c.prototype.writeInt16LE=function(E,S,ee){return E=+E,S=S>>>0,ee||ae(this,E,S,2,32767,-32768),this[S]=E&255,this[S+1]=E>>>8,S+2},c.prototype.writeInt16BE=function(E,S,ee){return E=+E,S=S>>>0,ee||ae(this,E,S,2,32767,-32768),this[S]=E>>>8,this[S+1]=E&255,S+2},c.prototype.writeInt32LE=function(E,S,ee){return E=+E,S=S>>>0,ee||ae(this,E,S,4,2147483647,-2147483648),this[S]=E&255,this[S+1]=E>>>8,this[S+2]=E>>>16,this[S+3]=E>>>24,S+4},c.prototype.writeInt32BE=function(E,S,ee){return E=+E,S=S>>>0,ee||ae(this,E,S,4,2147483647,-2147483648),E<0&&(E=4294967295+E+1),this[S]=E>>>24,this[S+1]=E>>>16,this[S+2]=E>>>8,this[S+3]=E&255,S+4},c.prototype.writeBigInt64LE=rt(function(E,S=0){return Ae(this,E,S,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),c.prototype.writeBigInt64BE=rt(function(E,S=0){return Ee(this,E,S,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function Le(O,E,S,ee,de,Me){if(S+ee>O.length)throw new RangeError("Index out of range");if(S<0)throw new RangeError("Index out of range")}function Ve(O,E,S,ee,de){return E=+E,S=S>>>0,de||Le(O,E,S,4),t.write(O,E,S,ee,23,4),S+4}c.prototype.writeFloatLE=function(E,S,ee){return Ve(this,E,S,!0,ee)},c.prototype.writeFloatBE=function(E,S,ee){return Ve(this,E,S,!1,ee)};function me(O,E,S,ee,de){return E=+E,S=S>>>0,de||Le(O,E,S,8),t.write(O,E,S,ee,52,8),S+8}c.prototype.writeDoubleLE=function(E,S,ee){return me(this,E,S,!0,ee)},c.prototype.writeDoubleBE=function(E,S,ee){return me(this,E,S,!1,ee)},c.prototype.copy=function(E,S,ee,de){if(!c.isBuffer(E))throw new TypeError("argument should be a Buffer");if(ee||(ee=0),!de&&de!==0&&(de=this.length),S>=E.length&&(S=E.length),S||(S=0),de>0&&de<ee&&(de=ee),de===ee||E.length===0||this.length===0)return 0;if(S<0)throw new RangeError("targetStart out of bounds");if(ee<0||ee>=this.length)throw new RangeError("Index out of range");if(de<0)throw new RangeError("sourceEnd out of bounds");de>this.length&&(de=this.length),E.length-S<de-ee&&(de=E.length-S+ee);const Me=de-ee;return this===E&&typeof i.prototype.copyWithin=="function"?this.copyWithin(S,ee,de):i.prototype.set.call(E,this.subarray(ee,de),S),Me},c.prototype.fill=function(E,S,ee,de){if(typeof E=="string"){if(typeof S=="string"?(de=S,S=0,ee=this.length):typeof ee=="string"&&(de=ee,ee=this.length),de!==void 0&&typeof de!="string")throw new TypeError("encoding must be a string");if(typeof de=="string"&&!c.isEncoding(de))throw new TypeError("Unknown encoding: "+de);if(E.length===1){const ye=E.charCodeAt(0);(de==="utf8"&&ye<128||de==="latin1")&&(E=ye)}}else typeof E=="number"?E=E&255:typeof E=="boolean"&&(E=Number(E));if(S<0||this.length<S||this.length<ee)throw new RangeError("Out of range index");if(ee<=S)return this;S=S>>>0,ee=ee===void 0?this.length:ee>>>0,E||(E=0);let Me;if(typeof E=="number")for(Me=S;Me<ee;++Me)this[Me]=E;else{const ye=c.isBuffer(E)?E:c.from(E,de),bt=ye.length;if(bt===0)throw new TypeError('The value "'+E+'" is invalid for argument "value"');for(Me=0;Me<ee-S;++Me)this[Me+S]=ye[Me%bt]}return this};const H={};function fe(O,E,S){H[O]=class extends S{constructor(){super(),Object.defineProperty(this,"message",{value:E.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${O}]`,this.stack,delete this.name}get code(){return O}set code(de){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:de,writable:!0})}toString(){return`${this.name} [${O}]: ${this.message}`}}}fe("ERR_BUFFER_OUT_OF_BOUNDS",function(O){return O?`${O} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),fe("ERR_INVALID_ARG_TYPE",function(O,E){return`The "${O}" argument must be of type number. Received type ${typeof E}`},TypeError),fe("ERR_OUT_OF_RANGE",function(O,E,S){let ee=`The value of "${O}" is out of range.`,de=S;return Number.isInteger(S)&&Math.abs(S)>2**32?de=Z(String(S)):typeof S=="bigint"&&(de=String(S),(S>BigInt(2)**BigInt(32)||S<-(BigInt(2)**BigInt(32)))&&(de=Z(de)),de+="n"),ee+=` It must be ${E}. Received ${de}`,ee},RangeError);function Z(O){let E="",S=O.length;const ee=O[0]==="-"?1:0;for(;S>=ee+4;S-=3)E=`_${O.slice(S-3,S)}${E}`;return`${O.slice(0,S)}${E}`}function xe(O,E,S){$e(E,"offset"),(O[E]===void 0||O[E+S]===void 0)&&Se(E,O.length-(S+1))}function Ce(O,E,S,ee,de,Me){if(O>S||O<E){const ye=typeof E=="bigint"?"n":"";let bt;throw E===0||E===BigInt(0)?bt=`>= 0${ye} and < 2${ye} ** ${(Me+1)*8}${ye}`:bt=`>= -(2${ye} ** ${(Me+1)*8-1}${ye}) and < 2 ** ${(Me+1)*8-1}${ye}`,new H.ERR_OUT_OF_RANGE("value",bt,O)}xe(ee,de,Me)}function $e(O,E){if(typeof O!="number")throw new H.ERR_INVALID_ARG_TYPE(E,"number",O)}function Se(O,E,S){throw Math.floor(O)!==O?($e(O,S),new H.ERR_OUT_OF_RANGE("offset","an integer",O)):E<0?new H.ERR_BUFFER_OUT_OF_BOUNDS:new H.ERR_OUT_OF_RANGE("offset",`>= 0 and <= ${E}`,O)}const Oe=/[^+/0-9A-Za-z-_]/g;function ze(O){if(O=O.split("=")[0],O=O.trim().replace(Oe,""),O.length<2)return"";for(;O.length%4!==0;)O=O+"=";return O}function Ke(O,E){E=E||1/0;let S;const ee=O.length;let de=null;const Me=[];for(let ye=0;ye<ee;++ye){if(S=O.charCodeAt(ye),S>55295&&S<57344){if(!de){if(S>56319){(E-=3)>-1&&Me.push(239,191,189);continue}else if(ye+1===ee){(E-=3)>-1&&Me.push(239,191,189);continue}de=S;continue}if(S<56320){(E-=3)>-1&&Me.push(239,191,189),de=S;continue}S=(de-55296<<10|S-56320)+65536}else de&&(E-=3)>-1&&Me.push(239,191,189);if(de=null,S<128){if((E-=1)<0)break;Me.push(S)}else if(S<2048){if((E-=2)<0)break;Me.push(S>>6|192,S&63|128)}else if(S<65536){if((E-=3)<0)break;Me.push(S>>12|224,S>>6&63|128,S&63|128)}else if(S<1114112){if((E-=4)<0)break;Me.push(S>>18|240,S>>12&63|128,S>>6&63|128,S&63|128)}else throw new Error("Invalid code point")}return Me}function He(O){const E=[];for(let S=0;S<O.length;++S)E.push(O.charCodeAt(S)&255);return E}function Xe(O,E){let S,ee,de;const Me=[];for(let ye=0;ye<O.length&&!((E-=2)<0);++ye)S=O.charCodeAt(ye),ee=S>>8,de=S%256,Me.push(de),Me.push(ee);return Me}function Be(O){return r.toByteArray(ze(O))}function Ye(O,E,S,ee){let de;for(de=0;de<ee&&!(de+S>=E.length||de>=O.length);++de)E[de+S]=O[de];return de}function nt(O,E){return O instanceof E||O!=null&&O.constructor!=null&&O.constructor.name!=null&&O.constructor.name===E.name}function et(O){return O!==O}const mt=function(){const O="0123456789abcdef",E=new Array(256);for(let S=0;S<16;++S){const ee=S*16;for(let de=0;de<16;++de)E[ee+de]=O[S]+O[de]}return E}();function rt(O){return typeof BigInt>"u"?We:O}function We(){throw new Error("BigInt not supported")}})(M0);const yx=M0.Buffer,Ma=new Map,In=[],Mx=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){const s=Ma.get(e);if(s===void 0)Ma.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){const n=In.indexOf(e);n!==-1&&In.splice(n,1);for(let i=0;i<In.length;i++)if(Ma.get(In[i]).priority<=t){In.splice(i,0,e);return}In.push(e)}return}throw new TypeError("not a valid backend")},bx=async e=>{const r=Ma.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{const t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},vx=async e=>{const r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?In:t;let n;const i=[],o=new Set;for(const l of s){const d=await bx(l);typeof d=="string"?i.push({name:l,err:d}):(n||(n=d),n===d&&o.add(l))}if(!n)throw new Error(`no available backend found. ERR: ${i.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(const{name:l,err:d}of i)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${d}`);const a=r.filter(l=>o.has(typeof l=="string"?l:l.name));return[n,new Proxy(e,{get:(l,d)=>d==="executionProviders"?a:Reflect.get(l,d)})]},xx="1.21.0";let Cf="warning";const bs={wasm:{},webgl:{},webgpu:{},versions:{common:xx},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Cf=e}},get logLevel(){return Cf}};Object.defineProperty(bs,"logLevel",{enumerable:!0});const Tx=bs,Ex=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];const s=t.getContext("2d");if(s!=null){let n,i;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],i=e.dims[3]):(n=e.dims[3],i=e.dims[2]);const o=r?.format!==void 0?r.format:"RGB",a=r?.norm;let l,d;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?d=[0,0,0,0]:typeof a.bias=="number"?d=[a.bias,a.bias,a.bias,a.bias]:(d=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(d[3]=a.bias[3]));const c=i*n;let u=0,p=c,_=c*2,f=-1;o==="RGBA"?(u=0,p=c,_=c*2,f=c*3):o==="RGB"?(u=0,p=c,_=c*2):o==="RBG"&&(u=0,_=c,p=c*2);for(let P=0;P<i;P++)for(let A=0;A<n;A++){const y=(e.data[u++]-d[0])*l[0],g=(e.data[p++]-d[1])*l[1],I=(e.data[_++]-d[2])*l[2],v=f===-1?255:(e.data[f++]-d[3])*l[3];s.fillStyle="rgba("+y+","+g+","+I+","+v+")",s.fillRect(A,P,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Px=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let s;if(t!=null){let n,i,o;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],i=e.dims[1],o=e.dims[3]):(n=e.dims[3],i=e.dims[2],o=e.dims[1]);const a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r?.norm;let d,c;l===void 0||l.mean===void 0?d=[255,255,255,255]:typeof l.mean=="number"?d=[l.mean,l.mean,l.mean,l.mean]:(d=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(d[3]=l.mean[3])),l===void 0||l.bias===void 0?c=[0,0,0,0]:typeof l.bias=="number"?c=[l.bias,l.bias,l.bias,l.bias]:(c=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(c[3]=l.bias[3]));const u=i*n;if(r!==void 0&&(r.format!==void 0&&o===4&&r.format!=="RGBA"||o===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const p=4;let _=0,f=1,P=2,A=3,y=0,g=u,I=u*2,v=-1;a==="RGBA"?(y=0,g=u,I=u*2,v=u*3):a==="RGB"?(y=0,g=u,I=u*2):a==="RBG"&&(y=0,I=u,g=u*2),s=t.createImageData(n,i);for(let T=0;T<i*n;_+=p,f+=p,P+=p,A+=p,T++)s.data[_]=(e.data[y++]-c[0])*d[0],s.data[f]=(e.data[g++]-c[1])*d[1],s.data[P]=(e.data[I++]-c[2])*d[2],s.data[A]=v===-1?255:(e.data[v++]-c[3])*d[3]}else throw new Error("Can not access image data");return s},Jl=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:t,width:s}=r,n=r.norm??{mean:255,bias:0};let i,o;typeof n.mean=="number"?i=[n.mean,n.mean,n.mean,n.mean]:i=[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],typeof n.bias=="number"?o=[n.bias,n.bias,n.bias,n.bias]:o=[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];const a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",d=t*s,c=l==="RGBA"?new Float32Array(d*4):new Float32Array(d*3);let u=4,p=0,_=1,f=2,P=3,A=0,y=d,g=d*2,I=-1;a==="RGB"&&(u=3,p=0,_=1,f=2,P=-1),l==="RGBA"?I=d*3:l==="RBG"?(A=0,g=d,y=d*2):l==="BGR"&&(g=0,y=d,A=d*2);for(let T=0;T<d;T++,p+=u,f+=u,_+=u,P+=u)c[A++]=(e[p]+o[0])/i[0],c[y++]=(e[_]+o[1])/i[1],c[g++]=(e[f]+o[2])/i[2],I!==-1&&P!==-1&&(c[I++]=(e[P]+o[3])/i[3]);return l==="RGBA"?new os("float32",c,[1,4,t,s]):new os("float32",c,[1,3,t,s])},Cx=async(e,r)=>{const t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,n=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,i=typeof e=="string";let o,a=r??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},d=c=>typeof HTMLCanvasElement<"u"&&c instanceof HTMLCanvasElement||c instanceof OffscreenCanvas?c.getContext("2d"):null;if(t){const c=l();c.width=e.width,c.height=e.height;const u=d(c);if(u!=null){let p=e.height,_=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(p=r.resizedHeight,_=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=p,a.width=_}else a.tensorFormat="RGBA",a.height=p,a.width=_;u.drawImage(e,0,0),o=u.getImageData(0,0,_,p).data}else throw new Error("Can not access image data")}else if(s){let c,u;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(c=r.resizedHeight,u=r.resizedWidth):(c=e.height,u=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=c,a.width=u,r!==void 0){const p=l();p.width=u,p.height=c;const _=d(p);if(_!=null)_.putImageData(e,0,0),o=_.getImageData(0,0,u,c).data;else throw new Error("Can not access image data")}else o=e.data}else if(n){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");const c=l();c.width=e.width,c.height=e.height;const u=d(c);if(u!=null){const p=e.height,_=e.width;return u.drawImage(e,0,0,_,p),o=u.getImageData(0,0,_,p).data,a.height=p,a.width=_,Jl(o,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((c,u)=>{const p=l(),_=d(p);if(!e||!_)return u();const f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{p.width=f.width,p.height=f.height,_.drawImage(f,0,0,p.width,p.height);const P=_.getImageData(0,0,p.width,p.height);a.height=p.height,a.width=p.width,c(Jl(P.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return Jl(o,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Sx=(e,r)=>{const{width:t,height:s,download:n,dispose:i}=r,o=[1,s,t,4];return new os({location:"texture",type:"float32",texture:e,dims:o,download:n,dispose:i})},$x=(e,r)=>{const{dataType:t,dims:s,download:n,dispose:i}=r;return new os({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:n,dispose:i})},Ix=(e,r)=>{const{dataType:t,dims:s,download:n,dispose:i}=r;return new os({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:n,dispose:i})},kx=(e,r,t)=>new os({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]}),ui=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),ba=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let Sf=!1;const Ax=()=>{if(!Sf){Sf=!0;const e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(ui.set("int64",BigInt64Array),ba.set(BigInt64Array,"int64")),r&&(ui.set("uint64",BigUint64Array),ba.set(BigUint64Array,"uint64")),s?(ui.set("float16",t),ba.set(t,"float16")):ui.set("float16",Uint16Array)}},Fx=e=>{let r=1;for(let t=0;t<e.length;t++){const s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},Ox=(e,r)=>{switch(e.location){case"cpu":return new os(e.type,e.data,r);case"cpu-pinned":return new os({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new os({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new os({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new os({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}};let os=class{constructor(r,t,s){Ax();let n,i;if(typeof r=="object"&&"location"in r)switch(this.dataLocation=r.location,n=r.type,i=r.dims,r.location){case"cpu-pinned":{const a=ui.get(n);if(!a)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(r.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=r.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=r.texture,this.downloader=r.download,this.disposer=r.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=r.gpuBuffer,this.downloader=r.download,this.disposer=r.dispose;break}case"ml-tensor":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint64"&&n!=="int8"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=r.mlTensor,this.downloader=r.download,this.disposer=r.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,l;if(typeof r=="string")if(n=r,l=s,r==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{const d=ui.get(r);if(d===void 0)throw new TypeError(`Unsupported tensor type: ${r}.`);if(Array.isArray(t)){if(r==="float16"&&d===Uint16Array||r==="uint4"||r==="int4")throw new TypeError(`Creating a ${r} tensor from number array is not supported. Please use ${d.name} as data.`);r==="uint64"||r==="int64"?a=d.from(t,BigInt):a=d.from(t)}else if(t instanceof d)a=t;else if(t instanceof Uint8ClampedArray)if(r==="uint8")a=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(r==="float16"&&t instanceof Uint16Array&&d!==Uint16Array)a=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length);else throw new TypeError(`A ${n} tensor's data must be type of ${d}`)}else if(l=t,Array.isArray(r)){if(r.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const d=typeof r[0];if(d==="string")n="string",a=r;else if(d==="boolean")n="bool",a=Uint8Array.from(r);else throw new TypeError(`Invalid element type of data array: ${d}.`)}else if(r instanceof Uint8ClampedArray)n="uint8",a=Uint8Array.from(r);else{const d=ba.get(r.constructor);if(d===void 0)throw new TypeError(`Unsupported type for tensor data: ${r.constructor}.`);n=d,a=r}if(l===void 0)l=[a.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");i=l,this.cpuData=a,this.dataLocation="cpu"}const o=Fx(i);if(this.cpuData&&o!==this.cpuData.length&&!((n==="uint4"||n==="int4")&&Math.ceil(o/2)===this.cpuData.length))throw new Error(`Tensor's size(${o}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=i,this.size=o}static async fromImage(r,t){return Cx(r,t)}static fromTexture(r,t){return Sx(r,t)}static fromGpuBuffer(r,t){return $x(r,t)}static fromMLTensor(r,t){return Ix(r,t)}static fromPinnedBuffer(r,t,s){return kx(r,t,s)}toDataURL(r){return Ex(this,r)}toImageData(r){return Px(this,r)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(r){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,r&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(r){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Ox(this,r)}};const ai=os,v0=(e,r)=>{(typeof bs.trace>"u"?!bs.wasm.trace:!bs.trace)||console.timeStamp(`${e}::ORT::${r}`)},x0=(e,r)=>{const t=new Error().stack?.split(/\r\n|\r|\n/g)||[];let s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let i=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(i+=`::${r}`),v0("CPU",i);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},rc=e=>{(typeof bs.trace>"u"?!bs.wasm.trace:!bs.trace)||x0("BEGIN",e)},sc=e=>{(typeof bs.trace>"u"?!bs.wasm.trace:!bs.trace)||x0("END",e)};let Dx=class T0{constructor(r){this.handler=r}async run(r,t,s){rc();const n={};let i={};if(typeof r!="object"||r===null||r instanceof ai||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof ai)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(const d of t){if(typeof d!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(d)===-1)throw new RangeError(`'fetches' contains invalid output name: ${d}.`);n[d]=null}if(typeof s=="object"&&s!==null)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let d=!1;const c=Object.getOwnPropertyNames(t);for(const u of this.outputNames)if(c.indexOf(u)!==-1){const p=t[u];(p===null||p instanceof ai)&&(d=!0,o=!1,n[u]=p)}if(d){if(typeof s=="object"&&s!==null)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else i=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const d of this.inputNames)if(typeof r[d]>"u")throw new Error(`input '${d}' is missing in 'feeds'.`);if(o)for(const d of this.outputNames)n[d]=null;const a=await this.handler.run(r,n,i),l={};for(const d in a)if(Object.hasOwnProperty.call(a,d)){const c=a[d];c instanceof ai?l[d]=c:l[d]=new ai(c.type,c.data,c.dims)}return sc(),l}async release(){return this.handler.dispose()}static async create(r,t,s,n){rc();let i,o={};if(typeof r=="string"){if(i=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(i=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){const c=r;let u=0,p=r.byteLength;if(typeof t=="object"&&t!==null)o=t;else if(typeof t=="number"){if(u=t,!Number.isSafeInteger(u))throw new RangeError("'byteOffset' must be an integer.");if(u<0||u>=c.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${c.byteLength}).`);if(p=r.byteLength-u,typeof s=="number"){if(p=s,!Number.isSafeInteger(p))throw new RangeError("'byteLength' must be an integer.");if(p<=0||u+p>c.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${c.byteLength-u}].`);if(typeof n=="object"&&n!==null)o=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(c,u,p)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[a,l]=await vx(o),d=await a.createInferenceSessionHandler(i,l);return sc(),new T0(d)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}};const Lx=Dx;var Bx=Object.freeze({__proto__:null,InferenceSession:Lx,TRACE:v0,TRACE_FUNC_BEGIN:rc,TRACE_FUNC_END:sc,Tensor:ai,env:Tx,registerBackend:Mx});/*!
 * ONNX Runtime Web v1.22.0-dev.20250409-89f8206ba4
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var Tc=Object.defineProperty,zx=Object.getOwnPropertyDescriptor,Rx=Object.getOwnPropertyNames,jx=Object.prototype.hasOwnProperty,Nx=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),Ge=(e,r)=>()=>(e&&(r=e(e=0)),r),_i=(e,r)=>{for(var t in r)Tc(e,t,{get:r[t],enumerable:!0})},Ux=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of Rx(r))!jx.call(e,n)&&n!==t&&Tc(e,n,{get:()=>r[n],enumerable:!(s=zx(r,n))||s.enumerable});return e},ho=e=>Ux(Tc({},"__esModule",{value:!0}),e),Qi,Xs,On,$f,E0,P0=Ge(()=>{Qi=new Map,Xs=[],On=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){let s=Qi.get(e);if(s===void 0)Qi.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){let n=Xs.indexOf(e);n!==-1&&Xs.splice(n,1);for(let i=0;i<Xs.length;i++)if(Qi.get(Xs[i]).priority<=t){Xs.splice(i,0,e);return}Xs.push(e)}return}throw new TypeError("not a valid backend")},$f=async e=>{let r=Qi.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},E0=async e=>{let r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?Xs:t,n,i=[],o=new Set;for(let l of s){let d=await $f(l);typeof d=="string"?i.push({name:l,err:d}):(n||(n=d),n===d&&o.add(l))}if(!n)throw new Error(`no available backend found. ERR: ${i.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:d}of i)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${d}`);let a=r.filter(l=>o.has(typeof l=="string"?l:l.name));return[n,new Proxy(e,{get:(l,d)=>d==="executionProviders"?a:Reflect.get(l,d)})]}}),Vx=Ge(()=>{P0()}),C0,Wx=Ge(()=>{C0="1.22.0-dev.20250409-89f8206ba4"}),Zl,is,S0=Ge(()=>{Wx(),Zl="warning",is={wasm:{},webgl:{},webgpu:{},versions:{common:C0},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Zl=e}},get logLevel(){return Zl}},Object.defineProperty(is,"logLevel",{enumerable:!0})}),Xt,Gx=Ge(()=>{S0(),Xt=is}),$0,I0,Kx=Ge(()=>{$0=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];let s=t.getContext("2d");if(s!=null){let n,i;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],i=e.dims[3]):(n=e.dims[3],i=e.dims[2]);let o=r?.format!==void 0?r.format:"RGB",a=r?.norm,l,d;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?d=[0,0,0,0]:typeof a.bias=="number"?d=[a.bias,a.bias,a.bias,a.bias]:(d=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(d[3]=a.bias[3]));let c=i*n,u=0,p=c,_=c*2,f=-1;o==="RGBA"?(u=0,p=c,_=c*2,f=c*3):o==="RGB"?(u=0,p=c,_=c*2):o==="RBG"&&(u=0,_=c,p=c*2);for(let P=0;P<i;P++)for(let A=0;A<n;A++){let y=(e.data[u++]-d[0])*l[0],g=(e.data[p++]-d[1])*l[1],I=(e.data[_++]-d[2])*l[2],v=f===-1?255:(e.data[f++]-d[3])*l[3];s.fillStyle="rgba("+y+","+g+","+I+","+v+")",s.fillRect(A,P,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},I0=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),s;if(t!=null){let n,i,o;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],i=e.dims[1],o=e.dims[3]):(n=e.dims[3],i=e.dims[2],o=e.dims[1]);let a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r?.norm,d,c;l===void 0||l.mean===void 0?d=[255,255,255,255]:typeof l.mean=="number"?d=[l.mean,l.mean,l.mean,l.mean]:(d=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(d[3]=l.mean[3])),l===void 0||l.bias===void 0?c=[0,0,0,0]:typeof l.bias=="number"?c=[l.bias,l.bias,l.bias,l.bias]:(c=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(c[3]=l.bias[3]));let u=i*n;if(r!==void 0&&(r.format!==void 0&&o===4&&r.format!=="RGBA"||o===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let p=4,_=0,f=1,P=2,A=3,y=0,g=u,I=u*2,v=-1;a==="RGBA"?(y=0,g=u,I=u*2,v=u*3):a==="RGB"?(y=0,g=u,I=u*2):a==="RBG"&&(y=0,I=u,g=u*2),s=t.createImageData(n,i);for(let T=0;T<i*n;_+=p,f+=p,P+=p,A+=p,T++)s.data[_]=(e.data[y++]-c[0])*d[0],s.data[f]=(e.data[g++]-c[1])*d[1],s.data[P]=(e.data[I++]-c[2])*d[2],s.data[A]=v===-1?255:(e.data[v++]-c[3])*d[3]}else throw new Error("Can not access image data");return s}}),na,k0,A0,F0,O0,D0,Hx=Ge(()=>{Ec(),na=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:t,width:s}=r,n=r.norm??{mean:255,bias:0},i,o;typeof n.mean=="number"?i=[n.mean,n.mean,n.mean,n.mean]:i=[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],typeof n.bias=="number"?o=[n.bias,n.bias,n.bias,n.bias]:o=[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];let a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",d=t*s,c=l==="RGBA"?new Float32Array(d*4):new Float32Array(d*3),u=4,p=0,_=1,f=2,P=3,A=0,y=d,g=d*2,I=-1;a==="RGB"&&(u=3,p=0,_=1,f=2,P=-1),l==="RGBA"?I=d*3:l==="RBG"?(A=0,g=d,y=d*2):l==="BGR"&&(g=0,y=d,A=d*2);for(let v=0;v<d;v++,p+=u,f+=u,_+=u,P+=u)c[A++]=(e[p]+o[0])/i[0],c[y++]=(e[_]+o[1])/i[1],c[g++]=(e[f]+o[2])/i[2],I!==-1&&P!==-1&&(c[I++]=(e[P]+o[3])/i[3]);return l==="RGBA"?new Qr("float32",c,[1,4,t,s]):new Qr("float32",c,[1,3,t,s])},k0=async(e,r)=>{let t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,n=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,i=typeof e=="string",o,a=r??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},d=c=>typeof HTMLCanvasElement<"u"&&c instanceof HTMLCanvasElement||c instanceof OffscreenCanvas?c.getContext("2d"):null;if(t){let c=l();c.width=e.width,c.height=e.height;let u=d(c);if(u!=null){let p=e.height,_=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(p=r.resizedHeight,_=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=p,a.width=_}else a.tensorFormat="RGBA",a.height=p,a.width=_;u.drawImage(e,0,0),o=u.getImageData(0,0,_,p).data}else throw new Error("Can not access image data")}else if(s){let c,u;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(c=r.resizedHeight,u=r.resizedWidth):(c=e.height,u=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=c,a.width=u,r!==void 0){let p=l();p.width=u,p.height=c;let _=d(p);if(_!=null)_.putImageData(e,0,0),o=_.getImageData(0,0,u,c).data;else throw new Error("Can not access image data")}else o=e.data}else if(n){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");let c=l();c.width=e.width,c.height=e.height;let u=d(c);if(u!=null){let p=e.height,_=e.width;return u.drawImage(e,0,0,_,p),o=u.getImageData(0,0,_,p).data,a.height=p,a.width=_,na(o,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((c,u)=>{let p=l(),_=d(p);if(!e||!_)return u();let f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{p.width=f.width,p.height=f.height,_.drawImage(f,0,0,p.width,p.height);let P=_.getImageData(0,0,p.width,p.height);a.height=p.height,a.width=p.width,c(na(P.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return na(o,a);throw new Error("Input data provided is not supported - aborted tensor creation")},A0=(e,r)=>{let{width:t,height:s,download:n,dispose:i}=r,o=[1,s,t,4];return new Qr({location:"texture",type:"float32",texture:e,dims:o,download:n,dispose:i})},F0=(e,r)=>{let{dataType:t,dims:s,download:n,dispose:i}=r;return new Qr({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:n,dispose:i})},O0=(e,r)=>{let{dataType:t,dims:s,download:n,dispose:i}=r;return new Qr({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:n,dispose:i})},D0=(e,r,t)=>new Qr({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]})}),kn,oo,eu,L0,qx=Ge(()=>{kn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),oo=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),eu=!1,L0=()=>{if(!eu){eu=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(kn.set("int64",BigInt64Array),oo.set(BigInt64Array,"int64")),r&&(kn.set("uint64",BigUint64Array),oo.set(BigUint64Array,"uint64")),s?(kn.set("float16",t),oo.set(t,"float16")):kn.set("float16",Uint16Array)}}}),B0,z0,Qx=Ge(()=>{Ec(),B0=e=>{let r=1;for(let t=0;t<e.length;t++){let s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},z0=(e,r)=>{switch(e.location){case"cpu":return new Qr(e.type,e.data,r);case"cpu-pinned":return new Qr({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new Qr({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new Qr({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new Qr({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),Qr,Ec=Ge(()=>{Kx(),Hx(),qx(),Qx(),Qr=class{constructor(e,r,t){L0();let s,n;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,s=e.type,n=e.dims,e.location){case"cpu-pinned":{let o=kn.get(s);if(!o)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint64"&&s!=="int8"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,a;if(typeof e=="string")if(s=e,a=t,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");o=r}else{let l=kn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16"&&l===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${l.name} as data.`);e==="uint64"||e==="int64"?o=l.from(r,BigInt):o=l.from(r)}else if(r instanceof l)o=r;else if(r instanceof Uint8ClampedArray)if(e==="uint8")o=Uint8Array.from(r);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(e==="float16"&&r instanceof Uint16Array&&l!==Uint16Array)o=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw new TypeError(`A ${s} tensor's data must be type of ${l}`)}else if(a=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")s="string",o=e;else if(l==="boolean")s="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else if(e instanceof Uint8ClampedArray)s="uint8",o=Uint8Array.from(e);else{let l=oo.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);s=l,o=e}if(a===void 0)a=[o.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");n=a,this.cpuData=o,this.dataLocation="cpu"}let i=B0(n);if(this.cpuData&&i!==this.cpuData.length&&!((s==="uint4"||s==="int4")&&Math.ceil(i/2)===this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=n,this.size=i}static async fromImage(e,r){return k0(e,r)}static fromTexture(e,r){return A0(e,r)}static fromGpuBuffer(e,r){return F0(e,r)}static fromMLTensor(e,r){return O0(e,r)}static fromPinnedBuffer(e,r,t){return D0(e,r,t)}toDataURL(e){return $0(this,e)}toImageData(e){return I0(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return z0(this,e)}}}),Ms,R0=Ge(()=>{Ec(),Ms=Qr}),mo,tu,vs,as,j0=Ge(()=>{S0(),mo=(e,r)=>{(typeof is.trace>"u"?!is.wasm.trace:!is.trace)||console.timeStamp(`${e}::ORT::${r}`)},tu=(e,r)=>{let t=new Error().stack?.split(/\r\n|\r|\n/g)||[],s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let i=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(i+=`::${r}`),mo("CPU",i);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},vs=e=>{(typeof is.trace>"u"?!is.wasm.trace:!is.trace)||tu("BEGIN",e)},as=e=>{(typeof is.trace>"u"?!is.wasm.trace:!is.trace)||tu("END",e)}}),N0,Xx=Ge(()=>{P0(),R0(),j0(),N0=class U0{constructor(r){this.handler=r}async run(r,t,s){vs();let n={},i={};if(typeof r!="object"||r===null||r instanceof Ms||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof Ms)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let d of t){if(typeof d!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(d)===-1)throw new RangeError(`'fetches' contains invalid output name: ${d}.`);n[d]=null}if(typeof s=="object"&&s!==null)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let d=!1,c=Object.getOwnPropertyNames(t);for(let u of this.outputNames)if(c.indexOf(u)!==-1){let p=t[u];(p===null||p instanceof Ms)&&(d=!0,o=!1,n[u]=p)}if(d){if(typeof s=="object"&&s!==null)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else i=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let d of this.inputNames)if(typeof r[d]>"u")throw new Error(`input '${d}' is missing in 'feeds'.`);if(o)for(let d of this.outputNames)n[d]=null;let a=await this.handler.run(r,n,i),l={};for(let d in a)if(Object.hasOwnProperty.call(a,d)){let c=a[d];c instanceof Ms?l[d]=c:l[d]=new Ms(c.type,c.data,c.dims)}return as(),l}async release(){return this.handler.dispose()}static async create(r,t,s,n){vs();let i,o={};if(typeof r=="string"){if(i=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(i=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){let c=r,u=0,p=r.byteLength;if(typeof t=="object"&&t!==null)o=t;else if(typeof t=="number"){if(u=t,!Number.isSafeInteger(u))throw new RangeError("'byteOffset' must be an integer.");if(u<0||u>=c.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${c.byteLength}).`);if(p=r.byteLength-u,typeof s=="number"){if(p=s,!Number.isSafeInteger(p))throw new RangeError("'byteLength' must be an integer.");if(p<=0||u+p>c.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${c.byteLength-u}].`);if(typeof n=="object"&&n!==null)o=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(c,u,p)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[a,l]=await E0(o),d=await a.createInferenceSessionHandler(i,l);return as(),new U0(d)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),Pc,Yx=Ge(()=>{Xx(),Pc=N0}),Jx=Ge(()=>{}),Zx=Ge(()=>{}),e1=Ge(()=>{}),t1=Ge(()=>{}),V0={};_i(V0,{InferenceSession:()=>Pc,TRACE:()=>mo,TRACE_FUNC_BEGIN:()=>vs,TRACE_FUNC_END:()=>as,Tensor:()=>Ms,env:()=>Xt,registerBackend:()=>On});var xs=Ge(()=>{Vx(),Gx(),Yx(),R0(),Jx(),Zx(),j0(),e1(),t1()}),Cc=Ge(()=>{}),W0={};_i(W0,{default:()=>G0});var ru,su,G0,r1=Ge(()=>{Xb(),zn(),Sc(),ru="ort-wasm-proxy-worker",su=globalThis.self?.name===ru,su&&(self.onmessage=e=>{let{type:r,in:t}=e.data;try{switch(r){case"init-wasm":$c(t.wasm).then(()=>{Hc(t).then(()=>{postMessage({type:r})},s=>{postMessage({type:r,err:s})})},s=>{postMessage({type:r,err:s})});break;case"init-ep":{let{epName:s,env:n}=t;qc(n,s).then(()=>{postMessage({type:r})},i=>{postMessage({type:r,err:i})});break}case"copy-from":{let{buffer:s}=t,n=Aa(s);postMessage({type:r,out:n});break}case"create":{let{model:s,options:n}=t;Qc(s,n).then(i=>{postMessage({type:r,out:i})},i=>{postMessage({type:r,err:i})});break}case"release":Xc(t),postMessage({type:r});break;case"run":{let{sessionId:s,inputIndices:n,inputs:i,outputIndices:o,options:a}=t;Yc(s,n,i,o,new Array(o.length).fill(null),a).then(l=>{l.some(d=>d[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:l},Zc([...i,...l]))},l=>{postMessage({type:r,err:l})});break}case"end-profiling":Jc(t),postMessage({type:r});break;default:}}catch(s){postMessage({type:r,err:s})}}),G0=su?null:e=>new Worker(e??qr,{type:"module",name:ru})}),K0={};_i(K0,{default:()=>H0});var nu,iu,H0,If,s1=Ge(()=>{iu=(nu=import.meta.url,async function(e={}){var r,t,s=e,n=new Promise((h,C)=>{r=h,t=C}),i=typeof window=="object",o=typeof WorkerGlobalScope<"u",a=o&&self.name?.startsWith("em-pthread");s.mountExternalData=(h,C)=>{h.startsWith("./")&&(h=h.substring(2)),(s.Eb||(s.Eb=new Map)).set(h,C)},s.unmountExternalData=()=>{delete s.Eb};var l=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let d=h=>async(...C)=>{try{if(s.Fb)throw Error("Session already started");let F=s.Fb={dc:C[0],errors:[]},R=await h(...C);if(s.Fb!==F)throw Error("Session mismatch");s.Jb?.flush();let q=F.errors;if(0<q.length){let he=await Promise.all(q);if(he=he.filter(Ie=>Ie),0<he.length)throw Error(he.join(`
`))}return R}finally{s.Fb=null}};s.jsepInit=(h,C)=>{if(h==="webgpu"){[s.Jb,s.Ub,s.Yb,s.Kb,s.Xb,s.jb,s.Zb,s.ac,s.Vb,s.Wb,s.$b]=C;let F=s.Jb;s.jsepRegisterBuffer=(R,q,he,Ie)=>F.registerBuffer(R,q,he,Ie),s.jsepGetBuffer=R=>F.getBuffer(R),s.jsepCreateDownloader=(R,q,he)=>F.createDownloader(R,q,he),s.jsepOnCreateSession=R=>{F.onCreateSession(R)},s.jsepOnReleaseSession=R=>{F.onReleaseSession(R)},s.jsepOnRunStart=R=>F.onRunStart(R),s.bc=(R,q)=>{F.upload(R,q)}}else if(h==="webnn"){let F=C[0];[s.nc,s.Nb,s.webnnEnsureTensor,s.Ob,s.webnnDownloadTensor]=C.slice(1),s.webnnReleaseTensorId=s.Nb,s.webnnUploadTensor=s.Ob,s.webnnOnRunStart=R=>F.onRunStart(R),s.webnnOnRunEnd=F.onRunEnd.bind(F),s.webnnRegisterMLContext=(R,q)=>{F.registerMLContext(R,q)},s.webnnOnReleaseSession=R=>{F.onReleaseSession(R)},s.webnnCreateMLTensorDownloader=(R,q)=>F.createMLTensorDownloader(R,q),s.webnnRegisterMLTensor=(R,q,he,Ie)=>F.registerMLTensor(R,q,he,Ie),s.webnnCreateMLContext=R=>F.createMLContext(R),s.webnnRegisterMLConstant=(R,q,he,Ie,Ne,tt)=>F.registerMLConstant(R,q,he,Ie,Ne,s.Eb,tt),s.webnnRegisterGraphInput=F.registerGraphInput.bind(F),s.webnnIsGraphInput=F.isGraphInput.bind(F),s.webnnCreateTemporaryTensor=F.createTemporaryTensor.bind(F),s.webnnIsInt64Supported=F.isInt64Supported.bind(F)}};let c=()=>{let h=(C,F,R)=>(...q)=>{let he=cr,Ie=F?.();q=C(...q);let Ne=F?.();return Ie!==Ne&&(C=Ne,R(Ie),F=R=null),cr!=he?new Promise((tt,ut)=>{$r={resolve:tt,reject:ut}}):q};(()=>{for(let C of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])s[C]=h(s[C],()=>s[C],F=>s[C]=F)})(),d!==void 0&&(s._OrtRun=d(s._OrtRun),s._OrtRunWithBinding=d(s._OrtRunWithBinding)),c=void 0};s.asyncInit=()=>{c?.()};var u,p,_=Object.assign({},s),f=(h,C)=>{throw C},P="";(i||o)&&(o?P=self.location.href:typeof document<"u"&&document.currentScript&&(P=document.currentScript.src),nu&&(P=nu),P=P.startsWith("blob:")?"":P.slice(0,P.replace(/[?#].*/,"").lastIndexOf("/")+1),o&&(p=h=>{var C=new XMLHttpRequest;return C.open("GET",h,!1),C.responseType="arraybuffer",C.send(null),new Uint8Array(C.response)}),u=async h=>{if(ue(h))return new Promise((F,R)=>{var q=new XMLHttpRequest;q.open("GET",h,!0),q.responseType="arraybuffer",q.onload=()=>{q.status==200||q.status==0&&q.response?F(q.response):R(q.status)},q.onerror=R,q.send(null)});var C=await fetch(h,{credentials:"same-origin"});if(C.ok)return C.arrayBuffer();throw Error(C.status+" : "+C.url)});var A=console.log.bind(console),y=console.error.bind(console),g=A,I=y;Object.assign(s,_),_=null;var v,T,x,b,$,j,B,X,re,z,te,W,K,se=s.wasmBinary,J=!1,ue=h=>h.startsWith("file://");function ce(){return v.buffer!=b.buffer&&me(),b}function N(){return v.buffer!=b.buffer&&me(),$}function D(){return v.buffer!=b.buffer&&me(),j}function Q(){return v.buffer!=b.buffer&&me(),B}function U(){return v.buffer!=b.buffer&&me(),X}function ae(){return v.buffer!=b.buffer&&me(),re}function Ae(){return v.buffer!=b.buffer&&me(),z}function Ee(){return v.buffer!=b.buffer&&me(),K}if(a){let h=function(C){try{var F=C.data,R=F.Bb;if(R==="load"){let q=[];self.onmessage=he=>q.push(he),self.startWorker=()=>{postMessage({Bb:"loaded"});for(let he of q)h(he);self.onmessage=h};for(let he of F.Rb)s[he]&&!s[he].proxy||(s[he]=(...Ie)=>{postMessage({Bb:"callHandler",Qb:he,args:Ie})},he=="print"&&(g=s[he]),he=="printErr"&&(I=s[he]));v=F.kc,me(),Le(F.lc)}else if(R==="run"){L(F.Ab),wn(F.Ab,0,0,1,0,0),Me(),le(F.Ab),Ve||(zi(),Ve=!0);try{oe(F.fc,F.Hb)}catch(q){if(q!="unwind")throw q}}else F.target!=="setimmediate"&&(R==="checkMailbox"?Ve&&be():R&&(I(`worker: received unknown command ${R}`),I(F)))}catch(q){throw Ri(),q}};var Le,Ve=!1;I=function(...C){C=C.join(" "),console.error(C)},self.alert=function(...C){postMessage({Bb:"alert",text:C.join(" "),ic:Hs()})},self.onunhandledrejection=C=>{throw C.reason||C},self.onmessage=h}function me(){var h=v.buffer;s.HEAP8=b=new Int8Array(h),s.HEAP16=j=new Int16Array(h),s.HEAPU8=$=new Uint8Array(h),s.HEAPU16=B=new Uint16Array(h),s.HEAP32=X=new Int32Array(h),s.HEAPU32=re=new Uint32Array(h),s.HEAPF32=z=new Float32Array(h),s.HEAPF64=K=new Float64Array(h),s.HEAP64=te=new BigInt64Array(h),s.HEAPU64=W=new BigUint64Array(h)}function H(){a?startWorker(s):ft.Ca()}a||(v=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),me());var fe,Z=0,xe=null;function Ce(){if(--Z==0&&xe){var h=xe;xe=null,h()}}function $e(h){throw I(h="Aborted("+h+")"),J=!0,h=new WebAssembly.RuntimeError(h+". Build with -sASSERTIONS for more info."),t(h),h}function Se(){return{a:{L:Ke,Aa:ze,b:ne,$:Re,A:at,pa:Jt,X:Wt,Z:Dr,qa:Qt,na:Fr,ga:Yr,ma:ls,J:Jr,Y:Ts,V:jr,oa:Es,W:Gr,va:Os,E:je,Q:pt,O:rn,D:sn,u:nn,r:on,P:an,z:_e,R:k,ja:Y,T:Fe,aa:st,M:it,F:qe,ia:le,sa:kt,t:wr,Ba:rr,w:Ir,o:br,l:dr,c:Ds,n:rs,j:Mo,v:bo,p:Ks,f:vo,s:xo,m:To,e:Eo,k:Po,i:wi,g:Co,d:So,da:yi,ea:vi,fa:Ba,ba:xi,ca:Un,N:Ti,xa:$o,ua:ko,h:Ao,C:Fo,G:Pi,ta:Io,x:Oo,ra:Gn,U:Ci,q:Vn,y:Do,K:Si,S:Rs,za,ya:Lo,ka:ki,la:Ai,_:We,B:Fi,I:fn,ha:Oi,H:Di,a:v,wa:mt}}}var Oe={829644:(h,C,F,R,q)=>{if(s===void 0||!s.Eb)return 1;if((h=ot(Number(h>>>0))).startsWith("./")&&(h=h.substring(2)),!(h=s.Eb.get(h)))return 2;if(C=Number(C>>>0),F=Number(F>>>0),R=Number(R>>>0),C+F>h.byteLength)return 3;try{let he=h.subarray(C,C+F);switch(q){case 0:N().set(he,R>>>0);break;case 1:s.mc?s.mc(R,he):s.bc(R,he);break;default:return 4}return 0}catch{return 4}},830468:(h,C,F)=>{s.Ob(h,N().subarray(C>>>0,C+F>>>0))},830532:()=>s.nc(),830574:h=>{s.Nb(h)},830611:()=>{s.Vb()},830642:()=>{s.Wb()},830671:()=>{s.$b()},830696:h=>s.Ub(h),830729:h=>s.Yb(h),830761:(h,C,F)=>{s.Kb(Number(h),Number(C),Number(F),!0)},830824:(h,C,F)=>{s.Kb(Number(h),Number(C),Number(F))},830881:()=>typeof wasmOffsetConverter<"u",830938:h=>{s.jb("Abs",h,void 0)},830989:h=>{s.jb("Neg",h,void 0)},831040:h=>{s.jb("Floor",h,void 0)},831093:h=>{s.jb("Ceil",h,void 0)},831145:h=>{s.jb("Reciprocal",h,void 0)},831203:h=>{s.jb("Sqrt",h,void 0)},831255:h=>{s.jb("Exp",h,void 0)},831306:h=>{s.jb("Erf",h,void 0)},831357:h=>{s.jb("Sigmoid",h,void 0)},831412:(h,C,F)=>{s.jb("HardSigmoid",h,{alpha:C,beta:F})},831491:h=>{s.jb("Log",h,void 0)},831542:h=>{s.jb("Sin",h,void 0)},831593:h=>{s.jb("Cos",h,void 0)},831644:h=>{s.jb("Tan",h,void 0)},831695:h=>{s.jb("Asin",h,void 0)},831747:h=>{s.jb("Acos",h,void 0)},831799:h=>{s.jb("Atan",h,void 0)},831851:h=>{s.jb("Sinh",h,void 0)},831903:h=>{s.jb("Cosh",h,void 0)},831955:h=>{s.jb("Asinh",h,void 0)},832008:h=>{s.jb("Acosh",h,void 0)},832061:h=>{s.jb("Atanh",h,void 0)},832114:h=>{s.jb("Tanh",h,void 0)},832166:h=>{s.jb("Not",h,void 0)},832217:(h,C,F)=>{s.jb("Clip",h,{min:C,max:F})},832286:h=>{s.jb("Clip",h,void 0)},832338:(h,C)=>{s.jb("Elu",h,{alpha:C})},832396:h=>{s.jb("Gelu",h,void 0)},832448:h=>{s.jb("Relu",h,void 0)},832500:(h,C)=>{s.jb("LeakyRelu",h,{alpha:C})},832564:(h,C)=>{s.jb("ThresholdedRelu",h,{alpha:C})},832634:(h,C)=>{s.jb("Cast",h,{to:C})},832692:h=>{s.jb("Add",h,void 0)},832743:h=>{s.jb("Sub",h,void 0)},832794:h=>{s.jb("Mul",h,void 0)},832845:h=>{s.jb("Div",h,void 0)},832896:h=>{s.jb("Pow",h,void 0)},832947:h=>{s.jb("Equal",h,void 0)},833e3:h=>{s.jb("Greater",h,void 0)},833055:h=>{s.jb("GreaterOrEqual",h,void 0)},833117:h=>{s.jb("Less",h,void 0)},833169:h=>{s.jb("LessOrEqual",h,void 0)},833228:(h,C,F,R,q)=>{s.jb("ReduceMean",h,{keepDims:!!C,noopWithEmptyAxes:!!F,axes:R?Array.from(U().subarray(Number(R)>>>0,Number(q)>>>0)):[]})},833403:(h,C,F,R,q)=>{s.jb("ReduceMax",h,{keepDims:!!C,noopWithEmptyAxes:!!F,axes:R?Array.from(U().subarray(Number(R)>>>0,Number(q)>>>0)):[]})},833577:(h,C,F,R,q)=>{s.jb("ReduceMin",h,{keepDims:!!C,noopWithEmptyAxes:!!F,axes:R?Array.from(U().subarray(Number(R)>>>0,Number(q)>>>0)):[]})},833751:(h,C,F,R,q)=>{s.jb("ReduceProd",h,{keepDims:!!C,noopWithEmptyAxes:!!F,axes:R?Array.from(U().subarray(Number(R)>>>0,Number(q)>>>0)):[]})},833926:(h,C,F,R,q)=>{s.jb("ReduceSum",h,{keepDims:!!C,noopWithEmptyAxes:!!F,axes:R?Array.from(U().subarray(Number(R)>>>0,Number(q)>>>0)):[]})},834100:(h,C,F,R,q)=>{s.jb("ReduceL1",h,{keepDims:!!C,noopWithEmptyAxes:!!F,axes:R?Array.from(U().subarray(Number(R)>>>0,Number(q)>>>0)):[]})},834273:(h,C,F,R,q)=>{s.jb("ReduceL2",h,{keepDims:!!C,noopWithEmptyAxes:!!F,axes:R?Array.from(U().subarray(Number(R)>>>0,Number(q)>>>0)):[]})},834446:(h,C,F,R,q)=>{s.jb("ReduceLogSum",h,{keepDims:!!C,noopWithEmptyAxes:!!F,axes:R?Array.from(U().subarray(Number(R)>>>0,Number(q)>>>0)):[]})},834623:(h,C,F,R,q)=>{s.jb("ReduceSumSquare",h,{keepDims:!!C,noopWithEmptyAxes:!!F,axes:R?Array.from(U().subarray(Number(R)>>>0,Number(q)>>>0)):[]})},834803:(h,C,F,R,q)=>{s.jb("ReduceLogSumExp",h,{keepDims:!!C,noopWithEmptyAxes:!!F,axes:R?Array.from(U().subarray(Number(R)>>>0,Number(q)>>>0)):[]})},834983:h=>{s.jb("Where",h,void 0)},835036:(h,C,F)=>{s.jb("Transpose",h,{perm:C?Array.from(U().subarray(Number(C)>>>0,Number(F)>>>0)):[]})},835160:(h,C,F,R)=>{s.jb("DepthToSpace",h,{blocksize:C,mode:ot(F),format:R?"NHWC":"NCHW"})},835293:(h,C,F,R)=>{s.jb("DepthToSpace",h,{blocksize:C,mode:ot(F),format:R?"NHWC":"NCHW"})},835426:(h,C,F,R,q,he,Ie,Ne,tt,ut,xt,Ft,Rt,vr,Ss)=>{s.jb("ConvTranspose",h,{format:tt?"NHWC":"NCHW",autoPad:C,dilations:[F],group:R,kernelShape:[q],pads:[he,Ie],strides:[Ne],wIsConst:()=>!!ce()[ut>>>0],outputPadding:xt?Array.from(U().subarray(Number(xt)>>>0,Number(Ft)>>>0)):[],outputShape:Rt?Array.from(U().subarray(Number(Rt)>>>0,Number(vr)>>>0)):[],activation:ot(Ss)})},835859:(h,C,F,R,q,he,Ie,Ne,tt,ut,xt,Ft,Rt,vr)=>{s.jb("ConvTranspose",h,{format:Ne?"NHWC":"NCHW",autoPad:C,dilations:Array.from(U().subarray(Number(F)>>>0,2+(Number(F)>>>0)>>>0)),group:R,kernelShape:Array.from(U().subarray(Number(q)>>>0,2+(Number(q)>>>0)>>>0)),pads:Array.from(U().subarray(Number(he)>>>0,4+(Number(he)>>>0)>>>0)),strides:Array.from(U().subarray(Number(Ie)>>>0,2+(Number(Ie)>>>0)>>>0)),wIsConst:()=>!!ce()[tt>>>0],outputPadding:ut?Array.from(U().subarray(Number(ut)>>>0,Number(xt)>>>0)):[],outputShape:Ft?Array.from(U().subarray(Number(Ft)>>>0,Number(Rt)>>>0)):[],activation:ot(vr)})},836520:(h,C,F,R,q,he,Ie,Ne,tt,ut,xt,Ft,Rt,vr,Ss)=>{s.jb("ConvTranspose",h,{format:tt?"NHWC":"NCHW",autoPad:C,dilations:[F],group:R,kernelShape:[q],pads:[he,Ie],strides:[Ne],wIsConst:()=>!!ce()[ut>>>0],outputPadding:xt?Array.from(U().subarray(Number(xt)>>>0,Number(Ft)>>>0)):[],outputShape:Rt?Array.from(U().subarray(Number(Rt)>>>0,Number(vr)>>>0)):[],activation:ot(Ss)})},836953:(h,C,F,R,q,he,Ie,Ne,tt,ut,xt,Ft,Rt,vr)=>{s.jb("ConvTranspose",h,{format:Ne?"NHWC":"NCHW",autoPad:C,dilations:Array.from(U().subarray(Number(F)>>>0,2+(Number(F)>>>0)>>>0)),group:R,kernelShape:Array.from(U().subarray(Number(q)>>>0,2+(Number(q)>>>0)>>>0)),pads:Array.from(U().subarray(Number(he)>>>0,4+(Number(he)>>>0)>>>0)),strides:Array.from(U().subarray(Number(Ie)>>>0,2+(Number(Ie)>>>0)>>>0)),wIsConst:()=>!!ce()[tt>>>0],outputPadding:ut?Array.from(U().subarray(Number(ut)>>>0,Number(xt)>>>0)):[],outputShape:Ft?Array.from(U().subarray(Number(Ft)>>>0,Number(Rt)>>>0)):[],activation:ot(vr)})},837614:(h,C)=>{s.jb("GlobalAveragePool",h,{format:C?"NHWC":"NCHW"})},837705:(h,C,F,R,q,he,Ie,Ne,tt,ut,xt,Ft,Rt,vr)=>{s.jb("AveragePool",h,{format:vr?"NHWC":"NCHW",auto_pad:C,ceil_mode:F,count_include_pad:R,storage_order:q,dilations:he?Array.from(U().subarray(Number(he)>>>0,Number(Ie)>>>0)):[],kernel_shape:Ne?Array.from(U().subarray(Number(Ne)>>>0,Number(tt)>>>0)):[],pads:ut?Array.from(U().subarray(Number(ut)>>>0,Number(xt)>>>0)):[],strides:Ft?Array.from(U().subarray(Number(Ft)>>>0,Number(Rt)>>>0)):[]})},838184:(h,C)=>{s.jb("GlobalAveragePool",h,{format:C?"NHWC":"NCHW"})},838275:(h,C,F,R,q,he,Ie,Ne,tt,ut,xt,Ft,Rt,vr)=>{s.jb("AveragePool",h,{format:vr?"NHWC":"NCHW",auto_pad:C,ceil_mode:F,count_include_pad:R,storage_order:q,dilations:he?Array.from(U().subarray(Number(he)>>>0,Number(Ie)>>>0)):[],kernel_shape:Ne?Array.from(U().subarray(Number(Ne)>>>0,Number(tt)>>>0)):[],pads:ut?Array.from(U().subarray(Number(ut)>>>0,Number(xt)>>>0)):[],strides:Ft?Array.from(U().subarray(Number(Ft)>>>0,Number(Rt)>>>0)):[]})},838754:(h,C)=>{s.jb("GlobalMaxPool",h,{format:C?"NHWC":"NCHW"})},838841:(h,C,F,R,q,he,Ie,Ne,tt,ut,xt,Ft,Rt,vr)=>{s.jb("MaxPool",h,{format:vr?"NHWC":"NCHW",auto_pad:C,ceil_mode:F,count_include_pad:R,storage_order:q,dilations:he?Array.from(U().subarray(Number(he)>>>0,Number(Ie)>>>0)):[],kernel_shape:Ne?Array.from(U().subarray(Number(Ne)>>>0,Number(tt)>>>0)):[],pads:ut?Array.from(U().subarray(Number(ut)>>>0,Number(xt)>>>0)):[],strides:Ft?Array.from(U().subarray(Number(Ft)>>>0,Number(Rt)>>>0)):[]})},839316:(h,C)=>{s.jb("GlobalMaxPool",h,{format:C?"NHWC":"NCHW"})},839403:(h,C,F,R,q,he,Ie,Ne,tt,ut,xt,Ft,Rt,vr)=>{s.jb("MaxPool",h,{format:vr?"NHWC":"NCHW",auto_pad:C,ceil_mode:F,count_include_pad:R,storage_order:q,dilations:he?Array.from(U().subarray(Number(he)>>>0,Number(Ie)>>>0)):[],kernel_shape:Ne?Array.from(U().subarray(Number(Ne)>>>0,Number(tt)>>>0)):[],pads:ut?Array.from(U().subarray(Number(ut)>>>0,Number(xt)>>>0)):[],strides:Ft?Array.from(U().subarray(Number(Ft)>>>0,Number(Rt)>>>0)):[]})},839878:(h,C,F,R,q)=>{s.jb("Gemm",h,{alpha:C,beta:F,transA:R,transB:q})},839982:h=>{s.jb("MatMul",h,void 0)},840036:(h,C,F,R)=>{s.jb("ArgMax",h,{keepDims:!!C,selectLastIndex:!!F,axis:R})},840144:(h,C,F,R)=>{s.jb("ArgMin",h,{keepDims:!!C,selectLastIndex:!!F,axis:R})},840252:(h,C)=>{s.jb("Softmax",h,{axis:C})},840315:(h,C)=>{s.jb("Concat",h,{axis:C})},840375:(h,C,F,R,q)=>{s.jb("Split",h,{axis:C,numOutputs:F,splitSizes:R?Array.from(U().subarray(Number(R)>>>0,Number(q)>>>0)):[]})},840531:h=>{s.jb("Expand",h,void 0)},840585:(h,C)=>{s.jb("Gather",h,{axis:Number(C)})},840656:(h,C)=>{s.jb("GatherElements",h,{axis:Number(C)})},840735:(h,C)=>{s.jb("GatherND",h,{batch_dims:Number(C)})},840814:(h,C,F,R,q,he,Ie,Ne,tt,ut,xt)=>{s.jb("Resize",h,{antialias:C,axes:F?Array.from(U().subarray(Number(F)>>>0,Number(R)>>>0)):[],coordinateTransformMode:ot(q),cubicCoeffA:he,excludeOutside:Ie,extrapolationValue:Ne,keepAspectRatioPolicy:ot(tt),mode:ot(ut),nearestMode:ot(xt)})},841176:(h,C,F,R,q,he,Ie)=>{s.jb("Slice",h,{starts:C?Array.from(U().subarray(Number(C)>>>0,Number(F)>>>0)):[],ends:R?Array.from(U().subarray(Number(R)>>>0,Number(q)>>>0)):[],axes:he?Array.from(U().subarray(Number(he)>>>0,Number(Ie)>>>0)):[]})},841440:h=>{s.jb("Tile",h,void 0)},841492:(h,C,F)=>{s.jb("InstanceNormalization",h,{epsilon:C,format:F?"NHWC":"NCHW"})},841606:(h,C,F)=>{s.jb("InstanceNormalization",h,{epsilon:C,format:F?"NHWC":"NCHW"})},841720:h=>{s.jb("Range",h,void 0)},841773:(h,C)=>{s.jb("Einsum",h,{equation:ot(C)})},841854:(h,C,F,R,q)=>{s.jb("Pad",h,{mode:C,value:F,pads:R?Array.from(U().subarray(Number(R)>>>0,Number(q)>>>0)):[]})},841997:(h,C,F,R,q,he)=>{s.jb("BatchNormalization",h,{epsilon:C,momentum:F,spatial:!!q,trainingMode:!!R,format:he?"NHWC":"NCHW"})},842166:(h,C,F,R,q,he)=>{s.jb("BatchNormalization",h,{epsilon:C,momentum:F,spatial:!!q,trainingMode:!!R,format:he?"NHWC":"NCHW"})},842335:(h,C,F)=>{s.jb("CumSum",h,{exclusive:Number(C),reverse:Number(F)})},842432:(h,C,F)=>{s.jb("DequantizeLinear",h,{axis:C,blockSize:F})},842522:(h,C,F,R,q)=>{s.jb("GridSample",h,{align_corners:C,mode:ot(F),padding_mode:ot(R),format:q?"NHWC":"NCHW"})},842692:(h,C,F,R,q)=>{s.jb("GridSample",h,{align_corners:C,mode:ot(F),padding_mode:ot(R),format:q?"NHWC":"NCHW"})},842862:(h,C)=>{s.jb("ScatterND",h,{reduction:ot(C)})},842947:(h,C,F,R,q,he,Ie,Ne,tt)=>{s.jb("Attention",h,{numHeads:C,isUnidirectional:F,maskFilterValue:R,scale:q,doRotary:he,qkvHiddenSizes:Ie?Array.from(U().subarray(Number(Ne)>>>0,Number(Ne)+Ie>>>0)):[],pastPresentShareBuffer:!!tt})},843219:h=>{s.jb("BiasAdd",h,void 0)},843274:h=>{s.jb("BiasSplitGelu",h,void 0)},843335:h=>{s.jb("FastGelu",h,void 0)},843391:(h,C,F,R,q,he,Ie,Ne,tt,ut,xt,Ft,Rt,vr,Ss,zo)=>{s.jb("Conv",h,{format:Ft?"NHWC":"NCHW",auto_pad:C,dilations:F?Array.from(U().subarray(Number(F)>>>0,Number(R)>>>0)):[],group:q,kernel_shape:he?Array.from(U().subarray(Number(he)>>>0,Number(Ie)>>>0)):[],pads:Ne?Array.from(U().subarray(Number(Ne)>>>0,Number(tt)>>>0)):[],strides:ut?Array.from(U().subarray(Number(ut)>>>0,Number(xt)>>>0)):[],w_is_const:()=>!!ce()[Number(Rt)>>>0],activation:ot(vr),activation_params:Ss?Array.from(Ae().subarray(Number(Ss)>>>0,Number(zo)>>>0)):[]})},843975:h=>{s.jb("Gelu",h,void 0)},844027:(h,C,F,R,q,he,Ie,Ne,tt)=>{s.jb("GroupQueryAttention",h,{numHeads:C,kvNumHeads:F,scale:R,softcap:q,doRotary:he,rotaryInterleaved:Ie,smoothSoftmax:Ne,localWindowSize:tt})},844244:(h,C,F,R)=>{s.jb("LayerNormalization",h,{axis:C,epsilon:F,simplified:!!R})},844355:(h,C,F,R)=>{s.jb("LayerNormalization",h,{axis:C,epsilon:F,simplified:!!R})},844466:(h,C,F,R,q,he)=>{s.jb("MatMulNBits",h,{k:C,n:F,accuracyLevel:R,bits:q,blockSize:he})},844593:(h,C,F,R,q,he)=>{s.jb("MultiHeadAttention",h,{numHeads:C,isUnidirectional:F,maskFilterValue:R,scale:q,doRotary:he})},844752:(h,C)=>{s.jb("QuickGelu",h,{alpha:C})},844816:(h,C,F,R,q)=>{s.jb("RotaryEmbedding",h,{interleaved:!!C,numHeads:F,rotaryEmbeddingDim:R,scale:q})},844955:(h,C,F)=>{s.jb("SkipLayerNormalization",h,{epsilon:C,simplified:!!F})},845057:(h,C,F)=>{s.jb("SkipLayerNormalization",h,{epsilon:C,simplified:!!F})},845159:(h,C,F,R)=>{s.jb("GatherBlockQuantized",h,{gatherAxis:C,quantizeAxis:F,blockSize:R})},845280:h=>{s.Zb(h)},845314:(h,C)=>s.ac(Number(h),Number(C),s.Fb.dc,s.Fb.errors)};function ze(h,C,F){return ts(async()=>{await s.Xb(Number(h),Number(C),Number(F))})}function Ke(){return typeof wasmOffsetConverter<"u"}class He{name="ExitStatus";constructor(C){this.message=`Program terminated with exit(${C})`,this.status=C}}var Xe=h=>{h.terminate(),h.onmessage=()=>{}},Be=[],Ye=h=>{O.length==0&&(bt(),ye(O[0]));var C=O.pop();if(!C)return 6;E.push(C),ee[h.Ab]=C,C.Ab=h.Ab;var F={Bb:"run",fc:h.ec,Hb:h.Hb,Ab:h.Ab};return C.postMessage(F,h.Mb),0},nt=0,et=(h,C,...F)=>{for(var R=2*F.length,q=Yn(),he=Mn(8*R),Ie=he>>>3,Ne=0;Ne<F.length;Ne++){var tt=F[Ne];typeof tt=="bigint"?(te[Ie+2*Ne]=1n,te[Ie+2*Ne+1]=tt):(te[Ie+2*Ne]=0n,Ee()[Ie+2*Ne+1>>>0]=tt)}return h=ji(h,0,R,he,C),yn(q),h};function mt(h){if(a)return et(0,1,h);if(x=h,!(0<nt)){for(var C of E)Xe(C);for(C of O)Xe(C);O=[],E=[],ee={},J=!0}f(0,new He(h))}function rt(h){if(a)return et(1,0,h);We(h)}var We=h=>{if(x=h,a)throw rt(h),"unwind";mt(h)},O=[],E=[],S=[],ee={},de=h=>{var C=h.Ab;delete ee[C],O.push(h),E.splice(E.indexOf(h),1),h.Ab=0,qn(C)};function Me(){S.forEach(h=>h())}var ye=h=>new Promise(C=>{h.onmessage=q=>{var he=(q=q.data).Bb;if(q.Gb&&q.Gb!=Hs()){var Ie=ee[q.Gb];Ie?Ie.postMessage(q,q.Mb):I(`Internal error! Worker sent a message "${he}" to target pthread ${q.Gb}, but that thread no longer exists!`)}else he==="checkMailbox"?be():he==="spawnThread"?Ye(q):he==="cleanupThread"?de(ee[q.hc]):he==="loaded"?(h.loaded=!0,C(h)):he==="alert"?alert(`Thread ${q.ic}: ${q.text}`):q.target==="setimmediate"?h.postMessage(q):he==="callHandler"?s[q.Qb](...q.args):he&&I(`worker sent an unknown command ${he}`)},h.onerror=q=>{throw I(`worker sent an error! ${q.filename}:${q.lineno}: ${q.message}`),q};var F,R=[];for(F of[])s.propertyIsEnumerable(F)&&R.push(F);h.postMessage({Bb:"load",Rb:R,kc:v,lc:T})});function bt(){var h=new Worker((()=>{let C=URL;return import.meta.url>"file:"&&import.meta.url<"file;"?new C("ort.bundle.min.mjs",import.meta.url):new URL(import.meta.url)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});O.push(h)}var L=h=>{me();var C=ae()[h+52>>>2>>>0];h=ae()[h+56>>>2>>>0],Ui(C,C-h),yn(C)},oe=(h,C)=>{nt=0,h=Vi(h,C),0<nt?x=h:Qn(h)};class V{constructor(C){this.Ib=C-24}}function ne(h,C,F){var R=new V(h>>>=0);throw C>>>=0,F>>>=0,ae()[R.Ib+16>>>2>>>0]=0,ae()[R.Ib+4>>>2>>>0]=C,ae()[R.Ib+8>>>2>>>0]=F,h}function ge(h,C,F,R){return a?et(2,1,h,C,F,R):Re(h,C,F,R)}function Re(h,C,F,R){if(h>>>=0,F>>>=0,R>>>=0,l===void 0)return 6;var q=[];return a&&q.length===0?ge(h,C>>>=0,F,R):(h={ec:F,Ab:h,Hb:R,Mb:q},a?(h.Bb="spawnThread",postMessage(h,q),0):Ye(h))}var Pe=typeof TextDecoder<"u"?new TextDecoder:void 0,gt=(h,C=0,F=NaN)=>{var R=(C>>>=0)+F;for(F=C;h[F]&&!(F>=R);)++F;if(16<F-C&&h.buffer&&Pe)return Pe.decode(h.buffer instanceof ArrayBuffer?h.subarray(C,F):h.slice(C,F));for(R="";C<F;){var q=h[C++];if(128&q){var he=63&h[C++];if((224&q)==192)R+=String.fromCharCode((31&q)<<6|he);else{var Ie=63&h[C++];65536>(q=(240&q)==224?(15&q)<<12|he<<6|Ie:(7&q)<<18|he<<12|Ie<<6|63&h[C++])?R+=String.fromCharCode(q):(q-=65536,R+=String.fromCharCode(55296|q>>10,56320|1023&q))}}else R+=String.fromCharCode(q)}return R},ot=(h,C)=>(h>>>=0)?gt(N(),h,C):"";function at(h,C,F){return a?et(3,1,h,C,F):0}function Jt(h,C){if(a)return et(4,1,h,C)}var At=h=>{for(var C=0,F=0;F<h.length;++F){var R=h.charCodeAt(F);127>=R?C++:2047>=R?C+=2:55296<=R&&57343>=R?(C+=4,++F):C+=3}return C},tr=(h,C,F)=>{var R=N();if(C>>>=0,0<F){var q=C;F=C+F-1;for(var he=0;he<h.length;++he){var Ie=h.charCodeAt(he);if(55296<=Ie&&57343>=Ie&&(Ie=65536+((1023&Ie)<<10)|1023&h.charCodeAt(++he)),127>=Ie){if(C>=F)break;R[C++>>>0]=Ie}else{if(2047>=Ie){if(C+1>=F)break;R[C++>>>0]=192|Ie>>6}else{if(65535>=Ie){if(C+2>=F)break;R[C++>>>0]=224|Ie>>12}else{if(C+3>=F)break;R[C++>>>0]=240|Ie>>18,R[C++>>>0]=128|Ie>>12&63}R[C++>>>0]=128|Ie>>6&63}R[C++>>>0]=128|63&Ie}}R[C>>>0]=0,h=C-q}else h=0;return h};function Wt(h,C){if(a)return et(5,1,h,C)}function Dr(h,C,F){if(a)return et(6,1,h,C,F)}function Qt(h,C,F){return a?et(7,1,h,C,F):0}function Fr(h,C){if(a)return et(8,1,h,C)}function Yr(h,C,F){if(a)return et(9,1,h,C,F)}function ls(h,C,F,R){if(a)return et(10,1,h,C,F,R)}function Jr(h,C,F,R){if(a)return et(11,1,h,C,F,R)}function Ts(h,C,F,R){if(a)return et(12,1,h,C,F,R)}function jr(h){if(a)return et(13,1,h)}function Es(h,C){if(a)return et(14,1,h,C)}function Gr(h,C,F){if(a)return et(15,1,h,C,F)}var us,Lr,Os=()=>$e(""),Zt=h=>{for(var C="";N()[h>>>0];)C+=us[N()[h++>>>0]];return C},Zr={},es={};function Or(h,C,F={}){return function(R,q,he={}){var Ie=q.name;if(!R)throw new Lr(`type "${Ie}" must have a positive integer typeid pointer`);if(es.hasOwnProperty(R)){if(he.Sb)return;throw new Lr(`Cannot register type '${Ie}' twice`)}es[R]=q,Zr.hasOwnProperty(R)&&(q=Zr[R],delete Zr[R],q.forEach(Ne=>Ne()))}(h,C,F)}var Nr=(h,C,F)=>{switch(C){case 1:return F?R=>ce()[R>>>0]:R=>N()[R>>>0];case 2:return F?R=>D()[R>>>1>>>0]:R=>Q()[R>>>1>>>0];case 4:return F?R=>U()[R>>>2>>>0]:R=>ae()[R>>>2>>>0];case 8:return F?R=>te[R>>>3]:R=>W[R>>>3];default:throw new TypeError(`invalid integer width (${C}): ${h}`)}};function je(h,C,F){F>>>=0,Or(h>>>=0,{name:C=Zt(C>>>0),fromWireType:R=>R,toWireType:function(R,q){if(typeof q!="bigint"&&typeof q!="number")throw q=q===null?"null":(R=typeof q)=="object"||R==="array"||R==="function"?q.toString():""+q,new TypeError(`Cannot convert "${q}" to ${this.name}`);return typeof q=="number"&&(q=BigInt(q)),q},Cb:Je,readValueFromPointer:Nr(C,F,C.indexOf("u")==-1),Db:null})}var Je=8;function pt(h,C,F,R){Or(h>>>=0,{name:C=Zt(C>>>0),fromWireType:function(q){return!!q},toWireType:function(q,he){return he?F:R},Cb:Je,readValueFromPointer:function(q){return this.fromWireType(N()[q>>>0])},Db:null})}var gr=[],Ur=[];function Ds(h){9<(h>>>=0)&&--Ur[h+1]==0&&(Ur[h]=void 0,gr.push(h))}var ar=h=>{if(!h)throw new Lr("Cannot use deleted val. handle = "+h);return Ur[h]},Sr=h=>{switch(h){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let C=gr.pop()||Ur.length;return Ur[C]=h,Ur[C+1]=1,C}};function Ls(h){return this.fromWireType(ae()[h>>>2>>>0])}var tn={name:"emscripten::val",fromWireType:h=>{var C=ar(h);return Ds(h),C},toWireType:(h,C)=>Sr(C),Cb:Je,readValueFromPointer:Ls,Db:null};function rn(h){return Or(h>>>0,tn)}var cs=(h,C)=>{switch(C){case 4:return function(F){return this.fromWireType(Ae()[F>>>2>>>0])};case 8:return function(F){return this.fromWireType(Ee()[F>>>3>>>0])};default:throw new TypeError(`invalid float width (${C}): ${h}`)}};function sn(h,C,F){F>>>=0,Or(h>>>=0,{name:C=Zt(C>>>0),fromWireType:R=>R,toWireType:(R,q)=>q,Cb:Je,readValueFromPointer:cs(C,F),Db:null})}function nn(h,C,F,R,q){if(h>>>=0,F>>>=0,C=Zt(C>>>0),q===-1&&(q=4294967295),q=Ne=>Ne,R===0){var he=32-8*F;q=Ne=>Ne<<he>>>he}var Ie=C.includes("unsigned")?function(Ne,tt){return tt>>>0}:function(Ne,tt){return tt};Or(h,{name:C,fromWireType:q,toWireType:Ie,Cb:Je,readValueFromPointer:Nr(C,F,R!==0),Db:null})}function on(h,C,F){function R(he){var Ie=ae()[he>>>2>>>0];return he=ae()[he+4>>>2>>>0],new q(ce().buffer,he,Ie)}var q=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][C];Or(h>>>=0,{name:F=Zt(F>>>0),fromWireType:R,Cb:Je,readValueFromPointer:R},{Sb:!0})}function an(h,C){Or(h>>>=0,{name:C=Zt(C>>>0),fromWireType:function(F){for(var R,q=ae()[F>>>2>>>0],he=F+4,Ie=he,Ne=0;Ne<=q;++Ne){var tt=he+Ne;Ne!=q&&N()[tt>>>0]!=0||(Ie=ot(Ie,tt-Ie),R===void 0?R=Ie:(R+="\0",R+=Ie),Ie=tt+1)}return Hr(F),R},toWireType:function(F,R){R instanceof ArrayBuffer&&(R=new Uint8Array(R));var q=typeof R=="string";if(!(q||R instanceof Uint8Array||R instanceof Uint8ClampedArray||R instanceof Int8Array))throw new Lr("Cannot pass non-string to std::string");var he=q?At(R):R.length,Ie=gn(4+he+1),Ne=Ie+4;if(ae()[Ie>>>2>>>0]=he,q)tr(R,Ne,he+1);else if(q)for(q=0;q<he;++q){var tt=R.charCodeAt(q);if(255<tt)throw Hr(Ie),new Lr("String has UTF-16 code units that do not fit in 8 bits");N()[Ne+q>>>0]=tt}else for(q=0;q<he;++q)N()[Ne+q>>>0]=R[q];return F!==null&&F.push(Hr,Ie),Ie},Cb:Je,readValueFromPointer:Ls,Db(F){Hr(F)}})}var Gs=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Ps=(h,C)=>{for(var F=h>>1,R=F+C/2;!(F>=R)&&Q()[F>>>0];)++F;if(32<(F<<=1)-h&&Gs)return Gs.decode(N().slice(h,F));for(F="",R=0;!(R>=C/2);++R){var q=D()[h+2*R>>>1>>>0];if(q==0)break;F+=String.fromCharCode(q)}return F},ln=(h,C,F)=>{if(F??=2147483647,2>F)return 0;var R=C;F=(F-=2)<2*h.length?F/2:h.length;for(var q=0;q<F;++q){var he=h.charCodeAt(q);D()[C>>>1>>>0]=he,C+=2}return D()[C>>>1>>>0]=0,C-R},un=h=>2*h.length,cn=(h,C)=>{for(var F=0,R="";!(F>=C/4);){var q=U()[h+4*F>>>2>>>0];if(q==0)break;++F,65536<=q?(q-=65536,R+=String.fromCharCode(55296|q>>10,56320|1023&q)):R+=String.fromCharCode(q)}return R},dn=(h,C,F)=>{if(C>>>=0,F??=2147483647,4>F)return 0;var R=C;F=R+F-4;for(var q=0;q<h.length;++q){var he=h.charCodeAt(q);if(55296<=he&&57343>=he&&(he=65536+((1023&he)<<10)|1023&h.charCodeAt(++q)),U()[C>>>2>>>0]=he,(C+=4)+4>F)break}return U()[C>>>2>>>0]=0,C-R},Bs=h=>{for(var C=0,F=0;F<h.length;++F){var R=h.charCodeAt(F);55296<=R&&57343>=R&&++F,C+=4}return C};function _e(h,C,F){if(h>>>=0,C>>>=0,F=Zt(F>>>=0),C===2)var R=Ps,q=ln,he=un,Ie=Ne=>Q()[Ne>>>1>>>0];else C===4&&(R=cn,q=dn,he=Bs,Ie=Ne=>ae()[Ne>>>2>>>0]);Or(h,{name:F,fromWireType:Ne=>{for(var tt,ut=ae()[Ne>>>2>>>0],xt=Ne+4,Ft=0;Ft<=ut;++Ft){var Rt=Ne+4+Ft*C;Ft!=ut&&Ie(Rt)!=0||(xt=R(xt,Rt-xt),tt===void 0?tt=xt:(tt+="\0",tt+=xt),xt=Rt+C)}return Hr(Ne),tt},toWireType:(Ne,tt)=>{if(typeof tt!="string")throw new Lr(`Cannot pass non-string to C++ string type ${F}`);var ut=he(tt),xt=gn(4+ut+C);return ae()[xt>>>2>>>0]=ut/C,q(tt,xt+4,ut+C),Ne!==null&&Ne.push(Hr,xt),xt},Cb:Je,readValueFromPointer:Ls,Db(Ne){Hr(Ne)}})}function k(h,C){Or(h>>>=0,{Tb:!0,name:C=Zt(C>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function Y(h){wn(h>>>0,!o,1,!i,131072,!1),Me()}var ie=h=>{if(!J)try{if(h(),!(0<nt))try{a?Qn(x):We(x)}catch(C){C instanceof He||C=="unwind"||f(0,C)}}catch(C){C instanceof He||C=="unwind"||f(0,C)}};function le(h){h>>>=0,typeof Atomics.jc=="function"&&(Atomics.jc(U(),h>>>2,h).value.then(be),h+=128,Atomics.store(U(),h>>>2,1))}var be=()=>{var h=Hs();h&&(le(h),ie(Xn))};function Fe(h,C){(h>>>=0)==C>>>0?setTimeout(be):a?postMessage({Gb:h,Bb:"checkMailbox"}):(h=ee[h])&&h.postMessage({Bb:"checkMailbox"})}var Ze=[];function st(h,C,F,R,q){for(C>>>=0,R/=2,Ze.length=R,F=q>>>0>>>3,q=0;q<R;q++)Ze[q]=te[F+2*q]?te[F+2*q+1]:Ee()[F+2*q+1>>>0];return(C?Oe[C]:Li[h])(...Ze)}var it=()=>{nt=0};function qe(h){h>>>=0,a?postMessage({Bb:"cleanupThread",hc:h}):de(ee[h])}function kt(h){}var vt=(h,C)=>{var F=es[h];if(F===void 0)throw h=Bi(h),F=Zt(h),Hr(h),new Lr(`${C} has unknown type ${F}`);return F},Gt=(h,C,F)=>{var R=[];return h=h.toWireType(R,F),R.length&&(ae()[C>>>2>>>0]=Sr(R)),h};function wr(h,C,F){return C>>>=0,F>>>=0,h=ar(h>>>0),C=vt(C,"emval::as"),Gt(C,F,h)}function rr(h,C){return C>>>=0,h=ar(h>>>0),(C=vt(C,"emval::as")).toWireType(null,h)}var hr=h=>{try{h()}catch(C){$e(C)}},Vt=0,cr=null,Cs=0,yr=[],ds={},Kt={},Mr=0,$r=null,Kr=[];function ts(h){return function(C){if(!J){if(Vt===0){var F=!1,R=!1;C((q=0)=>{if(!J&&(Cs=q,F=!0,R)){Vt=2,hr(()=>Gi(cr)),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.resume(),q=!1;try{var he=function(){var tt=U()[cr+8>>>2>>>0];return tt=ft[Kt[tt]],--nt,tt()}()}catch(tt){he=tt,q=!0}var Ie=!1;if(!cr){var Ne=$r;Ne&&($r=null,(q?Ne.reject:Ne.resolve)(he),Ie=!0)}if(q&&!Ie)throw he}}),R=!0,F||(Vt=1,cr=function(){var q=gn(65548),he=q+12;ae()[q>>>2>>>0]=he,ae()[q+4>>>2>>>0]=he+65536,he=yr[0];var Ie=ds[he];return Ie===void 0&&(Ie=Mr++,ds[he]=Ie,Kt[Ie]=he),he=Ie,U()[q+8>>>2>>>0]=he,q}(),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.pause(),hr(()=>Jn(cr)))}else Vt===2?(Vt=0,hr(Zn),Hr(cr),cr=null,Kr.forEach(ie)):$e(`invalid state: ${Vt}`);return Cs}}(C=>{h().then(C)})}function Ir(h){return h>>>=0,ts(async()=>{var C=await ar(h);return Sr(C)})}var Tr=[];function br(h,C,F,R){return F>>>=0,R>>>=0,(h=Tr[h>>>0])(null,C=ar(C>>>0),F,R)}var lr={},er=h=>{var C=lr[h];return C===void 0?Zt(h):C};function dr(h,C,F,R,q){return F>>>=0,R>>>=0,q>>>=0,(h=Tr[h>>>0])(C=ar(C>>>0),C[F=er(F)],R,q)}var Br=()=>typeof globalThis=="object"?globalThis:Function("return this")();function rs(h){return(h>>>=0)==0?Sr(Br()):(h=er(h),Sr(Br()[h]))}var jn=h=>{var C=Tr.length;return Tr.push(h),C},yo=(h,C)=>{for(var F=Array(h),R=0;R<h;++R)F[R]=vt(ae()[C+4*R>>>2>>>0],"parameter "+R);return F},gi=(h,C)=>Object.defineProperty(C,"name",{value:h});function Mo(h,C,F){var R=(C=yo(h,C>>>0)).shift();h--;var q=`return function (obj, func, destructorsRef, args) {
`,he=0,Ie=[];F===0&&Ie.push("obj");for(var Ne=["retType"],tt=[R],ut=0;ut<h;++ut)Ie.push("arg"+ut),Ne.push("argType"+ut),tt.push(C[ut]),q+=`  var arg${ut} = argType${ut}.readValueFromPointer(args${he?"+"+he:""});
`,he+=C[ut].Cb;return q+=`  var rv = ${F===1?"new func":"func.call"}(${Ie.join(", ")});
`,R.Tb||(Ne.push("emval_returnValue"),tt.push(Gt),q+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Ne.push(q+`};
`),h=function(xt){var Ft=Function;if(!(Ft instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Ft} which is not a function`);var Rt=gi(Ft.name||"unknownFunctionName",function(){});return Rt.prototype=Ft.prototype,Rt=new Rt,(xt=Ft.apply(Rt,xt))instanceof Object?xt:Rt}(Ne)(...tt),F=`methodCaller<(${C.map(xt=>xt.name).join(", ")}) => ${R.name}>`,jn(gi(F,h))}function bo(h){return h=er(h>>>0),Sr(s[h])}function Ks(h,C){return C>>>=0,h=ar(h>>>0),C=ar(C),Sr(h[C])}function vo(h){9<(h>>>=0)&&(Ur[h+1]+=1)}function xo(){return Sr([])}function To(h){h=ar(h>>>0);for(var C=Array(h.length),F=0;F<h.length;F++)C[F]=h[F];return Sr(C)}function Eo(h){return Sr(er(h>>>0))}function Po(){return Sr({})}function wi(h){for(var C=ar(h>>>=0);C.length;){var F=C.pop();C.pop()(F)}Ds(h)}function Co(h,C,F){C>>>=0,F>>>=0,h=ar(h>>>0),C=ar(C),F=ar(F),h[C]=F}function So(h,C){return C>>>=0,h=(h=vt(h>>>0,"_emval_take_value")).readValueFromPointer(C),Sr(h)}function yi(h,C){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),C>>>=0,h=new Date(1e3*h),U()[C>>>2>>>0]=h.getUTCSeconds(),U()[C+4>>>2>>>0]=h.getUTCMinutes(),U()[C+8>>>2>>>0]=h.getUTCHours(),U()[C+12>>>2>>>0]=h.getUTCDate(),U()[C+16>>>2>>>0]=h.getUTCMonth(),U()[C+20>>>2>>>0]=h.getUTCFullYear()-1900,U()[C+24>>>2>>>0]=h.getUTCDay(),h=(h.getTime()-Date.UTC(h.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,U()[C+28>>>2>>>0]=h}var Mi=h=>h%4==0&&(h%100!=0||h%400==0),Nn=[0,31,60,91,121,152,182,213,244,274,305,335],bi=[0,31,59,90,120,151,181,212,243,273,304,334];function vi(h,C){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),C>>>=0,h=new Date(1e3*h),U()[C>>>2>>>0]=h.getSeconds(),U()[C+4>>>2>>>0]=h.getMinutes(),U()[C+8>>>2>>>0]=h.getHours(),U()[C+12>>>2>>>0]=h.getDate(),U()[C+16>>>2>>>0]=h.getMonth(),U()[C+20>>>2>>>0]=h.getFullYear()-1900,U()[C+24>>>2>>>0]=h.getDay();var F=(Mi(h.getFullYear())?Nn:bi)[h.getMonth()]+h.getDate()-1|0;U()[C+28>>>2>>>0]=F,U()[C+36>>>2>>>0]=-60*h.getTimezoneOffset(),F=new Date(h.getFullYear(),6,1).getTimezoneOffset();var R=new Date(h.getFullYear(),0,1).getTimezoneOffset();h=0|(F!=R&&h.getTimezoneOffset()==Math.min(R,F)),U()[C+32>>>2>>>0]=h}function Ba(h){h>>>=0;var C=new Date(U()[h+20>>>2>>>0]+1900,U()[h+16>>>2>>>0],U()[h+12>>>2>>>0],U()[h+8>>>2>>>0],U()[h+4>>>2>>>0],U()[h>>>2>>>0],0),F=U()[h+32>>>2>>>0],R=C.getTimezoneOffset(),q=new Date(C.getFullYear(),6,1).getTimezoneOffset(),he=new Date(C.getFullYear(),0,1).getTimezoneOffset(),Ie=Math.min(he,q);return 0>F?U()[h+32>>>2>>>0]=+(q!=he&&Ie==R):0<F!=(Ie==R)&&(q=Math.max(he,q),C.setTime(C.getTime()+6e4*((0<F?Ie:q)-R))),U()[h+24>>>2>>>0]=C.getDay(),F=(Mi(C.getFullYear())?Nn:bi)[C.getMonth()]+C.getDate()-1|0,U()[h+28>>>2>>>0]=F,U()[h>>>2>>>0]=C.getSeconds(),U()[h+4>>>2>>>0]=C.getMinutes(),U()[h+8>>>2>>>0]=C.getHours(),U()[h+12>>>2>>>0]=C.getDate(),U()[h+16>>>2>>>0]=C.getMonth(),U()[h+20>>>2>>>0]=C.getYear(),h=C.getTime(),BigInt(isNaN(h)?-1:h/1e3)}function xi(h,C,F,R,q,he,Ie){return a?et(16,1,h,C,F,R,q,he,Ie):-52}function Un(h,C,F,R,q,he){if(a)return et(17,1,h,C,F,R,q,he)}var zs={},Vn=()=>performance.timeOrigin+performance.now();function Ti(h,C){if(a)return et(18,1,h,C);if(zs[h]&&(clearTimeout(zs[h].id),delete zs[h]),!C)return 0;var F=setTimeout(()=>{delete zs[h],ie(()=>Ni(h,performance.timeOrigin+performance.now()))},C);return zs[h]={id:F,qc:C},0}function $o(h,C,F,R){h>>>=0,C>>>=0,F>>>=0,R>>>=0;var q=new Date().getFullYear(),he=new Date(q,0,1).getTimezoneOffset();q=new Date(q,6,1).getTimezoneOffset();var Ie=Math.max(he,q);ae()[h>>>2>>>0]=60*Ie,U()[C>>>2>>>0]=+(he!=q),h=(C=Ne=>{var tt=Math.abs(Ne);return`UTC${0<=Ne?"-":"+"}${String(Math.floor(tt/60)).padStart(2,"0")}${String(tt%60).padStart(2,"0")}`})(he),C=C(q),q<he?(tr(h,F,17),tr(C,R,17)):(tr(h,R,17),tr(C,F,17))}var Io=()=>Date.now();function ko(h,C,F){return 0<=h&&3>=h?(h===0?h=Date.now():h=performance.timeOrigin+performance.now(),te[F>>>0>>>3]=BigInt(Math.round(1e6*h)),0):28}var Wn=[],Ei=(h,C)=>{Wn.length=0;for(var F;F=N()[h++>>>0];){var R=F!=105;C+=(R&=F!=112)&&C%8?4:0,Wn.push(F==112?ae()[C>>>2>>>0]:F==106?te[C>>>3]:F==105?U()[C>>>2>>>0]:Ee()[C>>>3>>>0]),C+=R?8:4}return Wn};function Ao(h,C,F){return h>>>=0,C=Ei(C>>>0,F>>>0),Oe[h](...C)}function Fo(h,C,F){return h>>>=0,C=Ei(C>>>0,F>>>0),Oe[h](...C)}var Pi=()=>{};function Oo(h,C){return I(ot(h>>>0,C>>>0))}var Gn=()=>{throw nt+=1,"unwind"};function Ci(){return 4294901760}var Do=()=>navigator.hardwareConcurrency;function Si(){return $e("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Rs(h){h>>>=0;var C=N().length;if(h<=C||4294901760<h)return!1;for(var F=1;4>=F;F*=2){var R=C*(1+.2/F);R=Math.min(R,h+100663296);e:{R=(Math.min(4294901760,65536*Math.ceil(Math.max(h,R)/65536))-v.buffer.byteLength+65535)/65536|0;try{v.grow(R),me();var q=1;break e}catch{}q=void 0}if(q)return!0}return!1}var pn=()=>($e("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),hn={},$i=h=>{h.forEach(C=>{pn()})};function za(){var h=Error().stack.toString().split(`
`);return h[0]=="Error"&&h.shift(),$i(h),hn.Lb=pn(),hn.cc=h,hn.Lb}function Lo(h,C,F){if(h>>>=0,C>>>=0,hn.Lb==h)var R=hn.cc;else(R=Error().stack.toString().split(`
`))[0]=="Error"&&R.shift(),$i(R);for(var q=3;R[q]&&pn()!=h;)++q;for(h=0;h<F&&R[h+q];++h)U()[C+4*h>>>2>>>0]=pn();return h}var mn,Kn={},Ii=()=>{if(!mn){var h,C={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(h in Kn)Kn[h]===void 0?delete C[h]:C[h]=Kn[h];var F=[];for(h in C)F.push(`${h}=${C[h]}`);mn=F}return mn};function ki(h,C){if(a)return et(19,1,h,C);h>>>=0,C>>>=0;var F=0;return Ii().forEach((R,q)=>{var he=C+F;for(q=ae()[h+4*q>>>2>>>0]=he,he=0;he<R.length;++he)ce()[q++>>>0]=R.charCodeAt(he);ce()[q>>>0]=0,F+=R.length+1}),0}function Ai(h,C){if(a)return et(20,1,h,C);h>>>=0,C>>>=0;var F=Ii();ae()[h>>>2>>>0]=F.length;var R=0;return F.forEach(q=>R+=q.length+1),ae()[C>>>2>>>0]=R,0}function Fi(h){return a?et(21,1,h):52}function fn(h,C,F,R){return a?et(22,1,h,C,F,R):52}function Oi(h,C,F,R){return a?et(23,1,h,C,F,R):70}var Bo=[null,[],[]];function Di(h,C,F,R){if(a)return et(24,1,h,C,F,R);C>>>=0,F>>>=0,R>>>=0;for(var q=0,he=0;he<F;he++){var Ie=ae()[C>>>2>>>0],Ne=ae()[C+4>>>2>>>0];C+=8;for(var tt=0;tt<Ne;tt++){var ut=N()[Ie+tt>>>0],xt=Bo[h];ut===0||ut===10?((h===1?g:I)(gt(xt)),xt.length=0):xt.push(ut)}q+=Ne}return ae()[R>>>2>>>0]=q,0}a||function(){for(var h=s.numThreads-1;h--;)bt();Be.unshift(()=>{Z++,function(C){a?C():Promise.all(O.map(ye)).then(C)}(()=>Ce())})}();for(var Hn=Array(256),_n=0;256>_n;++_n)Hn[_n]=String.fromCharCode(_n);us=Hn,Lr=s.BindingError=class extends Error{constructor(h){super(h),this.name="BindingError"}},s.InternalError=class extends Error{constructor(h){super(h),this.name="InternalError"}},Ur.push(0,1,void 0,1,null,1,!0,1,!1,1),s.count_emval_handles=()=>Ur.length/2-5-gr.length;var ft,Li=[mt,rt,ge,at,Jt,Wt,Dr,Qt,Fr,Yr,ls,Jr,Ts,jr,Es,Gr,xi,Un,Ti,ki,Ai,Fi,fn,Oi,Di];(async function(){function h(R,q){return ft=R.exports,ft=function(){var he=ft,Ie={};for(let[Ne,tt]of Object.entries(he))Ie[Ne]=typeof tt=="function"?(...ut)=>{yr.push(Ne);try{return tt(...ut)}finally{J||(yr.pop(),cr&&Vt===1&&yr.length===0&&(Vt=0,nt+=1,hr(Wi),typeof Fibers<"u"&&Fibers.rc()))}}:tt;return Ie}(),ft=function(){var he=ft,Ie=tt=>ut=>tt(ut)>>>0,Ne=tt=>()=>tt()>>>0;return(he=Object.assign({},he)).Da=Ie(he.Da),he.fb=Ne(he.fb),he.hb=Ie(he.hb),he.tb=Ie(he.tb),he.ub=Ne(he.ub),he.__cxa_get_exception_ptr=Ie(he.__cxa_get_exception_ptr),he}(),S.push(ft.ib),T=q,Ce(),ft}Z++;var C=Se();if(s.instantiateWasm)return new Promise(R=>{s.instantiateWasm(C,(q,he)=>{h(q,he),R(q.exports)})});if(a)return new Promise(R=>{Le=q=>{var he=new WebAssembly.Instance(q,Se());R(h(he,q))}});fe??=s.locateFile?s.locateFile?s.locateFile("ort-wasm-simd-threaded.jsep.wasm",P):P+"ort-wasm-simd-threaded.jsep.wasm":new URL("/NoLLMChat/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href;try{var F=await async function(R){var q=fe;if(!se&&typeof WebAssembly.instantiateStreaming=="function"&&!ue(q))try{var he=fetch(q,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(he,R)}catch(Ie){I(`wasm streaming compile failed: ${Ie}`),I("falling back to ArrayBuffer instantiation")}return async function(Ie,Ne){try{var tt=await async function(ut){if(!se)try{var xt=await u(ut);return new Uint8Array(xt)}catch{}if(ut==fe&&se)ut=new Uint8Array(se);else{if(!p)throw"both async and sync fetching of the wasm failed";ut=p(ut)}return ut}(Ie);return await WebAssembly.instantiate(tt,Ne)}catch(ut){I(`failed to asynchronously prepare wasm: ${ut}`),$e(ut)}}(q,R)}(C);return h(F.instance,F.module)}catch(R){return t(R),Promise.reject(R)}})();var Bi=h=>(Bi=ft.Da)(h),zi=()=>(zi=ft.Ea)();s._OrtInit=(h,C)=>(s._OrtInit=ft.Fa)(h,C),s._OrtGetLastError=(h,C)=>(s._OrtGetLastError=ft.Ga)(h,C),s._OrtCreateSessionOptions=(h,C,F,R,q,he,Ie,Ne,tt,ut)=>(s._OrtCreateSessionOptions=ft.Ha)(h,C,F,R,q,he,Ie,Ne,tt,ut),s._OrtAppendExecutionProvider=(h,C,F,R,q)=>(s._OrtAppendExecutionProvider=ft.Ia)(h,C,F,R,q),s._OrtAddFreeDimensionOverride=(h,C,F)=>(s._OrtAddFreeDimensionOverride=ft.Ja)(h,C,F),s._OrtAddSessionConfigEntry=(h,C,F)=>(s._OrtAddSessionConfigEntry=ft.Ka)(h,C,F),s._OrtReleaseSessionOptions=h=>(s._OrtReleaseSessionOptions=ft.La)(h),s._OrtCreateSession=(h,C,F)=>(s._OrtCreateSession=ft.Ma)(h,C,F),s._OrtReleaseSession=h=>(s._OrtReleaseSession=ft.Na)(h),s._OrtGetInputOutputCount=(h,C,F)=>(s._OrtGetInputOutputCount=ft.Oa)(h,C,F),s._OrtGetInputOutputMetadata=(h,C,F,R)=>(s._OrtGetInputOutputMetadata=ft.Pa)(h,C,F,R),s._OrtFree=h=>(s._OrtFree=ft.Qa)(h),s._OrtCreateTensor=(h,C,F,R,q,he)=>(s._OrtCreateTensor=ft.Ra)(h,C,F,R,q,he),s._OrtGetTensorData=(h,C,F,R,q)=>(s._OrtGetTensorData=ft.Sa)(h,C,F,R,q),s._OrtReleaseTensor=h=>(s._OrtReleaseTensor=ft.Ta)(h),s._OrtCreateRunOptions=(h,C,F,R)=>(s._OrtCreateRunOptions=ft.Ua)(h,C,F,R),s._OrtAddRunConfigEntry=(h,C,F)=>(s._OrtAddRunConfigEntry=ft.Va)(h,C,F),s._OrtReleaseRunOptions=h=>(s._OrtReleaseRunOptions=ft.Wa)(h),s._OrtCreateBinding=h=>(s._OrtCreateBinding=ft.Xa)(h),s._OrtBindInput=(h,C,F)=>(s._OrtBindInput=ft.Ya)(h,C,F),s._OrtBindOutput=(h,C,F,R)=>(s._OrtBindOutput=ft.Za)(h,C,F,R),s._OrtClearBoundOutputs=h=>(s._OrtClearBoundOutputs=ft._a)(h),s._OrtReleaseBinding=h=>(s._OrtReleaseBinding=ft.$a)(h),s._OrtRunWithBinding=(h,C,F,R,q)=>(s._OrtRunWithBinding=ft.ab)(h,C,F,R,q),s._OrtRun=(h,C,F,R,q,he,Ie,Ne)=>(s._OrtRun=ft.bb)(h,C,F,R,q,he,Ie,Ne),s._OrtEndProfiling=h=>(s._OrtEndProfiling=ft.cb)(h),s._JsepOutput=(h,C,F)=>(s._JsepOutput=ft.db)(h,C,F),s._JsepGetNodeName=h=>(s._JsepGetNodeName=ft.eb)(h);var Hs=()=>(Hs=ft.fb)(),Hr=s._free=h=>(Hr=s._free=ft.gb)(h),gn=s._malloc=h=>(gn=s._malloc=ft.hb)(h),wn=(h,C,F,R,q,he)=>(wn=ft.kb)(h,C,F,R,q,he),Ri=()=>(Ri=ft.lb)(),ji=(h,C,F,R,q)=>(ji=ft.mb)(h,C,F,R,q),qn=h=>(qn=ft.nb)(h),Qn=h=>(Qn=ft.ob)(h),Ni=(h,C)=>(Ni=ft.pb)(h,C),Xn=()=>(Xn=ft.qb)(),Ui=(h,C)=>(Ui=ft.rb)(h,C),yn=h=>(yn=ft.sb)(h),Mn=h=>(Mn=ft.tb)(h),Yn=()=>(Yn=ft.ub)(),Vi=s.dynCall_ii=(h,C)=>(Vi=s.dynCall_ii=ft.vb)(h,C),Jn=h=>(Jn=ft.wb)(h),Wi=()=>(Wi=ft.xb)(),Gi=h=>(Gi=ft.yb)(h),Zn=()=>(Zn=ft.zb)();return s.stackSave=()=>Yn(),s.stackRestore=h=>yn(h),s.stackAlloc=h=>Mn(h),s.setValue=function(h,C,F="i8"){switch(F.endsWith("*")&&(F="*"),F){case"i1":case"i8":ce()[h>>>0]=C;break;case"i16":D()[h>>>1>>>0]=C;break;case"i32":U()[h>>>2>>>0]=C;break;case"i64":te[h>>>3]=BigInt(C);break;case"float":Ae()[h>>>2>>>0]=C;break;case"double":Ee()[h>>>3>>>0]=C;break;case"*":ae()[h>>>2>>>0]=C;break;default:$e(`invalid type for setValue: ${F}`)}},s.getValue=function(h,C="i8"){switch(C.endsWith("*")&&(C="*"),C){case"i1":case"i8":return ce()[h>>>0];case"i16":return D()[h>>>1>>>0];case"i32":return U()[h>>>2>>>0];case"i64":return te[h>>>3];case"float":return Ae()[h>>>2>>>0];case"double":return Ee()[h>>>3>>>0];case"*":return ae()[h>>>2>>>0];default:$e(`invalid type for getValue: ${C}`)}},s.UTF8ToString=ot,s.stringToUTF8=tr,s.lengthBytesUTF8=At,function h(){if(0<Z)xe=h;else if(a)r(s),H();else{for(;0<Be.length;)Be.shift()(s);0<Z?xe=h:(s.calledRun=!0,J||(H(),r(s)))}}(),s.PTR_SIZE=4,n}),H0=iu,If=globalThis.self?.name?.startsWith("em-pthread"),If&&iu()}),ou,nc,kf,qr,q0,ia,Af,Ff,au,Of,lu,Q0,uu,X0,Sc=Ge(()=>{Cc(),ou=typeof location>"u"?void 0:location.origin,nc=import.meta.url>"file:"&&import.meta.url<"file;",kf=()=>{{if(nc){let e=URL;return new URL(new e("ort.bundle.min.mjs",import.meta.url).href,ou).href}return import.meta.url}},qr=kf(),q0=()=>{if(qr&&!qr.startsWith("blob:"))return qr.substring(0,qr.lastIndexOf("/")+1)},ia=(e,r)=>{try{let t=r??qr;return(t?new URL(e,t):new URL(e)).origin===ou}catch{return!1}},Af=(e,r)=>{let t=r??qr;try{return(t?new URL(e,t):new URL(e)).href}catch{return}},Ff=(e,r)=>`${r??"./"}${e}`,au=async e=>{let r=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},Of=async e=>(await import(e)).default,lu=(r1(),ho(W0)).default,Q0=async()=>{if(!qr)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(ia(qr))return[void 0,lu()];let e=await au(qr);return[e,lu(e)]},uu=(s1(),ho(K0)).default,X0=async(e,r,t)=>{if(!e&&!r&&uu&&qr&&ia(qr))return[void 0,uu];{let s="ort-wasm-simd-threaded.jsep.mjs",n=e??Af(s,r),i=t&&n&&!ia(n,r),o=i?await au(n):n??Ff(s,r);return[i?o:void 0,await Of(o)]}}}),cu,oa,Xi,du,Df,Lf,Bf,$c,qt,zn=Ge(()=>{Sc(),oa=!1,Xi=!1,du=!1,Df=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Lf=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Bf=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},$c=async e=>{if(oa)return Promise.resolve();if(Xi)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(du)throw new Error("previous call to 'initializeWebAssembly()' failed.");Xi=!0;let r=e.initTimeout,t=e.numThreads;if(e.simd!==!1){if(e.simd==="relaxed"){if(!Bf())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!Lf())throw new Error("WebAssembly SIMD is not supported in the current environment.")}let s=Df();t>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=t=1);let n=e.wasmPaths,i=typeof n=="string"?n:void 0,o=n?.mjs,a=o?.href??o,l=n?.wasm,d=l?.href??l,c=e.wasmBinary,[u,p]=await X0(a,i,t>1),_=!1,f=[];if(r>0&&f.push(new Promise(P=>{setTimeout(()=>{_=!0,P()},r)})),f.push(new Promise((P,A)=>{let y={numThreads:t};if(c)y.wasmBinary=c;else if(d||i)y.locateFile=g=>d??i+g;else if(a&&a.indexOf("blob:")!==0)y.locateFile=g=>new URL(g,a).href;else if(u){let g=q0();g&&(y.locateFile=I=>g+I)}p(y).then(g=>{Xi=!1,oa=!0,cu=g,P(),u&&URL.revokeObjectURL(u)},g=>{Xi=!1,du=!0,A(g)})})),await Promise.race(f),_)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},qt=()=>{if(oa&&cu)return cu;throw new Error("WebAssembly is not initialized yet.")}}),ys,Pa,Ut,Ic=Ge(()=>{zn(),ys=(e,r)=>{let t=qt(),s=t.lengthBytesUTF8(e)+1,n=t._malloc(s);return t.stringToUTF8(e,n,s),r.push(n),n},Pa=(e,r,t,s)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([n,i])=>{let o=r?r+n:n;if(typeof i=="object")Pa(i,o+".",t,s);else if(typeof i=="string"||typeof i=="number")s(o,i.toString());else if(typeof i=="boolean")s(o,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},Ut=e=>{let r=qt(),t=r.stackSave();try{let s=r.PTR_SIZE,n=r.stackAlloc(2*s);r._OrtGetLastError(n,n+s);let i=Number(r.getValue(n,s===4?"i32":"i64")),o=r.getValue(n+s,"*"),a=o?r.UTF8ToString(o):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{r.stackRestore(t)}}}),Y0,n1=Ge(()=>{zn(),Ic(),Y0=e=>{let r=qt(),t=0,s=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let i=0;return e?.tag!==void 0&&(i=ys(e.tag,s)),t=r._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,i),t===0&&Ut("Can't create run options."),e?.extra!==void 0&&Pa(e.extra,"",new WeakSet,(o,a)=>{let l=ys(o,s),d=ys(a,s);r._OrtAddRunConfigEntry(t,l,d)!==0&&Ut(`Can't set a run config entry: ${o} - ${a}.`)}),[t,s]}catch(i){throw t!==0&&r._OrtReleaseRunOptions(t),s.forEach(o=>r._free(o)),i}}}),zf,Rf,jf,Yi,Nf,J0,i1=Ge(()=>{zn(),Ic(),zf=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Rf=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},jf=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},Yi=(e,r,t,s)=>{let n=ys(r,s),i=ys(t,s);qt()._OrtAddSessionConfigEntry(e,n,i)!==0&&Ut(`Can't set a session config entry: ${r} - ${t}.`)},Nf=async(e,r,t)=>{for(let s of r){let n=typeof s=="string"?s:s.name,i=[];switch(n){case"webnn":if(n="WEBNN",typeof s!="string"){let c=s?.deviceType;c&&Yi(e,"deviceType",c,t)}break;case"webgpu":if(n="JS",typeof s!="string"){let c=s;if(c?.preferredLayout){if(c.preferredLayout!=="NCHW"&&c.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${c.preferredLayout}`);Yi(e,"preferredLayout",c.preferredLayout,t)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let o=ys(n,t),a=i.length,l=0,d=0;if(a>0){l=qt()._malloc(a*qt().PTR_SIZE),t.push(l),d=qt()._malloc(a*qt().PTR_SIZE),t.push(d);for(let c=0;c<a;c++)qt().setValue(l+c*qt().PTR_SIZE,i[c][0],"*"),qt().setValue(d+c*qt().PTR_SIZE,i[c][1],"*")}await qt()._OrtAppendExecutionProvider(e,o,l,d,a)!==0&&Ut(`Can't append execution provider: ${n}.`)}},J0=async e=>{let r=qt(),t=0,s=[],n=e||{};jf(n);try{let i=zf(n.graphOptimizationLevel??"all"),o=Rf(n.executionMode??"sequential"),a=typeof n.logId=="string"?ys(n.logId,s):0,l=n.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let d=n.logVerbosityLevel??0;if(!Number.isInteger(d)||d<0||d>4)throw new Error(`log verbosity level is not valid: ${d}`);let c=typeof n.optimizedModelFilePath=="string"?ys(n.optimizedModelFilePath,s):0;if(t=r._OrtCreateSessionOptions(i,!!n.enableCpuMemArena,!!n.enableMemPattern,o,!!n.enableProfiling,0,a,l,d,c),t===0&&Ut("Can't create session options."),n.executionProviders&&await Nf(t,n.executionProviders,s),n.enableGraphCapture!==void 0){if(typeof n.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${n.enableGraphCapture}`);Yi(t,"enableGraphCapture",n.enableGraphCapture.toString(),s)}if(n.freeDimensionOverrides)for(let[u,p]of Object.entries(n.freeDimensionOverrides)){if(typeof u!="string")throw new Error(`free dimension override name must be a string: ${u}`);if(typeof p!="number"||!Number.isInteger(p)||p<0)throw new Error(`free dimension override value must be a non-negative integer: ${p}`);let _=ys(u,s);r._OrtAddFreeDimensionOverride(t,_,p)!==0&&Ut(`Can't set a free dimension override: ${u} - ${p}.`)}return n.extra!==void 0&&Pa(n.extra,"",new WeakSet,(u,p)=>{Yi(t,u,p,s)}),[t,s]}catch(i){throw t!==0&&r._OrtReleaseSessionOptions(t)!==0&&Ut("Can't release session options."),s.forEach(o=>r._free(o)),i}}}),li,Ns,An,kc,Ca,Ac,Fc,ic,Mt=Ge(()=>{li=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Ns=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},An=(e,r)=>{let t=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof r=="number"?r:r.reduce((n,i)=>n*i,1);return t>0?Math.ceil(s*t):void 0},kc=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Ca=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Ac=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Fc=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",ic=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),Oc,Z0=Ge(()=>{Cc(),Oc=async e=>{if(typeof e=="string"){let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),s=t?parseInt(t,10):0;if(s<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n=r.body.getReader(),i;try{i=new ArrayBuffer(s)}catch(a){if(a instanceof RangeError){let l=Math.ceil(s/65536);i=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw a}let o=0;for(;;){let{done:a,value:l}=await n.read();if(a)break;let d=l.byteLength;new Uint8Array(i,o,d).set(l),o+=d}return new Uint8Array(i,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),Uf,Vf,Wf,Gf,Dc,Kf,Ot,Ws=Ge(()=>{Mt(),Uf=["V","I","W","E","F"],Vf=(e,r)=>{console.log(`[${Uf[e]},${new Date().toISOString()}]${r}`)},Dc=(e,r)=>{Wf=e,Gf=r},Kf=(e,r)=>{let t=Ca(e),s=Ca(Wf);t>=s&&Vf(t,typeof r=="function"?r():r)},Ot=(...e)=>{Gf&&Kf(...e)}}),Hf,pi,Te,Sa,ey,ty,ry,Et=Ge(()=>{Hf=class{static calcMatMulShape(e,r){return e[1]!==r[0]?void 0:[e[0],r[1]]}},pi=class{static calcShape(e,r,t=!1){let s=e.length,n=r.length;if(s===0)return r;if(n===0)return e;let i=Math.max(e.length,r.length),o=new Array(i);if(t){if(s<2||n<2)return;let a=Hf.calcMatMulShape([e[s-2],e[s-1]],[r[n-2],r[n-1]]);if(a===void 0)return;[o[i-2],o[i-1]]=a}for(let a=t?3:1;a<=i;a++){let l=s-a<0?1:e[s-a],d=n-a<0?1:r[n-a];if(l!==d&&l>1&&d>1)return;let c=Math.max(l,d);if(l&&d)o[i-a]=Math.max(l,d);else{if(c>1)return;o[i-a]=0}}return o}static isValidBroadcast(e,r){let t=e.length,s=r.length;if(t>s)return!1;for(let n=1;n<=t;n++)if(e[t-n]!==1&&e[t-n]!==r[s-n])return!1;return!0}},Te=class va{static size(r){return va.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let s=r.length;if(s===0)return[];let n=new Array(s),i=s-1;for(;i>=0;){if(r[i]%t===0){n[i]=r[i]/t;break}if(t%r[i]!==0)throw new Error("cannot convert shape");n[i]=1,t/=r[i],i--}for(i--;i>=0;i--)n[i]=r[i];return n}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return va.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return va.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,s){let n=1;for(let i=t;i<s;i++){if(r[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=Number(r[i])}return n}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let s=new Array(t);s[t-1]=1,s[t-2]=r[t-1];for(let n=t-3;n>=0;--n)s[n]=s[n+1]*r[n+1];return s}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(s=>this.normalizeAxis(s,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(s=>r[s]):r.slice().reverse()}static padShape(r,t){let s=r.length;return r.map((n,i)=>n+t[i]+t[i+s])}static areEqual(r,t){return r.length!==t.length?!1:r.every((s,n)=>s===t[n])}},Sa=class ao{static adjustPoolAttributes(r,t,s,n,i,o){if(!r&&s.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let a=0;a<t.length-2;a++)a>=s.length?s.push(t[a+2]):s[a]=t[a+2];for(let a=0;a<s.length;a++)if(a<n.length){if(n[a]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let a=0;a<s.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<s.length*2;a++)if(a<o.length){if(o[a]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let a=0;a<s.length;a++){if(s[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[a]>=s[a]||o[a+s.length]>=s[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,s,n,i,o,a){if(a){if(i.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<r.length-2;l++)ao.adjustPadAndReturnShape(r[l+(o?1:2)],t[l],s[l],n[l],i,l,l+r.length-2,a)}}static computePoolOutputShape(r,t,s,n,i,o,a){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let l=[t[0],t[1]];return ao.computeShapeHelper(r,t,l,s,n,i,o,a),l}static computeConvOutputShape(r,t,s,n,i,o,a){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[r[0],t[0]];return ao.computeShapeHelper(!1,r,l,s,n,i,o,a),l}static computeShapeHelper(r,t,s,n,i,o,a,l){if(r)for(let d=0;d<t.length-2;d++)s.push(1);else for(let d=0;d<t.length-2;d++)s.push(ao.adjustPadAndReturnShape(t[d+2],n[d],i[d],o[d],a,d,d+t.length-2,l))}static adjustPadAndReturnShape(r,t,s,n,i,o,a,l){let d=s*(n-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return i[o]=0,i[a]=0,Math.floor((r-d)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let c=((r+t-1)/t-1)*t+n-r;return i[o]=Math.floor(l==="SAME_LOWER"?(c+1)/2:c/2),i[a]=c-i[o],Math.floor((r+c-n)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+i[o]+i[a]-d)/t+1)}},ey=class{static getShapeOfGemmResult(e,r,t,s,n){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let i,o,a;r?(i=e[1],o=e[0]):(i=e[0],o=e[1]);let l=-1;if(s?(a=t[0],l=1):(a=t[1],l=0),t[l]!==o)throw new Error("dimension mismatch");if(i<=0||a<=0||o<=0)throw new Error("invalid shape specified");if(n&&!pi.isValidBroadcast(n,[i,a]))throw new Error("gemm: invalid bias shape for broadcast");return[i,a,o]}},ty=-34028234663852886e22,ry=34028234663852886e22}),Lc,sy=Ge(()=>{Mt(),Lc=(e,r)=>new(kc(r))(e)}),oc,pu,qf,hu,Qf,mu,fu,_u,Xf,ny,o1=Ge(()=>{Ws(),oc=(e,r=!0)=>{if(e.byteLength%8!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let t=e.byteLength/8,s=new BigInt64Array(e.buffer,e.byteOffset,t),n=new Int32Array(t);for(let i=0;i<t;i++){let o=s[i];if(o>2147483647n||o<-2147483648n)throw new Error(`Overflow occurred when converting BigInt to Int32 at index ${i}: ${o}`);n[i]=Number(o)}return r?new Uint8Array(n.buffer):n},pu=(e,r=!0)=>{if(e.byteLength%4!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let t=e.byteLength/4,s=new Int32Array(e.buffer,e.byteOffset,t),n=BigInt64Array.from(s,BigInt);return r?new Uint8Array(n.buffer):n},qf=1,hu=()=>qf++,Qf=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),mu=(e,r)=>{let t=Qf.get(e);if(!t)throw new Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((s,n)=>s*n)*t/8):0},fu=class{constructor(e){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:r,context:t,tensor:s,dataType:n,shape:i,shouldConvertInt64toInt32:o=!1}=e;this.sessionId=r,this.mlContext=t,this.mlTensor=s,this.dataType=n,this.tensorShape=i,this.shouldConvertInt64toInt32=o}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return mu(this.dataType,this.tensorShape)}destroy(){Ot("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e,r){if(e){let t=await this.mlContext.readTensor(this.mlTensor),s=pu(new Uint8Array(t));if(r){(r instanceof ArrayBuffer?new Uint8Array(r):new Uint8Array(r.buffer,r.byteOffset,r.byteLength)).set(s);return}else return s.buffer}else return r?this.mlContext.readTensor(this.mlTensor,r):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,r,t){return this.mlContext===e&&this.dataType===r&&this.tensorShape.length===t.length&&this.tensorShape.every((s,n)=>s===t[n])}setIsInt64ToInt32Converted(e){this.isInt64ToInt32Converted=e}},_u=class{constructor(e,r){this.tensorManager=e,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,r,t,s){let n=r,i=this.tensorManager.getMLContext(e),o=n==="int64"&&!i.opSupportLimits().input.dataTypes.includes("int64");if(o&&(n="int32",Ot("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(i,n,t))return this.wrapper.tensor;if(s){if(this.wrapper.byteLength!==mu(n,t))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let a=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,n,t,a,!0,!0,o),s&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){let r=e;if(this.wrapper)if(this.wrapper.shouldConvertInt64toInt32&&(r=oc(e,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),r.byteLength===this.wrapper.byteLength){this.wrapper.write(r);return}else Ot("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(r):this.activeUpload=new Uint8Array(r)}async download(e){if(this.activeUpload){let r=this.wrapper?.isInt64ToInt32Converted?pu(this.activeUpload):this.activeUpload;if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(r):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(r);return}else return r.buffer}if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32,e):this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32)}},Xf=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let r=this.backend.getMLContext(e);if(!r)throw new Error("MLContext not found for session.");return r}reserveTensorId(){let e=hu();return this.tensorTrackersById.set(e,new _u(this)),e}releaseTensorId(e){let r=this.tensorTrackersById.get(e);r&&(this.tensorTrackersById.delete(e),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(e,r,t,s,n){Ot("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${r}, dataType: ${t}, shape: ${s}, copyOld: ${n}}`);let i=this.tensorTrackersById.get(r);if(!i)throw new Error("Tensor not found.");return i.ensureTensor(e,t,s,n)}upload(e,r){let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");t.upload(r)}async download(e,r){Ot("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${r?.byteLength}}`);let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");return t.download(r)}releaseTensorsForSession(e){for(let r of this.freeTensors)r.sessionId===e&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==e)}registerTensor(e,r,t,s){let n=this.getMLContext(e),i=hu(),o=new fu({sessionId:e,context:n,tensor:r,dataType:t,shape:s});return this.tensorTrackersById.set(i,new _u(this,o)),this.externalTensors.add(o),i}async getCachedTensor(e,r,t,s,n,i,o=!1){let a=this.getMLContext(e);for(let[d,c]of this.freeTensors.entries())if(c.canReuseTensor(a,r,t)){Ot("verbose",()=>`[WebNN] Reusing tensor {dataType: ${r}, shape: ${t}}`);let u=this.freeTensors.splice(d,1)[0];return u.sessionId=e,u}Ot("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${r}, shape: ${t}}`);let l=await a.createTensor({dataType:r,shape:t,dimensions:t,usage:s,writable:n,readable:i});return new fu({sessionId:e,context:a,tensor:l,dataType:r,shape:t,shouldConvertInt64toInt32:o})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},ny=(...e)=>new Xf(...e)}),aa,Yf,iy,a1=Ge(()=>{Mt(),zn(),sy(),o1(),Ws(),aa=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Yf=(e,r)=>{if(e===r)return!0;if(e===void 0||r===void 0)return!1;let t=Object.keys(e).sort(),s=Object.keys(r).sort();return t.length===s.length&&t.every((n,i)=>n===s[i]&&e[n]===r[n])},iy=class{constructor(e){this.tensorManager=ny(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,Dc(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){Ot("verbose",()=>`[WebNN] onRunStart {sessionId: ${e}}`),this.activeSessionId=e}onRunEnd(e){Ot("verbose",()=>`[WebNN] onRunEnd {sessionId: ${e}}`);let r=this.temporarySessionTensorIds.get(e);if(r){for(let t of r)Ot("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex(s=>s.gpuDevice===e);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:s}),s}}else if(e===void 0){let t=this.mlContextCache.findIndex(s=>s.options===void 0&&s.gpuDevice===void 0);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:s}),s}}let r=this.mlContextCache.findIndex(t=>Yf(t.options,e));if(r!==-1)return this.mlContextCache[r].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,r){this.mlContextBySessionId.set(e,r);let t=this.sessionIdsByMLContext.get(r);t||(t=new Set,this.sessionIdsByMLContext.set(r,t)),t.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let r=this.mlContextBySessionId.get(e);if(!r)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let t=this.sessionIdsByMLContext.get(r);if(t.delete(e),t.size===0){this.sessionIdsByMLContext.delete(r);let s=this.mlContextCache.findIndex(n=>n.mlContext===r);s!==-1&&this.mlContextCache.splice(s,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){Ot("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,r,t,s,n){let i=aa.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,r,i,s,n)}async createTemporaryTensor(e,r,t){Ot("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${r}, shape: ${t}}`);let s=aa.get(r);if(!s)throw new Error(`Unsupported ONNX data type: ${r}`);let n=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,n,s,t,!1);let i=this.temporarySessionTensorIds.get(e);return i?i.push(n):this.temporarySessionTensorIds.set(e,[n]),n}uploadTensor(e,r){if(!qt().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");Ot("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${r.byteLength}}`),this.tensorManager.upload(e,r)}async downloadTensor(e,r){return this.tensorManager.download(e,r)}createMLTensorDownloader(e,r){return async()=>{let t=await this.tensorManager.download(e);return Lc(t,r)}}registerMLTensor(e,r,t,s){let n=aa.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);let i=this.tensorManager.registerTensor(e,r,n,s);return Ot("verbose",()=>`[WebNN] registerMLTensor {tensor: ${r}, dataType: ${n}, dimensions: ${s}} -> {tensorId: ${i}}`),i}registerMLConstant(e,r,t,s,n,i,o=!1){if(!i)throw new Error("External mounted files are not available.");let a=e;e.startsWith("./")&&(a=e.substring(2));let l=i.get(a);if(!l)throw new Error(`File with name ${a} not found in preloaded files.`);if(r+t>l.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let d=l.slice(r,r+t).buffer,c;switch(n.dataType){case"float32":c=new Float32Array(d);break;case"float16":c=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(d):new Uint16Array(d);break;case"int32":c=new Int32Array(d);break;case"uint32":c=new Uint32Array(d);break;case"int64":o?(c=oc(new Uint8Array(d),!1),n.dataType="int32"):c=new BigInt64Array(d);break;case"uint64":c=new BigUint64Array(d);break;case"int8":c=new Int8Array(d);break;case"int4":case"uint4":case"uint8":c=new Uint8Array(d);break;default:throw new Error(`Unsupported data type: ${n.dataType} in creating WebNN Constant from external data.`)}return Ot("verbose",()=>`[WebNN] registerMLConstant {dataType: ${n.dataType}, shape: ${n.shape}}} ${o?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),s.constant(n,c)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,r){let t=this.sessionGraphInputs.get(e);return t?t.includes(r):!1}isInt64Supported(e){return!!this.mlContextBySessionId.get(e)?.opSupportLimits().input.dataTypes.includes("int64")}flush(){}}}),Bc=Ge(()=>{}),gu,la,ua,Jf,Zf,wu,ac,e_,oy,l1=Ge(()=>{Ws(),Bc(),gu=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),la=[],ua=e=>Math.ceil(Number(e)/16)*16,Jf=e=>{for(let r=0;r<la.length;r++){let t=la[r];if(e<=t)return t}return Math.ceil(e/16)*16},Zf=1,wu=()=>Zf++,ac=async(e,r,t,s)=>{let n=ua(t),i=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(r,0,i,0,n),e.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(s){let l=s();return l.set(new Uint8Array(a,0,t)),l}else return new Uint8Array(a.slice(0,t))}finally{i.destroy()}},e_=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[r]of gu)la.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(e,r){let t=r.buffer,s=r.byteOffset,n=r.byteLength,i=ua(n),o=this.storageCache.get(e);if(!o)throw new Error("gpu data for uploading does not exist");if(Number(o.originalSize)!==n)throw new Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${n}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:i,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=a.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,s,n)),a.unmap();let d=this.backend.device.createCommandEncoder();d.copyBufferToBuffer(a,0,o.gpuData.buffer,0,i),this.backend.device.queue.submit([d.finish()]),a.destroy(),Ot("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,r){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let n=ua(t.originalSize),i=this.backend.getCommandEncoder();this.backend.endComputePass(),i.copyBufferToBuffer(t.gpuData.buffer,0,s.gpuData.buffer,0,n)}registerExternalBuffer(e,r,t){let s;if(t){if(s=t[0],e===t[1])return Ot("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else s=wu();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:e},originalSize:r}),Ot("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),Ot("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=Jf(e),s,n=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,i=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(n||i){let a=(n?this.freeBuffers:this.freeUniformBuffers).get(t);a?a.length>0?s=a.pop():s=this.backend.device.createBuffer({size:t,usage:r}):s=this.backend.device.createBuffer({size:t,usage:r})}else s=this.backend.device.createBuffer({size:t,usage:r});let o={id:wu(),type:0,buffer:s};return this.storageCache.set(o.id,{gpuData:o,originalSize:Number(e)}),Ot("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${o.id}`),o}get(e){return this.storageCache.get(e)?.gpuData}release(e){let r=typeof e=="bigint"?Number(e):e,t=this.storageCache.get(r);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return Ot("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,r){let t=this.storageCache.get(Number(e));if(!t)throw new Error("data does not exist");await ac(this.backend,t.gpuData.buffer,t.originalSize,r)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let r=gu.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let t=this.freeBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let t=this.freeUniformBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let r of this.buffersPending)e.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let r=this.capturedPendingBuffers.get(e);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(Ot("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},oy=(...e)=>new e_(...e)}),t_,zt,ur=Ge(()=>{t_=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},zt=e=>new t_(e)}),hi,ca,Cr,Rr,ht,or,lc,ci,Zs,dt,Ji,ke,ct,ay,zc,r_,ly,Ct=Ge(()=>{Mt(),Et(),hi=64,ca=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},Cr=(e,r=1)=>{let t=ca(e,r);return typeof t=="string"?t:t[0]},Rr=(e,r=1)=>{let t=ca(e,r);return typeof t=="string"?t:t[1]},ht=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:Te.computeStrides(t)})}),r},or=e=>e%4===0?4:e%2===0?2:1,lc=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,ci=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}<f32>(${t})`,Zs=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,dt=(e,r,t,s)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?s==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:s==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,Ji=(e,r,t,s,n)=>{let i=typeof t=="number",o=i?t:t.length,a=[...new Array(o).keys()],l=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,d=ca(r,n),c=typeof d=="string"?d:d[1],u=typeof d=="string"?d:d[0],p={indices:l,value:c,storage:u,tensor:r},_=N=>typeof N=="string"?N:`${N}u`,f={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},P=i?"uniforms.":"",A=`${P}${e}_shape`,y=`${P}${e}_strides`,g="";for(let N=0;N<o-1;N++)g+=`
    let dim${N} = current / ${dt(y,N,o)};
    let rest${N} = current % ${dt(y,N,o)};
    indices[${N}] = dim${N};
    current = rest${N};
    `;g+=`indices[${o-1}] = current;`;let I=o<2?"":`
  fn o2i_${e}(offset: u32) -> ${p.indices} {
    var indices: ${p.indices};
    var current = offset;
    ${g}
    return indices;
  }`,v=N=>(f.offsetToIndices=!0,o<2?N:`o2i_${e}(${N})`),T=[];if(o>=2)for(let N=o-1;N>=0;N--)T.push(`${dt(y,N,o)} * (indices[${N}])`);let x=o<2?"":`
  fn i2o_${e}(indices: ${p.indices}) -> u32 {
    return ${T.join("+")};
  }`,b=N=>(f.indicesToOffset=!0,o<2?N:`i2o_${e}(${N})`),$=(...N)=>o===0?"0u":`${p.indices}(${N.map(_).join(",")})`,j=(N,D)=>o<2?`${N}`:`${dt(N,D,o)}`,B=(N,D,Q)=>o<2?`${N}=${Q};`:`${dt(N,D,o)}=${Q};`,X={},re=(N,D)=>{f.broadcastedIndicesToOffset=!0;let Q=`${D.name}broadcastedIndicesTo${e}Offset`;if(Q in X)return`${Q}(${N})`;let U=[];for(let ae=o-1;ae>=0;ae--){let Ae=D.indicesGet("outputIndices",ae+D.rank-o);U.push(`${j(y,ae)} * (${Ae} % ${j(A,ae)})`)}return X[Q]=`fn ${Q}(outputIndices: ${D.type.indices}) -> u32 {
             return ${U.length>0?U.join("+"):"0u"};
           }`,`${Q}(${N})`},z=(N,D)=>(()=>{if(p.storage===p.value)return`${e}[${N}]=${D};`;if(p.storage==="vec2<u32>"&&p.value==="i32")return`${e}[${N}]=vec2<u32>(u32(${D}), select(0u, 0xFFFFFFFFu, ${D} < 0));`;if(p.storage==="vec2<u32>"&&p.value==="u32")return`${e}[${N}]=vec2<u32>(u32(${D}), 0u);`;if(p.storage==="u32"&&p.value==="vec4<bool>")return`${e}[${N}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${D}));`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),te=N=>(()=>{if(p.storage===p.value)return`${e}[${N}]`;if(p.storage==="vec2<u32>"&&p.value==="i32")return`i32(${e}[${N}].x)`;if(p.storage==="vec2<u32>"&&p.value==="u32")return`u32(${e}[${N}].x)`;if(p.storage==="u32"&&p.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${N}] & 0xFFu), bool(${e}[${N}] & 0xFF00u), bool(${e}[${N}] & 0xFF0000u), bool(${e}[${N}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),W=o<2?"":`
  fn get_${e}ByIndices(indices: ${p.indices}) -> ${c} {
    return ${te(`i2o_${e}(indices)`)};
  }`,K=o<2?"":(()=>{let N=a.map(Q=>`d${Q}: u32`).join(", "),D=a.map(Q=>`d${Q}`).join(", ");return`
  fn get_${e}(${N}) -> ${c} {
    return get_${e}ByIndices(${$(D)});
  }`})(),se=(...N)=>{if(N.length!==o)throw new Error(`indices length must be ${o}`);let D=N.map(_).join(",");return o===0?te("0u"):o===1?te(D[0]):(f.get=!0,f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}(${D})`)},J=N=>o<2?te(N):(f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}ByIndices(${N})`),ue=o<2?"":`
  fn set_${e}ByIndices(indices: ${p.indices}, value: ${c}) {
    ${z(`i2o_${e}(indices)`,"value")}
  }`,ce=o<2?"":(()=>{let N=a.map(Q=>`d${Q}: u32`).join(", "),D=a.map(Q=>`d${Q}`).join(", ");return`
  fn set_${e}(${N}, value: ${c}) {
    set_${e}ByIndices(${$(D)}, value);
  }`})();return{impl:()=>{let N=[],D=!1;return f.offsetToIndices&&(N.push(I),D=!0),f.indicesToOffset&&(N.push(x),D=!0),f.broadcastedIndicesToOffset&&(Object.values(X).forEach(Q=>N.push(Q)),D=!0),f.set&&(N.push(ce),D=!0),f.setByIndices&&(N.push(ue),D=!0),f.get&&(N.push(K),D=!0),f.getByIndices&&(N.push(W),D=!0),!i&&D&&N.unshift(`const ${A} = ${p.indices}(${t.join(",")});`,`const ${y} = ${p.indices}(${Te.computeStrides(t).join(",")});`),N.join(`
`)},type:p,offsetToIndices:v,indicesToOffset:b,broadcastedIndicesToOffset:re,indices:$,indicesGet:j,indicesSet:B,set:(...N)=>{if(N.length!==o+1)throw new Error(`indices length must be ${o}`);let D=N[o];if(typeof D!="string")throw new Error("value must be string");let Q=N.slice(0,o).map(_).join(",");return o===0?z("0u",D):o===1?z(Q[0],D):(f.set=!0,f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}(${Q}, ${D})`)},setByOffset:z,setByIndices:(N,D)=>o<2?z(N,D):(f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}ByIndices(${N}, ${D});`),get:se,getByOffset:te,getByIndices:J,usage:s,name:e,strides:y,shape:A,rank:o}},ke=(e,r,t,s=1)=>Ji(e,r,t,"input",s),ct=(e,r,t,s=1)=>Ji(e,r,t,"output",s),ay=(e,r,t)=>Ji(e,r,t,"atomicOutput",1),zc=(e,r,t,s=1)=>Ji(e,r,t,"internal",s),r_=class{constructor(e,r){this.normalizedDispatchGroup=e,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=hi){let r=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],s=typeof e=="number"?1:e[2];if(r>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||s>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*t*s>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let n=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,i=n?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=n?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*t*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${t}, ${s})
  fn main(${i}) {
    ${o}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,r){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",s=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${r}) var<storage, ${t}> ${e.name}: array<${s}>;`}declareVariables(...e){return e.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(e,r,t=1){return this.uniforms.push({name:e,type:r,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:r,type:t,length:s}of this.uniforms)if(s&&s>4)t==="f16"?e.push(`@align(16) ${r}:array<mat2x4<${t}>, ${Math.ceil(s/8)}>`):e.push(`${r}:array<vec4<${t}>, ${Math.ceil(s/4)}>`);else{let n=s==null||s===1?t:`vec${s}<${t}>`;e.push(`${r}:${n}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[e(r.type),r.length??1])}},ly=(e,r)=>new r_(e,r)}),s_,yu,n_,i_,o_,a_,Xr,uy,cy,en=Ge(()=>{Mt(),Et(),ur(),Ct(),s_=(e,r)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(r.length!==0&&r.length!==e[0].dims.length)throw new Error(`perm size ${r.length} does not match input rank ${e[0].dims.length}`)},yu=(e,r)=>r.length!==0?r:[...new Array(e).keys()].reverse(),n_=(e,r)=>Te.sortBasedOnPerm(e,yu(e.length,r)),i_=(e,r,t,s)=>{let n=`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`;for(let i=0;i<r;++i)n+=`a[${e[i]}]=i[${i}];`;return n+="return a;}"},o_=(e,r)=>{let t=[],s=[];for(let n=0;n<e.length;++n)e[n]!==1&&t.push(e[n]),e[r[n]]!==1&&s.push(r[n]);return{newShape:t,newPerm:s}},a_=(e,r)=>{let t=0;for(let s=0;s<e.length;++s)if(r[e[s]]!==1){if(e[s]<t)return!1;t=e[s]}return!0},Xr=(e,r)=>{let t=e.dataType,s=e.dims.length,n=yu(s,r),i=n_(e.dims,n),o=e.dims,a=i,l=s<2||a_(n,e.dims),d;if(l)return d=f=>{let P=ke("input",t,o,4),A=ct("output",t,a,4);return`
  ${f.registerUniform("output_size","u32").declareVariables(P,A)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let f=Te.size(i);return{outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64/4)},programUniforms:[{type:12,data:Math.ceil(f/4)}]}},getShaderSource:d};let{newShape:c,newPerm:u}=o_(e.dims,n),p=Te.areEqual(u,[2,3,1]),_=Te.areEqual(u,[3,1,2]);if(c.length===2||p||_){o=p?[c[0],c[1]*c[2]]:_?[c[0]*c[1],c[2]]:c,a=[o[1],o[0]];let f=16;return d=P=>{let A=ke("a",t,o.length),y=ct("output",t,a.length);return`
  ${P.registerUniform("output_size","u32").declareVariables(A,y)}
  var<workgroup> tile : array<array<${y.type.value}, ${f+1}>, ${f}>;
  ${P.mainStart([f,f,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${f} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${f}u + local_id.x;
    let input_row = workgroup_id_x * ${f}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${A.getByIndices(`${A.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${f}u + local_id.x;
    let output_row = workgroup_id_y * ${f}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${y.setByIndices(`${y.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let P=Te.size(i);return{outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(a[1]/f),y:Math.ceil(a[0]/f)},programUniforms:[{type:12,data:P},...ht(o,a)]}},getShaderSource:d}}return d=f=>{let P=ke("a",t,o.length),A=ct("output",t,a.length);return`
  ${f.registerUniform("output_size","u32").declareVariables(P,A)}

  ${i_(n,s,P,A)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${A.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${A.setByOffset("global_idx",P.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let f=Te.size(i);return{outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...ht(o,a)]}},getShaderSource:d}},uy=(e,r)=>{s_(e.inputs,r.perm),e.compute(Xr(e.inputs[0],r.perm))},cy=e=>zt({perm:e.perm})}),l_,u_,c_,d_,p_,h_,m_,f_,__,g_,ms,dy,py,hy,my,fy,_y,gy,wy,yy,My,u1=Ge(()=>{Mt(),Et(),Ct(),Rc(),en(),l_={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},u_={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},c_={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},d_={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},p_=(e,r)=>{let t=[];for(let s=r-e;s<r;++s)t.push(s);return t},h_=(e,r)=>{let t=[],s=e.length;for(let i=0;i<s;i++)r.indexOf(i)===-1&&t.push(e[i]);let n=r.map(i=>e[i]);return[t,n]},m_=(e,r)=>{let t=e.length+r.length,s=[],n=0;for(let i=0;i<t;i++)r.indexOf(i)===-1?s.push(e[n++]):s.push(1);return s},f_=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},__=(e,r)=>{let t=[];if(!f_(e,r)){for(let s=0;s<r;++s)e.indexOf(s)===-1&&t.push(s);e.forEach(s=>t.push(s))}return t},g_=(e,r,t,s,n,i,o)=>{let a=t[0].dims,l=Te.size(i),d=Te.size(o),c=ke("_A",t[0].dataType,a),u=ct("output",n,i),p=64;l===1&&(p=256);let _=`
          var<workgroup> aBestValues : array<f32, ${p}>;
       `,f=P=>`
        ${P.registerUniform("reduceSize","u32").declareVariables(c,u)}
        ${_}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${P.mainStart(p)}

          let outputIndex = global_idx / ${p};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${c_[s]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${p}) {
           let candidate = f32(${c.getByOffset("offset + k")});
           bestValue = ${l_[s]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${p}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${u_[s]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${u.setByOffset("outputIndex",`${s==="mean"?`${u.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${u.type.storage}(${d_[s]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${r};${p}`,inputDependencies:["type"]},getShaderSource:f,getRunData:()=>({outputs:[{dims:i,dataType:n}],dispatchGroup:{x:l},programUniforms:[{type:12,data:d}]})}},ms=(e,r,t,s)=>{let n=e.inputs.length===1?t:uc(e.inputs,t),i=n.axes;i.length===0&&!n.noopWithEmptyAxes&&(i=e.inputs[0].dims.map((_,f)=>f));let o=Te.normalizeAxes(i,e.inputs[0].dims.length),a=o,l=e.inputs[0],d=__(a,e.inputs[0].dims.length);d.length>0&&(l=e.compute(Xr(e.inputs[0],d),{inputs:[0],outputs:[-1]})[0],a=p_(a.length,l.dims.length));let[c,u]=h_(l.dims,a),p=c;n.keepDims&&(p=m_(c,o)),e.compute(g_(r,n.cacheKey,[l],s,e.inputs[0].dataType,p,u),{inputs:[l]})},dy=(e,r)=>{ms(e,"ReduceMeanShared",r,"mean")},py=(e,r)=>{ms(e,"ReduceL1Shared",r,"l1")},hy=(e,r)=>{ms(e,"ReduceL2Shared",r,"l2")},my=(e,r)=>{ms(e,"ReduceLogSumExpShared",r,"logSumExp")},fy=(e,r)=>{ms(e,"ReduceMaxShared",r,"max")},_y=(e,r)=>{ms(e,"ReduceMinShared",r,"min")},gy=(e,r)=>{ms(e,"ReduceProdShared",r,"prod")},wy=(e,r)=>{ms(e,"ReduceSumShared",r,"sum")},yy=(e,r)=>{ms(e,"ReduceSumSquareShared",r,"sumSquare")},My=(e,r)=>{ms(e,"ReduceLogSumShared",r,"logSum")}}),fs,w_,$a,uc,_s,y_,M_,b_,v_,x_,T_,E_,P_,C_,S_,gs,by,vy,xy,Ty,Ey,Py,Cy,Sy,$y,Iy,Rc=Ge(()=>{Mt(),Et(),ur(),Ct(),u1(),fs=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},w_=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],$a=(e,r,t,s,n,i,o=!1,a=!1)=>{let l=[],d=t[0].dims,c=d.length,u=Te.normalizeAxes(n,c),p=!a&&u.length===0;d.forEach((P,A)=>{p||u.indexOf(A)>=0?o&&l.push(1):l.push(P)});let _=l.length,f=Te.size(l);return{name:e,shaderCache:r,getShaderSource:P=>{let A=[],y=ke("_A",t[0].dataType,c),g=ct("output",i,_),I=s(y,g,u),v=I[2];for(let T=0,x=0;T<c;T++)p||u.indexOf(T)>=0?(o&&x++,v=`for(var j${T}: u32 = 0; j${T} < ${d[T]}; j${T}++) {
                  ${I[2].includes("last_index")?`let last_index = j${T};`:""}
                  ${y.indicesSet("input_indices",T,`j${T}`)}
                  ${v}
                }`):(A.push(`${y.indicesSet("input_indices",T,g.indicesGet("output_indices",x))};`),x++);return`

        ${P.registerUniform("output_size","u32").declareVariables(y,g)}

        ${P.mainStart()}
          ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${y.type.indices};
          let output_indices = ${g.offsetToIndices("global_idx")};

          ${A.join(`
`)}
          ${I[0]}       // init ops for reduce max/min
          ${I[1]}
          ${v}
          ${I[3]}
          ${I.length===4?g.setByOffset("global_idx","value"):I.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:i}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...ht(d,l)]})}},uc=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),zt({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},_s=(e,r,t,s)=>{let n=e.inputs,i=n.length===1?t:uc(n,t);e.compute($a(r,{hint:i.cacheKey,inputDependencies:["rank"]},[n[0]],i.noopWithEmptyAxes&&i.axes.length===0?w_:s,i.axes,n[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},y_=(e,r)=>{fs(e.inputs),_s(e,"ReduceLogSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},M_=(e,r)=>{fs(e.inputs),_s(e,"ReduceL1",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},b_=(e,r)=>{fs(e.inputs),_s(e,"ReduceL2",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},v_=(e,r)=>{fs(e.inputs),_s(e,"ReduceLogSumExp",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},x_=(e,r)=>{fs(e.inputs),_s(e,"ReduceMax",r,(t,s,n)=>{let i=[];for(let o=0;o<t.rank;o++)(n.indexOf(o)>=0||n.length===0)&&i.push(t.indicesSet("input_indices",o,0));return[`${i.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},T_=(e,r)=>{fs(e.inputs),_s(e,"ReduceMean",r,(t,s,n)=>{let i=1;for(let o=0;o<t.rank;o++)(n.indexOf(o)>=0||n.length===0)&&(i*=e.inputs[0].dims[o]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${i});`]})},E_=(e,r)=>{fs(e.inputs),_s(e,"ReduceMin",r,(t,s,n)=>{let i=[];for(let o=0;o<t.rank;o++)(n.indexOf(o)>=0||n.length===0)&&i.push(`input_indices[${o}] = 0;`);return[`${i.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},P_=(e,r)=>{fs(e.inputs),_s(e,"ReduceProd",r,(t,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},C_=(e,r)=>{fs(e.inputs),_s(e,"ReduceSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},S_=(e,r)=>{fs(e.inputs),_s(e,"ReduceSumSquare",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},gs=(e,r,t)=>{if(r.length===0)return t;let s=1,n=1;for(let i=0;i<r.length;i++)r.indexOf(i)===-1?s*=e[i]:n*=e[i];return n<32&&s>1024},by=(e,r)=>{gs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?T_(e,r):dy(e,r)},vy=(e,r)=>{gs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?M_(e,r):py(e,r)},xy=(e,r)=>{gs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?b_(e,r):hy(e,r)},Ty=(e,r)=>{gs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?v_(e,r):my(e,r)},Ey=(e,r)=>{gs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?x_(e,r):fy(e,r)},Py=(e,r)=>{gs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?E_(e,r):_y(e,r)},Cy=(e,r)=>{gs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?P_(e,r):gy(e,r)},Sy=(e,r)=>{gs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?C_(e,r):wy(e,r)},$y=(e,r)=>{gs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?S_(e,r):yy(e,r)},Iy=(e,r)=>{gs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?y_(e,r):My(e,r)}}),Mu,ky,Ay,cc,c1=Ge(()=>{Mt(),ur(),Rc(),Mu=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},ky=(e,r)=>{Mu(e.inputs);let t=(s,n,i)=>{let o=[];for(let a=0;a<s.rank;a++)(i.indexOf(a)>=0||i.length===0)&&o.push(`input_indices[${a}] = 0;`);return[`${o.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",n.setByOffset("global_idx","best_index")]};e.compute($a("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Ay=(e,r)=>{Mu(e.inputs);let t=(s,n,i)=>{let o=[];for(let a=0;a<s.rank;a++)(i.indexOf(a)>=0||i.length===0)&&o.push(`input_indices[${a}] = 0;`);return[`${o.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",n.setByOffset("global_idx","best_index")]};e.compute($a("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},cc=e=>zt(e)}),$_,da,I_,k_,A_,fo,F_,Fy,jc=Ge(()=>{Mt(),Et(),Bc(),Ct(),$_=(e,r)=>{let t=e[0],s=e[1],n=e[2],i=e[3],o=e[4],a=e[5];if(o&&a)throw new Error("Attention cannot have both past and attention_bias");if(t.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=t.dims[0],d=t.dims[1],c=t.dims[2];if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(s.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(s.dims[0]!==c)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(n.dims[0]!==s.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let u=n.dims[0]/3,p=u,_=p;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let I of r.qkvHiddenSizes)if(I%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");u=r.qkvHiddenSizes[0],p=r.qkvHiddenSizes[1],_=r.qkvHiddenSizes[2]}let f=d;if(u!==p)throw new Error("qkv_hidden_sizes first element should be same as the second");if(n.dims[0]!==u+p+_)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let P=0;if(o){if(p!==_)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(o.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(o.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==r.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==p/r.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(P=o.dims[3])}let A=f+P,y=-1,g=0;if(i)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(a){if(a.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(a.dims[0]!==l||a.dims[1]!==r.numHeads||a.dims[2]!==d||a.dims[3]!==A)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:d,pastSequenceLength:P,kvSequenceLength:f,totalSequenceLength:A,maxSequenceLength:y,inputHiddenSize:c,hiddenSize:u,vHiddenSize:_,headSize:Math.floor(u/r.numHeads),vHeadSize:Math.floor(_/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:g,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},da=(e,r,t)=>r&&e?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e?.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${t?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,I_=(e,r,t,s,n,i,o,a)=>{let l=or(o?1:i),d=64,c=i/l;c<d&&(d=32);let u=Math.ceil(i/l/d),p=[{type:12,data:r},{type:12,data:t},{type:12,data:s},{type:12,data:n},{type:12,data:c},{type:12,data:u}],_=Cr(e.dataType,l),f=Rr(1,l),P=["type"];o&&P.push("type"),a&&P.push("type");let A=y=>{let g=ct("x",e.dataType,e.dims,l),I=[g],v=o?ke("seq_lens",o.dataType,o.dims):void 0;v&&I.push(v);let T=a?ke("total_sequence_length_input",a.dataType,a.dims):void 0;T&&I.push(T);let x=Rr(e.dataType),b=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${d}>;
  var<workgroup> thread_sum: array<f32, ${d}>;
  ${y.registerUniforms(b).declareVariables(...I)}
  ${y.mainStart([d,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${da(v,T,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${d}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${o?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${f}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${f}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${d}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${f}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${f}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${d}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${g.type.value}(${x}(1.0) / ${x}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${f}(x[offset + i]);
        x[offset + i] = ${g.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${o?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${g.type.value}(${x}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${d};${_};${l}`,inputDependencies:P},getShaderSource:A,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:n,z:r*t},programUniforms:p})}},k_=(e,r,t,s,n,i,o,a,l)=>{let d=o+i.kvSequenceLength,c=[i.batchSize,i.numHeads,i.sequenceLength,d],u=e>1&&s,p=i.kvNumHeads?i.kvNumHeads:i.numHeads,_=u?[i.batchSize,p,d,i.headSize]:void 0,f=i.nReps?i.nReps:1,P=i.scale===0?1/Math.sqrt(i.headSize):i.scale,A=or(i.headSize),y=i.headSize/A,g=12,I={x:Math.ceil(d/g),y:Math.ceil(i.sequenceLength/g),z:i.batchSize*i.numHeads},v=[{type:12,data:i.sequenceLength},{type:12,data:y},{type:12,data:d},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:1,data:P},{type:12,data:o},{type:12,data:i.kvSequenceLength},{type:12,data:f}],T=u&&s&&Te.size(s.dims)>0,x=["type","type"];T&&x.push("type"),n&&x.push("type"),a&&x.push("type"),l&&x.push("type");let b=[{dims:c,dataType:r.dataType,gpuDataType:0}];u&&b.push({dims:_,dataType:r.dataType,gpuDataType:0});let $=j=>{let B=ke("q",r.dataType,r.dims,A),X=ke("key",t.dataType,t.dims,A),re=[B,X];if(T){let ue=ke("past_key",s.dataType,s.dims,A);re.push(ue)}n&&re.push(ke("attention_bias",n.dataType,n.dims));let z=a?ke("seq_lens",a.dataType,a.dims):void 0;z&&re.push(z);let te=l?ke("total_sequence_length_input",l.dataType,l.dims):void 0;te&&re.push(te);let W=ct("output",r.dataType,c),K=[W];u&&K.push(ct("present_key",r.dataType,_,A));let se=Rr(1,A),J=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${g}u;

  var<workgroup> tileQ: array<${B.type.storage}, ${g*g}>;
  var<workgroup> tileK: array<${B.type.storage}, ${g*g}>;
  ${j.registerUniforms(J).declareVariables(...re,...K)}
  ${j.mainStart([g,g,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${f===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${f===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${da(z,te,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${T&&u?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${u?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${se}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${T&&u?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${u?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${se}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(A){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${A}`)}})()};
        output[outputIdx] = ${W.type.value} (sum * uniforms.alpha) + ${n?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${A};${n!==void 0};${s!==void 0};${e}`,inputDependencies:x},getRunData:()=>({outputs:b,dispatchGroup:I,programUniforms:v}),getShaderSource:$}},A_=(e,r,t,s,n,i,o=void 0,a=void 0)=>{let l=i+n.kvSequenceLength,d=n.nReps?n.nReps:1,c=n.vHiddenSize*d,u=e>1&&s,p=n.kvNumHeads?n.kvNumHeads:n.numHeads,_=u?[n.batchSize,p,l,n.headSize]:void 0,f=[n.batchSize,n.sequenceLength,c],P=12,A={x:Math.ceil(n.vHeadSize/P),y:Math.ceil(n.sequenceLength/P),z:n.batchSize*n.numHeads},y=[{type:12,data:n.sequenceLength},{type:12,data:l},{type:12,data:n.vHeadSize},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:12,data:c},{type:12,data:i},{type:12,data:n.kvSequenceLength},{type:12,data:d}],g=u&&s&&Te.size(s.dims)>0,I=["type","type"];g&&I.push("type"),o&&I.push("type"),a&&I.push("type");let v=[{dims:f,dataType:r.dataType,gpuDataType:0}];u&&v.push({dims:_,dataType:r.dataType,gpuDataType:0});let T=x=>{let b=ke("probs",r.dataType,r.dims),$=ke("v",t.dataType,t.dims),j=[b,$];g&&j.push(ke("past_value",s.dataType,s.dims));let B=o?ke("seq_lens",o.dataType,o.dims):void 0;o&&j.push(B);let X=a?ke("total_sequence_length_input",a.dataType,a.dims):void 0;a&&j.push(X);let re=[ct("output",r.dataType,f)];u&&re.push(ct("present_value",r.dataType,_));let z=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${P}u;
  var<workgroup> tileQ: array<${b.type.value}, ${P*P}>;
  var<workgroup> tileV: array<${b.type.value}, ${P*P}>;
  ${x.registerUniforms(z).declareVariables(...j,...re)}
  ${x.mainStart([P,P,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${d===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${d===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${da(B,X,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${g&&u?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${u?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${b.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${g&&u?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${u?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${s!==void 0};${e}`,inputDependencies:I},getRunData:()=>({outputs:v,dispatchGroup:A,programUniforms:y}),getShaderSource:T}},fo=(e,r,t,s,n,i,o,a,l,d,c=void 0,u=void 0)=>{let p=Math.min(e.outputCount,1+(o?1:0)+(a?1:0)),_=p>1?d.pastSequenceLength:0,f=_+d.kvSequenceLength,P=l&&Te.size(l.dims)>0?l:void 0,A=[r,t];p>1&&o&&Te.size(o.dims)>0&&A.push(o),P&&A.push(P),c&&A.push(c),u&&A.push(u);let y=e.compute(k_(p,r,t,o,P,d,_,c,u),{inputs:A,outputs:p>1?[-1,1]:[-1]})[0];e.compute(I_(y,d.batchSize,d.numHeads,_,d.sequenceLength,f,c,u),{inputs:c&&u?[y,c,u]:[y],outputs:[]});let g=[y,s];p>1&&a&&Te.size(a.dims)>0&&g.push(a),c&&g.push(c),u&&g.push(u),e.compute(A_(p,y,s,a,d,_,c,u),{inputs:g,outputs:p>1?[0,2]:[0]})},F_=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],s=r.sequenceLength,n=r.inputHiddenSize,i=r.headSize,o=12,a={x:Math.ceil(r.headSize/o),y:Math.ceil(r.sequenceLength/o),z:r.batchSize*r.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],d=[{type:12,data:s},{type:12,data:n},{type:12,data:i},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],c=u=>{let p=ct("output_q",l[0].dataType,t),_=ct("output_k",l[0].dataType,t),f=ct("output_v",l[0].dataType,t),P=ke("input",l[0].dataType,l[0].dims),A=ke("weight",l[1].dataType,l[1].dims),y=ke("bias",l[2].dataType,l[2].dims),g=P.type.storage,I=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileInput: array<${g}, ${o*o}>;
  var<workgroup> tileWeightQ: array<${g}, ${o*o}>;
  var<workgroup> tileWeightK: array<${g}, ${o*o}>;
  var<workgroup> tileWeightV: array<${g}, ${o*o}>;
  ${u.registerUniforms(I).declareVariables(P,A,y,p,_,f)}
  ${u.mainStart([o,o,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${g}(0);
    var valueK = ${g}(0);
    var valueV = ${g}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:d}),getShaderSource:c},{inputs:l,outputs:[-1,-1,-1]})},Fy=(e,r)=>{let t=$_(e.inputs,r),[s,n,i]=F_(e,t);return fo(e,s,n,i,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t)}}),O_,D_,L_,Oy,d1=Ge(()=>{xs(),Mt(),Et(),ur(),Ct(),O_=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(s,n,i)=>{let o=n.length;if(o!==s.length)throw new Error(`${i}: num dimensions != ${o}`);n.forEach((a,l)=>{if(a!==s[l])throw new Error(`${i}: dim[${l}] do not match`)})};if(e[0].dims.length>1){let s=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,s,"Invalid input scale"),t(e[2].dims,s,"Invalid input B"),t(e[3].dims,s,"Invalid input mean"),t(e[4].dims,s,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},D_=(e,r)=>{let{epsilon:t,spatial:s,format:n}=r,i=e[0].dims,o=s?or(i[i.length-1]):1,a=n==="NHWC"&&i.length>1?o:1,l=Te.size(i)/o,d=s,c=d?i.length:i,u=ke("x",e[0].dataType,e[0].dims,o),p=ke("scale",e[1].dataType,e[1].dims,a),_=ke("bias",e[2].dataType,e[2].dims,a),f=ke("inputMean",e[3].dataType,e[3].dims,a),P=ke("inputVar",e[4].dataType,e[4].dims,a),A=ct("y",e[0].dataType,c,o),y=()=>{let I="";if(s)I=`let cOffset = ${i.length===1?"0u":n==="NHWC"?`outputIndices[${i.length-1}] / ${o}`:"outputIndices[1]"};`;else if(n==="NCHW")I=`
            ${A.indicesSet("outputIndices","0","0")}
            let cOffset = ${A.indicesToOffset("outputIndices")};`;else{I=`var cIndices = ${p.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let v=1;v<p.rank;v++)I+=`cIndices[${v}] = outputIndices[${v}];`;I+=`let cOffset = ${p.indicesToOffset("cIndices")};`}return I},g=I=>`
  const epsilon = ${t};
  ${I.registerUniform("outputSize","u32").declareVariables(u,p,_,f,P,A)}
  ${I.mainStart()}
  ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${A.offsetToIndices(`global_idx * ${o}`)};
    ${y()}
    let scale = ${p.getByOffset("cOffset")};
    let bias = ${_.getByOffset("cOffset")};
    let inputMean = ${f.getByOffset("cOffset")};
    let inputVar = ${P.getByOffset("cOffset")};
    let x = ${u.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${A.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${s}_${o}`,inputDependencies:d?["rank","type","type","type","type"]:void 0},getShaderSource:g,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d?[{type:12,data:l},...ht(i)]:[{type:12,data:l}]})}},L_=e=>zt(e),Oy=(e,r)=>{let{inputs:t,outputCount:s}=e,n=L_({...r,outputCount:s});if(Xt.webgpu.validateInputContent&&O_(t,n),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(D_(t,n))}}),B_,z_,Dy,p1=Ge(()=>{Et(),Ct(),B_=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},z_=e=>{let r=e[0].dims,t=e[0].dims[2],s=Te.size(r)/4,n=e[0].dataType,i=ke("input",n,r,4),o=ke("bias",n,[t],4),a=ke("residual",n,r,4),l=ct("output",n,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:d=>`
  const channels = ${t}u / 4;
  ${d.declareVariables(i,o,a,l)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let value = ${i.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},Dy=e=>{B_(e.inputs),e.compute(z_(e.inputs))}}),R_,Lt,Ly,By,zy,Ry,jy,Ny,Uy,Vy,Wy,j_,Gy,Ky,Hy,qy,lo,Qy,xa,Xy,Yy,Jy,Zy,eM,tM,rM,sM,nM,iM,oM,aM,lM,uM,cM,dM,bu,pM,dc,pc,hM,mM,fM,N_,U_,_M,Nc=Ge(()=>{Mt(),Et(),ur(),Ct(),R_=(e,r,t,s,n,i,o)=>{let a=Math.ceil(r/4),l="";typeof n=="string"?l=`${n}(a)`:l=n("a");let d=ke("inputData",t,[a],4),c=ct("outputData",s,[a],4),u=[{name:"vec_size",type:"u32"}];return o&&u.push(...o),`
      ${e.registerUniforms(u).declareVariables(d,c)}

  ${i??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${d.getByOffset("global_idx")};
    ${c.setByOffset("global_idx",l)}
  }`},Lt=(e,r,t,s,n,i=e.dataType,o,a)=>{let l=[{type:12,data:Math.ceil(Te.size(e.dims)/4)}];return o&&l.push(...o),{name:r,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:d=>R_(d,Te.size(e.dims),e.dataType,i,t,s,a),getRunData:d=>({outputs:[{dims:e.dims,dataType:i}],dispatchGroup:{x:Math.ceil(Te.size(d[0].dims)/64/4)},programUniforms:l})}},Ly=e=>{e.compute(Lt(e.inputs[0],"Abs","abs"))},By=e=>{e.compute(Lt(e.inputs[0],"Acos","acos"))},zy=e=>{e.compute(Lt(e.inputs[0],"Acosh","acosh"))},Ry=e=>{e.compute(Lt(e.inputs[0],"Asin","asin"))},jy=e=>{e.compute(Lt(e.inputs[0],"Asinh","asinh"))},Ny=e=>{e.compute(Lt(e.inputs[0],"Atan","atan"))},Uy=e=>{e.compute(Lt(e.inputs[0],"Atanh","atanh"))},Vy=e=>zt(e),Wy=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}e.compute(Lt(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},j_=e=>{let r,t,s=e.length>=2&&e[1].data!==0,n=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:r=s?e[1].getFloat32Array()[0]:-34028234663852886e22,t=n?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=s?e[1].getUint16Array()[0]:64511,t=n?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return zt({min:r,max:t})},Gy=(e,r)=>{let t=r||j_(e.inputs),s=Rr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"Clip",n=>`clamp(${n}, vec4<${s}>(uniforms.min), vec4<${s}>(uniforms.max))`,void 0,t.cacheKey,void 0,[{type:e.inputs[0].dataType,data:t.min},{type:e.inputs[0].dataType,data:t.max}],[{name:"min",type:s},{name:"max",type:s}]),{inputs:[0]})},Ky=e=>{e.compute(Lt(e.inputs[0],"Ceil","ceil"))},Hy=e=>{e.compute(Lt(e.inputs[0],"Cos","cos"))},qy=e=>{e.compute(Lt(e.inputs[0],"Cosh","cosh"))},lo=e=>zt(e),Qy=(e,r)=>{let t=Rr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`
  const elu_alpha_ = ${t}(${r.alpha});

  fn elu_f32(a: ${t}) -> ${t} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},xa=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Xy=e=>{let r=Rr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,xa(r)))},Yy=e=>{e.compute(Lt(e.inputs[0],"Exp","exp"))},Jy=e=>{e.compute(Lt(e.inputs[0],"Floor","floor"))},Zy=e=>{let r=Rr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,xa(r)))},eM=(e,r)=>{let t=Rr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},tM=e=>{e.compute(Lt(e.inputs[0],"Not",r=>`!${r}`))},rM=e=>{e.compute(Lt(e.inputs[0],"Neg",r=>`-${r}`))},sM=e=>{e.compute(Lt(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},nM=e=>{let r=Rr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},iM=e=>{e.compute(Lt(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},oM=e=>zt(e),aM=(e,r)=>{let t=Rr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"HardSigmoid",s=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${s} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},lM=e=>{e.compute(Lt(e.inputs[0],"Sin","sin"))},uM=e=>{e.compute(Lt(e.inputs[0],"Sinh","sinh"))},cM=e=>{e.compute(Lt(e.inputs[0],"Sqrt","sqrt"))},dM=e=>{e.compute(Lt(e.inputs[0],"Tan","tan"))},bu=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,pM=e=>{e.compute(Lt(e.inputs[0],"Tanh",bu))},dc=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${bu("v")};
}
`,pc=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,hM=e=>{let r=Rr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"FastGelu",pc,dc(r),void 0,e.inputs[0].dataType))},mM=(e,r)=>{let t=Rr(e.inputs[0].dataType);return e.compute(Lt(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},fM=e=>{e.compute(Lt(e.inputs[0],"Log","log"))},N_=(e,r)=>`
const alpha = vec4<${e}>(${r});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,U_=e=>`quick_gelu_impl(${e})`,_M=(e,r)=>{let t=Rr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"QuickGelu",U_,N_(t,r.alpha),r.cacheKey,e.inputs[0].dataType))}}),V_,W_,gM,h1=Ge(()=>{Et(),Ct(),Nc(),V_=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},W_=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=ke("input",e[0].dataType,e[0].dims,4),s=ke("bias",e[0].dataType,[e[0].dims[2]],4),n=ct("output",e[0].dataType,r,4),i=Te.size(r)/4,o=Cr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:a=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${a.declareVariables(t,s,n)}

  ${xa(o)}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${n.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},gM=e=>{V_(e.inputs),e.compute(W_(e.inputs))}}),G_,K_,ws,wM,yM,MM,bM,vM,xM,TM,EM,PM,CM,m1=Ge(()=>{Mt(),Et(),Ct(),G_=(e,r,t,s,n,i,o,a,l,d,c,u)=>{let p,_;typeof a=="string"?p=_=(g,I)=>`${a}((${g}),(${I}))`:typeof a=="function"?p=_=a:(p=a.scalar,_=a.vector);let f=ct("outputData",c,s.length,4),P=ke("aData",l,r.length,4),A=ke("bData",d,t.length,4),y;if(n)if(i){let g=Te.size(r)===1,I=Te.size(t)===1,v=r.length>0&&r[r.length-1]%4===0,T=t.length>0&&t[t.length-1]%4===0;g||I?y=f.setByOffset("global_idx",_(g?`${P.type.value}(${P.getByOffset("0")}.x)`:P.getByOffset("global_idx"),I?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"))):y=`
            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};
            let offsetA = ${P.broadcastedIndicesToOffset("outputIndices",f)};
            let offsetB = ${A.broadcastedIndicesToOffset("outputIndices",f)};
            ${f.setByOffset("global_idx",_(o||v?P.getByOffset("offsetA / 4u"):`${P.type.value}(${P.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||T?A.getByOffset("offsetB / 4u"):`${A.type.value}(${A.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else y=f.setByOffset("global_idx",_(P.getByOffset("global_idx"),A.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let g=(I,v,T="")=>{let x=`aData[indexA${v}][componentA${v}]`,b=`bData[indexB${v}][componentB${v}]`;return`
            let outputIndices${v} = ${f.offsetToIndices(`global_idx * 4u + ${v}u`)};
            let offsetA${v} = ${P.broadcastedIndicesToOffset(`outputIndices${v}`,f)};
            let offsetB${v} = ${A.broadcastedIndicesToOffset(`outputIndices${v}`,f)};
            let indexA${v} = offsetA${v} / 4u;
            let indexB${v} = offsetB${v} / 4u;
            let componentA${v} = offsetA${v} % 4u;
            let componentB${v} = offsetB${v} % 4u;
            ${I}[${v}] = ${T}(${p(x,b)});
          `};c===9?y=`
            var data = vec4<u32>(0);
            ${g("data",0,"u32")}
            ${g("data",1,"u32")}
            ${g("data",2,"u32")}
            ${g("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:y=`
            ${g("outputData[global_idx]",0)}
            ${g("outputData[global_idx]",1)}
            ${g("outputData[global_idx]",2)}
            ${g("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(P,A,f)}

        ${u??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${y}
      }`},K_=(e,r,t,s,n,i,o=t.dataType)=>{let a=t.dims.map(P=>Number(P)??1),l=s.dims.map(P=>Number(P)??1),d=!Te.areEqual(a,l),c=a,u=Te.size(a),p=!1,_=!1,f=[d];if(d){let P=pi.calcShape(a,l,!1);if(!P)throw new Error("Can't perform binary op on the given tensors");c=P.slice(),u=Te.size(c);let A=Te.size(a)===1,y=Te.size(l)===1,g=a.length>0&&a[a.length-1]%4===0,I=l.length>0&&l[l.length-1]%4===0;f.push(A),f.push(y),f.push(g),f.push(I);let v=1;for(let T=1;T<c.length;T++){let x=a[a.length-T],b=l[l.length-T];if(x===b)v*=x;else break}v%4===0?(_=!0,p=!0):(A||y||g||I)&&(p=!0)}else p=!0;return f.push(p),{name:e,shaderCache:{hint:r+f.map(P=>P.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:P=>G_(P,a,l,c,p,d,_,n,t.dataType,s.dataType,o,i),getRunData:()=>({outputs:[{dims:c,dataType:o}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:Math.ceil(Te.size(c)/4)},...ht(a,l,c)]})}},ws=(e,r,t,s,n,i)=>{e.compute(K_(r,n??"",e.inputs[0],e.inputs[1],t,s,i))},wM=e=>{ws(e,"Add",(r,t)=>`${r}+${t}`)},yM=e=>{ws(e,"Div",(r,t)=>`${r}/${t}`)},MM=e=>{ws(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},bM=e=>{ws(e,"Mul",(r,t)=>`${r}*${t}`)},vM=e=>{let r=ke("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;ws(e,"Pow",{scalar:(t,s)=>`pow_custom(${t},${s})`,vector:(t,s)=>`pow_vector_custom(${t},${s})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},xM=e=>{ws(e,"Sub",(r,t)=>`${r}-${t}`)},TM=e=>{ws(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},EM=e=>{ws(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},PM=e=>{ws(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},CM=e=>{ws(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}}),H_,q_,Q_,X_,SM,$M,f1=Ge(()=>{Mt(),Et(),ur(),Ct(),H_=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,s=e[t],n=s.dataType,i=s.dims.length;e.forEach((o,a)=>{if(a!==t){if(o.dataType!==n)throw new Error("input tensors should be one type");if(o.dims.length!==i)throw new Error("input tensors should have the same shape");o.dims.forEach((l,d)=>{if(d!==r&&l!==s.dims[d])throw new Error("non concat dimensions must match")})}})},q_=(e,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${r});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,Q_=(e,r)=>{let t=e.length,s=[];for(let n=0;n<t;++n){let i=r.setByOffset("global_idx",e[n].getByIndices("indices"));t===1?s.push(i):n===0?s.push(`if (inputIndex == ${n}u) { ${i} }`):n===t-1?s.push(`else { ${i} }`):s.push(`else if (inputIndex == ${n}) { ${i} }`)}return s.join(`
`)},X_=(e,r,t,s)=>{let n=Te.size(t),i=new Array(e.length),o=new Array(e.length),a=0,l=[],d=[],c=[{type:12,data:n}];for(let P=0;P<e.length;++P)a+=e[P].dims[r],i[P]=a,d.push(e[P].dims.length),o[P]=ke(`input${P}`,s,d[P]),l.push("rank"),c.push({type:12,data:i[P]});for(let P=0;P<e.length;++P)c.push(...ht(e[P].dims));c.push(...ht(t));let u=ct("output",s,t.length),p=u.indicesGet("indices",r),_=Array.from(Array(i.length).keys()).map(P=>`uniforms.sizeInConcatAxis${P}`).join(","),f=P=>`

  ${(()=>{P.registerUniform("outputSize","u32");for(let A=0;A<e.length;A++)P.registerUniform(`sizeInConcatAxis${A}`,"u32");return P.declareVariables(...o,u)})()}

  ${q_(i.length,_)}

  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${u.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${p});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${i.length}u>(${_});
      ${p} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Q_(o,u)}
  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:t,dataType:s}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:c}),getShaderSource:f}},SM=(e,r)=>{let t=e.inputs,s=t[0].dims,n=Te.normalizeAxis(r.axis,s.length);H_(t,n);let i=s.slice();i[n]=t.reduce((a,l)=>a+(l.dims.length>n?l.dims[n]:0),0);let o=t.filter(a=>Te.size(a.dims)>0);e.compute(X_(o,n,i,t[0].dataType),{inputs:o})},$M=e=>zt({axis:e.axis})}),Dn,Ln,Bn,Uc,Rn=Ge(()=>{Mt(),Et(),Dn=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Ln=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},Bn=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},Uc=e=>{let r=e?.activation||"";if(r==="HardSigmoid"){let[t,s]=e?.activation_params||[.2,.5];return{activation:r,alpha:t,beta:s}}else if(r==="Clip"){let[t,s]=e?.activation_params||[ty,ry];return{activation:r,clipMax:s,clipMin:t}}else if(r==="LeakyRelu"){let[t]=e?.activation_params||[.01];return{activation:r,alpha:t}}return{activation:r}}}),Ar,IM,Vc=Ge(()=>{Ar=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},IM=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),kM,_1=Ge(()=>{kM=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),co,Wc,Gc=Ge(()=>{Mt(),Et(),Ct(),Rn(),co=(e,r,t,s,n)=>{let i=s-t;return`
      ${Array.from({length:t}).map((o,a)=>`
      if (${dt(r.shape,a,r.rank)} != 1) {
        ${r.indicesSet(e,a,dt(n,a+i,s))}
      } else {
        ${r.indicesSet(e,a,0)}
      }`).join("")}
`},Wc=(e,r,t,s,n=!1,i)=>{let o=e[0].dims,a=e[1].dims,l=o[o.length-2],d=a[a.length-1],c=o[o.length-1],u=or(d),p=or(c),_=or(l),f=Te.size(t)/u/_,P=e.length>2,A=s?s.slice(0,-2):t.slice(0,-2),y=[Te.size(A),l,d],g=[{type:12,data:f},{type:12,data:l},{type:12,data:d},{type:12,data:c}];Ln(r,g),g.push(...ht(A,o,a)),P&&g.push(...ht(e[2].dims)),g.push(...ht(y));let I=v=>{let T=zc("batch_dims",e[0].dataType,A.length),x=ke("a",e[0].dataType,o.length,p),b=ke("b",e[1].dataType,a.length,u),$=ct("output",e[0].dataType,y.length,u),j=Cr($.type.tensor),B=Dn(r,$.type.value,j),X=[x,b],re="";if(P){let W=n?u:1;X.push(ke("bias",e[2].dataType,e[2].dims.length,W)),re=`${n?`value += bias[col / ${W}];`:`value += ${$.type.value}(bias[row + i]);`}`}let z=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Bn(r,z);let te=()=>{let W=`var a_data: ${x.type.value};`;for(let K=0;K<p;K++)W+=`
              let b_data${K} = b[(b_offset + (k + ${K}) * uniforms.N + col) / ${u}];`;for(let K=0;K<_;K++){W+=`a_data = a[(a_offset + (row + ${K}) * uniforms.K + k) / ${p}];`;for(let se=0;se<p;se++)W+=`
            values[${K}] = fma(${b.type.value}(a_data${p===1?"":`[${se}]`}), b_data${se}, values[${K}]);
`}return W};return`
  ${v.registerUniforms(z).registerInternalVariables(T).declareVariables(...X,$)}
  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${u})) * ${u};
    var index1 = global_idx / (uniforms.N / ${u});
    let stride1 = uniforms.M / ${_};
    let row = (index1 % stride1) * ${_};
    let batch = index1 / stride1;

    ${t.length===2?"":`let batch_indices = ${T.offsetToIndices("batch")};`}

    var a_indices: ${x.type.indices};
    ${co("a_indices",x,x.rank-2,T.rank,"batch_indices")}
    ${x.indicesSet("a_indices",x.rank-2,0)}
    ${x.indicesSet("a_indices",x.rank-1,0)}
    let a_offset = ${x.indicesToOffset("a_indices")};

    var b_indices: ${b.type.indices};
    ${co("b_indices",b,b.rank-2,T.rank,"batch_indices")}
    ${b.indicesSet("b_indices",b.rank-2,0)}
    ${b.indicesSet("b_indices",b.rank-1,0)}
    let b_offset = ${b.indicesToOffset("b_indices")};
    var values: array<${$.type.value}, ${_}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${p}) {
      ${te()}
    }
    for (var i = 0u; i < ${_}u; i++) {
      var value = values[i];
      ${re}
      ${B}
      let cur_indices = ${$.type.indices}(batch, row + i, col);
      let offset = ${$.indicesToOffset("cur_indices")};
      ${$.setByOffset(`offset / ${u}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${u};${p};${_};${n}`,inputDependencies:P?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i?i(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:g}),getShaderSource:I}}}),Y_,J_,hc,vu,Z_,mc,eg,Ia,Kc=Ge(()=>{Mt(),Et(),Ct(),Rn(),Gc(),Vc(),Y_=(e,r)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,J_=(e,r)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,hc=(e,r,t="f32",s,n=!1,i=32,o=!1,a=32)=>{let l=r[1]*e[1],d=r[0]*e[0],c=n?l:i,u=n?i:l,p=c/r[0],_=i/r[1];if(!((n&&p===4&&e[1]===4||!n&&(p===3||p===4))&&c%r[0]===0&&i%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${p} must be 3 or 4.
  tileAWidth ${c} must be divisible by workgroupSize[0]${r[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${p}<${t}>, ${c/p}>, ${u}>;
var<workgroup> mm_Bsub: array<array<vec4<${t}>, ${d/e[0]}>, ${i}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${p};
const tileInner = ${i};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${o?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${t}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${_};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Y_(n,s)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${p===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${J_(n,p)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},vu=(e,r)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,Z_=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",mc=(e,r,t="f32",s,n=!1,i=32,o=!1,a=32,l=!1)=>{let d=e[1]*r[1],c=e[0]*r[0],u=n?d:i,p=n?i:d;if(!(p%r[1]===0&&u%r[0]===0&&i%r[1]===0))throw new Error(`tileAHight ${p} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${u} must be divisible by workgroupSize[0]${r[0]}, tileInner ${i} must be divisible by workgroupSize[1]${r[1]}`);let _=p/r[1],f=u/r[0],P=i/r[1],A=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${d};
    let globalColStart = i32(workgroupId.x) * ${c};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${r[0]}) {
          ${vu(n,s)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${s?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${t}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${d};

let tileRowA = i32(localId.y) * ${_};
let tileColA = i32(localId.x) * ${f};
let tileRowB = i32(localId.y) * ${P};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${vu(n,s)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${P}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${s?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${t}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Z_(n)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${t}, ${u}>, ${p}>;
  var<workgroup> mm_Bsub : array<array<${t}, ${c}>, ${i}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${i};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${t}, colPerThread>, rowPerThread>;
    ${A}
  }
`},eg=(e,r,t,s,n=!1)=>{let[i,o,a,l]=s,d=Cr(s[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${i.type.indices}) -> ${Ar(e,d)} {
      var value = ${Ar(e,d)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${o.type.indices};
        ${co("aIndices",o,o.rank-2,i.rank,"batchIndices")}
        ${o.indicesSet("aIndices",o.rank-2,"u32(row)")}
        ${o.indicesSet("aIndices",o.rank-1,"u32(colIn)")}
        value = ${o.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${i.type.indices}) -> ${Ar(e,d)} {
      var value = ${Ar(e,d)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${a.type.indices};
        ${co("bIndices",a,a.rank-2,i.rank,"batchIndices")}
        ${a.indicesSet("bIndices",a.rank-2,"u32(row)")}
        ${a.indicesSet("bIndices",a.rank-1,"u32(colIn)")}
        value = ${a.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ar(e,d)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${n?"bias[colIn]":`${Ar(e,d)}(bias[row])`};`:""}
        ${t}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Ia=(e,r,t,s,n=!1,i)=>{let o=e[0].dims,a=e[1].dims,l=o.slice(0,-2),d=a.slice(0,-2),c=s?s.slice(0,-2):t.slice(0,-2),u=Te.size(c),p=o[o.length-2],_=o[o.length-1],f=a[a.length-1],P=_%4===0&&f%4===0,A=p<=8?[4,1,1]:[4,4,1],y=[8,8,1],g=[Math.ceil(f/y[0]/A[0]),Math.ceil(p/y[1]/A[1]),Math.ceil(u/y[2]/A[2])],I=P?4:1,v=[...l,p,_/I],T=v.length,x=[...d,_,f/I],b=x.length,$=[u,p,f/I],j=[{type:6,data:p},{type:6,data:f},{type:6,data:_}];Ln(r,j),j.push(...ht(c,v,x));let B=["rank","rank"],X=e.length>2;X&&(j.push(...ht(e[2].dims)),B.push("rank")),j.push(...ht($));let re=z=>{let te=c.length,W=zc("batchDims",e[0].dataType,te,1),K=Cr(e[0].dataType),se=ke("a",e[0].dataType,T,I),J=ke("b",e[1].dataType,b,I),ue=ct("result",e[0].dataType,$.length,I),ce=[se,J];if(X){let ae=n?I:1;ce.push(ke("bias",e[2].dataType,e[2].dims.length,ae))}let N=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Bn(r,N);let D=Cr(ue.type.tensor),Q=Dn(r,ue.type.value,D),U=eg(I,X,Q,[W,se,J,ue],n);return`
  ${z.registerUniforms(N).registerInternalVariables(W).declareVariables(...ce,ue)}
  ${U}
  ${P?hc(A,y,K,W):mc(A,y,K,W)}
                   `};return{name:"MatMul",shaderCache:{hint:`${A};${r.activation};${P};${n}`,inputDependencies:B},getRunData:()=>({outputs:[{dims:i?i(t):t,dataType:e[0].dataType}],dispatchGroup:{x:g[0],y:g[1],z:g[2]},programUniforms:j}),getShaderSource:re}}}),tg,AM,g1=Ge(()=>{Mt(),Ws(),Ct(),Rn(),Vc(),_1(),Kc(),tg=(e,r,t,s,n=!1,i,o=4,a=4,l=4,d="f32")=>{let c=j=>{switch(j){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${d}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${j} is not supported.`)}},u=j=>{switch(j){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${j} is not supported.`)}},p=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,_=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,f=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",P=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",A=e?"row":"col",y=e?"col":"row",g=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${A} / outWidth;
    let outCol = ${A} % outWidth;

    let WRow = ${y} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${y} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${y} % inChannels;
    var resData = ${Ar(o,d)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${P}) {
      ${p}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${c(o)}
    }
    return resData;`,I=e?r&&s?`
    let col = colIn * ${o};
    ${g}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${g}
    }
    return ${Ar(o,d)}(0.0);`:s&&t?`
    let col = colIn * ${o};
    ${g}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${g}
    }
    return ${Ar(o,d)}(0.0);`,v=e?s&&t?u(a):`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${u(a)}
    }
    return ${Ar(a,d)}(0.0);`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${u(a)}
    }
    return ${Ar(a,d)}(0.0);`,T=Ar(l,d),x=Ar(e?o:a,d),b=Ar(e?a:o,d),$=Dn(i,T,d);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${x} {
      ${e?I:v}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${b} {
      ${e?v:I}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${T}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${_}
      ${IM(n)}
      ${$}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},AM=(e,r,t,s,n,i,o,a,l)=>{let d=r.format==="NHWC",c=d?e[0].dims[3]:e[0].dims[1],u=t[0],p=d?t[2]:t[3],_=d?t[1]:t[2],f=d?t[3]:t[1],P=d&&(c%4===0||c%3===0)&&f%4===0,A=d?f:p*_,y=d?p*_:f,g=[8,8,1],I=s<=8?[4,1,1]:[4,4,1],v=[Math.ceil(A/g[0]/I[0]),Math.ceil(y/g[1]/I[1]),Math.ceil(u/g[2]/I[2])];Ot("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${v}`);let T=P?d&&c%4!==0?3:4:1,x=g[1]*I[1],b=g[0]*I[0],$=Math.max(g[0]*T,g[1]),j=s%x===0,B=n%b===0,X=i%$===0,re=P?[T,4,4]:[1,1,1],z=[{type:6,data:s},{type:6,data:n},{type:6,data:i},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];Ln(r,z),z.push(...ht(e[0].dims,e[1].dims));let te=["rank","rank"];o&&(z.push(...ht(e[2].dims)),te.push("rank")),z.push(...ht(t));let W=K=>{let se=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Bn(r,se);let J=P?4:1,ue=Cr(e[0].dataType),ce=`
      fn setOutputAtIndex(flatIndex : i32, value : ${P?`vec4<${ue}>`:ue}) {
        result[flatIndex] = ${P?`vec4<${ue}>`:ue}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${P?`vec4<${ue}>`:ue}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${P?"/ 4":""}, value);
      }`,N=ke("x",e[0].dataType,e[0].dims.length,T===3?1:T),D=ke("w",e[1].dataType,e[1].dims.length,J),Q=[N,D],U=ct("result",e[0].dataType,t.length,J);if(o){let ae=ke("bias",e[2].dataType,e[2].dims.length,J);Q.push(ae),ce+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${P?`vec4<${ue}>`:ue} {
          return bias[coords.${d?"w":"y"}${P?"/ 4":""}];
        }`}return`
        ${kM("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${K.registerUniforms(se).declareVariables(...Q,U)}
        ${ce}
        ${tg(d,j,B,X,o,r,re[0],re[1],re[2],ue)}
        ${P?hc(I,g,ue,void 0,!d,$):mc(I,g,ue,void 0,!d,$,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${T};${P};${j};${B};${X};${x};${b};${$}`,inputDependencies:te},getRunData:()=>({outputs:[{dims:l?l(t):t,dataType:e[0].dataType}],dispatchGroup:{x:v[0],y:v[1],z:v[2]},programUniforms:z}),getShaderSource:W}}}),rg,xu,Zi,sg,Tu,ng,FM,OM,w1=Ge(()=>{Mt(),Ws(),Et(),Ct(),Rn(),Vc(),rg=e=>{let r=1;for(let t=0;t<e.length;t++)r*=e[t];return r},xu=e=>typeof e=="number"?[e,e,e]:e,Zi=(e,r)=>r<=1?e:e+(e-1)*(r-1),sg=(e,r,t,s=1)=>{let n=Zi(r,s);return Math.floor((e[0]*(t-1)-t+n)/2)},Tu=(e,r,t,s,n)=>{n==null&&(n=sg(e,r[0],s[0]));let i=[0,0,0,t];for(let o=0;o<3;o++)e[o]+2*n>=r[o]&&(i[o]=Math.trunc((e[o]-r[o]+2*n)/s[o]+1));return i},ng=(e,r,t,s,n,i,o,a,l,d)=>{let c,u,p,_;if(e==="VALID"&&(e=0),typeof e=="number"){c={top:e,bottom:e,left:e,right:e,front:e,back:e};let f=Tu([r,t,s,1],[a,l,d],1,[n,i,o],e);u=f[0],p=f[1],_=f[2]}else if(Array.isArray(e)){if(!e.every((P,A,y)=>P===y[0]))throw Error(`Unsupported padding parameter: ${e}`);c={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let f=Tu([r,t,s,1],[a,l,d],1,[n,i,o],e[0]);u=f[0],p=f[1],_=f[2]}else if(e==="SAME_UPPER"){u=Math.ceil(r/n),p=Math.ceil(t/i),_=Math.ceil(s/o);let f=(u-1)*n+a-r,P=(p-1)*i+l-t,A=(_-1)*o+d-s,y=Math.floor(f/2),g=f-y,I=Math.floor(P/2),v=P-I,T=Math.floor(A/2),x=A-T;c={top:I,bottom:v,left:T,right:x,front:y,back:g}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outDepth:u,outHeight:p,outWidth:_}},FM=(e,r,t,s,n,i=!1,o="channelsLast")=>{let a,l,d,c,u;if(o==="channelsLast")[a,l,d,c,u]=e;else if(o==="channelsFirst")[a,u,l,d,c]=e;else throw new Error(`Unknown dataFormat ${o}`);let[p,,_,f,P]=r,[A,y,g]=xu(t),[I,v,T]=xu(s),x=Zi(_,I),b=Zi(f,v),$=Zi(P,T),{padInfo:j,outDepth:B,outHeight:X,outWidth:re}=ng(n,l,d,c,A,y,g,x,b,$),z=i?p*u:p,te=[0,0,0,0,0];return o==="channelsFirst"?te=[a,z,B,X,re]:o==="channelsLast"&&(te=[a,B,X,re,z]),{batchSize:a,dataFormat:o,inDepth:l,inHeight:d,inWidth:c,inChannels:u,outDepth:B,outHeight:X,outWidth:re,outChannels:z,padInfo:j,strideDepth:A,strideHeight:y,strideWidth:g,filterDepth:_,filterHeight:f,filterWidth:P,effectiveFilterDepth:x,effectiveFilterHeight:b,effectiveFilterWidth:$,dilationDepth:I,dilationHeight:v,dilationWidth:T,inShape:e,outShape:te,filterShape:r}},OM=(e,r,t,s,n,i)=>{let o=i==="channelsLast";o?e[0].dims[3]:e[0].dims[1];let a=[64,1,1],l={x:t.map((A,y)=>y)},d=[Math.ceil(rg(l.x.map(A=>t[A]))/a[0]),1,1];Ot("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${d}`);let c=1,u=Te.size(t),p=[{type:12,data:u},{type:12,data:s},{type:12,data:n},{type:12,data:r.strides},{type:12,data:r.dilations}];Ln(r,p),p.push(...ht(e[0].dims,e[1].dims));let _=["rank","rank"],f=e.length===3;f&&(p.push(...ht(e[2].dims)),_.push("rank")),p.push(...ht(t));let P=A=>{let y=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:s.length},{name:"pads",type:"u32",length:n.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];Bn(r,y);let g=1,I=Cr(e[0].dataType),v=ke("x",e[0].dataType,e[0].dims.length,c),T=ke("W",e[1].dataType,e[1].dims.length,g),x=[v,T],b=ct("result",e[0].dataType,t.length,g),$="";if(f){let X=ke("bias",e[2].dataType,e[2].dims.length,g);x.push(X),$+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${I} {
          return bias[${o?dt("coords",4,5):dt("coords",1,5)}];
        }`}let j=Ar(c,I),B=Dn(r,j,I);return`
            ${$}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${v.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${T.getByIndices("aIndices")};
            }
          ${A.registerUniforms(y).declareVariables(...x,b)}
          ${A.mainStart()}
          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${b.offsetToIndices("global_idx")};
              let batch = ${dt("coords",0,v.rank)};
              let d2 = ${o?dt("coords",v.rank-1,v.rank):dt("coords",1,v.rank)};
              let xFRCCorner = vec3<u32>(${o?dt("coords",1,v.rank):dt("coords",2,v.rank)},
              ${o?dt("coords",2,v.rank):dt("coords",3,v.rank)},
              ${o?dt("coords",3,v.rank):dt("coords",4,v.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?dt("uniforms.x_shape",1,v.rank):dt("uniforms.x_shape",2,v.rank)};
              let xShapeZ = ${o?dt("uniforms.x_shape",2,v.rank):dt("uniforms.x_shape",3,v.rank)};
              let xShapeW = ${o?dt("uniforms.x_shape",3,v.rank):dt("uniforms.x_shape",4,v.rank)};
              let xShapeU = ${o?dt("uniforms.x_shape",4,v.rank):dt("uniforms.x_shape",1,v.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${f?"value = value + getBiasByOutputCoords(coords)":""};
              ${B}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${o};${c};${f}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:d[0],y:d[1],z:d[2]},programUniforms:p}),getShaderSource:P}}}),DM,LM,y1=Ge(()=>{Mt(),Et(),Ct(),Rn(),DM=(e,r,t,s)=>{let n=e.length>2,i=n?"value += b[output_channel];":"",o=e[0].dims,a=e[1].dims,l=r.format==="NHWC",d=l?t[3]:t[1],c=d/r.group,u=l&&c>=4?or(d):1,p=Te.size(t)/u,_=[{type:12,data:p},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:c}];Ln(r,_),_.push(...ht(o,[a[0],a[1],a[2],a[3]/u]));let f=n?["rank","rank","rank"]:["rank","rank"];_.push(...ht([t[0],t[1],t[2],t[3]/u]));let P=A=>{let y=ct("output",e[0].dataType,t.length,u),g=Cr(y.type.tensor),I=Dn(r,y.type.value,g),v=ke("x",e[0].dataType,o.length),T=ke("w",e[1].dataType,a.length,u),x=[v,T];n&&x.push(ke("b",e[2].dataType,e[2].dims,u));let b=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Bn(r,b);let $=l?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${v.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${T.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${v.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${T.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${A.registerUniforms(b).declareVariables(...x,y)}

  ${A.mainStart()}
    ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${y.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${u} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];

    var value: ${y.type.value} = ${y.type.value}(0);
    ${$}
    ${i}
    ${I}
    ${y.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${u}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:_}),getShaderSource:P}},LM=(e,r,t,s)=>{let n=e.length>2,i=or(t[3]),o=or(t[2]),a=Te.size(t)/i/o,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],d=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],c=[t[0],t[1],t[2],t[3]/i],u=[{type:12,data:a},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];Ln(r,u),u.push(...ht(l,d,c));let p=(o-1)*r.strides[1]+d[1],_=f=>{let P=ct("output",e[0].dataType,c.length,i),A=Cr(P.type.tensor),y=Dn(r,P.type.value,A),g=ke("x",e[0].dataType,l.length,i),I=ke("w",e[1].dataType,d.length,i),v=[g,I];n&&v.push(ke("b",e[2].dataType,e[2].dims,i));let T=n?"value += b[output_channel];":"",x=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Bn(r,x),`
  ${f.registerUniforms(x).declareVariables(...v,P)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${g.type.value}, ${p}>;
    var values: array<${P.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${d[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${p}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${g.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${g.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${d[1]}; w_width++) {
          let w_val = ${I.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${T}
      ${y}
      ${P.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${i};${o};${p};${d[0]};${d[1]}`,inputDependencies:n?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:u}),getShaderSource:_}}}),ig,pa,og,ha,fc,Eu,ag,lg,_c,M1=Ge(()=>{Et(),g1(),w1(),Kc(),y1(),Rn(),Gc(),en(),ig=(e,r,t,s,n,i)=>{let o=e[0],a=e.slice(i?1:2,i?3:4),l=a.length,d=r[0],c=r.slice(2).map((p,_)=>p+(p-1)*(t[_]-1)),u=a.map((p,_)=>p+s[_]+s[_+l]).map((p,_)=>Math.floor((p-c[_]+n[_])/n[_]));return u.splice(0,0,o),u.splice(i?3:1,0,d),u},pa=[2,3,1,0],og=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[1]*r.group;if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(r.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(r.strides.length!==n)throw new Error(`strides should be ${n}D`);if(r.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},ha=(e,r)=>{let t=e.kernelShape.slice();t.length<r[1].dims.length-2&&t.push(...Array(r[1].dims.length-2-t.length).fill(0));for(let i=2;i<r[1].dims.length;++i)t[i-2]===0&&(t[i-2]=r[1].dims[i]);let s=e.pads.slice();Sa.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,s,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:t,pads:s}),n},fc=e=>{let r=Uc(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,i=e.group,o=e.kernel_shape,a=e.pads,l=e.strides,d=e.w_is_const();return{autoPad:s,format:t,dilations:n,group:i,kernelShape:o,pads:a,strides:l,wIsConst:d,...r,cacheKey:`${e.format};${r.activation};`}},Eu=(e,r,t,s)=>{let n=t.format==="NHWC",i=ig(r[0].dims,r[1].dims,t.dilations,t.pads,t.strides,n);if(t.group!==1){let x=[r[0]];if(n){let b=e.kernelCustomData.wT??e.compute(Xr(r[1],pa),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=b),x.push(b)}else x.push(r[1]);r.length===3&&x.push(r[2]),!e.adapterInfo.isArchitecture("ampere")&&n&&r[1].dims[0]===t.group&&r[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1?e.compute(LM(x,t,i,s),{inputs:x}):e.compute(DM(x,t,i,s),{inputs:x});return}let o=r.length===3,a=r[0].dims[n?1:2],l=r[0].dims[n?2:3],d=r[0].dims[n?3:1],c=r[1].dims[2],u=r[1].dims[3],p=i[n?1:2],_=i[n?2:3],f=i[n?3:1],P=n&&c===a&&u===l&&t.pads[0]===0&&t.pads[1]===0;if(P||c===1&&u===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let x=i[0],b,$,j,B=[];if(n){let z=e.kernelCustomData.wT??e.compute(Xr(r[1],pa),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=z),P){let te=a*l*d;b=r[0].reshape([1,x,te]),$=z.reshape([1,te,f]),j=[1,x,f]}else b=r[0].reshape([x,a*l,d]),$=z.reshape([1,d,f]),j=[x,p*_,f];B.push(b),B.push($)}else b=r[0].reshape([x,d,a*l]),$=r[1].reshape([1,f,d]),j=[x,f,p*_],B.push($),B.push(b);o&&B.push(r[2]);let X=j[2],re=B[0].dims[B[0].dims.length-1];X<8&&re<8?e.compute(Wc(B,t,i,j,n,s),{inputs:B}):e.compute(Ia(B,t,i,j,n,s),{inputs:B});return}let A=!0,y=e.kernelCustomData.wT??e.compute(Xr(r[1],pa),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=y);let g=[r[0],y];o&&g.push(r[2]);let I=n?p*_:f,v=n?f:p*_,T=c*u*d;e.compute(AM(g,t,i,I,v,T,o,A,s),{inputs:g})},ag=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let n=[0,r.pads[0],0,r.pads[1]],i=[1].concat(r.strides),o=[1].concat(r.dilations),a=[1].concat(r.kernelShape),l=ha({...r,pads:n,strides:i,dilations:o,kernelShape:a},s);Eu(e,s,l,d=>t?[d[0],d[2],d[3]]:[d[0],d[1],d[3]])},lg=(e,r,t)=>{let s=t.format==="NHWC"?"channelsLast":"channelsFirst",n=ha(t,r),i=t.autoPad==="NOTSET"?t.pads:t.autoPad,o=FM(r[0].dims,r[1].dims,t.strides,t.dilations,i,!1,s);e.compute(OM(r,n,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],s))},_c=(e,r)=>{if(og(e.inputs,r),e.inputs[0].dims.length===3)ag(e,r);else if(e.inputs[0].dims.length===5)lg(e,e.inputs,r);else{let t=ha(r,e.inputs);Eu(e,e.inputs,t)}}}),BM,b1=Ge(()=>{Mt(),Ws(),Et(),Ct(),BM=(e,r,t)=>{let s=e.length>2,n=r.outputShape,i=r.format==="NHWC",o=r.group,a=e[1].dims,l=a[2]/o,d=a[3],c=i?or(l):1,u=i&&d===1&&l>=4,p=u?Math.floor(l/4)*4:Math.floor(l/c)*c,_=l-p,f=i?or(d):1,P=i?d===1?c:f:1,A=Te.size(n)/f,y=[Math.ceil(A/64),1,1];Ot("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${y}`);let g=["rank","rank"],I=[r.strides[0],r.strides[1]],v=[r.kernelShape[i?1:2],r.kernelShape[i?2:3]],T=[r.dilations[0],r.dilations[1]],x=[v[0]+(r.dilations[0]<=1?0:(r.kernelShape[i?1:2]-1)*(r.dilations[0]-1)),v[1]+(r.dilations[1]<=1?0:(r.kernelShape[i?2:3]-1)*(r.dilations[1]-1))],b=[x[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),x[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],$=[{type:12,data:A},{type:12,data:I},{type:12,data:v},{type:12,data:T},{type:12,data:x},{type:6,data:b},{type:12,data:p},{type:12,data:l},{type:12,data:d},...ht(e[0].dims,e[1].dims)];s&&($.push(...ht(e[2].dims)),g.push("rank")),$.push(...ht(n));let j=B=>{let X=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:I.length},{name:"filter_dims",type:"u32",length:v.length},{name:"dilations",type:"u32",length:v.length},{name:"effective_filter_dims",type:"u32",length:x.length},{name:"pads",type:"i32",length:b.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],re=Cr(e[0].dataType),z=i?1:2,te=i?2:3,W=i?3:1,K=ke("W",e[1].dataType,e[1].dims.length,P),se=ke("Dy",e[0].dataType,e[0].dims.length,c),J=[se,K];s&&J.push(ke("bias",e[2].dataType,[n[W]].length,f));let ue=ct("result",e[0].dataType,n.length,f),ce=()=>{let Q="";if(u)c===4?Q+=`
        let xValue = ${se.getByOffset("x_offset")};
        let wValue = ${K.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:c===2?Q+=`
          dotProd = dotProd + dot(vec4<${re}>(${se.getByOffset("x_offset")}, ${se.getByOffset("x_offset + 1u")}), vec4<${re}>(${K.getByOffset("w_offset")}, ${K.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:c===1&&(Q+=`
          dotProd = dotProd + dot(vec4<${re}>(${se.getByOffset("x_offset")}, ${se.getByOffset("x_offset + 1u")}, ${se.getByOffset("x_offset + 2u")}, ${se.getByOffset("x_offset + 3u")}), vec4<${re}>(${K.getByOffset("w_offset")}, ${K.getByOffset("w_offset + 1u")}, ${K.getByOffset("w_offset + 2u")}, ${K.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(Q+=`
                  let xValue = ${i?se.getByOffset(`${se.indicesToOffset(`${se.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${c}`):se.get("batch","inputChannel","idyR","idyC")};
        `,c===1)Q+=`
          let w_offset = ${K.indicesToOffset(`${K.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${K.getByOffset(`w_offset / ${P}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let U=0;U<c;U++)Q+=`
            let wValue${U} = ${K.getByOffset(`${K.indicesToOffset(`${K.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${U}, wOutChannel)`)} / ${P}`)};
            dotProd = dotProd + xValue[${U}] * wValue${U};`;return Q},N=()=>{if(_===0)return"";if(!u)throw new Error(`packInputAs4 ${u} is not true.`);let Q="";if(c===1){Q+="dotProd = dotProd";for(let U=0;U<_;U++)Q+=`
            + ${se.getByOffset(`x_offset + ${U}`)} * ${K.getByOffset(`w_offset + ${U}`)}`;Q+=";"}else if(c===2){if(_!==2)throw new Error(`Invalid inputChannelsRemainder ${_}.`);Q+=`
          let xValue = ${se.getByOffset("x_offset")};
          let wValue = ${K.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return Q},D=`
            let outputIndices = ${ue.offsetToIndices(`global_idx * ${f}`)};
            let batch = ${ue.indicesGet("outputIndices",0)};
            let d1 = ${ue.indicesGet("outputIndices",W)};
            let r = ${ue.indicesGet("outputIndices",z)};
            let c = ${ue.indicesGet("outputIndices",te)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${ue.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${re}(dyRCorner) + ${re}(wR)) / ${re}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${re}(uniforms.Dy_shape[${z}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${re}(dyCCorner) + ${re}(wC)) / ${re}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${re}(uniforms.Dy_shape[${te}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${u?`
                var x_offset = ${se.indicesToOffset(`${se.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${c};
                var w_offset = ${K.indicesToOffset(`${K.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${P};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${u?4:c}) {
                  ${ce()}
                  inputChannel = inputChannel + ${u?4:c};
                }
                ${N()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${s?` + bias[d1 / ${f}]`:""};
            ${ue.setByOffset("global_idx","value")};
          `;return`
    ${B.registerUniforms(X).declareVariables(...J,ue)}
      ${B.mainStart()}
      ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${D}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${c}${P}${f}${u}${_}`,inputDependencies:g},getRunData:()=>({dispatchGroup:{x:y[0],y:y[1],z:y[2]},outputs:[{dims:t?t(n):n,dataType:e[0].dataType}],programUniforms:$}),getShaderSource:j}}}),ug,cg,dg,Pu,zM,pg,Cu,hg,RM,v1=Ge(()=>{b1(),Rn(),en(),ug=(e,r,t,s,n,i)=>(e-1)*r+t+(s-1)*n+1-i,cg=(e,r,t,s,n)=>{let i=Math.floor(e/2);r==="SAME_UPPER"?(t[s]=i,t[n]=e-i):r==="SAME_LOWER"&&(t[s]=e-i,t[n]=i)},dg=(e,r,t,s,n,i,o,a,l,d)=>{let c=e.length-2,u=d.length===0;l.length<c&&l.push(...Array(c-l.length).fill(0));let p=e[0],_=r[a?3:1]*n;for(let f=0,P=e.length-c-(a?1:0);f<c;++f,++P){let A=e[P],y=u?A*o[f]:d[f],g=ug(A,o[f],i[f],r[P],t[f],y);cg(g,s,i,f,f+c),u&&d.push(o[f]*(A-1)+l[f]+(r[P]-1)*t[f]+1-i[f]-i[f+c])}d.splice(0,0,p),d.splice(a?3:1,0,_)},Pu=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((u,p)=>u*p,1)===0){t.length=0;for(let u=2;u<r[1].dims.length;++u)t.push(r[1].dims[u])}let s=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(s?3:1,0,r[1].dims[1]);let n=e.pads.slice(),i=e.outputShape.slice(),o=e.outputPadding.slice(),a=r[0].dims,l=e.dilations.slice();if(l.reduce((u,p)=>u+p,0)===0){let u=r[0].dims.length-2;l=new Array(u).fill(1)}let d=e.strides.slice();if(d.reduce((u,p)=>u+p,0)===0){let u=r[0].dims.length-2;d=new Array(u).fill(1)}dg(a,t,l,e.autoPad,e.group,n,d,s,o,i);let c=Object.assign({},e);return Object.assign(c,{kernelShape:t,pads:n,outputPadding:o,outputShape:i,dilations:l,strides:d}),c},zM=e=>{let r=Uc(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,i=e.group,o=e.kernelShape,a=e.pads,l=e.strides,d=e.wIsConst(),c=e.outputPadding,u=e.outputShape;return{autoPad:s,format:t,dilations:n,group:i,kernelShape:o,outputPadding:c,outputShape:u,pads:a,strides:l,wIsConst:d,...r,cacheKey:`${e.format};${r.activation};`}},pg=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[0];if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let i=e[0].dims.length-2;if(r.dilations.reduce((o,a)=>o+a,0)>0&&r.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(r.strides.reduce((o,a)=>o+a,0)>0&&r.strides.length!==i)throw new Error(`strides should be ${i}D`);if(r.pads.reduce((o,a)=>o+a,0)>0&&r.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(r.outputPadding.length!==i&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(r.kernelShape.reduce((o,a)=>o+a,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Cu=(e,r,t,s)=>{let n=e.kernelCustomData.wT??e.compute(Xr(r[1],[2,3,0,1]),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=n);let i=[r[0],n];r.length===3&&i.push(r[2]),e.compute(BM(i,t,s),{inputs:i})},hg=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let n=r.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let i=r.dilations;(i.length===0||i[0]===0)&&(i=[1]);let o=r.strides;(o.length===0||o[0]===0)&&(o=[1]);let a=r.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],o=[1].concat(o),i=[1].concat(i),n=[1].concat(n);let l=r.outputPadding;l=[0].concat(l);let d=Pu({...r,pads:a,strides:o,dilations:i,kernelShape:n,outputPadding:l},s);Cu(e,s,d,c=>t?[c[0],c[2],c[3]]:[c[0],c[1],c[3]])},RM=(e,r)=>{if(pg(e.inputs,r),e.inputs[0].dims.length===3)hg(e,r);else{let t=Pu(r,e.inputs);Cu(e,e.inputs,t)}}}),mg,jM,NM,x1=Ge(()=>{Mt(),Et(),ur(),Ct(),mg=(e,r,t,s)=>{let n=Te.size(r),i=r.length,o=ke("input",e,i),a=ct("output",e,i),l=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),d=Te.normalizeAxis(l,i),c=u=>{let p=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,_=dt("uniforms.input_shape","uniforms.axis",i),f=s.reverse?p+(s.exclusive?" + 1":""):"0",P=s.reverse?_:p+(s.exclusive?"":" + 1");return`
                ${u.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,a)}
                ${u.mainStart()}
                  ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${f};
                  let last : i32 = ${P};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},{type:12,data:d},...ht(r,r)]}),getShaderSource:c}},jM=(e,r)=>{let t=e.inputs[0].dims,s=e.inputs[0].dataType,n=e.inputs[1];e.compute(mg(s,t,n,r),{inputs:[0]})},NM=e=>{let r=e.exclusive===1,t=e.reverse===1;return zt({exclusive:r,reverse:t})}}),fg,_g,gg,UM,VM,T1=Ge(()=>{Mt(),Et(),ur(),Ct(),fg=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},_g=(e,r,t,s)=>{let n=[];n.push(`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`);for(let i=0;i<r;++i)n.push(t.indicesSet("a",e[i],`i[${i}]`));return n.push("return a;}"),n.join(`
`)},gg=(e,r)=>{let t,s,n,i,o,a,l=r.format==="NHWC",d=r.blocksize,c=r.mode==="DCR";l?([t,s,n,i]=e.dims,o=c?[t,s,n,d,d,i/d**2]:[t,s,n,i/d**2,d,d],a=c?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([t,s,n,i]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],o=c?[t,d,d,i/d**2,s,n]:[t,i/d**2,d,d,s,n],a=c?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let u=e.reshape(o),p=u.dims.length,_=e.dataType,f=ke("a",_,p),P=ct("output",_,p),A=y=>`
  ${y.registerUniform("output_size","u32").declareVariables(f,P)}

  ${_g(a,p,f,P)}

  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${P.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${P.setByOffset("global_idx",f.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:y=>{let g=l?[t,s*d,n*d,i/d**2]:[t,i/d**2,s*d,n*d],I=Te.size(g),v=u.dims,T=Te.sortBasedOnPerm(v,a);return{outputs:[{dims:g,dataType:y[0].dataType}],dispatchGroup:{x:Math.ceil(I/64)},programUniforms:[{type:12,data:I},...ht(v,T)]}},getShaderSource:A}},UM=(e,r)=>{fg(e.inputs),e.compute(gg(e.inputs[0],r))},VM=e=>zt({blocksize:e.blocksize,mode:e.mode,format:e.format})}),ma,eo,Su,wg,yg,Mg,bg,$u,vg,WM,GM,E1=Ge(()=>{Mt(),Et(),ur(),Ct(),ma="[a-zA-Z]|\\.\\.\\.",eo="("+ma+")+",Su="^"+eo+"$",wg="("+eo+",)*"+eo,yg="^"+wg+"$",Mg=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,r){let t=this.symbolToIndices.get(e);t===void 0?t=[r]:t.push(r),this.symbolToIndices.set(e,t)}},bg=class{constructor(e,r){this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,s]=r.includes("->")?r.split("->",2):[r,""];if(!t.match(RegExp(yg)))throw new Error("Invalid LHS term");if(t.split(",").forEach((n,i)=>{let o=e[i].dims.slice();if(!n.match(RegExp(Su)))throw new Error("Invalid LHS term");let a=this.processTerm(n,!0,o,i);this.lhs.push(a)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([n,i])=>i.count===1||n==="...").map(([n])=>n).join("");else if(!s.match(RegExp(eo)))throw new Error("Invalid RHS");s.match(RegExp(ma,"g"))?.forEach(n=>{if(n==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let i=this.symbolToInfo.get(n);if(i===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(i.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(e,r,t){let s=this.symbolToInfo.get(e);if(s!==void 0){if(s.dimValue!==r&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(t)}else s={count:1,dimValue:r,inputIndices:[t]};this.symbolToInfo.set(e,s)}processTerm(e,r,t,s=-1){let n=t.length,i=!1,o=[],a=0;if(!e.match(RegExp(Su))&&!r&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(ma,"g")),d=new Mg(s);return l?.forEach((c,u)=>{if(c==="..."){if(i)throw new Error("Only one ellipsis is allowed per input term");i=!0;let p=n-l.length+1;if(p<0)throw new Error("Ellipsis out of bounds");if(o=t.slice(a,a+p),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=o;else throw new Error("Ellipsis must be specified in the LHS");for(let _=0;_<o.length;_++){let f=String.fromCharCode(48+_);d.addSymbol(f,u+_),this.addSymbol(f,t[a++],s)}}else d.addSymbol(c,u+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(c,t[a++],s)}),d}},$u=e=>e+"_max",vg=(e,r,t,s)=>{let n=e.map(d=>d.length).map((d,c)=>ke(`input${c}`,r,d)),i=Te.size(s),o=ct("output",r,s.length),a=[...t.symbolToInfo.keys()].filter(d=>!t.rhs.symbolToIndices.has(d)),l=d=>{let c=[],u="var prod = 1.0;",p="var sum = 0.0;",_="sum += prod;",f=[],P=[],A=[],y=[],g=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((v,T)=>{if(t.rhs.symbolToIndices.has(T)){let x=t.rhs.symbolToIndices.get(T)?.[0];x!==void 0&&t.lhs.forEach((b,$)=>{if(v.inputIndices.includes($)){let j=b.symbolToIndices.get(T);if(j===void 0)throw new Error("Invalid symbol error");j.forEach(B=>{c.push(`${n[$].indicesSet(`input${$}Indices`,B,o.indicesGet("outputIndices",x))}`)})}})}else t.lhs.forEach((x,b)=>{if(v.inputIndices.includes(b)){let $=x.symbolToIndices.get(T);if($===void 0)throw new Error("Invalid symbol error");$.forEach(j=>{f.push(`${n[b].indicesSet(`input${b}Indices`,j,`${T}`)}`)}),y.push(`prod *= ${n[b].getByIndices(`input${b}Indices`)};`)}}),P.push(`for(var ${T}: u32 = 0; ${T} < uniforms.${$u(T)}; ${T}++) {`),A.push("}")});let I=g?[...c,`let sum = ${n.map((v,T)=>v.getByIndices(`input${T}Indices`)).join(" * ")};`]:[...c,p,...P,...f,u,...y,_,...A];return`
            ${d.registerUniforms(a.map(v=>({name:`${$u(v)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...n,o)}

            ${d.mainStart()}
            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${n.map((v,T)=>`var input${T}Indices: ${n[T].type.indices};`).join(`
`)}
            ${I.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let d=a.filter(u=>t.symbolToInfo.has(u)).map(u=>({type:12,data:t.symbolToInfo.get(u)?.dimValue||0}));d.push({type:12,data:i});let c=e.map((u,p)=>[...ht(u)]).reduce((u,p)=>u.concat(p),d);return c.push(...ht(s)),{outputs:[{dims:s,dataType:r}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:c}},getShaderSource:l}},WM=(e,r)=>{let t=new bg(e.inputs,r.equation),s=t.outputDims,n=e.inputs.map((i,o)=>i.dims);e.compute(vg(n,e.inputs[0].dataType,t,s))},GM=e=>{let r=e.equation.replace(/\s+/g,"");return zt({equation:r})}}),xg,Iu,Tg,Eg,KM,P1=Ge(()=>{Mt(),Et(),Ct(),xg=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=t.length<r.length?0:t.length-r.length,n=r.length<t.length?0:r.length-t.length;for(;s<t.length&&n<r.length;++s,++n)if(t[s]!==r[n]&&t[s]!==1&&r[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Iu=(e,r)=>{let t=e.length-r.length,s=[];for(let n=0;n<t;++n)s.push(e[n]);for(let n=0;n<r.length;++n)s.push(r[n]===1?e[n+t]:r[n]);return s},Tg=(e,r)=>e.length>r.length?Iu(e,r):Iu(r,e),Eg=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=Tg(r,t),n=e[0].dataType,i=n===9||Te.size(r)===1,o=n===9||r.length>0&&r[r.length-1]%4===0?4:1,a=i||s.length>0&&s[s.length-1]%4===0?4:1,l=Math.ceil(Te.size(s)/a),d=u=>{let p=ke("input",n,r.length,o),_=ct("output",n,s.length,a),f;if(n===9){let P=(A,y,g="")=>`
          let outputIndices${y} = ${_.offsetToIndices(`outputOffset + ${y}u`)};
          let offset${y} = ${p.broadcastedIndicesToOffset(`outputIndices${y}`,_)};
          let index${y} = offset${y} / 4u;
          let component${y} = offset${y} % 4u;
          ${A}[${y}] = ${g}(${p.getByOffset(`index${y}`)}[component${y}]);
        `;f=`
        let outputOffset = global_idx * ${a};
        var data = vec4<u32>(0);
        ${P("data",0,"u32")}
        ${P("data",1,"u32")}
        ${P("data",2,"u32")}
        ${P("data",3,"u32")}
        ${_.setByOffset("global_idx","data")}
      }`}else f=`
        let outputIndices = ${_.offsetToIndices(`global_idx * ${a}`)};
        let inputOffset = ${p.broadcastedIndicesToOffset("outputIndices",_)};
        let data = ${_.type.value}(${p.getByOffset(`inputOffset / ${o}`)});
        ${_.setByOffset("global_idx","data")}
      }`;return`
    ${u.registerUniform("vec_size","u32").declareVariables(p,_)}
    ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${f}`},c=[{type:12,data:l},...ht(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${o}${a}`,inputDependencies:["rank"]},getShaderSource:d,getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c})}},KM=e=>{xg(e.inputs),e.compute(Eg(e.inputs),{inputs:[0]})}}),Pg,HM,C1=Ge(()=>{Mt(),Et(),Ct(),Nc(),Pg=e=>{let r=e[0].dataType,t=Te.size(e[0].dims),s=Te.size(e[1].dims),n=s%4===0,i=o=>{let a=ke("x",r,[1],4),l=ke("bias",r,[1],4),d=ct("y",r,[1],4),c=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],u=_=>`
      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;
      let bias${_} = ${l.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,p=n?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${u(0)}${u(1)}${u(2)}${u(3)}
      let bias = ${a.type.value}(bias0, bias1, bias2, bias3);`;return`${o.registerUniforms(c).declareVariables(a,l,d)}

    ${dc(Rr(r))}

    ${o.mainStart(hi)}
      ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${a.getByOffset("global_idx")};
      ${p}
      let x_in = x + bias;
      ${d.setByOffset("global_idx",pc("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${n}`,inputDependencies:["type","type"]},getShaderSource:i,getRunData:o=>({outputs:[{dims:o[0].dims,dataType:o[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(t/hi/4)}})}},HM=e=>{e.inputs.length<2||Te.size(e.inputs[1].dims)===0?hM(e):e.compute(Pg(e.inputs))}}),Cg,Sg,qM,QM,S1=Ge(()=>{Mt(),Et(),ur(),Ct(),Cg=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Sg=(e,r)=>{let t=e[0].dims,s=e[1].dims,n=t.length,i=Te.normalizeAxis(r.axis,n),o=t.slice(0);o.splice(i,1,...s);let a=t[i],l=e[0].dataType===9?4:1,d=Math.ceil(Te.size(o)/l),c=[{type:12,data:d},{type:6,data:a},{type:12,data:i},...ht(e[0].dims,e[1].dims,o)],u=p=>{let _=ke("data",e[0].dataType,e[0].dims.length,l),f=ke("inputIndices",e[1].dataType,e[1].dims.length),P=ct("output",e[0].dataType,o.length,l),A=g=>{let I=s.length,v=`var indicesIndices${g}  = ${f.type.indices}(0);`;for(let T=0;T<I;T++)v+=`${I>1?`indicesIndices${g}[${T}]`:`indicesIndices${g}`} = ${o.length>1?`outputIndices${g}[uniforms.axis + ${T}]`:`outputIndices${g}`};`;v+=`
          var idx${g} = ${f.getByIndices(`indicesIndices${g}`)};
          if (idx${g} < 0) {
            idx${g} = idx${g} + uniforms.axisDimLimit;
          }
          var dataIndices${g} : ${_.type.indices};
        `;for(let T=0,x=0;T<n;T++)T===i?(v+=`${n>1?`dataIndices${g}[${T}]`:`dataIndices${g}`} = u32(idx${g});`,x+=I):(v+=`${n>1?`dataIndices${g}[${T}]`:`dataIndices${g}`} = ${o.length>1?`outputIndices${g}[${x}]`:`outputIndices${g}`};`,x++);return v},y;if(e[0].dataType===9){let g=(I,v,T="")=>`
          let outputIndices${v} = ${P.offsetToIndices(`outputOffset + ${v}u`)};
          ${A(v)};
          let offset${v} = ${_.indicesToOffset(`dataIndices${v}`)};
          let index${v} = offset${v} / 4u;
          let component${v} = offset${v} % 4u;
          ${I}[${v}] = ${T}(${_.getByOffset(`index${v}`)}[component${v}]);
        `;y=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${g("value",0,"u32")}
        ${g("value",1,"u32")}
        ${g("value",2,"u32")}
        ${g("value",3,"u32")}
        ${P.setByOffset("global_idx","value")}
      `}else y=`
      let outputIndices = ${P.offsetToIndices("global_idx")};
      ${A("")};
      let value = ${_.getByIndices("dataIndices")};
      ${P.setByOffset("global_idx","value")};
      `;return`
      ${p.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,f,P)}
      ${p.mainStart()}
        ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${y}
      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:u}},qM=e=>zt({axis:e.axis}),QM=(e,r)=>{let t=e.inputs;Cg(t),e.compute(Sg(e.inputs,r))}}),$g,XM,YM,$1=Ge(()=>{Mt(),Et(),Ct(),$g=(e,r,t,s,n,i,o,a,l)=>{let d=[{type:12,data:i},{type:12,data:s},{type:12,data:n},{type:12,data:t},{type:12,data:o},{type:12,data:a},{type:12,data:l}],c=[i];d.push(...ht(r.dims,c));let u=p=>{let _=ke("indices_data",r.dataType,r.dims.length),f=ct("input_slice_offsets_data",12,1,1),P=[_,f],A=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:n.length},{name:"sizes_from_slice_dims_data",type:"u32",length:t.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${p.registerUniforms(A).declareVariables(...P)}
  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${n.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${t.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${n.length}_${t.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:c,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:d}),getShaderSource:u},{inputs:[r],outputs:[-1]})[0]},XM=(e,r)=>{let t=e.inputs,s=t[0].dims,n=t[0].dataType,i=t[1].dims,o=i[i.length-1],a=Te.sizeToDimension(i,i.length-1),l=Te.sizeFromDimension(s,r.batchDims+o),d=Te.sizeToDimension(s,r.batchDims),c=Te.sizeFromDimension(s,r.batchDims),u=a/d,p=new Array(o),_=l;for(let v=0;v<o;++v)p[o-1-v]=_,_*=s[r.batchDims+o-1-v];let f=$g(e,t[1],p,r.batchDims,s,a,u,c,o),P=r.batchDims+o;if(P>s.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let A=i.slice(0,-1).concat(s.slice(P)),y=Te.size(A),g=[{type:12,data:y},{type:12,data:l},...ht(t[0].dims,f.dims,A)],I=v=>{let T=ke("data",t[0].dataType,t[0].dims.length),x=ke("slice_offsets",12,f.dims.length),b=ct("output",t[0].dataType,A.length);return`
          ${v.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(T,x,b)}
            ${v.mainStart()}
            ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:A,dataType:n}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:g}),getShaderSource:I},{inputs:[t[0],f]})},YM=e=>({batchDims:e.batch_dims,cacheKey:""})}),Ig,kg,JM,ZM,I1=Ge(()=>{Mt(),Et(),ur(),Ct(),Ig=(e,r)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let t=Te.normalizeAxis(r.quantizeAxis,e[0].dims.length),s=r.blockSize,n=e[0],i=e[2],o=e.length===4?e[3]:void 0;if(i.dims.length!==n.dims.length||!n.dims.map((a,l)=>l===t?Math.ceil(a/s)===i.dims[l]:a===i.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==n.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==i.dims.length||!o.dims.map((a,l)=>a===i.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},kg=(e,r)=>{let t=e[0].dims,s=e[1].dims,n=t.length,i=Te.normalizeAxis(r.gatherAxis,n),o=Te.normalizeAxis(r.quantizeAxis,n),a=t.slice(0);a.splice(i,1,...s);let l=Te.size(a),d=e[2].dataType,c=e[0].dataType===22,u=[{type:12,data:l},{type:12,data:o},{type:12,data:i},{type:12,data:r.blockSize},...ht(...e.map((_,f)=>_.dims),a)],p=_=>{let f=ke("data",e[0].dataType,e[0].dims.length),P=ke("inputIndices",e[1].dataType,e[1].dims.length),A=ke("scales",e[2].dataType,e[2].dims.length),y=e.length>3?ke("zeroPoint",e[3].dataType,e[3].dims.length):void 0,g=ct("output",d,a.length),I=[f,P,A];y&&I.push(y);let v=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${_.registerUniforms(v).declareVariables(...I,g)}
        ${_.mainStart()}
        let output_indices = ${g.offsetToIndices("global_idx")};
        var indices_indices = ${P.type.indices}(0);
        ${s.length>1?`
          for (var i: u32 = 0; i < ${s.length}; i++) {
            let index = ${g.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${P.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${g.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${f.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${g.indicesGet("output_indices","i")};
          ${f.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${P.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${t[i]};
        }
        ${f.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${a.length}; i++) {
          let index = ${g.indicesGet("output_indices",`i + ${s.length} - 1`)};
          ${f.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${f.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${f.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${c?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${A.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${A.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${A.getByIndices("scale_indices")};
        ${y?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${y.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${y.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${c?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Rr(d)}(quantized_data - zero_point) * scale;
        ${g.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${e.filter((_,f)=>f!==1).map(_=>_.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(_,f)=>"rank")},getRunData:()=>({outputs:[{dims:a,dataType:d}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:p}},JM=(e,r)=>{let t=e.inputs;Ig(t,r),e.compute(kg(e.inputs,r))},ZM=e=>zt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),Ag,Fg,eb,tb,k1=Ge(()=>{Mt(),Et(),ur(),Ct(),Ag=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Fg=(e,r)=>{let t=e[0].dims,s=e[0].dataType,n=t.length,i=e[1].dims,o=e[1].dataType,a=Te.normalizeAxis(r.axis,n),l=t[a],d=i.slice(0),c=Te.size(d),u=ke("input",s,n),p=ke("indicesInput",o,i.length),_=ct("output",s,d.length),f=[{type:12,data:c},{type:6,data:l},{type:12,data:a}];return f.push(...ht(t,i,d)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:f}),getShaderSource:P=>`
      ${P.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(u,p,_)}
      ${P.mainStart()}
      ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${_.offsetToIndices("global_idx")};

      var idx = ${p.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${u.type.indices}(outputIndices);
      ${u.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${u.getByIndices("inputIndices")};

      ${_.setByOffset("global_idx","value")};
  }`}},eb=e=>zt({axis:e.axis}),tb=(e,r)=>{let t=e.inputs;Ag(t),e.compute(Fg(e.inputs,r))}}),Og,Dg,rb,sb,A1=Ge(()=>{Mt(),Et(),Ct(),Og=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Dg=(e,r)=>{let t=e[0].dims.slice(),s=e[1].dims.slice(),[n,i,o]=ey.getShapeOfGemmResult(t,r.transA,s,r.transB,e.length===3?e[2].dims:void 0),a=[n,i];if(!a)throw new Error("Can't use gemm on the given tensors");let l=16,d=Math.ceil(i/l),c=Math.ceil(n/l),u=!0,p=Te.size(a),_=[{type:12,data:u?d:p},{type:12,data:n},{type:12,data:i},{type:12,data:o},{type:1,data:r.alpha},{type:1,data:r.beta}],f=["type","type"];e.length===3&&(_.push(...ht(e[2].dims)),f.push("rank")),_.push(...ht(a));let P=y=>{let g="";r.transA&&r.transB?g="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?g="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?g="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(g="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let I=r.alpha===1?"":"value *= uniforms.alpha;",v=ke("a",e[0].dataType,e[0].dims),T=ke("b",e[1].dataType,e[1].dims),x=v.type.value,b=null,$=[v,T];e.length===3&&(b=ke("c",e[2].dataType,e[2].dims.length),$.push(b));let j=ct("output",e[0].dataType,a.length);$.push(j);let B=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${y.registerUniforms(B).declareVariables(...$)}

  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${x}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${g}
    }

    ${I}
    ${b!=null?`let cOffset = ${b.broadcastedIndicesToOffset("vec2(m, n)",j)}; value += ${x}(uniforms.beta) * ${b.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},A=y=>{let g=ke("a",e[0].dataType,e[0].dims),I=ke("b",e[1].dataType,e[1].dims),v=null,T=[g,I];e.length===3&&(v=ke("c",e[2].dataType,e[2].dims.length),T.push(v));let x=ct("output",e[0].dataType,a.length);T.push(x);let b=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],$="",j="";r.transA&&r.transB?(j=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${I.type.value}(0);
      }
      `,$="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(j=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${I.type.value}(0);
      }
      `,$="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(j=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${I.type.value}(0);
      }
      `,$="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!r.transA&&!r.transB&&(j=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${I.type.value}(0);
      }
      `,$="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let B=r.alpha===1?"":"value *= uniforms.alpha;";return`
  ${y.registerUniforms(b).declareVariables(...T)}
  var<workgroup> tile_a: array<array<${g.type.storage}, ${l}>, ${l}>;
  var<workgroup> tile_b: array<array<${I.type.storage}, ${l}>, ${l}>;
  ${y.mainStart([l,l,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${l};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${l};
    let num_tiles = (uniforms.K - 1) / ${l} + 1;
    var k_start = 0u;
    var value = ${x.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${j}
      k_start = k_start + ${l};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${l}; k++) {
        ${$}
      }
      workgroupBarrier();
    }

    ${B}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${v!=null?`let cOffset = ${v.broadcastedIndicesToOffset("vec2(m, n)",x)}; value += ${x.type.value}(uniforms.beta) * ${v.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return u?{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:d*c},programUniforms:_}),getShaderSource:A}:{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:_}),getShaderSource:P}},rb=e=>{let r=e.transA,t=e.transB,s=e.alpha,n=e.beta;return{transA:r,transB:t,alpha:s,beta:n,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},sb=(e,r)=>{Og(e.inputs),e.compute(Dg(e.inputs,r))}}),$s,js,Pn,Cn,Lg,Bg,zg,Rg,jg,Ng,Ug,Vg,nb,ib,F1=Ge(()=>{Mt(),Et(),ur(),Ct(),[$s,js,Pn,Cn]=[0,1,2,3],Lg=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},Bg=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,zg=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,Rg=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,jg=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,Ng=(e,r,t)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${r} {
     var pixel = ${r}(0);
     var indices = vec4<u32>(0);
     indices[${$s}] = batch;
     indices[${js}] = channel;`+(()=>{switch(t.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${Pn}] = u32(r);
            indices[${Cn}] = u32(c);
          } else {
            return ${r}(0);
          }
        `;case"border":return`
          indices[${Pn}] = u32(clamp(r, 0, H - 1));
          indices[${Cn}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${Pn}] = gs_reflect(r, border[1], border[3]);
          indices[${Cn}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${t.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,Ug=(e,r,t)=>(()=>{switch(t.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${$s}], indices[${js}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${$s}], indices[${js}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${$s}], indices[${js}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${$s}], indices[${js}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${$s}], indices[${js}], border);

          let dx2 = ${r}(f32(x2) - x);
          let dx1 = ${r}(x - f32(x1));
          let dy2 = ${r}(f32(y2) - y);
          let dy1 = ${r}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${r}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${$s}], indices[${js}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${t.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,Vg=(e,r)=>{let t=ke("x",e[0].dataType,e[0].dims.length),s=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],n=ke("grid",e[1].dataType,s.length,2),i=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];r.format==="NHWC"&&(i=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[$s,js,Pn,Cn]=[0,3,1,2]);let o=ct("output",e[0].dataType,i.length),a=t.type.value,l=Te.size(i),d=[{type:12,data:l},...ht(e[0].dims,s,i)],c=u=>`
  ${u.registerUniform("output_size","u32").declareVariables(t,n,o)}
  ${Bg}
  ${zg(a)}
  ${Rg(r)}
  ${jg(r)}
  ${Ng(t,a,r)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${Pn}]);
      let W_in = i32(uniforms.x_shape[${Cn}]);

      ${r.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${o.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${$s}], indices[${Pn}], indices[${Cn}]);
      let nxy = ${n.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${Ug(o,a,r)}
  }`;return{name:"GridSample",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:["type","type"]},getRunData:u=>{let p=Te.size(i);return{outputs:[{dims:i,dataType:u[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:d}},getShaderSource:c}},nb=(e,r)=>{Lg(e.inputs),e.compute(Vg(e.inputs,r))},ib=e=>zt({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),Wr,Wg,ob,ku,Gg,uo,ab,lb=Ge(()=>{Mt(),Et(),ur(),Bc(),jc(),Ct(),en(),Wr=(e,r)=>e.length>r&&e[r].dims.length>0?e[r]:void 0,Wg=(e,r)=>{let t=e[0],s=Wr(e,1),n=Wr(e,2),i=Wr(e,3),o=Wr(e,4),a=Wr(e,5),l=Wr(e,6),d=Wr(e,7);if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let c=t.dims[0],u=t.dims[1],p=t.dims.length===3?t.dims[2]:r.numHeads*t.dims[4],_=u,f=0,P=0,A=Math.floor(p/r.numHeads);if(l&&d&&Te.size(l.dims)&&Te.size(d.dims)){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==c||l.dims[1]!==r.numHeads||l.dims[3]!==A)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(d.dims[0]!==c||d.dims[1]!==r.numHeads||d.dims[3]!==A)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==d.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(d.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');f=l.dims[2],P=l.dims[2]}else if(l&&Te.size(l.dims)||d&&Te.size(d.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let y;if(s&&Te.size(s.dims)>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(s.dims[2]!==t.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');y=2,_=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==A)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw new Error('Expect "value" be none when "key" has packed kv format.');y=5,_=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==A)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');y=0,_=s.dims[2]}}else{if(t.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(t.dims[2]!==r.numHeads||t.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');y=3}if(i&&Te.size(i.dims)>0){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&s.dims.length===5&&s.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let g=f+_,I=0;if(o&&Te.size(o.dims)>0){I=8;let b=o.dims;throw b.length===1?b[0]===c?I=1:b[0]===3*c+2&&(I=3):b.length===2&&b[0]===c&&b[1]===g&&(I=5),I===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let v=!1,T=p;if(n&&Te.size(n.dims)>0){if(n.dims.length!==3&&n.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==n.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(n.dims.length===3){if(_!==n.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');T=n.dims[2]}else{if(_!==n.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');T=n.dims[1]*n.dims[3],v=!0}}let x=!1;if(o&&Te.size(o.dims)>0)throw new Error("Key padding mask is not supported");if(a&&Te.size(a.dims)>0){if(a.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(a.dims[0]!==c||a.dims[1]!==r.numHeads||a.dims[2]!==u||a.dims[3]!==g)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:c,sequenceLength:u,pastSequenceLength:f,kvSequenceLength:_,totalSequenceLength:g,maxSequenceLength:P,inputHiddenSize:0,hiddenSize:p,vHiddenSize:T,headSize:A,vHeadSize:Math.floor(T/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:I,scale:r.scale,broadcastResPosBias:x,passPastInKv:v,qkvFormat:y}},ob=e=>zt({...e}),ku=zt({perm:[0,2,1,3]}),Gg=(e,r,t,s,n,i,o)=>{let a=[s,n,i],l=Te.size(a),d=[{type:12,data:l},{type:12,data:o},{type:12,data:i}],c=u=>{let p=ct("qkv_with_bias",r.dataType,a),_=ke("qkv",r.dataType,a),f=ke("bias",t.dataType,a),P=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${u.registerUniforms(P).declareVariables(_,f,p)}
  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:c},{inputs:[r,t],outputs:[-1]})[0]},uo=(e,r,t,s,n,i,o,a)=>{let l=i;if(o&&Te.size(o.dims)>0){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=Gg(e,i,o,r,s,t*n,a),l=l.reshape([r,s,t,n]),t===1||s===1?l:e.compute(Xr(l,ku.perm),{inputs:[l],outputs:[-1]})[0]}else return i.dims.length===3&&(l=i.reshape([r,s,t,n])),t===1||s===1?l:e.compute(Xr(l,ku.perm),{inputs:[l],outputs:[-1]})[0]},ab=(e,r)=>{let t=Wg(e.inputs,r),s=e.inputs[0],n=Wr(e.inputs,1),i=Wr(e.inputs,2),o=Wr(e.inputs,3),a=Wr(e.inputs,4),l=Wr(e.inputs,5),d=Wr(e.inputs,6),c=Wr(e.inputs,7);if(s.dims.length===5)throw new Error("Packed QKV is not implemented");if(n?.dims.length===5)throw new Error("Packed KV is not implemented");let u=n&&i&&n.dims.length===4&&i.dims.length===4,p=uo(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,s,o,0);if(u)return fo(e,p,n,i,a,void 0,d,c,l,t);if(!n||!i)throw new Error("key and value must be provided");let _=uo(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,n,o,t.hiddenSize),f=uo(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,i,o,2*t.hiddenSize);fo(e,p,_,f,a,void 0,d,c,l,t)}}),Kg,Hg,qg,Qg,gc,ub,cb,db=Ge(()=>{Mt(),Et(),ur(),Ct(),Kg=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Hg=(e,r)=>{let t=[],s=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>t.push(Number(n))),s=t.length),zt({numOutputs:s,axis:r.axis,splitSizes:t})},qg=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${dt("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,Qg=e=>{let r=e.length,t=[];for(let s=0;s<r;++s){let n=e[s].setByIndices("indices","input[global_idx]");r===1?t.push(n):s===0?t.push(`if (output_number == ${s}u) { ${n} }`):s===r-1?t.push(`else { ${n} }`):t.push(`else if (output_number == ${s}) { ${n} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${t.join(`
`)}
      }`},gc=(e,r)=>{let t=e[0].dims,s=Te.size(t),n=e[0].dataType,i=Te.normalizeAxis(r.axis,t.length),o=new Array(r.numOutputs),a=ke("input",n,t.length),l=new Array(r.numOutputs),d=[],c=[],u=0,p=[{type:12,data:s}];for(let f=0;f<r.numOutputs;f++){u+=r.splitSizes[f],l[f]=u;let P=t.slice();P[i]=r.splitSizes[f],c.push(P),o[f]=ct(`output${f}`,n,P.length),d.push({dims:c[f],dataType:e[0].dataType})}p.push({type:12,data:l},...ht(t,...c));let _=f=>`
  ${f.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(a,...o)}
  ${qg(l.length)}
  ${Qg(o)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",i)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${dt("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${a.indicesSet("indices",i,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:d,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:p})}},ub=(e,r)=>{Kg(e.inputs);let t=e.inputs.length===1?r:Hg(e.inputs,r);e.compute(gc(e.inputs,t),{inputs:[0]})},cb=e=>{let r=e.axis,t=e.splitSizes,s=e.numOutputs<0?t.length:e.numOutputs;if(s!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return zt({axis:r,numOutputs:s,splitSizes:t})}}),Xg,ka,pb,hb=Ge(()=>{Mt(),Et(),ur(),Ct(),Xg=(e,r)=>{let[t,s,n,i]=e,{numHeads:o,rotaryEmbeddingDim:a}=r;if(t.dims.length!==3&&t.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${t.dims.length}`);if(!Te.areEqual(s.dims,[])&&!Te.areEqual(s.dims,[1])&&s.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${s.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(!Te.areEqual(n.dims,i.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(a>0&&o===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=t.dims[0],d=t.dims[t.dims.length-2],c=n.dims[0],u=Te.sizeFromDimension(t.dims,1)/d,p=a===0?n.dims[1]*2:u/o;if(a>p)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(s.dims.length===2){if(l!==s.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${s.dims[0]}`);if(d!==s.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${s.dims[1]}`)}if(p/2!==n.dims[1]&&a/2!==n.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${n.dims[1]}`);if(d>c)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},ka=(e,r)=>{let{interleaved:t,numHeads:s,rotaryEmbeddingDim:n,scale:i}=r,o=e[0].dims[0],a=Te.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],d=a/l,c=e[2].dims[1],u=n===0?c*2:d/s,p=new Array(o,l,d/u,u-c),_=Te.computeStrides(p),f=[{type:1,data:i},{type:12,data:p},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[a,d,u,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[a,u,l*u,1]}):[],...ht(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],P=A=>{let y=ke("input",e[0].dataType,e[0].dims.length),g=ke("position_ids",e[1].dataType,e[1].dims.length),I=ke("cos_cache",e[2].dataType,e[2].dims.length),v=ke("sin_cache",e[3].dataType,e[3].dims.length),T=ct("output",e[0].dataType,e[0].dims.length);return A.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:p.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`
        ${A.declareVariables(y,g,I,v,T)}

        ${A.mainStart(hi)}
          let half_rotary_emb_dim = uniforms.${I.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${A.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${g.broadcastedIndicesToOffset("bsnh.xy",ct("",g.type.tensor,2))};
            let position_id =
                u32(${g.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${t});
            let j = i + select(half_rotary_emb_dim, 1, ${t});
            let re = ${y.getByOffset("i")} * ${I.get("position_id","bsnh[3]")} -
                ${y.getByOffset("j")} * ${v.get("position_id","bsnh[3]")};
            ${T.setByOffset("i","re")}
            let im = ${y.getByOffset("i")} * ${v.get("position_id","bsnh[3]")} +
                ${y.getByOffset("j")} * ${I.get("position_id","bsnh[3]")};
            ${T.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${T.setByOffset("k",y.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:zt({interleaved:t}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:P,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Te.size(p)/hi)},programUniforms:f})}},pb=(e,r)=>{Xg(e.inputs,r),e.compute(ka(e.inputs,r))}}),Yg,Jg,Au,Zg,mb,O1=Ge(()=>{ur(),Mt(),jc(),lb(),db(),en(),hb(),Ct(),Yg=(e,r)=>{if(r.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let t=e[0],s=e[1],n=e[2],i=e[3],o=e[4];if(r.doRotary!==0&&e.length<=7)throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(r.localWindowSize!==-1)throw new Error("Local attention is not supported");if(r.softcap!==0)throw new Error("Softcap is not supported");if(r.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let a=!1,l=t.dims[0],d=t.dims[1],c=t.dims.length===3?a?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],u=d,p=0,_=!s||s.dims.length===0,f=Math.floor(_?c/(r.numHeads+2*r.kvNumHeads):c/r.numHeads);_&&(c=f*r.numHeads);let P=i&&i.dims.length!==0,A=o&&o.dims.length!==0;if(P&&i.dims.length===4&&i.dims[0]===l&&i.dims[1]!==r.kvNumHeads&&i.dims[2]===r.kvNumHeads&&i.dims[3]===f)throw new Error("BSNH pastKey/pastValue is not supported");if(P&&A){if(i.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(o.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');p=i.dims[2]}else if(P||A)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let y=1;if(s&&s.dims.length>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(t.dims[2]%s.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');u=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==f)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw new Error('Expect "value" be none when "key" has packed kv format.');u=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==f)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');u=s.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');y=3}let g=0,I=!1,v=r.kvNumHeads?f*r.kvNumHeads:c;if(n&&n.dims.length>0){if(n.dims.length!==3&&n.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==n.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(n.dims.length===3){if(u!==n.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=n.dims[2]}else{if(u!==n.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');v=n.dims[1]*n.dims[3],I=!0}}let T=e.length>4?e[5]:void 0;if(T&&T.dims.length!==1&&T.dims[0]!==l)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:d,pastSequenceLength:p,kvSequenceLength:u,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:c,vHiddenSize:v,headSize:f,vHeadSize:Math.floor(v/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:g,scale:r.scale,broadcastResPosBias:!1,passPastInKv:I,qkvFormat:y}},Jg=zt({perm:[0,2,1,3]}),Au=(e,r,t)=>{let s=r,n=t.kvNumHeads;return r.dims.length===3&&t.kvSequenceLength!==0&&(s=r.reshape([t.batchSize,t.kvSequenceLength,n,t.headSize]),s=e.compute(Xr(s,Jg.perm),{inputs:[s],outputs:[-1]})[0]),s},Zg=(e,r,t,s)=>{let n=7,i=["type","type"],o=[e*r],a=e*r,l=[{type:12,data:a},{type:12,data:r},{type:12,data:e}],d=c=>{let u=ke("seq_lens",t.dataType,t.dims),p=ke("total_seq_lens",s.dataType,s.dims),_=ct("pos_ids",n,o),f=[{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}];return`
  ${c.registerUniforms(f).declareVariables(u,p,_)}
  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let total_sequence_length = u32(${p.getByOffset("0")});
    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;
    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;
    let batch_idx = global_idx / uniforms.sequence_length;
    let sequence_idx = i32(global_idx % uniforms.sequence_length);
    var pos_id: i32 = 0;
    let seqlen = ${u.getByOffset("batch_idx")};
    let total_seqlen = seqlen + 1;
    if (is_first_prompt) {
      if (sequence_idx < total_seqlen) {
        pos_id = sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (is_subsequent_prompt) {
      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);
      if (past_seqlen + sequence_idx < total_seqlen) {
        pos_id = past_seqlen + sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (global_idx < uniforms.batch_size) {
      ${_.setByOffset("global_idx","seqlen")}
    };
  }
  `};return{name:"GeneratePositionIds",shaderCache:{hint:`${e};${r}`,inputDependencies:i},getRunData:()=>({outputs:[{dims:o,dataType:n}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:l}),getShaderSource:d}},mb=(e,r)=>{let t=Yg(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let s=e.inputs[0],n=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,i=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,o=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,a=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,l=e.inputs.length>4?e.inputs[5]:void 0,d=e.inputs.length>5?e.inputs[6]:void 0,c=t.kvNumHeads?t.kvNumHeads:t.numHeads,u=zt({axis:2,numOutputs:3,splitSizes:[t.numHeads*t.headSize,c*t.headSize,c*t.headSize]}),[p,_,f]=!n&&!i?e.compute(gc([s],u),{inputs:[s],outputs:[-1,-1,-1]}):[s,n,i],P,A;if(r.doRotary){let v=e.compute(Zg(t.batchSize,t.sequenceLength,l,d),{inputs:[l,d],outputs:[-1]})[0],T=e.inputs[7],x=e.inputs[8],b=zt({interleaved:r.rotaryInterleaved!==0,numHeads:t.numHeads,rotaryEmbeddingDim:0,scale:r.scale}),$=[p,v,T,x],j=[-1];P=e.compute(ka($,b),{inputs:$,outputs:j})[0],$.splice(0,1,_);let B=zt({interleaved:r.rotaryInterleaved!==0,numHeads:t.kvNumHeads,rotaryEmbeddingDim:0,scale:r.scale});A=e.compute(ka($,B),{inputs:$,outputs:j})[0]}let y=uo(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,r.doRotary?P:p,void 0,0),g=Au(e,r.doRotary?A:_,t),I=Au(e,f,t);fo(e,y,g,I,void 0,void 0,o,a,void 0,t,l,d)}}),Fu,ew,tw,fb,D1=Ge(()=>{Mt(),Et(),en(),Ct(),Fu=(e,r,t,s,n,i,o,a)=>{let l=or(i),d=l===1?"f32":`vec${l}f`,c=l===1?"vec2f":`mat2x${l}f`,u=n*o,p=64;u===1&&(p=256);let _=[n,o,i/l],f=[n,o,2],P=["rank","type","type"],A=[];A.push(...ht(_,f));let y=g=>{let I=ke("x",r.dataType,3,l),v=ke("scale",t.dataType,t.dims),T=ke("bias",s.dataType,s.dims),x=ct("output",1,3,2),b=[I,v,T,x];return`
  var<workgroup> workgroup_shared : array<${c}, ${p}>;
  const workgroup_size = ${p}u;
  ${g.declareVariables(...b)}
  ${g.mainStart(p)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${d}(0);
    var squared_sum = ${d}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${d}(${I.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${c}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Zs("workgroup_shared[0][0]",l)} / f32(hight * ${l});
      let squared_sum_final = ${Zs("workgroup_shared[0][1]",l)} / f32(hight * ${l});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${a}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${a};${p}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:f,dataType:1}],dispatchGroup:{x:u},programUniforms:A}),getShaderSource:y},{inputs:[r,t,s],outputs:[-1]})[0]},ew=(e,r,t)=>{let s=r[0].dims,n=s,i=2,o=s[0],a=s[1],l=Te.sizeFromDimension(s,i),d=or(l),c=Te.size(n)/d,u=Fu(e,r[0],r[1],r[2],o,l,a,t.epsilon),p=[o,a,l/d],_=[o,a],f=["type","none"],P=A=>{let y=ke("x",r[0].dataType,p.length,d),g=ke("scale_shift",1,_.length,2),I=ct("output",r[0].dataType,p.length,d),v=[y,g,I];return`
  ${A.registerUniform("output_size","u32").declareVariables(...v)}
  ${A.mainStart()}
  ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${I.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${g.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${y.getByOffset("global_idx")} * ${I.type.value}(scale_shift.x) + ${I.type.value}(scale_shift.y);
      ${I.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${d}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:[{type:12,data:c},...ht(p,_,p)]}),getShaderSource:P},{inputs:[r[0],u]})},tw=(e,r,t)=>{let s=r[0].dims,n=s,i=s[0],o=s[s.length-1],a=Te.sizeFromDimension(s,1)/o,l=or(o),d=Te.size(n)/l,c=[{type:12,data:a},{type:12,data:Math.floor(o/l)}],u=["type","type"],p=!1,_=[0,s.length-1];for(let y=0;y<s.length-2;y++)p=p||s[y+1]!==1,_.push(y+1);p=p&&s[s.length-1]!==1;let f=p?e.compute(Xr(e.inputs[0],_),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:s.length},(y,g)=>s[_[g]])),P=Fu(e,f,r[1],r[2],i,a,o,t.epsilon),A=y=>{let g=Cr(r[0].dataType),I=l===1?"vec2f":`mat${l}x2f`,v=b=>{let $=b===0?"x":"y",j=l===1?"f32":`vec${l}f`;switch(l){case 1:return`${g}(${j}(scale.${$}))`;case 2:return`vec2<${g}>(${j}(scale[0].${$}, scale[1].${$}))`;case 4:return`vec4<${g}>(${j}(scale[0].${$}, scale[1].${$}, scale[2].${$}, scale[3].${$}))`;default:throw new Error(`Not supported compoents ${l}`)}},T=ke("input",r[0].dataType,r[0].dims,l),x=ct("output",r[0].dataType,n,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${T.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${I}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${x.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${y.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${v(0)}, ${v(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:A},{inputs:[r[0],P]})},fb=(e,r)=>{r.format==="NHWC"?tw(e,e.inputs,r):ew(e,e.inputs,r)}}),rw,sw,_b,L1=Ge(()=>{Mt(),Et(),Ct(),rw=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},sw=(e,r,t)=>{let s=r.simplified,n=e[0].dims,i=e[1],o=!s&&e[2],a=n,l=Te.normalizeAxis(r.axis,n.length),d=Te.sizeToDimension(n,l),c=Te.sizeFromDimension(n,l),u=Te.size(i.dims),p=o?Te.size(o.dims):0;if(u!==c||o&&p!==c)throw new Error(`Size of X.shape()[axis:] == ${c}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${u} and bias size of ${p}`);let _=[];for(let T=0;T<n.length;++T)T<l?_.push(n[T]):_.push(1);let f=or(c),P=["type","type"],A=[{type:12,data:d},{type:1,data:c},{type:12,data:Math.floor(c/f)},{type:1,data:r.epsilon}];o&&P.push("type");let y=t>1,g=t>2,I=T=>{let x=Cr(e[0].dataType),b=[ke("x",e[0].dataType,e[0].dims,f),ke("scale",i.dataType,i.dims,f)];o&&b.push(ke("bias",o.dataType,o.dims,f)),b.push(ct("output",e[0].dataType,a,f)),y&&b.push(ct("mean_data_output",1,_)),g&&b.push(ct("inv_std_output",1,_));let $=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${T.registerUniforms($).declareVariables(...b)}
  ${T.mainStart()}
    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${lc("f32",f)};
    var mean_square_vector = ${lc("f32",f)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${ci(x,f,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Zs("mean_vector",f)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Zs("mean_square_vector",f)} / uniforms.norm_size ${s?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${ci(x,f,"x[j + offset]")};
      let f32scale = ${ci(x,f,"scale[j]")};
      output[j + offset] = ${b[0].type.value}((f32input ${s?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${ci(x,f,"bias[j]")}`:""}
      );
    }

    ${y?"mean_data_output[global_idx] = mean":""};
    ${g?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},v=[{dims:a,dataType:e[0].dataType}];return y&&v.push({dims:_,dataType:1}),g&&v.push({dims:_,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${t};${s}`,inputDependencies:P},getRunData:()=>({outputs:v,dispatchGroup:{x:Math.ceil(d/64)},programUniforms:A}),getShaderSource:I}},_b=(e,r)=>{rw(e.inputs),e.compute(sw(e.inputs,r,e.outputCount))}}),nw,gb,B1=Ge(()=>{Et(),Gc(),Kc(),nw=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},gb=e=>{nw(e.inputs);let r=pi.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can't use matmul on the given tensors");let t=r[r.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];if(t<8&&s<8)e.compute(Wc(e.inputs,{activation:""},r));else{let n=r[r.length-2],i=Te.size(e.inputs[0].dims.slice(0,-2)),o=Te.size(e.inputs[1].dims.slice(0,-2));if(i!==1&&n===1&&o===1){let a=e.inputs[0].reshape([1,i,s]),l=e.inputs[1].reshape([1,s,t]),d=[1,i,t],c=[a,l];e.compute(Ia(c,{activation:""},r,d),{inputs:c})}else e.compute(Ia(e.inputs,{activation:""},r))}}}),iw,ow,aw,wb,yb,z1=Ge(()=>{Mt(),Et(),ur(),Ct(),iw=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],s=t.dims.length;if(t.dims[s-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let n=Math.floor((r.k+r.blockSize-1)/r.blockSize),i=r.blockSize/8*r.bits,o=e[1];if(!Te.areEqual(o.dims,[r.n,n,i]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let a=e[2].dims;if(Te.size(a)!==r.n*n)throw new Error("scales input size error.");if(e.length===4){let l=e[3].dims,d=r.bits>4?r.n*n:r.n*Math.floor((n+1)/2);if(Te.size(l)!==d)throw new Error("zeroPoints input size error.")}},ow=(e,r)=>{let t=e[0].dims,s=t.length,n=t[s-2],i=r.k,o=r.n,a=t.slice(0,s-2),l=Te.size(a),d=e[1].dims[2]/4,c=e[0].dataType,u=or(r.k),p=or(d),_=or(o),f=a.concat([n,o]),P=n>1&&o/_%2===0?2:1,A=Te.size(f)/_/P,y=64,g=[],I=[l,n,i/u],v=Te.convertShape(e[1].dims).slice();v.splice(-1,1,d/p),g.push(...ht(I)),g.push(...ht(v)),g.push(...ht(e[2].dims)),e.length===4&&g.push(...ht(Te.convertShape(e[3].dims)));let T=[l,n,o/_];g.push(...ht(T));let x=b=>{let $=I.length,j=ke("a",e[0].dataType,$,u),B=ke("b",12,v.length,p),X=ke("scales",e[2].dataType,e[2].dims.length),re=[j,B,X],z=e.length===4?ke("zero_points",12,e[3].dims.length):void 0;z&&re.push(z);let te=T.length,W=ct("output",e[0].dataType,te,_),K=Cr(e[0].dataType),se=(()=>{switch(u){case 1:return`array<${K}, 8>`;case 2:return`mat4x2<${K}>`;case 4:return`mat2x4<${K}>`;default:throw new Error(`${u}-component is not supported.`)}})(),J=()=>{let N=`
          // reuse a data
            var input_offset = ${j.indicesToOffset(`${j.type.indices}(batch, row, word_offset)`)};
            var a_data: ${se};
            for (var j: u32 = 0; j < ${8/u}; j++) {
              a_data[j] = ${j.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let D=0;D<_*P;D++)N+=`
            b_value = ${p===1?`b${D}_data`:`b${D}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${se}(${Array.from({length:4},(Q,U)=>`${K}(b_value_lower[${U}]), ${K}(b_value_upper[${U}])`).join(", ")});
            b_dequantized_values = ${u===1?`${se}(${Array.from({length:8},(Q,U)=>`(b_quantized_values[${U}] - ${z?`zero_point${D}`:"zero_point"}) * scale${D}`).join(", ")});`:`(b_quantized_values - ${se}(${Array(8).fill(`${z?`zero_point${D}`:"zero_point"}`).join(",")})) * scale${D};`};
            workgroup_shared[local_id.x * ${P} + ${Math.floor(D/_)}]${_>1?`[${D%_}]`:""} += ${Array.from({length:8/u},(Q,U)=>`${u===1?`a_data[${U}] * b_dequantized_values[${U}]`:`dot(a_data[${U}], b_dequantized_values[${U}])`}`).join(" + ")};
          `;return N},ue=()=>{let N=`
            var col_index = col * ${_};
            ${z?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${K}(8);`}
            `;for(let D=0;D<_*P;D++)N+=`
            let scale${D} = ${X.getByOffset("col_index * nBlocksPerCol + block")};
            ${z?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${z.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${D} = ${K}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return N},ce=()=>{let N=`col_index = col * ${_};`;for(let D=0;D<_*P;D++)N+=`
            let b${D}_data = ${B.getByIndices(`${B.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return N+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${se};
            var b_dequantized_values: ${se};`,N};return`
        var<workgroup> workgroup_shared: array<${W.type.value}, ${P*y}>;
        ${b.declareVariables(...re,W)}
        ${b.mainStart([y,1,1])}
          let output_indices = ${W.offsetToIndices(`(global_idx / ${y}) * ${P}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${y}) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/u};
            ${ue()}
            for (var word: u32 = 0; word < ${d}; word += ${p}) {
              ${ce()}
              for (var i: u32 = 0; i < ${p}; i++) {
                ${J()}
                word_offset += ${8/u};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${P}) {
            var output_value: ${W.type.value} = ${W.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${y}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${P};
            }
            ${W.setByIndices(`${W.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${u};${p};${_};${P};${y}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:c}],dispatchGroup:{x:A},programUniforms:g}),getShaderSource:x}},aw=(e,r)=>{let t=e[0].dims,s=t.length,n=t[s-2],i=r.k,o=r.n,a=t.slice(0,s-2),l=Te.size(a),d=e[1].dims[2]/4,c=e[0].dataType,u=or(r.k),p=or(d),_=a.concat([n,o]),f=128,P=o%8===0?8:o%4===0?4:1,A=f/P,y=A*p*8,g=y/u,I=y/r.blockSize,v=Te.size(_)/P,T=[],x=[l,n,i/u],b=Te.convertShape(e[1].dims).slice();b.splice(-1,1,d/p),T.push(...ht(x)),T.push(...ht(b)),T.push(...ht(e[2].dims)),e.length===4&&T.push(...ht(Te.convertShape(e[3].dims)));let $=[l,n,o];T.push(...ht($));let j=B=>{let X=x.length,re=ke("a",e[0].dataType,X,u),z=ke("b",12,b.length,p),te=ke("scales",e[2].dataType,e[2].dims.length),W=[re,z,te],K=e.length===4?ke("zero_points",12,e[3].dims.length):void 0;K&&W.push(K);let se=$.length,J=ct("output",e[0].dataType,se),ue=Cr(e[0].dataType),ce=()=>{switch(u){case 1:return`
          let a_data0 = vec4<${ue}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${ue}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${ue}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${ue}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${u}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${re.type.value}, ${g}>;
        var<workgroup> inter_results: array<array<${J.type.value}, ${A}>, ${P}>;
        ${B.declareVariables(...W,J)}
        ${B.mainStart([A,P,1])}
          let output_indices = ${J.offsetToIndices(`workgroup_index * ${P}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${I} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${g};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${g}; a_offset += ${f})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${re.getByIndices(`${re.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${re.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${I} + local_id.x;
            ${K?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${K.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${ue}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${ue}(8);`}
            let scale = ${te.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${z.getByIndices(`${z.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/u};
            for (var i: u32 = 0; i < ${p}; i++) {
              ${ce()}
              let b_value = ${p===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${ue}>(${Array.from({length:4},(N,D)=>`${ue}(b_value_lower[${D}]), ${ue}(b_value_upper[${D}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${ue}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(N,D)=>`${`dot(a_data${D}, b_dequantized_values[${D}])`}`).join(" + ")};
              word_offset += ${8/u};
            }
            workgroupBarrier();
          }

          if (local_idx < ${P}) {
            var output_value: ${J.type.value} = ${J.type.value}(0);
            for (var b = 0u; b < ${A}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${J.setByIndices(`${J.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${u};${p};${A};${P}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:_,dataType:c}],dispatchGroup:{x:v},programUniforms:T}),getShaderSource:j}},wb=(e,r)=>{iw(e.inputs,r),r.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(aw(e.inputs,r)):e.compute(ow(e.inputs,r))},yb=e=>zt(e)}),lw,uw,cw,dw,pw,hw,mw,fw,Mb,R1=Ge(()=>{Mt(),Et(),Ct(),lw=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},uw=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
            k = i32(${e.indicesGet("indices",n)}) - ${dt("uniforms.pads",n,t)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${dt("uniforms.x_shape",n,r)})) {
              break;
            }
            offset += k * i32(${dt("uniforms.x_strides",n,r)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},cw=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${dt("uniforms.pads",n,t)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${dt("uniforms.x_shape",n,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${dt("uniforms.x_shape",n,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${dt("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},dw=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${dt("uniforms.pads",n,t)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${dt("uniforms.x_shape",n,r)})) {
                  k = i32(${dt("uniforms.x_shape",n,r)}) - 1;
                }
                offset += k * i32(${dt("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},pw=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${dt("uniforms.pads",n,t)};
                if (k < 0)  {
                  k += i32(${dt("uniforms.x_shape",n,r)}]);
                }
                if (k >= i32(${dt("uniforms.x_shape",n,r)})) {
                  k -= i32(${dt("uniforms.x_shape",n,r)});
                }
                offset += k * i32(${dt("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},hw=(e,r,t)=>{switch(t.mode){case 0:return uw(e,r,t.pads.length);case 1:return cw(e,r,t.pads.length);case 2:return dw(e,r,t.pads.length);case 3:return pw(e,r,t.pads.length);default:throw new Error("Invalid mode")}},mw=(e,r)=>{let t=Te.padShape(e[0].dims.slice(),r.pads),s=e[0].dims,n=Te.size(t),i=[{type:12,data:n},{type:6,data:r.pads}],o=e.length>=3&&e[2].data;r.mode===0&&i.push({type:o?e[2].dataType:1,data:r.value}),i.push(...ht(e[0].dims,t));let a=["rank"],l=d=>{let c=ct("output",e[0].dataType,t.length),u=ke("x",e[0].dataType,s.length),p=u.type.value,_=hw(c,s.length,r),f=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&f.push({name:"constant_value",type:o?p:"f32"}),`
            ${d.registerUniforms(f).declareVariables(u,c)}
            ${d.mainStart()}
            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${c.offsetToIndices("global_idx")};

            var value = ${p}(0);
            ${_}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}${o}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Te.size(t)/64)},programUniforms:i}),getShaderSource:l}},fw=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,n=e[0].dims.length,i=new Int32Array(2*n).fill(0);if(e.length>=4){let a=e[3].getBigInt64Array();for(let l=0;l<a.length;l++)i[Number(a[l])]=Number(t[l]),i[Number(a[l])+n]=Number(t[l+a.length])}else t.forEach((a,l)=>i[Number(l)]=Number(a));let o=[];return i.forEach(a=>o.push(a)),{mode:r.mode,value:s,pads:o}}else return r},Mb=(e,r)=>{lw(e.inputs);let t=fw(e.inputs,r);e.compute(mw(e.inputs,t),{inputs:[0]})}}),to,Ou,Du,Lu,Bu,_w,gw,zu,Ru,bb,vb,ju,xb,Tb,Nu,Eb,Pb,Cb,Sb,j1=Ge(()=>{xs(),Mt(),Et(),Ct(),to=e=>{if(Xt.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Ou=(e,r,t)=>{let s=r.format==="NHWC",n=e.dims.slice();s&&n.splice(1,0,n.pop());let i=Object.hasOwnProperty.call(r,"dilations"),o=r.kernelShape.slice(),a=r.strides.slice(),l=i?r.dilations.slice():[],d=r.pads.slice();Sa.adjustPoolAttributes(t,n,o,a,l,d);let c=Sa.computePoolOutputShape(t,n,a,l,o,d,r.autoPad),u=Object.assign({},r);i?Object.assign(u,{kernelShape:o,strides:a,pads:d,dilations:l,cacheKey:r.cacheKey}):Object.assign(u,{kernelShape:o,strides:a,pads:d,cacheKey:r.cacheKey});let p=c.slice();return p.push(p.splice(1,1)[0]),[u,s?p:c]},Du=(e,r)=>{let t=r.format==="NHWC",s=Te.size(e),n=Te.size(r.kernelShape),i=[{type:12,data:s},{type:12,data:n}],o=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let a=r.kernelShape[r.kernelShape.length-1],l=r.strides[r.strides.length-1],d=r.pads[r.pads.length/2-1],c=r.pads[r.pads.length-1],u=!!(d+c);i.push({type:12,data:a},{type:12,data:l},{type:12,data:d},{type:12,data:c}),o.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let p=!1;if(r.kernelShape.length===2){let _=r.kernelShape[r.kernelShape.length-2],f=r.strides[r.strides.length-2],P=r.pads[r.pads.length/2-2],A=r.pads[r.pads.length-2];p=!!(P+A),i.push({type:12,data:_},{type:12,data:f},{type:12,data:P},{type:12,data:A}),o.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,o,!0,u,p]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=Te.computeStrides(r.kernelShape);i.push({type:12,data:a},{type:12,data:r.pads},{type:12,data:r.strides}),o.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let l=r.pads.reduce((d,c)=>d+c);return[i,o,!!l,!1,!1]}},Lu=(e,r,t,s,n,i,o,a,l,d,c,u)=>{let p=n.format==="NHWC",_=r.type.value,f=ct("output",r.type.tensor,s);if(n.kernelShape.length<=2){let P="",A="",y="",g=t-(p?2:1);if(c?P=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${g}] < 0 || xIndices[${g}]
                      >= uniforms.x_shape[${g}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${i}
                }`:P=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${i}
                }`,n.kernelShape.length===2){let I=t-(p?3:2);u?A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${I}] = indices[${I}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${I}] < 0 || xIndices[${I}] >= uniforms.x_shape[${I}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${I}] = indices[${I}] * uniforms.sh - uniforms.phStart + j;
                `,y=`
              }
            `}return`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var value = ${_}(${a});
              var pad = 0;
              ${A}
              ${P}
              ${y}
              ${o}

              output[global_idx] = value;
            }`}else{if(p)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let P=n.kernelShape.length,A=n.pads.length,y="";return d?y=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${i}
              }`:y=`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var offsets: array<u32, ${P}>;

              var value = ${_}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${P-1}u; j++) {
                  offsets[j] = offset / ${dt("uniforms.kernelStrides","j",P)};
                  offset -= offsets[j] * ${dt("uniforms.kernelStrides","j",P)};
                }
                offsets[${P-1}] = offset;

                isPad = false;
                for (var j = ${t-P}u; j < ${t}u; j++) {
                  xIndices[j] = indices[j] * ${dt("uniforms.strides",`j - ${t-P}u`,P)}
                    + offsets[j - ${t-P}u] - ${dt("uniforms.pads","j - 2u",A)};
                  ${y}
              }
              ${o}

              output[global_idx] = value;
            }`}},Bu=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,_w=e=>`${Bu(e)};${e.countIncludePad}`,gw=e=>`${Bu(e)};${e.storageOrder};${e.dilations}`,zu=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Ru=(e,r,t,s)=>{let[n,i]=Ou(r,s,t),o=ke("x",r.dataType,r.dims.length),a=o.type.value,l="value += x_val;",d="";n.countIncludePad?d+=`value /= ${a}(uniforms.kernelSize);`:d+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[c,u,p,_,f]=Du(i,n);c.push(...ht(r.dims,i));let P=["rank"];return{name:e,shaderCache:{hint:`${s.cacheKey};${p};${_};${f}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:i,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(Te.size(i)/64)},programUniforms:c}),getShaderSource:A=>Lu(A,o,r.dims.length,i.length,n,l,d,0,u,p,_,f)}},bb=e=>{let r=e.count_include_pad!==0,t=zu(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:r,...t,cacheKey:""};return{...s,cacheKey:_w(s)}},vb=(e,r)=>{to(e.inputs),e.compute(Ru("AveragePool",e.inputs[0],!1,r))},ju={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},xb=e=>{let r=e.format;return{format:r,...ju,cacheKey:r}},Tb=(e,r)=>{to(e.inputs),e.compute(Ru("GlobalAveragePool",e.inputs[0],!0,r))},Nu=(e,r,t,s)=>{let[n,i]=Ou(r,s,t),o=`
      value = max(x_val, value);
    `,a="",l=ke("x",r.dataType,r.dims.length),d=["rank"],[c,u,p,_,f]=Du(i,n);return c.push(...ht(r.dims,i)),{name:e,shaderCache:{hint:`${s.cacheKey};${p};${_};${f}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:i,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(Te.size(i)/64)},programUniforms:c}),getShaderSource:P=>Lu(P,l,r.dims.length,i.length,n,o,a,r.dataType===10?-65504:-1e5,u,p,_,f)}},Eb=(e,r)=>{to(e.inputs),e.compute(Nu("MaxPool",e.inputs[0],!1,r))},Pb=e=>{let r=e.storage_order,t=e.dilations,s=zu(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let n={storageOrder:r,dilations:t,...s,cacheKey:""};return{...n,cacheKey:gw(n)}},Cb=e=>{let r=e.format;return{format:r,...ju,cacheKey:r}},Sb=(e,r)=>{to(e.inputs),e.compute(Nu("GlobalMaxPool",e.inputs[0],!0,r))}}),ww,yw,$b,Ib,N1=Ge(()=>{Mt(),Et(),ur(),Ct(),ww=(e,r)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((t,s)=>t===e[2].dims[s]).reduce((t,s)=>t&&s,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((n,i)=>i===r.axis||n===e[0].dims[i]).reduce((n,i)=>n&&i,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let t=e[0].dims[r.axis],s=e[1].dims[r.axis];if(r.blockSize<Math.ceil(t/s)||r.blockSize>Math.ceil(t/(s-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},yw=(e,r)=>{let t=Te.normalizeAxis(r.axis,e[0].dims.length),s=e[0].dataType,n=s===3,i=e[0].dims,o=e[1].dataType,a=Te.size(i),l=s===3||s===2,d=l?[Math.ceil(Te.size(e[0].dims)/4)]:e[0].dims,c=e[1].dims,u=e.length>2?e[2]:void 0,p=u?l?[Math.ceil(Te.size(u.dims)/4)]:u.dims:void 0,_=c.length===0||c.length===1&&c[0]===1,f=_===!1&&c.length===1,P=or(a),A=_&&(!l||P===4),y=A?P:1,g=A&&!l?P:1,I=ke("input",l?12:s,d.length,g),v=ke("scale",o,c.length),T=u?ke("zero_point",l?12:s,p.length):void 0,x=ct("output",o,i.length,y),b=[I,v];T&&b.push(T);let $=[d,c];u&&$.push(p);let j=[{type:12,data:a/y},{type:12,data:t},{type:12,data:r.blockSize},...ht(...$,i)],B=X=>{let re=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${X.registerUniforms(re).declareVariables(...b,x)}
      ${X.mainStart()}
          ${X.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${x.offsetToIndices("global_idx")};

          // Set input x
          ${l?`
            let input = ${I.getByOffset("global_idx / 4")};
            let x_vec = ${n?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${y===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${I.getByOffset("global_idx")};`};

          // Set scale input
          ${_?`let scale_value= ${v.getByOffset("0")}`:f?`
            let scale_index = ${x.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${v.getByOffset("scale_index")};`:`
            var scale_indices: ${v.type.indices} = output_indices;
            let index = ${v.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${v.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${v.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${T?_?l?`
                let zero_point_input = ${T.getByOffset("0")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${T.getByOffset("0")}`:f?l?`
                let zero_point_index = ${x.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${T.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${x.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${T.getByOffset("zero_point_index")};`:l?`
                let zero_point_offset = ${v.indicesToOffset("scale_indices")};
                let zero_point_input = ${T.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${T.getByIndices("scale_indices")};`:`let zero_point_value = ${l?n?"i32":"u32":I.type.value}(0);`};
      // Compute and write output
      ${x.setByOffset("global_idx",`${x.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:T?["rank","rank","rank"]:["rank","rank"]},getShaderSource:B,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:Math.ceil(a/y/64),y:1,z:1},programUniforms:j})}},$b=(e,r)=>{ww(e.inputs,r),e.compute(yw(e.inputs,r))},Ib=e=>zt({axis:e.axis,blockSize:e.blockSize})}),Mw,bw,kb,U1=Ge(()=>{xs(),Mt(),Ct(),Mw=(e,r,t)=>{let s=e===r,n=e<r&&t<0,i=e>r&&t>0;if(s||n||i)throw new Error("Range these inputs' contents are invalid.")},bw=(e,r,t,s)=>{let n=Math.abs(Math.ceil((r-e)/t)),i=[n],o=n,a=[{type:12,data:o},{type:s,data:e},{type:s,data:t},...ht(i)],l=d=>{let c=ct("output",s,i.length),u=c.type.value,p=[{name:"outputSize",type:"u32"},{name:"start",type:u},{name:"delta",type:u}];return`
        ${d.registerUniforms(p).declareVariables(c)}
        ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${u}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:i,dataType:s}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:a})}},kb=e=>{let r=0,t=0,s=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),Xt.webgpu.validateInputContent&&Mw(r,t,s),e.compute(bw(r,t,s,e.inputs[0].dataType),{inputs:[]})}}),vw,Uu,Vu,xw,Ab,Fb,V1=Ge(()=>{Mt(),Et(),ur(),Ct(),vw=(e,r,t,s)=>{if(e!=="none"&&s!=="i32"&&s!=="u32"&&s!=="f32")throw new Error(`Input ${s} is not supported with reduction ${e}.`);let n=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,i=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${r}=${t};`;case"add":return s==="i32"||s==="u32"?`atomicAdd(&${r}, bitcast<${s}>(${t}));`:`
              ${n}bitcast<${s}>(oldValue) + (${t})${i}`;case"max":return s==="i32"||s==="u32"?`atomicMax(&${r}, bitcast<${s}>(${t}));`:`
                ${n}max(bitcast<f32>(oldValue), (${t}))${i}`;case"min":return s==="i32"||s==="u32"?`atomicMin(&${r}, bitcast<${s}>(${t}));`:`${n}min(bitcast<${s}>(oldValue), (${t}))${i}`;case"mul":return`${n}(bitcast<${s}>(oldValue) * (${t}))${i}`;default:throw new Error(`Reduction ${e} is not supported.`)}},Uu=(e,r)=>`${e===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[${r?"i - indices_start":"i"}];
    let dim_value = uniforms.output_shape[${r?"i - indices_start":"i"} + uniforms.last_index_dimension];`}
    
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));`,Vu=(e,r,t)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {
        let value = updates[uniforms.num_updates_elements * ${t?"global_idx":"idx"} + i];
        ${vw(e.reduction,"output[data_offset + i]","value",r)}
      }`,xw=(e,r)=>{let t=e[0].dims,s=e[1].dims,n=t,i=1,o=Math.ceil(Te.size(s)/i),a=s[s.length-1],l=Te.sizeFromDimension(t,a),d=Te.sizeFromDimension(s,0)/a,c=[{type:12,data:o},{type:12,data:a},{type:12,data:l},...ht(e[1].dims,e[2].dims,n)],u=p=>{let _=ke("indices",e[1].dataType,e[1].dims.length),f=ke("updates",e[2].dataType,e[2].dims.length,i),P=r.reduction!=="none"&&r.reduction!==""?ay("output",e[0].dataType,n.length):ct("output",e[0].dataType,n.length,i);return`
      ${p.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(_,f,P)}
      ${p.mainStart()}
        ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${r.reduction==="none"}) {
    for (var i = 0; i < ${d}; i = i + 1) {
      for (var j = i + 1; j < ${d}; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  if (${r.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    // Process each index-update pair individually when duplicates exist
    for (var idx = 0u; idx < ${d}u; idx++) {
      var data_offset = 0u;
      for (var i = 0u; i < uniforms.last_index_dimension; i++) {
        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);
        ${Uu(t.length,!1)}
      }
      ${Vu(r,P.type.value,!1)}
    }
    return;
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  var indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${Uu(t.length,!0)}
  }
  ${Vu(r,P.type.value,!0)}
  }`};return{name:"ScatterND",shaderCache:{hint:`${r.cacheKey}_${r.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:c}),getShaderSource:u}},Ab=e=>zt({reduction:e.reduction}),Fb=(e,r)=>{e.compute(xw(e.inputs,r),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),Tw,Ew,Pw,Wu,Cw,Sw,$w,Iw,kw,Aw,Fw,Ow,Gu,Dw,Lw,Bw,zw,Rw,Ob,Db,W1=Ge(()=>{Mt(),Et(),ur(),Ct(),Tw=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Ew=(e,r,t)=>{r.every(n=>n>=0&&n<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(t).fill(1);return r.forEach((n,i)=>s[n]=e[i]),s},Pw=(e,r,t,s,n,i)=>{let[o,a,l]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],d=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach(c=>i.push(c));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&e.length>a&&e[a].dims.length===1&&e[a].dims[0]>0){if(e[a].getFloat32Array().forEach(c=>s.push(c)),s.length!==0&&s.length!==d&&t>=18&&s.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Tw(s,r),r.axes.length>0&&Ew(s,r.axes,d).forEach((c,u)=>s[u]=c)}if(l>0&&e.length>l&&e[l].dims.length===1&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach(c=>n.push(Number(c))),n.length!==0&&n.length!==d&&t>=18&&n.length!==r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(s.length!==0&&s.length!==r.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(n.length!==0&&n.length!==r.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof s<"u"&&typeof n<"u"&&s.length>0&&n.length>d)throw new Error("Resize requires only of scales or sizes to be specified")},Wu=(e,r,t,s)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${r});
  let whole = ${s}(big / (${t}));
  let fract = ${s}(big % (${t})) / ${s}(${t});
  return whole + fract;
`,Cw=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${r}(xResized) / ${r}(xScale);
          } else {
            ${Wu("xResized","lengthOriginal","lengthResized",r)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${Wu("xResized","lengthOriginal - 1","lengthResized - 1",r)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Sw=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",$w=(e,r,t)=>{let s=new Array(t).fill(0).concat(new Array(t).fill(1)),n=e.length===0?s:e.slice();return r.length>0?(r.forEach((i,o)=>{s[i]=n[o],s[o+t]=n[r.length+o]}),s):n},Iw=(e,r,t,s)=>{let n=[];if(t.length>0)if(s.length>0){if(e.forEach(i=>n.push(i)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((i,o)=>n[i]=t[o])}else t.forEach(i=>n.push(i));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((i,o)=>Math.round(i*r[o]))}return n},kw=(e,r,t)=>{let s=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(i=>r[i]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(i=>r[i]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let n=e.slice();return t.axes.length>0?(t.axes.forEach(i=>r[i]=s),t.axes.forEach(i=>n[i]=Math.round(e[i]*r[i]))):(r.fill(s,0,r.length),n.forEach((i,o)=>n[o]=Math.round(i*r[o]))),n},Aw=(e,r,t,s,n)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {
      var original_indices: array<${e.type.value}, ${t.length}>;
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${dt("uniforms.scales","i",s)};
        var roi_low = ${dt("uniforms.roi","i",n)};
        var roi_hi = ${dt("uniforms.roi",`i + ${r.length}`,n)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${dt("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${dt("uniforms.output_shape","i",t.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Fw=(e,r,t,s,n,i,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${dt("uniforms.scales","i",n)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${dt("uniforms.roi","i",i)};
          var roi_hi = ${dt("uniforms.roi",`i + ${t.length}`,i)};
          var input_shape_i = ${dt("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${dt("uniforms.output_shape","i",s.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,Ow=(e,r)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${dt("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,Gu=(e,r,t,s)=>e.rank>s?`
    ${e.indicesSet("input_indices",r,"channel")};
    ${e.indicesSet("input_indices",t,"batch")};
`:"",Dw=(e,r,t,s,n)=>{let[i,o,a,l]=t.length===2?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(row, ${t[o]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(col, ${t[a]} - 1))`)};
      ${Gu(e,l,i,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${o}];
      var col:${d} = originalIndices[${a}];
      ${s?`if (row < 0 || row > (${t[o]} - 1) || col < 0 || col > (${t[a]} - 1)) {
        return ${n};
      }`:""};
      row = max(0, min(row, ${t[o]} - 1));
      col = max(0, min(col, ${t[a]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${t.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${t.length>2?`u32(originalIndices[${i}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},Lw=(e,r,t,s,n,i,o,a,l,d)=>{let c=t.length===2,[u,p]=c?[0,1]:[2,3],_=e.type.value,f=P=>{let A=P===u?"row":"col";return`
      fn ${A}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${_} {
        var output_index = ${r.indicesGet("output_indices",P)};
        var originalIdx: ${_} = getOriginalCoordinateFromResizedCoordinate(output_index, ${n[P]},
        ${s[P]}, ${t[P]}, ${i[P]}, ${i[P]} + ${t.length});
        var fractOriginalIdx: ${_} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${t[P]} - 1))) {
          return ${l};
        }
        var data: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${A}: ${_} = originalIdx + ${_}(i);
          if (${A} < 0 || ${A} >= ${t[P]}) {
            ${d?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${l};`:`${A} = max(0, min(${A}, ${t[P]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",P,`u32(${A})`)};
          data[i + 1] = ${P===u?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${f(u)};
    ${f(p)};
  fn getCubicInterpolationCoefs(s: ${_}) -> array<${_}, 4> {
    var absS = abs(s);
    var coeffs: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${_} = 1.0 - absS;
    var twoMinusAbsS: ${_} = 2.0 - absS;
    var onePlusAbsS: ${_} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${_}, 4>, coefs: array<${_}, 4>) -> ${_} {
    var coefsSum: ${_} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${_} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Bw=(e,r,t,s,n)=>{let[i,o,a,l,d]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],c=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${c} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(depth, ${t[o]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(height, ${t[a]} - 1))`)};
      ${e.indicesSet("input_indices",l,`max(0, min(width, ${t[l]} - 1))`)};
      ${Gu(e,d,i,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${c} = originalIndices[${o}];
      var height:${c} = originalIndices[${a}];
      var width:${c} = originalIndices[${l}];
      ${s?`if (depth < 0 || depth > (${t[o]} - 1) || height < 0 || height > (${t[a]} - 1) || width < 0 || (width > ${t[l]} - 1)) {
      return ${n};
        }`:""};

    depth = max(0, min(depth, ${t[o]} - 1));
      height = max(0, min(height, ${t[a]} - 1));
      width = max(0, min(width, ${t[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${t.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${t.length>3?`u32(originalIndices[${i}])`:"0"};

      var x111: ${c} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${c} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${c} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${c} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${c} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${c} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${c} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${c} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${c} = abs(depth - ${c}(depth1));
      var dx2: ${c} = abs(${c}(depth2) - depth);
      var dy1: ${c} = abs(height - ${c}(height1));
      var dy2: ${c} = abs(${c}(height2) - height);
      var dz1: ${c} = abs(width - ${c}(width1));
      var dz2: ${c} = abs(${c}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},zw=(e,r,t,s,n,i)=>{let o=e.dims,a=$w(i,r.axes,o.length),l=Iw(o,s,n,r.axes),d=s.slice();s.length===0&&(d=o.map((g,I)=>g===0?1:l[I]/g),r.keepAspectRatioPolicy!=="stretch"&&(l=kw(o,d,r)));let c=ct("output",e.dataType,l.length),u=ke("input",e.dataType,o.length),p=Te.size(l),_=o.length===l.length&&o.every((g,I)=>g===l[I]),f=r.coordinateTransformMode==="tf_crop_and_resize",P=r.extrapolationValue,A=u.type.value,y=g=>`
      ${_?"":`
      ${Cw(r.coordinateTransformMode,A)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${Ow(u,o)};
              ${Sw(r.nearestMode,t,A)};
              ${Fw(u,c,o,l,d.length,a.length,f)};
              `;case"linear":return`
              ${Aw(c,o,l,d.length,a.length)};
              ${(()=>{if(o.length===2||o.length===4)return`${Dw(u,c,o,f,P)}`;if(o.length===3||o.length===5)return`${Bw(u,c,o,f,P)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(o.length===2||o.length===4)return`${Lw(u,c,o,l,d,a,r.cubicCoeffA,f,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${g.registerUniform("output_size","u32").registerUniform("scales","f32",d.length).registerUniform("roi","f32",a.length).declareVariables(u,c)}
      ${g.mainStart()}
        ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${_?"output[global_idx] = input[global_idx];":`
        let output_indices = ${c.offsetToIndices("global_idx")};
        var input_indices: ${u.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${u.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${o.length===2||o.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${d.length>0?r.mode==="cubic"?d:d.length:""}|${n.length>0?n:""}|${a.length>0?a:""}|${_}|${r.mode==="nearest"?o.length:o}`,inputDependencies:["rank"]},getShaderSource:y,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},{type:1,data:d},{type:1,data:a},...ht(o,l)]})}},Rw=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},Ob=(e,r)=>{let t=[],s=[],n=[],i=Rw(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Pw(e.inputs,r,i,t,s,n),e.compute(zw(e.inputs[0],r,i,t,s,n),{inputs:[0]})},Db=e=>{let r=e.antialias,t=e.axes,s=e.coordinateTransformMode,n=e.cubicCoeffA,i=e.excludeOutside!==0,o=e.extrapolationValue,a=e.keepAspectRatioPolicy,l=e.mode,d=e.nearestMode===""?"simple":e.nearestMode;return zt({antialias:r,axes:t,coordinateTransformMode:s,cubicCoeffA:n,excludeOutside:i,extrapolationValue:o,keepAspectRatioPolicy:a,mode:l,nearestMode:d})}}),jw,Nw,Lb,G1=Ge(()=>{Mt(),Et(),Ct(),jw=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],s=e[2];if(r.dataType!==t.dataType||r.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=r.dims[r.dims.length-1],i=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let o=e[3];if(o.dims.length!==1)throw new Error("Beta must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let o=e[4];if(o.dims.length!==1)throw new Error("Bias must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},Nw=(e,r,t,s)=>{let n=r.simplified,i=e[0].dims,o=Te.size(i),a=i,l=o,d=i.slice(-1)[0],c=s?i.slice(0,-1).concat(1):[],u=!n&&e.length>3,p=e.length>4,_=s&&t>1,f=s&&t>2,P=t>3,A=64,y=or(d),g=[{type:12,data:l},{type:12,data:y},{type:12,data:d},{type:1,data:r.epsilon}],I=T=>{let x=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],b=[ke("x",e[0].dataType,e[0].dims,y),ke("skip",e[1].dataType,e[1].dims,y),ke("gamma",e[2].dataType,e[2].dims,y)];u&&b.push(ke("beta",e[3].dataType,e[3].dims,y)),p&&b.push(ke("bias",e[4].dataType,e[4].dims,y)),b.push(ct("output",e[0].dataType,a,y)),_&&b.push(ct("mean_output",1,c)),f&&b.push(ct("inv_std_output",1,c)),P&&b.push(ct("input_skip_bias_sum",e[0].dataType,a,y));let $=Cr(e[0].dataType),j=Cr(1,y);return`

      ${T.registerUniforms(x).declareVariables(...b)}
      var<workgroup> sum_shared : array<${j}, ${A}>;
      var<workgroup> sum_squared_shared : array<${j}, ${A}>;

      ${T.mainStart([A,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${A};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${A};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${A-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${p?"bias[offset1d + i]":$+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${P?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${ci($,y,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${A};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Zs("sum",y)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Zs("square_sum",y)} / f32(uniforms.hidden_size) ${n?"":"- mean * mean"} + uniforms.epsilon);
        ${_?"mean_output[global_idx] = mean;":""}
        ${f?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${n?"":`- ${$}(mean)`}) *
            ${$}(inv_std_dev) * gamma[offset1d + i]
            ${u?"+ beta[offset1d + i]":""};
        }
      }`},v=[{dims:a,dataType:e[0].dataType}];return t>1&&v.push({dims:c,dataType:1}),t>2&&v.push({dims:c,dataType:1}),t>3&&v.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${y};${_};${f};${P}`,inputDependencies:e.map((T,x)=>"type")},getShaderSource:I,getRunData:()=>({outputs:v,dispatchGroup:{x:Math.ceil(l/d)},programUniforms:g})}},Lb=(e,r)=>{jw(e.inputs);let t=[0];e.outputCount>1&&t.push(-3),e.outputCount>2&&t.push(-3),e.outputCount>3&&t.push(3),e.compute(Nw(e.inputs,r,e.outputCount,!1),{outputs:t})}}),Uw,ro,Vw,Ku,Ww,Gw,Bb,zb,K1=Ge(()=>{Mt(),Et(),ur(),Ct(),Uw=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},ro=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(s=>t.push(Number(s)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(s=>t.push(Number(s)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},Vw=(e,r)=>{if(e.length>1){let t=ro(e,1),s=ro(e,2),n=ro(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),zt({starts:t,ends:s,axes:n})}else return r},Ku=(e,r,t,s,n)=>{let i=e;return e<0&&(i+=t[s[r]]),n[r]<0?Math.max(0,Math.min(i,t[s[r]]-1)):Math.max(0,Math.min(i,t[s[r]]))},Ww=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${t.length}; i >= 0; i--) {
            let input_shape_i = ${dt("uniforms.input_shape","i",t.length)};
            let steps_i = ${dt("uniforms.steps","i",t.length)};
            let signs_i = ${dt("uniforms.signs","i",t.length)};
            let starts_i = ${dt("uniforms.starts","i",t.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,Gw=(e,r)=>{let t=e[0].dims,s=Te.size(t),n=r.axes.length>0?Te.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],i=ro(e,4);i.forEach(y=>y!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(n.length).fill(1));let o=r.starts.map((y,g)=>Ku(y,g,t,n,i)),a=r.ends.map((y,g)=>Ku(y,g,t,n,i));if(n.length!==o.length||n.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(n.length!==t.length)for(let y=0;y<t.length;++y)n.includes(y)||(o.splice(y,0,0),a.splice(y,0,t[y]),i.splice(y,0,1));let l=i.map(y=>Math.sign(y));i.forEach((y,g,I)=>{if(y<0){let v=(a[g]-o[g])/y,T=o[g],x=T+v*i[g];o[g]=x,a[g]=T,I[g]=-y}});let d=t.slice(0);n.forEach((y,g)=>{d[y]=Math.ceil((a[y]-o[y])/i[y])});let c={dims:d,dataType:e[0].dataType},u=ct("output",e[0].dataType,d.length),p=ke("input",e[0].dataType,e[0].dims.length),_=Te.size(d),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:i.length}],P=[{type:12,data:_},{type:12,data:o},{type:6,data:l},{type:12,data:i},...ht(e[0].dims,d)],A=y=>`
      ${y.registerUniforms(f).declareVariables(p,u)}
        ${Ww(p,u,t)}
        ${y.mainStart()}
          ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${u.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${u.setByOffset("global_idx",p.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${o.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[c],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:P})}},Bb=(e,r)=>{Uw(e.inputs,r);let t=Vw(e.inputs,r);e.compute(Gw(e.inputs,t),{inputs:[0]})},zb=e=>{let r=e.starts,t=e.ends,s=e.axes;return zt({starts:r,ends:t,axes:s})}}),Kw,Hw,Rb,jb,H1=Ge(()=>{Mt(),Et(),ur(),en(),Ct(),Kw=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Hw=(e,r)=>{let t=e.inputs[0],s=t.dims,n=Te.size(s),i=s.length,o=Te.normalizeAxis(r.axis,i),a=o<s.length-1,l,d=[];a?(d=Array.from({length:i},(b,$)=>$),d[o]=i-1,d[i-1]=o,l=e.compute(Xr(t,d),{inputs:[t],outputs:[-1]})[0]):l=t;let c=l.dims,u=c[i-1],p=n/u,_=or(u),f=u/_,P=64;p===1&&(P=256);let A=(b,$)=>$===4?`max(max(${b}.x, ${b}.y), max(${b}.z, ${b}.w))`:$===2?`max(${b}.x, ${b}.y)`:$===3?`max(max(${b}.x, ${b}.y), ${b}.z)`:b,y=ke("x",l.dataType,l.dims,_),g=ct("result",l.dataType,l.dims,_),I=y.type.value,v=Cr(l.dataType)==="f32"?`var threadMax = ${I}(-3.402823e+38f);`:`var threadMax = ${I}(-65504.0h);`,T=b=>`
      var<workgroup> rowMaxShared : ${I};
      var<workgroup> rowSumShared : ${I};
      var<workgroup> threadShared : array<${I}, ${P}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${I} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${I}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${b.registerUniform("packedCols","i32").declareVariables(y,g)}
      ${b.mainStart(P)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${P};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${v}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${I}(${A("threadShared[0]",_)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${I}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${I}(${Zs("threadShared[0]",_)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,x=e.compute({name:"Softmax",shaderCache:{hint:`${_};${P}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:c,dataType:l.dataType}],dispatchGroup:{x:p},programUniforms:[{type:6,data:f}]}),getShaderSource:T},{inputs:[l],outputs:[a?-1:0]})[0];a&&e.compute(Xr(x,d),{inputs:[x]})},Rb=(e,r)=>{Kw(e.inputs),Hw(e,r)},jb=e=>zt({axis:e.axis})}),Hu,qw,Qw,Xw,Nb,q1=Ge(()=>{Mt(),Et(),Ct(),Hu=e=>Array.from(e.getBigInt64Array(),Number),qw=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Hu(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Qw=(e,r)=>{let t=[];for(let s=0;s<e.length;++s)t.push(e[s]*r[s]);return t},Xw=(e,r)=>{let t=e[0].dims,s=r??Hu(e[1]),n=Qw(t,s),i=Te.size(n),o=e[0].dataType,a=ke("input",o,t.length),l=ct("output",o,n.length),d=c=>`
      const inputShape = ${a.indices(...t)};
      ${c.registerUniform("output_size","u32").declareVariables(a,l)}
      ${c.mainStart()}
      ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${l.offsetToIndices("global_idx")};
      var input_indices: ${a.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;

        ${a.indicesSet("input_indices","i","input_dim_value")}
      }
      ${l.setByOffset("global_idx",a.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${s}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...ht(e[0].dims,n)]}),getShaderSource:d}},Nb=e=>{qw(e.inputs),e.compute(Xw(e.inputs),{inputs:[0]})}}),Yw,Jw,Ub,Q1=Ge(()=>{Mt(),Et(),Ct(),Yw=(e,r,t,s,n)=>{let i=ct("output_data",n,t.length,4),o=ke("a_data",r[1].dataType,r[1].dims.length,4),a=ke("b_data",r[2].dataType,r[2].dims.length,4),l=ke("c_data",r[0].dataType,r[0].dims.length,4),d,c=(u,p,_)=>`select(${p}, ${u}, ${_})`;if(!s)d=i.setByOffset("global_idx",c(o.getByOffset("global_idx"),a.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let u=(p,_,f="")=>{let P=`a_data[index_a${_}][component_a${_}]`,A=`b_data[index_b${_}][component_b${_}]`,y=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`
            let output_indices${_} = ${i.offsetToIndices(`global_idx * 4u + ${_}u`)};
            let offset_a${_} = ${o.broadcastedIndicesToOffset(`output_indices${_}`,i)};
            let offset_b${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,i)};
            let offset_c${_} = ${l.broadcastedIndicesToOffset(`output_indices${_}`,i)};
            let index_a${_} = offset_a${_} / 4u;
            let index_b${_} = offset_b${_} / 4u;
            let index_c${_} = offset_c${_} / 4u;
            let component_a${_} = offset_a${_} % 4u;
            let component_b${_} = offset_b${_} % 4u;
            let component_c${_} = offset_c${_} % 4u;
            ${p}[${_}] = ${f}(${c(P,A,y)});
          `};n===9?d=`
            var data = vec4<u32>(0);
            ${u("data",0,"u32")}
            ${u("data",1,"u32")}
            ${u("data",2,"u32")}
            ${u("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:d=`
            ${u("output_data[global_idx]",0)}
            ${u("output_data[global_idx]",1)}
            ${u("output_data[global_idx]",2)}
            ${u("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(l,o,a,i)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${d}
      }`},Jw=e=>{let r=e[1].dims,t=e[2].dims,s=e[0].dims,n=e[1].dataType,i=!(Te.areEqual(r,t)&&Te.areEqual(t,s)),o=r,a=Te.size(r);if(i){let d=pi.calcShape(pi.calcShape(r,t,!1),s,!1);if(!d)throw new Error("Can't perform where op on the given tensors");o=d,a=Te.size(o)}let l=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:d=>Yw(d,e,o,i,n),getRunData:()=>({outputs:[{dims:o,dataType:n}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:l},...ht(s,r,t,o)]})}},Ub=e=>{e.compute(Jw(e.inputs))}}),Vb,X1=Ge(()=>{c1(),jc(),d1(),p1(),h1(),m1(),f1(),M1(),v1(),x1(),T1(),E1(),P1(),C1(),S1(),$1(),I1(),k1(),A1(),F1(),O1(),D1(),L1(),B1(),z1(),lb(),R1(),j1(),N1(),U1(),V1(),Rc(),W1(),hb(),G1(),K1(),H1(),db(),q1(),en(),Nc(),Q1(),Vb=new Map([["Abs",[Ly]],["Acos",[By]],["Acosh",[zy]],["Add",[wM]],["ArgMax",[Ay,cc]],["ArgMin",[ky,cc]],["Asin",[Ry]],["Asinh",[jy]],["Atan",[Ny]],["Atanh",[Uy]],["Attention",[Fy]],["AveragePool",[vb,bb]],["BatchNormalization",[Oy]],["BiasAdd",[Dy]],["BiasSplitGelu",[gM]],["Cast",[Wy,Vy]],["Ceil",[Ky]],["Clip",[Gy]],["Concat",[SM,$M]],["Conv",[_c,fc]],["ConvTranspose",[RM,zM]],["Cos",[Hy]],["Cosh",[qy]],["CumSum",[jM,NM]],["DepthToSpace",[UM,VM]],["DequantizeLinear",[$b,Ib]],["Div",[yM]],["Einsum",[WM,GM]],["Elu",[Qy,lo]],["Equal",[MM]],["Erf",[Xy]],["Exp",[Yy]],["Expand",[KM]],["FastGelu",[HM]],["Floor",[Jy]],["FusedConv",[_c,fc]],["Gather",[QM,qM]],["GatherElements",[tb,eb]],["GatherBlockQuantized",[JM,ZM]],["GatherND",[XM,YM]],["Gelu",[Zy]],["Gemm",[sb,rb]],["GlobalAveragePool",[Tb,xb]],["GlobalMaxPool",[Sb,Cb]],["Greater",[TM]],["GreaterOrEqual",[PM]],["GridSample",[nb,ib]],["GroupQueryAttention",[mb]],["HardSigmoid",[aM,oM]],["InstanceNormalization",[fb]],["LayerNormalization",[_b]],["LeakyRelu",[eM,lo]],["Less",[EM]],["LessOrEqual",[CM]],["Log",[fM]],["MatMul",[gb]],["MatMulNBits",[wb,yb]],["MaxPool",[Eb,Pb]],["Mul",[bM]],["MultiHeadAttention",[ab,ob]],["Neg",[rM]],["Not",[tM]],["Pad",[Mb]],["Pow",[vM]],["QuickGelu",[_M,lo]],["Range",[kb]],["Reciprocal",[sM]],["ReduceMin",[Py]],["ReduceMean",[by]],["ReduceMax",[Ey]],["ReduceSum",[Sy]],["ReduceProd",[Cy]],["ReduceL1",[vy]],["ReduceL2",[xy]],["ReduceLogSum",[Iy]],["ReduceLogSumExp",[Ty]],["ReduceSumSquare",[$y]],["Relu",[nM]],["Resize",[Ob,Db]],["RotaryEmbedding",[pb]],["ScatterND",[Fb,Ab]],["Sigmoid",[iM]],["Sin",[lM]],["Sinh",[uM]],["Slice",[Bb,zb]],["SkipLayerNormalization",[Lb]],["Split",[ub,cb]],["Sqrt",[cM]],["Softmax",[Rb,jb]],["Sub",[xM]],["Tan",[dM]],["Tanh",[pM]],["ThresholdedRelu",[mM,lo]],["Tile",[Nb]],["Transpose",[uy,cy]],["Where",[Ub]]])}),Wb,Y1=Ge(()=>{xs(),Ws(),Ct(),Wb=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,r){this.repo.set(e,r)}run(e,r,t,s,n){vs(e.programInfo.name);let i=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let a=[];for(let d of r)a.push({binding:a.length,resource:{buffer:d.buffer}});for(let d of t)a.push({binding:a.length,resource:{buffer:d.buffer}});n&&a.push({binding:a.length,resource:n});let l=i.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:a,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}o.setPipeline(e.computePipeline),o.setBindGroup(0,l),o.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),as(e.programInfo.name)}dispose(){}build(e,r){vs(e.name);let t=this.backend.device,s=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(d=>{t.features.has(d.feature)&&s.push(`enable ${d.extension};`)});let n=ly(r,this.backend.device.limits),i=e.getShaderSource(n),o=`${s.join(`
`)}
${n.additionalImplementations}
${i}`,a=t.createShaderModule({code:o,label:e.name});Ot("verbose",()=>`[WebGPU] ${e.name} shader code: ${o}`);let l=t.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:e.name});return as(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:n.variablesInfo}}normalizeDispatchGroupSize(e){let r=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,s=typeof e=="number"?1:e.z||1,n=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=n&&t<=n&&s<=n)return[r,t,s];let i=r*t*s,o=Math.ceil(Math.sqrt(i));if(o>n){if(o=Math.ceil(Math.cbrt(i)),o>n)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}else return[o,o,1]}}}),Gb={};_i(Gb,{WebGpuBackend:()=>Kb});var Zw,e0,t0,Kb,J1=Ge(()=>{xs(),Mt(),Ws(),sy(),l1(),X1(),Y1(),Zw=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let s=0;s<e.length;++s){let n=e[s].dataType;switch(r[s]){case"none":{t.push("");break}case"type":{t.push(`${n}`);break}case"rank":{let i=e[s].dims.length;t.push(`${n};${i}`);break}case"dims":{let i=e[s].dims.join(",");t.push(`${n};${i}`);break}default:throw new Error(`unsupported input dependency: ${r[s]}`)}}return t.join("|")},e0=(e,r,t)=>{let s=e.name;return e.shaderCache?.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+t+`:${Zw(r,e.shaderCache?.inputDependencies??new Array(r.length).fill("dims"))}`,s},t0=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},Kb=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,r){this.env=e;let t=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t},n=i=>r.features.has(i)&&t.push(i)&&!0;n("chromium-experimental-timestamp-query-inside-passes")||n("timestamp-query"),n("shader-f16"),n("subgroups"),this.device=await r.requestDevice(s),this.adapterInfo=new t0(r.info||await r.requestAdapterInfo()),this.gpuDataManager=oy(this),this.programManager=new Wb(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Dc(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;vs(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let s=0;s<r.length/2;s++){let n=t[s],i=n.kernelId,o=this.kernels.get(i),a=o.kernelType,l=o.kernelName,d=n.programName,c=n.inputTensorViews,u=n.outputTensorViews,p=r[s*2],_=r[s*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=p);let f=Number(p-this.queryTimeBase),P=Number(_-this.queryTimeBase);if(!Number.isSafeInteger(f)||!Number.isSafeInteger(P))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:c.map(A=>({dims:A.dims,dataType:Ns(A.dataType)})),outputsMetadata:u.map(A=>({dims:A.dims,dataType:Ns(A.dataType)})),kernelId:i,kernelType:a,kernelName:l,programName:d,startTime:f,endTime:P});else{let A="";c.forEach((g,I)=>{A+=`input[${I}]: [${g.dims}] | ${Ns(g.dataType)}, `});let y="";u.forEach((g,I)=>{y+=`output[${I}]: [${g.dims}] | ${Ns(g.dataType)}, `}),console.log(`[profiling] kernel "${i}|${a}|${l}|${d}" ${A}${y}execution time: ${P-f} ns`)}mo("GPU",`${d}::${p}::${_}`)}e.unmap(),this.pendingQueries.delete(e)}),as()}run(e,r,t,s,n,i){vs(e.name);let o=[];for(let g=0;g<r.length;++g){let I=r[g].data;if(I===0)continue;let v=this.gpuDataManager.get(I);if(!v)throw new Error(`no GPU data for input: ${I}`);o.push(v)}let{outputs:a,dispatchGroup:l,programUniforms:d}=e.getRunData(r),c=t.length===0?a.map((g,I)=>I):t;if(c.length!==a.length)throw new Error(`Output size ${c.length} must be equal to ${a.length}.`);let u=[],p=[];for(let g=0;g<a.length;++g){if(!Number.isInteger(c[g])||c[g]<-3||c[g]>=i)throw new Error(`Invalid output index: ${c[g]}`);if(c[g]===-3)continue;let I=c[g]===-1,v=c[g]===-2,T=I||v?n(a[g].dataType,a[g].dims):s(c[g],a[g].dataType,a[g].dims);if(u.push(T),T.data===0)continue;let x=this.gpuDataManager.get(T.data);if(!x)throw new Error(`no GPU data for output: ${T.data}`);if(I&&this.temporaryData.push(x),v){let b=this.kernelPersistentData.get(this.currentKernelId);b||(b=[],this.kernelPersistentData.set(this.currentKernelId,b)),b.push(x)}p.push(x)}if(o.length!==r.length||p.length!==u.length){if(p.length===0)return as(e.name),u;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let _;if(d){let g=0,I=[];d.forEach(b=>{let $=typeof b.data=="number"?[b.data]:b.data;if($.length===0)return;let j=b.type===10?2:4,B,X;b.type===10?(X=$.length>4?16:$.length>2?8:$.length*j,B=$.length>4?16:j*$.length):(X=$.length<=2?$.length*j:16,B=16),g=Math.ceil(g/X)*X,I.push(g);let re=b.type===10?8:4;g+=$.length>4?Math.ceil($.length/re)*B:$.length*j});let v=16;g=Math.ceil(g/v)*v;let T=new ArrayBuffer(g);d.forEach((b,$)=>{let j=I[$],B=typeof b.data=="number"?[b.data]:b.data;if(b.type===6)new Int32Array(T,j,B.length).set(B);else if(b.type===12)new Uint32Array(T,j,B.length).set(B);else if(b.type===10)new Uint16Array(T,j,B.length).set(B);else if(b.type===1)new Float32Array(T,j,B.length).set(B);else throw new Error(`Unsupported uniform type: ${Ns(b.type)}`)});let x=this.gpuDataManager.create(g,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(x.buffer,0,T,0,g),this.gpuDataManager.release(x.id),_={offset:0,size:g,buffer:x.buffer}}let f=this.programManager.normalizeDispatchGroupSize(l),P=f[1]===1&&f[2]===1,A=e0(e,r,P),y=this.programManager.getArtifact(A);if(y||(y=this.programManager.build(e,f),this.programManager.setArtifact(A,y),Ot("info",()=>`[artifact] key: ${A}, programName: ${e.name}`)),d&&y.uniformVariablesInfo){if(d.length!==y.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${y.uniformVariablesInfo.length}, got ${d.length} in program "${y.programInfo.name}".`);for(let g=0;g<d.length;g++){let I=d[g],v=I.type,T=typeof I.data=="number"?1:I.data.length,[x,b]=y.uniformVariablesInfo[g];if(v!==x||T!==b)throw new Error(`Uniform variable ${g} mismatch: expect type ${x} with size ${b}, got type ${v} with size ${T} in program "${y.programInfo.name}".`)}}if(Ot("info",()=>`[ProgramManager] run "${e.name}" (key=${A}) with ${f[0]}x${f[1]}x${f[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let g={kernelId:this.currentKernelId,programName:y.programInfo.name,inputTensorViews:r,outputTensorViews:u};this.pendingKernels.push(g),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(g)}return this.programManager.run(y,o,p,f,_),as(e.name),u}upload(e,r){this.gpuDataManager.upload(e,r)}memcpy(e,r){this.gpuDataManager.memcpy(e,r)}async download(e,r){await this.gpuDataManager.download(e,r)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,r,t,s){let n=Vb.get(e);if(!n)throw new Error(`kernel not implemented: ${e}`);let i={kernelType:e,kernelName:s,kernelEntry:n[0],attributes:[n[1],t]};this.kernels.set(r,i)}releaseKernel(e){let r=this.kernelPersistentData.get(e);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,r,t){let s=this.kernels.get(e);if(!s)throw new Error(`kernel not created: ${e}`);let n=s.kernelType,i=s.kernelName,o=s.kernelEntry,a=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${n}] ${i}" is not allowed to be called recursively`);this.currentKernelId=e,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),Ot("info",()=>`[WebGPU] Start to run kernel "[${n}] ${i}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),o(r,a[1]),0}catch(d){return t.push(Promise.resolve(`[WebGPU] Kernel "[${n}] ${i}" failed. ${d}`)),1}finally{l&&t.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${n}] ${i}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,r,t,s){let n=this.sessionExternalDataMapping.get(e);n||(n=new Map,this.sessionExternalDataMapping.set(e,n));let i=n.get(r),o=this.gpuDataManager.registerExternalBuffer(t,s,i);return n.set(r,[o,t]),o}unregisterBuffers(e){let r=this.sessionExternalDataMapping.get(e);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let r=this.gpuDataManager.get(e);if(!r)throw new Error(`no GPU data for buffer: ${e}`);return r.buffer}createDownloader(e,r,t){return async()=>{let s=await ac(this,e,r);return Lc(s.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ot("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ot("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ot("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let s=0;s<t;s++){let n=this.getComputePassEncoder(),i=e[s];this.writeTimestamp(this.pendingDispatchNumber*2),n.setPipeline(i.computePipeline),n.setBindGroup(0,i.bindGroup),n.dispatchWorkgroups(...i.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),Hb={};_i(Hb,{init:()=>qb});var fa,r0,qb,Z1=Ge(()=>{Mt(),Ws(),Et(),a1(),fa=class Qb{constructor(r,t,s,n){this.module=r,this.dataType=t,this.data=s,this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=Te.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=Te.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=Te.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let r=Te.size(this.dims);return r===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(Te.size(r)!==Te.size(this.dims))throw new Error("Invalid new shape");return new Qb(this.module,this.dataType,this.data,r)}},r0=class{constructor(e,r,t){this.module=e,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo;let s=e.PTR_SIZE,n=t/e.PTR_SIZE,i=s===4?"i32":"i64";this.opKernelContext=Number(e.getValue(s*n++,i));let o=Number(e.getValue(s*n++,i));this.outputCount=Number(e.getValue(s*n++,i)),this.customDataOffset=Number(e.getValue(s*n++,"*")),this.customDataSize=Number(e.getValue(s*n++,i));let a=[];for(let l=0;l<o;l++){let d=Number(e.getValue(s*n++,i)),c=Number(e.getValue(s*n++,"*")),u=Number(e.getValue(s*n++,i)),p=[];for(let _=0;_<u;_++)p.push(Number(e.getValue(s*n++,i)));a.push(new fa(e,d,c,p))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,r){let t=r?.inputs?.map(o=>typeof o=="number"?this.inputs[o]:o)??this.inputs,s=r?.outputs??[],n=(o,a,l)=>new fa(this.module,a,this.output(o,l),l),i=(o,a)=>{let l=An(o,a);if(!l)throw new Error(`Unsupported data type: ${o}`);let d=l>0?this.backend.gpuDataManager.create(l).id:0;return new fa(this.module,o,d,a)};return this.backend.run(e,t,s,n,i,this.outputCount)}output(e,r){let t=this.module.stackSave();try{let s=this.module.PTR_SIZE,n=s===4?"i32":"i64",i=this.module.stackAlloc((1+r.length)*s);this.module.setValue(i,r.length,n);for(let o=0;o<r.length;o++)this.module.setValue(i+s*(o+1),r[o],n);return this.module._JsepOutput(this.opKernelContext,e,i)}catch(s){throw new Error(`Failed to generate kernel's output[${e}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(t)}}},qb=async(e,r,t,s)=>{let n=r.jsepInit;if(!n)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let i=(J1(),ho(Gb)).WebGpuBackend,o=new i;await o.initialize(t,s),n("webgpu",[o,a=>o.alloc(Number(a)),a=>o.free(a),(a,l,d,c=!1)=>{if(c)Ot("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(a)}, dst=${Number(l)}, size=${Number(d)}`),o.memcpy(Number(a),Number(l));else{Ot("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(a)}, gpuDataId=${Number(l)}, size=${Number(d)}`);let u=r.HEAPU8.subarray(Number(a>>>0),Number(a>>>0)+Number(d));o.upload(Number(l),u)}},async(a,l,d)=>{Ot("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${l}, size=${d}`),await o.download(Number(a),()=>r.HEAPU8.subarray(Number(l)>>>0,Number(l+d)>>>0))},(a,l,d)=>o.createKernel(a,Number(l),d,r.UTF8ToString(r._JsepGetNodeName(Number(l)))),a=>o.releaseKernel(a),(a,l,d,c)=>{Ot("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${d}, kernel=${a}, contextDataOffset=${l}`);let u=new r0(r,o,Number(l));return o.computeKernel(Number(a),u,c)},()=>o.captureBegin(),()=>o.captureEnd(),()=>o.replay()])}else{let i=new iy(t);n("webnn",[i,()=>i.reserveTensorId(),o=>i.releaseTensorId(o),async(o,a,l,d,c)=>i.ensureTensor(o,a,l,d,c),(o,a)=>{i.uploadTensor(o,a)},async(o,a)=>i.downloadTensor(o,a)])}}}),s0,Hc,qc,Ys,n0,qu,Aa,Qc,Xc,Qu,Yc,Jc,Zc,Xb=Ge(()=>{n1(),i1(),Mt(),zn(),Ic(),Z0(),s0=(e,r)=>{qt()._OrtInit(e,r)!==0&&Ut("Can't initialize onnxruntime.")},Hc=async e=>{s0(e.wasm.numThreads,Ca(e.logLevel))},qc=async(e,r)=>{qt().asyncInit?.();{let t=(Z1(),ho(Hb)).init;if(r==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let s=e.webgpu.adapter;if(s){if(typeof s.limits!="object"||typeof s.features!="object"||typeof s.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let n=e.webgpu.powerPreference;if(n!==void 0&&n!=="low-power"&&n!=="high-performance")throw new Error(`Invalid powerPreference setting: "${n}"`);let i=e.webgpu.forceFallbackAdapter;if(i!==void 0&&typeof i!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${i}"`);if(s=await navigator.gpu.requestAdapter({powerPreference:n,forceFallbackAdapter:i}),!s)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await t("webgpu",qt(),e,s)}if(r==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await t("webnn",qt(),e)}}},Ys=new Map,n0=e=>{let r=qt(),t=r.stackSave();try{let s=r.PTR_SIZE,n=r.stackAlloc(2*s);r._OrtGetInputOutputCount(e,n,n+s)!==0&&Ut("Can't get session input/output count.");let i=s===4?"i32":"i64";return[Number(r.getValue(n,i)),Number(r.getValue(n+s,i))]}finally{r.stackRestore(t)}},qu=(e,r)=>{let t=qt(),s=t.stackSave(),n=0;try{let i=t.PTR_SIZE,o=t.stackAlloc(2*i);t._OrtGetInputOutputMetadata(e,r,o,o+i)!==0&&Ut("Can't get session input/output metadata.");let a=Number(t.getValue(o,"*"));n=Number(t.getValue(o+i,"*"));let l=t.HEAP32[n/4];if(l===0)return[a,0];let d=t.HEAPU32[n/4+1],c=[];for(let u=0;u<d;u++){let p=Number(t.getValue(n+8+u*i,"*"));c.push(p!==0?t.UTF8ToString(p):Number(t.getValue(n+8+(u+d)*i,"*")))}return[a,l,c]}finally{t.stackRestore(s),n!==0&&t._OrtFree(n)}},Aa=e=>{let r=qt(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},Qc=async(e,r)=>{let t,s,n=qt();Array.isArray(e)?[t,s]=e:e.buffer===n.HEAPU8.buffer?[t,s]=[e.byteOffset,e.byteLength]:[t,s]=Aa(e);let i=0,o=0,a=0,l=[],d=[],c=[];try{if([o,l]=await J0(r),r?.externalData&&n.mountExternalData){let v=[];for(let T of r.externalData){let x=typeof T=="string"?T:T.path;v.push(Oc(typeof T=="string"?T:T.data).then(b=>{n.mountExternalData(x,b)}))}await Promise.all(v)}for(let v of r?.executionProviders??[])if((typeof v=="string"?v:v.name)==="webnn"){if(n.shouldTransferToMLTensor=!1,typeof v!="string"){let T=v,x=T?.context,b=T?.gpuDevice,$=T?.deviceType,j=T?.powerPreference;x?n.currentContext=x:b?n.currentContext=await n.webnnCreateMLContext(b):n.currentContext=await n.webnnCreateMLContext({deviceType:$,powerPreference:j})}else n.currentContext=await n.webnnCreateMLContext();break}i=await n._OrtCreateSession(t,s,o),n.webgpuOnCreateSession?.(i),i===0&&Ut("Can't create a session."),n.jsepOnCreateSession?.(),n.currentContext&&(n.webnnRegisterMLContext(i,n.currentContext),n.currentContext=void 0,n.shouldTransferToMLTensor=!0);let[u,p]=n0(i),_=!!r?.enableGraphCapture,f=[],P=[],A=[],y=[],g=[];for(let v=0;v<u;v++){let[T,x,b]=qu(i,v);T===0&&Ut("Can't get an input name."),d.push(T);let $=n.UTF8ToString(T);f.push($),A.push(x===0?{name:$,isTensor:!1}:{name:$,isTensor:!0,type:Ns(x),shape:b})}for(let v=0;v<p;v++){let[T,x,b]=qu(i,v+u);T===0&&Ut("Can't get an output name."),c.push(T);let $=n.UTF8ToString(T);P.push($),y.push(x===0?{name:$,isTensor:!1}:{name:$,isTensor:!0,type:Ns(x),shape:b});{if(_&&r?.preferredOutputLocation===void 0){g.push("gpu-buffer");continue}let j=typeof r?.preferredOutputLocation=="string"?r.preferredOutputLocation:r?.preferredOutputLocation?.[$]??"cpu";if(j!=="cpu"&&j!=="cpu-pinned"&&j!=="gpu-buffer"&&j!=="ml-tensor")throw new Error(`Not supported preferred output location: ${j}.`);if(_&&j!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${j}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);g.push(j)}}let I=null;return g.some(v=>v==="gpu-buffer"||v==="ml-tensor")&&(a=n._OrtCreateBinding(i),a===0&&Ut("Can't create IO binding."),I={handle:a,outputPreferredLocations:g,outputPreferredLocationsEncoded:g.map(v=>ic(v))}),Ys.set(i,[i,d,c,I,_,!1]),[i,f,P,A,y]}catch(u){throw d.forEach(p=>n._OrtFree(p)),c.forEach(p=>n._OrtFree(p)),a!==0&&n._OrtReleaseBinding(a)!==0&&Ut("Can't release IO binding."),i!==0&&n._OrtReleaseSession(i)!==0&&Ut("Can't release session."),u}finally{n._free(t),o!==0&&n._OrtReleaseSessionOptions(o)!==0&&Ut("Can't release session options."),l.forEach(u=>n._free(u)),n.unmountExternalData?.()}},Xc=e=>{let r=qt(),t=Ys.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,n,i,o,a]=t;o&&(a&&r._OrtClearBoundOutputs(o.handle)!==0&&Ut("Can't clear bound outputs."),r._OrtReleaseBinding(o.handle)!==0&&Ut("Can't release IO binding.")),r.jsepOnReleaseSession?.(e),r.webnnOnReleaseSession?.(e),r.webgpuOnReleaseSession?.(e),n.forEach(l=>r._OrtFree(l)),i.forEach(l=>r._OrtFree(l)),r._OrtReleaseSession(s)!==0&&Ut("Can't release session."),Ys.delete(e)},Qu=async(e,r,t,s,n,i,o=!1)=>{if(!e){r.push(0);return}let a=qt(),l=a.PTR_SIZE,d=e[0],c=e[1],u=e[3],p=u,_,f;if(d==="string"&&(u==="gpu-buffer"||u==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(o&&u!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(u==="gpu-buffer"){let y=e[2].gpuBuffer;f=An(li(d),c);{let g=a.jsepRegisterBuffer;if(!g)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');_=g(s,i,y,f)}}else if(u==="ml-tensor"){let y=e[2].mlTensor;f=An(li(d),c);let g=a.webnnRegisterMLTensor;if(!g)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');_=g(s,y,li(d),c)}else{let y=e[2];if(Array.isArray(y)){f=l*y.length,_=a._malloc(f),t.push(_);for(let g=0;g<y.length;g++){if(typeof y[g]!="string")throw new TypeError(`tensor data at index ${g} is not a string`);a.setValue(_+g*l,ys(y[g],t),"*")}}else{let g=a.webnnIsGraphInput;if(d!=="string"&&g){let I=a.UTF8ToString(n);if(g(s,I)){let v=li(d);f=An(v,c),p="ml-tensor";let T=a.webnnCreateTemporaryTensor,x=a.webnnUploadTensor;if(!T||!x)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let b=await T(s,v,c);x(b,new Uint8Array(y.buffer,y.byteOffset,y.byteLength)),_=b}else f=y.byteLength,_=a._malloc(f),t.push(_),a.HEAPU8.set(new Uint8Array(y.buffer,y.byteOffset,f),_)}else f=y.byteLength,_=a._malloc(f),t.push(_),a.HEAPU8.set(new Uint8Array(y.buffer,y.byteOffset,f),_)}}let P=a.stackSave(),A=a.stackAlloc(4*c.length);try{c.forEach((g,I)=>a.setValue(A+I*l,g,l===4?"i32":"i64"));let y=a._OrtCreateTensor(li(d),_,f,A,c.length,ic(p));y===0&&Ut(`Can't create tensor for input/output. session=${s}, index=${i}.`),r.push(y)}finally{a.stackRestore(P)}},Yc=async(e,r,t,s,n,i)=>{let o=qt(),a=o.PTR_SIZE,l=Ys.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let d=l[0],c=l[1],u=l[2],p=l[3],_=l[4],f=l[5],P=r.length,A=s.length,y=0,g=[],I=[],v=[],T=[],x=o.stackSave(),b=o.stackAlloc(P*a),$=o.stackAlloc(P*a),j=o.stackAlloc(A*a),B=o.stackAlloc(A*a);try{[y,g]=Y0(i);for(let z=0;z<P;z++)await Qu(t[z],I,T,e,c[r[z]],r[z],_);for(let z=0;z<A;z++)await Qu(n[z],v,T,e,u[s[z]],P+s[z],_);for(let z=0;z<P;z++)o.setValue(b+z*a,I[z],"*"),o.setValue($+z*a,c[r[z]],"*");for(let z=0;z<A;z++)o.setValue(j+z*a,v[z],"*"),o.setValue(B+z*a,u[s[z]],"*");if(p&&!f){let{handle:z,outputPreferredLocations:te,outputPreferredLocationsEncoded:W}=p;if(c.length!==P)throw new Error(`input count from feeds (${P}) is expected to be always equal to model's input count (${c.length}).`);for(let K=0;K<P;K++){let se=r[K];await o._OrtBindInput(z,c[se],I[K])!==0&&Ut(`Can't bind input[${K}] for session=${e}.`)}for(let K=0;K<A;K++){let se=s[K];n[K]?.[3]?o._OrtBindOutput(z,u[se],v[K],0)!==0&&Ut(`Can't bind pre-allocated output[${K}] for session=${e}.`):o._OrtBindOutput(z,u[se],0,W[se])!==0&&Ut(`Can't bind output[${K}] to ${te[K]} for session=${e}.`)}Ys.set(e,[d,c,u,p,_,!0])}o.jsepOnRunStart?.(d),o.webnnOnRunStart?.(d);let X;p?X=await o._OrtRunWithBinding(d,p.handle,A,j,y):X=await o._OrtRun(d,$,b,P,B,A,j,y),X!==0&&Ut("failed to call OrtRun().");let re=[];for(let z=0;z<A;z++){let te=Number(o.getValue(j+z*a,"*"));if(te===v[z]){re.push(n[z]);continue}let W=o.stackSave(),K=o.stackAlloc(4*a),se=!1,J,ue=0;try{o._OrtGetTensorData(te,K,K+a,K+2*a,K+3*a)!==0&&Ut(`Can't access output tensor data on index ${z}.`);let ce=a===4?"i32":"i64",N=Number(o.getValue(K,ce));ue=o.getValue(K+a,"*");let D=o.getValue(K+a*2,"*"),Q=Number(o.getValue(K+a*3,ce)),U=[];for(let Ee=0;Ee<Q;Ee++)U.push(Number(o.getValue(D+Ee*a,ce)));o._OrtFree(D)!==0&&Ut("Can't free memory for tensor dims.");let ae=U.reduce((Ee,Le)=>Ee*Le,1);J=Ns(N);let Ae=p?.outputPreferredLocations[s[z]];if(J==="string"){if(Ae==="gpu-buffer"||Ae==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let Ee=[];for(let Le=0;Le<ae;Le++){let Ve=o.getValue(ue+Le*a,"*"),me=o.getValue(ue+(Le+1)*a,"*"),H=Le===ae-1?void 0:me-Ve;Ee.push(o.UTF8ToString(Ve,H))}re.push([J,U,Ee,"cpu"])}else if(Ae==="gpu-buffer"&&ae>0){let Ee=o.jsepGetBuffer;if(!Ee)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let Le=Ee(ue),Ve=An(N,ae);if(Ve===void 0||!Ac(J))throw new Error(`Unsupported data type: ${J}`);se=!0,re.push([J,U,{gpuBuffer:Le,download:o.jsepCreateDownloader(Le,Ve,J),dispose:()=>{o._OrtReleaseTensor(te)!==0&&Ut("Can't release tensor.")}},"gpu-buffer"])}else if(Ae==="ml-tensor"&&ae>0){let Ee=o.webnnEnsureTensor,Le=o.webnnIsInt64Supported;if(!Ee||!Le)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(An(N,ae)===void 0||!Fc(J))throw new Error(`Unsupported data type: ${J}`);if(J==="int64"&&!Le(e))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let Ve=await Ee(e,ue,N,U,!1);se=!0,re.push([J,U,{mlTensor:Ve,download:o.webnnCreateMLTensorDownloader(ue,J),dispose:()=>{o.webnnReleaseTensorId(ue),o._OrtReleaseTensor(te)}},"ml-tensor"])}else{let Ee=kc(J),Le=new Ee(ae);new Uint8Array(Le.buffer,Le.byteOffset,Le.byteLength).set(o.HEAPU8.subarray(ue,ue+Le.byteLength)),re.push([J,U,Le,"cpu"])}}finally{o.stackRestore(W),J==="string"&&ue&&o._free(ue),se||o._OrtReleaseTensor(te),o.webnnOnRunEnd?.(d)}}return p&&!_&&(o._OrtClearBoundOutputs(p.handle)!==0&&Ut("Can't clear bound outputs."),Ys.set(e,[d,c,u,p,_,!1])),re}finally{o.stackRestore(x),I.forEach(X=>o._OrtReleaseTensor(X)),v.forEach(X=>o._OrtReleaseTensor(X)),T.forEach(X=>o._free(X)),y!==0&&o._OrtReleaseRunOptions(y),g.forEach(X=>o._free(X))}},Jc=e=>{let r=qt(),t=Ys.get(e);if(!t)throw new Error("invalid session id");let s=t[0],n=r._OrtEndProfiling(s);n===0&&Ut("Can't get an profile file name."),r._OrtFree(n)},Zc=e=>{let r=[];for(let t of e){let s=t[2];!Array.isArray(s)&&"buffer"in s&&r.push(s.buffer)}return r}}),Js,ss,oi,so,no,_a,Xu,ga,Sn,$n,i0,Yb,Jb,Zb,ev,tv,rv,sv,nv=Ge(()=>{xs(),Xb(),zn(),Sc(),Js=()=>!!Xt.wasm.proxy&&typeof document<"u",oi=!1,so=!1,no=!1,ga=new Map,Sn=(e,r)=>{let t=ga.get(e);t?t.push(r):ga.set(e,[r])},$n=()=>{if(oi||!so||no||!ss)throw new Error("worker not ready")},i0=e=>{switch(e.data.type){case"init-wasm":oi=!1,e.data.err?(no=!0,Xu[1](e.data.err)):(so=!0,Xu[0]()),_a&&(URL.revokeObjectURL(_a),_a=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=ga.get(e.data.type);e.data.err?r.shift()[1](e.data.err):r.shift()[0](e.data.out);break}}},Yb=async()=>{if(!so){if(oi)throw new Error("multiple calls to 'initWasm()' detected.");if(no)throw new Error("previous call to 'initWasm()' failed.");if(oi=!0,Js())return new Promise((e,r)=>{ss?.terminate(),Q0().then(([t,s])=>{try{ss=s,ss.onerror=i=>r(i),ss.onmessage=i0,Xu=[e,r];let n={type:"init-wasm",in:Xt};!n.in.wasm.wasmPaths&&(t||nc)&&(n.in.wasm.wasmPaths={wasm:new URL("/NoLLMChat/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href}),ss.postMessage(n),_a=t}catch(n){r(n)}},r)});try{await $c(Xt.wasm),await Hc(Xt),so=!0}catch(e){throw no=!0,e}finally{oi=!1}}},Jb=async e=>{if(Js())return $n(),new Promise((r,t)=>{Sn("init-ep",[r,t]);let s={type:"init-ep",in:{epName:e,env:Xt}};ss.postMessage(s)});await qc(Xt,e)},Zb=async e=>Js()?($n(),new Promise((r,t)=>{Sn("copy-from",[r,t]);let s={type:"copy-from",in:{buffer:e}};ss.postMessage(s,[e.buffer])})):Aa(e),ev=async(e,r)=>{if(Js()){if(r?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return $n(),new Promise((t,s)=>{Sn("create",[t,s]);let n={type:"create",in:{model:e,options:{...r}}},i=[];e instanceof Uint8Array&&i.push(e.buffer),ss.postMessage(n,i)})}else return Qc(e,r)},tv=async e=>{if(Js())return $n(),new Promise((r,t)=>{Sn("release",[r,t]);let s={type:"release",in:e};ss.postMessage(s)});Xc(e)},rv=async(e,r,t,s,n,i)=>{if(Js()){if(t.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(n.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return $n(),new Promise((o,a)=>{Sn("run",[o,a]);let l=t,d={type:"run",in:{sessionId:e,inputIndices:r,inputs:l,outputIndices:s,options:i}};ss.postMessage(d,Zc(l))})}else return Yc(e,r,t,s,n,i)},sv=async e=>{if(Js())return $n(),new Promise((r,t)=>{Sn("end-profiling",[r,t]);let s={type:"end-profiling",in:e};ss.postMessage(s)});Jc(e)}}),Yu,o0,iv,eT=Ge(()=>{xs(),nv(),Mt(),Cc(),Z0(),Yu=(e,r)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${r()}`)}},o0=e=>{switch(e[3]){case"cpu":return new Ms(e[0],e[2],e[1]);case"gpu-buffer":{let r=e[0];if(!Ac(r))throw new Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:t,download:s,dispose:n}=e[2];return Ms.fromGpuBuffer(t,{dataType:r,dims:e[1],download:s,dispose:n})}case"ml-tensor":{let r=e[0];if(!Fc(r))throw new Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:t,download:s,dispose:n}=e[2];return Ms.fromMLTensor(t,{dataType:r,dims:e[1],download:s,dispose:n})}default:throw new Error(`invalid data location: ${e[3]}`)}},iv=class{async fetchModelAndCopyToWasmMemory(e){return Zb(await Oc(e))}async loadModel(e,r){vs();let t;typeof e=="string"?t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await ev(t,r),as()}async dispose(){return tv(this.sessionId)}async run(e,r,t){vs();let s=[],n=[];Object.entries(e).forEach(u=>{let p=u[0],_=u[1],f=this.inputNames.indexOf(p);if(f===-1)throw new Error(`invalid input '${p}'`);s.push(_),n.push(f)});let i=[],o=[];Object.entries(r).forEach(u=>{let p=u[0],_=u[1],f=this.outputNames.indexOf(p);if(f===-1)throw new Error(`invalid output '${p}'`);i.push(_),o.push(f)});let a=s.map((u,p)=>Yu(u,()=>`input "${this.inputNames[n[p]]}"`)),l=i.map((u,p)=>u?Yu(u,()=>`output "${this.outputNames[o[p]]}"`):null),d=await rv(this.sessionId,n,a,o,l,t),c={};for(let u=0;u<d.length;u++)c[this.outputNames[o[u]]]=i[u]??o0(d[u]);return as(),c}startProfiling(){}endProfiling(){sv(this.sessionId)}}}),ov={};_i(ov,{OnnxruntimeWebAssemblyBackend:()=>yc,initializeFlags:()=>wc,wasmBackend:()=>av});var wc,yc,av,tT=Ge(()=>{xs(),nv(),eT(),wc=()=>{(typeof Xt.wasm.initTimeout!="number"||Xt.wasm.initTimeout<0)&&(Xt.wasm.initTimeout=0);let e=Xt.wasm.simd;if(typeof e!="boolean"&&e!==void 0&&e!=="fixed"&&e!=="relaxed"&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${e}". Reset it to \`false\` and ignore SIMD feature checking.`),Xt.wasm.simd=!1),typeof Xt.wasm.proxy!="boolean"&&(Xt.wasm.proxy=!1),typeof Xt.wasm.trace!="boolean"&&(Xt.wasm.trace=!1),typeof Xt.wasm.numThreads!="number"||!Number.isInteger(Xt.wasm.numThreads)||Xt.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)Xt.wasm.numThreads=1;else{let r=typeof navigator>"u"?Nx("node:os").cpus().length:navigator.hardwareConcurrency;Xt.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},yc=class{async init(e){wc(),await Yb(),await Jb(e)}async createInferenceSessionHandler(e,r){let t=new iv;return await t.loadModel(e,r),t}},av=new yc});xs();xs();xs();var rT="1.22.0-dev.20250409-89f8206ba4",sT=V0;{let e=(tT(),ho(ov)).wasmBackend;On("webgpu",e,5),On("webnn",e,5),On("cpu",e,10),On("wasm",e,10)}Object.defineProperty(Xt.versions,"web",{value:rT,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var nT=Object.freeze({__proto__:null,get InferenceSession(){return Pc},get TRACE(){return mo},get TRACE_FUNC_BEGIN(){return vs},get TRACE_FUNC_END(){return as},get Tensor(){return Ms},default:sT,get env(){return Xt},get registerBackend(){return On}}),Ju={},iT={"onnxruntime-common":e=>{e.exports=Bx},"onnxruntime-web":e=>{e.exports=nT},"?2ce3":()=>{},"?7992":()=>{},"?5af5":()=>{},"?2b25":()=>{},"?db59":()=>{},"?383f":()=>{},"?fa4b":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,r,t)=>{t.r(r),t.d(r,{Environment:()=>Ke,Interpreter:()=>He,Template:()=>bt,parse:()=>Q,tokenize:()=>u});var s=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndSet:"EndSet",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro",Break:"Break",Continue:"Continue"}),n=Object.freeze({set:s.Set,for:s.For,in:s.In,is:s.Is,if:s.If,else:s.Else,endset:s.EndSet,endif:s.EndIf,elif:s.ElseIf,endfor:s.EndFor,and:s.And,or:s.Or,not:s.Not,"not in":s.NotIn,macro:s.Macro,endmacro:s.EndMacro,break:s.Break,continue:s.Continue,true:s.BooleanLiteral,false:s.BooleanLiteral,none:s.NullLiteral,True:s.BooleanLiteral,False:s.BooleanLiteral,None:s.NullLiteral}),i=class{constructor(L,oe){this.value=L,this.type=oe}};function o(L){return/\w/.test(L)}function a(L){return/[0-9]/.test(L)}var l=[["{%",s.OpenStatement],["%}",s.CloseStatement],["{{",s.OpenExpression],["}}",s.CloseExpression],["(",s.OpenParen],[")",s.CloseParen],["{",s.OpenCurlyBracket],["}",s.CloseCurlyBracket],["[",s.OpenSquareBracket],["]",s.CloseSquareBracket],[",",s.Comma],[".",s.Dot],[":",s.Colon],["|",s.Pipe],["<=",s.ComparisonBinaryOperator],[">=",s.ComparisonBinaryOperator],["==",s.ComparisonBinaryOperator],["!=",s.ComparisonBinaryOperator],["<",s.ComparisonBinaryOperator],[">",s.ComparisonBinaryOperator],["+",s.AdditiveBinaryOperator],["-",s.AdditiveBinaryOperator],["*",s.MultiplicativeBinaryOperator],["/",s.MultiplicativeBinaryOperator],["%",s.MultiplicativeBinaryOperator],["=",s.Equals]],d=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function c(L,oe={}){return L.endsWith(`
`)&&(L=L.slice(0,-1)),L=L.replace(/{#.*?#}/gs,"{##}"),oe.lstrip_blocks&&(L=L.replace(/^[ \t]*({[#%])/gm,"$1")),oe.trim_blocks&&(L=L.replace(/([#%]})\n/g,"$1")),L.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function u(L,oe={}){const V=[],ne=c(L,oe);let ge=0;const Re=Pe=>{let gt="";for(;Pe(ne[ge]);){if(ne[ge]==="\\"){if(++ge,ge>=ne.length)throw new SyntaxError("Unexpected end of input");const ot=ne[ge++],at=d.get(ot);if(at===void 0)throw new SyntaxError(`Unexpected escaped character: ${ot}`);gt+=at;continue}if(gt+=ne[ge++],ge>=ne.length)throw new SyntaxError("Unexpected end of input")}return gt};e:for(;ge<ne.length;){const Pe=V.at(-1)?.type;if(Pe===void 0||Pe===s.CloseStatement||Pe===s.CloseExpression){let ot="";for(;ge<ne.length&&!(ne[ge]==="{"&&(ne[ge+1]==="%"||ne[ge+1]==="{"));)ot+=ne[ge++];if(ot.length>0){V.push(new i(ot,s.Text));continue}}Re(ot=>/\s/.test(ot));const gt=ne[ge];if(gt==="-"||gt==="+"){const ot=V.at(-1)?.type;if(ot===s.Text||ot===void 0)throw new SyntaxError(`Unexpected character: ${gt}`);switch(ot){case s.Identifier:case s.NumericLiteral:case s.BooleanLiteral:case s.NullLiteral:case s.StringLiteral:case s.CloseParen:case s.CloseSquareBracket:break;default:{++ge;const at=Re(a);V.push(new i(`${gt}${at}`,at.length>0?s.NumericLiteral:s.UnaryOperator));continue}}}for(const[ot,at]of l)if(ne.slice(ge,ge+ot.length)===ot){V.push(new i(ot,at)),ge+=ot.length;continue e}if(gt==="'"||gt==='"'){++ge;const ot=Re(at=>at!==gt);V.push(new i(ot,s.StringLiteral)),++ge;continue}if(a(gt)){const ot=Re(a);V.push(new i(ot,s.NumericLiteral));continue}if(o(gt)){const ot=Re(o),at=Object.hasOwn(n,ot)?n[ot]:s.Identifier;at===s.In&&V.at(-1)?.type===s.Not?(V.pop(),V.push(new i("not in",s.NotIn))):V.push(new i(ot,at));continue}throw new SyntaxError(`Unexpected character: ${gt}`)}return V}var p=class{type="Statement"},_=class extends p{constructor(L){super(),this.body=L}type="Program"},f=class extends p{constructor(L,oe,V){super(),this.test=L,this.body=oe,this.alternate=V}type="If"},P=class extends p{constructor(L,oe,V,ne){super(),this.loopvar=L,this.iterable=oe,this.body=V,this.defaultBlock=ne}type="For"},A=class extends p{type="Break"},y=class extends p{type="Continue"},g=class extends p{constructor(L,oe,V){super(),this.assignee=L,this.value=oe,this.body=V}type="Set"},I=class extends p{constructor(L,oe,V){super(),this.name=L,this.args=oe,this.body=V}type="Macro"},v=class extends p{type="Expression"},T=class extends v{constructor(L,oe,V){super(),this.object=L,this.property=oe,this.computed=V}type="MemberExpression"},x=class extends v{constructor(L,oe){super(),this.callee=L,this.args=oe}type="CallExpression"},b=class extends v{constructor(L){super(),this.value=L}type="Identifier"},$=class extends v{constructor(L){super(),this.value=L}type="Literal"},j=class extends ${type="NumericLiteral"},B=class extends ${type="StringLiteral"},X=class extends ${type="BooleanLiteral"},re=class extends ${type="NullLiteral"},z=class extends ${type="ArrayLiteral"},te=class extends ${type="TupleLiteral"},W=class extends ${type="ObjectLiteral"},K=class extends v{constructor(L,oe,V){super(),this.operator=L,this.left=oe,this.right=V}type="BinaryExpression"},se=class extends v{constructor(L,oe){super(),this.operand=L,this.filter=oe}type="FilterExpression"},J=class extends v{constructor(L,oe){super(),this.iterable=L,this.test=oe}type="SelectExpression"},ue=class extends v{constructor(L,oe,V){super(),this.operand=L,this.negate=oe,this.test=V}type="TestExpression"},ce=class extends v{constructor(L,oe){super(),this.operator=L,this.argument=oe}type="UnaryExpression"},N=class extends v{constructor(L=void 0,oe=void 0,V=void 0){super(),this.start=L,this.stop=oe,this.step=V}type="SliceExpression"},D=class extends v{constructor(L,oe){super(),this.key=L,this.value=oe}type="KeywordArgumentExpression"};function Q(L){const oe=new _([]);let V=0;function ne(je,Je){const pt=L[V++];if(!pt||pt.type!==je)throw new Error(`Parser Error: ${Je}. ${pt.type} !== ${je}.`);return pt}function ge(){switch(L[V].type){case s.Text:return gt();case s.OpenStatement:return ot();case s.OpenExpression:return at();default:throw new SyntaxError(`Unexpected token type: ${L[V].type}`)}}function Re(...je){return V+je.length<=L.length&&je.some((Je,pt)=>Je!==L[V+pt].type)}function Pe(...je){return V+je.length<=L.length&&je.every((Je,pt)=>Je===L[V+pt].type)}function gt(){return new B(ne(s.Text,"Expected text token").value)}function ot(){ne(s.OpenStatement,"Expected opening statement token");let je;switch(L[V].type){case s.Set:++V,je=Jt(),ne(s.CloseStatement,"Expected closing statement token");break;case s.If:++V,je=At(),ne(s.OpenStatement,"Expected {% token"),ne(s.EndIf,"Expected endif token"),ne(s.CloseStatement,"Expected %} token");break;case s.Macro:++V,je=tr(),ne(s.OpenStatement,"Expected {% token"),ne(s.EndMacro,"Expected endmacro token"),ne(s.CloseStatement,"Expected %} token");break;case s.For:++V,je=Dr(),ne(s.OpenStatement,"Expected {% token"),ne(s.EndFor,"Expected endfor token"),ne(s.CloseStatement,"Expected %} token");break;case s.Break:++V,ne(s.CloseStatement,"Expected closing statement token"),je=new A;break;case s.Continue:++V,ne(s.CloseStatement,"Expected closing statement token"),je=new y;break;default:throw new SyntaxError(`Unknown statement type: ${L[V].type}`)}return je}function at(){ne(s.OpenExpression,"Expected opening expression token");const je=Qt();return ne(s.CloseExpression,"Expected closing expression token"),je}function Jt(){const je=Qt();if(Pe(s.Equals)){++V;const Je=Qt();return new g(je,Je,[])}else{const Je=[];for(ne(s.CloseStatement,"Expected %} token");!(L[V]?.type===s.OpenStatement&&L[V+1]?.type===s.EndSet);){const pt=ge();Je.push(pt)}return ne(s.OpenStatement,"Expected {% token"),ne(s.EndSet,"Expected endset token"),new g(je,null,Je)}}function At(){const je=Qt();ne(s.CloseStatement,"Expected closing statement token");const Je=[],pt=[];for(;!(L[V]?.type===s.OpenStatement&&(L[V+1]?.type===s.ElseIf||L[V+1]?.type===s.Else||L[V+1]?.type===s.EndIf));)Je.push(ge());if(L[V]?.type===s.OpenStatement&&L[V+1]?.type!==s.EndIf)if(++V,Pe(s.ElseIf))ne(s.ElseIf,"Expected elseif token"),pt.push(At());else for(ne(s.Else,"Expected else token"),ne(s.CloseStatement,"Expected closing statement token");!(L[V]?.type===s.OpenStatement&&L[V+1]?.type===s.EndIf);)pt.push(ge());return new f(je,Je,pt)}function tr(){const je=Nr();if(je.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Je=us();ne(s.CloseStatement,"Expected closing statement token");const pt=[];for(;Re(s.OpenStatement,s.EndMacro);)pt.push(ge());return new I(je,Je,pt)}function Wt(je=!1){const Je=je?Nr:Qt,pt=[Je()],gr=Pe(s.Comma);for(;gr&&(++V,pt.push(Je()),!!Pe(s.Comma)););return gr?new te(pt):pt[0]}function Dr(){const je=Wt(!0);if(!(je instanceof b||je instanceof te))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${je.type} instead`);ne(s.In,"Expected `in` keyword following loop variable");const Je=Qt();ne(s.CloseStatement,"Expected closing statement token");const pt=[];for(;Re(s.OpenStatement,s.EndFor)&&Re(s.OpenStatement,s.Else);)pt.push(ge());const gr=[];if(Pe(s.OpenStatement,s.Else))for(++V,++V,ne(s.CloseStatement,"Expected closing statement token");Re(s.OpenStatement,s.EndFor);)gr.push(ge());return new P(je,Je,pt,gr)}function Qt(){return Fr()}function Fr(){const je=Yr();if(Pe(s.If)){++V;const Je=Yr();if(Pe(s.Else)){++V;const pt=Yr();return new f(Je,[je],[pt])}else return new J(je,Je)}return je}function Yr(){let je=ls();for(;Pe(s.Or);){const Je=L[V];++V;const pt=ls();je=new K(Je,je,pt)}return je}function ls(){let je=Jr();for(;Pe(s.And);){const Je=L[V];++V;const pt=Jr();je=new K(Je,je,pt)}return je}function Jr(){let je;for(;Pe(s.Not);){const Je=L[V];++V;const pt=Jr();je=new ce(Je,pt)}return je??Ts()}function Ts(){let je=jr();for(;Pe(s.ComparisonBinaryOperator)||Pe(s.In)||Pe(s.NotIn);){const Je=L[V];++V;const pt=jr();je=new K(Je,je,pt)}return je}function jr(){let je=Zr();for(;Pe(s.AdditiveBinaryOperator);){const Je=L[V];++V;const pt=Zr();je=new K(Je,je,pt)}return je}function Es(){const je=Zt(Nr());return Pe(s.OpenParen)?Gr(je):je}function Gr(je){let Je=new x(je,us());return Je=Zt(Je),Pe(s.OpenParen)&&(Je=Gr(Je)),Je}function us(){ne(s.OpenParen,"Expected opening parenthesis for arguments list");const je=Lr();return ne(s.CloseParen,"Expected closing parenthesis for arguments list"),je}function Lr(){const je=[];for(;!Pe(s.CloseParen);){let Je=Qt();if(Pe(s.Equals)){if(++V,!(Je instanceof b))throw new SyntaxError("Expected identifier for keyword argument");const pt=Qt();Je=new D(Je,pt)}je.push(Je),Pe(s.Comma)&&++V}return je}function Os(){const je=[];let Je=!1;for(;!Pe(s.CloseSquareBracket);)Pe(s.Colon)?(je.push(void 0),++V,Je=!0):(je.push(Qt()),Pe(s.Colon)&&(++V,Je=!0));if(je.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Je){if(je.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new N(...je)}return je[0]}function Zt(je){for(;Pe(s.Dot)||Pe(s.OpenSquareBracket);){const Je=L[V];++V;let pt;const gr=Je.type!==s.Dot;if(gr)pt=Os(),ne(s.CloseSquareBracket,"Expected closing square bracket");else if(pt=Nr(),pt.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");je=new T(je,pt,gr)}return je}function Zr(){let je=es();for(;Pe(s.MultiplicativeBinaryOperator);){const Je=L[V];++V;const pt=es();je=new K(Je,je,pt)}return je}function es(){let je=Or();for(;Pe(s.Is);){++V;const Je=Pe(s.Not);Je&&++V;let pt=Nr();if(pt instanceof X?pt=new b(pt.value.toString()):pt instanceof re&&(pt=new b("none")),!(pt instanceof b))throw new SyntaxError("Expected identifier for the test");je=new ue(je,Je,pt)}return je}function Or(){let je=Es();for(;Pe(s.Pipe);){++V;let Je=Nr();if(!(Je instanceof b))throw new SyntaxError("Expected identifier for the filter");Pe(s.OpenParen)&&(Je=Gr(Je)),je=new se(je,Je)}return je}function Nr(){const je=L[V];switch(je.type){case s.NumericLiteral:return++V,new j(Number(je.value));case s.StringLiteral:return++V,new B(je.value);case s.BooleanLiteral:return++V,new X(je.value.toLowerCase()==="true");case s.NullLiteral:return++V,new re(null);case s.Identifier:return++V,new b(je.value);case s.OpenParen:{++V;const Je=Wt();if(L[V].type!==s.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${L[V].type} instead`);return++V,Je}case s.OpenSquareBracket:{++V;const Je=[];for(;!Pe(s.CloseSquareBracket);)Je.push(Qt()),Pe(s.Comma)&&++V;return++V,new z(Je)}case s.OpenCurlyBracket:{++V;const Je=new Map;for(;!Pe(s.CloseCurlyBracket);){const pt=Qt();ne(s.Colon,"Expected colon between key and value in object literal");const gr=Qt();Je.set(pt,gr),Pe(s.Comma)&&++V}return++V,new W(Je)}default:throw new SyntaxError(`Unexpected token: ${je.type}`)}}for(;V<L.length;)oe.body.push(ge());return oe}function U(L,oe,V=1){oe===void 0&&(oe=L,L=0);const ne=[];for(let ge=L;ge<oe;ge+=V)ne.push(ge);return ne}function ae(L,oe,V,ne=1){const ge=Math.sign(ne);ge>=0?(oe=(oe??=0)<0?Math.max(L.length+oe,0):Math.min(oe,L.length),V=(V??=L.length)<0?Math.max(L.length+V,0):Math.min(V,L.length)):(oe=(oe??=L.length-1)<0?Math.max(L.length+oe,-1):Math.min(oe,L.length-1),V=(V??=-1)<-1?Math.max(L.length+V,-1):Math.min(V,L.length-1));const Re=[];for(let Pe=oe;ge*Pe<ge*V;Pe+=ne)Re.push(L[Pe]);return Re}function Ae(L){return L.replace(/\b\w/g,oe=>oe.toUpperCase())}var Ee=class extends Error{},Le=class extends Error{},Ve=class{type="RuntimeValue";value;builtins=new Map;constructor(L=void 0){this.value=L}__bool__(){return new fe(!!this.value)}},me=class extends Ve{type="NumericValue"},H=class extends Ve{type="StringValue";builtins=new Map([["upper",new Se(()=>new H(this.value.toUpperCase()))],["lower",new Se(()=>new H(this.value.toLowerCase()))],["strip",new Se(()=>new H(this.value.trim()))],["title",new Se(()=>new H(Ae(this.value)))],["length",new me(this.value.length)],["rstrip",new Se(()=>new H(this.value.trimEnd()))],["lstrip",new Se(()=>new H(this.value.trimStart()))],["startswith",new Se(L=>{if(L.length===0)throw new Error("startswith() requires at least one argument");const oe=L[0];if(!(oe instanceof H))throw new Error("startswith() argument must be a string");return new fe(this.value.startsWith(oe.value))})],["endswith",new Se(L=>{if(L.length===0)throw new Error("endswith() requires at least one argument");const oe=L[0];if(!(oe instanceof H))throw new Error("endswith() argument must be a string");return new fe(this.value.endsWith(oe.value))})],["split",new Se(L=>{const oe=L[0]??new Oe;if(!(oe instanceof H||oe instanceof Oe))throw new Error("sep argument must be a string or null");const V=L[1]??new me(-1);if(!(V instanceof me))throw new Error("maxsplit argument must be a number");let ne=[];if(oe instanceof Oe){const ge=this.value.trimStart();for(const{0:Re,index:Pe}of ge.matchAll(/\S+/g)){if(V.value!==-1&&ne.length>=V.value&&Pe!==void 0){ne.push(Re+ge.slice(Pe+Re.length));break}ne.push(Re)}}else{if(oe.value==="")throw new Error("empty separator");ne=this.value.split(oe.value),V.value!==-1&&ne.length>V.value&&ne.push(ne.splice(V.value).join(oe.value))}return new Ce(ne.map(ge=>new H(ge)))})]])},fe=class extends Ve{type="BooleanValue"},Z=class extends Ve{type="ObjectValue";__bool__(){return new fe(this.value.size>0)}builtins=new Map([["get",new Se(([L,oe])=>{if(!(L instanceof H))throw new Error(`Object key must be a string: got ${L.type}`);return this.value.get(L.value)??oe??new Oe})],["items",new Se(()=>new Ce(Array.from(this.value.entries()).map(([L,oe])=>new Ce([new H(L),oe]))))]])},xe=class extends Z{type="KeywordArgumentsValue"},Ce=class extends Ve{type="ArrayValue";builtins=new Map([["length",new me(this.value.length)]]);__bool__(){return new fe(this.value.length>0)}},$e=class extends Ce{type="TupleValue"},Se=class extends Ve{type="FunctionValue"},Oe=class extends Ve{type="NullValue"},ze=class extends Ve{type="UndefinedValue"},Ke=class{constructor(L){this.parent=L}variables=new Map([["namespace",new Se(L=>{if(L.length===0)return new Z(new Map);if(L.length!==1||!(L[0]instanceof Z))throw new Error("`namespace` expects either zero arguments or a single object argument");return L[0]})]]);tests=new Map([["boolean",L=>L.type==="BooleanValue"],["callable",L=>L instanceof Se],["odd",L=>{if(L.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${L.type}`);return L.value%2!==0}],["even",L=>{if(L.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${L.type}`);return L.value%2===0}],["false",L=>L.type==="BooleanValue"&&!L.value],["true",L=>L.type==="BooleanValue"&&L.value],["none",L=>L.type==="NullValue"],["string",L=>L.type==="StringValue"],["number",L=>L.type==="NumericValue"],["integer",L=>L.type==="NumericValue"&&Number.isInteger(L.value)],["iterable",L=>L.type==="ArrayValue"||L.type==="StringValue"],["mapping",L=>L.type==="ObjectValue"],["lower",L=>{const oe=L.value;return L.type==="StringValue"&&oe===oe.toLowerCase()}],["upper",L=>{const oe=L.value;return L.type==="StringValue"&&oe===oe.toUpperCase()}],["none",L=>L.type==="NullValue"],["defined",L=>L.type!=="UndefinedValue"],["undefined",L=>L.type==="UndefinedValue"],["equalto",(L,oe)=>L.value===oe.value],["eq",(L,oe)=>L.value===oe.value]]);set(L,oe){return this.declareVariable(L,Xe(oe))}declareVariable(L,oe){if(this.variables.has(L))throw new SyntaxError(`Variable already declared: ${L}`);return this.variables.set(L,oe),oe}setVariable(L,oe){return this.variables.set(L,oe),oe}resolve(L){if(this.variables.has(L))return this;if(this.parent)return this.parent.resolve(L);throw new Error(`Unknown variable: ${L}`)}lookupVariable(L){try{return this.resolve(L).variables.get(L)??new ze}catch{return new ze}}},He=class{global;constructor(L){this.global=L??new Ke}run(L){return this.evaluate(L,this.global)}evaluateBinaryExpression(L,oe){const V=this.evaluate(L.left,oe);switch(L.operator.value){case"and":return V.__bool__().value?this.evaluate(L.right,oe):V;case"or":return V.__bool__().value?V:this.evaluate(L.right,oe)}const ne=this.evaluate(L.right,oe);switch(L.operator.value){case"==":return new fe(V.value==ne.value);case"!=":return new fe(V.value!=ne.value)}if(V instanceof ze||ne instanceof ze)throw new Error("Cannot perform operation on undefined values");if(V instanceof Oe||ne instanceof Oe)throw new Error("Cannot perform operation on null values");if(V instanceof me&&ne instanceof me)switch(L.operator.value){case"+":return new me(V.value+ne.value);case"-":return new me(V.value-ne.value);case"*":return new me(V.value*ne.value);case"/":return new me(V.value/ne.value);case"%":return new me(V.value%ne.value);case"<":return new fe(V.value<ne.value);case">":return new fe(V.value>ne.value);case">=":return new fe(V.value>=ne.value);case"<=":return new fe(V.value<=ne.value)}else if(V instanceof Ce&&ne instanceof Ce)switch(L.operator.value){case"+":return new Ce(V.value.concat(ne.value))}else if(ne instanceof Ce){const ge=ne.value.find(Re=>Re.value===V.value)!==void 0;switch(L.operator.value){case"in":return new fe(ge);case"not in":return new fe(!ge)}}if(V instanceof H||ne instanceof H)switch(L.operator.value){case"+":return new H(V.value.toString()+ne.value.toString())}if(V instanceof H&&ne instanceof H)switch(L.operator.value){case"in":return new fe(ne.value.includes(V.value));case"not in":return new fe(!ne.value.includes(V.value))}if(V instanceof H&&ne instanceof Z)switch(L.operator.value){case"in":return new fe(ne.value.has(V.value));case"not in":return new fe(!ne.value.has(V.value))}throw new SyntaxError(`Unknown operator "${L.operator.value}" between ${V.type} and ${ne.type}`)}evaluateArguments(L,oe){const V=[],ne=new Map;for(const ge of L)if(ge.type==="KeywordArgumentExpression"){const Re=ge;ne.set(Re.key.value,this.evaluate(Re.value,oe))}else{if(ne.size>0)throw new Error("Positional arguments must come before keyword arguments");V.push(this.evaluate(ge,oe))}return[V,ne]}evaluateFilterExpression(L,oe){const V=this.evaluate(L.operand,oe);if(L.filter.type==="Identifier"){const ne=L.filter;if(ne.value==="tojson")return new H(Be(V));if(V instanceof Ce)switch(ne.value){case"list":return V;case"first":return V.value[0];case"last":return V.value[V.value.length-1];case"length":return new me(V.value.length);case"reverse":return new Ce(V.value.reverse());case"sort":return new Ce(V.value.sort((ge,Re)=>{if(ge.type!==Re.type)throw new Error(`Cannot compare different types: ${ge.type} and ${Re.type}`);switch(ge.type){case"NumericValue":return ge.value-Re.value;case"StringValue":return ge.value.localeCompare(Re.value);default:throw new Error(`Cannot compare type: ${ge.type}`)}}));case"join":return new H(V.value.map(ge=>ge.value).join(""));case"string":return new H(Be(V));default:throw new Error(`Unknown ArrayValue filter: ${ne.value}`)}else if(V instanceof H)switch(ne.value){case"length":return new me(V.value.length);case"upper":return new H(V.value.toUpperCase());case"lower":return new H(V.value.toLowerCase());case"title":return new H(Ae(V.value));case"capitalize":return new H(V.value.charAt(0).toUpperCase()+V.value.slice(1));case"trim":return new H(V.value.trim());case"indent":return new H(V.value.split(`
`).map((ge,Re)=>Re===0||ge.length===0?ge:"    "+ge).join(`
`));case"join":case"string":return V;default:throw new Error(`Unknown StringValue filter: ${ne.value}`)}else if(V instanceof me)switch(ne.value){case"abs":return new me(Math.abs(V.value));default:throw new Error(`Unknown NumericValue filter: ${ne.value}`)}else if(V instanceof Z)switch(ne.value){case"items":return new Ce(Array.from(V.value.entries()).map(([ge,Re])=>new Ce([new H(ge),Re])));case"length":return new me(V.value.size);default:throw new Error(`Unknown ObjectValue filter: ${ne.value}`)}throw new Error(`Cannot apply filter "${ne.value}" to type: ${V.type}`)}else if(L.filter.type==="CallExpression"){const ne=L.filter;if(ne.callee.type!=="Identifier")throw new Error(`Unknown filter: ${ne.callee.type}`);const ge=ne.callee.value;if(ge==="tojson"){const[,Re]=this.evaluateArguments(ne.args,oe),Pe=Re.get("indent")??new Oe;if(!(Pe instanceof me||Pe instanceof Oe))throw new Error("If set, indent must be a number");return new H(Be(V,Pe.value))}else if(ge==="join"){let Re;if(V instanceof H)Re=Array.from(V.value);else if(V instanceof Ce)Re=V.value.map(at=>at.value);else throw new Error(`Cannot apply filter "${ge}" to type: ${V.type}`);const[Pe,gt]=this.evaluateArguments(ne.args,oe),ot=Pe.at(0)??gt.get("separator")??new H("");if(!(ot instanceof H))throw new Error("separator must be a string");return new H(Re.join(ot.value))}if(V instanceof Ce){switch(ge){case"selectattr":case"rejectattr":{const Re=ge==="selectattr";if(V.value.some(At=>!(At instanceof Z)))throw new Error(`\`${ge}\` can only be applied to array of objects`);if(ne.args.some(At=>At.type!=="StringLiteral"))throw new Error(`arguments of \`${ge}\` must be strings`);const[Pe,gt,ot]=ne.args.map(At=>this.evaluate(At,oe));let at;if(gt){const At=oe.tests.get(gt.value);if(!At)throw new Error(`Unknown test: ${gt.value}`);at=At}else at=(...At)=>At[0].__bool__().value;const Jt=V.value.filter(At=>{const tr=At.value.get(Pe.value),Wt=tr?at(tr,ot):!1;return Re?Wt:!Wt});return new Ce(Jt)}case"map":{const[,Re]=this.evaluateArguments(ne.args,oe);if(Re.has("attribute")){const Pe=Re.get("attribute");if(!(Pe instanceof H))throw new Error("attribute must be a string");const gt=Re.get("default"),ot=V.value.map(at=>{if(!(at instanceof Z))throw new Error("items in map must be an object");return at.value.get(Pe.value)??gt??new ze});return new Ce(ot)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${ge}`)}else if(V instanceof H){switch(ge){case"indent":{const[Re,Pe]=this.evaluateArguments(ne.args,oe),gt=Re.at(0)??Pe.get("width")??new me(4);if(!(gt instanceof me))throw new Error("width must be a number");const ot=Re.at(1)??Pe.get("first")??new fe(!1),at=Re.at(2)??Pe.get("blank")??new fe(!1),Jt=V.value.split(`
`),At=" ".repeat(gt.value),tr=Jt.map((Wt,Dr)=>!ot.value&&Dr===0||!at.value&&Wt.length===0?Wt:At+Wt);return new H(tr.join(`
`))}}throw new Error(`Unknown StringValue filter: ${ge}`)}else throw new Error(`Cannot apply filter "${ge}" to type: ${V.type}`)}throw new Error(`Unknown filter: ${L.filter.type}`)}evaluateTestExpression(L,oe){const V=this.evaluate(L.operand,oe),ne=oe.tests.get(L.test.value);if(!ne)throw new Error(`Unknown test: ${L.test.value}`);const ge=ne(V);return new fe(L.negate?!ge:ge)}evaluateUnaryExpression(L,oe){const V=this.evaluate(L.argument,oe);switch(L.operator.value){case"not":return new fe(!V.value);default:throw new SyntaxError(`Unknown operator: ${L.operator.value}`)}}evalProgram(L,oe){return this.evaluateBlock(L.body,oe)}evaluateBlock(L,oe){let V="";for(const ne of L){const ge=this.evaluate(ne,oe);ge.type!=="NullValue"&&ge.type!=="UndefinedValue"&&(V+=ge.value)}return new H(V)}evaluateIdentifier(L,oe){return oe.lookupVariable(L.value)}evaluateCallExpression(L,oe){const[V,ne]=this.evaluateArguments(L.args,oe);ne.size>0&&V.push(new xe(ne));const ge=this.evaluate(L.callee,oe);if(ge.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${ge.type}`);return ge.value(V,oe)}evaluateSliceExpression(L,oe,V){if(!(L instanceof Ce||L instanceof H))throw new Error("Slice object must be an array or string");const ne=this.evaluate(oe.start,V),ge=this.evaluate(oe.stop,V),Re=this.evaluate(oe.step,V);if(!(ne instanceof me||ne instanceof ze))throw new Error("Slice start must be numeric or undefined");if(!(ge instanceof me||ge instanceof ze))throw new Error("Slice stop must be numeric or undefined");if(!(Re instanceof me||Re instanceof ze))throw new Error("Slice step must be numeric or undefined");return L instanceof Ce?new Ce(ae(L.value,ne.value,ge.value,Re.value)):new H(ae(Array.from(L.value),ne.value,ge.value,Re.value).join(""))}evaluateMemberExpression(L,oe){const V=this.evaluate(L.object,oe);let ne;if(L.computed){if(L.property.type==="SliceExpression")return this.evaluateSliceExpression(V,L.property,oe);ne=this.evaluate(L.property,oe)}else ne=new H(L.property.value);let ge;if(V instanceof Z){if(!(ne instanceof H))throw new Error(`Cannot access property with non-string: got ${ne.type}`);ge=V.value.get(ne.value)??V.builtins.get(ne.value)}else if(V instanceof Ce||V instanceof H)if(ne instanceof me)ge=V.value.at(ne.value),V instanceof H&&(ge=new H(V.value.at(ne.value)));else if(ne instanceof H)ge=V.builtins.get(ne.value);else throw new Error(`Cannot access property with non-string/non-number: got ${ne.type}`);else{if(!(ne instanceof H))throw new Error(`Cannot access property with non-string: got ${ne.type}`);ge=V.builtins.get(ne.value)}return ge instanceof Ve?ge:new ze}evaluateSet(L,oe){const V=L.value?this.evaluate(L.value,oe):this.evaluateBlock(L.body,oe);if(L.assignee.type==="Identifier"){const ne=L.assignee.value;oe.setVariable(ne,V)}else if(L.assignee.type==="MemberExpression"){const ne=L.assignee,ge=this.evaluate(ne.object,oe);if(!(ge instanceof Z))throw new Error("Cannot assign to member of non-object");if(ne.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");ge.value.set(ne.property.value,V)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(L.assignee)}`);return new Oe}evaluateIf(L,oe){const V=this.evaluate(L.test,oe);return this.evaluateBlock(V.__bool__().value?L.body:L.alternate,oe)}evaluateFor(L,oe){const V=new Ke(oe);let ne,ge;if(L.iterable.type==="SelectExpression"){const at=L.iterable;ge=this.evaluate(at.iterable,V),ne=at.test}else ge=this.evaluate(L.iterable,V);if(!(ge instanceof Ce))throw new Error(`Expected iterable type in for loop: got ${ge.type}`);const Re=[],Pe=[];for(let at=0;at<ge.value.length;++at){const Jt=new Ke(V),At=ge.value[at];let tr;if(L.loopvar.type==="Identifier")tr=Wt=>Wt.setVariable(L.loopvar.value,At);else if(L.loopvar.type==="TupleLiteral"){const Wt=L.loopvar;if(At.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${At.type}`);const Dr=At;if(Wt.value.length!==Dr.value.length)throw new Error(`Too ${Wt.value.length>Dr.value.length?"few":"many"} items to unpack`);tr=Qt=>{for(let Fr=0;Fr<Wt.value.length;++Fr){if(Wt.value[Fr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Wt.value[Fr].type}`);Qt.setVariable(Wt.value[Fr].value,Dr.value[Fr])}}}else throw new Error(`Invalid loop variable(s): ${L.loopvar.type}`);ne&&(tr(Jt),!this.evaluate(ne,Jt).__bool__().value)||(Re.push(At),Pe.push(tr))}let gt="",ot=!0;for(let at=0;at<Re.length;++at){const Jt=new Map([["index",new me(at+1)],["index0",new me(at)],["revindex",new me(Re.length-at)],["revindex0",new me(Re.length-at-1)],["first",new fe(at===0)],["last",new fe(at===Re.length-1)],["length",new me(Re.length)],["previtem",at>0?Re[at-1]:new ze],["nextitem",at<Re.length-1?Re[at+1]:new ze]]);V.setVariable("loop",new Z(Jt)),Pe[at](V);try{const At=this.evaluateBlock(L.body,V);gt+=At.value}catch(At){if(At instanceof Le)continue;if(At instanceof Ee)break;throw At}ot=!1}if(ot){const at=this.evaluateBlock(L.defaultBlock,V);gt+=at.value}return new H(gt)}evaluateMacro(L,oe){return oe.setVariable(L.name.value,new Se((V,ne)=>{const ge=new Ke(ne);V=V.slice();let Re;V.at(-1)?.type==="KeywordArgumentsValue"&&(Re=V.pop());for(let Pe=0;Pe<L.args.length;++Pe){const gt=L.args[Pe],ot=V[Pe];if(gt.type==="Identifier"){const at=gt;if(!ot)throw new Error(`Missing positional argument: ${at.value}`);ge.setVariable(at.value,ot)}else if(gt.type==="KeywordArgumentExpression"){const at=gt,Jt=ot??Re?.value.get(at.key.value)??this.evaluate(at.value,ge);ge.setVariable(at.key.value,Jt)}else throw new Error(`Unknown argument type: ${gt.type}`)}return this.evaluateBlock(L.body,ge)})),new Oe}evaluate(L,oe){if(L===void 0)return new ze;switch(L.type){case"Program":return this.evalProgram(L,oe);case"Set":return this.evaluateSet(L,oe);case"If":return this.evaluateIf(L,oe);case"For":return this.evaluateFor(L,oe);case"Macro":return this.evaluateMacro(L,oe);case"Break":throw new Ee;case"Continue":throw new Le;case"NumericLiteral":return new me(Number(L.value));case"StringLiteral":return new H(L.value);case"BooleanLiteral":return new fe(L.value);case"NullLiteral":return new Oe(L.value);case"ArrayLiteral":return new Ce(L.value.map(V=>this.evaluate(V,oe)));case"TupleLiteral":return new $e(L.value.map(V=>this.evaluate(V,oe)));case"ObjectLiteral":{const V=new Map;for(const[ne,ge]of L.value){const Re=this.evaluate(ne,oe);if(!(Re instanceof H))throw new Error(`Object keys must be strings: got ${Re.type}`);V.set(Re.value,this.evaluate(ge,oe))}return new Z(V)}case"Identifier":return this.evaluateIdentifier(L,oe);case"CallExpression":return this.evaluateCallExpression(L,oe);case"MemberExpression":return this.evaluateMemberExpression(L,oe);case"UnaryExpression":return this.evaluateUnaryExpression(L,oe);case"BinaryExpression":return this.evaluateBinaryExpression(L,oe);case"FilterExpression":return this.evaluateFilterExpression(L,oe);case"TestExpression":return this.evaluateTestExpression(L,oe);default:throw new SyntaxError(`Unknown node type: ${L.type}`)}}};function Xe(L){switch(typeof L){case"number":return new me(L);case"string":return new H(L);case"boolean":return new fe(L);case"undefined":return new ze;case"object":return L===null?new Oe:Array.isArray(L)?new Ce(L.map(Xe)):new Z(new Map(Object.entries(L).map(([oe,V])=>[oe,Xe(V)])));case"function":return new Se((oe,V)=>{const ne=L(...oe.map(ge=>ge.value))??null;return Xe(ne)});default:throw new Error(`Cannot convert to runtime value: ${L}`)}}function Be(L,oe,V){const ne=V??0;switch(L.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(L.value);case"ArrayValue":case"ObjectValue":{const ge=oe?" ".repeat(oe):"",Re=`
`+ge.repeat(ne),Pe=Re+ge;if(L.type==="ArrayValue"){const gt=L.value.map(ot=>Be(ot,oe,ne+1));return oe?`[${Pe}${gt.join(`,${Pe}`)}${Re}]`:`[${gt.join(", ")}]`}else{const gt=Array.from(L.value.entries()).map(([ot,at])=>{const Jt=`"${ot}": ${Be(at,oe,ne+1)}`;return oe?`${Pe}${Jt}`:Jt});return oe?`{${gt.join(",")}${Re}}`:`{${gt.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${L.type}`)}}var Ye=`
`,nt="{%- ",et=" -%}",mt={MultiplicativeBinaryOperator:2,AdditiveBinaryOperator:1,ComparisonBinaryOperator:0};function rt(L,oe="	"){const V=typeof oe=="number"?" ".repeat(oe):oe;return O(L.body,0,V).replace(/\n$/,"")}function We(...L){return nt+L.join(" ")+et}function O(L,oe,V){return L.map(ne=>E(ne,oe,V)).join(Ye)}function E(L,oe,V){const ne=V.repeat(oe);switch(L.type){case"Program":return O(L.body,oe,V);case"If":return S(L,oe,V);case"For":return ee(L,oe,V);case"Set":return de(L,oe,V);case"Macro":return Me(L,oe,V);case"Break":return ne+We("break");case"Continue":return ne+We("continue");default:return ne+"{{- "+ye(L)+" -}}"}}function S(L,oe,V){const ne=V.repeat(oe),ge=[];let Re=L;for(;Re&&(ge.push({test:Re.test,body:Re.body}),Re.alternate.length===1&&Re.alternate[0].type==="If");)Re=Re.alternate[0];let Pe=ne+We("if",ye(ge[0].test))+Ye+O(ge[0].body,oe+1,V);for(let gt=1;gt<ge.length;gt++)Pe+=Ye+ne+We("elif",ye(ge[gt].test))+Ye+O(ge[gt].body,oe+1,V);return Re&&Re.alternate.length>0&&(Pe+=Ye+ne+We("else")+Ye+O(Re.alternate,oe+1,V)),Pe+=Ye+ne+We("endif"),Pe}function ee(L,oe,V){const ne=V.repeat(oe);let ge="";if(L.iterable.type==="SelectExpression"){const Pe=L.iterable;ge=`${ye(Pe.iterable)} if ${ye(Pe.test)}`}else ge=ye(L.iterable);let Re=ne+We("for",ye(L.loopvar),"in",ge)+Ye+O(L.body,oe+1,V);return L.defaultBlock.length>0&&(Re+=Ye+ne+We("else")+Ye+O(L.defaultBlock,oe+1,V)),Re+=Ye+ne+We("endfor"),Re}function de(L,oe,V){const ne=V.repeat(oe),ge=ye(L.assignee),Re=L.value?ye(L.value):"",Pe=ne+We("set",`${ge}${L.value?" = "+Re:""}`);return L.body.length===0?Pe:Pe+Ye+O(L.body,oe+1,V)+Ye+ne+We("endset")}function Me(L,oe,V){const ne=V.repeat(oe),ge=L.args.map(ye).join(", ");return ne+We("macro",`${L.name.value}(${ge})`)+Ye+O(L.body,oe+1,V)+Ye+ne+We("endmacro")}function ye(L,oe=-1){switch(L.type){case"Identifier":return L.value;case"NullLiteral":return"none";case"NumericLiteral":case"BooleanLiteral":return`${L.value}`;case"StringLiteral":return JSON.stringify(L.value);case"BinaryExpression":{const V=L,ne=mt[V.operator.type]??0,ge=ye(V.left,ne),Re=ye(V.right,ne+1),Pe=`${ge} ${V.operator.value} ${Re}`;return ne<oe?`(${Pe})`:Pe}case"UnaryExpression":{const V=L;return V.operator.value+(V.operator.value==="not"?" ":"")+ye(V.argument,1/0)}case"LogicalNegationExpression":return`not ${ye(L.argument,1/0)}`;case"CallExpression":{const V=L,ne=V.args.map(ge=>ye(ge,-1)).join(", ");return`${ye(V.callee,-1)}(${ne})`}case"MemberExpression":{const V=L;let ne=ye(V.object,-1);V.object.type!=="Identifier"&&(ne=`(${ne})`);let ge=ye(V.property,-1);return!V.computed&&V.property.type!=="Identifier"&&(ge=`(${ge})`),V.computed?`${ne}[${ge}]`:`${ne}.${ge}`}case"FilterExpression":{const V=L,ne=ye(V.operand,1/0);return V.filter.type==="CallExpression"?`${ne} | ${ye(V.filter,-1)}`:`${ne} | ${V.filter.value}`}case"SelectExpression":{const V=L;return`${ye(V.iterable,-1)} | select(${ye(V.test,-1)})`}case"TestExpression":{const V=L;return`${ye(V.operand,-1)} is${V.negate?" not":""} ${V.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const V=L.value.map(ge=>ye(ge,-1)),ne=L.type==="ArrayLiteral"?"[]":"()";return`${ne[0]}${V.join(", ")}${ne[1]}`}case"ObjectLiteral":return`{ ${Array.from(L.value.entries()).map(([ne,ge])=>`${ye(ne,-1)}: ${ye(ge,-1)}`).join(", ")} }`;case"SliceExpression":{const V=L,ne=V.start?ye(V.start,-1):"",ge=V.stop?ye(V.stop,-1):"",Re=V.step?`:${ye(V.step,-1)}`:"";return`${ne}:${ge}${Re}`}case"KeywordArgumentExpression":{const V=L;return`${V.key.value}=${ye(V.value,-1)}`}case"If":{const V=L,ne=ye(V.test,-1),ge=ye(V.body[0],0),Re=ye(V.alternate[0],-1);return`${ge} if ${ne} else ${Re}`}default:throw new Error(`Unknown expression type: ${L.type}`)}}var bt=class{parsed;constructor(L){const oe=u(L,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=Q(oe)}render(L){const oe=new Ke;if(oe.set("false",!1),oe.set("true",!0),oe.set("raise_exception",ge=>{throw new Error(ge)}),oe.set("range",U),L)for(const[ge,Re]of Object.entries(L))oe.set(ge,Re);return new He(oe).run(this.parsed).value}format(L){return rt(this.parsed,L?.indent||"	")}}},"./src/backends/onnx.js":(e,r,t)=>{var s;t.r(r),t.d(r,{Tensor:()=>a.Tensor,createInferenceSession:()=>A,deviceToExecutionProviders:()=>f,isONNXProxy:()=>I,isONNXTensor:()=>y});var n=t("./src/env.js"),i=t("?2ce3"),o=t("onnxruntime-web"),a=t("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),d=[];let c,u;const p=Symbol.for("onnxruntime");if(p in globalThis)u=globalThis[p];else if(n.apis.IS_NODE_ENV){switch(u=i??(s||(s=t.t(i,2))),En.platform){case"win32":d.push("dml");break;case"linux":En.arch==="x64"&&d.push("cuda");break}d.push("cpu"),c=["cpu"]}else u=o,n.apis.IS_WEBNN_AVAILABLE&&d.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),n.apis.IS_WEBGPU_AVAILABLE&&d.push("webgpu"),d.push("wasm"),c=["wasm"];const _=u.InferenceSession;function f(v=null){if(!v)return c;switch(v){case"auto":return d;case"gpu":return d.filter(T=>["webgpu","cuda","dml","webnn-gpu"].includes(T))}if(d.includes(v))return[l[v]??v];throw new Error(`Unsupported device: "${v}". Should be one of: ${d.join(", ")}.`)}let P=null;async function A(v,T,x){P&&await P;const b=_.create(v,T);P??=b;const $=await b;return $.config=x,$}function y(v){return v instanceof u.Tensor}const g=u?.env;g?.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!g.wasm.wasmPaths&&(g.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${n.env.version}/dist/`),g.wasm.proxy=!1),g?.webgpu&&(g.webgpu.powerPreference="high-performance");function I(){return g?.wasm?.proxy}n.env.backends.onnx=g},"./src/base/feature_extraction_utils.js":(e,r,t)=>{t.r(r),t.d(r,{FeatureExtractor:()=>o,validate_audio_inputs:()=>a});var s=t("./src/utils/constants.js"),n=t("./src/utils/generic.js"),i=t("./src/utils/hub.js");class o extends n.Callable{constructor(d){super(),this.config=d}static async from_pretrained(d,c){const u=await(0,i.getModelJSON)(d,s.FEATURE_EXTRACTOR_NAME,!0,c);return new this(u)}}function a(l,d){if(!(l instanceof Float32Array||l instanceof Float64Array))throw new Error(`${d} expects input to be a Float32Array or a Float64Array, but got ${l?.constructor?.name??typeof l} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,r,t)=>{t.r(r),t.d(r,{ImageProcessor:()=>v,center_to_corners_format:()=>u,post_process_instance_segmentation:()=>I,post_process_object_detection:()=>p,post_process_panoptic_segmentation:()=>g,post_process_semantic_segmentation:()=>_});var s=t("./src/utils/generic.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/maths.js");t("./src/utils/image.js");var o=t("./src/utils/core.js"),a=t("./src/utils/hub.js"),l=t("./src/utils/constants.js");function d(T,x,b=0,$=null){const j=T/x;let B=(0,i.bankers_round)(j)*x;return $!==null&&B>$&&(B=Math.floor(j)*x),B<b&&(B=Math.ceil(j)*x),B}function c([T,x],b){return[Math.max(Math.floor(T/b),1)*b,Math.max(Math.floor(x/b),1)*b]}function u([T,x,b,$]){return[T-b/2,x-$/2,T+b/2,x+$/2]}function p(T,x=.5,b=null,$=!1){const j=T.logits,B=T.pred_boxes,[X,re,z]=j.dims;if(b!==null&&b.length!==X)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let te=[];for(let W=0;W<X;++W){let K=b!==null?b[W]:null,se={boxes:[],classes:[],scores:[]},J=j[W],ue=B[W];for(let ce=0;ce<re;++ce){let N=J[ce],D=[],Q;if($){Q=N.sigmoid().data;for(let U=0;U<Q.length;++U)Q[U]>x&&D.push(U)}else{let U=(0,i.max)(N.data)[1];if(U===z-1||(Q=(0,i.softmax)(N.data),Q[U]<x))continue;D.push(U)}for(const U of D){let ae=ue[ce].data;ae=u(ae),K!==null&&(ae=ae.map((Ae,Ee)=>Ae*K[(Ee+1)%2])),se.boxes.push(ae),se.classes.push(U),se.scores.push(Q[U])}}te.push(se)}return te}function _(T,x=null){const b=T.logits,$=b.dims[0];if(x!==null&&x.length!==$)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const j=[];for(let B=0;B<$;++B){const X=x!==null?x[B]:null;let re=b[B];X!==null&&(re=(0,n.interpolate)(re,X,"bilinear",!1));const[z,te]=X??re.dims.slice(-2),W=new n.Tensor("int32",new Int32Array(z*te),[z,te]),K=re[0].data,se=W.data;for(let ce=1;ce<re.dims[0];++ce){const N=re[ce].data;for(let D=0;D<N.length;++D)N[D]>K[D]&&(K[D]=N[D],se[D]=ce)}const J=new Array(re.dims[0]);for(let ce=0;ce<se.length;++ce){const N=se[ce];J[N]=N}const ue=J.filter(ce=>ce!==void 0);j.push({segmentation:W,labels:ue})}return j}function f(T,x,b,$){const j=[],B=[],X=[];for(let re=0;re<T.dims[0];++re){const z=T[re],te=x[re],W=(0,i.max)(z.data)[1];if(W===$)continue;const se=(0,i.softmax)(z.data)[W];se>b&&(j.push(te),B.push(se),X.push(W))}return[j,B,X]}function P(T,x,b,$=.5,j=.8){const B=[];let X=0,re=0;const z=x[b].data;for(let W=0;W<T.length;++W)T[W]===b&&(B.push(W),++X),z[W]>=$&&++re;let te=X>0&&re>0;return te&&(te=X/re>j),[te,B]}function A(T,x,b,$,j,B=null,X=null){const[re,z]=X??T[0].dims,te=new n.Tensor("int32",new Int32Array(re*z),[re,z]),W=[];if(X!==null)for(let ce=0;ce<T.length;++ce)T[ce]=(0,n.interpolate)(T[ce],X,"bilinear",!1);const K=new Int32Array(T[0].data.length),se=new Float32Array(T[0].data.length);for(let ce=0;ce<T.length;++ce){let N=x[ce];const D=T[ce].data;for(let Q=0;Q<D.length;++Q)D[Q]*=N,D[Q]>se[Q]&&(K[Q]=ce,se[Q]=D[Q])}let J=0;const ue=te.data;for(let ce=0;ce<b.length;++ce){const N=b[ce],[D,Q]=P(K,T,ce,$,j);if(D){++J;for(const U of Q)ue[U]=J;W.push({id:J,label_id:N,score:x[ce]})}}return[te,W]}function y(T,x,b=28,$=56*56,j=14*14*4*1280){if(T<b||x<b)throw new Error(`height:${T} or width:${x} must be larger than factor:${b}`);if(Math.max(T,x)/Math.min(T,x)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(T,x)/Math.min(T,x)}`);let B=Math.round(T/b)*b,X=Math.round(x/b)*b;if(B*X>j){const re=Math.sqrt(T*x/j);B=Math.floor(T/re/b)*b,X=Math.floor(x/re/b)*b}else if(B*X<$){const re=Math.sqrt($/(T*x));B=Math.ceil(T*re/b)*b,X=Math.ceil(x*re/b)*b}return[B,X]}function g(T,x=.5,b=.5,$=.8,j=null,B=null){j===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),j=new Set);const X=T.class_queries_logits??T.logits,z=(T.masks_queries_logits??T.pred_masks).sigmoid();let[te,W,K]=X.dims;if(K-=1,B!==null&&B.length!==te)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let se=[];for(let J=0;J<te;++J){let ue=B!==null?B[J]:null,ce=X[J],N=z[J],[D,Q,U]=f(ce,N,x,K);if(U.length===0){let[Ee,Le]=ue??N.dims.slice(-2),Ve=new n.Tensor("int32",new Int32Array(Ee*Le).fill(-1),[Ee,Le]);se.push({segmentation:Ve,segments_info:[]});continue}let[ae,Ae]=A(D,Q,U,b,$,j,ue);se.push({segmentation:ae,segments_info:Ae})}return se}function I(T,x=.5,b=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class v extends s.Callable{constructor(x){super(),this.image_mean=x.image_mean??x.mean,this.image_std=x.image_std??x.std,this.resample=x.resample??2,this.do_rescale=x.do_rescale??!0,this.rescale_factor=x.rescale_factor??1/255,this.do_normalize=x.do_normalize,this.do_thumbnail=x.do_thumbnail,this.size=x.size??x.image_size,this.do_resize=x.do_resize??this.size!==void 0,this.size_divisibility=x.size_divisibility??x.size_divisor,this.do_center_crop=x.do_center_crop,this.crop_size=x.crop_size,this.do_convert_rgb=x.do_convert_rgb??!0,this.do_crop_margin=x.do_crop_margin,this.pad_size=x.pad_size,this.do_pad=x.do_pad,this.min_pixels=x.min_pixels,this.max_pixels=x.max_pixels,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=x.do_flip_channel_order??!1,this.config=x}async thumbnail(x,b,$=2){const j=x.height,B=x.width,X=b.height,re=b.width;let z=Math.min(j,X),te=Math.min(B,re);return z===j&&te===B?x:(j>B?te=Math.floor(B*z/j):B>j&&(z=Math.floor(j*te/B)),await x.resize(te,z,{resample:$}))}async crop_margin(x,b=200){const $=x.clone().grayscale(),j=(0,i.min)($.data)[0],X=(0,i.max)($.data)[0]-j;if(X===0)return x;const re=b/255;let z=$.width,te=$.height,W=0,K=0;const se=$.data;for(let J=0;J<$.height;++J){const ue=J*$.width;for(let ce=0;ce<$.width;++ce)(se[ue+ce]-j)/X<re&&(z=Math.min(z,ce),te=Math.min(te,J),W=Math.max(W,ce),K=Math.max(K,J))}return x=await x.crop([z,te,W,K]),x}pad_image(x,b,$,{mode:j="constant",center:B=!1,constant_values:X=0}={}){const[re,z,te]=b;let W,K;if(typeof $=="number"?(W=$,K=$):$==="square"?W=K=Math.max(re,z):(W=$.width,K=$.height),W!==z||K!==re){const se=new Float32Array(W*K*te);if(Array.isArray(X))for(let ce=0;ce<se.length;++ce)se[ce]=X[ce%te];else X!==0&&se.fill(X);const[J,ue]=B?[Math.floor((W-z)/2),Math.floor((K-re)/2)]:[0,0];for(let ce=0;ce<re;++ce){const N=(ce+ue)*W,D=ce*z;for(let Q=0;Q<z;++Q){const U=(N+Q+J)*te,ae=(D+Q)*te;for(let Ae=0;Ae<te;++Ae)se[U+Ae]=x[ae+Ae]}}if(j==="symmetric"){if(B)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const ce=re-1,N=z-1;for(let D=0;D<K;++D){const Q=D*W,U=(0,o.calculateReflectOffset)(D,ce)*z;for(let ae=0;ae<W;++ae){if(D<re&&ae<z)continue;const Ae=(Q+ae)*te,Ee=(U+(0,o.calculateReflectOffset)(ae,N))*te;for(let Le=0;Le<te;++Le)se[Ae+Le]=x[Ee+Le]}}}x=se,b=[K,W,te]}return[x,b]}rescale(x){for(let b=0;b<x.length;++b)x[b]=this.rescale_factor*x[b]}get_resize_output_image_size(x,b){const[$,j]=x.size;let B,X;if(this.do_thumbnail){const{height:re,width:z}=b;B=Math.min(re,z)}else Number.isInteger(b)?(B=b,X=this.config.max_size??B):b!==void 0&&(B=b.shortest_edge,X=b.longest_edge);if(B!==void 0||X!==void 0){const re=B===void 0?1:Math.max(B/$,B/j),z=$*re,te=j*re,W=X===void 0?1:Math.min(X/z,X/te);let K=Math.floor(Number((z*W).toFixed(2))),se=Math.floor(Number((te*W).toFixed(2)));return this.size_divisibility!==void 0&&([K,se]=c([K,se],this.size_divisibility)),[K,se]}else if(b!==void 0&&b.width!==void 0&&b.height!==void 0){let re=b.width,z=b.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let te=z/j,W=re/$;Math.abs(1-W)<Math.abs(1-te)?te=W:W=te,z=d(te*j,this.config.ensure_multiple_of),re=d(W*$,this.config.ensure_multiple_of)}return[re,z]}else{if(this.size_divisibility!==void 0)return c([$,j],this.size_divisibility);if(this.min_pixels!==void 0&&this.max_pixels!==void 0){const re=this.config.patch_size*this.config.merge_size;return y(j,$,re,this.min_pixels,this.max_pixels)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(b)}`)}}async resize(x){const[b,$]=this.get_resize_output_image_size(x,this.size);return await x.resize(b,$,{resample:this.resample})}async preprocess(x,{do_normalize:b=null,do_pad:$=null,do_convert_rgb:j=null,do_convert_grayscale:B=null,do_flip_channel_order:X=null}={}){this.do_crop_margin&&(x=await this.crop_margin(x));const[re,z]=x.size;if(j??this.do_convert_rgb?x=x.rgb():B&&(x=x.grayscale()),this.do_resize&&(x=await this.resize(x)),this.do_thumbnail&&(x=await this.thumbnail(x,this.size,this.resample)),this.do_center_crop){let J,ue;Number.isInteger(this.crop_size)?(J=this.crop_size,ue=this.crop_size):(J=this.crop_size.width,ue=this.crop_size.height),x=await x.center_crop(J,ue)}const te=[x.height,x.width];let W=Float32Array.from(x.data),K=[x.height,x.width,x.channels];if(this.do_rescale&&this.rescale(W),b??this.do_normalize){let J=this.image_mean;Array.isArray(this.image_mean)||(J=new Array(x.channels).fill(J));let ue=this.image_std;if(Array.isArray(this.image_std)||(ue=new Array(x.channels).fill(J)),J.length!==x.channels||ue.length!==x.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${J.length}) and \`image_std\` (${ue.length}) must match the number of channels in the image (${x.channels}).`);for(let ce=0;ce<W.length;ce+=x.channels)for(let N=0;N<x.channels;++N)W[ce+N]=(W[ce+N]-J[N])/ue[N]}if($??this.do_pad){if(this.pad_size)[W,K]=this.pad_image(W,[x.height,x.width,x.channels],this.pad_size);else if(this.size_divisibility){const[J,ue]=c([K[1],K[0]],this.size_divisibility);[W,K]=this.pad_image(W,K,{width:J,height:ue})}}if(X??this.do_flip_channel_order){if(K[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let J=0;J<W.length;J+=3){const ue=W[J];W[J]=W[J+2],W[J+2]=ue}}const se=new n.Tensor("float32",W,K).permute(2,0,1);return{original_size:[z,re],reshaped_input_size:te,pixel_values:se}}async _call(x,...b){Array.isArray(x)||(x=[x]);const $=await Promise.all(x.map(B=>this.preprocess(B)));return{pixel_values:(0,n.stack)($.map(B=>B.pixel_values),0),original_sizes:$.map(B=>B.original_size),reshaped_input_sizes:$.map(B=>B.reshaped_input_size)}}static async from_pretrained(x,b){const $=await(0,a.getModelJSON)(x,l.IMAGE_PROCESSOR_NAME,!0,b);return new this($)}}},"./src/base/processing_utils.js":(e,r,t)=>{t.r(r),t.d(r,{Processor:()=>o});var s=t("./src/utils/constants.js"),n=t("./src/utils/generic.js"),i=t("./src/utils/hub.js");class o extends n.Callable{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;static uses_chat_template_file=!1;constructor(l,d,c){super(),this.config=l,this.components=d,this.chat_template=c}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(l,d={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(l,{tokenize:!1,chat_template:this.chat_template??void 0,...d})}batch_decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...l)}decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...l)}async _call(l,...d){for(const c of[this.image_processor,this.feature_extractor,this.tokenizer])if(c)return c(l,...d);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(l,d){const[c,u,p]=await Promise.all([this.uses_processor_config?(0,i.getModelJSON)(l,s.PROCESSOR_NAME,!0,d):{},Promise.all(this.classes.filter(_=>_ in this).map(async _=>{const f=await this[_].from_pretrained(l,d);return[_.replace(/_class$/,""),f]})).then(Object.fromEntries),this.uses_chat_template_file?(0,i.getModelText)(l,s.CHAT_TEMPLATE_NAME,!0,d):null]);return new this(c,u,p)}}},"./src/configs.js":(e,r,t)=>{t.r(r),t.d(r,{AutoConfig:()=>d,PretrainedConfig:()=>l,getKeyValueShapes:()=>a});var s=t("./src/utils/core.js"),n=t("./src/utils/hub.js");async function i(c,u){return await(0,n.getModelJSON)(c,"config.json",!0,u)}function o(c){const u={};let p={};switch(c.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"smolvlm":case"gemma3n":p=o(c.text_config);break;case"moondream1":p=o(c.phi_config);break;case"musicgen":p=o(c.decoder);break;case"multi_modality":p=o(c.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":u.num_heads="num_attention_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":case"llava_qwen2":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size",u.num_attention_heads="num_attention_heads";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"gemma3n_text":case"glm":case"helium":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.dim_kv="head_dim";break;case"openelm":u.num_heads="num_kv_heads",u.num_layers="num_transformer_layers",u.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":u.num_heads="num_heads",u.num_layers="num_layers",u.hidden_size="hidden_size";break;case"bloom":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="hidden_size";break;case"mpt":u.num_heads="n_heads",u.num_layers="n_layers",u.hidden_size="d_model";break;case"exaone":u.num_heads="num_key_value_heads",u.num_layers="num_layers",u.dim_kv="head_dim",u.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":u.num_decoder_layers="num_decoder_layers",u.num_decoder_heads="num_heads",u.decoder_dim_kv="d_kv",u.num_encoder_layers="num_layers",u.num_encoder_heads="num_heads",u.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="d_model",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="d_model";break;case"speecht5":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="hidden_size",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="hidden_size";break;case"trocr":u.num_encoder_layers=u.num_decoder_layers="decoder_layers",u.num_encoder_heads=u.num_decoder_heads="decoder_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="d_model";break;case"musicgen_decoder":u.num_encoder_layers=u.num_decoder_layers="num_hidden_layers",u.num_encoder_heads=u.num_decoder_heads="num_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"moonshine":u.num_decoder_layers="decoder_num_hidden_layers",u.num_decoder_heads="decoder_num_key_value_heads",u.num_encoder_layers="encoder_num_hidden_layers",u.num_encoder_heads="encoder_num_key_value_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const f=o(c.decoder),P="num_decoder_layers"in f,A=(0,s.pick)(c,["model_type","is_encoder_decoder"]);return P?(A.num_decoder_layers=f.num_decoder_layers,A.num_decoder_heads=f.num_decoder_heads,A.decoder_hidden_size=f.decoder_hidden_size,A.num_encoder_layers=f.num_encoder_layers,A.num_encoder_heads=f.num_encoder_heads,A.encoder_hidden_size=f.encoder_hidden_size):(A.num_layers=f.num_layers,A.num_heads=f.num_heads,A.hidden_size=f.hidden_size),A}const _={...p,...(0,s.pick)(c,["model_type","multi_query","is_encoder_decoder"])};for(const f in u)_[f]=c[u[f]];return _}function a(c,{prefix:u="past_key_values",batch_size:p=1}={}){const _={},f=c.normalized_config;if(f.is_encoder_decoder&&"num_encoder_heads"in f&&"num_decoder_heads"in f){const P=f.encoder_dim_kv??f.encoder_hidden_size/f.num_encoder_heads,A=f.decoder_dim_kv??f.decoder_hidden_size/f.num_decoder_heads,y=[p,f.num_encoder_heads,0,P],g=[p,f.num_decoder_heads,0,A];for(let I=0;I<f.num_decoder_layers;++I)_[`${u}.${I}.encoder.key`]=y,_[`${u}.${I}.encoder.value`]=y,_[`${u}.${I}.decoder.key`]=g,_[`${u}.${I}.decoder.value`]=g}else{const P=f.num_heads,A=f.num_layers,y=f.dim_kv??f.hidden_size/(f.num_attention_heads??P);if(f.model_type==="falcon"){const g=[p*P,0,y];for(let I=0;I<A;++I)_[`${u}.${I}.key`]=g,_[`${u}.${I}.value`]=g}else if(f.multi_query){const g=[p*P,0,2*y];for(let I=0;I<A;++I)_[`${u}.${I}.key_value`]=g}else if(f.model_type==="bloom"){const g=[p*P,y,0],I=[p*P,0,y];for(let v=0;v<A;++v)_[`${u}.${v}.key`]=g,_[`${u}.${v}.value`]=I}else if(f.model_type==="openelm")for(let g=0;g<A;++g){const I=[p,P[g],0,y];_[`${u}.${g}.key`]=I,_[`${u}.${g}.value`]=I}else{const g=[p,P,0,y];for(let I=0;I<A;++I)_[`${u}.${I}.key`]=g,_[`${u}.${I}.value`]=g}}return _}class l{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(u){Object.assign(this,u),this.normalized_config=o(this)}static async from_pretrained(u,{progress_callback:p=null,config:_=null,cache_dir:f=null,local_files_only:P=!1,revision:A="main"}={}){_&&!(_ instanceof l)&&(_=new l(_));const y=_??await i(u,{progress_callback:p,config:_,cache_dir:f,local_files_only:P,revision:A});return new this(y)}}class d{static async from_pretrained(...u){return l.from_pretrained(...u)}}},"./src/env.js":(e,r,t)=>{t.r(r),t.d(r,{apis:()=>y,env:()=>b});var s=t("?db59"),n=t("?383f"),i=t("?fa4b");const o="3.6.0",a=typeof window<"u"&&typeof window.document<"u",l=typeof self<"u"&&self.constructor?.name==="DedicatedWorkerGlobalScope",d=typeof self<"u"&&"caches"in self,c=typeof navigator<"u"&&"gpu"in navigator,u=typeof navigator<"u"&&"ml"in navigator,p=typeof En<"u",_=p&&En?.release?.name==="node",f=!$(s),P=!$(n),A=typeof globalThis.Deno<"u",y=Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:d,IS_WEBGPU_AVAILABLE:c,IS_WEBNN_AVAILABLE:u,IS_PROCESS_AVAILABLE:p,IS_NODE_ENV:_,IS_FS_AVAILABLE:f,IS_PATH_AVAILABLE:P}),g=f&&P;let I="./";if(g){const j=Object(import.meta).url;j?I=n.dirname(n.dirname(i.fileURLToPath(j))):typeof __dirname<"u"&&(I=n.dirname(__dirname))}const v=g?n.join(I,"/.cache/"):null,T="/models/",x=g?n.join(I,T):T,b={version:o,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(a||l),localModelPath:x,useFS:f,useBrowserCache:d&&!A,useFSCache:f,cacheDir:v,useCustomCache:!1,customCache:null};function $(j){return Object.keys(j).length===0}},"./src/generation/configuration_utils.js":(e,r,t)=>{t.r(r),t.d(r,{GenerationConfig:()=>n});var s=t("./src/utils/core.js");class n{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(o){Object.assign(this,(0,s.pick)(o,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,r,t)=>{t.r(r),t.d(r,{ClassifierFreeGuidanceLogitsProcessor:()=>y,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>d,LogitsProcessor:()=>i,LogitsProcessorList:()=>a,LogitsWarper:()=>o,MinLengthLogitsProcessor:()=>f,MinNewTokensLengthLogitsProcessor:()=>P,NoBadWordsLogitsProcessor:()=>A,NoRepeatNGramLogitsProcessor:()=>p,RepetitionPenaltyLogitsProcessor:()=>_,SuppressTokensAtBeginLogitsProcessor:()=>c,TemperatureLogitsWarper:()=>g,TopKLogitsWarper:()=>v,TopPLogitsWarper:()=>I,WhisperTimeStampLogitsProcessor:()=>u});var s=t("./src/utils/generic.js");t("./src/utils/tensor.js");var n=t("./src/utils/maths.js");class i extends s.Callable{_call(x,b){throw Error("`_call` should be implemented in a subclass")}}class o extends s.Callable{_call(x,b){throw Error("`_call` should be implemented in a subclass")}}class a extends s.Callable{constructor(){super(),this.processors=[]}push(x){this.processors.push(x)}extend(x){this.processors.push(...x)}_call(x,b){let $=b;for(const j of this.processors)$=j(x,$);return $}[Symbol.iterator](){return this.processors.values()}}class l extends i{constructor(x){super(),this.bos_token_id=x}_call(x,b){for(let $=0;$<x.length;++$)if(x[$].length===1){const j=b[$].data;j.fill(-1/0),j[this.bos_token_id]=0}return b}}class d extends i{constructor(x,b){super(),this.max_length=x,this.eos_token_id=Array.isArray(b)?b:[b]}_call(x,b){for(let $=0;$<x.length;++$)if(x[$].length===this.max_length-1){const j=b[$].data;j.fill(-1/0);for(const B of this.eos_token_id)j[B]=0}return b}}class c extends i{constructor(x,b){super(),this.begin_suppress_tokens=x,this.begin_index=b}_call(x,b){for(let $=0;$<x.length;++$)if(x[$].length===this.begin_index){const j=b[$].data;for(const B of this.begin_suppress_tokens)j[B]=-1/0}return b}}class u extends i{constructor(x,b){super(),this.eos_token_id=Array.isArray(x.eos_token_id)?x.eos_token_id[0]:x.eos_token_id,this.no_timestamps_token_id=x.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=b.length,b.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=x.max_initial_timestamp_index}_call(x,b){for(let $=0;$<x.length;++$){const j=b[$].data;if(j[this.no_timestamps_token_id]=-1/0,x[$].length===this.begin_index-1){j.fill(-1/0),j[this.timestamp_begin]=0;continue}const B=x[$].slice(this.begin_index),X=B.length>=1&&B[B.length-1]>=this.timestamp_begin,re=B.length<2||B[B.length-2]>=this.timestamp_begin;if(X&&(re?j.subarray(this.timestamp_begin).fill(-1/0):j.subarray(0,this.eos_token_id).fill(-1/0)),x[$].length===this.begin_index&&this.max_initial_timestamp_index!==null){const K=this.timestamp_begin+this.max_initial_timestamp_index;j.subarray(K+1).fill(-1/0)}const z=(0,n.log_softmax)(j),te=Math.log(z.subarray(this.timestamp_begin).map(Math.exp).reduce((K,se)=>K+se)),W=(0,n.max)(z.subarray(0,this.timestamp_begin))[0];te>W&&j.subarray(0,this.timestamp_begin).fill(-1/0)}return b}}class p extends i{constructor(x){super(),this.no_repeat_ngram_size=x}getNgrams(x){const b=x.length,$=[];for(let B=0;B<b+1-this.no_repeat_ngram_size;++B){const X=[];for(let re=0;re<this.no_repeat_ngram_size;++re)X.push(x[B+re]);$.push(X.map(Number))}const j=new Map;for(const B of $){const X=B.slice(0,B.length-1),re=JSON.stringify(X),z=j.get(re)??[];z.push(B[B.length-1]),j.set(re,z)}return j}getGeneratedNgrams(x,b){const $=b.slice(b.length+1-this.no_repeat_ngram_size,b.length);return x.get(JSON.stringify($.map(Number)))??[]}calcBannedNgramTokens(x){const b=[];if(x.length+1<this.no_repeat_ngram_size)return b;{const $=this.getNgrams(x);return this.getGeneratedNgrams($,x)}}_call(x,b){for(let $=0;$<x.length;++$){const j=b[$].data,B=this.calcBannedNgramTokens(x[$]);for(const X of B)j[X]=-1/0}return b}}class _ extends i{constructor(x){super(),this.penalty=x}_call(x,b){for(let $=0;$<x.length;++$){const j=b[$].data;for(const B of new Set(x[$])){const X=Number(B);j[X]<0?j[X]*=this.penalty:j[X]/=this.penalty}}return b}}class f extends i{constructor(x,b){super(),this.min_length=x,this.eos_token_id=Array.isArray(b)?b:[b]}_call(x,b){for(let $=0;$<x.length;++$)if(x[$].length<this.min_length){const j=b[$].data;for(const B of this.eos_token_id)j[B]=-1/0}return b}}class P extends i{constructor(x,b,$){super(),this.prompt_length_to_skip=x,this.min_new_tokens=b,this.eos_token_id=Array.isArray($)?$:[$]}_call(x,b){for(let $=0;$<x.length;++$)if(x[$].length-this.prompt_length_to_skip<this.min_new_tokens){const B=b[$].data;for(const X of this.eos_token_id)B[X]=-1/0}return b}}class A extends i{constructor(x,b){super(),this.bad_words_ids=x,this.eos_token_id=Array.isArray(b)?b:[b]}_call(x,b){for(let $=0;$<x.length;++$){const j=b[$].data,B=x[$];for(const X of this.bad_words_ids){if(B.length<X.length-1)continue;let re=!0;for(let z=1;z<=X.length-1;++z)if(X.at(-z-1)!=B.at(-z)){re=!1;break}re&&(j[X.at(-1)]=-1/0)}}return b}}class y extends i{constructor(x){if(super(),x<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${x}.`);this.guidance_scale=x}_call(x,b){if(b.dims[0]!==2*x.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${b.dims[0]} for the logits and ${x.length} for the input ids.`);const $=x.length,j=b.slice([0,$],null),B=b.slice([$,b.dims[0]],null);for(let X=0;X<B.data.length;++X)B.data[X]+=(j.data[X]-B.data[X])*this.guidance_scale;return B}}class g extends o{constructor(x){super(),this.temperature=x}_call(x,b){const $=b.data;for(let j=0;j<$.length;++j)$[j]/=this.temperature;return b}}class I extends o{constructor(x,{filter_value:b=-1/0,min_tokens_to_keep:$=1}={}){if(super(),x<0||x>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${x}`);if(!Number.isInteger($)||$<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${$}`);this.top_p=x,this.filter_value=b,this.min_tokens_to_keep=$}}class v extends o{constructor(x,{filter_value:b=-1/0,min_tokens_to_keep:$=1}={}){if(super(),!Number.isInteger(x)||x<0)throw new Error(`\`top_k\` must be a positive integer, but is ${x}`);this.top_k=Math.max(x,$),this.filter_value=b}}},"./src/generation/logits_sampler.js":(e,r,t)=>{t.r(r),t.d(r,{LogitsSampler:()=>o});var s=t("./src/utils/generic.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/maths.js");t("./src/generation/configuration_utils.js");class o extends s.Callable{constructor(u){super(),this.generation_config=u}async _call(u){return this.sample(u)}async sample(u){throw Error("sample should be implemented in subclasses.")}getLogits(u,p){let _=u.dims.at(-1),f=u.data;if(p===-1)f=f.slice(-_);else{let P=p*_;f=f.slice(P,P+_)}return f}randomSelect(u){let p=0;for(let f=0;f<u.length;++f)p+=u[f];let _=Math.random()*p;for(let f=0;f<u.length;++f)if(_-=u[f],_<=0)return f;return 0}static getSampler(u){if(u.do_sample)return new l(u);if(u.num_beams>1)return new d(u);if(u.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${u.num_return_sequences}.`);return new a(u)}}class a extends o{async sample(u){const p=(0,i.max)(u.data)[1];return[[BigInt(p),0]]}}class l extends o{async sample(u){let p=u.dims.at(-1);this.generation_config.top_k>0&&(p=Math.min(this.generation_config.top_k,p));const[_,f]=await(0,n.topk)(u,p),P=(0,i.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},()=>{const A=this.randomSelect(P);return[f.data[A],Math.log(P[A])]})}}class d extends o{async sample(u){let p=u.dims.at(-1);this.generation_config.top_k>0&&(p=Math.min(this.generation_config.top_k,p));const[_,f]=await(0,n.topk)(u,p),P=(0,i.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},(A,y)=>[f.data[y],Math.log(P[y])])}}},"./src/generation/stopping_criteria.js":(e,r,t)=>{t.r(r),t.d(r,{EosTokenCriteria:()=>a,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>o,StoppingCriteria:()=>n,StoppingCriteriaList:()=>i});var s=t("./src/utils/generic.js");class n extends s.Callable{_call(c,u){throw Error("StoppingCriteria needs to be subclassed")}}class i extends s.Callable{constructor(){super(),this.criteria=[]}push(c){this.criteria.push(c)}extend(c){c instanceof i?c=c.criteria:c instanceof n&&(c=[c]),this.criteria.push(...c)}_call(c,u){const p=new Array(c.length).fill(!1);for(const _ of this.criteria){const f=_(c,u);for(let P=0;P<p.length;++P)p[P]||=f[P]}return p}[Symbol.iterator](){return this.criteria.values()}}class o extends n{constructor(c,u=null){super(),this.max_length=c,this.max_position_embeddings=u}_call(c){return c.map(u=>u.length>=this.max_length)}}class a extends n{constructor(c){super(),Array.isArray(c)||(c=[c]),this.eos_token_id=c}_call(c,u){return c.map(p=>{const _=p.at(-1);return this.eos_token_id.some(f=>_==f)})}}class l extends n{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(c,u){return new Array(c.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,r,t)=>{t.r(r),t.d(r,{BaseStreamer:()=>o,TextStreamer:()=>l,WhisperTextStreamer:()=>d});var s=t("./src/utils/core.js"),n=t("./src/tokenizers.js"),i=t("./src/env.js");class o{put(u){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const a=i.apis.IS_PROCESS_AVAILABLE?c=>En.stdout.write(c):c=>console.log(c);class l extends o{constructor(u,{skip_prompt:p=!1,callback_function:_=null,token_callback_function:f=null,skip_special_tokens:P=!0,decode_kwargs:A={},...y}={}){super(),this.tokenizer=u,this.skip_prompt=p,this.callback_function=_??a,this.token_callback_function=f,this.decode_kwargs={skip_special_tokens:P,...A,...y},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(u){if(u.length>1)throw Error("TextStreamer only supports batch size of 1");const p=this.next_tokens_are_prompt;if(p&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const _=u[0];this.token_callback_function?.(_),this.token_cache=(0,s.mergeArrays)(this.token_cache,_);const f=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let P;p||f.endsWith(`
`)?(P=f.slice(this.print_len),this.token_cache=[],this.print_len=0):f.length>0&&(0,n.is_chinese_char)(f.charCodeAt(f.length-1))?(P=f.slice(this.print_len),this.print_len+=P.length):(P=f.slice(this.print_len,f.lastIndexOf(" ")+1),this.print_len+=P.length),this.on_finalized_text(P,!1)}end(){let u;this.token_cache.length>0?(u=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):u="",this.next_tokens_are_prompt=!0,this.on_finalized_text(u,!0)}on_finalized_text(u,p){u.length>0&&this.callback_function?.(u),p&&this.callback_function===a&&i.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.(`
`)}}class d extends l{constructor(u,{skip_prompt:p=!1,callback_function:_=null,token_callback_function:f=null,on_chunk_start:P=null,on_chunk_end:A=null,on_finalize:y=null,time_precision:g=.02,skip_special_tokens:I=!0,decode_kwargs:v={}}={}){super(u,{skip_prompt:p,skip_special_tokens:I,callback_function:_,token_callback_function:f,decode_kwargs:v}),this.timestamp_begin=u.timestamp_begin,this.on_chunk_start=P,this.on_chunk_end=A,this.on_finalize=y,this.time_precision=g,this.waiting_for_timestamp=!1}put(u){if(u.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const p=u[0];if(p.length===1){const _=Number(p[0])-this.timestamp_begin;if(_>=0){const f=_*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(f):this.on_chunk_start?.(f),this.waiting_for_timestamp=!this.waiting_for_timestamp,this.token_callback_function?.(p);return}}return super.put(u)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(e,r,t)=>{t.r(r),t.d(r,{ASTForAudioClassification:()=>So,ASTModel:()=>Co,ASTPreTrainedModel:()=>wi,AlbertForMaskedLM:()=>ie,AlbertForQuestionAnswering:()=>Y,AlbertForSequenceClassification:()=>k,AlbertModel:()=>_e,AlbertPreTrainedModel:()=>Bs,AutoModel:()=>xv,AutoModelForAudioClassification:()=>Uv,AutoModelForAudioFrameClassification:()=>Wv,AutoModelForAudioTextToText:()=>Zv,AutoModelForCTC:()=>Nv,AutoModelForCausalLM:()=>Iv,AutoModelForDepthEstimation:()=>qv,AutoModelForDocumentQuestionAnswering:()=>Gv,AutoModelForImageClassification:()=>Ov,AutoModelForImageFeatureExtraction:()=>Yv,AutoModelForImageMatting:()=>Kv,AutoModelForImageSegmentation:()=>Dv,AutoModelForImageTextToText:()=>Jv,AutoModelForImageToImage:()=>Hv,AutoModelForMaskGeneration:()=>jv,AutoModelForMaskedLM:()=>kv,AutoModelForNormalEstimation:()=>Qv,AutoModelForObjectDetection:()=>zv,AutoModelForPoseEstimation:()=>Xv,AutoModelForQuestionAnswering:()=>Av,AutoModelForSemanticSegmentation:()=>Lv,AutoModelForSeq2SeqLM:()=>Pv,AutoModelForSequenceClassification:()=>Tv,AutoModelForSpeechSeq2Seq:()=>Cv,AutoModelForTextToSpectrogram:()=>Sv,AutoModelForTextToWaveform:()=>$v,AutoModelForTokenClassification:()=>Ev,AutoModelForUniversalSegmentation:()=>Bv,AutoModelForVision2Seq:()=>Fv,AutoModelForXVector:()=>Vv,AutoModelForZeroShotObjectDetection:()=>Rv,BartForConditionalGeneration:()=>rr,BartForSequenceClassification:()=>hr,BartModel:()=>wr,BartPretrainedModel:()=>Gt,BaseModelOutput:()=>Ce,BeitForImageClassification:()=>np,BeitModel:()=>sp,BeitPreTrainedModel:()=>ll,BertForMaskedLM:()=>Oe,BertForQuestionAnswering:()=>He,BertForSequenceClassification:()=>ze,BertForTokenClassification:()=>Ke,BertModel:()=>Se,BertPreTrainedModel:()=>$e,BlenderbotForConditionalGeneration:()=>$r,BlenderbotModel:()=>Mr,BlenderbotPreTrainedModel:()=>Kt,BlenderbotSmallForConditionalGeneration:()=>Ir,BlenderbotSmallModel:()=>ts,BlenderbotSmallPreTrainedModel:()=>Kr,BloomForCausalLM:()=>Pd,BloomModel:()=>Ed,BloomPreTrainedModel:()=>Xa,CLIPModel:()=>pn,CLIPPreTrainedModel:()=>Rs,CLIPSegForImageSegmentation:()=>ft,CLIPSegModel:()=>_n,CLIPSegPreTrainedModel:()=>Hn,CLIPTextModel:()=>hn,CLIPTextModelWithProjection:()=>$i,CLIPVisionModel:()=>za,CLIPVisionModelWithProjection:()=>Lo,CamembertForMaskedLM:()=>At,CamembertForQuestionAnswering:()=>Dr,CamembertForSequenceClassification:()=>tr,CamembertForTokenClassification:()=>Wt,CamembertModel:()=>Jt,CamembertPreTrainedModel:()=>at,CausalLMOutput:()=>bn,CausalLMOutputWithPast:()=>tx,ChineseCLIPModel:()=>Fi,ChineseCLIPPreTrainedModel:()=>Ai,ClapAudioModelWithProjection:()=>nm,ClapModel:()=>rm,ClapPreTrainedModel:()=>Go,ClapTextModelWithProjection:()=>sm,CodeGenForCausalLM:()=>Gi,CodeGenModel:()=>Wi,CodeGenPreTrainedModel:()=>Jn,CohereForCausalLM:()=>od,CohereModel:()=>id,CoherePreTrainedModel:()=>Na,ConvBertForMaskedLM:()=>bt,ConvBertForQuestionAnswering:()=>V,ConvBertForSequenceClassification:()=>L,ConvBertForTokenClassification:()=>oe,ConvBertModel:()=>ye,ConvBertPreTrainedModel:()=>Me,ConvNextForImageClassification:()=>Jp,ConvNextModel:()=>Yp,ConvNextPreTrainedModel:()=>xl,ConvNextV2ForImageClassification:()=>eh,ConvNextV2Model:()=>Zp,ConvNextV2PreTrainedModel:()=>Tl,DFineForObjectDetection:()=>gp,DFineModel:()=>_p,DFinePreTrainedModel:()=>ml,DPTForDepthEstimation:()=>Fp,DPTModel:()=>Ap,DPTPreTrainedModel:()=>Ml,DacDecoderModel:()=>Km,DacDecoderOutput:()=>Vm,DacEncoderModel:()=>Gm,DacEncoderOutput:()=>Um,DacModel:()=>Wm,DacPreTrainedModel:()=>Jo,DebertaForMaskedLM:()=>Yr,DebertaForQuestionAnswering:()=>Ts,DebertaForSequenceClassification:()=>ls,DebertaForTokenClassification:()=>Jr,DebertaModel:()=>Fr,DebertaPreTrainedModel:()=>Qt,DebertaV2ForMaskedLM:()=>Gr,DebertaV2ForQuestionAnswering:()=>Os,DebertaV2ForSequenceClassification:()=>us,DebertaV2ForTokenClassification:()=>Lr,DebertaV2Model:()=>Es,DebertaV2PreTrainedModel:()=>jr,DecisionTransformerModel:()=>Em,DecisionTransformerPreTrainedModel:()=>Tm,DeiTForImageClassification:()=>vp,DeiTModel:()=>bp,DeiTPreTrainedModel:()=>_l,DepthAnythingForDepthEstimation:()=>Dp,DepthAnythingPreTrainedModel:()=>Op,DepthProForDepthEstimation:()=>jp,DepthProPreTrainedModel:()=>Rp,DetrForObjectDetection:()=>op,DetrForSegmentation:()=>ul,DetrModel:()=>ip,DetrObjectDetectionOutput:()=>cl,DetrPreTrainedModel:()=>Ro,DetrSegmentationOutput:()=>ap,Dinov2ForImageClassification:()=>rh,Dinov2Model:()=>th,Dinov2PreTrainedModel:()=>El,Dinov2WithRegistersForImageClassification:()=>nh,Dinov2WithRegistersModel:()=>sh,Dinov2WithRegistersPreTrainedModel:()=>Pl,DistilBertForMaskedLM:()=>je,DistilBertForQuestionAnswering:()=>Nr,DistilBertForSequenceClassification:()=>es,DistilBertForTokenClassification:()=>Or,DistilBertModel:()=>Zr,DistilBertPreTrainedModel:()=>Zt,DonutSwinModel:()=>Xp,DonutSwinPreTrainedModel:()=>Qp,EfficientNetForImageClassification:()=>dm,EfficientNetModel:()=>cm,EfficientNetPreTrainedModel:()=>Ll,ElectraForMaskedLM:()=>Re,ElectraForQuestionAnswering:()=>ot,ElectraForSequenceClassification:()=>Pe,ElectraForTokenClassification:()=>gt,ElectraModel:()=>ge,ElectraPreTrainedModel:()=>ne,EsmForMaskedLM:()=>gr,EsmForSequenceClassification:()=>Ur,EsmForTokenClassification:()=>Ds,EsmModel:()=>pt,EsmPreTrainedModel:()=>Je,ExaoneForCausalLM:()=>xt,ExaoneModel:()=>ut,ExaonePreTrainedModel:()=>tt,FalconForCausalLM:()=>tm,FalconModel:()=>em,FalconPreTrainedModel:()=>Fl,FastViTForImageClassification:()=>Kd,FastViTModel:()=>Gd,FastViTPreTrainedModel:()=>sl,Florence2ForConditionalGeneration:()=>ko,Florence2PreTrainedModel:()=>Io,GLPNForDepthEstimation:()=>qp,GLPNModel:()=>Hp,GLPNPreTrainedModel:()=>vl,GPT2LMHeadModel:()=>zi,GPT2Model:()=>Bi,GPT2PreTrainedModel:()=>Li,GPTBigCodeForCausalLM:()=>Vi,GPTBigCodeModel:()=>Yn,GPTBigCodePreTrainedModel:()=>Mn,GPTJForCausalLM:()=>yn,GPTJModel:()=>Ui,GPTJPreTrainedModel:()=>Xn,GPTNeoForCausalLM:()=>ji,GPTNeoModel:()=>Ri,GPTNeoPreTrainedModel:()=>wn,GPTNeoXForCausalLM:()=>Ni,GPTNeoXModel:()=>Qn,GPTNeoXPreTrainedModel:()=>qn,Gemma2ForCausalLM:()=>cd,Gemma2Model:()=>ud,Gemma2PreTrainedModel:()=>Va,Gemma3ForCausalLM:()=>pd,Gemma3Model:()=>dd,Gemma3PreTrainedModel:()=>Wa,Gemma3nForConditionalGeneration:()=>Pi,Gemma3nPreTrainedModel:()=>Fo,GemmaForCausalLM:()=>ld,GemmaModel:()=>ad,GemmaPreTrainedModel:()=>Ua,GlmForCausalLM:()=>Ne,GlmModel:()=>Ie,GlmPreTrainedModel:()=>he,GraniteForCausalLM:()=>nd,GraniteModel:()=>sd,GranitePreTrainedModel:()=>ja,GroundingDinoForObjectDetection:()=>oh,GroundingDinoPreTrainedModel:()=>ih,GroupViTModel:()=>Wd,GroupViTPreTrainedModel:()=>Vd,HeliumForCausalLM:()=>q,HeliumModel:()=>R,HeliumPreTrainedModel:()=>F,HieraForImageClassification:()=>Tp,HieraModel:()=>xp,HieraPreTrainedModel:()=>gl,HubertForCTC:()=>Lh,HubertForSequenceClassification:()=>Bh,HubertModel:()=>Dh,HubertPreTrainedModel:()=>cv,IJepaForImageClassification:()=>Od,IJepaModel:()=>Fd,IJepaPreTrainedModel:()=>el,Idefics3ForConditionalGeneration:()=>Gn,Idefics3PreTrainedModel:()=>Oo,ImageMattingOutput:()=>Tf,JAISLMHeadModel:()=>gn,JAISModel:()=>Hr,JAISPreTrainedModel:()=>Hs,JinaCLIPModel:()=>Oi,JinaCLIPPreTrainedModel:()=>fn,JinaCLIPTextModel:()=>Bo,JinaCLIPVisionModel:()=>Di,LiteWhisperForConditionalGeneration:()=>bi,LlamaForCausalLM:()=>C,LlamaModel:()=>h,LlamaPreTrainedModel:()=>Zn,LlavaForConditionalGeneration:()=>Vn,LlavaOnevisionForConditionalGeneration:()=>Ti,LlavaPreTrainedModel:()=>zs,LlavaQwen2ForCausalLM:()=>Ao,LongT5ForConditionalGeneration:()=>it,LongT5Model:()=>st,LongT5PreTrainedModel:()=>Ze,M2M100ForConditionalGeneration:()=>_h,M2M100Model:()=>fh,M2M100PreTrainedModel:()=>$l,MBartForCausalLM:()=>ds,MBartForConditionalGeneration:()=>Cs,MBartForSequenceClassification:()=>yr,MBartModel:()=>cr,MBartPreTrainedModel:()=>Vt,MPNetForMaskedLM:()=>nn,MPNetForQuestionAnswering:()=>Gs,MPNetForSequenceClassification:()=>on,MPNetForTokenClassification:()=>an,MPNetModel:()=>sn,MPNetPreTrainedModel:()=>cs,MT5ForConditionalGeneration:()=>vt,MT5Model:()=>kt,MT5PreTrainedModel:()=>qe,MarianMTModel:()=>mh,MarianModel:()=>hh,MarianPreTrainedModel:()=>Sl,MaskFormerForInstanceSegmentation:()=>Kp,MaskFormerModel:()=>Gp,MaskFormerPreTrainedModel:()=>bl,MaskedLMOutput:()=>kr,Metric3DForDepthEstimation:()=>Up,Metric3DPreTrainedModel:()=>Np,Metric3Dv2ForDepthEstimation:()=>Wp,Metric3Dv2PreTrainedModel:()=>Vp,MgpstrForSceneTextRecognition:()=>Im,MgpstrModelOutput:()=>Sm,MgpstrPreTrainedModel:()=>$m,MimiDecoderModel:()=>Nm,MimiDecoderOutput:()=>zm,MimiEncoderModel:()=>jm,MimiEncoderOutput:()=>Bm,MimiModel:()=>Rm,MimiPreTrainedModel:()=>Yo,MistralForCausalLM:()=>Yh,MistralModel:()=>Xh,MistralPreTrainedModel:()=>kl,MobileBertForMaskedLM:()=>Ls,MobileBertForQuestionAnswering:()=>rn,MobileBertForSequenceClassification:()=>tn,MobileBertModel:()=>Sr,MobileBertPreTrainedModel:()=>ar,MobileLLMForCausalLM:()=>vr,MobileLLMModel:()=>Rt,MobileLLMPreTrainedModel:()=>Ft,MobileNetV1ForImageClassification:()=>hm,MobileNetV1ForSemanticSegmentation:()=>mm,MobileNetV1Model:()=>pm,MobileNetV1PreTrainedModel:()=>Ho,MobileNetV2ForImageClassification:()=>_m,MobileNetV2ForSemanticSegmentation:()=>gm,MobileNetV2Model:()=>fm,MobileNetV2PreTrainedModel:()=>qo,MobileNetV3ForImageClassification:()=>ym,MobileNetV3ForSemanticSegmentation:()=>Mm,MobileNetV3Model:()=>wm,MobileNetV3PreTrainedModel:()=>Qo,MobileNetV4ForImageClassification:()=>vm,MobileNetV4ForSemanticSegmentation:()=>xm,MobileNetV4Model:()=>bm,MobileNetV4PreTrainedModel:()=>Xo,MobileViTForImageClassification:()=>Xd,MobileViTModel:()=>Qd,MobileViTPreTrainedModel:()=>nl,MobileViTV2ForImageClassification:()=>Jd,MobileViTV2Model:()=>Yd,MobileViTV2PreTrainedModel:()=>il,ModelOutput:()=>xe,ModernBertForMaskedLM:()=>Ye,ModernBertForSequenceClassification:()=>nt,ModernBertForTokenClassification:()=>et,ModernBertModel:()=>Be,ModernBertPreTrainedModel:()=>Xe,Moondream1ForConditionalGeneration:()=>$o,MoonshineForConditionalGeneration:()=>xi,MoonshineModel:()=>Ba,MoonshinePreTrainedModel:()=>vi,MptForCausalLM:()=>Sd,MptModel:()=>Cd,MptPreTrainedModel:()=>Ya,MultiModalityCausalLM:()=>Cm,MultiModalityPreTrainedModel:()=>Pm,MusicgenForCausalLM:()=>mv,MusicgenForConditionalGeneration:()=>zl,MusicgenModel:()=>hv,MusicgenPreTrainedModel:()=>Bl,NomicBertModel:()=>rt,NomicBertPreTrainedModel:()=>mt,OPTForCausalLM:()=>Id,OPTModel:()=>$d,OPTPreTrainedModel:()=>Ja,Olmo2ForCausalLM:()=>rd,Olmo2Model:()=>td,Olmo2PreTrainedModel:()=>Ra,OlmoForCausalLM:()=>ed,OlmoModel:()=>zo,OlmoPreTrainedModel:()=>Ss,OpenELMForCausalLM:()=>md,OpenELMModel:()=>hd,OpenELMPreTrainedModel:()=>Ga,OwlViTForObjectDetection:()=>ep,OwlViTModel:()=>Zd,OwlViTPreTrainedModel:()=>ol,Owlv2ForObjectDetection:()=>rp,Owlv2Model:()=>tp,Owlv2PreTrainedModel:()=>al,PaliGemmaForConditionalGeneration:()=>Ei,PaliGemmaPreTrainedModel:()=>Wn,PatchTSMixerForPrediction:()=>Om,PatchTSMixerModel:()=>Fm,PatchTSMixerPreTrainedModel:()=>jl,PatchTSTForPrediction:()=>Am,PatchTSTModel:()=>km,PatchTSTPreTrainedModel:()=>Rl,Phi3ForCausalLM:()=>Td,Phi3Model:()=>xd,Phi3PreTrainedModel:()=>Qa,Phi3VForCausalLM:()=>Si,Phi3VPreTrainedModel:()=>Do,PhiForCausalLM:()=>vd,PhiModel:()=>bd,PhiPreTrainedModel:()=>qa,PreTrainedModel:()=>Z,PretrainedMixin:()=>jt,PvtForImageClassification:()=>zd,PvtModel:()=>Bd,PvtPreTrainedModel:()=>tl,PyAnnoteForAudioFrameClassification:()=>vh,PyAnnoteModel:()=>bh,PyAnnotePreTrainedModel:()=>Il,QuestionAnsweringModelOutput:()=>zr,Qwen2ForCausalLM:()=>_d,Qwen2Model:()=>fd,Qwen2PreTrainedModel:()=>Ka,Qwen2VLForConditionalGeneration:()=>Md,Qwen2VLPreTrainedModel:()=>yd,Qwen3ForCausalLM:()=>wd,Qwen3Model:()=>gd,Qwen3PreTrainedModel:()=>Ha,RFDetrForObjectDetection:()=>mp,RFDetrModel:()=>hp,RFDetrObjectDetectionOutput:()=>fp,RFDetrPreTrainedModel:()=>hl,RTDetrForObjectDetection:()=>up,RTDetrModel:()=>lp,RTDetrObjectDetectionOutput:()=>Ki,RTDetrPreTrainedModel:()=>dl,RTDetrV2ForObjectDetection:()=>dp,RTDetrV2Model:()=>cp,RTDetrV2ObjectDetectionOutput:()=>pp,RTDetrV2PreTrainedModel:()=>pl,ResNetForImageClassification:()=>Pp,ResNetModel:()=>Ep,ResNetPreTrainedModel:()=>wl,RoFormerForMaskedLM:()=>E,RoFormerForQuestionAnswering:()=>de,RoFormerForSequenceClassification:()=>S,RoFormerForTokenClassification:()=>ee,RoFormerModel:()=>O,RoFormerPreTrainedModel:()=>We,RobertaForMaskedLM:()=>lr,RobertaForQuestionAnswering:()=>Br,RobertaForSequenceClassification:()=>er,RobertaForTokenClassification:()=>dr,RobertaModel:()=>br,RobertaPreTrainedModel:()=>Tr,SamImageSegmentationOutput:()=>ph,SamModel:()=>dh,SamPreTrainedModel:()=>ch,SapiensForDepthEstimation:()=>Bp,SapiensForNormalEstimation:()=>zp,SapiensForSemanticSegmentation:()=>Lp,SapiensPreTrainedModel:()=>No,SegformerForImageClassification:()=>om,SegformerForSemanticSegmentation:()=>am,SegformerModel:()=>pv,SegformerPreTrainedModel:()=>Ko,Seq2SeqLMOutput:()=>ex,SequenceClassifierOutput:()=>Tt,SiglipModel:()=>Kn,SiglipPreTrainedModel:()=>mn,SiglipTextModel:()=>Ii,SiglipVisionModel:()=>ki,SmolVLMForConditionalGeneration:()=>Ci,SnacDecoderModel:()=>Qm,SnacEncoderModel:()=>qm,SnacModel:()=>Hm,SnacPreTrainedModel:()=>Zo,SpeechT5ForSpeechToText:()=>Gh,SpeechT5ForTextToSpeech:()=>Kh,SpeechT5HifiGan:()=>Hh,SpeechT5Model:()=>dv,SpeechT5PreTrainedModel:()=>Wo,SqueezeBertForMaskedLM:()=>un,SqueezeBertForQuestionAnswering:()=>dn,SqueezeBertForSequenceClassification:()=>cn,SqueezeBertModel:()=>ln,SqueezeBertPreTrainedModel:()=>Ps,StableLmForCausalLM:()=>um,StableLmModel:()=>lm,StableLmPreTrainedModel:()=>Dl,Starcoder2ForCausalLM:()=>Zh,Starcoder2Model:()=>Jh,Starcoder2PreTrainedModel:()=>Al,StyleTextToSpeech2Model:()=>Wh,StyleTextToSpeech2PreTrainedModel:()=>Vh,Swin2SRForImageSuperResolution:()=>kp,Swin2SRModel:()=>Ip,Swin2SRPreTrainedModel:()=>yl,SwinForImageClassification:()=>Sp,SwinForSemanticSegmentation:()=>$p,SwinModel:()=>Cp,SwinPreTrainedModel:()=>jo,T5ForConditionalGeneration:()=>Fe,T5Model:()=>be,T5PreTrainedModel:()=>le,TableTransformerForObjectDetection:()=>yp,TableTransformerModel:()=>wp,TableTransformerObjectDetectionOutput:()=>Mp,TableTransformerPreTrainedModel:()=>fl,TokenClassifierOutput:()=>Er,TrOCRForCausalLM:()=>Qh,TrOCRPreTrainedModel:()=>qh,UltravoxModel:()=>Lm,UltravoxPreTrainedModel:()=>Dm,UniSpeechForCTC:()=>Ph,UniSpeechForSequenceClassification:()=>Ch,UniSpeechModel:()=>Eh,UniSpeechPreTrainedModel:()=>Uo,UniSpeechSatForAudioFrameClassification:()=>kh,UniSpeechSatForCTC:()=>$h,UniSpeechSatForSequenceClassification:()=>Ih,UniSpeechSatModel:()=>Sh,UniSpeechSatPreTrainedModel:()=>Hi,ViTForImageClassification:()=>Ad,ViTMAEModel:()=>jd,ViTMAEPreTrainedModel:()=>Rd,ViTMSNForImageClassification:()=>Ud,ViTMSNModel:()=>Nd,ViTMSNPreTrainedModel:()=>rl,ViTModel:()=>kd,ViTPreTrainedModel:()=>Za,VisionEncoderDecoderModel:()=>Un,VitMatteForImageMatting:()=>qd,VitMattePreTrainedModel:()=>Hd,VitPoseForPoseEstimation:()=>Ld,VitPosePreTrainedModel:()=>Dd,VitsModel:()=>Ol,VitsModelOutput:()=>Ef,VitsPreTrainedModel:()=>im,Wav2Vec2BertForCTC:()=>Fh,Wav2Vec2BertForSequenceClassification:()=>Oh,Wav2Vec2BertModel:()=>Ah,Wav2Vec2BertPreTrainedModel:()=>Vo,Wav2Vec2ForAudioFrameClassification:()=>Mh,Wav2Vec2ForCTC:()=>wh,Wav2Vec2ForSequenceClassification:()=>yh,Wav2Vec2Model:()=>gh,Wav2Vec2PreTrainedModel:()=>qs,WavLMForAudioFrameClassification:()=>Uh,WavLMForCTC:()=>Rh,WavLMForSequenceClassification:()=>jh,WavLMForXVector:()=>Nh,WavLMModel:()=>zh,WavLMPreTrainedModel:()=>ei,WeSpeakerResNetModel:()=>Th,WeSpeakerResNetPreTrainedModel:()=>xh,WhisperForConditionalGeneration:()=>Nn,WhisperModel:()=>Mi,WhisperPreTrainedModel:()=>yi,XLMForQuestionAnswering:()=>bo,XLMForSequenceClassification:()=>gi,XLMForTokenClassification:()=>Mo,XLMModel:()=>jn,XLMPreTrainedModel:()=>rs,XLMRobertaForMaskedLM:()=>xo,XLMRobertaForQuestionAnswering:()=>Po,XLMRobertaForSequenceClassification:()=>To,XLMRobertaForTokenClassification:()=>Eo,XLMRobertaModel:()=>vo,XLMRobertaPreTrainedModel:()=>Ks,XLMWithLMHeadModel:()=>yo,XVectorOutput:()=>xf,YolosForObjectDetection:()=>lh,YolosModel:()=>ah,YolosObjectDetectionOutput:()=>uh,YolosPreTrainedModel:()=>Cl});var s=t("./src/configs.js"),n=t("./src/backends/onnx.js"),i=t("./src/utils/dtypes.js"),o=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/hub.js"),d=t("./src/utils/constants.js"),c=t("./src/generation/logits_process.js"),u=t("./src/generation/configuration_utils.js"),p=t("./src/utils/tensor.js"),_=t("./src/utils/image.js"),f=t("./src/utils/maths.js"),P=t("./src/generation/stopping_criteria.js"),A=t("./src/generation/logits_sampler.js"),y=t("./src/env.js"),g=t("./src/models/whisper/generation_whisper.js"),I=t("./src/models/whisper/common_whisper.js");const v={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11,ImageAudioTextToText:12},T=new Map,x=new Map,b=new Map;async function $(M,w,G){let pe=G.config?.["transformers.js_config"]??{},we=G.device??pe.device;we&&typeof we!="string"&&(we.hasOwnProperty(w)?we=we[w]:(console.warn(`device not specified for "${w}". Using the default device.`),we=null));const ve=we??(y.apis.IS_NODE_ENV?"cpu":"wasm"),De=(0,n.deviceToExecutionProviders)(ve),Ue=pe.device_config??{};Ue.hasOwnProperty(ve)&&(pe={...pe,...Ue[ve]});let Qe=G.dtype??pe.dtype;if(typeof Qe!="string"&&(Qe&&Qe.hasOwnProperty(w)?Qe=Qe[w]:(Qe=i.DEFAULT_DEVICE_DTYPE_MAPPING[ve]??i.DATA_TYPES.fp32,console.warn(`dtype not specified for "${w}". Using the default dtype (${Qe}) for this device (${ve}).`))),Qe===i.DATA_TYPES.auto){let It=pe.dtype;typeof It!="string"&&(It=It?.[w]),It&&It!==i.DATA_TYPES.auto&&i.DATA_TYPES.hasOwnProperty(It)?Qe=It:Qe=i.DEFAULT_DEVICE_DTYPE_MAPPING[ve]??i.DATA_TYPES.fp32}const lt=Qe;if(i.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(lt)){if(lt===i.DATA_TYPES.fp16&&ve==="webgpu"&&!await(0,i.isWebGpuFp16Supported)())throw new Error(`The device (${ve}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${lt}. Should be one of: ${Object.keys(i.DATA_TYPES).join(", ")}`);const Pt=pe.kv_cache_dtype,$t=Pt?typeof Pt=="string"?Pt:Pt[lt]??"float32":void 0;if($t&&!["float32","float16"].includes($t))throw new Error(`Invalid kv_cache_dtype: ${$t}. Should be one of: float32, float16`);const St={dtype:lt,kv_cache_dtype:$t,device:ve},wt=i.DEFAULT_DTYPE_SUFFIX_MAPPING[lt],Nt=`${w}${wt}.onnx`,yt=`${G.subfolder??""}/${Nt}`,_t={...G.session_options};_t.executionProviders??=De;const Dt=pe.free_dimension_overrides;Dt?_t.freeDimensionOverrides??=Dt:ve.startsWith("webnn")&&!_t.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${ve}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);const Ht=y.apis.IS_NODE_ENV&&y.env.useFSCache,sr=(0,l.getModelFile)(M,yt,!0,G,Ht),mr=G.use_external_data_format??pe.use_external_data_format;let fr=[];if(mr){let It;typeof mr=="object"?mr.hasOwnProperty(Nt)?It=mr[Nt]:mr.hasOwnProperty(w)?It=mr[w]:It=!1:It=mr;const nr=+It;if(nr>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${nr}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let Pr=0;Pr<nr;++Pr){const vn=`${Nt}_data${Pr===0?"":"_"+Pr}`,Vr=`${G.subfolder??""}/${vn}`;fr.push(new Promise(async(ps,ri)=>{const si=await(0,l.getModelFile)(M,Vr,!0,G,Ht);ps(si instanceof Uint8Array?{path:vn,data:si}:vn)}))}}else _t.externalData!==void 0&&(fr=_t.externalData.map(async It=>{if(typeof It.data=="string"){const nr=await(0,l.getModelFile)(M,It.data,!0,G);return{...It,data:nr}}return It}));if(fr.length>0){const It=await Promise.all(fr);y.apis.IS_NODE_ENV||(_t.externalData=It)}if(ve==="webgpu"){const It=(0,s.getKeyValueShapes)(G.config,{prefix:"present"});if(Object.keys(It).length>0&&!(0,n.isONNXProxy)()){const nr={};for(const Pr in It)nr[Pr]="gpu-buffer";_t.preferredOutputLocation=nr}}return{buffer_or_path:await sr,session_options:_t,session_config:St}}async function j(M,w,G){return Object.fromEntries(await Promise.all(Object.keys(w).map(async pe=>{const{buffer_or_path:we,session_options:ve,session_config:De}=await $(M,w[pe],G),Ue=await(0,n.createInferenceSession)(we,ve,De);return[pe,Ue]})))}async function B(M,w,G){return Object.fromEntries(await Promise.all(Object.keys(w).map(async pe=>{const we=await(0,l.getModelJSON)(M,w[pe],!1,G);return[pe,we]})))}function X(M,w){const G=Object.create(null),pe=[];for(const De of M.inputNames){const Ue=w[De];if(!(Ue instanceof p.Tensor)){pe.push(De);continue}G[De]=(0,n.isONNXProxy)()?Ue.clone():Ue}if(pe.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${pe.join(", ")}.`);const we=Object.keys(w).length,ve=M.inputNames.length;if(we>ve){let De=Object.keys(w).filter(Ue=>!M.inputNames.includes(Ue));console.warn(`WARNING: Too many inputs were provided (${we} > ${ve}). The following inputs will be ignored: "${De.join(", ")}".`)}return G}let re=Promise.resolve();async function z(M,w){const G=X(M,w);try{const pe=Object.fromEntries(Object.entries(G).map(([De,Ue])=>[De,Ue.ort_tensor])),we=()=>M.run(pe),ve=await(y.apis.IS_BROWSER_ENV||y.apis.IS_WEBWORKER_ENV?re=re.then(we):we());return te(ve)}catch(pe){const we=Object.fromEntries(Object.entries(G).map(([ve,De])=>{const Ue={type:De.type,dims:De.dims,location:De.location};return Ue.location!=="gpu-buffer"&&(Ue.data=De.data),[ve,Ue]}));throw console.error(`An error occurred during model execution: "${pe}".`),console.error("Inputs given to model:",we),pe}}function te(M){for(let w in M)(0,n.isONNXTensor)(M[w])?M[w]=new p.Tensor(M[w]):typeof M[w]=="object"&&te(M[w]);return M}function W(M){if(M instanceof p.Tensor)return M;if(M.length===0)throw Error("items must be non-empty");if(Array.isArray(M[0])){if(M.some(w=>w.length!==M[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new p.Tensor("int64",BigInt64Array.from(M.flat().map(w=>BigInt(w))),[M.length,M[0].length])}else return new p.Tensor("int64",BigInt64Array.from(M.map(w=>BigInt(w))),[1,M.length])}function K(M){return new p.Tensor("bool",[M],[1])}async function se(M,w){let{encoder_outputs:G,input_ids:pe,decoder_input_ids:we,...ve}=w;if(!G){const Ue=(0,a.pick)(w,M.sessions.model.inputNames);G=(await J(M,Ue)).last_hidden_state}return ve.input_ids=we,ve.encoder_hidden_states=G,M.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(ve.encoder_attention_mask=w.attention_mask),await ce(M,ve,!0)}async function J(M,w){const G=M.sessions.model,pe=(0,a.pick)(w,G.inputNames);if(G.inputNames.includes("inputs_embeds")&&!pe.inputs_embeds){if(!w.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");pe.inputs_embeds=await M.encode_text({input_ids:w.input_ids})}if(G.inputNames.includes("token_type_ids")&&!pe.token_type_ids){if(!pe.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");pe.token_type_ids=(0,p.zeros_like)(pe.input_ids)}if(G.inputNames.includes("pixel_mask")&&!pe.pixel_mask){if(!pe.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const we=pe.pixel_values.dims;pe.pixel_mask=(0,p.ones)([we[0],we[2],we[3]])}return await z(G,pe)}async function ue(M,w){const G=await M.encode(w);return await M.decode(G)}async function ce(M,w,G=!1){const pe=M.sessions[G?"decoder_model_merged":"model"],{past_key_values:we,...ve}=w;if(pe.inputNames.includes("use_cache_branch")&&(ve.use_cache_branch=K(!!we)),pe.inputNames.includes("position_ids")&&ve.attention_mask&&!ve.position_ids){const Ue=["paligemma","gemma3_text","gemma3"].includes(M.config.model_type)?1:0;ve.position_ids=Le(ve,we,Ue)}M.addPastKeyValues(ve,we);const De=(0,a.pick)(ve,pe.inputNames);return await z(pe,De)}function N({modality_token_id:M,inputs_embeds:w,modality_features:G,input_ids:pe,attention_mask:we}){const ve=pe.tolist().map(lt=>lt.reduce((Pt,$t,St)=>($t==M&&Pt.push(St),Pt),[])),De=ve.reduce((lt,Pt)=>lt+Pt.length,0),Ue=G.dims[0];if(De!==Ue)throw new Error(`Number of tokens and features do not match: tokens: ${De}, features ${Ue}`);let Qe=0;for(let lt=0;lt<ve.length;++lt){const Pt=ve[lt],$t=w[lt];for(let St=0;St<Pt.length;++St)$t[Pt[St]].data.set(G[Qe++].data)}return{inputs_embeds:w,attention_mask:we}}function D({image_token_id:M,inputs_embeds:w,image_features:G,input_ids:pe,attention_mask:we}){return N({modality_token_id:M,inputs_embeds:w,modality_features:G,input_ids:pe,attention_mask:we})}function Q({audio_token_id:M,inputs_embeds:w,audio_features:G,input_ids:pe,attention_mask:we}){return N({modality_token_id:M,inputs_embeds:w,modality_features:G,input_ids:pe,attention_mask:we})}async function U(M,{encode_function:w,merge_function:G,modality_input_name:pe,modality_output_name:we,input_ids:ve=null,attention_mask:De=null,position_ids:Ue=null,inputs_embeds:Qe=null,past_key_values:lt=null,generation_config:Pt=null,logits_processor:$t=null,...St}){const wt=St[pe];if(!Qe){if(Qe=await M.encode_text({input_ids:ve,...St}),wt&&ve.dims[1]!==1){const yt=await w({[pe]:wt,...St});({inputs_embeds:Qe,attention_mask:De}=G({[we]:yt,inputs_embeds:Qe,input_ids:ve,attention_mask:De}))}else if(lt&&wt&&ve.dims[1]===1){const yt=ve.dims[1],_t=Object.values(lt)[0].dims.at(-2);De=(0,p.cat)([(0,p.ones)([ve.dims[0],_t]),De.slice(null,[De.dims[1]-yt,De.dims[1]])],1)}}if(!Ue&&M.config.model_type==="qwen2_vl"){const{image_grid_thw:yt,video_grid_thw:_t}=St;[Ue]=M.get_rope_index(ve,yt,_t,De)}return await ce(M,{inputs_embeds:Qe,past_key_values:lt,attention_mask:De,position_ids:Ue,generation_config:Pt,logits_processor:$t},!0)}async function ae(M,w){return await U(M,{...w,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:M.encode_audio.bind(M),merge_function:M._merge_input_ids_with_audio_features.bind(M)})}async function Ae(M,w){return await U(M,{...w,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:M.encode_image.bind(M),merge_function:M._merge_input_ids_with_image_features.bind(M)})}function Ee(M,w=0){const[G,pe]=M.dims,we=M.data,ve=new BigInt64Array(we.length);for(let De=0;De<G;++De){const Ue=De*pe;let Qe=BigInt(w);for(let lt=0;lt<pe;++lt){const Pt=Ue+lt;we[Pt]===0n?ve[Pt]=BigInt(1):(ve[Pt]=Qe,Qe+=we[Pt])}}return{data:ve,dims:M.dims}}function Le(M,w=null,G=0){const{input_ids:pe,inputs_embeds:we,attention_mask:ve}=M,{data:De,dims:Ue}=Ee(ve,G);let Qe=new p.Tensor("int64",De,Ue);if(w){const lt=-(pe??we).dims.at(1);Qe=Qe.slice(null,[lt,null])}return Qe}function Ve(M,w,G,pe){const we=G.past_key_values?Object.values(G.past_key_values)[0].dims.at(-2):0;if(!G.attention_mask){let ve;for(const De of["input_ids","inputs_embeds","position_ids"])if(G[De]){ve=G[De].dims;break}if(!ve)throw new Error("attention_mask is not provided, and unable to infer its shape from model inputs.");G.attention_mask=(0,p.ones)([ve[0],we+ve[1]])}if(G.past_key_values){const{input_ids:ve,attention_mask:De}=G;De&&De.dims[1]>ve.dims[1]||we<ve.dims[1]&&(G.input_ids=ve.slice(null,[we,null]))}return G}function me(M,w,G,pe){return G.past_key_values&&(w=w.map(we=>[we.at(-1)])),{...G,decoder_input_ids:W(w)}}function H(M,...w){return M.config.is_encoder_decoder?me(M,...w):Ve(M,...w)}function fe(M,w,G,pe){const we=!!G.past_key_values;return pe.guidance_scale!==null&&pe.guidance_scale>1&&(we?G.input_ids=(0,p.cat)([G.input_ids,G.input_ids],0):(G.input_ids=(0,p.cat)([G.input_ids,(0,p.full_like)(G.input_ids,BigInt(pe.pad_token_id))],0),G.attention_mask=(0,p.cat)([G.attention_mask,(0,p.full_like)(G.attention_mask,0n)],0))),(we||!G.pixel_values)&&(G.pixel_values=(0,p.full)([0,0,3,384,384],1)),we&&(G.images_seq_mask=new p.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),G.images_emb_mask=new p.Tensor("bool",new Array(0).fill(!1),[1,1,0])),G}class Z extends o.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(w,G,pe){super(),this.config=w,this.sessions=G,this.configs=pe;const we=b.get(this.constructor),ve=T.get(we);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,ve){case v.DecoderOnly:this.can_generate=!0,this._forward=ce,this._prepare_inputs_for_generation=Ve;break;case v.Seq2Seq:case v.Vision2Seq:case v.Musicgen:this.can_generate=!0,this._forward=se,this._prepare_inputs_for_generation=me;break;case v.EncoderDecoder:this._forward=se;break;case v.ImageTextToText:this.can_generate=!0,this._forward=Ae,this._prepare_inputs_for_generation=H;break;case v.AudioTextToText:this.can_generate=!0,this._forward=ae,this._prepare_inputs_for_generation=H;break;case v.Phi3V:case v.ImageAudioTextToText:this.can_generate=!0,this._prepare_inputs_for_generation=H;break;case v.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=fe;break;case v.AutoEncoder:this._forward=ue;break;default:this._forward=J;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const w=[];for(const G of Object.values(this.sessions))G?.handler?.dispose&&w.push(G.handler.dispose());return await Promise.all(w)}static async from_pretrained(w,{progress_callback:G=null,config:pe=null,cache_dir:we=null,local_files_only:ve=!1,revision:De="main",model_file_name:Ue=null,subfolder:Qe="onnx",device:lt=null,dtype:Pt=null,use_external_data_format:$t=null,session_options:St={}}={}){let wt={progress_callback:G,config:pe,cache_dir:we,local_files_only:ve,revision:De,model_file_name:Ue,subfolder:Qe,device:lt,dtype:Pt,use_external_data_format:$t,session_options:St};const Nt=b.get(this),yt=T.get(Nt);pe=wt.config=await s.AutoConfig.from_pretrained(w,wt);let _t;if(yt===v.DecoderOnly)_t=await Promise.all([j(w,{model:wt.model_file_name??"model"},wt),B(w,{generation_config:"generation_config.json"},wt)]);else if(yt===v.Seq2Seq||yt===v.Vision2Seq)_t=await Promise.all([j(w,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},wt),B(w,{generation_config:"generation_config.json"},wt)]);else if(yt===v.MaskGeneration)_t=await Promise.all([j(w,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},wt)]);else if(yt===v.EncoderDecoder)_t=await Promise.all([j(w,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},wt)]);else if(yt===v.ImageTextToText){const Dt={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};pe.is_encoder_decoder&&(Dt.model="encoder_model"),_t=await Promise.all([j(w,Dt,wt),B(w,{generation_config:"generation_config.json"},wt)])}else if(yt===v.AudioTextToText){const Dt={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};_t=await Promise.all([j(w,Dt,wt),B(w,{generation_config:"generation_config.json"},wt)])}else if(yt===v.ImageAudioTextToText){const Dt={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};_t=await Promise.all([j(w,Dt,wt),B(w,{generation_config:"generation_config.json"},wt)])}else if(yt===v.Musicgen)_t=await Promise.all([j(w,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},wt),B(w,{generation_config:"generation_config.json"},wt)]);else if(yt===v.MultiModality)_t=await Promise.all([j(w,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},wt),B(w,{generation_config:"generation_config.json"},wt)]);else if(yt===v.Phi3V)_t=await Promise.all([j(w,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},wt),B(w,{generation_config:"generation_config.json"},wt)]);else if(yt===v.AutoEncoder)_t=await Promise.all([j(w,{encoder_model:"encoder_model",decoder_model:"decoder_model"},wt)]);else{if(yt!==v.EncoderOnly){const Dt=Nt??pe?.model_type;Dt!=="custom"&&console.warn(`Model type for '${Dt}' not found, assuming encoder-only architecture. Please report this at ${d.GITHUB_ISSUE_URL}.`)}_t=await Promise.all([j(w,{model:wt.model_file_name??"model"},wt)])}return new this(pe,..._t)}async _call(w){return await this.forward(w)}async forward(w){return await this._forward(this,w)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(w){const G=new c.LogitsProcessorList;return w.temperature!==null&&w.temperature!==1&&G.push(new c.TemperatureLogitsWarper(w.temperature)),w.top_k!==null&&w.top_k!==0&&G.push(new c.TopKLogitsWarper(w.top_k)),w.top_p!==null&&w.top_p<1&&G.push(new c.TopPLogitsWarper(w.top_p)),G}_get_logits_processor(w,G,pe=null){const we=new c.LogitsProcessorList;if(w.repetition_penalty!==null&&w.repetition_penalty!==1&&we.push(new c.RepetitionPenaltyLogitsProcessor(w.repetition_penalty)),w.no_repeat_ngram_size!==null&&w.no_repeat_ngram_size>0&&we.push(new c.NoRepeatNGramLogitsProcessor(w.no_repeat_ngram_size)),w.bad_words_ids!==null&&we.push(new c.NoBadWordsLogitsProcessor(w.bad_words_ids,w.eos_token_id)),w.min_length!==null&&w.eos_token_id!==null&&w.min_length>0&&we.push(new c.MinLengthLogitsProcessor(w.min_length,w.eos_token_id)),w.min_new_tokens!==null&&w.eos_token_id!==null&&w.min_new_tokens>0&&we.push(new c.MinNewTokensLengthLogitsProcessor(G,w.min_new_tokens,w.eos_token_id)),w.forced_bos_token_id!==null&&we.push(new c.ForcedBOSTokenLogitsProcessor(w.forced_bos_token_id)),w.forced_eos_token_id!==null&&we.push(new c.ForcedEOSTokenLogitsProcessor(w.max_length,w.forced_eos_token_id)),w.begin_suppress_tokens!==null){const ve=G>1||w.forced_bos_token_id===null?G:G+1;we.push(new c.SuppressTokensAtBeginLogitsProcessor(w.begin_suppress_tokens,ve))}return w.guidance_scale!==null&&w.guidance_scale>1&&we.push(new c.ClassifierFreeGuidanceLogitsProcessor(w.guidance_scale)),pe!==null&&we.extend(pe),we}_prepare_generation_config(w,G,pe=u.GenerationConfig){const we={...this.config};for(const De of["decoder","generator","text_config"])De in we&&Object.assign(we,we[De]);const ve=new pe(we);return Object.assign(ve,this.generation_config??{}),w&&Object.assign(ve,w),G&&Object.assign(ve,(0,a.pick)(G,Object.getOwnPropertyNames(ve))),ve}_get_stopping_criteria(w,G=null){const pe=new P.StoppingCriteriaList;return w.max_length!==null&&pe.push(new P.MaxLengthCriteria(w.max_length,this.config.max_position_embeddings??null)),w.eos_token_id!==null&&pe.push(new P.EosTokenCriteria(w.eos_token_id)),G&&pe.extend(G),pe}_validate_model_class(){if(!this.can_generate){const w=[Vl,Wl,Ul,Nl],G=b.get(this.constructor),pe=new Set,we=this.config.model_type;for(const De of w){const Ue=De.get(we);Ue&&pe.add(Ue[0])}let ve=`The current model class (${G}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw pe.size>0&&(ve+=` Please use the following class instead: ${[...pe].join(", ")}`),Error(ve)}}prepare_inputs_for_generation(...w){return this._prepare_inputs_for_generation(this,...w)}_update_model_kwargs_for_generation({generated_input_ids:w,outputs:G,model_inputs:pe,is_encoder_decoder:we}){return pe.past_key_values=this.getPastKeyValues(G,pe.past_key_values),pe.input_ids=new p.Tensor("int64",w.flat(),[w.length,1]),we||(pe.attention_mask=(0,p.cat)([pe.attention_mask,(0,p.ones)([pe.attention_mask.dims[0],1])],1)),pe.position_ids=null,pe}_prepare_model_inputs({inputs:w,bos_token_id:G,model_kwargs:pe}){const we=(0,a.pick)(pe,this.forward_params),ve=this.main_input_name;if(ve in we){if(w)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else we[ve]=w;return{inputs_tensor:we[ve],model_inputs:we,model_input_name:ve}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:w,model_inputs:G,model_input_name:pe,generation_config:we}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!G.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:De,pixel_values:Ue,attention_mask:Qe,...lt}=G,Pt=await this._prepare_inputs_embeds(G);G={...lt,...(0,a.pick)(Pt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:ve}=await J(this,G);if(we.guidance_scale!==null&&we.guidance_scale>1)ve=(0,p.cat)([ve,(0,p.full_like)(ve,0)],0),"attention_mask"in G&&(G.attention_mask=(0,p.cat)([G.attention_mask,(0,p.zeros_like)(G.attention_mask)],0));else if(G.decoder_input_ids){const De=W(G.decoder_input_ids).dims[0];if(De!==ve.dims[0]){if(ve.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${ve.dims[0]}) than the decoder inputs (${De}).`);ve=(0,p.cat)(Array.from({length:De},()=>ve),0)}}return G.encoder_outputs=ve,G}_prepare_decoder_input_ids_for_generation({batch_size:w,model_input_name:G,model_kwargs:pe,decoder_start_token_id:we,bos_token_id:ve,generation_config:De}){let{decoder_input_ids:Ue,...Qe}=pe;if(!(Ue instanceof p.Tensor)){if(Ue)Array.isArray(Ue[0])||(Ue=Array.from({length:w},()=>Ue));else if(we??=ve,this.config.model_type==="musicgen")Ue=Array.from({length:w*this.config.decoder.num_codebooks},()=>[we]);else if(Array.isArray(we)){if(we.length!==w)throw new Error(`\`decoder_start_token_id\` expcted to have length ${w} but got ${we.length}`);Ue=we}else Ue=Array.from({length:w},()=>[we]);Ue=W(Ue)}return pe.decoder_attention_mask=(0,p.ones_like)(Ue),{input_ids:Ue,model_inputs:Qe}}async generate({inputs:w=null,generation_config:G=null,logits_processor:pe=null,stopping_criteria:we=null,streamer:ve=null,...De}){this._validate_model_class(),G=this._prepare_generation_config(G,De);let{inputs_tensor:Ue,model_inputs:Qe,model_input_name:lt}=this._prepare_model_inputs({inputs:w,model_kwargs:De});const Pt=this.config.is_encoder_decoder;Pt&&("encoder_outputs"in Qe||(Qe=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ue,model_inputs:Qe,model_input_name:lt,generation_config:G})));let $t;Pt?{input_ids:$t,model_inputs:Qe}=this._prepare_decoder_input_ids_for_generation({batch_size:Qe[lt].dims.at(0),model_input_name:lt,model_kwargs:Qe,decoder_start_token_id:G.decoder_start_token_id,bos_token_id:G.bos_token_id,generation_config:G}):$t=Qe[lt];let St=$t.dims.at(-1);G.max_new_tokens!==null&&(G.max_length=St+G.max_new_tokens);const wt=this._get_logits_processor(G,St,pe),Nt=this._get_stopping_criteria(G,we),yt=Qe[lt].dims.at(0),_t=A.LogitsSampler.getSampler(G),Dt=new Array(yt).fill(0),Ht=$t.tolist();ve&&ve.put(Ht);let sr,mr={};for(;;){if(Qe=this.prepare_inputs_for_generation(Ht,Qe,G),sr=await this.forward(Qe),G.output_attentions&&G.return_dict_in_generate){const Vr=this.getAttentions(sr);for(const ps in Vr)ps in mr||(mr[ps]=[]),mr[ps].push(Vr[ps])}const It=sr.logits.slice(null,-1,null),nr=wt(Ht,It),Pr=[];for(let Vr=0;Vr<nr.dims.at(0);++Vr){const ps=nr[Vr],ri=await _t(ps);for(const[si,ea]of ri){const qi=BigInt(si);Dt[Vr]+=ea,Ht[Vr].push(qi),Pr.push([qi]);break}}if(ve&&ve.put(Pr),Nt(Ht).every(Vr=>Vr))break;Qe=this._update_model_kwargs_for_generation({generated_input_ids:Pr,outputs:sr,model_inputs:Qe,is_encoder_decoder:Pt})}ve&&ve.end();const fr=this.getPastKeyValues(sr,Qe.past_key_values,!0),pr=new p.Tensor("int64",Ht.flat(),[Ht.length,Ht[0].length]);if(G.return_dict_in_generate)return{sequences:pr,past_key_values:fr,...mr};for(const It of Object.values(sr))It.location==="gpu-buffer"&&It.dispose();return pr}getPastKeyValues(w,G,pe=!1){const we=Object.create(null);for(const ve in w)if(ve.startsWith("present")){const De=ve.replace("present","past_key_values"),Ue=ve.includes("encoder");if(Ue&&G?we[De]=G[De]:we[De]=w[ve],G&&(!Ue||pe)){const Qe=G[De];Qe.location==="gpu-buffer"&&Qe.dispose()}}return we}getAttentions(w){const G={};for(const pe of["cross_attentions","encoder_attentions","decoder_attentions"])for(const we in w)we.startsWith(pe)&&(pe in G||(G[pe]=[]),G[pe].push(w[we]));return G}addPastKeyValues(w,G){if(G)Object.assign(w,G);else{const we=(this.sessions.decoder_model_merged??this.sessions.model)?.config?.kv_cache_dtype??"float32",ve=we==="float16"?new p.DataTypeMap.float16:[],De=(w[this.main_input_name]??w.attention_mask)?.dims?.[0]??1,Ue=(0,s.getKeyValueShapes)(this.config,{batch_size:De});for(const Qe in Ue)w[Qe]=new p.Tensor(we,ve,Ue[Qe])}}async encode_image({pixel_values:w}){return(await z(this.sessions.vision_encoder,{pixel_values:w})).image_features}async encode_text({input_ids:w}){return(await z(this.sessions.embed_tokens,{input_ids:w})).inputs_embeds}async encode_audio({audio_values:w}){return(await z(this.sessions.audio_encoder,{audio_values:w})).audio_features}}class xe{}class Ce extends xe{constructor({last_hidden_state:w,hidden_states:G=null,attentions:pe=null}){super(),this.last_hidden_state=w,this.hidden_states=G,this.attentions=pe}}class $e extends Z{}class Se extends $e{}class Oe extends $e{async _call(w){return new kr(await super._call(w))}}class ze extends $e{async _call(w){return new Tt(await super._call(w))}}class Ke extends $e{async _call(w){return new Er(await super._call(w))}}class He extends $e{async _call(w){return new zr(await super._call(w))}}class Xe extends Z{}class Be extends Xe{}class Ye extends Xe{async _call(w){return new kr(await super._call(w))}}class nt extends Xe{async _call(w){return new Tt(await super._call(w))}}class et extends Xe{async _call(w){return new Er(await super._call(w))}}class mt extends Z{}class rt extends mt{}class We extends Z{}class O extends We{}class E extends We{async _call(w){return new kr(await super._call(w))}}class S extends We{async _call(w){return new Tt(await super._call(w))}}class ee extends We{async _call(w){return new Er(await super._call(w))}}class de extends We{async _call(w){return new zr(await super._call(w))}}class Me extends Z{}class ye extends Me{}class bt extends Me{async _call(w){return new kr(await super._call(w))}}class L extends Me{async _call(w){return new Tt(await super._call(w))}}class oe extends Me{async _call(w){return new Er(await super._call(w))}}class V extends Me{async _call(w){return new zr(await super._call(w))}}class ne extends Z{}class ge extends ne{}class Re extends ne{async _call(w){return new kr(await super._call(w))}}class Pe extends ne{async _call(w){return new Tt(await super._call(w))}}class gt extends ne{async _call(w){return new Er(await super._call(w))}}class ot extends ne{async _call(w){return new zr(await super._call(w))}}class at extends Z{}class Jt extends at{}class At extends at{async _call(w){return new kr(await super._call(w))}}class tr extends at{async _call(w){return new Tt(await super._call(w))}}class Wt extends at{async _call(w){return new Er(await super._call(w))}}class Dr extends at{async _call(w){return new zr(await super._call(w))}}class Qt extends Z{}class Fr extends Qt{}class Yr extends Qt{async _call(w){return new kr(await super._call(w))}}class ls extends Qt{async _call(w){return new Tt(await super._call(w))}}class Jr extends Qt{async _call(w){return new Er(await super._call(w))}}class Ts extends Qt{async _call(w){return new zr(await super._call(w))}}class jr extends Z{}class Es extends jr{}class Gr extends jr{async _call(w){return new kr(await super._call(w))}}class us extends jr{async _call(w){return new Tt(await super._call(w))}}class Lr extends jr{async _call(w){return new Er(await super._call(w))}}class Os extends jr{async _call(w){return new zr(await super._call(w))}}class Zt extends Z{}class Zr extends Zt{}class es extends Zt{async _call(w){return new Tt(await super._call(w))}}class Or extends Zt{async _call(w){return new Er(await super._call(w))}}class Nr extends Zt{async _call(w){return new zr(await super._call(w))}}class je extends Zt{async _call(w){return new kr(await super._call(w))}}class Je extends Z{}class pt extends Je{}class gr extends Je{async _call(w){return new kr(await super._call(w))}}class Ur extends Je{async _call(w){return new Tt(await super._call(w))}}class Ds extends Je{async _call(w){return new Er(await super._call(w))}}class ar extends Z{}class Sr extends ar{}class Ls extends ar{async _call(w){return new kr(await super._call(w))}}class tn extends ar{async _call(w){return new Tt(await super._call(w))}}class rn extends ar{async _call(w){return new zr(await super._call(w))}}class cs extends Z{}class sn extends cs{}class nn extends cs{async _call(w){return new kr(await super._call(w))}}class on extends cs{async _call(w){return new Tt(await super._call(w))}}class an extends cs{async _call(w){return new Er(await super._call(w))}}class Gs extends cs{async _call(w){return new zr(await super._call(w))}}class Ps extends Z{}class ln extends Ps{}class un extends Ps{async _call(w){return new kr(await super._call(w))}}class cn extends Ps{async _call(w){return new Tt(await super._call(w))}}class dn extends Ps{async _call(w){return new zr(await super._call(w))}}class Bs extends Z{}class _e extends Bs{}class k extends Bs{async _call(w){return new Tt(await super._call(w))}}class Y extends Bs{async _call(w){return new zr(await super._call(w))}}class ie extends Bs{async _call(w){return new kr(await super._call(w))}}class le extends Z{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class be extends le{}class Fe extends le{}class Ze extends Z{}class st extends Ze{}class it extends Ze{}class qe extends Z{}class kt extends qe{}class vt extends qe{}class Gt extends Z{}class wr extends Gt{}class rr extends Gt{}class hr extends Gt{async _call(w){return new Tt(await super._call(w))}}class Vt extends Z{}class cr extends Vt{}class Cs extends Vt{}class yr extends Vt{async _call(w){return new Tt(await super._call(w))}}class ds extends Vt{}class Kt extends Z{}class Mr extends Kt{}class $r extends Kt{}class Kr extends Z{}class ts extends Kr{}class Ir extends Kr{}class Tr extends Z{}class br extends Tr{}class lr extends Tr{async _call(w){return new kr(await super._call(w))}}class er extends Tr{async _call(w){return new Tt(await super._call(w))}}class dr extends Tr{async _call(w){return new Er(await super._call(w))}}class Br extends Tr{async _call(w){return new zr(await super._call(w))}}class rs extends Z{}class jn extends rs{}class yo extends rs{async _call(w){return new kr(await super._call(w))}}class gi extends rs{async _call(w){return new Tt(await super._call(w))}}class Mo extends rs{async _call(w){return new Er(await super._call(w))}}class bo extends rs{async _call(w){return new zr(await super._call(w))}}class Ks extends Z{}class vo extends Ks{}class xo extends Ks{async _call(w){return new kr(await super._call(w))}}class To extends Ks{async _call(w){return new Tt(await super._call(w))}}class Eo extends Ks{async _call(w){return new Er(await super._call(w))}}class Po extends Ks{async _call(w){return new zr(await super._call(w))}}class wi extends Z{}class Co extends wi{}class So extends wi{}class yi extends Z{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Mi extends yi{}class Nn extends yi{_prepare_generation_config(w,G){return super._prepare_generation_config(w,G,g.WhisperGenerationConfig)}_retrieve_init_tokens(w){const G=[w.decoder_start_token_id];let pe=w.language;const we=w.task;if(w.is_multilingual){pe||(console.warn("No language specified - defaulting to English (en)."),pe="en");const De=`<|${(0,I.whisper_language_to_code)(pe)}|>`;G.push(w.lang_to_id[De]),G.push(w.task_to_id[we??"transcribe"])}else if(pe||we)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!w.return_timestamps&&w.no_timestamps_token_id&&G.at(-1)!==w.no_timestamps_token_id?G.push(w.no_timestamps_token_id):w.return_timestamps&&G.at(-1)===w.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),G.pop()),G.filter(ve=>ve!=null)}async generate({inputs:w=null,generation_config:G=null,logits_processor:pe=null,stopping_criteria:we=null,...ve}){G=this._prepare_generation_config(G,ve);const De=ve.decoder_input_ids??this._retrieve_init_tokens(G);if(G.return_timestamps&&(pe??=new c.LogitsProcessorList,pe.push(new c.WhisperTimeStampLogitsProcessor(G,De))),G.begin_suppress_tokens&&(pe??=new c.LogitsProcessorList,pe.push(new c.SuppressTokensAtBeginLogitsProcessor(G.begin_suppress_tokens,De.length))),G.return_token_timestamps){if(!G.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");G.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),G.output_attentions=!0,G.return_dict_in_generate=!0}const Ue=await super.generate({inputs:w,generation_config:G,logits_processor:pe,decoder_input_ids:De,...ve});return G.return_token_timestamps&&(Ue.token_timestamps=this._extract_token_timestamps(Ue,G.alignment_heads,G.num_frames)),Ue}_extract_token_timestamps(w,G,pe=null,we=.02){if(!w.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");pe==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let ve=this.config.median_filter_width;ve===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),ve=7);const De=w.cross_attentions,Ue=Array.from({length:this.config.decoder_layers},(yt,_t)=>(0,p.cat)(De.map(Dt=>Dt[_t]),2)),Qe=(0,p.stack)(G.map(([yt,_t])=>{if(yt>=Ue.length)throw new Error(`Layer index ${yt} is out of bounds for cross attentions (length ${Ue.length}).`);return pe?Ue[yt].slice(null,_t,null,[0,pe]):Ue[yt].slice(null,_t)})).transpose(1,0,2,3),[lt,Pt]=(0,p.std_mean)(Qe,-2,0,!0),$t=Qe.clone();for(let yt=0;yt<$t.dims[0];++yt){const _t=$t[yt];for(let Dt=0;Dt<_t.dims[0];++Dt){const Ht=_t[Dt],sr=lt[yt][Dt][0].data,mr=Pt[yt][Dt][0].data;for(let fr=0;fr<Ht.dims[0];++fr){let pr=Ht[fr].data;for(let It=0;It<pr.length;++It)pr[It]=(pr[It]-mr[It])/sr[It];pr.set((0,f.medianFilter)(pr,ve))}}}const St=[(0,p.mean)($t,1)],wt=w.sequences.dims,Nt=new p.Tensor("float32",new Float32Array(wt[0]*wt[1]),wt);for(let yt=0;yt<wt[0];++yt){const _t=St[yt].neg().squeeze_(0),[Dt,Ht]=(0,f.dynamic_time_warping)(_t.tolist()),sr=Array.from({length:Dt.length-1},(pr,It)=>Dt[It+1]-Dt[It]),mr=(0,a.mergeArrays)([1],sr).map(pr=>!!pr),fr=[];for(let pr=0;pr<mr.length;++pr)mr[pr]&&fr.push(Ht[pr]*we);Nt[yt].data.set(fr,1)}return Nt}}class bi extends Nn{}class vi extends Z{requires_attention_mask=!1;main_input_name="input_values";forward_params=["input_values","decoder_input_ids","past_key_values"]}class Ba extends vi{}class xi extends vi{}class Un extends Z{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class zs extends Z{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class Vn extends zs{_merge_input_ids_with_image_features(w){const G=w.image_features.dims.at(-1),pe=w.image_features.view(-1,G);return D({image_token_id:this.config.image_token_index,...w,image_features:pe})}}class Ti extends Vn{}class $o extends Vn{}class Io extends Z{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class ko extends Io{_merge_input_ids_with_image_features({inputs_embeds:w,image_features:G,input_ids:pe,attention_mask:we}){return{inputs_embeds:(0,p.cat)([G,w],1),attention_mask:(0,p.cat)([(0,p.ones)(G.dims.slice(0,2)),we],1)}}async _prepare_inputs_embeds({input_ids:w,pixel_values:G,inputs_embeds:pe,attention_mask:we}){if(!w&&!G)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let ve,De;return w&&(ve=await this.encode_text({input_ids:w})),G&&(De=await this.encode_image({pixel_values:G})),ve&&De?{inputs_embeds:pe,attention_mask:we}=this._merge_input_ids_with_image_features({inputs_embeds:ve,image_features:De,input_ids:w,attention_mask:we}):pe=ve||De,{inputs_embeds:pe,attention_mask:we}}async forward({input_ids:w,pixel_values:G,attention_mask:pe,decoder_input_ids:we,decoder_attention_mask:ve,encoder_outputs:De,past_key_values:Ue,inputs_embeds:Qe,decoder_inputs_embeds:lt}){if(Qe||({inputs_embeds:Qe,attention_mask:pe}=await this._prepare_inputs_embeds({input_ids:w,pixel_values:G,inputs_embeds:Qe,attention_mask:pe})),!De){let{last_hidden_state:St}=await J(this,{inputs_embeds:Qe,attention_mask:pe});De=St}if(!lt){if(!we)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");lt=await this.encode_text({input_ids:we})}return await ce(this,{inputs_embeds:lt,attention_mask:ve,encoder_attention_mask:pe,encoder_hidden_states:De,past_key_values:Ue},!0)}}class Wn extends Z{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class Ei extends Wn{_merge_input_ids_with_image_features(w){const G=w.image_features.dims.at(-1),pe=w.image_features.view(-1,G);return D({image_token_id:this.config.image_token_index,...w,image_features:pe})}}class Ao extends zs{_merge_input_ids_with_image_features(w){const G=w.image_features.dims.at(-1),pe=w.image_features.view(-1,G);return D({image_token_id:this.config.image_token_index,...w,image_features:pe})}}class Fo extends Z{forward_params=["input_ids","attention_mask","inputs_embeds","per_layer_inputs","position_ids","pixel_values","input_features","input_features_mask","past_key_values"]}class Pi extends Fo{async forward({input_ids:w=null,attention_mask:G=null,pixel_values:pe=null,input_features:we=null,input_features_mask:ve=null,position_ids:De=null,inputs_embeds:Ue=null,per_layer_inputs:Qe=null,past_key_values:lt=null,generation_config:Pt=null,logits_processor:$t=null,...St}){if((!Ue||!Qe)&&({inputs_embeds:Ue,per_layer_inputs:Qe}=await z(this.sessions.embed_tokens,{input_ids:w}),w.dims[1]!==1)){if(pe){const{image_features:Nt}=await z(this.sessions.vision_encoder,{pixel_values:pe});({inputs_embeds:Ue,attention_mask:G}=this._merge_input_ids_with_image_features({image_features:Nt,inputs_embeds:Ue,input_ids:w,attention_mask:G}))}if(we){const{audio_features:Nt}=await z(this.sessions.audio_encoder,{input_features:we,input_features_mask:ve});({inputs_embeds:Ue,attention_mask:G}=this._merge_input_ids_with_audio_features({audio_features:Nt,inputs_embeds:Ue,input_ids:w,attention_mask:G}))}}return await ce(this,{inputs_embeds:Ue,per_layer_inputs:Qe,past_key_values:lt,attention_mask:G,position_ids:De,generation_config:Pt,logits_processor:$t},!0)}_merge_input_ids_with_image_features(w){const G=w.image_features.dims.at(-1),pe=w.image_features.view(-1,G);return D({image_token_id:this.config.image_token_id,...w,image_features:pe})}_merge_input_ids_with_audio_features(w){const G=w.audio_features.dims.at(-1),pe=w.audio_features.view(-1,G);return Q({audio_token_id:this.config.audio_token_id,...w,audio_features:pe})}}class Oo extends Z{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class Gn extends Oo{async encode_image({pixel_values:w,pixel_attention_mask:G}){return(await z(this.sessions.vision_encoder,{pixel_values:w,pixel_attention_mask:G})).image_features}_merge_input_ids_with_image_features(w){const G=w.image_features.dims.at(-1),pe=w.image_features.view(-1,G);return D({image_token_id:this.config.image_token_id,...w,image_features:pe})}}class Ci extends Gn{}class Do extends Z{forward_params=["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"]}class Si extends Do{async forward({input_ids:w=null,attention_mask:G=null,pixel_values:pe=null,image_sizes:we=null,position_ids:ve=null,inputs_embeds:De=null,past_key_values:Ue=null,generation_config:Qe=null,logits_processor:lt=null,...Pt}){if(!De){let St;if(pe&&w.dims[1]!==1){if(!we)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:St}=await z(this.sessions.vision_encoder,{pixel_values:pe,image_sizes:we}))}else{const wt=this.config.normalized_config.hidden_size;St=new p.Tensor("float32",[],[0,wt])}({inputs_embeds:De}=await z(this.sessions.prepare_inputs_embeds,{input_ids:w,image_features:St}))}return await ce(this,{inputs_embeds:De,past_key_values:Ue,attention_mask:G,position_ids:ve,generation_config:Qe,logits_processor:lt},!1)}}class Rs extends Z{}class pn extends Rs{}class hn extends Rs{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"text_model"})}}class $i extends Rs{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"text_model"})}}class za extends Rs{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"vision_model"})}}class Lo extends Rs{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"vision_model"})}}class mn extends Z{}class Kn extends mn{}class Ii extends mn{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"text_model"})}}class ki extends Rs{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"vision_model"})}}class Ai extends Z{}class Fi extends Ai{}class fn extends Z{}class Oi extends fn{async forward(w){const G=!w.input_ids,pe=!w.pixel_values;if(G&&pe)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(G&&(w.input_ids=(0,p.ones)([w.pixel_values.dims[0],1])),pe){const{image_size:lt}=this.config.vision_config;w.pixel_values=(0,p.full)([0,3,lt,lt],0)}const{text_embeddings:we,image_embeddings:ve,l2norm_text_embeddings:De,l2norm_image_embeddings:Ue}=await super.forward(w),Qe={};return G||(Qe.text_embeddings=we,Qe.l2norm_text_embeddings=De),pe||(Qe.image_embeddings=ve,Qe.l2norm_image_embeddings=Ue),Qe}}class Bo extends fn{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"text_model"})}}class Di extends fn{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"vision_model"})}}class Hn extends Z{}class _n extends Hn{}class ft extends Hn{}class Li extends Z{}class Bi extends Li{}class zi extends Li{}class Hs extends Z{}class Hr extends Hs{}class gn extends Hs{}class wn extends Z{}class Ri extends wn{}class ji extends wn{}class qn extends Z{}class Qn extends qn{}class Ni extends qn{}class Xn extends Z{}class Ui extends Xn{}class yn extends Xn{}class Mn extends Z{}class Yn extends Mn{}class Vi extends Mn{}class Jn extends Z{}class Wi extends Jn{}class Gi extends Jn{}class Zn extends Z{}class h extends Zn{}class C extends Zn{}class F extends Z{}class R extends F{}class q extends F{}class he extends Z{}class Ie extends he{}class Ne extends he{}class tt extends Z{}class ut extends tt{}class xt extends tt{}class Ft extends Z{}class Rt extends Ft{}class vr extends Ft{}class Ss extends Z{}class zo extends Ss{}class ed extends Ss{}class Ra extends Z{}class td extends Ra{}class rd extends Ra{}class ja extends Z{}class sd extends ja{}class nd extends ja{}class Na extends Z{}class id extends Na{}class od extends Na{}class Ua extends Z{}class ad extends Ua{}class ld extends Ua{}class Va extends Z{}class ud extends Va{}class cd extends Va{}class Wa extends Z{}class dd extends Wa{}class pd extends Wa{}class Ga extends Z{}class hd extends Ga{}class md extends Ga{}class Ka extends Z{}class fd extends Ka{}class _d extends Ka{}class Ha extends Z{}class gd extends Ha{}class wd extends Ha{}class yd extends Z{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class Md extends yd{get_rope_index(w,G,pe,we){const{vision_config:ve,image_token_id:De,video_token_id:Ue,vision_start_token_id:Qe}=this.config,lt=ve.spatial_merge_size??2,Pt=[];if(G||pe){let $t=w.tolist();we||(we=(0,p.ones_like)(w));const St=we.tolist(),wt=Array.from({length:3},Ht=>Array.from({length:w.dims[0]},sr=>Array.from({length:w.dims[1]},mr=>1))),Nt=G?G.tolist():[],yt=pe?pe.tolist():[];let _t=0,Dt=0;for(let Ht=0;Ht<$t.length;++Ht){const sr=$t[Ht].filter((Yt,xr)=>St[Ht][xr]==1),fr=sr.reduce((Yt,xr,Qs)=>(xr==Qe&&Yt.push(Qs),Yt),[]).map(Yt=>sr[Yt+1]),pr=fr.filter(Yt=>Yt==De).length,It=fr.filter(Yt=>Yt==Ue).length;let nr=[],Pr=0,vn=pr,Vr=It;for(let Yt=0;Yt<fr.length;++Yt){const xr=sr.findIndex((Tn,hs)=>hs>Pr&&Tn==De),Qs=sr.findIndex((Tn,hs)=>hs>Pr&&Tn==Ue),xn=vn>0&&xr!==-1?xr:sr.length+1,ni=Vr>0&&Qs!==-1?Qs:sr.length+1;let ta,Gl,Kl,Hl;xn<ni?([Gl,Kl,Hl]=Nt[_t],++_t,--vn,ta=xn):([Gl,Kl,Hl]=yt[Dt],++Dt,--Vr,ta=ni);const[sx,ql,ra]=[Number(Gl),Math.floor(Number(Kl)/lt),Math.floor(Number(Hl)/lt)],Ql=ta-Pr,Pf=nr.length>0?(0,f.max)(nr.at(-1))[0]+1:0;nr.push(Array.from({length:3*Ql},(Tn,hs)=>Pf+hs%Ql));const Xl=Ql+Pf,sa=sx*ql*ra,nx=Array.from({length:sa},(Tn,hs)=>Xl+Math.floor(hs/(ql*ra))),ix=Array.from({length:sa},(Tn,hs)=>Xl+Math.floor(hs/ra)%ql),ox=Array.from({length:sa},(Tn,hs)=>Xl+hs%ra);nr.push([nx,ix,ox].flat()),Pr=ta+sa}if(Pr<sr.length){const Yt=nr.length>0?(0,f.max)(nr.at(-1))[0]+1:0,xr=sr.length-Pr;nr.push(Array.from({length:3*xr},(Qs,xn)=>Yt+xn%xr))}const ps=nr.reduce((Yt,xr)=>Yt+xr.length,0),ri=new Array(ps);let si=0;for(let Yt=0;Yt<3;++Yt)for(let xr=0;xr<nr.length;++xr){const Qs=nr[xr],xn=Qs.length/3;for(let ni=Yt*xn;ni<(Yt+1)*xn;++ni)ri[si++]=Qs[ni]}let ea=0;const qi=St[Ht];for(let Yt=0;Yt<qi.length;++Yt)if(qi[Yt]==1){for(let xr=0;xr<3;++xr)wt[xr][Ht][Yt]=ri[xr*ps/3+ea];++ea}const rx=(0,f.max)(ri)[0];Pt.push(rx+1-$t[Ht].length)}return[new p.Tensor("int64",wt.flat(1/0),[3,w.dims[0],w.dims[1]]),new p.Tensor("int64",Pt,[Pt.length,1])]}else if(we){const{data:$t,dims:St}=Ee(we),wt=BigInt64Array.from({length:3*$t.length},(yt,_t)=>$t[_t%$t.length]),Nt=Array.from({length:St[0]},(yt,_t)=>(0,f.max)($t.subarray(St[1]*_t,St[1]*(_t+1)))[0]+1n+BigInt(St[1]));return[new p.Tensor("int64",wt,[3,...St]),new p.Tensor("int64",Nt,[Nt.length,1])]}else{const[$t,St]=w.dims,wt=BigInt64Array.from({length:3*$t*St},(Nt,yt)=>BigInt(Math.floor(yt%St/$t)));return[new p.Tensor("int64",wt,[3,...w.dims]),(0,p.zeros)([$t,1])]}}async encode_image({pixel_values:w,image_grid_thw:G}){return(await z(this.sessions.vision_encoder,{pixel_values:w,grid_thw:G})).image_features}_merge_input_ids_with_image_features(w){return D({image_token_id:this.config.image_token_id,...w})}prepare_inputs_for_generation(w,G,pe){if(G.attention_mask&&!G.position_ids)if(!G.past_key_values)[G.position_ids,G.rope_deltas]=this.get_rope_index(G.input_ids,G.image_grid_thw,G.video_grid_thw,G.attention_mask);else{G.pixel_values=null;const we=BigInt(Object.values(G.past_key_values)[0].dims.at(-2)),ve=G.rope_deltas.map(De=>we+De);G.position_ids=(0,p.stack)([ve,ve,ve],0)}return G}}class qa extends Z{}class bd extends qa{}class vd extends qa{}class Qa extends Z{}class xd extends Qa{}class Td extends Qa{}class Xa extends Z{}class Ed extends Xa{}class Pd extends Xa{}class Ya extends Z{}class Cd extends Ya{}class Sd extends Ya{}class Ja extends Z{}class $d extends Ja{}class Id extends Ja{}class Za extends Z{}class kd extends Za{}class Ad extends Za{async _call(w){return new Tt(await super._call(w))}}class el extends Z{}class Fd extends el{}class Od extends el{async _call(w){return new Tt(await super._call(w))}}class Dd extends Z{}class Ld extends Dd{}class tl extends Z{}class Bd extends tl{}class zd extends tl{async _call(w){return new Tt(await super._call(w))}}class Rd extends Z{}class jd extends Rd{}class rl extends Z{}class Nd extends rl{}class Ud extends rl{async _call(w){return new Tt(await super._call(w))}}class Vd extends Z{}class Wd extends Vd{}class sl extends Z{}class Gd extends sl{}class Kd extends sl{async _call(w){return new Tt(await super._call(w))}}class Hd extends Z{}class qd extends Hd{async _call(w){return new Tf(await super._call(w))}}class nl extends Z{}class Qd extends nl{}class Xd extends nl{async _call(w){return new Tt(await super._call(w))}}class il extends Z{}class Yd extends il{}class Jd extends il{async _call(w){return new Tt(await super._call(w))}}class ol extends Z{}class Zd extends ol{}class ep extends ol{}class al extends Z{}class tp extends al{}class rp extends al{}class ll extends Z{}class sp extends ll{}class np extends ll{async _call(w){return new Tt(await super._call(w))}}class Ro extends Z{}class ip extends Ro{}class op extends Ro{async _call(w){return new cl(await super._call(w))}}class ul extends Ro{async _call(w){return new ap(await super._call(w))}}class cl extends xe{constructor({logits:w,pred_boxes:G}){super(),this.logits=w,this.pred_boxes=G}}class ap extends xe{constructor({logits:w,pred_boxes:G,pred_masks:pe}){super(),this.logits=w,this.pred_boxes=G,this.pred_masks=pe}}class dl extends Z{}class lp extends dl{}class up extends dl{async _call(w){return new Ki(await super._call(w))}}class Ki extends xe{constructor({logits:w,pred_boxes:G}){super(),this.logits=w,this.pred_boxes=G}}class pl extends Z{}class cp extends pl{}class dp extends pl{async _call(w){return new pp(await super._call(w))}}class pp extends Ki{}class hl extends Z{}class hp extends hl{}class mp extends hl{async _call(w){return new fp(await super._call(w))}}class fp extends Ki{}class ml extends Z{}class _p extends ml{}class gp extends ml{async _call(w){return new Ki(await super._call(w))}}class fl extends Z{}class wp extends fl{}class yp extends fl{async _call(w){return new Mp(await super._call(w))}}class Mp extends cl{}class _l extends Z{}class bp extends _l{}class vp extends _l{async _call(w){return new Tt(await super._call(w))}}class gl extends Z{}class xp extends gl{}class Tp extends gl{async _call(w){return new Tt(await super._call(w))}}class wl extends Z{}class Ep extends wl{}class Pp extends wl{async _call(w){return new Tt(await super._call(w))}}class jo extends Z{}class Cp extends jo{}class Sp extends jo{async _call(w){return new Tt(await super._call(w))}}class $p extends jo{}class yl extends Z{}class Ip extends yl{}class kp extends yl{}class Ml extends Z{}class Ap extends Ml{}class Fp extends Ml{}class Op extends Z{}class Dp extends Op{}class No extends Z{}class Lp extends No{}class Bp extends No{}class zp extends No{}class Rp extends Z{}class jp extends Rp{}class Np extends Z{}class Up extends Np{}class Vp extends Z{}class Wp extends Vp{}class bl extends Z{}class Gp extends bl{}class Kp extends bl{}class vl extends Z{}class Hp extends vl{}class qp extends vl{}class Qp extends Z{}class Xp extends Qp{}class xl extends Z{}class Yp extends xl{}class Jp extends xl{async _call(w){return new Tt(await super._call(w))}}class Tl extends Z{}class Zp extends Tl{}class eh extends Tl{async _call(w){return new Tt(await super._call(w))}}class El extends Z{}class th extends El{}class rh extends El{async _call(w){return new Tt(await super._call(w))}}class Pl extends Z{}class sh extends Pl{}class nh extends Pl{async _call(w){return new Tt(await super._call(w))}}class ih extends Z{}class oh extends ih{}class Cl extends Z{}class ah extends Cl{}class lh extends Cl{async _call(w){return new uh(await super._call(w))}}class uh extends xe{constructor({logits:w,pred_boxes:G}){super(),this.logits=w,this.pred_boxes=G}}class ch extends Z{}class dh extends ch{async get_image_embeddings({pixel_values:w}){return await J(this,{pixel_values:w})}async forward(w){if((!w.image_embeddings||!w.image_positional_embeddings)&&(w={...w,...await this.get_image_embeddings(w)}),!w.input_labels&&w.input_points){const pe=w.input_points.dims.slice(0,-1),we=pe.reduce((ve,De)=>ve*De,1);w.input_labels=new p.Tensor("int64",new BigInt64Array(we).fill(1n),pe)}const G={image_embeddings:w.image_embeddings,image_positional_embeddings:w.image_positional_embeddings};return w.input_points&&(G.input_points=w.input_points),w.input_labels&&(G.input_labels=w.input_labels),w.input_boxes&&(G.input_boxes=w.input_boxes),await z(this.sessions.prompt_encoder_mask_decoder,G)}async _call(w){return new ph(await super._call(w))}}class ph extends xe{constructor({iou_scores:w,pred_masks:G}){super(),this.iou_scores=w,this.pred_masks=G}}class Sl extends Z{}class hh extends Sl{}class mh extends Sl{}class $l extends Z{}class fh extends $l{}class _h extends $l{}class qs extends Z{}class gh extends qs{}class wh extends qs{async _call(w){return new bn(await super._call(w))}}class yh extends qs{async _call(w){return new Tt(await super._call(w))}}class Mh extends qs{async _call(w){return new Er(await super._call(w))}}class Il extends Z{}class bh extends Il{}class vh extends Il{async _call(w){return new Er(await super._call(w))}}class xh extends Z{}class Th extends xh{}class Uo extends Z{}class Eh extends Uo{}class Ph extends Uo{async _call(w){return new bn(await super._call(w))}}class Ch extends Uo{async _call(w){return new Tt(await super._call(w))}}class Hi extends Z{}class Sh extends Hi{}class $h extends Hi{async _call(w){return new bn(await super._call(w))}}class Ih extends Hi{async _call(w){return new Tt(await super._call(w))}}class kh extends Hi{async _call(w){return new Er(await super._call(w))}}class Vo extends Z{}class Ah extends Vo{}class Fh extends Vo{async _call(w){return new bn(await super._call(w))}}class Oh extends Vo{async _call(w){return new Tt(await super._call(w))}}class cv extends Z{}class Dh extends qs{}class Lh extends qs{async _call(w){return new bn(await super._call(w))}}class Bh extends qs{async _call(w){return new Tt(await super._call(w))}}class ei extends Z{}class zh extends ei{}class Rh extends ei{async _call(w){return new bn(await super._call(w))}}class jh extends ei{async _call(w){return new Tt(await super._call(w))}}class Nh extends ei{async _call(w){return new xf(await super._call(w))}}class Uh extends ei{async _call(w){return new Er(await super._call(w))}}class Vh extends Z{}class Wh extends Vh{}class Wo extends Z{}class dv extends Wo{}class Gh extends Wo{}class Kh extends Wo{async generate_speech(w,G,{threshold:pe=.5,minlenratio:we=0,maxlenratio:ve=20,vocoder:De=null}={}){const Ue={input_ids:w},{encoder_outputs:Qe,encoder_attention_mask:lt}=await J(this,Ue),Pt=Qe.dims[1]/this.config.reduction_factor,$t=Math.floor(Pt*ve),St=Math.floor(Pt*we),wt=this.config.num_mel_bins;let Nt=[],yt=null,_t=null,Dt=0;for(;;){++Dt;const mr=K(!!_t);let fr;_t?fr=_t.output_sequence_out:fr=new p.Tensor("float32",new Float32Array(wt),[1,1,wt]);let pr={use_cache_branch:mr,output_sequence:fr,encoder_attention_mask:lt,speaker_embeddings:G,encoder_hidden_states:Qe};this.addPastKeyValues(pr,yt),_t=await z(this.sessions.decoder_model_merged,pr),yt=this.getPastKeyValues(_t,yt);const{prob:It,spectrum:nr}=_t;if(Nt.push(nr),Dt>=St&&(Array.from(It.data).filter(Pr=>Pr>=pe).length>0||Dt>=$t))break}const Ht=(0,p.cat)(Nt),{waveform:sr}=await z(De.sessions.model,{spectrogram:Ht});return{spectrogram:Ht,waveform:sr}}}class Hh extends Z{main_input_name="spectrogram"}class qh extends Z{}class Qh extends qh{}class kl extends Z{}class Xh extends kl{}class Yh extends kl{}class Al extends Z{}class Jh extends Al{}class Zh extends Al{}class Fl extends Z{}class em extends Fl{}class tm extends Fl{}class Go extends Z{}class rm extends Go{}class sm extends Go{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"text_model"})}}class nm extends Go{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"audio_model"})}}class im extends Z{}class Ol extends im{async _call(w){return new Ef(await super._call(w))}}class Ko extends Z{}class pv extends Ko{}class om extends Ko{}class am extends Ko{}class Dl extends Z{}class lm extends Dl{}class um extends Dl{}class Ll extends Z{}class cm extends Ll{}class dm extends Ll{async _call(w){return new Tt(await super._call(w))}}class Bl extends Z{}class hv extends Bl{}class mv extends Bl{}class zl extends Z{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(w){const[G,pe]=w.dims,we=this.config.decoder.num_codebooks,ve=pe-we;let De=0;for(let lt=0;lt<w.size;++lt){if(w.data[lt]===this.config.decoder.pad_token_id)continue;const Pt=lt%pe,$t=Math.floor(lt/pe)%we,St=Pt-$t;St>0&&St<=ve&&(w.data[De++]=w.data[lt])}const Ue=Math.floor(G/we),Qe=De/(Ue*we);return new p.Tensor(w.type,w.data.slice(0,De),[Ue,we,Qe])}prepare_inputs_for_generation(w,G,pe){let we=structuredClone(w);for(let De=0;De<we.length;++De)for(let Ue=0;Ue<we[De].length;++Ue)De%this.config.decoder.num_codebooks>=Ue&&(we[De][Ue]=BigInt(this.config.decoder.pad_token_id));return pe.guidance_scale!==null&&pe.guidance_scale>1&&(we=we.concat(we)),super.prepare_inputs_for_generation(we,G,pe)}async generate(w){const G=await super.generate(w),pe=this._apply_and_filter_by_delay_pattern_mask(G).unsqueeze_(0),{audio_values:we}=await z(this.sessions.encodec_decode,{audio_codes:pe});return we}}class Ho extends Z{}class pm extends Ho{}class hm extends Ho{async _call(w){return new Tt(await super._call(w))}}class mm extends Ho{}class qo extends Z{}class fm extends qo{}class _m extends qo{async _call(w){return new Tt(await super._call(w))}}class gm extends qo{}class Qo extends Z{}class wm extends Qo{}class ym extends Qo{async _call(w){return new Tt(await super._call(w))}}class Mm extends Qo{}class Xo extends Z{}class bm extends Xo{}class vm extends Xo{async _call(w){return new Tt(await super._call(w))}}class xm extends Xo{}class Tm extends Z{}class Em extends Tm{}class Pm extends Z{}class Cm extends Pm{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...w){super(...w),this._generation_mode="text"}async forward(w){const G=this._generation_mode??"text";let pe;if(G==="text"||!w.past_key_values){const Qe=this.sessions.prepare_inputs_embeds,lt=(0,a.pick)(w,Qe.inputNames);pe=await z(Qe,lt)}else{const Qe=this.sessions.gen_img_embeds,lt=(0,a.pick)({image_ids:w.input_ids},Qe.inputNames);pe=await z(Qe,lt)}const we={...w,...pe},ve=await ce(this,we),De=this.sessions[G==="text"?"lm_head":"gen_head"];if(!De)throw new Error(`Unable to find "${De}" generation head`);const Ue=await z(De,(0,a.pick)(ve,De.inputNames));return{...pe,...ve,...Ue}}async generate(w){return this._generation_mode="text",super.generate(w)}async generate_images(w){this._generation_mode="image";const G=(w.inputs??w[this.main_input_name]).dims[1],we=(await super.generate(w)).slice(null,[G,null]),ve=this.sessions.image_decode,{decoded_image:De}=await z(ve,{generated_tokens:we}),Ue=De.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Qe=[];for(const lt of Ue){const Pt=_.RawImage.fromTensor(lt);Qe.push(Pt)}return Qe}}class Sm extends xe{constructor({char_logits:w,bpe_logits:G,wp_logits:pe}){super(),this.char_logits=w,this.bpe_logits=G,this.wp_logits=pe}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class $m extends Z{}class Im extends $m{async _call(w){return new Sm(await super._call(w))}}class Rl extends Z{}class km extends Rl{}class Am extends Rl{}class jl extends Z{}class Fm extends jl{}class Om extends jl{}class Dm extends Z{forward_params=["input_ids","attention_mask","position_ids","audio_values","past_key_values"]}class Lm extends Dm{_merge_input_ids_with_audio_features(w){const G=w.audio_features.dims.at(-1),pe=w.audio_features.view(-1,G);return Q({audio_token_id:this.config.ignore_index,...w,audio_features:pe})}}class Yo extends Z{main_input_name="input_values";forward_params=["input_values"]}class Bm extends xe{constructor({audio_codes:w}){super(),this.audio_codes=w}}class zm extends xe{constructor({audio_values:w}){super(),this.audio_values=w}}class Rm extends Yo{async encode(w){return new Bm(await z(this.sessions.encoder_model,w))}async decode(w){return new zm(await z(this.sessions.decoder_model,w))}}class jm extends Yo{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"encoder_model"})}}class Nm extends Yo{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"decoder_model"})}}class Jo extends Z{main_input_name="input_values";forward_params=["input_values"]}class Um extends xe{constructor({audio_codes:w}){super(),this.audio_codes=w}}class Vm extends xe{constructor({audio_values:w}){super(),this.audio_values=w}}class Wm extends Jo{async encode(w){return new Um(await z(this.sessions.encoder_model,w))}async decode(w){return new Vm(await z(this.sessions.decoder_model,w))}}class Gm extends Jo{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"encoder_model"})}}class Km extends Jo{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"decoder_model"})}}class Zo extends Z{main_input_name="input_values";forward_params=["input_values"]}class Hm extends Zo{async encode(w){return await z(this.sessions.encoder_model,w)}async decode(w){return await z(this.sessions.decoder_model,w)}}class qm extends Zo{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"encoder_model"})}}class Qm extends Zo{static async from_pretrained(w,G={}){return super.from_pretrained(w,{...G,model_file_name:G.model_file_name??"decoder_model"})}}class jt{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(w,{progress_callback:G=null,config:pe=null,cache_dir:we=null,local_files_only:ve=!1,revision:De="main",model_file_name:Ue=null,subfolder:Qe="onnx",device:lt=null,dtype:Pt=null,use_external_data_format:$t=null,session_options:St={}}={}){const wt={progress_callback:G,config:pe,cache_dir:we,local_files_only:ve,revision:De,model_file_name:Ue,subfolder:Qe,device:lt,dtype:Pt,use_external_data_format:$t,session_options:St};if(wt.config=await s.AutoConfig.from_pretrained(w,wt),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const Nt=wt.config.model_type;for(const yt of this.MODEL_CLASS_MAPPINGS){let _t=yt.get(Nt);if(!_t){for(const Dt of yt.values())if(Dt[0]===Nt){_t=Dt;break}if(!_t)continue}return await _t[1].from_pretrained(w,wt)}if(this.BASE_IF_FAIL)return vf.has(Nt)||console.warn(`Unknown model class "${Nt}", attempting to construct from base class.`),await Z.from_pretrained(w,wt);throw Error(`Unsupported model type: ${Nt}`)}}const fv=new Map([["bert",["BertModel",Se]],["modernbert",["ModernBertModel",Be]],["nomic_bert",["NomicBertModel",rt]],["roformer",["RoFormerModel",O]],["electra",["ElectraModel",ge]],["esm",["EsmModel",pt]],["convbert",["ConvBertModel",ye]],["camembert",["CamembertModel",Jt]],["deberta",["DebertaModel",Fr]],["deberta-v2",["DebertaV2Model",Es]],["mpnet",["MPNetModel",sn]],["albert",["AlbertModel",_e]],["distilbert",["DistilBertModel",Zr]],["roberta",["RobertaModel",br]],["xlm",["XLMModel",jn]],["xlm-roberta",["XLMRobertaModel",vo]],["clap",["ClapModel",rm]],["clip",["CLIPModel",pn]],["clipseg",["CLIPSegModel",_n]],["chinese_clip",["ChineseCLIPModel",Fi]],["siglip",["SiglipModel",Kn]],["jina_clip",["JinaCLIPModel",Oi]],["mobilebert",["MobileBertModel",Sr]],["squeezebert",["SqueezeBertModel",ln]],["wav2vec2",["Wav2Vec2Model",gh]],["wav2vec2-bert",["Wav2Vec2BertModel",Ah]],["unispeech",["UniSpeechModel",Eh]],["unispeech-sat",["UniSpeechSatModel",Sh]],["hubert",["HubertModel",Dh]],["wavlm",["WavLMModel",zh]],["audio-spectrogram-transformer",["ASTModel",Co]],["vits",["VitsModel",Ol]],["pyannote",["PyAnnoteModel",bh]],["wespeaker-resnet",["WeSpeakerResNetModel",Th]],["detr",["DetrModel",ip]],["rt_detr",["RTDetrModel",lp]],["rt_detr_v2",["RTDetrV2Model",cp]],["rf_detr",["RFDetrModel",hp]],["d_fine",["DFineModel",_p]],["table-transformer",["TableTransformerModel",wp]],["vit",["ViTModel",kd]],["ijepa",["IJepaModel",Fd]],["pvt",["PvtModel",Bd]],["vit_msn",["ViTMSNModel",Nd]],["vit_mae",["ViTMAEModel",jd]],["groupvit",["GroupViTModel",Wd]],["fastvit",["FastViTModel",Gd]],["mobilevit",["MobileViTModel",Qd]],["mobilevitv2",["MobileViTV2Model",Yd]],["owlvit",["OwlViTModel",Zd]],["owlv2",["Owlv2Model",tp]],["beit",["BeitModel",sp]],["deit",["DeiTModel",bp]],["hiera",["HieraModel",xp]],["convnext",["ConvNextModel",Yp]],["convnextv2",["ConvNextV2Model",Zp]],["dinov2",["Dinov2Model",th]],["dinov2_with_registers",["Dinov2WithRegistersModel",sh]],["resnet",["ResNetModel",Ep]],["swin",["SwinModel",Cp]],["swin2sr",["Swin2SRModel",Ip]],["donut-swin",["DonutSwinModel",Xp]],["yolos",["YolosModel",ah]],["dpt",["DPTModel",Ap]],["glpn",["GLPNModel",Hp]],["hifigan",["SpeechT5HifiGan",Hh]],["efficientnet",["EfficientNetModel",cm]],["decision_transformer",["DecisionTransformerModel",Em]],["patchtst",["PatchTSTForPrediction",km]],["patchtsmixer",["PatchTSMixerForPrediction",Fm]],["mobilenet_v1",["MobileNetV1Model",pm]],["mobilenet_v2",["MobileNetV2Model",fm]],["mobilenet_v3",["MobileNetV3Model",wm]],["mobilenet_v4",["MobileNetV4Model",bm]],["maskformer",["MaskFormerModel",Gp]],["mgp-str",["MgpstrForSceneTextRecognition",Im]],["style_text_to_speech_2",["StyleTextToSpeech2Model",Wh]]]),_v=new Map([["t5",["T5Model",be]],["longt5",["LongT5Model",st]],["mt5",["MT5Model",kt]],["bart",["BartModel",wr]],["mbart",["MBartModel",cr]],["marian",["MarianModel",hh]],["whisper",["WhisperModel",Mi]],["m2m_100",["M2M100Model",fh]],["blenderbot",["BlenderbotModel",Mr]],["blenderbot-small",["BlenderbotSmallModel",ts]]]),gv=new Map([["mimi",["MimiModel",Rm]],["dac",["DacModel",Wm]],["snac",["SnacModel",Hm]]]),wv=new Map([["bloom",["BloomModel",Ed]],["jais",["JAISModel",Hr]],["gpt2",["GPT2Model",Bi]],["gptj",["GPTJModel",Ui]],["gpt_bigcode",["GPTBigCodeModel",Yn]],["gpt_neo",["GPTNeoModel",Ri]],["gpt_neox",["GPTNeoXModel",Qn]],["codegen",["CodeGenModel",Wi]],["llama",["LlamaModel",h]],["exaone",["ExaoneModel",ut]],["olmo",["OlmoModel",zo]],["olmo2",["Olmo2Model",td]],["mobilellm",["MobileLLMModel",Rt]],["granite",["GraniteModel",sd]],["cohere",["CohereModel",id]],["gemma",["GemmaModel",ad]],["gemma2",["Gemma2Model",ud]],["gemma3_text",["Gemma3Model",dd]],["helium",["HeliumModel",R]],["glm",["GlmModel",Ie]],["openelm",["OpenELMModel",hd]],["qwen2",["Qwen2Model",fd]],["qwen3",["Qwen3Model",gd]],["phi",["PhiModel",bd]],["phi3",["Phi3Model",xd]],["mpt",["MptModel",Cd]],["opt",["OPTModel",$d]],["mistral",["MistralModel",Xh]],["starcoder2",["Starcoder2Model",Jh]],["falcon",["FalconModel",em]],["stablelm",["StableLmModel",lm]]]),Nl=new Map([["speecht5",["SpeechT5ForSpeechToText",Gh]],["whisper",["WhisperForConditionalGeneration",Nn]],["lite-whisper",["LiteWhisperForConditionalGeneration",bi]],["moonshine",["MoonshineForConditionalGeneration",xi]]]),Xm=new Map([["speecht5",["SpeechT5ForTextToSpeech",Kh]]]),Ym=new Map([["vits",["VitsModel",Ol]],["musicgen",["MusicgenForConditionalGeneration",zl]]]),Jm=new Map([["bert",["BertForSequenceClassification",ze]],["modernbert",["ModernBertForSequenceClassification",nt]],["roformer",["RoFormerForSequenceClassification",S]],["electra",["ElectraForSequenceClassification",Pe]],["esm",["EsmForSequenceClassification",Ur]],["convbert",["ConvBertForSequenceClassification",L]],["camembert",["CamembertForSequenceClassification",tr]],["deberta",["DebertaForSequenceClassification",ls]],["deberta-v2",["DebertaV2ForSequenceClassification",us]],["mpnet",["MPNetForSequenceClassification",on]],["albert",["AlbertForSequenceClassification",k]],["distilbert",["DistilBertForSequenceClassification",es]],["roberta",["RobertaForSequenceClassification",er]],["xlm",["XLMForSequenceClassification",gi]],["xlm-roberta",["XLMRobertaForSequenceClassification",To]],["bart",["BartForSequenceClassification",hr]],["mbart",["MBartForSequenceClassification",yr]],["mobilebert",["MobileBertForSequenceClassification",tn]],["squeezebert",["SqueezeBertForSequenceClassification",cn]]]),Zm=new Map([["bert",["BertForTokenClassification",Ke]],["modernbert",["ModernBertForTokenClassification",et]],["roformer",["RoFormerForTokenClassification",ee]],["electra",["ElectraForTokenClassification",gt]],["esm",["EsmForTokenClassification",Ds]],["convbert",["ConvBertForTokenClassification",oe]],["camembert",["CamembertForTokenClassification",Wt]],["deberta",["DebertaForTokenClassification",Jr]],["deberta-v2",["DebertaV2ForTokenClassification",Lr]],["mpnet",["MPNetForTokenClassification",an]],["distilbert",["DistilBertForTokenClassification",Or]],["roberta",["RobertaForTokenClassification",dr]],["xlm",["XLMForTokenClassification",Mo]],["xlm-roberta",["XLMRobertaForTokenClassification",Eo]]]),Ul=new Map([["t5",["T5ForConditionalGeneration",Fe]],["longt5",["LongT5ForConditionalGeneration",it]],["mt5",["MT5ForConditionalGeneration",vt]],["bart",["BartForConditionalGeneration",rr]],["mbart",["MBartForConditionalGeneration",Cs]],["marian",["MarianMTModel",mh]],["m2m_100",["M2M100ForConditionalGeneration",_h]],["blenderbot",["BlenderbotForConditionalGeneration",$r]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Ir]]]),Vl=new Map([["bloom",["BloomForCausalLM",Pd]],["gpt2",["GPT2LMHeadModel",zi]],["jais",["JAISLMHeadModel",gn]],["gptj",["GPTJForCausalLM",yn]],["gpt_bigcode",["GPTBigCodeForCausalLM",Vi]],["gpt_neo",["GPTNeoForCausalLM",ji]],["gpt_neox",["GPTNeoXForCausalLM",Ni]],["codegen",["CodeGenForCausalLM",Gi]],["llama",["LlamaForCausalLM",C]],["exaone",["ExaoneForCausalLM",xt]],["olmo",["OlmoForCausalLM",ed]],["olmo2",["Olmo2ForCausalLM",rd]],["mobilellm",["MobileLLMForCausalLM",vr]],["granite",["GraniteForCausalLM",nd]],["cohere",["CohereForCausalLM",od]],["gemma",["GemmaForCausalLM",ld]],["gemma2",["Gemma2ForCausalLM",cd]],["gemma3_text",["Gemma3ForCausalLM",pd]],["helium",["HeliumForCausalLM",q]],["glm",["GlmForCausalLM",Ne]],["openelm",["OpenELMForCausalLM",md]],["qwen2",["Qwen2ForCausalLM",_d]],["qwen3",["Qwen3ForCausalLM",wd]],["phi",["PhiForCausalLM",vd]],["phi3",["Phi3ForCausalLM",Td]],["mpt",["MptForCausalLM",Sd]],["opt",["OPTForCausalLM",Id]],["mbart",["MBartForCausalLM",ds]],["mistral",["MistralForCausalLM",Yh]],["starcoder2",["Starcoder2ForCausalLM",Zh]],["falcon",["FalconForCausalLM",tm]],["trocr",["TrOCRForCausalLM",Qh]],["stablelm",["StableLmForCausalLM",um]],["phi3_v",["Phi3VForCausalLM",Si]]]),yv=new Map([["multi_modality",["MultiModalityCausalLM",Cm]]]),ef=new Map([["bert",["BertForMaskedLM",Oe]],["modernbert",["ModernBertForMaskedLM",Ye]],["roformer",["RoFormerForMaskedLM",E]],["electra",["ElectraForMaskedLM",Re]],["esm",["EsmForMaskedLM",gr]],["convbert",["ConvBertForMaskedLM",bt]],["camembert",["CamembertForMaskedLM",At]],["deberta",["DebertaForMaskedLM",Yr]],["deberta-v2",["DebertaV2ForMaskedLM",Gr]],["mpnet",["MPNetForMaskedLM",nn]],["albert",["AlbertForMaskedLM",ie]],["distilbert",["DistilBertForMaskedLM",je]],["roberta",["RobertaForMaskedLM",lr]],["xlm",["XLMWithLMHeadModel",yo]],["xlm-roberta",["XLMRobertaForMaskedLM",xo]],["mobilebert",["MobileBertForMaskedLM",Ls]],["squeezebert",["SqueezeBertForMaskedLM",un]]]),tf=new Map([["bert",["BertForQuestionAnswering",He]],["roformer",["RoFormerForQuestionAnswering",de]],["electra",["ElectraForQuestionAnswering",ot]],["convbert",["ConvBertForQuestionAnswering",V]],["camembert",["CamembertForQuestionAnswering",Dr]],["deberta",["DebertaForQuestionAnswering",Ts]],["deberta-v2",["DebertaV2ForQuestionAnswering",Os]],["mpnet",["MPNetForQuestionAnswering",Gs]],["albert",["AlbertForQuestionAnswering",Y]],["distilbert",["DistilBertForQuestionAnswering",Nr]],["roberta",["RobertaForQuestionAnswering",Br]],["xlm",["XLMForQuestionAnswering",bo]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Po]],["mobilebert",["MobileBertForQuestionAnswering",rn]],["squeezebert",["SqueezeBertForQuestionAnswering",dn]]]),Wl=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Un]],["idefics3",["Idefics3ForConditionalGeneration",Gn]],["smolvlm",["SmolVLMForConditionalGeneration",Ci]]]),rf=new Map([["llava",["LlavaForConditionalGeneration",Vn]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Ti]],["moondream1",["Moondream1ForConditionalGeneration",$o]],["florence2",["Florence2ForConditionalGeneration",ko]],["qwen2-vl",["Qwen2VLForConditionalGeneration",Md]],["idefics3",["Idefics3ForConditionalGeneration",Gn]],["smolvlm",["SmolVLMForConditionalGeneration",Ci]],["paligemma",["PaliGemmaForConditionalGeneration",Ei]],["llava_qwen2",["LlavaQwen2ForCausalLM",Ao]],["gemma3n",["Gemma3nForConditionalGeneration",Pi]]]),sf=new Map([["ultravox",["UltravoxModel",Lm]]]),Mv=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Un]]]),nf=new Map([["vit",["ViTForImageClassification",Ad]],["ijepa",["IJepaForImageClassification",Od]],["pvt",["PvtForImageClassification",zd]],["vit_msn",["ViTMSNForImageClassification",Ud]],["fastvit",["FastViTForImageClassification",Kd]],["mobilevit",["MobileViTForImageClassification",Xd]],["mobilevitv2",["MobileViTV2ForImageClassification",Jd]],["beit",["BeitForImageClassification",np]],["deit",["DeiTForImageClassification",vp]],["hiera",["HieraForImageClassification",Tp]],["convnext",["ConvNextForImageClassification",Jp]],["convnextv2",["ConvNextV2ForImageClassification",eh]],["dinov2",["Dinov2ForImageClassification",rh]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",nh]],["resnet",["ResNetForImageClassification",Pp]],["swin",["SwinForImageClassification",Sp]],["segformer",["SegformerForImageClassification",om]],["efficientnet",["EfficientNetForImageClassification",dm]],["mobilenet_v1",["MobileNetV1ForImageClassification",hm]],["mobilenet_v2",["MobileNetV2ForImageClassification",_m]],["mobilenet_v3",["MobileNetV3ForImageClassification",ym]],["mobilenet_v4",["MobileNetV4ForImageClassification",vm]]]),of=new Map([["detr",["DetrForObjectDetection",op]],["rt_detr",["RTDetrForObjectDetection",up]],["rt_detr_v2",["RTDetrV2ForObjectDetection",dp]],["rf_detr",["RFDetrForObjectDetection",mp]],["d_fine",["DFineForObjectDetection",gp]],["table-transformer",["TableTransformerForObjectDetection",yp]],["yolos",["YolosForObjectDetection",lh]]]),af=new Map([["owlvit",["OwlViTForObjectDetection",ep]],["owlv2",["Owlv2ForObjectDetection",rp]],["grounding-dino",["GroundingDinoForObjectDetection",oh]]]),ti=new Map([["detr",["DetrForSegmentation",ul]],["clipseg",["CLIPSegForImageSegmentation",ft]]]),lf=new Map([["segformer",["SegformerForSemanticSegmentation",am]],["sapiens",["SapiensForSemanticSegmentation",Lp]],["swin",["SwinForSemanticSegmentation",$p]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",mm]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",gm]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",Mm]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",xm]]]),uf=new Map([["detr",["DetrForSegmentation",ul]],["maskformer",["MaskFormerForInstanceSegmentation",Kp]]]),cf=new Map([["sam",["SamModel",dh]]]),df=new Map([["wav2vec2",["Wav2Vec2ForCTC",wh]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Fh]],["unispeech",["UniSpeechForCTC",Ph]],["unispeech-sat",["UniSpeechSatForCTC",$h]],["wavlm",["WavLMForCTC",Rh]],["hubert",["HubertForCTC",Lh]]]),pf=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",yh]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Oh]],["unispeech",["UniSpeechForSequenceClassification",Ch]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Ih]],["wavlm",["WavLMForSequenceClassification",jh]],["hubert",["HubertForSequenceClassification",Bh]],["audio-spectrogram-transformer",["ASTForAudioClassification",So]]]),hf=new Map([["wavlm",["WavLMForXVector",Nh]]]),mf=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",kh]],["wavlm",["WavLMForAudioFrameClassification",Uh]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Mh]],["pyannote",["PyAnnoteForAudioFrameClassification",vh]]]),ff=new Map([["vitmatte",["VitMatteForImageMatting",qd]]]),bv=new Map([["patchtst",["PatchTSTForPrediction",Am]],["patchtsmixer",["PatchTSMixerForPrediction",Om]]]),_f=new Map([["swin2sr",["Swin2SRForImageSuperResolution",kp]]]),gf=new Map([["dpt",["DPTForDepthEstimation",Fp]],["depth_anything",["DepthAnythingForDepthEstimation",Dp]],["glpn",["GLPNForDepthEstimation",qp]],["sapiens",["SapiensForDepthEstimation",Bp]],["depth_pro",["DepthProForDepthEstimation",jp]],["metric3d",["Metric3DForDepthEstimation",Up]],["metric3dv2",["Metric3Dv2ForDepthEstimation",Wp]]]),wf=new Map([["sapiens",["SapiensForNormalEstimation",zp]]]),yf=new Map([["vitpose",["VitPoseForPoseEstimation",Ld]]]),Mf=new Map([["clip",["CLIPVisionModelWithProjection",Lo]],["siglip",["SiglipVisionModel",ki]],["jina_clip",["JinaCLIPVisionModel",Di]]]),bf=[[fv,v.EncoderOnly],[_v,v.EncoderDecoder],[wv,v.DecoderOnly],[gv,v.AutoEncoder],[Jm,v.EncoderOnly],[Zm,v.EncoderOnly],[Ul,v.Seq2Seq],[Nl,v.Seq2Seq],[Vl,v.DecoderOnly],[yv,v.MultiModality],[ef,v.EncoderOnly],[tf,v.EncoderOnly],[Wl,v.Vision2Seq],[rf,v.ImageTextToText],[sf,v.AudioTextToText],[nf,v.EncoderOnly],[ti,v.EncoderOnly],[uf,v.EncoderOnly],[lf,v.EncoderOnly],[ff,v.EncoderOnly],[bv,v.EncoderOnly],[_f,v.EncoderOnly],[gf,v.EncoderOnly],[wf,v.EncoderOnly],[yf,v.EncoderOnly],[of,v.EncoderOnly],[af,v.EncoderOnly],[cf,v.MaskGeneration],[df,v.EncoderOnly],[pf,v.EncoderOnly],[Xm,v.Seq2Seq],[Ym,v.EncoderOnly],[hf,v.EncoderOnly],[mf,v.EncoderOnly],[Mf,v.EncoderOnly]];for(const[M,w]of bf)for(const[G,pe]of M.values())T.set(G,w),b.set(pe,G),x.set(G,pe);const vv=[["MusicgenForConditionalGeneration",zl,v.Musicgen],["Phi3VForCausalLM",Si,v.Phi3V],["CLIPTextModelWithProjection",$i,v.EncoderOnly],["SiglipTextModel",Ii,v.EncoderOnly],["JinaCLIPTextModel",Bo,v.EncoderOnly],["ClapTextModelWithProjection",sm,v.EncoderOnly],["ClapAudioModelWithProjection",nm,v.EncoderOnly],["DacEncoderModel",Gm,v.EncoderOnly],["DacDecoderModel",Km,v.EncoderOnly],["MimiEncoderModel",jm,v.EncoderOnly],["MimiDecoderModel",Nm,v.EncoderOnly],["SnacEncoderModel",qm,v.EncoderOnly],["SnacDecoderModel",Qm,v.EncoderOnly],["Gemma3nForConditionalGeneration",Pi,v.ImageAudioTextToText]];for(const[M,w,G]of vv)T.set(M,G),b.set(w,M),x.set(M,w);const vf=new Map([["modnet",ti],["birefnet",ti],["isnet",ti],["ben",ti]]);for(const[M,w]of vf.entries())w.set(M,["PreTrainedModel",Z]),T.set(M,v.EncoderOnly),b.set(Z,M),x.set(M,Z);class xv extends jt{static MODEL_CLASS_MAPPINGS=bf.map(w=>w[0]);static BASE_IF_FAIL=!0}class Tv extends jt{static MODEL_CLASS_MAPPINGS=[Jm]}class Ev extends jt{static MODEL_CLASS_MAPPINGS=[Zm]}class Pv extends jt{static MODEL_CLASS_MAPPINGS=[Ul]}class Cv extends jt{static MODEL_CLASS_MAPPINGS=[Nl]}class Sv extends jt{static MODEL_CLASS_MAPPINGS=[Xm]}class $v extends jt{static MODEL_CLASS_MAPPINGS=[Ym]}class Iv extends jt{static MODEL_CLASS_MAPPINGS=[Vl]}class kv extends jt{static MODEL_CLASS_MAPPINGS=[ef]}class Av extends jt{static MODEL_CLASS_MAPPINGS=[tf]}class Fv extends jt{static MODEL_CLASS_MAPPINGS=[Wl]}class Ov extends jt{static MODEL_CLASS_MAPPINGS=[nf]}class Dv extends jt{static MODEL_CLASS_MAPPINGS=[ti]}class Lv extends jt{static MODEL_CLASS_MAPPINGS=[lf]}class Bv extends jt{static MODEL_CLASS_MAPPINGS=[uf]}class zv extends jt{static MODEL_CLASS_MAPPINGS=[of]}class Rv extends jt{static MODEL_CLASS_MAPPINGS=[af]}class jv extends jt{static MODEL_CLASS_MAPPINGS=[cf]}class Nv extends jt{static MODEL_CLASS_MAPPINGS=[df]}class Uv extends jt{static MODEL_CLASS_MAPPINGS=[pf]}class Vv extends jt{static MODEL_CLASS_MAPPINGS=[hf]}class Wv extends jt{static MODEL_CLASS_MAPPINGS=[mf]}class Gv extends jt{static MODEL_CLASS_MAPPINGS=[Mv]}class Kv extends jt{static MODEL_CLASS_MAPPINGS=[ff]}class Hv extends jt{static MODEL_CLASS_MAPPINGS=[_f]}class qv extends jt{static MODEL_CLASS_MAPPINGS=[gf]}class Qv extends jt{static MODEL_CLASS_MAPPINGS=[wf]}class Xv extends jt{static MODEL_CLASS_MAPPINGS=[yf]}class Yv extends jt{static MODEL_CLASS_MAPPINGS=[Mf]}class Jv extends jt{static MODEL_CLASS_MAPPINGS=[rf]}class Zv extends jt{static MODEL_CLASS_MAPPINGS=[sf]}class ex extends xe{constructor({logits:w,past_key_values:G,encoder_outputs:pe,decoder_attentions:we=null,cross_attentions:ve=null}){super(),this.logits=w,this.past_key_values=G,this.encoder_outputs=pe,this.decoder_attentions=we,this.cross_attentions=ve}}class Tt extends xe{constructor({logits:w,...G}){super(),this.logits=w;const pe=Object.values(G);pe.length>0&&(this.attentions=pe)}}class xf extends xe{constructor({logits:w,embeddings:G}){super(),this.logits=w,this.embeddings=G}}class Er extends xe{constructor({logits:w}){super(),this.logits=w}}class kr extends xe{constructor({logits:w}){super(),this.logits=w}}class zr extends xe{constructor({start_logits:w,end_logits:G}){super(),this.start_logits=w,this.end_logits=G}}class bn extends xe{constructor({logits:w}){super(),this.logits=w}}class tx extends xe{constructor({logits:w,past_key_values:G}){super(),this.logits=w,this.past_key_values=G}}class Tf extends xe{constructor({alphas:w}){super(),this.alphas=w}}class Ef extends xe{constructor({waveform:w,spectrogram:G}){super(),this.waveform=w,this.spectrogram=G}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class i extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,d=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=d,this.window=(0,n.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(a,l){return(0,n.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:l,transpose:!0})}async _call(a){(0,s.validate_audio_inputs)(a,"ASTFeatureExtractor");const l=await this._extract_fbank_features(a,this.config.max_length);if(this.config.do_normalize){const d=this.std*2,c=l.data;for(let u=0;u<c.length;++u)c[u]=(c[u]-this.mean)/d}return{input_values:l.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoFeatureExtractor:()=>o});var s=t("./src/utils/constants.js"),n=t("./src/utils/hub.js");t("./src/base/feature_extraction_utils.js");var i=t("./src/models/feature_extractors.js");class o{static async from_pretrained(l,d={}){const c=await(0,n.getModelJSON)(l,s.FEATURE_EXTRACTOR_NAME,!0,d),u=c.feature_extractor_type,p=i[u];if(!p)throw new Error(`Unknown feature_extractor_type: '${u}'. Please report this at ${s.GITHUB_ISSUE_URL}.`);return new p(c)}}},"./src/models/auto/image_processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoImageProcessor:()=>a});var s=t("./src/utils/constants.js"),n=t("./src/utils/hub.js"),i=t("./src/base/image_processors_utils.js"),o=t("./src/models/image_processors.js");class a{static async from_pretrained(d,c={}){const u=await(0,n.getModelJSON)(d,s.IMAGE_PROCESSOR_NAME,!0,c),p=u.image_processor_type??u.feature_extractor_type;let _=o[p?.replace(/Fast$/,"")];return _||(p!==void 0&&console.warn(`Image processor type '${p}' not found, assuming base ImageProcessor. Please report this at ${s.GITHUB_ISSUE_URL}.`),_=i.ImageProcessor),new _(u)}}},"./src/models/auto/processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoProcessor:()=>d});var s=t("./src/utils/constants.js"),n=t("./src/utils/hub.js"),i=t("./src/base/processing_utils.js"),o=t("./src/models/processors.js"),a=t("./src/models/image_processors.js"),l=t("./src/models/feature_extractors.js");class d{static async from_pretrained(u,p={}){const _=await(0,n.getModelJSON)(u,s.IMAGE_PROCESSOR_NAME,!0,p),{image_processor_type:f,feature_extractor_type:P,processor_class:A}=_;if(A&&o[A])return o[A].from_pretrained(u,p);if(!f&&!P)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const y={};if(f){const I=a[f.replace(/Fast$/,"")];if(!I)throw new Error(`Unknown image_processor_type: '${f}'.`);y.image_processor=new I(_)}if(P){const I=a[P];if(I)y.image_processor=new I(_);else{const v=l[P];if(!v)throw new Error(`Unknown feature_extractor_type: '${P}'.`);y.feature_extractor=new v(_)}}const g={};return new i.Processor(g,y,null)}}},"./src/models/beit/image_processing_beit.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,r,t)=>{t.r(r),t.d(r,{BitImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,r,t)=>{t.r(r),t.d(r,{ChineseCLIPFeatureExtractor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,r,t)=>{t.r(r),t.d(r,{ClapFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class i extends s.FeatureExtractor{constructor(a){super(a),this.mel_filters=(0,n.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,n.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,n.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(a,l,d,c){let u;const p=a.length-l;if(p>0)if(d==="rand_trunc"){const _=Math.floor(Math.random()*(p+1));a=a.subarray(_,_+l),u=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${d}" not implemented`);else{if(p<0){let _=new Float64Array(l);if(_.set(a),c==="repeat")for(let f=a.length;f<l;f+=a.length)_.set(a.subarray(0,Math.min(a.length,l-f)),f);else if(c==="repeatpad")for(let f=a.length;f<-p;f+=a.length)_.set(a,f);a=_}if(d==="fusion")throw new Error(`Truncation strategy "${d}" not implemented`);u=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}return u.unsqueeze_(0)}async _extract_fbank_features(a,l,d=null){return(0,n.spectrogram)(a,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:l,log_mel:"dB",max_num_frames:d,do_pad:!1,transpose:!0})}async _call(a,{max_length:l=null}={}){return(0,s.validate_audio_inputs)(a,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(a,l??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,r,t)=>{t.r(r),t.d(r,{CLIPFeatureExtractor:()=>i,CLIPImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}},"./src/models/convnext/image_processing_convnext.js":(e,r,t)=>{t.r(r),t.d(r,{ConvNextFeatureExtractor:()=>i,ConvNextImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(a){super(a),this.crop_pct=this.config.crop_pct??224/256}async resize(a){const l=this.size?.shortest_edge;if(l===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(l<384){const d=Math.floor(l/this.crop_pct),[c,u]=this.get_resize_output_image_size(a,{shortest_edge:d});a=await a.resize(c,u,{resample:this.resample}),a=await a.center_crop(l,l)}else a=await a.resize(l,l,{resample:this.resample});return a}}class i extends n{}},"./src/models/dac/feature_extraction_dac.js":(e,r,t)=>{t.r(r),t.d(r,{DacFeatureExtractor:()=>n});var s=t("./src/models/encodec/feature_extraction_encodec.js");class n extends s.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(e,r,t)=>{t.r(r),t.d(r,{DeiTFeatureExtractor:()=>i,DeiTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}},"./src/models/detr/image_processing_detr.js":(e,r,t)=>{t.r(r),t.d(r,{DetrFeatureExtractor:()=>o,DetrImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends s.ImageProcessor{async _call(l){const d=await super._call(l),c=[d.pixel_values.dims[0],64,64],u=(0,n.full)(c,1n);return{...d,pixel_mask:u}}post_process_object_detection(...l){return(0,s.post_process_object_detection)(...l)}post_process_panoptic_segmentation(...l){return(0,s.post_process_panoptic_segmentation)(...l)}post_process_instance_segmentation(...l){return(0,s.post_process_instance_segmentation)(...l)}}class o extends i{}},"./src/models/donut/image_processing_donut.js":(e,r,t)=>{t.r(r),t.d(r,{DonutFeatureExtractor:()=>i,DonutImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{pad_image(a,l,d,c={}){const[u,p,_]=l;let f=this.image_mean;Array.isArray(this.image_mean)||(f=new Array(_).fill(f));let P=this.image_std;Array.isArray(P)||(P=new Array(_).fill(f));const A=f.map((y,g)=>-y/P[g]);return super.pad_image(a,l,d,{center:!0,constant_values:A,...c})}}class i extends n{}},"./src/models/dpt/image_processing_dpt.js":(e,r,t)=>{t.r(r),t.d(r,{DPTFeatureExtractor:()=>i,DPTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,r,t)=>{t.r(r),t.d(r,{EfficientNetImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(o){super(o),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(a=>a*a))}}},"./src/models/encodec/feature_extraction_encodec.js":(e,r,t)=>{t.r(r),t.d(r,{EncodecFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class i extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"EncodecFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=this.config.feature_size;if(a.length%l!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${l}).`);const d=[1,l,a.length/l];return{input_values:new n.Tensor("float32",a,d)}}}},"./src/models/feature_extractors.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>s.ASTFeatureExtractor,ClapFeatureExtractor:()=>i.ClapFeatureExtractor,DacFeatureExtractor:()=>o.DacFeatureExtractor,EncodecFeatureExtractor:()=>n.EncodecFeatureExtractor,Gemma3nAudioFeatureExtractor:()=>a.Gemma3nAudioFeatureExtractor,ImageFeatureExtractor:()=>A.ImageProcessor,MoonshineFeatureExtractor:()=>l.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>d.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>c.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>u.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>p.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>_.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>f.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>P.WhisperFeatureExtractor});var s=t("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),n=t("./src/models/encodec/feature_extraction_encodec.js"),i=t("./src/models/clap/feature_extraction_clap.js"),o=t("./src/models/dac/feature_extraction_dac.js"),a=t("./src/models/gemma3n/feature_extraction_gemma3n.js"),l=t("./src/models/moonshine/feature_extraction_moonshine.js"),d=t("./src/models/pyannote/feature_extraction_pyannote.js"),c=t("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),u=t("./src/models/snac/feature_extraction_snac.js"),p=t("./src/models/speecht5/feature_extraction_speecht5.js"),_=t("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),f=t("./src/models/wespeaker/feature_extraction_wespeaker.js"),P=t("./src/models/whisper/feature_extraction_whisper.js"),A=t("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");class o extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;constructor(l,d,c){super(l,d,c);const{tasks_answer_post_processing_type:u,task_prompts_without_inputs:p,task_prompts_with_input:_}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(u??{})),this.task_prompts_without_inputs=new Map(Object.entries(p??{})),this.task_prompts_with_input=new Map(Object.entries(_??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(l){typeof l=="string"&&(l=[l]);const d=[];for(const c of l)if(this.task_prompts_without_inputs.has(c))d.push(this.task_prompts_without_inputs.get(c));else{for(const[u,p]of this.task_prompts_with_input)if(c.includes(u)){d.push(p.replaceAll("{input}",c).replaceAll(u,""));break}d.length!==l.length&&d.push(c)}return d}post_process_generation(l,d,c){const u=this.tasks_answer_post_processing_type.get(d)??"pure_text";l=l.replaceAll("<s>","").replaceAll("</s>","");let p;switch(u){case"pure_text":p=l;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const _=u==="ocr"?"quad_boxes":"bboxes",f=l.matchAll(this.regexes[_]),P=[],A=[];for(const[y,g,...I]of f)P.push(g?g.trim():P.at(-1)??""),A.push(I.map((v,T)=>(Number(v)+.5)/this.size_per_bin*c[T%2]));p={labels:P,[_]:A};break;default:throw new Error(`Task "${d}" (of type "${u}") not yet implemented.`)}return{[d]:p}}async _call(l,d=null,c={}){if(!l&&!d)throw new Error("Either text or images must be provided");const u=await this.image_processor(l,c),p=d?this.tokenizer(this.construct_prompts(d),c):{};return{...u,...p}}}},"./src/models/gemma3n/feature_extraction_gemma3n.js":(e,r,t)=>{t.r(r),t.d(r,{Gemma3nAudioFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(l){super(l);const{fft_length:d,feature_size:c,min_frequency:u,max_frequency:p,sampling_rate:_,frame_length:f}=this.config,P=(0,i.mel_filter_bank)(Math.floor(1+d/2),c,u,p,_,null,"htk",!1);this.mel_filters=P,this.window=(0,i.window_function)(f,"hann")}async _extract_fbank_features(l,d){return(0,i.spectrogram)(l,this.window,this.config.frame_length,this.config.hop_length,{fft_length:this.config.fft_length,center:!1,onesided:!0,preemphasis:this.config.preemphasis,preemphasis_htk_flavor:this.config.preemphasis_htk_flavor,mel_filters:this.mel_filters,log_mel:"log",mel_floor:this.config.mel_floor,remove_dc_offset:!1,transpose:!0})}async _call(l,{max_length:d=48e4,truncation:c=!0,padding:u=!0,pad_to_multiple_of:p=128}={}){if((0,s.validate_audio_inputs)(l,"Gemma3nAudioFeatureExtractor"),c&&l.length>d&&(l=l.slice(0,d)),u&&l.length%p!==0){const P=p-l.length%p,A=new Float64Array(l.length+P);A.set(l),this.config.padding_value!==0&&A.fill(this.config.padding_value,l.length),l=A}const _=await this._extract_fbank_features(l,this.config.max_length),f=(0,n.full)([1,_.dims[0]],!0);return{input_features:_.unsqueeze_(0),input_features_mask:f}}}},"./src/models/gemma3n/processing_gemma3n.js":(e,r,t)=>{t.r(r),t.d(r,{Gemma3nProcessor:()=>a});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js");t("./src/utils/image.js"),t("./src/utils/audio.js");class a extends s.Processor{static image_processor_class=n.AutoImageProcessor;static feature_extractor_class=i.AutoFeatureExtractor;static tokenizer_class=o.AutoTokenizer;static uses_processor_config=!0;static uses_chat_template_file=!0;constructor(d,c,u){super(d,c,u),this.audio_seq_length=this.config.audio_seq_length,this.image_seq_length=this.config.image_seq_length;const{audio_token_id:p,boa_token:_,audio_token:f,eoa_token:P,image_token_id:A,boi_token:y,image_token:g,eoi_token:I}=this.tokenizer.config;this.audio_token_id=p,this.boa_token=_,this.audio_token=f;const v=f.repeat(this.audio_seq_length);this.full_audio_sequence=`

${_}${v}${P}

`,this.image_token_id=A,this.boi_token=y,this.image_token=g;const T=g.repeat(this.image_seq_length);this.full_image_sequence=`

${y}${T}${I}

`}async _call(d,c=null,u=null,p={}){typeof d=="string"&&(d=[d]);let _;u&&(_=await this.feature_extractor(u,p),d=d.map(A=>A.replaceAll(this.audio_token,this.full_audio_sequence)));let f;return c&&(f=await this.image_processor(c,p),d=d.map(A=>A.replaceAll(this.image_token,this.full_image_sequence))),{...this.tokenizer(d,p),...f,..._}}}},"./src/models/glpn/image_processing_glpn.js":(e,r,t)=>{t.r(r),t.d(r,{GLPNFeatureExtractor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends s.ImageProcessor{async _call(a){const l=await super._call(a),d=l.pixel_values.dims,c=(0,n.ones)([d[0],d[2],d[3]]);return{...l,pixel_mask:c}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js"),o=t("./src/base/image_processors_utils.js");function a(d,c){const p=d.dims.at(-1)-1,_=d.tolist();_.fill(!1,0,1),_.fill(!1,p);const f=c.tolist();return _.map((P,A)=>P?A:null).filter(P=>P!==null).map(P=>f[P])}class l extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;async _call(c,u,p={}){const _=c?await this.image_processor(c,p):{};return{...u?this.tokenizer(u,p):{},..._}}post_process_grounded_object_detection(c,u,{box_threshold:p=.25,text_threshold:_=.25,target_sizes:f=null}={}){const{logits:P,pred_boxes:A}=c,y=P.dims[0];if(f!==null&&f.length!==y)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const g=P.dims.at(1),I=P.sigmoid(),v=I.max(-1).tolist(),T=A.tolist().map(b=>b.map($=>(0,o.center_to_corners_format)($))),x=[];for(let b=0;b<y;++b){const $=f!==null?f[b]:null;$!==null&&(T[b]=T[b].map(z=>z.map((te,W)=>te*$[(W+1)%2])));const j=v[b],B=[],X=[],re=[];for(let z=0;z<g;++z){const te=j[z];if(te<=p)continue;const W=T[b][z],K=I[b][z];B.push(te),re.push(W);const se=a(K.gt(_),u[b]);X.push(se)}x.push({scores:B,boxes:re,labels:this.batch_decode(X)})}return x}}},"./src/models/idefics3/image_processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends s.ImageProcessor{constructor(a){super(a),this.do_image_splitting=a.do_image_splitting??!0,this.max_image_size=a.max_image_size}get_resize_for_vision_encoder(a,l){let[d,c]=a.dims.slice(-2);const u=c/d;return c>=d?(c=Math.ceil(c/l)*l,d=Math.floor(c/u),d=Math.ceil(d/l)*l):(d=Math.ceil(d/l)*l,c=Math.floor(d*u),c=Math.ceil(c/l)*l),{height:d,width:c}}async _call(a,{do_image_splitting:l=null,return_row_col_info:d=!1}={}){let c;if(!Array.isArray(a))c=[[a]];else{if(a.length===0||!a[0])throw new Error("No images provided.");Array.isArray(a[0])?c=a:c=[a]}let u=[],p=[],_=[];const f=[],P=[];for(const b of c){let $=await Promise.all(b.map(X=>this.preprocess(X)));f.push(...$.map(X=>X.original_size)),P.push(...$.map(X=>X.reshaped_input_size)),$.forEach(X=>X.pixel_values.unsqueeze_(0));const{longest_edge:j}=this.max_image_size;let B;if(l??this.do_image_splitting){let X=new Array($.length),re=new Array($.length);B=await Promise.all($.map(async(z,te)=>{const W=this.get_resize_for_vision_encoder(z.pixel_values,j),K=await(0,n.interpolate_4d)(z.pixel_values,{size:[W.height,W.width]}),{frames:se,num_splits_h:J,num_splits_w:ue}=await this.split_image(K,this.max_image_size);return X[te]=J,re[te]=ue,(0,n.cat)(se,0)})),p.push(X),_.push(re)}else{const X=[j,j];B=await Promise.all($.map(re=>(0,n.interpolate_4d)(re.pixel_values,{size:X}))),p.push(new Array($.length).fill(0)),_.push(new Array($.length).fill(0))}u.push((0,n.cat)(B,0))}const A=u.length,[y,g,I,v]=u[0].dims;let T,x;if(A===1)T=u[0].unsqueeze_(0),x=(0,n.full)([A,y,I,v],!0);else{const b=Math.max(...u.map(B=>B.dims.at(0)));x=(0,n.full)([A,b,I,v],!0);const $=x.data,j=b*I*v;for(let B=0;B<A;++B){const X=u[B].dims[0];if(X<b){u[B]=(0,n.cat)([u[B],(0,n.full)([b-X,g,I,v],0)],0);const re=B*j+X*I*v,z=(B+1)*j;$.fill(!1,re,z)}}T=(0,n.stack)(u,0)}return{pixel_values:T,pixel_attention_mask:x,original_sizes:f,reshaped_input_sizes:P,...d?{rows:p,cols:_}:{}}}async split_image(a,{longest_edge:l}){const d=l,c=l,u=[],[p,_]=a.dims.slice(-2);let f=0,P=0;if(p>d||_>c){f=Math.ceil(p/d),P=Math.ceil(_/c);const A=Math.ceil(p/f),y=Math.ceil(_/P);for(let v=0;v<f;++v)for(let T=0;T<P;++T){let x,b,$,j;v===f-1?(b=p-A,j=p):(b=v*A,j=(v+1)*A),T===P-1?(x=_-y,$=_):(x=T*y,$=(T+1)*y);const B=[b,x],X=[j,$],re=await(0,n.slice)(a,B,X,[2,3]);u.push(re)}const g=d,I=c;(p!==g||_!==I)&&(a=await(0,n.interpolate_4d)(a,{size:[g,I]}))}return u.push(a),{frames:u,num_splits_h:f,num_splits_w:P}}}},"./src/models/idefics3/processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3Processor:()=>c});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");t("./src/utils/image.js");var o=t("./src/utils/core.js");function a(u,p,_,f,P,A){let y="";for(let g=0;g<p;++g){for(let I=0;I<_;++I)y+=f+`<row_${g+1}_col_${I+1}>`+P.repeat(u);y+=`
`}return y+=`
${f}${A}`+P.repeat(u)+`${f}`,y}function l(u,p,_,f){return`${p}${f}`+_.repeat(u)+`${p}`}function d(u,p,_,f,P,A){return u===0&&p===0?l(_,f,P,A):a(_,u,p,f,P,A)}class c extends s.Processor{static image_processor_class=n.AutoImageProcessor;static tokenizer_class=i.AutoTokenizer;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(p,_=null,f={}){f.return_row_col_info??=!0;let P;_&&(P=await this.image_processor(_,f)),Array.isArray(p)||(p=[p]);const A=P.rows??[new Array(p.length).fill(0)],y=P.cols??[new Array(p.length).fill(0)],g=this.config.image_seq_len,I=[],v=[];for(let x=0;x<p.length;++x){const b=p[x],$=A[x],j=y[x];I.push((0,o.count)(b,this.image_token));const B=$.map((z,te)=>d(z,j[te],g,this.fake_image_token,this.image_token,this.global_img_token)),X=b.split(this.image_token);if(X.length===0)throw new Error("The image token should be present in the text.");let re=X[0];for(let z=0;z<B.length;++z)re+=B[z]+X[z+1];v.push(re)}return{...this.tokenizer(v),...P}}}},"./src/models/image_processors.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>s.BeitFeatureExtractor,BitImageProcessor:()=>n.BitImageProcessor,CLIPFeatureExtractor:()=>o.CLIPFeatureExtractor,CLIPImageProcessor:()=>o.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>i.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>a.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>a.ConvNextImageProcessor,DPTFeatureExtractor:()=>u.DPTFeatureExtractor,DPTImageProcessor:()=>u.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>d.DetrFeatureExtractor,DetrImageProcessor:()=>d.DetrImageProcessor,DonutFeatureExtractor:()=>c.DonutFeatureExtractor,DonutImageProcessor:()=>c.DonutImageProcessor,EfficientNetImageProcessor:()=>p.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>_.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>P.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>y.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>g.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>I.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>v.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>v.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>T.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>T.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>x.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>x.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>b.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>b.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>$.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>$.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>j.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>j.MobileViTImageProcessor,NougatImageProcessor:()=>B.NougatImageProcessor,OwlViTFeatureExtractor:()=>re.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>re.OwlViTImageProcessor,Owlv2ImageProcessor:()=>X.Owlv2ImageProcessor,Phi3VImageProcessor:()=>z.Phi3VImageProcessor,PvtImageProcessor:()=>te.PvtImageProcessor,Qwen2VLImageProcessor:()=>W.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>K.RTDetrImageProcessor,SamImageProcessor:()=>se.SamImageProcessor,SegformerFeatureExtractor:()=>J.SegformerFeatureExtractor,SegformerImageProcessor:()=>J.SegformerImageProcessor,SiglipImageProcessor:()=>ue.SiglipImageProcessor,SmolVLMImageProcessor:()=>ce.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>N.Swin2SRImageProcessor,VLMImageProcessor:()=>A.VLMImageProcessor,ViTFeatureExtractor:()=>D.ViTFeatureExtractor,ViTImageProcessor:()=>D.ViTImageProcessor,VitMatteImageProcessor:()=>Q.VitMatteImageProcessor,VitPoseImageProcessor:()=>U.VitPoseImageProcessor,YolosFeatureExtractor:()=>ae.YolosFeatureExtractor,YolosImageProcessor:()=>ae.YolosImageProcessor});var s=t("./src/models/beit/image_processing_beit.js"),n=t("./src/models/bit/image_processing_bit.js"),i=t("./src/models/chinese_clip/image_processing_chinese_clip.js"),o=t("./src/models/clip/image_processing_clip.js"),a=t("./src/models/convnext/image_processing_convnext.js"),l=t("./src/models/deit/image_processing_deit.js"),d=t("./src/models/detr/image_processing_detr.js"),c=t("./src/models/donut/image_processing_donut.js"),u=t("./src/models/dpt/image_processing_dpt.js"),p=t("./src/models/efficientnet/image_processing_efficientnet.js"),_=t("./src/models/glpn/image_processing_glpn.js"),f=t("./src/models/grounding_dino/image_processing_grounding_dino.js"),P=t("./src/models/idefics3/image_processing_idefics3.js"),A=t("./src/models/janus/image_processing_janus.js"),y=t("./src/models/jina_clip/image_processing_jina_clip.js"),g=t("./src/models/llava_onevision/image_processing_llava_onevision.js"),I=t("./src/models/mask2former/image_processing_mask2former.js"),v=t("./src/models/maskformer/image_processing_maskformer.js"),T=t("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),x=t("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),b=t("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),$=t("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),j=t("./src/models/mobilevit/image_processing_mobilevit.js"),B=t("./src/models/nougat/image_processing_nougat.js"),X=t("./src/models/owlv2/image_processing_owlv2.js"),re=t("./src/models/owlvit/image_processing_owlvit.js"),z=t("./src/models/phi3_v/image_processing_phi3_v.js"),te=t("./src/models/pvt/image_processing_pvt.js"),W=t("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),K=t("./src/models/rt_detr/image_processing_rt_detr.js"),se=t("./src/models/sam/image_processing_sam.js"),J=t("./src/models/segformer/image_processing_segformer.js"),ue=t("./src/models/siglip/image_processing_siglip.js"),ce=t("./src/models/smolvlm/image_processing_smolvlm.js"),N=t("./src/models/swin2sr/image_processing_swin2sr.js"),D=t("./src/models/vit/image_processing_vit.js"),Q=t("./src/models/vitmatte/image_processing_vitmatte.js"),U=t("./src/models/vitpose/image_processing_vitpose.js"),ae=t("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLMImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(o){super({do_pad:!0,pad_size:{width:o.image_size,height:o.image_size},...o}),this.constant_values=this.config.background_color.map(a=>a*this.rescale_factor)}pad_image(o,a,l,d){return super.pad_image(o,a,l,{constant_values:this.constant_values,center:!0,...d})}}},"./src/models/janus/processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLChatProcessor:()=>d});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js"),o=t("./src/utils/core.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/image.js");class d extends s.Processor{static image_processor_class=n.AutoImageProcessor;static tokenizer_class=i.AutoTokenizer;static uses_processor_config=!0;constructor(u,p,_){super(u,p,_),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(u,{images:p=null,chat_template:_="default"}={}){p?Array.isArray(p)||(p=[p]):p=await Promise.all(u.filter(B=>B.images).flatMap(B=>B.images).map(B=>l.RawImage.read(B)));const f=this.tokenizer,P=f.apply_chat_template(u,{tokenize:!1,add_generation_prompt:!0,chat_template:_}),A=B=>f.encode(B,{add_special_tokens:!1}),y=P.split(this.image_tag),g=y.length-1;if(p.length!==g)throw new Error(`Number of images provided (${p.length}) does not match number of "${this.image_tag}" image tags (${g})`);const[I,v,T]=f.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let x=A(y[0]),b=new Array(x.length).fill(!1);for(let B=1;B<y.length;++B){const X=new Array(this.num_image_tokens).fill(I),re=A(y[B]);x=(0,o.mergeArrays)(x,[v],X,[T],re);const z=new Array(this.num_image_tokens).fill(!0);b=(0,o.mergeArrays)(b,[!1],z,[!1],new Array(re.length).fill(!1))}const $=[1,x.length],j={input_ids:new a.Tensor("int64",x,$),attention_mask:new a.Tensor("int64",new Array(x.length).fill(1),$),images_seq_mask:new a.Tensor("bool",b,$),images_emb_mask:new a.Tensor("bool",new Array(g*this.num_image_tokens).fill(!0),[1,g,this.num_image_tokens])};if(p&&p.length>0){const B=await this.image_processor(p);return B.pixel_values.unsqueeze_(0),{...j,...B}}return j}}},"./src/models/jina_clip/image_processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(o){const{resize_mode:a,fill_color:l,interpolation:d,size:c,...u}=o,p=a==="squash"?{width:c,height:c}:a==="shortest"?{shortest_edge:c}:{longest_edge:c},_=d==="bicubic"?3:2;super({...u,size:p,resample:_,do_center_crop:!0,crop_size:c,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPProcessor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");class o extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;async _call(l=null,d=null,c={}){if(!l&&!d)throw new Error("Either text or images must be provided");const u=l?this.tokenizer(l,c):{},p=d?await this.image_processor(d,c):{};return{...u,...p}}}},"./src/models/llava/processing_llava.js":(e,r,t)=>{t.r(r),t.d(r,{LlavaProcessor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");class o extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;static uses_processor_config=!0;async _call(l,d=null,c={}){const u=await this.image_processor(l,c);if(d){const[_,f]=u.pixel_values.dims.slice(-2),{image_token:P,patch_size:A,num_additional_image_tokens:y}=this.config,g=Math.floor(_/A)*Math.floor(f/A)+y;d=structuredClone(d),Array.isArray(d)||(d=[d]);for(let I=0;I<d.length;++I)d[I]=d[I].replace(P,P.repeat(g))}const p=d?this.tokenizer(d,c):{};return{...u,...p}}}},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,r,t)=>{t.r(r),t.d(r,{LlavaOnevisionImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,r,t)=>{t.r(r),t.d(r,{Mask2FormerImageProcessor:()=>n});var s=t("./src/models/maskformer/image_processing_maskformer.js");class n extends s.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,r,t)=>{t.r(r),t.d(r,{MaskFormerFeatureExtractor:()=>i,MaskFormerImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_panoptic_segmentation(...a){return(0,s.post_process_panoptic_segmentation)(...a)}post_process_instance_segmentation(...a){return(0,s.post_process_instance_segmentation)(...a)}}class i extends n{}},"./src/models/mgp_str/processing_mgp_str.js":(e,r,t)=>{t.r(r),t.d(r,{MgpstrProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js"),o=t("./src/utils/maths.js");const a={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(c,u){if(!a.hasOwnProperty(u))throw new Error(`Format ${u} is not supported.`);const[p,_]=a[u],f=this[p].bind(this),[P,A]=c.dims,y=[],g=[],I=c.tolist();for(let T=0;T<P;++T){const x=I[T],b=[],$=[];for(let B=1;B<A;++B){const[X,re]=(0,o.max)((0,o.softmax)(x[B]));if($.push(X),re==_)break;b.push(re)}const j=$.length>0?$.reduce((B,X)=>B*X,1):0;g.push(b),y.push(j)}return[f(g),y]}char_decode(c){return this.char_tokenizer.batch_decode(c).map(u=>u.replaceAll(" ",""))}bpe_decode(c){return this.bpe_tokenizer.batch_decode(c)}wp_decode(c){return this.wp_tokenizer.batch_decode(c).map(u=>u.replaceAll(" ",""))}batch_decode([c,u,p]){const[_,f]=this._decode_helper(c,"char"),[P,A]=this._decode_helper(u,"bpe"),[y,g]=this._decode_helper(p,"wp"),I=[],v=[];for(let T=0;T<_.length;++T){const[x,b]=(0,o.max)([f[T],A[T],g[T]]);I.push([_[T],P[T],y[T]][b]),v.push(x)}return{generated_text:I,scores:v,char_preds:_,bpe_preds:P,wp_preds:y}}static async from_pretrained(...c){const u=await super.from_pretrained(...c),p=await i.AutoTokenizer.from_pretrained("Xenova/gpt2"),_=await i.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return u.components={image_processor:u.image_processor,char_tokenizer:u.tokenizer,bpe_tokenizer:p,wp_tokenizer:_},u}async _call(c,u=null){const p=await this.image_processor(c);return u&&(p.labels=this.tokenizer(u).input_ids),p}}},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV1FeatureExtractor:()=>i,MobileNetV1ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV2FeatureExtractor:()=>i,MobileNetV2ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV3FeatureExtractor:()=>i,MobileNetV3ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV4FeatureExtractor:()=>i,MobileNetV4ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,r,t)=>{t.r(r),t.d(r,{MobileViTFeatureExtractor:()=>i,MobileViTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class i extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"MoonshineFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=[1,a.length];return{input_values:new n.Tensor("float32",a,l)}}}},"./src/models/moonshine/processing_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineProcessor:()=>o});var s=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/processing_utils.js");class o extends i.Processor{static tokenizer_class=n.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}},"./src/models/nougat/image_processing_nougat.js":(e,r,t)=>{t.r(r),t.d(r,{NougatImageProcessor:()=>n});var s=t("./src/models/donut/image_processing_donut.js");class n extends s.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,r,t)=>{t.r(r),t.d(r,{Owlv2ImageProcessor:()=>n});var s=t("./src/models/owlvit/image_processing_owlvit.js");class n extends s.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTFeatureExtractor:()=>i,OwlViTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class i extends n{}},"./src/models/owlvit/processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTProcessor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");class o extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor}},"./src/models/paligemma/processing_paligemma.js":(e,r,t)=>{t.r(r),t.d(r,{PaliGemmaProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");const o="<image>";function a(d,c,u,p,_){return`${p.repeat(u*_)}${c}${d}
`}class l extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;static uses_processor_config=!1;async _call(c,u=null,p={}){u||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),u=""),Array.isArray(c)||(c=[c]),Array.isArray(u)||(u=[u]);const _=this.tokenizer.bos_token,f=this.image_processor.config.image_seq_length;let P;u.some(g=>g.includes(o))?P=u.map(g=>{const I=g.replaceAll(o,o.repeat(f)),v=I.lastIndexOf(o),T=v===-1?0:v+o.length;return I.slice(0,T)+_+I.slice(T)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),P=u.map(g=>a(g,_,f,o,c.length)));const A=this.tokenizer(P,p);return{...await this.image_processor(c,p),...A}}}},"./src/models/phi3_v/image_processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VImageProcessor:()=>c});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");const i=336,o=[2,3],{ceil:a,floor:l,sqrt:d}=Math;class c extends s.ImageProcessor{constructor(p){super({...p,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=p.num_crops}calc_num_image_tokens_from_image_size(p,_){const{num_img_tokens:f}=this.config;return l((l(_/i)*l(p/i)+1)*f+1+(l(_/i)+1)*d(f))}get_resize_output_image_size(p,_){const f=this._num_crops,[P,A]=p.size;let y=P/A,g=1;for(;g*Math.ceil(g/y)<=f;)g+=1;g-=1;const I=Math.floor(g*336),v=Math.floor(I/y);return[I,v]}pad_image(p,_,f,P={}){const[A,y]=_,g=i*a(A/i),I=i*a(y/i),v=[1,1,1].map((T,x)=>(T-this.image_mean[x])/this.image_std[x]);return super.pad_image(p,_,{width:I,height:g},{center:!0,constant_values:v,...P})}async _call(p,{num_crops:_=null}={}){if(this._num_crops=_??=this.config.num_crops,_<4||d(_)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(p)||(p=[p]);const f=p.length,P=await Promise.all(p.map(b=>this.preprocess(b))),A=P.map(b=>b.original_size),y=P.map(b=>b.reshaped_input_size),g=[];for(const{pixel_values:b}of P){b.unsqueeze_(0);const[$,j]=b.dims.slice(-2),B=await(0,n.interpolate_4d)(b,{size:[i,i],mode:"bicubic"});if(_>0){const X=[],re=d(_),z=l(j/re),te=l($/re);for(let K=0;K<re;++K)for(let se=0;se<re;++se){let J,ue,ce,N;K===re-1?(ue=$-te,N=$):(ue=K*te,N=(K+1)*te),se===re-1?(J=j-z,ce=j):(J=se*z,ce=(se+1)*z);const D=[ue,J],Q=[N,ce],U=await(0,n.slice)(b,D,Q,o);X.push(U)}const W=await(0,n.interpolate_4d)((0,n.cat)(X,0),{size:[i,i],mode:"bicubic"});g.push((0,n.cat)([B,W],0))}else g.push(B)}const I=(0,n.stack)(g,0),v=y.map(b=>b.map($=>i*a($/i))),T=new n.Tensor("int64",v.flat(),[f,2]),x=v.map(([b,$])=>this.calc_num_image_tokens_from_image_size($,b));return{pixel_values:I,original_sizes:A,reshaped_input_sizes:y,image_sizes:T,num_img_tokens:x}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");t("./src/utils/image.js");const o="<|image|>",a=/<\|image_\d+\|>/g;class l extends s.Processor{static image_processor_class=n.AutoImageProcessor;static tokenizer_class=i.AutoTokenizer;async _call(c,u=null,{padding:p=!0,truncation:_=!0,num_crops:f=null}={}){Array.isArray(c)||(c=[c]);let P,A;if(u){A=await this.image_processor(u,{num_crops:f});const{num_img_tokens:y}=A,g=c.map((v,T)=>v.split(a).join(o.repeat(y[T])));P=this.tokenizer(g,{padding:p,truncation:_});const I=this.tokenizer.model.convert_tokens_to_ids([o])[0];P.input_ids.map_(v=>v==I?-v:v)}else P=this.tokenizer(c);return{...P,...A}}}},"./src/models/processors.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>s.Florence2Processor,Gemma3nProcessor:()=>n.Gemma3nProcessor,GroundingDinoProcessor:()=>i.GroundingDinoProcessor,Idefics3Processor:()=>o.Idefics3Processor,JinaCLIPProcessor:()=>l.JinaCLIPProcessor,LlavaProcessor:()=>d.LlavaProcessor,MgpstrProcessor:()=>c.MgpstrProcessor,MoonshineProcessor:()=>u.MoonshineProcessor,OwlViTProcessor:()=>p.OwlViTProcessor,PaliGemmaProcessor:()=>f.PaliGemmaProcessor,Phi3VProcessor:()=>_.Phi3VProcessor,PyAnnoteProcessor:()=>P.PyAnnoteProcessor,Qwen2VLProcessor:()=>A.Qwen2VLProcessor,SamProcessor:()=>y.SamProcessor,SmolVLMProcessor:()=>g.SmolVLMProcessor,SpeechT5Processor:()=>I.SpeechT5Processor,UltravoxProcessor:()=>v.UltravoxProcessor,VLChatProcessor:()=>a.VLChatProcessor,Wav2Vec2Processor:()=>T.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>x.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>b.WhisperProcessor});var s=t("./src/models/florence2/processing_florence2.js"),n=t("./src/models/gemma3n/processing_gemma3n.js"),i=t("./src/models/grounding_dino/processing_grounding_dino.js"),o=t("./src/models/idefics3/processing_idefics3.js"),a=t("./src/models/janus/processing_janus.js"),l=t("./src/models/jina_clip/processing_jina_clip.js"),d=t("./src/models/llava/processing_llava.js"),c=t("./src/models/mgp_str/processing_mgp_str.js"),u=t("./src/models/moonshine/processing_moonshine.js"),p=t("./src/models/owlvit/processing_owlvit.js"),_=t("./src/models/phi3_v/processing_phi3_v.js"),f=t("./src/models/paligemma/processing_paligemma.js"),P=t("./src/models/pyannote/processing_pyannote.js"),A=t("./src/models/qwen2_vl/processing_qwen2_vl.js"),y=t("./src/models/sam/processing_sam.js"),g=t("./src/models/smolvlm/processing_smolvlm.js"),I=t("./src/models/speecht5/processing_speecht5.js"),v=t("./src/models/ultravox/processing_ultravox.js"),T=t("./src/models/wav2vec2/processing_wav2vec2.js"),x=t("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),b=t("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,r,t)=>{t.r(r),t.d(r,{PvtImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/maths.js");class o extends s.FeatureExtractor{async _call(l){(0,s.validate_audio_inputs)(l,"PyAnnoteFeatureExtractor"),l instanceof Float64Array&&(l=new Float32Array(l));const d=[1,1,l.length];return{input_values:new n.Tensor("float32",l,d)}}samples_to_frames(l){return(l-this.config.offset)/this.config.step}post_process_speaker_diarization(l,d){const c=d/this.samples_to_frames(d)/this.config.sampling_rate,u=[];for(const p of l.tolist()){const _=[];let f=-1;for(let P=0;P<p.length;++P){const A=(0,i.softmax)(p[P]),[y,g]=(0,i.max)(A),[I,v]=[P,P+1];g!==f?(f=g,_.push({id:g,start:I,end:v,score:y})):(_.at(-1).end=v,_.at(-1).score+=y)}u.push(_.map(({id:P,start:A,end:y,score:g})=>({id:P,start:A*c,end:y*c,confidence:g/(y-A)})))}return u}}},"./src/models/pyannote/processing_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteProcessor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/models/pyannote/feature_extraction_pyannote.js");class i extends s.Processor{static feature_extractor_class=n.PyAnnoteFeatureExtractor;async _call(a){return await this.feature_extractor(a)}post_process_speaker_diarization(...a){return this.feature_extractor.post_process_speaker_diarization(...a)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends s.ImageProcessor{async _call(a,...l){const{pixel_values:d,original_sizes:c,reshaped_input_sizes:u}=await super._call(a,...l);let p=d;const{temporal_patch_size:_,merge_size:f,patch_size:P}=this.config;p.dims[0]===1&&(p=(0,n.cat)(Array.from({length:_},()=>p),0));const A=p.dims[0]/_,y=p.dims[1],g=Math.floor(p.dims[2]/P),I=Math.floor(p.dims[3]/P),v=p.view(A,_,y,Math.floor(g/f),f,P,Math.floor(I/f),f,P).permute(0,3,6,4,7,2,1,5,8).view(A*g*I,y*_*P*P),T=new n.Tensor("int64",[A,g,I],[1,3]);return{pixel_values:v,image_grid_thw:T,original_sizes:c,reshaped_input_sizes:u}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLProcessor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");t("./src/utils/image.js");class o extends s.Processor{static image_processor_class=n.AutoImageProcessor;static tokenizer_class=i.AutoTokenizer;async _call(l,d=null,...c){Array.isArray(l)||(l=[l]);let u,p;if(d&&(u=await this.image_processor(d),p=u.image_grid_thw),p){let f=this.image_processor.config.merge_size**2,P=0;const A=p.tolist();l=l.map(y=>{for(;y.includes("<|image_pad|>");){const g=Number(A[P++].reduce((I,v)=>I*v,1n));y=y.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(g/f)))}return y.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(l),...u}}}},"./src/models/rt_detr/image_processing_rt_detr.js":(e,r,t)=>{t.r(r),t.d(r,{RTDetrImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_object_detection(...o){return(0,s.post_process_object_detection)(...o)}}},"./src/models/sam/image_processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/core.js"),i=t("./src/utils/tensor.js");class o extends s.ImageProcessor{reshape_input_points(l,d,c,u=!1){l=structuredClone(l);let p=(0,n.calculateDimensions)(l);if(p.length===3)u||(p=[1,...p]),l=[l];else if(p.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let _=0;_<l.length;++_){let f=d[_],P=c[_],A=[P[0]/f[0],P[1]/f[1]];for(let y=0;y<l[_].length;++y)for(let g=0;g<l[_][y].length;++g)for(let I=0;I<l[_][y][g].length;++I)l[_][y][g][I]*=A[I%2]}return new i.Tensor("float32",Float32Array.from(l.flat(1/0)),p)}add_input_labels(l,d){let c=(0,n.calculateDimensions)(l);if(c.length===2)c=[1,...c],l=[l];else if(c.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(c.some((u,p)=>u!==d.dims[p]))throw Error(`The first ${c.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new i.Tensor("int64",l.flat(1/0).map(BigInt),c)}async _call(l,{input_points:d=null,input_labels:c=null,input_boxes:u=null}={}){const p=await super._call(l);if(d&&(p.input_points=this.reshape_input_points(d,p.original_sizes,p.reshaped_input_sizes)),c){if(!p.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");p.input_labels=this.add_input_labels(c,p.input_points)}return u&&(p.input_boxes=this.reshape_input_points(u,p.original_sizes,p.reshaped_input_sizes,!0)),p}async post_process_masks(l,d,c,{mask_threshold:u=0,binarize:p=!0,pad_size:_=null}={}){const f=[];_=_??this.pad_size;const P=[_.height,_.width];for(let A=0;A<d.length;++A){const y=d[A],g=c[A];let I=await(0,i.interpolate_4d)(l[A],{mode:"bilinear",size:P});if(I=I.slice(null,null,[0,g[0]],[0,g[1]]),I=await(0,i.interpolate_4d)(I,{mode:"bilinear",size:y}),p){const v=I.data,T=new Uint8Array(v.length);for(let x=0;x<v.length;++x)v[x]>u&&(T[x]=1);I=new i.Tensor("bool",T,I.dims)}f.push(I)}return f}generate_crop_boxes(l,d,{crop_n_layers:c=0,overlap_ratio:u=512/1500,points_per_crop:p=32,crop_n_points_downscale_factor:_=1}={}){}}},"./src/models/sam/processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamProcessor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js");class i extends s.Processor{static image_processor_class=n.AutoImageProcessor;async _call(...a){return await this.image_processor(...a)}post_process_masks(...a){return this.image_processor.post_process_masks(...a)}reshape_input_points(...a){return this.image_processor.reshape_input_points(...a)}}},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,r,t)=>{t.r(r),t.d(r,{SeamlessM4TFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(l){super(l);const d=this.config.sampling_rate,c=(0,i.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(d/2),d,null,"kaldi",!0);this.mel_filters=c,this.window=(0,i.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(l,d){return l=l.map(c=>c*32768),(0,i.spectrogram)(l,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:d,transpose:!0})}async _call(l,{padding:d=!0,pad_to_multiple_of:c=2,do_normalize_per_mel_bins:u=!0,return_attention_mask:p=!0}={}){(0,s.validate_audio_inputs)(l,"SeamlessM4TFeatureExtractor");let _=await this._extract_fbank_features(l,this.config.max_length);if(u){const[T,x]=_.dims,b=_.data;for(let $=0;$<x;++$){let j=0;for(let z=0;z<T;++z)j+=b[z*x+$];const B=j/T;let X=0;for(let z=0;z<T;++z)X+=(b[z*x+$]-B)**2;X/=T-1;const re=Math.sqrt(X+1e-7);for(let z=0;z<T;++z){const te=z*x+$;b[te]=(b[te]-B)/re}}}let f;if(d){const[T,x]=_.dims,b=_.data,$=T%c;if($>0){const j=new Float32Array(x*(T+$));j.set(b),j.fill(this.config.padding_value,b.length);const B=T+$;_=new n.Tensor(_.type,j,[B,x]),p&&(f=new n.Tensor("int64",new BigInt64Array(B),[1,B]),f.data.fill(1n,0,T))}}const[P,A]=_.dims,y=this.config.stride;if(P%y!==0)throw new Error(`The number of frames (${P}) must be a multiple of the stride (${y}).`);const I=_.view(1,Math.floor(P/y),A*y),v={input_features:I};if(p){const T=I.dims[1],x=new BigInt64Array(T);if(f){const b=f.data;for(let $=1,j=0;$<P;$+=y,++j)x[j]=b[$]}else x.fill(1n);v.attention_mask=new n.Tensor("int64",x,[1,T])}return v}}},"./src/models/segformer/image_processing_segformer.js":(e,r,t)=>{t.r(r),t.d(r,{SegformerFeatureExtractor:()=>i,SegformerImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_semantic_segmentation(...a){return(0,s.post_process_semantic_segmentation)(...a)}}class i extends n{}},"./src/models/siglip/image_processing_siglip.js":(e,r,t)=>{t.r(r),t.d(r,{SiglipImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMImageProcessor:()=>s.Idefics3ImageProcessor});var s=t("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMProcessor:()=>s.Idefics3Processor});var s=t("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(e,r,t)=>{t.r(r),t.d(r,{SnacFeatureExtractor:()=>n});var s=t("./src/models/dac/feature_extraction_dac.js");class n extends s.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5FeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");class n extends s.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5Processor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/tokenizers.js"),i=t("./src/models/auto/feature_extraction_auto.js");class o extends s.Processor{static tokenizer_class=n.AutoTokenizer;static feature_extractor_class=i.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}},"./src/models/swin2sr/image_processing_swin2sr.js":(e,r,t)=>{t.r(r),t.d(r,{Swin2SRImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{pad_image(o,a,l,d={}){const[c,u,p]=a;return super.pad_image(o,a,{width:u+(l-u%l)%l,height:c+(l-c%l)%l},{mode:"symmetric",center:!1,constant_values:-1,...d})}}},"./src/models/ultravox/processing_ultravox.js":(e,r,t)=>{t.r(r),t.d(r,{UltravoxProcessor:()=>o});var s=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/processing_utils.js");class o extends i.Processor{static tokenizer_class=n.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;static uses_processor_config=!0;async _call(l,d=null,c={}){if(Array.isArray(l))throw new Error("Batched inputs are not supported yet.");let u={};if(d){const _=d.length,{input_features:f}=await this.feature_extractor(d,{...c,max_length:_}),P=Math.round(_/this.config.encoder_ds_factor+1e-4),A=1+Math.ceil(P/this.config.stack_factor);u.audio_token_len=[A],u.audio_values=f;const y=this.config.audio_placeholder;if(!l.includes(y))throw new Error(`The input text does not contain the image token ${y}.`);l=l.replaceAll(y,y.repeat(A))}return{...this.tokenizer(l,{add_special_tokens:!1,...c}),...u}}}},"./src/models/vit/image_processing_vit.js":(e,r,t)=>{t.r(r),t.d(r,{ViTFeatureExtractor:()=>i,ViTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,r,t)=>{t.r(r),t.d(r,{VitMatteImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends s.ImageProcessor{async _call(a,l){Array.isArray(a)||(a=[a]),Array.isArray(l)||(l=[l]);const d=await Promise.all(a.map(p=>this.preprocess(p))),c=await Promise.all(l.map(p=>this.preprocess(p,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,n.stack)(d.map((p,_)=>(0,n.cat)([p.pixel_values,c[_].pixel_values],0)),0),original_sizes:d.map(p=>p.original_size),reshaped_input_sizes:d.map(p=>p.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,r,t)=>{t.r(r),t.d(r,{VitPoseImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_pose_estimation(o,a,{threshold:l=null}={}){const d=o.tolist(),[c,u,p,_]=o.dims,f=[];for(let P=0;P<c;++P){const A=d[P],y=a[P],g=[];for(let I=0;I<y.length;++I){const v=y[I],T=[],x=[],b=[],$=v.at(-2)/_,j=v.at(-1)/p;for(let B=0;B<A.length;++B){let[X,re]=[0,0],z=0,te=-1/0;const W=A[B];for(let se=0;se<W.length;++se){const J=W[se];for(let ue=0;ue<J.length;++ue){const ce=J[ue];z+=ce,te=Math.max(te,ce),X+=(ue+.5)*ce,re+=se*ce}}if(l!=null&&te<l)continue;const K=[$*X/z,j*re/z];T.push(K),b.push(B),x.push(te)}g.push({bbox:v,scores:x,labels:b,keypoints:T})}f.push(g)}return f}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2FeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class i extends s.FeatureExtractor{_zero_mean_unit_var_norm(a){const d=a.reduce((u,p)=>u+p,0)/a.length,c=a.reduce((u,p)=>u+(p-d)**2,0)/a.length;return a.map(u=>(u-d)/Math.sqrt(c+1e-7))}async _call(a){(0,s.validate_audio_inputs)(a,"Wav2Vec2FeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));let l=a;this.config.do_normalize&&(l=this._zero_mean_unit_var_norm(l));const d=[1,l.length];return{input_values:new n.Tensor("float32",l,d),attention_mask:new n.Tensor("int64",new BigInt64Array(l.length).fill(1n),d)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2Processor:()=>o});var s=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/base/processing_utils.js");class o extends i.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=n.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2ProcessorWithLM:()=>o});var s=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/base/processing_utils.js");class o extends i.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=n.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,r,t)=>{t.r(r),t.d(r,{WeSpeakerFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class i extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,d=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=d,this.window=(0,n.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(a){return a=a.map(l=>l*32768),(0,n.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(a){(0,s.validate_audio_inputs)(a,"WeSpeakerFeatureExtractor");const l=(await this._extract_fbank_features(a)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const d=l.mean(1).data,c=l.data,[u,p,_]=l.dims;for(let f=0;f<u;++f){const P=f*p*_,A=f*_;for(let y=0;y<p;++y){const g=P+y*_;for(let I=0;I<_;++I)c[g+I]-=d[A+I]}}}return{input_features:l}}}},"./src/models/whisper/common_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WHISPER_LANGUAGE_MAPPING:()=>n,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>i,whisper_language_to_code:()=>o});const s=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],n=new Map(s),i=new Map([...s.map(([a,l])=>[l,a]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function o(a){a=a.toLowerCase();let l=i.get(a);if(l===void 0){const d=a.match(/^<\|([a-z]{2})\|>$/);if(d&&(a=d[1]),n.has(a))l=a;else{const u=a.length===2?n.keys():n.values();throw new Error(`Language "${a}" is not supported. Must be one of: ${JSON.stringify(Array.from(u))}`)}}return l}},"./src/models/whisper/feature_extraction_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js"),i=t("./src/utils/maths.js");class o extends s.FeatureExtractor{constructor(l){super(l),this.config.mel_filters??=(0,n.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,n.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(l){const d=await(0,n.spectrogram)(l,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(l.length/this.config.hop_length),this.config.nb_max_frames)}),c=d.data,u=(0,i.max)(c)[0];for(let p=0;p<c.length;++p)c[p]=(Math.max(c[p],u-8)+4)/4;return d}async _call(l,{max_length:d=null}={}){(0,s.validate_audio_inputs)(l,"WhisperFeatureExtractor");let c;const u=d??this.config.n_samples;return l.length>u?(l.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),c=l.slice(0,u)):(c=new Float32Array(u),c.set(l)),{input_features:(await this._extract_fbank_features(c)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperGenerationConfig:()=>n});var s=t("./src/generation/configuration_utils.js");class n extends s.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/models/whisper/processing_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperProcessor:()=>o});var s=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/processing_utils.js");class o extends i.Processor{static tokenizer_class=n.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}},"./src/models/yolos/image_processing_yolos.js":(e,r,t)=>{t.r(r),t.d(r,{YolosFeatureExtractor:()=>i,YolosImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class i extends n{}},"./src/ops/registry.js":(e,r,t)=>{t.r(r),t.d(r,{TensorOpRegistry:()=>l});var s=t("./src/backends/onnx.js"),n=t("./src/utils/tensor.js"),i=t("./src/env.js");const o=i.apis.IS_BROWSER_ENV||i.apis.IS_WEBWORKER_ENV,a=async(d,c,u)=>{const p=await(0,s.createInferenceSession)(new Uint8Array(d),c);let _=Promise.resolve();return async f=>{const P=(0,s.isONNXProxy)(),A=Object.fromEntries(Object.entries(f).map(([g,I])=>[g,(P?I.clone():I).ort_tensor])),y=await(_=o?_.then(()=>p.run(A)):p.run(A));return Array.isArray(u)?u.map(g=>new n.Tensor(y[g])):new n.Tensor(y[u])}};class l{static session_options={};static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=a([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=a([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=a([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=a([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=a([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=a([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=a([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=a([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}},"./src/pipelines.js":(e,r,t)=>{t.r(r),t.d(r,{AudioClassificationPipeline:()=>re,AutomaticSpeechRecognitionPipeline:()=>te,BackgroundRemovalPipeline:()=>J,DepthEstimationPipeline:()=>ae,DocumentQuestionAnsweringPipeline:()=>D,FeatureExtractionPipeline:()=>B,FillMaskPipeline:()=>I,ImageClassificationPipeline:()=>K,ImageFeatureExtractionPipeline:()=>X,ImageSegmentationPipeline:()=>se,ImageToImagePipeline:()=>U,ImageToTextPipeline:()=>W,ObjectDetectionPipeline:()=>ce,Pipeline:()=>P,QuestionAnsweringPipeline:()=>g,SummarizationPipeline:()=>T,Text2TextGenerationPipeline:()=>v,TextClassificationPipeline:()=>A,TextGenerationPipeline:()=>$,TextToAudioPipeline:()=>Q,TokenClassificationPipeline:()=>y,TranslationPipeline:()=>x,ZeroShotAudioClassificationPipeline:()=>z,ZeroShotClassificationPipeline:()=>j,ZeroShotImageClassificationPipeline:()=>ue,ZeroShotObjectDetectionPipeline:()=>N,pipeline:()=>Le});var s=t("./src/tokenizers.js"),n=t("./src/models.js"),i=t("./src/models/auto/processing_auto.js");t("./src/base/processing_utils.js");var o=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/maths.js"),d=t("./src/utils/audio.js"),c=t("./src/utils/tensor.js"),u=t("./src/utils/image.js");async function p(me){return Array.isArray(me)||(me=[me]),await Promise.all(me.map(H=>u.RawImage.read(H)))}async function _(me,H){return Array.isArray(me)||(me=[me]),await Promise.all(me.map(fe=>typeof fe=="string"||fe instanceof URL?(0,d.read_audio)(fe,H):fe instanceof Float64Array?new Float32Array(fe):fe))}function f(me,H){H&&(me=me.map($e=>$e|0));const[fe,Z,xe,Ce]=me;return{xmin:fe,ymin:Z,xmax:xe,ymax:Ce}}class P extends o.Callable{constructor({task:H,model:fe,tokenizer:Z=null,processor:xe=null}){super(),this.task=H,this.model=fe,this.tokenizer=Z,this.processor=xe}async dispose(){await this.model.dispose()}}class A extends P{constructor(H){super(H)}async _call(H,{top_k:fe=1}={}){const Z=this.tokenizer(H,{padding:!0,truncation:!0}),xe=await this.model(Z),Ce=this.model.config.problem_type==="multi_label_classification"?Oe=>Oe.sigmoid():Oe=>new c.Tensor("float32",(0,l.softmax)(Oe.data),Oe.dims),$e=this.model.config.id2label,Se=[];for(const Oe of xe.logits){const ze=Ce(Oe),Ke=await(0,c.topk)(ze,fe),He=Ke[0].tolist(),Be=Ke[1].tolist().map((Ye,nt)=>({label:$e?$e[Ye]:`LABEL_${Ye}`,score:He[nt]}));fe===1?Se.push(...Be):Se.push(Be)}return Array.isArray(H)||fe===1?Se:Se[0]}}class y extends P{constructor(H){super(H)}async _call(H,{ignore_labels:fe=["O"]}={}){const Z=Array.isArray(H),xe=this.tokenizer(Z?H:[H],{padding:!0,truncation:!0}),$e=(await this.model(xe)).logits,Se=this.model.config.id2label,Oe=[];for(let ze=0;ze<$e.dims[0];++ze){const Ke=xe.input_ids[ze],He=$e[ze],Xe=[];for(let Be=0;Be<He.dims[0];++Be){const Ye=He[Be],nt=(0,l.max)(Ye.data)[1],et=Se?Se[nt]:`LABEL_${nt}`;if(fe.includes(et))continue;const mt=this.tokenizer.decode([Ke[Be].item()],{skip_special_tokens:!0});if(mt==="")continue;const rt=(0,l.softmax)(Ye.data);Xe.push({entity:et,score:rt[nt],index:Be,word:mt})}Oe.push(Xe)}return Z?Oe:Oe[0]}}class g extends P{constructor(H){super(H)}async _call(H,fe,{top_k:Z=1}={}){const xe=this.tokenizer(H,{text_pair:fe,padding:!0,truncation:!0}),{start_logits:Ce,end_logits:$e}=await this.model(xe),Se=xe.input_ids.tolist(),Oe=xe.attention_mask.tolist(),ze=this.tokenizer.all_special_ids,Ke=[];for(let He=0;He<Ce.dims[0];++He){const Xe=Se[He],Be=Xe.findIndex(We=>We==this.tokenizer.sep_token_id);Oe[He].map((We,O)=>We==1&&(O===0||O>Be&&ze.findIndex(E=>E==Xe[O])===-1));const Ye=Ce[He].tolist(),nt=$e[He].tolist();for(let We=1;We<Ye.length;++We)(Oe[He]==0||We<=Be||ze.findIndex(O=>O==Xe[We])!==-1)&&(Ye[We]=-1/0,nt[We]=-1/0);const et=(0,l.softmax)(Ye).map((We,O)=>[We,O]),mt=(0,l.softmax)(nt).map((We,O)=>[We,O]);et[0][0]=0,mt[0][0]=0;const rt=(0,a.product)(et,mt).filter(We=>We[0][1]<=We[1][1]).map(We=>[We[0][1],We[1][1],We[0][0]*We[1][0]]).sort((We,O)=>O[2]-We[2]);for(let We=0;We<Math.min(rt.length,Z);++We){const[O,E,S]=rt[We],ee=Xe.slice(O,E+1),de=this.tokenizer.decode(ee,{skip_special_tokens:!0});Ke.push({answer:de,score:S})}}return Z===1?Ke[0]:Ke}}class I extends P{constructor(H){super(H)}async _call(H,{top_k:fe=5}={}){const Z=this.tokenizer(H,{padding:!0,truncation:!0}),{logits:xe}=await this.model(Z),Ce=[],$e=Z.input_ids.tolist();for(let Se=0;Se<$e.length;++Se){const Oe=$e[Se],ze=Oe.findIndex(Ye=>Ye==this.tokenizer.mask_token_id);if(ze===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Ke=xe[Se][ze],He=await(0,c.topk)(new c.Tensor("float32",(0,l.softmax)(Ke.data),Ke.dims),fe),Xe=He[0].tolist(),Be=He[1].tolist();Ce.push(Be.map((Ye,nt)=>{const et=Oe.slice();return et[ze]=Ye,{score:Xe[nt],token:Number(Ye),token_str:this.tokenizer.decode([Ye]),sequence:this.tokenizer.decode(et,{skip_special_tokens:!0})}}))}return Array.isArray(H)?Ce:Ce[0]}}class v extends P{_key="generated_text";constructor(H){super(H)}async _call(H,fe={}){Array.isArray(H)||(H=[H]),this.model.config.prefix&&(H=H.map(Oe=>this.model.config.prefix+Oe));const Z=this.model.config.task_specific_params;Z&&Z[this.task]&&Z[this.task].prefix&&(H=H.map(Oe=>Z[this.task].prefix+Oe));const xe=this.tokenizer,Ce={padding:!0,truncation:!0};let $e;this instanceof x&&"_build_translation_inputs"in xe?$e=xe._build_translation_inputs(H,Ce,fe):$e=xe(H,Ce);const Se=await this.model.generate({...$e,...fe});return xe.batch_decode(Se,{skip_special_tokens:!0}).map(Oe=>({[this._key]:Oe}))}}class T extends v{_key="summary_text";constructor(H){super(H)}}class x extends v{_key="translation_text";constructor(H){super(H)}}function b(me){return Array.isArray(me)&&me.every(H=>"role"in H&&"content"in H)}class $ extends P{constructor(H){super(H)}async _call(H,fe={}){let Z=!1,xe=!1,Ce;if(typeof H=="string")Ce=H=[H];else if(Array.isArray(H)&&H.every(Be=>typeof Be=="string"))Z=!0,Ce=H;else{if(b(H))H=[H];else if(Array.isArray(H)&&H.every(b))Z=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");xe=!0,Ce=H.map(Be=>this.tokenizer.apply_chat_template(Be,{tokenize:!1,add_generation_prompt:!0}))}const $e=fe.add_special_tokens??!1,Se=xe?!1:fe.return_full_text??!0;this.tokenizer.padding_side="left";const Oe=this.tokenizer(Ce,{add_special_tokens:$e,padding:!0,truncation:!0}),ze=await this.model.generate({...Oe,...fe}),Ke=this.tokenizer.batch_decode(ze,{skip_special_tokens:!0});let He;!Se&&Oe.input_ids.dims.at(-1)>0&&(He=this.tokenizer.batch_decode(Oe.input_ids,{skip_special_tokens:!0}).map(Be=>Be.length));const Xe=Array.from({length:H.length},Be=>[]);for(let Be=0;Be<Ke.length;++Be){const Ye=Math.floor(Be/ze.dims[0]*H.length);He&&(Ke[Be]=Ke[Be].slice(He[Ye])),Xe[Ye].push({generated_text:xe?[...H[Ye],{role:"assistant",content:Ke[Be]}]:Ke[Be]})}return!Z&&Xe.length===1?Xe[0]:Xe}}class j extends P{constructor(H){super(H),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([fe,Z])=>[fe.toLowerCase(),Z])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(H,fe,{hypothesis_template:Z="This example is {}.",multi_label:xe=!1}={}){const Ce=Array.isArray(H);Ce||(H=[H]),Array.isArray(fe)||(fe=[fe]);const $e=fe.map(ze=>Z.replace("{}",ze)),Se=xe||fe.length===1,Oe=[];for(const ze of H){const Ke=[];for(const Be of $e){const Ye=this.tokenizer(ze,{text_pair:Be,padding:!0,truncation:!0}),nt=await this.model(Ye);Se?Ke.push([nt.logits.data[this.contradiction_id],nt.logits.data[this.entailment_id]]):Ke.push(nt.logits.data[this.entailment_id])}const Xe=(Se?Ke.map(Be=>(0,l.softmax)(Be)[1]):(0,l.softmax)(Ke)).map((Be,Ye)=>[Be,Ye]).sort((Be,Ye)=>Ye[0]-Be[0]);Oe.push({sequence:ze,labels:Xe.map(Be=>fe[Be[1]]),scores:Xe.map(Be=>Be[0])})}return Ce?Oe:Oe[0]}}class B extends P{constructor(H){super(H)}async _call(H,{pooling:fe="none",normalize:Z=!1,quantize:xe=!1,precision:Ce="binary"}={}){const $e=this.tokenizer(H,{padding:!0,truncation:!0}),Se=await this.model($e);let Oe=Se.last_hidden_state??Se.logits??Se.token_embeddings;switch(fe){case"none":break;case"mean":Oe=(0,c.mean_pooling)(Oe,$e.attention_mask);break;case"first_token":case"cls":Oe=Oe.slice(null,0);break;case"last_token":case"eos":Oe=Oe.slice(null,-1);break;default:throw Error(`Pooling method '${fe}' not supported.`)}return Z&&(Oe=Oe.normalize(2,-1)),xe&&(Oe=(0,c.quantize_embeddings)(Oe,Ce)),Oe}}class X extends P{constructor(H){super(H)}async _call(H,{pool:fe=null}={}){const Z=await p(H),{pixel_values:xe}=await this.processor(Z),Ce=await this.model({pixel_values:xe});let $e;if(fe){if(!("pooler_output"in Ce))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");$e=Ce.pooler_output}else $e=Ce.last_hidden_state??Ce.logits??Ce.image_embeds;return $e}}class re extends P{constructor(H){super(H)}async _call(H,{top_k:fe=5}={}){const Z=this.processor.feature_extractor.config.sampling_rate,xe=await _(H,Z),Ce=this.model.config.id2label,$e=[];for(const Se of xe){const Oe=await this.processor(Se),Ke=(await this.model(Oe)).logits[0],He=await(0,c.topk)(new c.Tensor("float32",(0,l.softmax)(Ke.data),Ke.dims),fe),Xe=He[0].tolist(),Ye=He[1].tolist().map((nt,et)=>({label:Ce?Ce[nt]:`LABEL_${nt}`,score:Xe[et]}));$e.push(Ye)}return Array.isArray(H)?$e:$e[0]}}class z extends P{constructor(H){super(H)}async _call(H,fe,{hypothesis_template:Z="This is a sound of {}."}={}){const xe=!Array.isArray(H);xe&&(H=[H]);const Ce=fe.map(Ke=>Z.replace("{}",Ke)),$e=this.tokenizer(Ce,{padding:!0,truncation:!0}),Se=this.processor.feature_extractor.config.sampling_rate,Oe=await _(H,Se),ze=[];for(const Ke of Oe){const He=await this.processor(Ke),Xe=await this.model({...$e,...He}),Be=(0,l.softmax)(Xe.logits_per_audio.data);ze.push([...Be].map((Ye,nt)=>({score:Ye,label:fe[nt]})))}return xe?ze[0]:ze}}class te extends P{constructor(H){super(H)}async _call(H,fe={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(H,fe);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(H,fe);case"moonshine":return this._call_moonshine(H,fe);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(H,fe){fe.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),fe.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const Z=!Array.isArray(H);Z&&(H=[H]);const xe=this.processor.feature_extractor.config.sampling_rate,Ce=await _(H,xe),$e=[];for(const Se of Ce){const Oe=await this.processor(Se),Ke=(await this.model(Oe)).logits[0],He=[];for(const Be of Ke)He.push((0,l.max)(Be.data)[1]);const Xe=this.tokenizer.decode(He);$e.push({text:Xe})}return Z?$e[0]:$e}async _call_whisper(H,fe){const Z=fe.return_timestamps??!1,xe=fe.chunk_length_s??0,Ce=fe.force_full_sequences??!1;let $e=fe.stride_length_s??null;const Se={...fe};Z==="word"&&(Se.return_token_timestamps=!0,Se.return_timestamps=!1);const Oe=!Array.isArray(H);Oe&&(H=[H]);const ze=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Ke=this.processor.feature_extractor.config.hop_length,He=this.processor.feature_extractor.config.sampling_rate,Xe=await _(H,He),Be=[];for(const Ye of Xe){let nt=[];if(xe>0){if($e===null)$e=xe/6;else if(xe<=$e)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const rt=He*xe,We=He*$e,O=rt-2*We;let E=0;for(;;){const S=E+rt,ee=Ye.subarray(E,S),de=await this.processor(ee),Me=E===0,ye=S>=Ye.length;if(nt.push({stride:[ee.length,Me?0:We,ye?0:We],input_features:de.input_features,is_last:ye}),ye)break;E+=O}}else nt=[{stride:[Ye.length,0,0],input_features:(await this.processor(Ye)).input_features,is_last:!0}];for(const rt of nt){Se.num_frames=Math.floor(rt.stride[0]/Ke);const We=await this.model.generate({inputs:rt.input_features,...Se});Z==="word"?(rt.tokens=We.sequences.tolist()[0],rt.token_timestamps=We.token_timestamps.tolist()[0].map(O=>(0,l.round)(O,2))):rt.tokens=We[0].tolist(),rt.stride=rt.stride.map(O=>O/He)}const[et,mt]=this.tokenizer._decode_asr(nt,{time_precision:ze,return_timestamps:Z,force_full_sequences:Ce});Be.push({text:et,...mt})}return Oe?Be[0]:Be}async _call_moonshine(H,fe){const Z=!Array.isArray(H);Z&&(H=[H]);const xe=this.processor.feature_extractor.config.sampling_rate,Ce=await _(H,xe),$e=[];for(const Se of Ce){const Oe=await this.processor(Se),ze=Math.floor(Se.length/xe)*6,Ke=await this.model.generate({max_new_tokens:ze,...fe,...Oe}),He=this.processor.batch_decode(Ke,{skip_special_tokens:!0})[0];$e.push({text:He})}return Z?$e[0]:$e}}class W extends P{constructor(H){super(H)}async _call(H,fe={}){const Z=Array.isArray(H),xe=await p(H),{pixel_values:Ce}=await this.processor(xe),$e=[];for(const Se of Ce){Se.dims=[1,...Se.dims];const Oe=await this.model.generate({inputs:Se,...fe}),ze=this.tokenizer.batch_decode(Oe,{skip_special_tokens:!0}).map(Ke=>({generated_text:Ke.trim()}));$e.push(ze)}return Z?$e:$e[0]}}class K extends P{constructor(H){super(H)}async _call(H,{top_k:fe=5}={}){const Z=await p(H),{pixel_values:xe}=await this.processor(Z),Ce=await this.model({pixel_values:xe}),$e=this.model.config.id2label,Se=[];for(const Oe of Ce.logits){const ze=await(0,c.topk)(new c.Tensor("float32",(0,l.softmax)(Oe.data),Oe.dims),fe),Ke=ze[0].tolist(),Xe=ze[1].tolist().map((Be,Ye)=>({label:$e?$e[Be]:`LABEL_${Be}`,score:Ke[Ye]}));Se.push(Xe)}return Array.isArray(H)?Se:Se[0]}}class se extends P{constructor(H){super(H),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(H,{threshold:fe=.5,mask_threshold:Z=.5,overlap_mask_area_threshold:xe=.8,label_ids_to_fuse:Ce=null,target_sizes:$e=null,subtask:Se=null}={}){if(Array.isArray(H)&&H.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const ze=await p(H),Ke=ze.map(rt=>[rt.height,rt.width]),He=await this.processor(ze),{inputNames:Xe,outputNames:Be}=this.model.sessions.model;if(!Xe.includes("pixel_values")){if(Xe.length!==1)throw Error(`Expected a single input name, but got ${Xe.length} inputs: ${Xe}.`);const rt=Xe[0];if(rt in He)throw Error(`Input name ${rt} already exists in the inputs.`);He[rt]=He.pixel_values}const Ye=await this.model(He);let nt=null;if(Se!==null)nt=this.subtasks_mapping[Se];else if(this.processor.image_processor){for(const[rt,We]of Object.entries(this.subtasks_mapping))if(We in this.processor.image_processor){nt=this.processor.image_processor[We].bind(this.processor.image_processor),Se=rt;break}}const et=this.model.config.id2label,mt=[];if(Se)if(Se==="panoptic"||Se==="instance"){const rt=nt(Ye,fe,Z,xe,Ce,$e??Ke)[0],We=rt.segmentation;for(const O of rt.segments_info){const E=new Uint8ClampedArray(We.data.length);for(let ee=0;ee<We.data.length;++ee)We.data[ee]===O.id&&(E[ee]=255);const S=new u.RawImage(E,We.dims[1],We.dims[0],1);mt.push({score:O.score,label:et[O.label_id],mask:S})}}else if(Se==="semantic"){const{segmentation:rt,labels:We}=nt(Ye,$e??Ke)[0];for(const O of We){const E=new Uint8ClampedArray(rt.data.length);for(let ee=0;ee<rt.data.length;++ee)rt.data[ee]===O&&(E[ee]=255);const S=new u.RawImage(E,rt.dims[1],rt.dims[0],1);mt.push({score:null,label:et[O],mask:S})}}else throw Error(`Subtask ${Se} not supported.`);else{const We=Ye[Be[0]];for(let O=0;O<Ke.length;++O){const E=Ke[O],S=We[O];S.data.some(de=>de<-1e-5||de>1+1e-5)&&S.sigmoid_();const ee=await u.RawImage.fromTensor(S.mul_(255).to("uint8")).resize(E[1],E[0]);mt.push({label:null,score:null,mask:ee})}}return mt}}class J extends se{constructor(H){super(H)}async _call(H,fe={}){if(Array.isArray(H)&&H.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const xe=await p(H),Ce=await super._call(H,fe);return xe.map((Se,Oe)=>{const ze=Se.clone();return ze.putAlpha(Ce[Oe].mask),ze})}}class ue extends P{constructor(H){super(H)}async _call(H,fe,{hypothesis_template:Z="This is a photo of {}"}={}){const xe=Array.isArray(H),Ce=await p(H),$e=fe.map(Xe=>Z.replace("{}",Xe)),Se=this.tokenizer($e,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:Oe}=await this.processor(Ce),ze=await this.model({...Se,pixel_values:Oe}),Ke=this.model.config.model_type==="siglip"?Xe=>Xe.sigmoid().data:Xe=>(0,l.softmax)(Xe.data),He=[];for(const Xe of ze.logits_per_image){const Ye=[...Ke(Xe)].map((nt,et)=>({score:nt,label:fe[et]}));Ye.sort((nt,et)=>et.score-nt.score),He.push(Ye)}return xe?He:He[0]}}class ce extends P{constructor(H){super(H)}async _call(H,{threshold:fe=.9,percentage:Z=!1}={}){const xe=Array.isArray(H);if(xe&&H.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Ce=await p(H),$e=Z?null:Ce.map(Be=>[Be.height,Be.width]),{pixel_values:Se,pixel_mask:Oe}=await this.processor(Ce),ze=await this.model({pixel_values:Se,pixel_mask:Oe}),Ke=this.processor.image_processor.post_process_object_detection(ze,fe,$e),He=this.model.config.id2label,Xe=Ke.map(Be=>Be.boxes.map((Ye,nt)=>({score:Be.scores[nt],label:He[Be.classes[nt]],box:f(Ye,!Z)})));return xe?Xe:Xe[0]}}class N extends P{constructor(H){super(H)}async _call(H,fe,{threshold:Z=.1,top_k:xe=null,percentage:Ce=!1}={}){const $e=Array.isArray(H),Se=await p(H),Oe=this.tokenizer(fe,{padding:!0,truncation:!0}),ze=await this.processor(Se),Ke=[];for(let He=0;He<Se.length;++He){const Xe=Se[He],Be=Ce?null:[[Xe.height,Xe.width]],Ye=ze.pixel_values[He].unsqueeze_(0),nt=await this.model({...Oe,pixel_values:Ye});let et;if("post_process_grounded_object_detection"in this.processor){const mt=this.processor.post_process_grounded_object_detection(nt,Oe.input_ids,{box_threshold:Z,text_threshold:Z,target_sizes:Be})[0];et=mt.boxes.map((rt,We)=>({score:mt.scores[We],label:mt.labels[We],box:f(rt,!Ce)}))}else{const mt=this.processor.image_processor.post_process_object_detection(nt,Z,Be,!0)[0];et=mt.boxes.map((rt,We)=>({score:mt.scores[We],label:fe[mt.classes[We]],box:f(rt,!Ce)}))}et.sort((mt,rt)=>rt.score-mt.score),xe!==null&&(et=et.slice(0,xe)),Ke.push(et)}return $e?Ke:Ke[0]}}class D extends P{constructor(H){super(H)}async _call(H,fe,Z={}){const xe=(await p(H))[0],{pixel_values:Ce}=await this.processor(xe),$e=`<s_docvqa><s_question>${fe}</s_question><s_answer>`,Se=this.tokenizer($e,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,Oe=await this.model.generate({inputs:Ce,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:Se,...Z}),Ke=this.tokenizer.batch_decode(Oe)[0].match(/<s_answer>(.*?)<\/s_answer>/);let He=null;return Ke&&Ke.length>=2&&(He=Ke[1].trim()),[{answer:He}]}}class Q extends P{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(H){super(H),this.vocoder=H.vocoder??null}async _call(H,{speaker_embeddings:fe=null}={}){return this.processor?this._call_text_to_spectrogram(H,{speaker_embeddings:fe}):this._call_text_to_waveform(H)}async _call_text_to_waveform(H){const fe=this.tokenizer(H,{padding:!0,truncation:!0}),{waveform:Z}=await this.model(fe),xe=this.model.config.sampling_rate;return new d.RawAudio(Z.data,xe)}async _call_text_to_spectrogram(H,{speaker_embeddings:fe}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await n.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof fe=="string"||fe instanceof URL)&&(fe=new Float32Array(await(await fetch(fe)).arrayBuffer())),fe instanceof Float32Array)fe=new c.Tensor("float32",fe,[1,fe.length]);else if(!(fe instanceof c.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:Z}=this.tokenizer(H,{padding:!0,truncation:!0}),{waveform:xe}=await this.model.generate_speech(Z,fe,{vocoder:this.vocoder}),Ce=this.processor.feature_extractor.config.sampling_rate;return new d.RawAudio(xe.data,Ce)}}class U extends P{constructor(H){super(H)}async _call(H){const fe=await p(H),Z=await this.processor(fe),xe=await this.model(Z),Ce=[];for(const $e of xe.reconstruction){const Se=$e.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Ce.push(u.RawImage.fromTensor(Se))}return Ce.length>1?Ce:Ce[0]}}class ae extends P{constructor(H){super(H)}async _call(H){const fe=await p(H),Z=await this.processor(fe),{predicted_depth:xe}=await this.model(Z),Ce=[];for(let $e=0;$e<fe.length;++$e){const Se=xe[$e],[Oe,ze]=Se.dims.slice(-2),[Ke,He]=fe[$e].size,Xe=(await(0,c.interpolate_4d)(Se.view(1,1,Oe,ze),{size:[He,Ke],mode:"bilinear"})).view(He,Ke),Be=Xe.min().item(),Ye=Xe.max().item(),nt=Xe.sub(Be).div_(Ye-Be).mul_(255).to("uint8").unsqueeze(0),et=u.RawImage.fromTensor(nt);Ce.push({predicted_depth:Xe,depth:et})}return Ce.length>1?Ce:Ce[0]}}const Ae=Object.freeze({"text-classification":{tokenizer:s.AutoTokenizer,pipeline:A,model:n.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:s.AutoTokenizer,pipeline:y,model:n.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:s.AutoTokenizer,pipeline:g,model:n.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:s.AutoTokenizer,pipeline:I,model:n.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:s.AutoTokenizer,pipeline:T,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:s.AutoTokenizer,pipeline:x,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:s.AutoTokenizer,pipeline:v,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:s.AutoTokenizer,pipeline:$,model:n.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:s.AutoTokenizer,pipeline:j,model:n.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:re,model:n.AutoModelForAudioClassification,processor:i.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:s.AutoTokenizer,pipeline:z,model:n.AutoModel,processor:i.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:s.AutoTokenizer,pipeline:te,model:[n.AutoModelForSpeechSeq2Seq,n.AutoModelForCTC],processor:i.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:s.AutoTokenizer,pipeline:Q,model:[n.AutoModelForTextToWaveform,n.AutoModelForTextToSpectrogram],processor:[i.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:s.AutoTokenizer,pipeline:W,model:n.AutoModelForVision2Seq,processor:i.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:K,model:n.AutoModelForImageClassification,processor:i.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:se,model:[n.AutoModelForImageSegmentation,n.AutoModelForSemanticSegmentation,n.AutoModelForUniversalSegmentation],processor:i.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:J,model:[n.AutoModelForImageSegmentation,n.AutoModelForSemanticSegmentation,n.AutoModelForUniversalSegmentation],processor:i.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:s.AutoTokenizer,pipeline:ue,model:n.AutoModel,processor:i.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:ce,model:n.AutoModelForObjectDetection,processor:i.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:s.AutoTokenizer,pipeline:N,model:n.AutoModelForZeroShotObjectDetection,processor:i.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:s.AutoTokenizer,pipeline:D,model:n.AutoModelForDocumentQuestionAnswering,processor:i.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:U,model:n.AutoModelForImageToImage,processor:i.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:ae,model:n.AutoModelForDepthEstimation,processor:i.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:s.AutoTokenizer,pipeline:B,model:n.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:i.AutoProcessor,pipeline:X,model:[n.AutoModelForImageFeatureExtraction,n.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Ee=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function Le(me,H=null,{progress_callback:fe=null,config:Z=null,cache_dir:xe=null,local_files_only:Ce=!1,revision:$e="main",device:Se=null,dtype:Oe=null,subfolder:ze="onnx",use_external_data_format:Ke=null,model_file_name:He=null,session_options:Xe={}}={}){me=Ee[me]??me;const Be=Ae[me.split("_",1)[0]];if(!Be)throw Error(`Unsupported pipeline: ${me}. Must be one of [${Object.keys(Ae)}]`);H||(H=Be.default.model,console.log(`No model specified. Using default model: "${H}".`));const Ye={progress_callback:fe,config:Z,cache_dir:xe,local_files_only:Ce,revision:$e,device:Se,dtype:Oe,subfolder:ze,use_external_data_format:Ke,model_file_name:He,session_options:Xe},nt=new Map([["tokenizer",Be.tokenizer],["model",Be.model],["processor",Be.processor]]),et=await Ve(nt,H,Ye);et.task=me,(0,a.dispatchCallback)(fe,{status:"ready",task:me,model:H});const mt=Be.pipeline;return new mt(et)}async function Ve(me,H,fe){const Z=Object.create(null),xe=[];for(const[Ce,$e]of me.entries()){if(!$e)continue;let Se;Array.isArray($e)?Se=new Promise(async(Oe,ze)=>{let Ke;for(const He of $e){if(He===null){Oe(null);return}try{Oe(await He.from_pretrained(H,fe));return}catch(Xe){if(Xe.message?.includes("Unsupported model type"))Ke=Xe;else if(Xe.message?.includes("Could not locate file"))Ke=Xe;else{ze(Xe);return}}}ze(Ke)}):Se=$e.from_pretrained(H,fe),Z[Ce]=Se,xe.push(Se)}await Promise.all(xe);for(const[Ce,$e]of Object.entries(Z))Z[Ce]=await $e;return Z}},"./src/tokenizers.js":(e,r,t)=>{t.r(r),t.d(r,{AlbertTokenizer:()=>ot,AutoTokenizer:()=>Bs,BartTokenizer:()=>Es,BertTokenizer:()=>gt,BlenderbotSmallTokenizer:()=>Gs,BlenderbotTokenizer:()=>an,BloomTokenizer:()=>Os,CLIPTokenizer:()=>cs,CamembertTokenizer:()=>Yr,CodeGenTokenizer:()=>rn,CodeLlamaTokenizer:()=>es,CohereTokenizer:()=>cn,ConvBertTokenizer:()=>Dr,DebertaTokenizer:()=>At,DebertaV2Tokenizer:()=>tr,DistilBertTokenizer:()=>Fr,ElectraTokenizer:()=>Jr,EsmTokenizer:()=>pt,FalconTokenizer:()=>je,GPT2Tokenizer:()=>jr,GPTNeoXTokenizer:()=>Je,GemmaTokenizer:()=>Ur,Grok1Tokenizer:()=>Ds,HerbertTokenizer:()=>Wt,LlamaTokenizer:()=>Zr,M2M100Tokenizer:()=>Ls,MBart50Tokenizer:()=>us,MBartTokenizer:()=>Gr,MPNetTokenizer:()=>Nr,MarianTokenizer:()=>nn,MgpstrTokenizer:()=>dn,MobileBertTokenizer:()=>at,NllbTokenizer:()=>Sr,NougatTokenizer:()=>ln,PreTrainedTokenizer:()=>Pe,Qwen2Tokenizer:()=>gr,RoFormerTokenizer:()=>Qt,RobertaTokenizer:()=>Lr,SiglipTokenizer:()=>sn,SpeechT5Tokenizer:()=>Ps,SqueezeBertTokenizer:()=>Jt,T5Tokenizer:()=>Ts,TokenizerModel:()=>X,VitsTokenizer:()=>un,Wav2Vec2CTCTokenizer:()=>on,WhisperTokenizer:()=>tn,XLMRobertaTokenizer:()=>Or,XLMTokenizer:()=>ls,is_chinese_char:()=>I});var s=t("./src/utils/generic.js"),n=t("./src/utils/core.js"),i=t("./src/utils/hub.js"),o=t("./src/utils/maths.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/data-structures.js"),d=t("./node_modules/@huggingface/jinja/dist/index.js"),c=t("./src/models/whisper/common_whisper.js");async function u(_e,k){const Y=await Promise.all([(0,i.getModelJSON)(_e,"tokenizer.json",!0,k),(0,i.getModelJSON)(_e,"tokenizer_config.json",!0,k)]);return k.legacy!==null&&(Y[1].legacy=k.legacy),Y}function p(_e,k){const Y=[];let ie=0;for(const le of _e.matchAll(k)){const be=le[0];ie<le.index&&Y.push(_e.slice(ie,le.index)),be.length>0&&Y.push(be),ie=le.index+be.length}return ie<_e.length&&Y.push(_e.slice(ie)),Y}function _(_e,k=!0){if(_e.Regex!==void 0){let Y=_e.Regex.replace(/\\([#&~])/g,"$1");for(const[ie,le]of j)Y=Y.replaceAll(ie,le);return new RegExp(Y,"gu")}else if(_e.String!==void 0){const Y=(0,n.escapeRegExp)(_e.String);return new RegExp(k?Y:`(${Y})`,"gu")}else return console.warn("Unknown pattern type:",_e),null}function f(_e){return new Map(Object.entries(_e))}function P(_e){const k=_e.dims;switch(k.length){case 1:return _e.tolist();case 2:if(k[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return _e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${k.length}.`)}}function A(_e){return _e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function y(_e){return _e.replace(/\p{M}/gu,"")}function g(_e){return y(_e.toLowerCase())}function I(_e){return _e>=19968&&_e<=40959||_e>=13312&&_e<=19903||_e>=131072&&_e<=173791||_e>=173824&&_e<=177983||_e>=177984&&_e<=178207||_e>=178208&&_e<=183983||_e>=63744&&_e<=64255||_e>=194560&&_e<=195103}function v(_e,k,Y){const ie=[];let le=0;for(;le<_e.length;){if(ie.push(_e[le]),(k.get(_e[le])??Y)!==Y){++le;continue}for(;++le<_e.length&&(k.get(_e[le])??Y)===Y;)k.get(ie.at(-1))!==Y&&(ie[ie.length-1]+=_e[le])}return ie}function T(_e){return _e.match(/\S+/g)||[]}const x="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",b=new RegExp(`^[${x}]+$`,"gu"),$=".,!?…。，、।۔،",j=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${$}])]+`,` ?[^\\s${$}]+`]]);class B{constructor(k){this.content=k.content,this.id=k.id,this.single_word=k.single_word??!1,this.lstrip=k.lstrip??!1,this.rstrip=k.rstrip??!1,this.special=k.special??!1,this.normalized=k.normalized??null}}class X extends s.Callable{constructor(k){super(),this.config=k,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(k,...Y){switch(k.type){case"WordPiece":return new re(k);case"Unigram":return new z(k,...Y);case"BPE":return new K(k);default:if(k.vocab)return Array.isArray(k.vocab)?new z(k,...Y):Object.hasOwn(k,"continuing_subword_prefix")&&Object.hasOwn(k,"unk_token")?Object.hasOwn(k,"merges")?new K(k):new re(k):new se(k,...Y);throw new Error(`Unknown TokenizerModel type: ${k.type}`)}}_call(k){return k=this.encode(k),this.fuse_unk&&(k=v(k,this.tokens_to_ids,this.unk_token_id)),k}encode(k){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(k){return k.map(Y=>this.tokens_to_ids.get(Y)??this.unk_token_id)}convert_ids_to_tokens(k){return k.map(Y=>this.vocab[Y]??this.unk_token)}}class re extends X{constructor(k){super(k),this.tokens_to_ids=f(k.vocab),this.unk_token_id=this.tokens_to_ids.get(k.unk_token),this.unk_token=k.unk_token,this.max_input_chars_per_word=k.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[Y,ie]of this.tokens_to_ids)this.vocab[ie]=Y}encode(k){const Y=[];for(const ie of k){const le=[...ie];if(le.length>this.max_input_chars_per_word){Y.push(this.unk_token);continue}let be=!1,Fe=0;const Ze=[];for(;Fe<le.length;){let st=le.length,it=null;for(;Fe<st;){let qe=le.slice(Fe,st).join("");if(Fe>0&&(qe=this.config.continuing_subword_prefix+qe),this.tokens_to_ids.has(qe)){it=qe;break}--st}if(it===null){be=!0;break}Ze.push(it),Fe=st}be?Y.push(this.unk_token):Y.push(...Ze)}return Y}}class z extends X{constructor(k,Y){super(k);const ie=k.vocab.length;this.vocab=new Array(ie),this.scores=new Array(ie);for(let le=0;le<ie;++le)[this.vocab[le],this.scores[le]]=k.vocab[le];this.unk_token_id=k.unk_id,this.unk_token=this.vocab[k.unk_id],this.tokens_to_ids=new Map(this.vocab.map((le,be)=>[le,be])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=Y.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,o.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(k){const Y=k.chars,ie=1;let le=0;for(;le<Y.length;){let be=!1;const Fe=Y.slice(le).join(""),Ze=this.trie.commonPrefixSearch(Fe);for(const st of Ze){const it=this.tokens_to_ids.get(st),qe=this.scores[it],kt=(0,n.len)(st);k.insert(le,kt,qe,it),!be&&kt===ie&&(be=!0)}be||k.insert(le,ie,this.unk_score,this.unk_token_id),le+=ie}}tokenize(k){const Y=new l.TokenLattice(k,this.bos_token_id,this.eos_token_id);return this.populateNodes(Y),Y.tokens()}encode(k){const Y=[];for(const ie of k){const le=this.tokenize(ie);Y.push(...le)}return Y}}const te=(()=>{const _e=[...Array.from({length:94},(le,be)=>be+33),...Array.from({length:12},(le,be)=>be+161),...Array.from({length:82},(le,be)=>be+174)],k=_e.slice();let Y=0;for(let le=0;le<256;++le)_e.includes(le)||(_e.push(le),k.push(256+Y),Y+=1);const ie=k.map(le=>String.fromCharCode(le));return Object.fromEntries(_e.map((le,be)=>[le,ie[be]]))})(),W=(0,n.reverseDictionary)(te);class K extends X{constructor(k){super(k),this.tokens_to_ids=f(k.vocab),this.unk_token_id=this.tokens_to_ids.get(k.unk_token),this.unk_token=k.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[ie,le]of this.tokens_to_ids)this.vocab[le]=ie;const Y=Array.isArray(k.merges[0]);this.merges=Y?k.merges:k.merges.map(ie=>ie.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((ie,le)=>[JSON.stringify(ie),le])),this.end_of_word_suffix=k.end_of_word_suffix,this.continuing_subword_suffix=k.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new l.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(k){if(k.length===0)return[];const Y=this.cache.get(k);if(Y!==void 0)return Y;const ie=Array.from(k);this.end_of_word_suffix&&(ie[ie.length-1]+=this.end_of_word_suffix);let le=[];if(ie.length>1){const be=new l.PriorityQueue((st,it)=>st.score<it.score);let Fe={token:ie[0],bias:0,prev:null,next:null},Ze=Fe;for(let st=1;st<ie.length;++st){const it={bias:st/ie.length,token:ie[st],prev:Ze,next:null};Ze.next=it,this._add_node(be,Ze),Ze=it}for(;!be.isEmpty();){const st=be.pop();if(st.deleted||!st.next||st.next.deleted)continue;if(st.deleted=!0,st.next.deleted=!0,st.prev){const qe={...st.prev};st.prev.deleted=!0,st.prev=qe,qe.prev?qe.prev.next=qe:Fe=qe}const it={token:st.token+st.next.token,bias:st.bias,prev:st.prev,next:st.next.next};it.prev?(it.prev.next=it,this._add_node(be,it.prev)):Fe=it,it.next&&(it.next.prev=it,this._add_node(be,it))}for(let st=Fe;st!==null;st=st.next)le.push(st.token)}else le=ie;if(this.continuing_subword_suffix)for(let be=0;be<le.length-1;++be)le[be]+=this.continuing_subword_suffix;return k.length<this.max_length_to_cache&&this.cache.put(k,le),le}_add_node(k,Y){const ie=this.bpe_ranks.get(JSON.stringify([Y.token,Y.next.token]));ie!==void 0&&(Y.score=ie+Y.bias,k.push(Y))}encode(k){const Y=[];for(const ie of k){if(this.ignore_merges&&this.tokens_to_ids.has(ie)){Y.push(ie);continue}const le=this.bpe(ie);for(const be of le)if(this.tokens_to_ids.has(be))Y.push(be);else if(this.byte_fallback){const Fe=Array.from(this.text_encoder.encode(be)).map(Ze=>`<0x${Ze.toString(16).toUpperCase().padStart(2,"0")}>`);Fe.every(Ze=>this.tokens_to_ids.has(Ze))?Y.push(...Fe):Y.push(this.unk_token)}else Y.push(this.unk_token)}return Y}}class se extends X{constructor(k,Y){super(k),this.tokens_to_ids=f(Y.target_lang?k.vocab[Y.target_lang]:k.vocab),this.bos_token=Y.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=Y.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=Y.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=Y.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[ie,le]of this.tokens_to_ids)this.vocab[le]=ie}encode(k){return k}}class J extends s.Callable{constructor(k){super(),this.config=k}static fromConfig(k){if(k===null)return null;switch(k.type){case"BertNormalizer":return new me(k);case"Precompiled":return new ye(k);case"Sequence":return new Ve(k);case"Replace":return new ue(k);case"NFC":return new N(k);case"NFD":return new D(k);case"NFKC":return new Q(k);case"NFKD":return new U(k);case"Strip":return new ae(k);case"StripAccents":return new Ae(k);case"Lowercase":return new Ee(k);case"Prepend":return new Le(k);default:throw new Error(`Unknown Normalizer type: ${k.type}`)}}normalize(k){throw Error("normalize should be implemented in subclass.")}_call(k){return this.normalize(k)}}class ue extends J{normalize(k){const Y=_(this.config.pattern);return Y===null?k:k.replaceAll(Y,this.config.content)}}class ce extends J{form=void 0;normalize(k){return k=k.normalize(this.form),k}}class N extends ce{form="NFC"}class D extends ce{form="NFD"}class Q extends ce{form="NFKC"}class U extends ce{form="NFKD"}class ae extends J{normalize(k){return this.config.strip_left&&this.config.strip_right?k=k.trim():(this.config.strip_left&&(k=k.trimStart()),this.config.strip_right&&(k=k.trimEnd())),k}}class Ae extends J{normalize(k){return k=y(k),k}}class Ee extends J{normalize(k){return k=k.toLowerCase(),k}}class Le extends J{normalize(k){return k=this.config.prepend+k,k}}class Ve extends J{constructor(k){super(k),this.normalizers=k.normalizers.map(Y=>J.fromConfig(Y))}normalize(k){return this.normalizers.reduce((Y,ie)=>ie.normalize(Y),k)}}class me extends J{_tokenize_chinese_chars(k){const Y=[];for(let ie=0;ie<k.length;++ie){const le=k[ie],be=le.charCodeAt(0);I(be)?(Y.push(" "),Y.push(le),Y.push(" ")):Y.push(le)}return Y.join("")}stripAccents(k){return k.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(k){switch(k){case"	":case`
`:case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(k)}}_clean_text(k){const Y=[];for(const ie of k){const le=ie.charCodeAt(0);le===0||le===65533||this._is_control(ie)||(/^\s$/.test(ie)?Y.push(" "):Y.push(ie))}return Y.join("")}normalize(k){return this.config.clean_text&&(k=this._clean_text(k)),this.config.handle_chinese_chars&&(k=this._tokenize_chinese_chars(k)),this.config.lowercase?(k=k.toLowerCase(),this.config.strip_accents!==!1&&(k=this.stripAccents(k))):this.config.strip_accents&&(k=this.stripAccents(k)),k}}class H extends s.Callable{static fromConfig(k){if(k===null)return null;switch(k.type){case"BertPreTokenizer":return new fe(k);case"Sequence":return new bt(k);case"Whitespace":return new L(k);case"WhitespaceSplit":return new oe(k);case"Metaspace":return new de(k);case"ByteLevel":return new Z(k);case"Split":return new xe(k);case"Punctuation":return new Ce(k);case"Digits":return new $e(k);case"Replace":return new V(k);default:throw new Error(`Unknown PreTokenizer type: ${k.type}`)}}pre_tokenize_text(k,Y){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(k,Y){return(Array.isArray(k)?k.map(ie=>this.pre_tokenize_text(ie,Y)):this.pre_tokenize_text(k,Y)).flat()}_call(k,Y){return this.pre_tokenize(k,Y)}}class fe extends H{constructor(k){super(),this.pattern=new RegExp(`[^\\s${x}]+|[${x}]`,"gu")}pre_tokenize_text(k,Y){return k.trim().match(this.pattern)||[]}}class Z extends H{constructor(k){super(),this.config=k,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=te,this.text_encoder=new TextEncoder}pre_tokenize_text(k,Y){return this.add_prefix_space&&!k.startsWith(" ")&&(k=" "+k),(this.use_regex?k.match(this.pattern)||[]:[k]).map(le=>Array.from(this.text_encoder.encode(le),be=>this.byte_encoder[be]).join(""))}}class xe extends H{constructor(k){super(),this.config=k,this.pattern=_(this.config.pattern,this.config.invert)}pre_tokenize_text(k,Y){return this.pattern===null?[]:this.config.invert?k.match(this.pattern)||[]:this.config.behavior?.toLowerCase()==="removed"?k.split(this.pattern).filter(ie=>ie):p(k,this.pattern)}}class Ce extends H{constructor(k){super(),this.config=k,this.pattern=new RegExp(`[^${x}]+|[${x}]+`,"gu")}pre_tokenize_text(k,Y){return k.match(this.pattern)||[]}}class $e extends H{constructor(k){super(),this.config=k;const Y=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(Y,"gu")}pre_tokenize_text(k,Y){return k.match(this.pattern)||[]}}class Se extends s.Callable{constructor(k){super(),this.config=k}static fromConfig(k){if(k===null)return null;switch(k.type){case"TemplateProcessing":return new Ke(k);case"ByteLevel":return new He(k);case"RobertaProcessing":return new ze(k);case"BertProcessing":return new Oe(k);case"Sequence":return new Xe(k);default:throw new Error(`Unknown PostProcessor type: ${k.type}`)}}post_process(k,...Y){throw Error("post_process should be implemented in subclass.")}_call(k,...Y){return this.post_process(k,...Y)}}class Oe extends Se{constructor(k){super(k),this.cls=k.cls[0],this.sep=k.sep[0]}post_process(k,Y=null,{add_special_tokens:ie=!0}={}){ie&&(k=(0,n.mergeArrays)([this.cls],k,[this.sep]));let le=new Array(k.length).fill(0);if(Y!==null){const be=ie&&this instanceof ze?[this.sep]:[],Fe=ie?[this.sep]:[];k=(0,n.mergeArrays)(k,be,Y,Fe),le=(0,n.mergeArrays)(le,new Array(Y.length+be.length+Fe.length).fill(1))}return{tokens:k,token_type_ids:le}}}class ze extends Oe{}class Ke extends Se{constructor(k){super(k),this.single=k.single,this.pair=k.pair}post_process(k,Y=null,{add_special_tokens:ie=!0}={}){const le=Y===null?this.single:this.pair;let be=[],Fe=[];for(const Ze of le)"SpecialToken"in Ze?ie&&(be.push(Ze.SpecialToken.id),Fe.push(Ze.SpecialToken.type_id)):"Sequence"in Ze&&(Ze.Sequence.id==="A"?(be=(0,n.mergeArrays)(be,k),Fe=(0,n.mergeArrays)(Fe,new Array(k.length).fill(Ze.Sequence.type_id))):Ze.Sequence.id==="B"&&(be=(0,n.mergeArrays)(be,Y),Fe=(0,n.mergeArrays)(Fe,new Array(Y.length).fill(Ze.Sequence.type_id))));return{tokens:be,token_type_ids:Fe}}}class He extends Se{post_process(k,Y=null){return Y&&(k=(0,n.mergeArrays)(k,Y)),{tokens:k}}}class Xe extends Se{constructor(k){super(k),this.processors=k.processors.map(Y=>Se.fromConfig(Y))}post_process(k,Y=null,ie={}){let le;for(const be of this.processors)if(be instanceof He)k=be.post_process(k).tokens,Y&&(Y=be.post_process(Y).tokens);else{const Fe=be.post_process(k,Y,ie);k=Fe.tokens,le=Fe.token_type_ids}return{tokens:k,token_type_ids:le}}}class Be extends s.Callable{constructor(k){super(),this.config=k,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=k.trim_offsets}static fromConfig(k){if(k===null)return null;switch(k.type){case"WordPiece":return new rt(k);case"Metaspace":return new Me(k);case"ByteLevel":return new We(k);case"Replace":return new Ye(k);case"ByteFallback":return new nt(k);case"Fuse":return new et(k);case"Strip":return new mt(k);case"Sequence":return new E(k);case"CTC":return new O(k);case"BPEDecoder":return new S(k);default:throw new Error(`Unknown Decoder type: ${k.type}`)}}_call(k){return this.decode(k)}decode(k){return this.decode_chain(k).join("")}decode_chain(k){throw Error("`decode_chain` should be implemented in subclass.")}}class Ye extends Be{decode_chain(k){const Y=_(this.config.pattern);return Y===null?k:k.map(ie=>ie.replaceAll(Y,this.config.content))}}class nt extends Be{constructor(k){super(k),this.text_decoder=new TextDecoder}decode_chain(k){const Y=[];let ie=[];for(const le of k){let be=null;if(le.length===6&&le.startsWith("<0x")&&le.endsWith(">")){const Fe=parseInt(le.slice(3,5),16);isNaN(Fe)||(be=Fe)}if(be!==null)ie.push(be);else{if(ie.length>0){const Fe=this.text_decoder.decode(Uint8Array.from(ie));Y.push(Fe),ie=[]}Y.push(le)}}if(ie.length>0){const le=this.text_decoder.decode(Uint8Array.from(ie));Y.push(le),ie=[]}return Y}}class et extends Be{decode_chain(k){return[k.join("")]}}class mt extends Be{constructor(k){super(k),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(k){return k.map(Y=>{let ie=0;for(let be=0;be<this.start&&Y[be]===this.content;++be){ie=be+1;continue}let le=Y.length;for(let be=0;be<this.stop;++be){const Fe=Y.length-be-1;if(Y[Fe]===this.content){le=Fe;continue}else break}return Y.slice(ie,le)})}}class rt extends Be{constructor(k){super(k),this.cleanup=k.cleanup}decode_chain(k){return k.map((Y,ie)=>(ie!==0&&(Y.startsWith(this.config.prefix)?Y=Y.replace(this.config.prefix,""):Y=" "+Y),this.cleanup&&(Y=A(Y)),Y))}}class We extends Be{constructor(k){super(k),this.byte_decoder=W,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(k){const Y=k.join(""),ie=new Uint8Array([...Y].map(be=>this.byte_decoder[be]));return this.text_decoder.decode(ie)}decode_chain(k){const Y=[];let ie=[];for(const le of k)this.added_tokens.find(be=>be.content===le)!==void 0?(ie.length>0&&(Y.push(this.convert_tokens_to_string(ie)),ie=[]),Y.push(le)):ie.push(le);return ie.length>0&&Y.push(this.convert_tokens_to_string(ie)),Y}}class O extends Be{constructor(k){super(k),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(k){if(k.length===0)return"";const Y=[k[0]];for(let be=1;be<k.length;++be)k[be]!==Y.at(-1)&&Y.push(k[be]);let le=Y.filter(be=>be!==this.pad_token).join("");return this.cleanup&&(le=A(le).replaceAll(this.word_delimiter_token," ").trim()),le}decode_chain(k){return[this.convert_tokens_to_string(k)]}}class E extends Be{constructor(k){super(k),this.decoders=k.decoders.map(Y=>Be.fromConfig(Y))}decode_chain(k){return this.decoders.reduce((Y,ie)=>ie.decode_chain(Y),k)}}class S extends Be{constructor(k){super(k),this.suffix=this.config.suffix}decode_chain(k){return k.map((Y,ie)=>Y.replaceAll(this.suffix,ie===k.length-1?"":" "))}}class ee extends Be{decode_chain(k){let Y="";for(let ie=1;ie<k.length;ie+=2)Y+=k[ie];return[Y]}}class de extends H{constructor(k){super(),this.addPrefixSpace=k.add_prefix_space,this.replacement=k.replacement,this.strRep=k.str_rep||this.replacement,this.prepend_scheme=k.prepend_scheme??"always"}pre_tokenize_text(k,{section_index:Y=void 0}={}){let ie=k.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!ie.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&Y===0)&&(ie=this.strRep+ie),[ie]}}class Me extends Be{constructor(k){super(k),this.addPrefixSpace=k.add_prefix_space,this.replacement=k.replacement}decode_chain(k){const Y=[];for(let ie=0;ie<k.length;++ie){let le=k[ie].replaceAll(this.replacement," ");this.addPrefixSpace&&ie==0&&le.startsWith(" ")&&(le=le.substring(1)),Y.push(le)}return Y}}class ye extends J{constructor(k){super(k),this.charsmap=k.precompiled_charsmap}normalize(k){return k=k.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),k=k.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),k.includes("～")?k=k.split("～").map(ie=>ie.normalize("NFKC")).join("～"):k=k.normalize("NFKC"),k}}class bt extends H{constructor(k){super(),this.tokenizers=k.pretokenizers.map(Y=>H.fromConfig(Y))}pre_tokenize_text(k,Y){return this.tokenizers.reduce((ie,le)=>le.pre_tokenize(ie,Y),[k])}}class L extends H{constructor(k){super()}pre_tokenize_text(k,Y){return k.match(/\w+|[^\w\s]+/g)||[]}}class oe extends H{constructor(k){super()}pre_tokenize_text(k,Y){return T(k)}}class V extends H{constructor(k){super(),this.config=k,this.pattern=_(this.config.pattern),this.content=this.config.content}pre_tokenize_text(k,Y){return this.pattern===null?[k]:[k.replaceAll(this.pattern,this.config.content)]}}const ne=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function ge(_e,k,Y,ie){for(const le of Object.keys(_e)){const be=k-_e[le].length,Fe=Y(le),Ze=new Array(be).fill(Fe);_e[le]=ie==="right"?(0,n.mergeArrays)(_e[le],Ze):(0,n.mergeArrays)(Ze,_e[le])}}function Re(_e,k){for(const Y of Object.keys(_e))_e[Y].length=k}class Pe extends s.Callable{return_token_type_ids=!1;padding_side="right";constructor(k,Y){super(),this.config=Y,this.normalizer=J.fromConfig(k.normalizer),this.pre_tokenizer=H.fromConfig(k.pre_tokenizer),this.model=X.fromConfig(k.model,Y),this.post_processor=Se.fromConfig(k.post_processor),this.decoder=Be.fromConfig(k.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const ie of k.added_tokens){const le=new B(ie);this.added_tokens.push(le),this.model.tokens_to_ids.set(le.content,le.id),this.model.vocab[le.id]=le.content,le.special&&(this.special_tokens.push(le.content),this.all_special_ids.push(le.id))}if(this.additional_special_tokens=Y.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map(ie=>ie.content)),this.added_tokens_map=new Map(this.added_tokens.map(ie=>[ie.content,ie])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=Y.model_max_length,this.remove_space=Y.remove_space,this.clean_up_tokenization_spaces=Y.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=Y.do_lowercase_and_remove_accent??!1,Y.padding_side&&(this.padding_side=Y.padding_side),this.legacy=!1,this.chat_template=Y.chat_template??null,Array.isArray(this.chat_template)){const ie=Object.create(null);for(const{name:le,template:be}of this.chat_template){if(typeof le!="string"||typeof be!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');ie[le]=be}this.chat_template=ie}this._compiled_template_cache=new Map}getToken(...k){for(const Y of k){const ie=this.config[Y];if(ie)if(typeof ie=="object"){if(ie.__type==="AddedToken")return ie.content;throw Error(`Unknown token: ${ie}`)}else return ie}return null}static async from_pretrained(k,{progress_callback:Y=null,config:ie=null,cache_dir:le=null,local_files_only:be=!1,revision:Fe="main",legacy:Ze=null}={}){const st=await u(k,{progress_callback:Y,config:ie,cache_dir:le,local_files_only:be,revision:Fe,legacy:Ze});return new this(...st)}_call(k,{text_pair:Y=null,add_special_tokens:ie=!0,padding:le=!1,truncation:be=null,max_length:Fe=null,return_tensor:Ze=!0,return_token_type_ids:st=null}={}){const it=Array.isArray(k);let qe;if(it){if(k.length===0)throw Error("text array must be non-empty");if(Y!==null){if(Array.isArray(Y)){if(k.length!==Y.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");qe=k.map((vt,Gt)=>this._encode_plus(vt,{text_pair:Y[Gt],add_special_tokens:ie,return_token_type_ids:st}))}else qe=k.map(vt=>this._encode_plus(vt,{add_special_tokens:ie,return_token_type_ids:st}))}else{if(k==null)throw Error("text may not be null or undefined");if(Array.isArray(Y))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");qe=[this._encode_plus(k,{text_pair:Y,add_special_tokens:ie,return_token_type_ids:st})]}if(Fe===null?Fe=this.model_max_length:be===null&&(le===!0?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),Fe=this.model_max_length):le===!1&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),be=!0)),le===!0&&(Fe=Math.min((0,o.max)(qe.map(vt=>vt.input_ids.length))[0],Fe??1/0)),Fe=Math.min(Fe,this.model_max_length??1/0),le||be)for(let vt=0;vt<qe.length;++vt)qe[vt].input_ids.length!==Fe&&(qe[vt].input_ids.length>Fe?be&&Re(qe[vt],Fe):le&&ge(qe[vt],Fe,Gt=>Gt==="input_ids"?this.pad_token_id:0,this.padding_side));const kt={};if(Ze){if(!(le&&be)&&qe.some(Gt=>{for(const wr of Object.keys(Gt))if(Gt[wr].length!==qe[0][wr]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const vt=[qe.length,qe[0].input_ids.length];for(const Gt of Object.keys(qe[0]))kt[Gt]=new a.Tensor("int64",BigInt64Array.from(qe.flatMap(wr=>wr[Gt]).map(BigInt)),vt)}else{for(const vt of Object.keys(qe[0]))kt[vt]=qe.map(Gt=>Gt[vt]);if(!it)for(const vt of Object.keys(kt))kt[vt]=kt[vt][0]}return kt}_encode_text(k){if(k===null)return null;const Y=this.added_tokens_splitter.split(k);for(let le=0;le<Y.length;++le){const be=this.added_tokens_map.get(Y[le]);be&&(be.lstrip&&le>0&&(Y[le-1]=Y[le-1].trimEnd()),be.rstrip&&le<Y.length-1&&(Y[le+1]=Y[le+1].trimStart()))}return Y.flatMap((le,be)=>{if(le.length===0)return[];if(this.added_tokens_map.has(le))return[le];if(this.remove_space===!0&&(le=le.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(le=g(le)),this.normalizer!==null&&(le=this.normalizer(le)),le.length===0)return[];const Fe=this.pre_tokenizer!==null?this.pre_tokenizer(le,{section_index:be}):[le];return this.model(Fe)})}_encode_plus(k,{text_pair:Y=null,add_special_tokens:ie=!0,return_token_type_ids:le=null}={}){const{tokens:be,token_type_ids:Fe}=this._tokenize_helper(k,{pair:Y,add_special_tokens:ie}),Ze=this.model.convert_tokens_to_ids(be),st={input_ids:Ze,attention_mask:new Array(Ze.length).fill(1)};return(le??this.return_token_type_ids)&&Fe&&(st.token_type_ids=Fe),st}_tokenize_helper(k,{pair:Y=null,add_special_tokens:ie=!1}={}){const le=this._encode_text(k),be=this._encode_text(Y);return this.post_processor?this.post_processor(le,be,{add_special_tokens:ie}):{tokens:(0,n.mergeArrays)(le??[],be??[])}}tokenize(k,{pair:Y=null,add_special_tokens:ie=!1}={}){return this._tokenize_helper(k,{pair:Y,add_special_tokens:ie}).tokens}encode(k,{text_pair:Y=null,add_special_tokens:ie=!0,return_token_type_ids:le=null}={}){return this._encode_plus(k,{text_pair:Y,add_special_tokens:ie,return_token_type_ids:le}).input_ids}batch_decode(k,Y={}){return k instanceof a.Tensor&&(k=k.tolist()),k.map(ie=>this.decode(ie,Y))}decode(k,Y={}){if(k instanceof a.Tensor&&(k=P(k)),!Array.isArray(k)||k.length===0||!(0,n.isIntegralNumber)(k[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(k,Y)}decode_single(k,{skip_special_tokens:Y=!1,clean_up_tokenization_spaces:ie=null}){let le=this.model.convert_ids_to_tokens(k);Y&&(le=le.filter(Fe=>!this.special_tokens.includes(Fe)));let be=this.decoder?this.decoder(le):le.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(be=be.replaceAll(this.decoder.end_of_word_suffix," "),Y&&(be=be.trim())),(ie??this.clean_up_tokenization_spaces)&&(be=A(be)),be}get_chat_template({chat_template:k=null,tools:Y=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const ie=this.chat_template;if(k!==null&&Object.hasOwn(ie,k))k=ie[k];else if(k===null)if(Y!==null&&"tool_use"in ie)k=ie.tool_use;else if("default"in ie)k=ie.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(ie).sort()}.`)}else if(k===null)if(this.chat_template)k=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return k}apply_chat_template(k,{tools:Y=null,documents:ie=null,chat_template:le=null,add_generation_prompt:be=!1,tokenize:Fe=!0,padding:Ze=!1,truncation:st=!1,max_length:it=null,return_tensor:qe=!0,return_dict:kt=!1,tokenizer_kwargs:vt={},...Gt}={}){if(le=this.get_chat_template({chat_template:le,tools:Y}),typeof le!="string")throw Error(`chat_template must be a string, but got ${typeof le}`);let wr=this._compiled_template_cache.get(le);wr===void 0&&(wr=new d.Template(le),this._compiled_template_cache.set(le,wr));const rr=Object.create(null);for(const Vt of ne){const cr=this.getToken(Vt);cr&&(rr[Vt]=cr)}const hr=wr.render({messages:k,add_generation_prompt:be,tools:Y,documents:ie,...rr,...Gt});if(Fe){const Vt=this._call(hr,{add_special_tokens:!1,padding:Ze,truncation:st,max_length:it,return_tensor:qe,...vt});return kt?Vt:Vt.input_ids}return hr}}class gt extends Pe{return_token_type_ids=!0}class ot extends Pe{return_token_type_ids=!0}class at extends Pe{return_token_type_ids=!0}class Jt extends Pe{return_token_type_ids=!0}class At extends Pe{return_token_type_ids=!0}class tr extends Pe{return_token_type_ids=!0}class Wt extends Pe{return_token_type_ids=!0}class Dr extends Pe{return_token_type_ids=!0}class Qt extends Pe{return_token_type_ids=!0}class Fr extends Pe{}class Yr extends Pe{}class ls extends Pe{return_token_type_ids=!0;constructor(k,Y){super(k,Y),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Jr extends Pe{return_token_type_ids=!0}class Ts extends Pe{}class jr extends Pe{}class Es extends Pe{}class Gr extends Pe{constructor(k,Y){super(k,Y),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(ie=>this.languageRegex.test(ie)),this.lang_to_token=ie=>ie}_build_translation_inputs(k,Y,ie){return ar(this,k,Y,ie)}}class us extends Gr{}class Lr extends Pe{}class Os extends Pe{}const Zt="▁";class Zr extends Pe{padding_side="left";constructor(k,Y){super(k,Y),this.legacy=Y.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new de({replacement:Zt,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(k){if(k===null)return null;if(this.legacy||k.length===0)return super._encode_text(k);let Y=super._encode_text(Zt+k.replaceAll(Zt," "));return Y.length>1&&Y[0]===Zt&&this.special_tokens.includes(Y[1])&&(Y=Y.slice(1)),Y}}class es extends Pe{}class Or extends Pe{}class Nr extends Pe{}class je extends Pe{}class Je extends Pe{}class pt extends Pe{}class gr extends Pe{}class Ur extends Pe{}class Ds extends Pe{}function ar(_e,k,Y,ie){if(!("language_codes"in _e)||!Array.isArray(_e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in _e)||!(_e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in _e)||typeof _e.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const le=ie.src_lang,be=ie.tgt_lang;if(!_e.language_codes.includes(be))throw new Error(`Target language code "${be}" is not valid. Must be one of: {${_e.language_codes.join(", ")}}`);if(le!==void 0){if(!_e.language_codes.includes(le))throw new Error(`Source language code "${le}" is not valid. Must be one of: {${_e.language_codes.join(", ")}}`);for(const Fe of _e.post_processor.config.single)if("SpecialToken"in Fe&&_e.languageRegex.test(Fe.SpecialToken.id)){Fe.SpecialToken.id=_e.lang_to_token(le);break}}return ie.forced_bos_token_id=_e.model.convert_tokens_to_ids([_e.lang_to_token(be)])[0],_e._call(k,Y)}class Sr extends Pe{constructor(k,Y){super(k,Y),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(ie=>this.languageRegex.test(ie)),this.lang_to_token=ie=>ie}_build_translation_inputs(k,Y,ie){return ar(this,k,Y,ie)}}class Ls extends Pe{constructor(k,Y){super(k,Y),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(ie=>this.languageRegex.test(ie)).map(ie=>ie.slice(2,-2)),this.lang_to_token=ie=>`__${ie}__`}_build_translation_inputs(k,Y,ie){return ar(this,k,Y,ie)}}class tn extends Pe{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(k,{return_timestamps:Y=!1,return_language:ie=!1,time_precision:le=null,force_full_sequences:be=!0}={}){if(le===null)throw Error("Must specify time_precision");let Fe=null;const Ze=Y==="word";function st(){return{language:Fe,timestamp:[null,null],text:""}}const it=[];let qe=st(),kt=0;const vt=this.timestamp_begin,wr=vt+1500;let rr=[],hr=[],Vt=!1,cr=null;const Cs=new Set(this.all_special_ids);for(const Kt of k){const Mr=Kt.tokens,$r=Ze?Kt.token_timestamps:null;let Kr=null,ts=vt;if("stride"in Kt){const[br,lr,er]=Kt.stride;if(kt-=lr,cr=br-er,lr&&(ts=lr/le+vt),er)for(let dr=Mr.length-1;dr>=0;--dr){const Br=Number(Mr[dr]);if(Br>=vt){if(Kr!==null&&(Br-vt)*le<cr)break;Kr=Br}}}let Ir=[],Tr=[];for(let br=0;br<Mr.length;++br){const lr=Number(Mr[br]);if(Cs.has(lr)){const er=this.decode([lr]),dr=c.WHISPER_LANGUAGE_MAPPING.get(er.slice(2,-2));if(dr!==void 0){if(Fe!==null&&dr!==Fe&&!Y){rr.push(Ir);const Br=this.findLongestCommonSequence(rr)[0],rs=this.decode(Br);qe.text=rs,it.push(qe),rr=[],Ir=[],qe=st()}Fe=qe.language=dr}}else if(lr>=vt&&lr<=wr){const er=(lr-vt)*le+kt,dr=(0,o.round)(er,2);if(Kr!==null&&lr>=Kr)Vt=!0;else if(Vt||rr.length>0&&lr<ts)Vt=!1;else if(qe.timestamp[0]===null)qe.timestamp[0]=dr;else if(dr!==qe.timestamp[0]){qe.timestamp[1]=dr,rr.push(Ir),Ze&&hr.push(Tr);const[Br,rs]=this.findLongestCommonSequence(rr,hr),jn=this.decode(Br);qe.text=jn,Ze&&(qe.words=this.collateWordTimestamps(Br,rs,Fe)),it.push(qe),rr=[],Ir=[],hr=[],Tr=[],qe=st()}}else if(Ir.push(lr),Ze){let er=(0,o.round)($r[br]+kt,2),dr;if(br+1<$r.length){dr=(0,o.round)($r[br+1]+kt,2);const Br=this.decode([lr]);b.test(Br)&&(dr=(0,o.round)(Math.min(er+le,dr),2))}else dr=null;Tr.push([er,dr])}}if("stride"in Kt){const[br,lr,er]=Kt.stride;kt+=br-er}Ir.length>0?(rr.push(Ir),Ze&&hr.push(Tr)):rr.every(br=>br.length===0)&&(qe=st(),rr=[],Ir=[],hr=[],Tr=[])}if(rr.length>0){if(be&&Y)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Kt,Mr]=this.findLongestCommonSequence(rr,hr),$r=this.decode(Kt);qe.text=$r,Ze&&(qe.words=this.collateWordTimestamps(Kt,Mr,Fe)),it.push(qe)}let yr=Object.create(null);const ds=it.map(Kt=>Kt.text).join("");if(Y||ie){for(let Kt=0;Kt<it.length;++Kt){const Mr=it[Kt];Y||delete Mr.timestamp,ie||delete Mr.language}if(Ze){const Kt=[];for(const Mr of it)for(const $r of Mr.words)Kt.push($r);yr={chunks:Kt}}else yr={chunks:it}}return[ds,yr]}findLongestCommonSequence(k,Y=null){let ie=k[0],le=ie.length,be=[];const Fe=Array.isArray(Y)&&Y.length>0;let Ze=Fe?[]:null,st=Fe?Y[0]:null;for(let it=1;it<k.length;++it){const qe=k[it];let kt=0,vt=[le,le,0,0];const Gt=qe.length;for(let yr=1;yr<le+Gt;++yr){const ds=Math.max(0,le-yr),Kt=Math.min(le,le+Gt-yr),Mr=ie.slice(ds,Kt),$r=Math.max(0,yr-le),Kr=Math.min(Gt,yr),ts=qe.slice($r,Kr);if(Mr.length!==ts.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Ir;Fe?Ir=Mr.filter((lr,er)=>lr===ts[er]&&st[ds+er]<=Y[it][$r+er]).length:Ir=Mr.filter((lr,er)=>lr===ts[er]).length;const Tr=yr/1e4,br=Ir/yr+Tr;Ir>1&&br>kt&&(kt=br,vt=[ds,Kt,$r,Kr])}const[wr,rr,hr,Vt]=vt,cr=Math.floor((rr+wr)/2),Cs=Math.floor((Vt+hr)/2);be.push(...ie.slice(0,cr)),ie=qe.slice(Cs),le=ie.length,Fe&&(Ze.push(...st.slice(0,cr)),st=Y[it].slice(Cs))}return be.push(...ie),Fe?(Ze.push(...st),[be,Ze]):[be,[]]}collateWordTimestamps(k,Y,ie){const[le,be,Fe]=this.combineTokensIntoWords(k,ie),Ze=[];for(let st=0;st<le.length;++st){const it=Fe[st];Ze.push({text:le[st],timestamp:[Y[it.at(0)][0],Y[it.at(-1)][1]]})}return Ze}combineTokensIntoWords(k,Y,ie=`"'“¡¿([{-`,le=`"'.。,，!！?？:：”)]}、`){Y=Y??"english";let be,Fe,Ze;return["chinese","japanese","thai","lao","myanmar"].includes(Y)?[be,Fe,Ze]=this.splitTokensOnUnicode(k):[be,Fe,Ze]=this.splitTokensOnSpaces(k),this.mergePunctuations(be,Fe,Ze,ie,le)}decode(k,Y){let ie;return Y?.decode_with_timestamps?(k instanceof a.Tensor&&(k=P(k)),ie=this.decodeWithTimestamps(k,Y)):ie=super.decode(k,Y),ie}decodeWithTimestamps(k,Y){const ie=Y?.time_precision??.02,le=Array.from(this.all_special_ids).at(-1)+1;let be=[[]];for(let Fe of k)if(Fe=Number(Fe),Fe>=le){const Ze=((Fe-le)*ie).toFixed(2);be.push(`<|${Ze}|>`),be.push([])}else be[be.length-1].push(Fe);return be=be.map(Fe=>typeof Fe=="string"?Fe:super.decode(Fe,Y)),be.join("")}splitTokensOnUnicode(k){const Y=this.decode(k,{decode_with_timestamps:!0}),ie="�",le=[],be=[],Fe=[];let Ze=[],st=[],it=0;for(let qe=0;qe<k.length;++qe){const kt=k[qe];Ze.push(kt),st.push(qe);const vt=this.decode(Ze,{decode_with_timestamps:!0});(!vt.includes(ie)||Y[it+vt.indexOf(ie)]===ie)&&(le.push(vt),be.push(Ze),Fe.push(st),Ze=[],st=[],it+=vt.length)}return[le,be,Fe]}splitTokensOnSpaces(k){const[Y,ie,le]=this.splitTokensOnUnicode(k),be=[],Fe=[],Ze=[],st=new RegExp(`^[${x}]$`,"gu");for(let it=0;it<Y.length;++it){const qe=Y[it],kt=ie[it],vt=le[it],Gt=kt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),wr=qe.startsWith(" "),rr=qe.trim(),hr=st.test(rr);if(Gt||wr||hr||be.length===0)be.push(qe),Fe.push(kt),Ze.push(vt);else{const Vt=be.length-1;be[Vt]+=qe,Fe[Vt].push(...kt),Ze[Vt].push(...vt)}}return[be,Fe,Ze]}mergePunctuations(k,Y,ie,le,be){const Fe=structuredClone(k),Ze=structuredClone(Y),st=structuredClone(ie);let it=Fe.length-2,qe=Fe.length-1;for(;it>=0;)Fe[it].startsWith(" ")&&le.includes(Fe[it].trim())?(Fe[qe]=Fe[it]+Fe[qe],Ze[qe]=(0,n.mergeArrays)(Ze[it],Ze[qe]),st[qe]=(0,n.mergeArrays)(st[it],st[qe]),Fe[it]="",Ze[it]=[],st[it]=[]):qe=it,--it;for(it=0,qe=1;qe<Fe.length;)!Fe[it].endsWith(" ")&&be.includes(Fe[qe])?(Fe[it]+=Fe[qe],Ze[it]=(0,n.mergeArrays)(Ze[it],Ze[qe]),st[it]=(0,n.mergeArrays)(st[it],st[qe]),Fe[qe]="",Ze[qe]=[],st[qe]=[]):it=qe,++qe;return[Fe.filter(kt=>kt),Ze.filter(kt=>kt.length>0),st.filter(kt=>kt.length>0)]}}class rn extends Pe{}class cs extends Pe{}class sn extends Pe{}class nn extends Pe{constructor(k,Y){super(k,Y),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(ie=>this.languageRegex.test(ie)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(k){if(k===null)return null;const[Y,...ie]=k.trim().split(this.languageRegex);if(ie.length===0)return super._encode_text(Y);if(ie.length===2){const[le,be]=ie;return this.supported_language_codes.includes(le)||console.warn(`Unsupported language code "${le}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,n.mergeArrays)([le],super._encode_text(be))}}}class on extends Pe{}class an extends Pe{}class Gs extends Pe{}class Ps extends Pe{}class ln extends Pe{}class un extends Pe{constructor(k,Y){super(k,Y),this.decoder=new ee({})}}class cn extends Pe{}class dn extends Pe{}class Bs{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:Ts,DistilBertTokenizer:Fr,CamembertTokenizer:Yr,DebertaTokenizer:At,DebertaV2Tokenizer:tr,BertTokenizer:gt,HerbertTokenizer:Wt,ConvBertTokenizer:Dr,RoFormerTokenizer:Qt,XLMTokenizer:ls,ElectraTokenizer:Jr,MobileBertTokenizer:at,SqueezeBertTokenizer:Jt,AlbertTokenizer:ot,GPT2Tokenizer:jr,BartTokenizer:Es,MBartTokenizer:Gr,MBart50Tokenizer:us,RobertaTokenizer:Lr,WhisperTokenizer:tn,CodeGenTokenizer:rn,CLIPTokenizer:cs,SiglipTokenizer:sn,MarianTokenizer:nn,BloomTokenizer:Os,NllbTokenizer:Sr,M2M100Tokenizer:Ls,LlamaTokenizer:Zr,CodeLlamaTokenizer:es,XLMRobertaTokenizer:Or,MPNetTokenizer:Nr,FalconTokenizer:je,GPTNeoXTokenizer:Je,EsmTokenizer:pt,Wav2Vec2CTCTokenizer:on,BlenderbotTokenizer:an,BlenderbotSmallTokenizer:Gs,SpeechT5Tokenizer:Ps,NougatTokenizer:ln,VitsTokenizer:un,Qwen2Tokenizer:gr,GemmaTokenizer:Ur,Grok1Tokenizer:Ds,CohereTokenizer:cn,MgpstrTokenizer:dn,PreTrainedTokenizer:Pe};static async from_pretrained(k,{progress_callback:Y=null,config:ie=null,cache_dir:le=null,local_files_only:be=!1,revision:Fe="main",legacy:Ze=null}={}){const[st,it]=await u(k,{progress_callback:Y,config:ie,cache_dir:le,local_files_only:be,revision:Fe,legacy:Ze}),qe=it.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let kt=this.TOKENIZER_CLASS_MAPPING[qe];return kt||(console.warn(`Unknown tokenizer class "${qe}", attempting to construct from base class.`),kt=Pe),new kt(st,it)}}},"./src/utils/audio.js":(e,r,t)=>{t.r(r),t.d(r,{RawAudio:()=>re,hamming:()=>p,hanning:()=>u,mel_filter_bank:()=>I,read_audio:()=>d,spectrogram:()=>$,window_function:()=>j});var s=t("./src/utils/hub.js"),n=t("./src/utils/maths.js"),i=t("./src/utils/core.js"),o=t("./src/env.js"),a=t("./src/utils/tensor.js"),l=t("?7992");async function d(z,te){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const W=await(await(0,s.getFile)(z)).arrayBuffer(),K=new AudioContext({sampleRate:te});typeof te>"u"&&console.warn(`No sampling rate provided, using default of ${K.sampleRate}Hz.`);const se=await K.decodeAudioData(W);let J;if(se.numberOfChannels===2){const ue=Math.sqrt(2),ce=se.getChannelData(0),N=se.getChannelData(1);J=new Float32Array(ce.length);for(let D=0;D<se.length;++D)J[D]=ue*(ce[D]+N[D])/2}else J=se.getChannelData(0);return J}function c(z,te){if(z<1)return new Float64Array;if(z===1)return new Float64Array([1]);const W=1-te,K=2*Math.PI/(z-1),se=new Float64Array(z);for(let J=0;J<z;++J)se[J]=te-W*Math.cos(J*K);return se}function u(z){return c(z,.5)}function p(z){return c(z,.54)}const _={htk:z=>2595*Math.log10(1+z/700),kaldi:z=>1127*Math.log(1+z/700),slaney:(z,te=1e3,W=15,K=27/Math.log(6.4))=>z>=te?W+Math.log(z/te)*K:3*z/200};function f(z,te="htk"){const W=_[te];if(!W)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof z=="number"?W(z):z.map(K=>W(K))}const P={htk:z=>700*(10**(z/2595)-1),kaldi:z=>700*(Math.exp(z/1127)-1),slaney:(z,te=1e3,W=15,K=Math.log(6.4)/27)=>z>=W?te*Math.exp(K*(z-W)):200*z/3};function A(z,te="htk"){const W=P[te];if(!W)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof z=="number"?W(z):z.map(K=>W(K))}function y(z,te){const W=Float64Array.from({length:te.length-1},(ue,ce)=>te[ce+1]-te[ce]),K=Array.from({length:z.length},()=>new Array(te.length));for(let ue=0;ue<z.length;++ue){const ce=K[ue];for(let N=0;N<te.length;++N)ce[N]=te[N]-z[ue]}const se=te.length-2,J=Array.from({length:se},()=>new Array(z.length));for(let ue=0;ue<z.length;++ue){const ce=K[ue];for(let N=0;N<se;++N){const D=-ce[N]/W[N],Q=ce[N+2]/W[N+1];J[N][ue]=Math.max(0,Math.min(D,Q))}}return J}function g(z,te,W){const K=(te-z)/(W-1);return Float64Array.from({length:W},(se,J)=>z+K*J)}function I(z,te,W,K,se,J=null,ue="htk",ce=!1){if(J!==null&&J!=="slaney")throw new Error('norm must be one of null or "slaney"');if(z<2)throw new Error(`Require num_frequency_bins: ${z} >= 2`);if(W>K)throw new Error(`Require min_frequency: ${W} <= max_frequency: ${K}`);const N=f(W,ue),D=f(K,ue),Q=g(N,D,te+2);let U=A(Q,ue),ae;if(ce){const Ee=se/((z-1)*2);ae=f(Float64Array.from({length:z},(Le,Ve)=>Ve*Ee),ue),U=Q}else ae=g(0,Math.floor(se/2),z);const Ae=y(ae,U);if(J!==null&&J==="slaney")for(let Ee=0;Ee<te;++Ee){const Le=Ae[Ee],Ve=2/(U[Ee+2]-U[Ee]);for(let me=0;me<z;++me)Le[me]*=Ve}return Ae}function v(z,te,W){const K=new z.constructor(z.length+te+W),se=z.length-1;for(let J=0;J<z.length;++J)K[te+J]=z[J];for(let J=1;J<=te;++J)K[te-J]=z[(0,i.calculateReflectOffset)(J,se)];for(let J=1;J<=W;++J)K[se+te+J]=z[(0,i.calculateReflectOffset)(se-J,se)];return K}function T(z,te,W,K,se){if(W<=0)throw new Error("reference must be greater than zero");if(K<=0)throw new Error("min_value must be greater than zero");W=Math.max(K,W);const J=Math.log10(W);for(let ue=0;ue<z.length;++ue)z[ue]=te*Math.log10(Math.max(K,z[ue])-J);if(se!==null){if(se<=0)throw new Error("db_range must be greater than zero");const ue=(0,n.max)(z)[0]-se;for(let ce=0;ce<z.length;++ce)z[ce]=Math.max(z[ce],ue)}return z}function x(z,te=1,W=1e-5,K=null){return T(z,20,te,W,K)}function b(z,te=1,W=1e-10,K=null){return T(z,10,te,W,K)}async function $(z,te,W,K,{fft_length:se=null,power:J=1,center:ue=!0,pad_mode:ce="reflect",onesided:N=!0,preemphasis:D=null,preemphasis_htk_flavor:Q=!0,mel_filters:U=null,mel_floor:ae=1e-10,log_mel:Ae=null,reference:Ee=1,min_value:Le=1e-10,db_range:Ve=null,remove_dc_offset:me=null,min_num_frames:H=null,max_num_frames:fe=null,do_pad:Z=!0,transpose:xe=!1}={}){const Ce=te.length;if(se===null&&(se=W),W>se)throw Error(`frame_length (${W}) may not be larger than fft_length (${se})`);if(Ce!==W)throw new Error(`Length of the window (${Ce}) must equal frame_length (${W})`);if(K<=0)throw new Error("hop_length must be greater than zero");if(J===null&&U!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(!Q)throw new Error("`preemphasis_htk_flavor=false` is not currently supported.");if(ue){if(ce!=="reflect")throw new Error(`pad_mode="${ce}" not implemented yet.`);const mt=Math.floor((se-1)/2)+1;z=v(z,mt,mt)}let $e=Math.floor(1+Math.floor((z.length-W)/K));H!==null&&$e<H&&($e=H);const Se=N?Math.floor(se/2)+1:se;let Oe=$e,ze=$e;fe!==null&&(fe>$e?Z&&(ze=fe):ze=Oe=fe);const Ke=new n.FFT(se),He=new Float64Array(se),Xe=new Float64Array(Ke.outputBufferSize),Be=new Float32Array(Se*ze);for(let mt=0;mt<Oe;++mt){const rt=mt*K,We=Math.min(z.length-rt,W);We!==W&&He.fill(0,0,W);for(let O=0;O<We;++O)He[O]=z[rt+O];if(me){let O=0;for(let S=0;S<We;++S)O+=He[S];const E=O/We;for(let S=0;S<We;++S)He[S]-=E}if(D!==null){for(let O=We-1;O>=1;--O)He[O]-=D*He[O-1];He[0]*=1-D}for(let O=0;O<te.length;++O)He[O]*=te[O];Ke.realTransform(Xe,He);for(let O=0;O<Se;++O){const E=O<<1;Be[O*ze+mt]=Xe[E]**2+Xe[E+1]**2}}if(J!==null&&J!==2){const mt=J/2;for(let rt=0;rt<Be.length;++rt)Be[rt]**=mt}const Ye=U.length;let nt=await(0,a.matmul)(new a.Tensor("float32",U.flat(),[Ye,Se]),new a.Tensor("float32",Be,[Se,ze]));xe&&(nt=nt.transpose(1,0));const et=nt.data;for(let mt=0;mt<et.length;++mt)et[mt]=Math.max(ae,et[mt]);if(J!==null&&Ae!==null){const mt=Math.min(et.length,Oe*Ye);switch(Ae){case"log":for(let rt=0;rt<mt;++rt)et[rt]=Math.log(et[rt]);break;case"log10":for(let rt=0;rt<mt;++rt)et[rt]=Math.log10(et[rt]);break;case"dB":if(J===1)x(et,Ee,Le,Ve);else if(J===2)b(et,Ee,Le,Ve);else throw new Error(`Cannot use log_mel option '${Ae}' with power ${J}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${Ae}'`)}}return nt}function j(z,te,{periodic:W=!0,frame_length:K=null,center:se=!0}={}){const J=W?z+1:z;let ue;switch(te){case"boxcar":ue=new Float64Array(J).fill(1);break;case"hann":case"hann_window":ue=u(J);break;case"hamming":ue=p(J);break;case"povey":ue=u(J).map(ce=>Math.pow(ce,.85));break;default:throw new Error(`Unknown window type ${te}.`)}if(W&&(ue=ue.subarray(0,z)),K===null)return ue;if(z>K)throw new Error(`Length of the window (${z}) may not be larger than frame_length (${K})`);return ue}function B(z,te){let W=44;const K=new ArrayBuffer(W+z.length*4),se=new DataView(K);X(se,0,"RIFF"),se.setUint32(4,36+z.length*4,!0),X(se,8,"WAVE"),X(se,12,"fmt "),se.setUint32(16,16,!0),se.setUint16(20,3,!0),se.setUint16(22,1,!0),se.setUint32(24,te,!0),se.setUint32(28,te*4,!0),se.setUint16(32,4,!0),se.setUint16(34,32,!0),X(se,36,"data"),se.setUint32(40,z.length*4,!0);for(let J=0;J<z.length;++J,W+=4)se.setFloat32(W,z[J],!0);return K}function X(z,te,W){for(let K=0;K<W.length;++K)z.setUint8(te+K,W.charCodeAt(K))}class re{constructor(te,W){this.audio=te,this.sampling_rate=W}toWav(){return B(this.audio,this.sampling_rate)}toBlob(){const te=this.toWav();return new Blob([te],{type:"audio/wav"})}async save(te){let W;if(o.apis.IS_BROWSER_ENV){if(o.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");W=i.saveBlob}else if(o.apis.IS_FS_AVAILABLE)W=async(K,se)=>{let J=await se.arrayBuffer();l.writeFileSync(K,yx.from(J))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await W(te,this.toBlob())}}},"./src/utils/constants.js":(e,r,t)=>{t.r(r),t.d(r,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>n,FEATURE_EXTRACTOR_NAME:()=>i,GENERATION_CONFIG_NAME:()=>d,GITHUB_ISSUE_URL:()=>s,IMAGE_PROCESSOR_NAME:()=>o,PROCESSOR_NAME:()=>a});const s="https://github.com/huggingface/transformers.js/issues/new/choose",n="config.json",i="preprocessor_config.json",o=i,a="processor_config.json",l="chat_template.jinja",d="generation_config.json"},"./src/utils/core.js":(e,r,t)=>{t.r(r),t.d(r,{calculateDimensions:()=>d,calculateReflectOffset:()=>_,count:()=>y,dispatchCallback:()=>s,escapeRegExp:()=>i,isIntegralNumber:()=>a,isNullishDimension:()=>l,isTypedArray:()=>o,len:()=>A,mergeArrays:()=>u,pick:()=>P,pop:()=>c,product:()=>p,reverseDictionary:()=>n,saveBlob:()=>f});function s(g,I){g&&g(I)}function n(g){return Object.fromEntries(Object.entries(g).map(([I,v])=>[v,I]))}function i(g){return g.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function o(g){return g?.prototype?.__proto__?.constructor?.name==="TypedArray"}function a(g){return Number.isInteger(g)||typeof g=="bigint"}function l(g){return g==null||g===-1}function d(g){const I=[];let v=g;for(;Array.isArray(v);)I.push(v.length),v=v[0];return I}function c(g,I,v=void 0){const T=g[I];if(T!==void 0)return delete g[I],T;if(v===void 0)throw Error(`Key ${I} does not exist in object.`);return v}function u(...g){return Array.prototype.concat.apply([],g)}function p(...g){return g.reduce((I,v)=>I.flatMap(T=>v.map(x=>[T,x])))}function _(g,I){return Math.abs((g+I)%(2*I)-I)}function f(g,I){const v=URL.createObjectURL(I),T=document.createElement("a");T.href=v,T.download=g,T.click(),T.remove(),URL.revokeObjectURL(v)}function P(g,I){return Object.assign({},...I.map(v=>{if(g[v]!==void 0)return{[v]:g[v]}}))}function A(g){let I=0;for(const v of g)++I;return I}function y(g,I){let v=0;for(const T of g)T===I&&++v;return v}},"./src/utils/data-structures.js":(e,r,t)=>{t.r(r),t.d(r,{CharTrie:()=>n,DictionarySplitter:()=>l,LRUCache:()=>d,PriorityQueue:()=>s,TokenLattice:()=>o});class s{constructor(u=(_,f)=>_>f,p=1/0){this._heap=[],this._comparator=u,this._maxSize=p}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...u){return this.extend(u)}extend(u){for(const p of u)if(this.size<this._maxSize)this._heap.push(p),this._siftUp();else{const _=this._smallest();this._comparator(p,this._heap[_])&&(this._heap[_]=p,this._siftUpFrom(_))}return this.size}pop(){const u=this.peek(),p=this.size-1;return p>0&&this._swap(0,p),this._heap.pop(),this._siftDown(),u}replace(u){const p=this.peek();return this._heap[0]=u,this._siftDown(),p}_parent(u){return(u+1>>>1)-1}_left(u){return(u<<1)+1}_right(u){return u+1<<1}_greater(u,p){return this._comparator(this._heap[u],this._heap[p])}_swap(u,p){const _=this._heap[u];this._heap[u]=this._heap[p],this._heap[p]=_}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(u){for(;u>0&&this._greater(u,this._parent(u));)this._swap(u,this._parent(u)),u=this._parent(u)}_siftDown(){let u=0;for(;this._left(u)<this.size&&this._greater(this._left(u),u)||this._right(u)<this.size&&this._greater(this._right(u),u);){const p=this._right(u)<this.size&&this._greater(this._right(u),this._left(u))?this._right(u):this._left(u);this._swap(u,p),u=p}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class n{constructor(){this.root=i.default()}extend(u){for(const p of u)this.push(p)}push(u){let p=this.root;for(const _ of u){let f=p.children.get(_);f===void 0&&(f=i.default(),p.children.set(_,f)),p=f}p.isLeaf=!0}*commonPrefixSearch(u){let p=this.root;if(p===void 0)return;let _="";for(const f of u){if(_+=f,p=p.children.get(f),p===void 0)return;p.isLeaf&&(yield _)}}}class i{constructor(u,p){this.isLeaf=u,this.children=p}static default(){return new i(!1,new Map)}}class o{constructor(u,p,_){this.chars=Array.from(u),this.len=this.chars.length,this.bosTokenId=p,this.eosTokenId=_,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const f=new a(this.bosTokenId,0,0,0,0),P=new a(this.eosTokenId,1,this.len,0,0);this.nodes.push(f.clone()),this.nodes.push(P.clone()),this.beginNodes[this.len].push(P),this.endNodes[0].push(f)}insert(u,p,_,f){const P=this.nodes.length,A=new a(f,P,u,p,_);this.beginNodes[u].push(A),this.endNodes[u+p].push(A),this.nodes.push(A)}viterbi(){const u=this.len;let p=0;for(;p<=u;){if(this.beginNodes[p].length==0)return[];for(let y of this.beginNodes[p]){y.prev=null;let g=0,I=null;for(let v of this.endNodes[p]){const T=v.backtraceScore+y.score;(I===null||T>g)&&(I=v.clone(),g=T)}if(I!==null)y.prev=I,y.backtraceScore=g;else return[]}++p}const _=[],P=this.beginNodes[u][0].prev;if(P===null)return[];let A=P.clone();for(;A.prev!==null;)_.push(A.clone()),A=A.clone().prev.clone();return _.reverse(),_}piece(u){return this.chars.slice(u.pos,u.pos+u.length).join("")}tokens(){return this.viterbi().map(p=>this.piece(p))}tokenIds(){return this.viterbi().map(p=>p.tokenId)}}class a{constructor(u,p,_,f,P){this.tokenId=u,this.nodeId=p,this.pos=_,this.length=f,this.score=P,this.prev=null,this.backtraceScore=0}clone(){const u=new a(this.tokenId,this.nodeId,this.pos,this.length,this.score);return u.prev=this.prev,u.backtraceScore=this.backtraceScore,u}}class l{constructor(u){this.trie=this._buildTrie(u)}_buildTrie(u){const p=Object.create(null);for(const _ of u){let f=p;for(let P=0;P<_.length;++P)f=f[_[P]]??=Object.create(null);f.end=_}return p}split(u){const p=[],_=u.length;let f=0,P=0;for(;P<_;){let A=this.trie,y=null,g=P;for(;g<_&&(A=A[u[g]]);)A.end&&(y=A.end),++g;y?(P>f&&p.push(u.slice(f,P)),p.push(y),P+=y.length,f=P):++P}return f<_&&p.push(u.slice(f)),p}}class d{constructor(u){this.capacity=u,this.cache=new Map}get(u){if(!this.cache.has(u))return;const p=this.cache.get(u);return this.cache.delete(u),this.cache.set(u,p),p}put(u,p){this.cache.has(u)&&this.cache.delete(u),this.cache.set(u,p),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":(e,r,t)=>{t.r(r),t.d(r,{DEVICE_TYPES:()=>s});const s=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,r,t)=>{t.r(r),t.d(r,{DATA_TYPES:()=>o,DEFAULT_DEVICE_DTYPE_MAPPING:()=>a,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>i});var s=t("./src/env.js"),n=t("./src/utils/devices.js");const i=function(){let d;return async function(){if(d===void 0)if(!s.apis.IS_WEBGPU_AVAILABLE)d=!1;else try{d=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{d=!1}return d}}(),o=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),a=Object.freeze({[n.DEVICE_TYPES.wasm]:o.q8}),l=Object.freeze({[o.fp32]:"",[o.fp16]:"_fp16",[o.int8]:"_int8",[o.uint8]:"_uint8",[o.q8]:"_quantized",[o.q4]:"_q4",[o.q4f16]:"_q4f16",[o.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,r,t)=>{t.r(r),t.d(r,{Callable:()=>s});const s=class{constructor(){let n=function(...i){return n._call(...i)};return Object.setPrototypeOf(n,new.target.prototype)}_call(...n){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,r,t)=>{t.r(r),t.d(r,{MAX_EXTERNAL_DATA_CHUNKS:()=>a,getFile:()=>_,getModelFile:()=>g,getModelJSON:()=>v,getModelText:()=>I});var s=t("?7992"),n=t("?5af5"),i=t("./src/env.js"),o=t("./src/utils/core.js");const a=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class d{constructor($){if(this.filePath=$,this.headers=new Headers,this.exists=s.existsSync($),this.exists){this.status=200,this.statusText="OK";let j=s.statSync($);this.headers.set("content-length",j.size.toString()),this.updateContentType();const B=s.createReadStream($);this.body=new ReadableStream({start(X){B.on("data",re=>X.enqueue(re)),B.on("end",()=>X.close()),B.on("error",re=>X.error(re))},cancel(){B.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const $=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[$]??"application/octet-stream")}clone(){let $=new d(this.filePath);return $.exists=this.exists,$.status=this.status,$.statusText=this.statusText,$.headers=new Headers(this.headers),$}async arrayBuffer(){return(await s.promises.readFile(this.filePath)).buffer}async blob(){const $=await s.promises.readFile(this.filePath);return new Blob([$],{type:this.headers.get("content-type")})}async text(){return await s.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function c(b,$=null,j=null){let B;try{B=new URL(b)}catch{return!1}return!($&&!$.includes(B.protocol)||j&&!j.includes(B.hostname))}const u=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;function p(b){return!(!u.test(b)||b.includes("..")||b.includes("--")||b.endsWith(".git")||b.endsWith(".ipynb"))}async function _(b){if(i.env.useFS&&!c(b,["http:","https:","blob:"]))return new d(b instanceof URL?b.protocol==="file:"?b.pathname:b.toString():b);if(typeof En<"u"&&En?.release?.name==="node"){const $=!!Ju?.TESTING_REMOTELY,j=i.env.version,B=new Headers;if(B.set("User-Agent",`transformers.js/${j}; is_ci/${$};`),c(b,["http:","https:"],["huggingface.co","hf.co"])){const re=Ju?.HF_TOKEN??Ju?.HF_ACCESS_TOKEN;re&&B.set("Authorization",`Bearer ${re}`)}return fetch(b,{headers:B})}else return fetch(b)}const f={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function P(b,$,j){if(!j)return null;const B=f[b]??`Error (${b}) occurred while trying to load file`;throw Error(`${B}: "${$}".`)}class A{constructor($){this.path=$}async match($){let j=n.join(this.path,$),B=new d(j);if(B.exists)return B}async put($,j,B=void 0){let X=n.join(this.path,$);try{const re=j.headers.get("Content-Length"),z=parseInt(re??"0");let te=0;await s.promises.mkdir(n.dirname(X),{recursive:!0});const W=s.createWriteStream(X),K=j.body.getReader();for(;;){const{done:se,value:J}=await K.read();if(se)break;await new Promise((ce,N)=>{W.write(J,D=>{if(D){N(D);return}ce()})}),te+=J.length;const ue=z?te/z*100:0;B?.({progress:ue,loaded:te,total:z})}W.close()}catch(re){try{await s.promises.unlink(X)}catch{}throw re}}}async function y(b,...$){for(let j of $)try{let B=await b.match(j);if(B)return B}catch{continue}}async function g(b,$,j=!0,B={},X=!1){if(!i.env.allowLocalModels){if(B.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!i.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,o.dispatchCallback)(B.progress_callback,{status:"initiate",name:b,file:$});let re;if(!re&&i.env.useCustomCache){if(!i.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!i.env.customCache.match||!i.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");re=i.env.customCache}if(!re&&i.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{re=await caches.open("transformers-cache")}catch(ae){console.warn("An error occurred while opening the browser cache:",ae)}}if(!re&&i.env.useFSCache){if(!i.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");re=new A(B.cache_dir??i.env.cacheDir)}const z=B.revision??"main",te=x(b,$),W=p(b),K=W?x(i.env.localModelPath,te):te,se=x(i.env.remoteHost,i.env.remotePathTemplate.replaceAll("{model}",b).replaceAll("{revision}",encodeURIComponent(z)),$);let J;const ue=re instanceof A?z==="main"?te:x(b,z,$):se;let ce=!1,N;re&&(N=await y(re,K,ue));const D=N!==void 0;if(N===void 0){if(i.env.allowLocalModels)if(c(te,["http:","https:"])){if(B.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${te}.`);if(!i.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${te}.`)}else try{N=await _(K),J=K}catch(Ae){console.warn(`Unable to load from local path "${K}": "${Ae}"`)}if(N===void 0||N.status===404){if(B.local_files_only||!i.env.allowRemoteModels){if(j)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${K}".`);return null}if(!W)throw Error(`Local file missing at "${K}" and download aborted due to invalid model ID "${b}".`);if(N=await _(se),N.status!==200)return P(N.status,se,j);J=ue}ce=re&&typeof Response<"u"&&N instanceof Response&&N.status===200}(0,o.dispatchCallback)(B.progress_callback,{status:"download",name:b,file:$});let Q;if(!(i.apis.IS_NODE_ENV&&X)){let ae;B.progress_callback?D&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(ae=new Uint8Array(await N.arrayBuffer()),(0,o.dispatchCallback)(B.progress_callback,{status:"progress",name:b,file:$,progress:100,loaded:ae.length,total:ae.length})):ae=await T(N,Ae=>{(0,o.dispatchCallback)(B.progress_callback,{status:"progress",name:b,file:$,...Ae})}):ae=new Uint8Array(await N.arrayBuffer()),Q=ae}if(ce&&J&&await re.match(J)===void 0&&(Q?await re.put(J,new Response(Q,{headers:N.headers})).catch(ae=>{console.warn(`Unable to add response to browser cache: ${ae}.`)}):await re.put(J,N,B.progress_callback)),(0,o.dispatchCallback)(B.progress_callback,{status:"done",name:b,file:$}),Q){if(!i.apis.IS_NODE_ENV&&X)throw new Error("Cannot return path in a browser environment.");return Q}if(N instanceof d)return N.filePath;const U=await re?.match(J);if(U instanceof d)return U.filePath;if(U instanceof Response)return new Uint8Array(await U.arrayBuffer());if(typeof U=="string")return U;throw new Error("Unable to get model file path or buffer.")}async function I(b,$,j=!0,B={}){const X=await g(b,$,j,B,!1);return X===null?null:new TextDecoder("utf-8").decode(X)}async function v(b,$,j=!0,B={}){const X=await I(b,$,j,B);return X===null?{}:JSON.parse(X)}async function T(b,$){const j=b.headers.get("Content-Length");j===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let B=parseInt(j??"0"),X=new Uint8Array(B),re=0;const z=b.body.getReader();async function te(){const{done:W,value:K}=await z.read();if(W)return;const se=re+K.length;if(se>B){B=se;const ue=new Uint8Array(B);ue.set(X),X=ue}X.set(K,re),re=se;const J=re/B*100;return $({progress:J,loaded:re,total:B}),te()}return await te(),X}function x(...b){return b=b.map(($,j)=>(j&&($=$.replace(new RegExp("^/"),"")),j!==b.length-1&&($=$.replace(new RegExp("/$"),"")),$)),b.join("/")}},"./src/utils/image.js":(e,r,t)=>{t.r(r),t.d(r,{RawImage:()=>f,load_image:()=>P});var s=t("./src/utils/core.js"),n=t("./src/utils/hub.js"),i=t("./src/env.js"),o=t("./src/utils/tensor.js"),a=t("?2b25");let l,d,c;const u=i.apis.IS_BROWSER_ENV||i.apis.IS_WEBWORKER_ENV;if(u)l=(A,y)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(A,y)},c=self.createImageBitmap,d=self.ImageData;else if(a)c=async A=>{const g=(await A.metadata()).channels,{data:I,info:v}=await A.rotate().raw().toBuffer({resolveWithObject:!0}),T=new f(new Uint8ClampedArray(I),v.width,v.height,v.channels);return g!==void 0&&g!==v.channels&&T.convert(g),T};else throw new Error("Unable to load image processing library.");const p={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},_=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class f{constructor(y,g,I,v){this.data=y,this.width=g,this.height=I,this.channels=v}get size(){return[this.width,this.height]}static async read(y){if(y instanceof f)return y;if(typeof y=="string"||y instanceof URL)return await this.fromURL(y);if(y instanceof Blob)return await this.fromBlob(y);if(typeof HTMLCanvasElement<"u"&&y instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&y instanceof OffscreenCanvas)return this.fromCanvas(y);throw new Error(`Unsupported input type: ${typeof y}`)}static fromCanvas(y){if(!u)throw new Error("fromCanvas() is only supported in browser environments.");const I=y.getContext("2d").getImageData(0,0,y.width,y.height).data;return new f(I,y.width,y.height,4)}static async fromURL(y){const g=await(0,n.getFile)(y);if(g.status!==200)throw new Error(`Unable to read image from "${y}" (${g.status} ${g.statusText})`);const I=await g.blob();return this.fromBlob(I)}static async fromBlob(y){if(u){const g=await c(y),I=l(g.width,g.height).getContext("2d");return I.drawImage(g,0,0),new this(I.getImageData(0,0,g.width,g.height).data,g.width,g.height,4)}else{const g=a(await y.arrayBuffer());return await c(g)}}static fromTensor(y,g="CHW"){if(y.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${y.dims.length} dimensions.`);if(g==="CHW")y=y.transpose(1,2,0);else if(g!=="HWC")throw new Error(`Unsupported channel format: ${g}`);if(!(y.data instanceof Uint8ClampedArray||y.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${y.type}`);switch(y.dims[2]){case 1:case 2:case 3:case 4:return new f(y.data,y.dims[1],y.dims[0],y.dims[2]);default:throw new Error(`Unsupported number of channels: ${y.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const y=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let g=0,I=0;g<this.data.length;g+=this.channels){const v=this.data[g],T=this.data[g+1],x=this.data[g+2];y[I++]=Math.round(.2989*v+.587*T+.114*x)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(y,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const y=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let g=0,I=0;g<this.data.length;++g)y[I++]=this.data[g],y[I++]=this.data[g],y[I++]=this.data[g];break;case 4:for(let g=0,I=0;g<this.data.length;g+=4)y[I++]=this.data[g],y[I++]=this.data[g+1],y[I++]=this.data[g+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(y,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const y=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let g=0,I=0;g<this.data.length;++g)y[I++]=this.data[g],y[I++]=this.data[g],y[I++]=this.data[g],y[I++]=255;break;case 3:for(let g=0,I=0;g<this.data.length;g+=3)y[I++]=this.data[g],y[I++]=this.data[g+1],y[I++]=this.data[g+2],y[I++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(y,this.width,this.height,4)}putAlpha(y){if(y.width!==this.width||y.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${y.width}x${y.height}`);if(y.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${y.channels}`);const g=this.data,I=y.data,v=this.width*this.height;if(this.channels===3){const T=new Uint8ClampedArray(v*4);for(let x=0,b=0,$=0;x<v;++x)T[$++]=g[b++],T[$++]=g[b++],T[$++]=g[b++],T[$++]=I[x];return this._update(T,this.width,this.height,4)}else if(this.channels===4){for(let T=0;T<v;++T)g[4*T+3]=I[T];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(y,g,{resample:I=2}={}){if(this.width===y&&this.height===g)return this;let v=p[I]??I;const T=(0,s.isNullishDimension)(y),x=(0,s.isNullishDimension)(g);if(T&&x)return this;if(T?y=g/this.height*this.width:x&&(g=y/this.width*this.height),u){const b=this.channels,$=this.toCanvas(),j=l(y,g).getContext("2d");return j.drawImage($,0,0,y,g),new f(j.getImageData(0,0,y,g).data,y,g,4).convert(b)}else{let b=this.toSharp();switch(v){case"box":case"hamming":(v==="box"||v==="hamming")&&(console.warn(`Resampling method ${v} is not yet supported. Using bilinear instead.`),v="bilinear");case"nearest":case"bilinear":case"bicubic":b=b.affine([y/this.width,0,0,g/this.height],{interpolator:v});break;case"lanczos":b=b.resize({width:y,height:g,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${v} is not supported.`)}return await c(b)}}async pad([y,g,I,v]){if(y=Math.max(y,0),g=Math.max(g,0),I=Math.max(I,0),v=Math.max(v,0),y===0&&g===0&&I===0&&v===0)return this;if(u){const T=this.channels,x=this.toCanvas(),b=this.width+y+g,$=this.height+I+v,j=l(b,$).getContext("2d");return j.drawImage(x,0,0,this.width,this.height,y,I,this.width,this.height),new f(j.getImageData(0,0,b,$).data,b,$,4).convert(T)}else{const T=this.toSharp().extend({left:y,right:g,top:I,bottom:v});return await c(T)}}async crop([y,g,I,v]){if(y=Math.max(y,0),g=Math.max(g,0),I=Math.min(I,this.width-1),v=Math.min(v,this.height-1),y===0&&g===0&&I===this.width-1&&v===this.height-1)return this;const T=I-y+1,x=v-g+1;if(u){const b=this.channels,$=this.toCanvas(),j=l(T,x).getContext("2d");return j.drawImage($,y,g,T,x,0,0,T,x),new f(j.getImageData(0,0,T,x).data,T,x,4).convert(b)}else{const b=this.toSharp().extract({left:y,top:g,width:T,height:x});return await c(b)}}async center_crop(y,g){if(this.width===y&&this.height===g)return this;const I=(this.width-y)/2,v=(this.height-g)/2;if(u){const T=this.channels,x=this.toCanvas(),b=l(y,g).getContext("2d");let $=0,j=0,B=0,X=0;return I>=0?$=I:B=-I,v>=0?j=v:X=-v,b.drawImage(x,$,j,y,g,B,X,y,g),new f(b.getImageData(0,0,y,g).data,y,g,4).convert(T)}else{let T=this.toSharp();if(I>=0&&v>=0)T=T.extract({left:Math.floor(I),top:Math.floor(v),width:y,height:g});else if(I<=0&&v<=0){const x=Math.floor(-v),b=Math.floor(-I);T=T.extend({top:x,left:b,right:y-this.width-b,bottom:g-this.height-x})}else{let x=[0,0],b=0;v<0?(x[0]=Math.floor(-v),x[1]=g-this.height-x[0]):b=Math.floor(v);let $=[0,0],j=0;I<0?($[0]=Math.floor(-I),$[1]=y-this.width-$[0]):j=Math.floor(I),T=T.extend({top:x[0],bottom:x[1],left:$[0],right:$[1]}).extract({left:j,top:b,width:y,height:g})}return await c(T)}}async toBlob(y="image/png",g=1){if(!u)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:y,quality:g})}toTensor(y="CHW"){let g=new o.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(y!=="HWC")if(y==="CHW")g=g.permute(2,0,1);else throw new Error(`Unsupported channel format: ${y}`);return g}toCanvas(){if(!u)throw new Error("toCanvas() is only supported in browser environments.");const y=this.clone().rgba(),g=l(y.width,y.height),I=new d(y.data,y.width,y.height);return g.getContext("2d").putImageData(I,0,0),g}split(){const{data:y,width:g,height:I,channels:v}=this,T=y.constructor,x=y.length/v,b=Array.from({length:v},()=>new T(x));for(let $=0;$<x;++$){const j=v*$;for(let B=0;B<v;++B)b[B][$]=y[j+B]}return b.map($=>new f($,g,I,1))}_update(y,g,I,v=null){return this.data=y,this.width=g,this.height=I,v!==null&&(this.channels=v),this}clone(){return new f(this.data.slice(),this.width,this.height,this.channels)}convert(y){if(this.channels===y)return this;switch(y){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(y){if(u){if(i.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const g=y.split(".").pop().toLowerCase(),I=_.get(g)??"image/png",v=await this.toBlob(I);(0,s.saveBlob)(y,v)}else{if(i.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(y);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(u)throw new Error("toSharp() is only supported in server-side environments.");return a(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const P=f.read.bind(f)},"./src/utils/maths.js":(e,r,t)=>{t.r(r),t.d(r,{FFT:()=>P,bankers_round:()=>g,cos_sim:()=>l,dot:()=>a,dynamic_time_warping:()=>I,interpolate_data:()=>s,log_softmax:()=>o,magnitude:()=>d,max:()=>u,medianFilter:()=>A,min:()=>c,permute_data:()=>n,round:()=>y,softmax:()=>i});function s(v,[T,x,b],[$,j],B="bilinear",X=!1){const re=j/b,z=$/x,te=new v.constructor($*j*T),W=x*b,K=$*j;for(let se=0;se<$;++se)for(let J=0;J<j;++J){const ue=se*j+J,ce=(J+.5)/re-.5,N=(se+.5)/z-.5;let D=Math.floor(ce),Q=Math.floor(N);const U=Math.min(D+1,b-1),ae=Math.min(Q+1,x-1);D=Math.max(D,0),Q=Math.max(Q,0);const Ae=ce-D,Ee=N-Q,Le=(1-Ae)*(1-Ee),Ve=Ae*(1-Ee),me=(1-Ae)*Ee,H=Ae*Ee,fe=Q*b,Z=ae*b,xe=fe+D,Ce=fe+U,$e=Z+D,Se=Z+U;for(let Oe=0;Oe<T;++Oe){const ze=Oe*W;te[Oe*K+ue]=Le*v[ze+xe]+Ve*v[ze+Ce]+me*v[ze+$e]+H*v[ze+Se]}}return te}function n(v,T,x){const b=new Array(x.length),$=new Array(x.length);for(let X=x.length-1,re=1;X>=0;--X)$[X]=re,b[X]=T[x[X]],re*=b[X];const j=x.map((X,re)=>$[x.indexOf(re)]),B=new v.constructor(v.length);for(let X=0;X<v.length;++X){let re=0;for(let z=T.length-1,te=X;z>=0;--z)re+=te%T[z]*j[z],te=Math.floor(te/T[z]);B[re]=v[X]}return[B,b]}function i(v){const T=u(v)[0],x=v.map(j=>Math.exp(j-T)),b=x.reduce((j,B)=>j+B,0);return x.map(j=>j/b)}function o(v){const T=u(v)[0];let x=0;for(let j=0;j<v.length;++j)x+=Math.exp(v[j]-T);const b=Math.log(x);return v.map(j=>j-T-b)}function a(v,T){let x=0;for(let b=0;b<v.length;++b)x+=v[b]*T[b];return x}function l(v,T){const x=a(v,T),b=d(v),$=d(T);return x/(b*$)}function d(v){return Math.sqrt(v.reduce((T,x)=>T+x*x,0))}function c(v){if(v.length===0)throw Error("Array must not be empty");let T=v[0],x=0;for(let b=1;b<v.length;++b)v[b]<T&&(T=v[b],x=b);return[T,x]}function u(v){if(v.length===0)throw Error("Array must not be empty");let T=v[0],x=0;for(let b=1;b<v.length;++b)v[b]>T&&(T=v[b],x=b);return[T,x]}function p(v){return v>0&&(v&v-1)===0}class _{constructor(T){if(this.size=T|0,this.size<=1||!p(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=T<<1,this.table=new Float64Array(this.size*2);for(let b=0;b<this.table.length;b+=2){const $=Math.PI*b/this.size;this.table[b]=Math.cos($),this.table[b+1]=-Math.sin($)}let x=0;for(let b=1;this.size>b;b<<=1)++x;this._width=x%2===0?x-1:x,this._bitrev=new Int32Array(1<<this._width);for(let b=0;b<this._bitrev.length;++b){this._bitrev[b]=0;for(let $=0;$<this._width;$+=2){const j=this._width-$-2;this._bitrev[b]|=(b>>>$&3)<<j}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(T,x){const b=x||new Array(T.length>>>1);for(let $=0;$<T.length;$+=2)b[$>>>1]=T[$];return b}toComplexArray(T,x){const b=x||this.createComplexArray();for(let $=0;$<b.length;$+=2)b[$]=T[$>>>1],b[$+1]=0;return b}transform(T,x){if(T===x)throw new Error("Input and output buffers must be different");this._transform4(T,x,1)}realTransform(T,x){if(T===x)throw new Error("Input and output buffers must be different");this._realTransform4(T,x,1)}inverseTransform(T,x){if(T===x)throw new Error("Input and output buffers must be different");this._transform4(T,x,-1);for(let b=0;b<T.length;++b)T[b]/=this.size}_transform4(T,x,b){const $=this._csize;let B=1<<this._width,X=$/B<<1,re,z;const te=this._bitrev;if(X===4)for(re=0,z=0;re<$;re+=X,++z){const K=te[z];this._singleTransform2(x,T,re,K,B)}else for(re=0,z=0;re<$;re+=X,++z){const K=te[z];this._singleTransform4(x,T,re,K,B,b)}const W=this.table;for(B>>=2;B>=2;B>>=2){X=$/B<<1;const K=X>>>2;for(re=0;re<$;re+=X){const se=re+K-1;for(let J=re,ue=0;J<se;J+=2,ue+=B){const ce=J,N=ce+K,D=N+K,Q=D+K,U=T[ce],ae=T[ce+1],Ae=T[N],Ee=T[N+1],Le=T[D],Ve=T[D+1],me=T[Q],H=T[Q+1],fe=W[ue],Z=b*W[ue+1],xe=Ae*fe-Ee*Z,Ce=Ae*Z+Ee*fe,$e=W[2*ue],Se=b*W[2*ue+1],Oe=Le*$e-Ve*Se,ze=Le*Se+Ve*$e,Ke=W[3*ue],He=b*W[3*ue+1],Xe=me*Ke-H*He,Be=me*He+H*Ke,Ye=U+Oe,nt=ae+ze,et=U-Oe,mt=ae-ze,rt=xe+Xe,We=Ce+Be,O=b*(xe-Xe),E=b*(Ce-Be);T[ce]=Ye+rt,T[ce+1]=nt+We,T[N]=et+E,T[N+1]=mt-O,T[D]=Ye-rt,T[D+1]=nt-We,T[Q]=et-E,T[Q+1]=mt+O}}}}_singleTransform2(T,x,b,$,j){const B=T[$],X=T[$+1],re=T[$+j],z=T[$+j+1];x[b]=B+re,x[b+1]=X+z,x[b+2]=B-re,x[b+3]=X-z}_singleTransform4(T,x,b,$,j,B){const X=j*2,re=j*3,z=T[$],te=T[$+1],W=T[$+j],K=T[$+j+1],se=T[$+X],J=T[$+X+1],ue=T[$+re],ce=T[$+re+1],N=z+se,D=te+J,Q=z-se,U=te-J,ae=W+ue,Ae=K+ce,Ee=B*(W-ue),Le=B*(K-ce);x[b]=N+ae,x[b+1]=D+Ae,x[b+2]=Q+Le,x[b+3]=U-Ee,x[b+4]=N-ae,x[b+5]=D-Ae,x[b+6]=Q-Le,x[b+7]=U+Ee}_realTransform4(T,x,b){const $=this._csize;let B=1<<this._width,X=$/B<<1,re,z;const te=this._bitrev;if(X===4)for(re=0,z=0;re<$;re+=X,++z){const se=te[z];this._singleRealTransform2(x,T,re,se>>>1,B>>>1)}else for(re=0,z=0;re<$;re+=X,++z){const se=te[z];this._singleRealTransform4(x,T,re,se>>>1,B>>>1,b)}const W=this.table;for(B>>=2;B>=2;B>>=2){X=$/B<<1;const se=X>>>1,J=se>>>1,ue=J>>>1;for(re=0;re<$;re+=X)for(let ce=0,N=0;ce<=ue;ce+=2,N+=B){const D=re+ce,Q=D+J,U=Q+J,ae=U+J,Ae=T[D],Ee=T[D+1],Le=T[Q],Ve=T[Q+1],me=T[U],H=T[U+1],fe=T[ae],Z=T[ae+1],xe=Ae,Ce=Ee,$e=W[N],Se=b*W[N+1],Oe=Le*$e-Ve*Se,ze=Le*Se+Ve*$e,Ke=W[2*N],He=b*W[2*N+1],Xe=me*Ke-H*He,Be=me*He+H*Ke,Ye=W[3*N],nt=b*W[3*N+1],et=fe*Ye-Z*nt,mt=fe*nt+Z*Ye,rt=xe+Xe,We=Ce+Be,O=xe-Xe,E=Ce-Be,S=Oe+et,ee=ze+mt,de=b*(Oe-et),Me=b*(ze-mt);if(T[D]=rt+S,T[D+1]=We+ee,T[Q]=O+Me,T[Q+1]=E-de,ce===0){T[U]=rt-S,T[U+1]=We-ee;continue}if(ce===ue)continue;const ye=re+J-ce,bt=re+se-ce;T[ye]=O-b*Me,T[ye+1]=-E-b*de,T[bt]=rt-b*S,T[bt+1]=-We+b*ee}}const K=$>>>1;for(let se=2;se<K;se+=2)T[$-se]=T[se],T[$-se+1]=-T[se+1]}_singleRealTransform2(T,x,b,$,j){const B=T[$],X=T[$+j];x[b]=B+X,x[b+1]=0,x[b+2]=B-X,x[b+3]=0}_singleRealTransform4(T,x,b,$,j,B){const X=j*2,re=j*3,z=T[$],te=T[$+j],W=T[$+X],K=T[$+re],se=z+W,J=z-W,ue=te+K,ce=B*(te-K);x[b]=se+ue,x[b+1]=0,x[b+2]=J,x[b+3]=-ce,x[b+4]=se-ue,x[b+5]=0,x[b+6]=J,x[b+7]=ce}}class f{constructor(T){const x=2*(T-1),b=2*(2*T-1),$=2**Math.ceil(Math.log2(b));this.bufferSize=$,this._a=x;const j=new Float64Array(b),B=new Float64Array($);this._chirpBuffer=new Float64Array($),this._buffer1=new Float64Array($),this._buffer2=new Float64Array($),this._outBuffer1=new Float64Array($),this._outBuffer2=new Float64Array($);const X=-2*Math.PI/T,re=Math.cos(X),z=Math.sin(X);for(let te=0;te<b>>1;++te){const W=(te+1-T)**2/2,K=Math.sqrt(re**2+z**2)**W,se=W*Math.atan2(z,re),J=2*te;j[J]=K*Math.cos(se),j[J+1]=K*Math.sin(se),B[J]=j[J],B[J+1]=-j[J+1]}this._slicedChirpBuffer=j.subarray(x,b),this._f=new _($>>1),this._f.transform(this._chirpBuffer,B)}_transform(T,x,b){const $=this._buffer1,j=this._buffer2,B=this._outBuffer1,X=this._outBuffer2,re=this._chirpBuffer,z=this._slicedChirpBuffer,te=this._a;if(b)for(let W=0;W<z.length;W+=2){const K=W+1,se=W>>1,J=x[se];$[W]=J*z[W],$[K]=J*z[K]}else for(let W=0;W<z.length;W+=2){const K=W+1;$[W]=x[W]*z[W]-x[K]*z[K],$[K]=x[W]*z[K]+x[K]*z[W]}this._f.transform(B,$);for(let W=0;W<re.length;W+=2){const K=W+1;j[W]=B[W]*re[W]-B[K]*re[K],j[K]=B[W]*re[K]+B[K]*re[W]}this._f.inverseTransform(X,j);for(let W=0;W<X.length;W+=2){const K=X[W+te],se=X[W+te+1],J=z[W],ue=z[W+1];T[W]=K*J-se*ue,T[W+1]=K*ue+se*J}}transform(T,x){this._transform(T,x,!1)}realTransform(T,x){this._transform(T,x,!0)}}class P{constructor(T){this.fft_length=T,this.isPowerOfTwo=p(T),this.isPowerOfTwo?(this.fft=new _(T),this.outputBufferSize=2*T):(this.fft=new f(T),this.outputBufferSize=this.fft.bufferSize)}realTransform(T,x){this.fft.realTransform(T,x)}transform(T,x){this.fft.transform(T,x)}}function A(v,T){if(T%2===0||T<=0)throw new Error("Window size must be a positive odd number");const x=new v.constructor(v.length),b=new v.constructor(T),$=Math.floor(T/2);for(let j=0;j<v.length;++j){let B=0;for(let X=-$;X<=$;++X){let re=j+X;re<0?re=Math.abs(re):re>=v.length&&(re=2*(v.length-1)-re),b[B++]=v[re]}b.sort(),x[j]=b[$]}return x}function y(v,T){const x=Math.pow(10,T);return Math.round(v*x)/x}function g(v){const T=Math.round(v);return Math.abs(v)%1===.5?T%2===0?T:T-1:T}function I(v){const T=v.length,x=v[0].length,b=[T+1,x+1],$=Array.from({length:b[0]},()=>Array(b[1]).fill(1/0));$[0][0]=0;const j=Array.from({length:b[0]},()=>Array(b[1]).fill(-1));for(let te=1;te<b[1];++te)for(let W=1;W<b[0];++W){const K=$[W-1][te-1],se=$[W-1][te],J=$[W][te-1];let ue,ce;K<se&&K<J?(ue=K,ce=0):se<K&&se<J?(ue=se,ce=1):(ue=J,ce=2),$[W][te]=v[W-1][te-1]+ue,j[W][te]=ce}for(let te=0;te<b[1];++te)j[0][te]=2;for(let te=0;te<b[0];++te)j[te][0]=1;let B=T,X=x,re=[],z=[];for(;B>0||X>0;)switch(re.push(B-1),z.push(X-1),j[B][X]){case 0:--B,--X;break;case 1:--B;break;case 2:--X;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${B}, ${X}]. Please file a bug report.`)}return re.reverse(),z.reverse(),[re,z]}},"./src/utils/tensor.js":(e,r,t)=>{t.r(r),t.d(r,{DataTypeMap:()=>o,Tensor:()=>a,cat:()=>x,full:()=>z,full_like:()=>te,interpolate:()=>c,interpolate_4d:()=>u,layer_norm:()=>g,matmul:()=>p,mean:()=>B,mean_pooling:()=>y,ones:()=>W,ones_like:()=>K,permute:()=>d,quantize_embeddings:()=>ce,rand:()=>ue,rfft:()=>_,slice:()=>A,stack:()=>b,std_mean:()=>j,topk:()=>f,zeros:()=>se,zeros_like:()=>J});var s=t("./src/utils/maths.js"),n=t("./src/backends/onnx.js"),i=t("./src/ops/registry.js");const o=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class a{get dims(){return this.ort_tensor.dims}set dims(D){this.ort_tensor.dims=D}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...D){return(0,n.isONNXTensor)(D[0])?this.ort_tensor=D[0]:this.ort_tensor=new n.Tensor(D[0],D[1],D[2]),new Proxy(this,{get:(Q,U)=>{if(typeof U=="string"){let ae=Number(U);if(Number.isInteger(ae))return Q._getitem(ae)}return Q[U]},set:(Q,U,ae)=>Q[U]=ae})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[D,...Q]=this.dims;if(Q.length>0){const U=Q.reduce((ae,Ae)=>ae*Ae);for(let ae=0;ae<D;++ae)yield this._subarray(ae,U,Q)}else yield*this.data}_getitem(D){const[Q,...U]=this.dims;if(D=T(D,Q),U.length>0){const ae=U.reduce((Ae,Ee)=>Ae*Ee);return this._subarray(D,ae,U)}else return new a(this.type,[this.data[D]],U)}indexOf(D){const Q=this.data;for(let U=0;U<Q.length;++U)if(Q[U]==D)return U;return-1}_subarray(D,Q,U){const ae=D*Q,Ae=(D+1)*Q,Ee="subarray"in this.data?this.data.subarray(ae,Ae):this.data.slice(ae,Ae);return new a(this.type,Ee,U)}item(){const D=this.data;if(D.length!==1)throw new Error(`a Tensor with ${D.length} elements cannot be converted to Scalar`);return D[0]}tolist(){return l(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const D=this.data;for(let Q=0;Q<D.length;++Q)D[Q]=1/(1+Math.exp(-D[Q]));return this}map(D){return this.clone().map_(D)}map_(D){const Q=this.data;for(let U=0;U<Q.length;++U)Q[U]=D(Q[U],U,Q);return this}mul(D){return this.clone().mul_(D)}mul_(D){const Q=this.data;for(let U=0;U<Q.length;++U)Q[U]*=D;return this}div(D){return this.clone().div_(D)}div_(D){const Q=this.data;for(let U=0;U<Q.length;++U)Q[U]/=D;return this}add(D){return this.clone().add_(D)}add_(D){const Q=this.data;for(let U=0;U<Q.length;++U)Q[U]+=D;return this}sub(D){return this.clone().sub_(D)}sub_(D){const Q=this.data;for(let U=0;U<Q.length;++U)Q[U]-=D;return this}clone(){return new a(this.type,this.data.slice(),this.dims.slice())}slice(...D){const Q=[],U=[];for(let me=0;me<this.dims.length;++me){let H=D[me];if(H==null)U.push([0,this.dims[me]]),Q.push(this.dims[me]);else if(typeof H=="number")H=T(H,this.dims[me],me),U.push([H,H+1]);else if(Array.isArray(H)&&H.length===2){let[fe,Z]=H;if(fe=fe===null?0:T(fe,this.dims[me],me,!1),Z=Z===null?this.dims[me]:T(Z,this.dims[me],me,!1),fe>Z)throw new Error(`Invalid slice: ${H}`);const xe=[Math.max(fe,0),Math.min(Z,this.dims[me])];U.push(xe),Q.push(xe[1]-xe[0])}else throw new Error(`Invalid slice: ${H}`)}const ae=U.map(([me,H])=>H-me),Ae=ae.reduce((me,H)=>me*H),Ee=this.data,Le=new Ee.constructor(Ae),Ve=this.stride();for(let me=0;me<Ae;++me){let H=0;for(let fe=ae.length-1,Z=me;fe>=0;--fe){const xe=ae[fe];H+=(Z%xe+U[fe][0])*Ve[fe],Z=Math.floor(Z/xe)}Le[me]=Ee[H]}return new a(this.type,Le,Q)}permute(...D){return d(this,D)}transpose(...D){return this.permute(...D)}sum(D=null,Q=!1){return this.norm(1,D,Q)}norm(D="fro",Q=null,U=!1){if(D==="fro")D=2;else if(typeof D=="string")throw Error(`Unsupported norm: ${D}`);const ae=this.data,Ae=(me,H)=>me+H**D;if(Q===null){const me=ae.reduce(Ae,0)**(1/D);return new a(this.type,[me],[])}const[Ee,Le,Ve]=$(Ae,this,Q,U);if(D!==1)for(let me=0;me<Le.length;++me)Le[me]=Le[me]**(1/D);return new a(Ee,Le,Ve)}normalize_(D=2,Q=1){Q=T(Q,this.dims.length);const U=this.norm(D,Q,!0),ae=this.data,Ae=U.data;for(let Ee=0;Ee<ae.length;++Ee){let Le=0;for(let Ve=this.dims.length-1,me=Ee,H=1;Ve>=0;--Ve){const fe=this.dims[Ve];if(Ve!==Q){const Z=me%fe;Le+=Z*H,H*=this.dims[Ve]}me=Math.floor(me/fe)}ae[Ee]/=Ae[Le]}return this}normalize(D=2,Q=1){return this.clone().normalize_(D,Q)}stride(){return X(this.dims)}squeeze(D=null){return new a(this.type,this.data,I(this.dims,D))}squeeze_(D=null){return this.dims=I(this.dims,D),this}unsqueeze(D=null){return new a(this.type,this.data,v(this.dims,D))}unsqueeze_(D=null){return this.dims=v(this.dims,D),this}flatten_(D=0,Q=-1){Q=(Q+this.dims.length)%this.dims.length;let U=this.dims.slice(0,D),ae=this.dims.slice(D,Q+1),Ae=this.dims.slice(Q+1);return this.dims=[...U,ae.reduce((Ee,Le)=>Ee*Le,1),...Ae],this}flatten(D=0,Q=-1){return this.clone().flatten_(D,Q)}view(...D){let Q=-1;for(let ae=0;ae<D.length;++ae)if(D[ae]===-1){if(Q!==-1)throw new Error("Only one dimension can be inferred");Q=ae}const U=this.data;if(Q!==-1){const ae=D.reduce((Ae,Ee,Le)=>Le!==Q?Ae*Ee:Ae,1);D[Q]=U.length/ae}return new a(this.type,U,D)}neg_(){const D=this.data;for(let Q=0;Q<D.length;++Q)D[Q]=-D[Q];return this}neg(){return this.clone().neg_()}gt(D){const Q=new Uint8Array(this.data.length),U=this.data;for(let ae=0;ae<U.length;++ae)Q[ae]=U[ae]>D?1:0;return new a("bool",Q,this.dims)}lt(D){const Q=new Uint8Array(this.data.length),U=this.data;for(let ae=0;ae<U.length;++ae)Q[ae]=U[ae]<D?1:0;return new a("bool",Q,this.dims)}clamp_(D,Q){const U=this.data;for(let ae=0;ae<U.length;++ae)U[ae]=Math.min(Math.max(U[ae],D),Q);return this}clamp(D,Q){return this.clone().clamp_(D,Q)}round_(){const D=this.data;for(let Q=0;Q<D.length;++Q)D[Q]=Math.round(D[Q]);return this}round(){return this.clone().round_()}mean(D=null,Q=!1){return B(this,D,Q)}min(D=null,Q=!1){if(D===null){const Ee=(0,s.min)(this.data)[0];return new a(this.type,[Ee],[])}const[U,ae,Ae]=$((Ee,Le)=>Math.min(Ee,Le),this,D,Q,1/0);return new a(U,ae,Ae)}max(D=null,Q=!1){if(D===null){const Ee=(0,s.max)(this.data)[0];return new a(this.type,[Ee],[])}const[U,ae,Ae]=$((Ee,Le)=>Math.max(Ee,Le),this,D,Q,-1/0);return new a(U,ae,Ae)}argmin(D=null,Q=!1){if(D!==null)throw new Error("`dim !== null` not yet implemented.");const U=(0,s.min)(this.data)[1];return new a("int64",[BigInt(U)],[])}argmax(D=null,Q=!1){if(D!==null)throw new Error("`dim !== null` not yet implemented.");const U=(0,s.max)(this.data)[1];return new a("int64",[BigInt(U)],[])}to(D){if(this.type===D)return this;if(!o.hasOwnProperty(D))throw new Error(`Unsupported type: ${D}`);let Q;const U=["int64","uint64"].includes(this.type),ae=["int64","uint64"].includes(D);return U&&!ae?Q=Number:!U&&ae&&(Q=BigInt),new a(D,o[D].from(this.data,Q),this.dims)}}function l(N,D){const Q=N.length,U=D.reduce((Ae,Ee)=>Ae*Ee);if(Q!==U)throw Error(`cannot reshape array of size ${Q} into shape (${D})`);let ae=N;for(let Ae=D.length-1;Ae>=0;Ae--)ae=ae.reduce((Ee,Le)=>{let Ve=Ee[Ee.length-1];return Ve.length<D[Ae]?Ve.push(Le):Ee.push([Le]),Ee},[[]]);return ae[0]}function d(N,D){const[Q,U]=(0,s.permute_data)(N.data,N.dims,D);return new a(N.type,Q,U)}function c(N,[D,Q],U="bilinear",ae=!1){const Ae=N.dims.at(-3)??1,Ee=N.dims.at(-2),Le=N.dims.at(-1);let Ve=(0,s.interpolate_data)(N.data,[Ae,Ee,Le],[D,Q],U,ae);return new a(N.type,Ve,[Ae,D,Q])}async function u(N,{size:D=null,mode:Q="bilinear"}={}){if(N.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!D)throw new Error("`interpolate_4d` requires a `size` argument.");let U;if(D.length===2)U=[...N.dims.slice(0,2),...D];else if(D.length===3)U=[N.dims[0],...D];else if(D.length===4)U=D;else throw new Error("`size` must be of length 2, 3, or 4.");let ae;if(Q==="nearest")ae=await i.TensorOpRegistry.nearest_interpolate_4d;else if(Q==="bilinear")ae=await i.TensorOpRegistry.bilinear_interpolate_4d;else if(Q==="bicubic")ae=await i.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${Q}`);const Ae=new a("int64",new BigInt64Array(U.map(BigInt)),[U.length]);return await ae({x:N,s:Ae})}async function p(N,D){return await(await i.TensorOpRegistry.matmul)({a:N,b:D})}async function _(N,D){return await(await i.TensorOpRegistry.rfft)({x:N,a:D})}async function f(N,D){const Q=await i.TensorOpRegistry.top_k;return D==null?D=N.dims.at(-1):D=Math.min(D,N.dims.at(-1)),await Q({x:N,k:new a("int64",[BigInt(D)],[1])})}const P=N=>new a("int64",N,[N.length]);async function A(N,D,Q,U,ae){return await(await i.TensorOpRegistry.slice)({x:N,s:P(D),e:P(Q),a:P(U),t:P(ae??new Array(U.length).fill(1))})}function y(N,D){const Q=N.data,U=D.data,ae=[N.dims[0],N.dims[2]],Ae=new Q.constructor(ae[0]*ae[1]),[Ee,Le,Ve]=N.dims;let me=0;for(let H=0;H<Ee;++H){const fe=H*Ve*Le;for(let Z=0;Z<Ve;++Z){let xe=0,Ce=0;const $e=H*Le,Se=fe+Z;for(let ze=0;ze<Le;++ze){const Ke=Number(U[$e+ze]);Ce+=Ke,xe+=Q[Se+ze*Ve]*Ke}const Oe=xe/Ce;Ae[me++]=Oe}}return new a(N.type,Ae,ae)}function g(N,D,{eps:Q=1e-5}={}){if(N.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[U,ae]=N.dims;if(D.length!==1&&D[0]!==ae)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[Ae,Ee]=j(N,1,0,!0),Le=Ae.data,Ve=Ee.data,me=N.data,H=new me.constructor(me.length);for(let fe=0;fe<U;++fe){const Z=fe*ae;for(let xe=0;xe<ae;++xe){const Ce=Z+xe;H[Ce]=(me[Ce]-Ve[fe])/(Le[fe]+Q)}}return new a(N.type,H,N.dims)}function I(N,D){return N=N.slice(),D===null?N=N.filter(Q=>Q!==1):typeof D=="number"?N[D]===1&&N.splice(D,1):Array.isArray(D)&&(N=N.filter((Q,U)=>Q!==1||!D.includes(U))),N}function v(N,D){return D=T(D,N.length+1),N=N.slice(),N.splice(D,0,1),N}function T(N,D,Q=null,U=!0){if(N<-D||N>=D){if(U)throw new Error(`IndexError: index ${N} is out of bounds for dimension${Q===null?"":" "+Q} with size ${D}`);return N<-D?0:D}return N<0&&(N=(N%D+D)%D),N}function x(N,D=0){D=T(D,N[0].dims.length);const Q=N[0].dims.slice();Q[D]=N.reduce((Ee,Le)=>Ee+Le.dims[D],0);const U=Q.reduce((Ee,Le)=>Ee*Le,1),ae=new N[0].data.constructor(U),Ae=N[0].type;if(D===0){let Ee=0;for(const Le of N){const Ve=Le.data;ae.set(Ve,Ee),Ee+=Ve.length}}else{let Ee=0;for(let Le=0;Le<N.length;++Le){const{data:Ve,dims:me}=N[Le];for(let H=0;H<Ve.length;++H){let fe=0;for(let Z=me.length-1,xe=H,Ce=1;Z>=0;--Z){const $e=me[Z];let Se=xe%$e;Z===D&&(Se+=Ee),fe+=Se*Ce,Ce*=Q[Z],xe=Math.floor(xe/$e)}ae[fe]=Ve[H]}Ee+=me[D]}}return new a(Ae,ae,Q)}function b(N,D=0){return x(N.map(Q=>Q.unsqueeze(D)),D)}function $(N,D,Q=null,U=!1,ae=null){const Ae=D.data,Ee=D.dims;Q=T(Q,Ee.length);const Le=Ee.slice();Le[Q]=1;const Ve=new Ae.constructor(Ae.length/Ee[Q]);ae!==null&&Ve.fill(ae);for(let me=0;me<Ae.length;++me){let H=0;for(let fe=Ee.length-1,Z=me,xe=1;fe>=0;--fe){const Ce=Ee[fe];if(fe!==Q){const $e=Z%Ce;H+=$e*xe,xe*=Le[fe]}Z=Math.floor(Z/Ce)}Ve[H]=N(Ve[H],Ae[me],me,H)}return U||Le.splice(Q,1),[D.type,Ve,Le]}function j(N,D=null,Q=1,U=!1){const ae=N.data,Ae=N.dims;if(D===null){const xe=ae.reduce((Oe,ze)=>Oe+ze,0)/ae.length,Ce=Math.sqrt(ae.reduce((Oe,ze)=>Oe+(ze-xe)**2,0)/(ae.length-Q)),$e=new a(N.type,[xe],[]);return[new a(N.type,[Ce],[]),$e]}D=T(D,Ae.length);const Ee=B(N,D,U),Le=Ee.data,[Ve,me,H]=$((Z,xe,Ce,$e)=>Z+(xe-Le[$e])**2,N,D,U);for(let Z=0;Z<me.length;++Z)me[Z]=Math.sqrt(me[Z]/(Ae[D]-Q));return[new a(Ve,me,H),Ee]}function B(N,D=null,Q=!1){const U=N.dims,ae=N.data;if(D===null){const Ve=ae.reduce((me,H)=>me+H,0);return new a(N.type,[Ve/ae.length],[])}D=T(D,U.length);const[Ae,Ee,Le]=$((Ve,me)=>Ve+me,N,D,Q);if(U[D]!==1)for(let Ve=0;Ve<Ee.length;++Ve)Ee[Ve]/=U[D];return new a(Ae,Ee,Le)}function X(N){const D=new Array(N.length);for(let Q=N.length-1,U=1;Q>=0;--Q)D[Q]=U,U*=N[Q];return D}function re(N,D,Q,U){const ae=N.reduce((Ae,Ee)=>Ae*Ee,1);return new a(Q,new U(ae).fill(D),N)}function z(N,D){let Q,U;if(typeof D=="number")Q="float32",U=Float32Array;else if(typeof D=="bigint")Q="int64",U=BigInt64Array;else if(typeof D=="boolean")Q="bool",U=Uint8Array;else throw new Error(`Unsupported data type: ${typeof D}`);return re(N,D,Q,U)}function te(N,D){return z(N.dims,D)}function W(N){return re(N,1n,"int64",BigInt64Array)}function K(N){return W(N.dims)}function se(N){return re(N,0n,"int64",BigInt64Array)}function J(N){return se(N.dims)}function ue(N){const D=N.reduce((Q,U)=>Q*U,1);return new a("float32",Float32Array.from({length:D},()=>Math.random()),N)}function ce(N,D){if(N.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(N.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(D))throw new Error("The precision must be either 'binary' or 'ubinary'");const Q=D==="binary",U=Q?"int8":"uint8",ae=Q?Int8Array:Uint8Array,Ae=N.data,Ee=new ae(Ae.length/8);for(let Le=0;Le<Ae.length;++Le){const Ve=Ae[Le]>0?1:0,me=Math.floor(Le/8),H=Le%8;Ee[me]|=Ve<<7-H,Q&&H===0&&(Ee[me]-=128)}return new a(U,Ee,[N.dims[0],N.dims[1]/8])}},"./src/utils/video.js":(e,r,t)=>{t.r(r),t.d(r,{RawVideo:()=>o,RawVideoFrame:()=>i,load_video:()=>a});var s=t("./src/utils/image.js"),n=t("./src/env.js");class i{constructor(d,c){this.image=d,this.timestamp=c}}class o{constructor(d,c){d.length>0&&d[0]instanceof s.RawImage&&(d=d.map((u,p)=>new i(u,(p+1)/(d.length+1)*c))),this.frames=d,this.duration=c}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function a(l,{num_frames:d=null,fps:c=null}={}){if(!n.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(d==null&&c==null)throw new Error("Either num_frames or fps must be provided.");const u=[],p=document.createElement("video");if(p.crossOrigin="anonymous",p.muted=!0,typeof l=="string")p.src=l;else if(l instanceof Blob)p.src=URL.createObjectURL(l);else if(l instanceof HTMLVideoElement)p.src=l.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise(I=>p.onloadedmetadata=I),p.seekable.start(0)===p.seekable.end(0)){const v=await(await fetch(p.src)).blob();p.src=URL.createObjectURL(v),await new Promise(T=>p.onloadedmetadata=T)}const _=p.duration;let f,P;d!=null?(f=d,P=d===1?0:_/(d-1)):(P=1/c,f=Math.floor(_/P));let A=[];for(let I=0;I<f;++I)A.push(d===1?_/2:I*P);const y=document.createElement("canvas");y.width=p.videoWidth,y.height=p.videoHeight;const g=y.getContext("2d",{willReadFrequently:!0});for(const I of A){p.currentTime=I,await new Promise(b=>{p.onseeked=b}),g.drawImage(p,0,0,y.width,y.height);const v=g.getImageData(0,0,y.width,y.height),T=new s.RawImage(v.data,y.width,y.height,4),x=new i(T,I);u.push(x)}return p.remove(),new o(u,_)}}},a0={};function Bt(e){var r=a0[e];if(r!==void 0)return r.exports;var t=a0[e]={exports:{}};return iT[e](t,t.exports,Bt),t.exports}(()=>{var e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,r;Bt.t=function(t,s){if(s&1&&(t=this(t)),s&8||typeof t=="object"&&t&&(s&4&&t.__esModule||s&16&&typeof t.then=="function"))return t;var n=Object.create(null);Bt.r(n);var i={};r=r||[null,e({}),e([]),e(e)];for(var o=s&2&&t;typeof o=="object"&&!~r.indexOf(o);o=e(o))Object.getOwnPropertyNames(o).forEach(a=>i[a]=()=>t[a]);return i.default=()=>t,Bt.d(n,i),n}})();Bt.d=(e,r)=>{for(var t in r)Bt.o(r,t)&&!Bt.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})};Bt.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);Bt.r=e=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var m={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Bt.r(m),Bt.d(m,{ASTFeatureExtractor:()=>u.ASTFeatureExtractor,ASTForAudioClassification:()=>t.ASTForAudioClassification,ASTModel:()=>t.ASTModel,ASTPreTrainedModel:()=>t.ASTPreTrainedModel,AlbertForMaskedLM:()=>t.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>t.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>t.AlbertForSequenceClassification,AlbertModel:()=>t.AlbertModel,AlbertPreTrainedModel:()=>t.AlbertPreTrainedModel,AlbertTokenizer:()=>s.AlbertTokenizer,AudioClassificationPipeline:()=>r.AudioClassificationPipeline,AutoConfig:()=>n.AutoConfig,AutoFeatureExtractor:()=>p.AutoFeatureExtractor,AutoImageProcessor:()=>P.AutoImageProcessor,AutoModel:()=>t.AutoModel,AutoModelForAudioClassification:()=>t.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>t.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>t.AutoModelForAudioTextToText,AutoModelForCTC:()=>t.AutoModelForCTC,AutoModelForCausalLM:()=>t.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>t.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>t.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>t.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>t.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>t.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>t.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>t.AutoModelForImageTextToText,AutoModelForImageToImage:()=>t.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>t.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>t.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>t.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>t.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>t.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>t.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>t.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>t.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>t.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>t.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>t.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>t.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>t.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>t.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>t.AutoModelForVision2Seq,AutoModelForXVector:()=>t.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>t.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>g.AutoProcessor,AutoTokenizer:()=>s.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>r.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>r.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>t.BartForConditionalGeneration,BartForSequenceClassification:()=>t.BartForSequenceClassification,BartModel:()=>t.BartModel,BartPretrainedModel:()=>t.BartPretrainedModel,BartTokenizer:()=>s.BartTokenizer,BaseModelOutput:()=>t.BaseModelOutput,BaseStreamer:()=>I.BaseStreamer,BeitFeatureExtractor:()=>f.BeitFeatureExtractor,BeitForImageClassification:()=>t.BeitForImageClassification,BeitModel:()=>t.BeitModel,BeitPreTrainedModel:()=>t.BeitPreTrainedModel,BertForMaskedLM:()=>t.BertForMaskedLM,BertForQuestionAnswering:()=>t.BertForQuestionAnswering,BertForSequenceClassification:()=>t.BertForSequenceClassification,BertForTokenClassification:()=>t.BertForTokenClassification,BertModel:()=>t.BertModel,BertPreTrainedModel:()=>t.BertPreTrainedModel,BertTokenizer:()=>s.BertTokenizer,BitImageProcessor:()=>f.BitImageProcessor,BlenderbotForConditionalGeneration:()=>t.BlenderbotForConditionalGeneration,BlenderbotModel:()=>t.BlenderbotModel,BlenderbotPreTrainedModel:()=>t.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>t.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>t.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>t.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>s.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>s.BlenderbotTokenizer,BloomForCausalLM:()=>t.BloomForCausalLM,BloomModel:()=>t.BloomModel,BloomPreTrainedModel:()=>t.BloomPreTrainedModel,BloomTokenizer:()=>s.BloomTokenizer,CLIPFeatureExtractor:()=>f.CLIPFeatureExtractor,CLIPImageProcessor:()=>f.CLIPImageProcessor,CLIPModel:()=>t.CLIPModel,CLIPPreTrainedModel:()=>t.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>t.CLIPSegForImageSegmentation,CLIPSegModel:()=>t.CLIPSegModel,CLIPSegPreTrainedModel:()=>t.CLIPSegPreTrainedModel,CLIPTextModel:()=>t.CLIPTextModel,CLIPTextModelWithProjection:()=>t.CLIPTextModelWithProjection,CLIPTokenizer:()=>s.CLIPTokenizer,CLIPVisionModel:()=>t.CLIPVisionModel,CLIPVisionModelWithProjection:()=>t.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>t.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>t.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>t.CamembertForSequenceClassification,CamembertForTokenClassification:()=>t.CamembertForTokenClassification,CamembertModel:()=>t.CamembertModel,CamembertPreTrainedModel:()=>t.CamembertPreTrainedModel,CamembertTokenizer:()=>s.CamembertTokenizer,CausalLMOutput:()=>t.CausalLMOutput,CausalLMOutputWithPast:()=>t.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>f.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>t.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>t.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>t.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>u.ClapFeatureExtractor,ClapModel:()=>t.ClapModel,ClapPreTrainedModel:()=>t.ClapPreTrainedModel,ClapTextModelWithProjection:()=>t.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>T.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>t.CodeGenForCausalLM,CodeGenModel:()=>t.CodeGenModel,CodeGenPreTrainedModel:()=>t.CodeGenPreTrainedModel,CodeGenTokenizer:()=>s.CodeGenTokenizer,CodeLlamaTokenizer:()=>s.CodeLlamaTokenizer,CohereForCausalLM:()=>t.CohereForCausalLM,CohereModel:()=>t.CohereModel,CoherePreTrainedModel:()=>t.CoherePreTrainedModel,CohereTokenizer:()=>s.CohereTokenizer,ConvBertForMaskedLM:()=>t.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>t.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>t.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>t.ConvBertForTokenClassification,ConvBertModel:()=>t.ConvBertModel,ConvBertPreTrainedModel:()=>t.ConvBertPreTrainedModel,ConvBertTokenizer:()=>s.ConvBertTokenizer,ConvNextFeatureExtractor:()=>f.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>t.ConvNextForImageClassification,ConvNextImageProcessor:()=>f.ConvNextImageProcessor,ConvNextModel:()=>t.ConvNextModel,ConvNextPreTrainedModel:()=>t.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>t.ConvNextV2ForImageClassification,ConvNextV2Model:()=>t.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>t.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>t.DFineForObjectDetection,DFineModel:()=>t.DFineModel,DFinePreTrainedModel:()=>t.DFinePreTrainedModel,DPTFeatureExtractor:()=>f.DPTFeatureExtractor,DPTForDepthEstimation:()=>t.DPTForDepthEstimation,DPTImageProcessor:()=>f.DPTImageProcessor,DPTModel:()=>t.DPTModel,DPTPreTrainedModel:()=>t.DPTPreTrainedModel,DacDecoderModel:()=>t.DacDecoderModel,DacDecoderOutput:()=>t.DacDecoderOutput,DacEncoderModel:()=>t.DacEncoderModel,DacEncoderOutput:()=>t.DacEncoderOutput,DacFeatureExtractor:()=>u.DacFeatureExtractor,DacModel:()=>t.DacModel,DacPreTrainedModel:()=>t.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>t.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>t.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>t.DebertaForSequenceClassification,DebertaForTokenClassification:()=>t.DebertaForTokenClassification,DebertaModel:()=>t.DebertaModel,DebertaPreTrainedModel:()=>t.DebertaPreTrainedModel,DebertaTokenizer:()=>s.DebertaTokenizer,DebertaV2ForMaskedLM:()=>t.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>t.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>t.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>t.DebertaV2ForTokenClassification,DebertaV2Model:()=>t.DebertaV2Model,DebertaV2PreTrainedModel:()=>t.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>s.DebertaV2Tokenizer,DecisionTransformerModel:()=>t.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>t.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>f.DeiTFeatureExtractor,DeiTForImageClassification:()=>t.DeiTForImageClassification,DeiTImageProcessor:()=>f.DeiTImageProcessor,DeiTModel:()=>t.DeiTModel,DeiTPreTrainedModel:()=>t.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>t.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>t.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>r.DepthEstimationPipeline,DepthProForDepthEstimation:()=>t.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>t.DepthProPreTrainedModel,DetrFeatureExtractor:()=>f.DetrFeatureExtractor,DetrForObjectDetection:()=>t.DetrForObjectDetection,DetrForSegmentation:()=>t.DetrForSegmentation,DetrImageProcessor:()=>f.DetrImageProcessor,DetrModel:()=>t.DetrModel,DetrObjectDetectionOutput:()=>t.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>t.DetrPreTrainedModel,DetrSegmentationOutput:()=>t.DetrSegmentationOutput,Dinov2ForImageClassification:()=>t.Dinov2ForImageClassification,Dinov2Model:()=>t.Dinov2Model,Dinov2PreTrainedModel:()=>t.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>t.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>t.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>t.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>t.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>t.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>t.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>t.DistilBertForTokenClassification,DistilBertModel:()=>t.DistilBertModel,DistilBertPreTrainedModel:()=>t.DistilBertPreTrainedModel,DistilBertTokenizer:()=>s.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>r.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>f.DonutFeatureExtractor,DonutImageProcessor:()=>f.DonutImageProcessor,DonutSwinModel:()=>t.DonutSwinModel,DonutSwinPreTrainedModel:()=>t.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>t.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>f.EfficientNetImageProcessor,EfficientNetModel:()=>t.EfficientNetModel,EfficientNetPreTrainedModel:()=>t.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>t.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>t.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>t.ElectraForSequenceClassification,ElectraForTokenClassification:()=>t.ElectraForTokenClassification,ElectraModel:()=>t.ElectraModel,ElectraPreTrainedModel:()=>t.ElectraPreTrainedModel,ElectraTokenizer:()=>s.ElectraTokenizer,EncodecFeatureExtractor:()=>u.EncodecFeatureExtractor,EosTokenCriteria:()=>v.EosTokenCriteria,EsmForMaskedLM:()=>t.EsmForMaskedLM,EsmForSequenceClassification:()=>t.EsmForSequenceClassification,EsmForTokenClassification:()=>t.EsmForTokenClassification,EsmModel:()=>t.EsmModel,EsmPreTrainedModel:()=>t.EsmPreTrainedModel,EsmTokenizer:()=>s.EsmTokenizer,ExaoneForCausalLM:()=>t.ExaoneForCausalLM,ExaoneModel:()=>t.ExaoneModel,ExaonePreTrainedModel:()=>t.ExaonePreTrainedModel,FFT:()=>d.FFT,FalconForCausalLM:()=>t.FalconForCausalLM,FalconModel:()=>t.FalconModel,FalconPreTrainedModel:()=>t.FalconPreTrainedModel,FalconTokenizer:()=>s.FalconTokenizer,FastViTForImageClassification:()=>t.FastViTForImageClassification,FastViTModel:()=>t.FastViTModel,FastViTPreTrainedModel:()=>t.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>r.FeatureExtractionPipeline,FeatureExtractor:()=>c.FeatureExtractor,FillMaskPipeline:()=>r.FillMaskPipeline,Florence2ForConditionalGeneration:()=>t.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>t.Florence2PreTrainedModel,Florence2Processor:()=>y.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>T.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>T.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>f.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>t.GLPNForDepthEstimation,GLPNModel:()=>t.GLPNModel,GLPNPreTrainedModel:()=>t.GLPNPreTrainedModel,GPT2LMHeadModel:()=>t.GPT2LMHeadModel,GPT2Model:()=>t.GPT2Model,GPT2PreTrainedModel:()=>t.GPT2PreTrainedModel,GPT2Tokenizer:()=>s.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>t.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>t.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>t.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>t.GPTJForCausalLM,GPTJModel:()=>t.GPTJModel,GPTJPreTrainedModel:()=>t.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>t.GPTNeoForCausalLM,GPTNeoModel:()=>t.GPTNeoModel,GPTNeoPreTrainedModel:()=>t.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>t.GPTNeoXForCausalLM,GPTNeoXModel:()=>t.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>t.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>s.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>t.Gemma2ForCausalLM,Gemma2Model:()=>t.Gemma2Model,Gemma2PreTrainedModel:()=>t.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>t.Gemma3ForCausalLM,Gemma3Model:()=>t.Gemma3Model,Gemma3PreTrainedModel:()=>t.Gemma3PreTrainedModel,Gemma3nAudioFeatureExtractor:()=>u.Gemma3nAudioFeatureExtractor,Gemma3nForConditionalGeneration:()=>t.Gemma3nForConditionalGeneration,Gemma3nPreTrainedModel:()=>t.Gemma3nPreTrainedModel,Gemma3nProcessor:()=>y.Gemma3nProcessor,GemmaForCausalLM:()=>t.GemmaForCausalLM,GemmaModel:()=>t.GemmaModel,GemmaPreTrainedModel:()=>t.GemmaPreTrainedModel,GemmaTokenizer:()=>s.GemmaTokenizer,GlmForCausalLM:()=>t.GlmForCausalLM,GlmModel:()=>t.GlmModel,GlmPreTrainedModel:()=>t.GlmPreTrainedModel,GraniteForCausalLM:()=>t.GraniteForCausalLM,GraniteModel:()=>t.GraniteModel,GranitePreTrainedModel:()=>t.GranitePreTrainedModel,Grok1Tokenizer:()=>s.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>t.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>t.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>y.GroundingDinoProcessor,GroupViTModel:()=>t.GroupViTModel,GroupViTPreTrainedModel:()=>t.GroupViTPreTrainedModel,HeliumForCausalLM:()=>t.HeliumForCausalLM,HeliumModel:()=>t.HeliumModel,HeliumPreTrainedModel:()=>t.HeliumPreTrainedModel,HerbertTokenizer:()=>s.HerbertTokenizer,HieraForImageClassification:()=>t.HieraForImageClassification,HieraModel:()=>t.HieraModel,HieraPreTrainedModel:()=>t.HieraPreTrainedModel,HubertForCTC:()=>t.HubertForCTC,HubertForSequenceClassification:()=>t.HubertForSequenceClassification,HubertModel:()=>t.HubertModel,HubertPreTrainedModel:()=>t.HubertPreTrainedModel,IJepaForImageClassification:()=>t.IJepaForImageClassification,IJepaModel:()=>t.IJepaModel,IJepaPreTrainedModel:()=>t.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>t.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>f.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>t.Idefics3PreTrainedModel,Idefics3Processor:()=>y.Idefics3Processor,ImageClassificationPipeline:()=>r.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>r.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>u.ImageFeatureExtractor,ImageMattingOutput:()=>t.ImageMattingOutput,ImageProcessor:()=>_.ImageProcessor,ImageSegmentationPipeline:()=>r.ImageSegmentationPipeline,ImageToImagePipeline:()=>r.ImageToImagePipeline,ImageToTextPipeline:()=>r.ImageToTextPipeline,InterruptableStoppingCriteria:()=>v.InterruptableStoppingCriteria,JAISLMHeadModel:()=>t.JAISLMHeadModel,JAISModel:()=>t.JAISModel,JAISPreTrainedModel:()=>t.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>f.JinaCLIPImageProcessor,JinaCLIPModel:()=>t.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>t.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>y.JinaCLIPProcessor,JinaCLIPTextModel:()=>t.JinaCLIPTextModel,JinaCLIPVisionModel:()=>t.JinaCLIPVisionModel,LiteWhisperForConditionalGeneration:()=>t.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>t.LlamaForCausalLM,LlamaModel:()=>t.LlamaModel,LlamaPreTrainedModel:()=>t.LlamaPreTrainedModel,LlamaTokenizer:()=>s.LlamaTokenizer,LlavaForConditionalGeneration:()=>t.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>t.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>f.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>t.LlavaPreTrainedModel,LlavaProcessor:()=>y.LlavaProcessor,LlavaQwen2ForCausalLM:()=>t.LlavaQwen2ForCausalLM,LogitsProcessor:()=>T.LogitsProcessor,LogitsProcessorList:()=>T.LogitsProcessorList,LogitsWarper:()=>T.LogitsWarper,LongT5ForConditionalGeneration:()=>t.LongT5ForConditionalGeneration,LongT5Model:()=>t.LongT5Model,LongT5PreTrainedModel:()=>t.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>t.M2M100ForConditionalGeneration,M2M100Model:()=>t.M2M100Model,M2M100PreTrainedModel:()=>t.M2M100PreTrainedModel,M2M100Tokenizer:()=>s.M2M100Tokenizer,MBart50Tokenizer:()=>s.MBart50Tokenizer,MBartForCausalLM:()=>t.MBartForCausalLM,MBartForConditionalGeneration:()=>t.MBartForConditionalGeneration,MBartForSequenceClassification:()=>t.MBartForSequenceClassification,MBartModel:()=>t.MBartModel,MBartPreTrainedModel:()=>t.MBartPreTrainedModel,MBartTokenizer:()=>s.MBartTokenizer,MPNetForMaskedLM:()=>t.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>t.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>t.MPNetForSequenceClassification,MPNetForTokenClassification:()=>t.MPNetForTokenClassification,MPNetModel:()=>t.MPNetModel,MPNetPreTrainedModel:()=>t.MPNetPreTrainedModel,MPNetTokenizer:()=>s.MPNetTokenizer,MT5ForConditionalGeneration:()=>t.MT5ForConditionalGeneration,MT5Model:()=>t.MT5Model,MT5PreTrainedModel:()=>t.MT5PreTrainedModel,MarianMTModel:()=>t.MarianMTModel,MarianModel:()=>t.MarianModel,MarianPreTrainedModel:()=>t.MarianPreTrainedModel,MarianTokenizer:()=>s.MarianTokenizer,Mask2FormerImageProcessor:()=>f.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>f.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>t.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>f.MaskFormerImageProcessor,MaskFormerModel:()=>t.MaskFormerModel,MaskFormerPreTrainedModel:()=>t.MaskFormerPreTrainedModel,MaskedLMOutput:()=>t.MaskedLMOutput,MaxLengthCriteria:()=>v.MaxLengthCriteria,Metric3DForDepthEstimation:()=>t.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>t.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>t.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>t.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>t.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>t.MgpstrModelOutput,MgpstrPreTrainedModel:()=>t.MgpstrPreTrainedModel,MgpstrProcessor:()=>y.MgpstrProcessor,MgpstrTokenizer:()=>s.MgpstrTokenizer,MimiDecoderModel:()=>t.MimiDecoderModel,MimiDecoderOutput:()=>t.MimiDecoderOutput,MimiEncoderModel:()=>t.MimiEncoderModel,MimiEncoderOutput:()=>t.MimiEncoderOutput,MimiModel:()=>t.MimiModel,MimiPreTrainedModel:()=>t.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>T.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>T.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>t.MistralForCausalLM,MistralModel:()=>t.MistralModel,MistralPreTrainedModel:()=>t.MistralPreTrainedModel,MobileBertForMaskedLM:()=>t.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>t.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>t.MobileBertForSequenceClassification,MobileBertModel:()=>t.MobileBertModel,MobileBertPreTrainedModel:()=>t.MobileBertPreTrainedModel,MobileBertTokenizer:()=>s.MobileBertTokenizer,MobileLLMForCausalLM:()=>t.MobileLLMForCausalLM,MobileLLMModel:()=>t.MobileLLMModel,MobileLLMPreTrainedModel:()=>t.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>f.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>t.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>t.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>f.MobileNetV1ImageProcessor,MobileNetV1Model:()=>t.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>t.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>f.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>t.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>t.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>f.MobileNetV2ImageProcessor,MobileNetV2Model:()=>t.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>t.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>f.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>t.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>t.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>f.MobileNetV3ImageProcessor,MobileNetV3Model:()=>t.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>t.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>f.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>t.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>t.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>f.MobileNetV4ImageProcessor,MobileNetV4Model:()=>t.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>t.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>f.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>t.MobileViTForImageClassification,MobileViTImageProcessor:()=>f.MobileViTImageProcessor,MobileViTModel:()=>t.MobileViTModel,MobileViTPreTrainedModel:()=>t.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>t.MobileViTV2ForImageClassification,MobileViTV2Model:()=>t.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>t.MobileViTV2PreTrainedModel,ModelOutput:()=>t.ModelOutput,ModernBertForMaskedLM:()=>t.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>t.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>t.ModernBertForTokenClassification,ModernBertModel:()=>t.ModernBertModel,ModernBertPreTrainedModel:()=>t.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>t.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>u.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>t.MoonshineForConditionalGeneration,MoonshineModel:()=>t.MoonshineModel,MoonshinePreTrainedModel:()=>t.MoonshinePreTrainedModel,MoonshineProcessor:()=>y.MoonshineProcessor,MptForCausalLM:()=>t.MptForCausalLM,MptModel:()=>t.MptModel,MptPreTrainedModel:()=>t.MptPreTrainedModel,MultiModalityCausalLM:()=>t.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>t.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>t.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>t.MusicgenForConditionalGeneration,MusicgenModel:()=>t.MusicgenModel,MusicgenPreTrainedModel:()=>t.MusicgenPreTrainedModel,NllbTokenizer:()=>s.NllbTokenizer,NoBadWordsLogitsProcessor:()=>T.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>T.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>t.NomicBertModel,NomicBertPreTrainedModel:()=>t.NomicBertPreTrainedModel,NougatImageProcessor:()=>f.NougatImageProcessor,NougatTokenizer:()=>s.NougatTokenizer,OPTForCausalLM:()=>t.OPTForCausalLM,OPTModel:()=>t.OPTModel,OPTPreTrainedModel:()=>t.OPTPreTrainedModel,ObjectDetectionPipeline:()=>r.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>t.Olmo2ForCausalLM,Olmo2Model:()=>t.Olmo2Model,Olmo2PreTrainedModel:()=>t.Olmo2PreTrainedModel,OlmoForCausalLM:()=>t.OlmoForCausalLM,OlmoModel:()=>t.OlmoModel,OlmoPreTrainedModel:()=>t.OlmoPreTrainedModel,OpenELMForCausalLM:()=>t.OpenELMForCausalLM,OpenELMModel:()=>t.OpenELMModel,OpenELMPreTrainedModel:()=>t.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>f.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>t.OwlViTForObjectDetection,OwlViTImageProcessor:()=>f.OwlViTImageProcessor,OwlViTModel:()=>t.OwlViTModel,OwlViTPreTrainedModel:()=>t.OwlViTPreTrainedModel,OwlViTProcessor:()=>y.OwlViTProcessor,Owlv2ForObjectDetection:()=>t.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>f.Owlv2ImageProcessor,Owlv2Model:()=>t.Owlv2Model,Owlv2PreTrainedModel:()=>t.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>t.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>t.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>y.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>t.PatchTSMixerForPrediction,PatchTSMixerModel:()=>t.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>t.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>t.PatchTSTForPrediction,PatchTSTModel:()=>t.PatchTSTModel,PatchTSTPreTrainedModel:()=>t.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>t.Phi3ForCausalLM,Phi3Model:()=>t.Phi3Model,Phi3PreTrainedModel:()=>t.Phi3PreTrainedModel,Phi3VForCausalLM:()=>t.Phi3VForCausalLM,Phi3VImageProcessor:()=>f.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>t.Phi3VPreTrainedModel,Phi3VProcessor:()=>y.Phi3VProcessor,PhiForCausalLM:()=>t.PhiForCausalLM,PhiModel:()=>t.PhiModel,PhiPreTrainedModel:()=>t.PhiPreTrainedModel,Pipeline:()=>r.Pipeline,PreTrainedModel:()=>t.PreTrainedModel,PreTrainedTokenizer:()=>s.PreTrainedTokenizer,PretrainedConfig:()=>n.PretrainedConfig,PretrainedMixin:()=>t.PretrainedMixin,Processor:()=>A.Processor,PvtForImageClassification:()=>t.PvtForImageClassification,PvtImageProcessor:()=>f.PvtImageProcessor,PvtModel:()=>t.PvtModel,PvtPreTrainedModel:()=>t.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>u.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>t.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>t.PyAnnoteModel,PyAnnotePreTrainedModel:()=>t.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>y.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>t.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>r.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>t.Qwen2ForCausalLM,Qwen2Model:()=>t.Qwen2Model,Qwen2PreTrainedModel:()=>t.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>s.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>t.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>f.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>t.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>y.Qwen2VLProcessor,Qwen3ForCausalLM:()=>t.Qwen3ForCausalLM,Qwen3Model:()=>t.Qwen3Model,Qwen3PreTrainedModel:()=>t.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>t.RFDetrForObjectDetection,RFDetrModel:()=>t.RFDetrModel,RFDetrObjectDetectionOutput:()=>t.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>t.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>t.RTDetrForObjectDetection,RTDetrImageProcessor:()=>f.RTDetrImageProcessor,RTDetrModel:()=>t.RTDetrModel,RTDetrObjectDetectionOutput:()=>t.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>t.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>t.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>t.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>t.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>t.RTDetrV2PreTrainedModel,RawAudio:()=>i.RawAudio,RawImage:()=>o.RawImage,RawVideo:()=>a.RawVideo,RawVideoFrame:()=>a.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>T.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>t.ResNetForImageClassification,ResNetModel:()=>t.ResNetModel,ResNetPreTrainedModel:()=>t.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>t.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>t.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>t.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>t.RoFormerForTokenClassification,RoFormerModel:()=>t.RoFormerModel,RoFormerPreTrainedModel:()=>t.RoFormerPreTrainedModel,RoFormerTokenizer:()=>s.RoFormerTokenizer,RobertaForMaskedLM:()=>t.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>t.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>t.RobertaForSequenceClassification,RobertaForTokenClassification:()=>t.RobertaForTokenClassification,RobertaModel:()=>t.RobertaModel,RobertaPreTrainedModel:()=>t.RobertaPreTrainedModel,RobertaTokenizer:()=>s.RobertaTokenizer,SamImageProcessor:()=>f.SamImageProcessor,SamImageSegmentationOutput:()=>t.SamImageSegmentationOutput,SamModel:()=>t.SamModel,SamPreTrainedModel:()=>t.SamPreTrainedModel,SamProcessor:()=>y.SamProcessor,SapiensForDepthEstimation:()=>t.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>t.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>t.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>t.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>u.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>f.SegformerFeatureExtractor,SegformerForImageClassification:()=>t.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>t.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>f.SegformerImageProcessor,SegformerModel:()=>t.SegformerModel,SegformerPreTrainedModel:()=>t.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>t.Seq2SeqLMOutput,SequenceClassifierOutput:()=>t.SequenceClassifierOutput,SiglipImageProcessor:()=>f.SiglipImageProcessor,SiglipModel:()=>t.SiglipModel,SiglipPreTrainedModel:()=>t.SiglipPreTrainedModel,SiglipTextModel:()=>t.SiglipTextModel,SiglipTokenizer:()=>s.SiglipTokenizer,SiglipVisionModel:()=>t.SiglipVisionModel,SmolVLMForConditionalGeneration:()=>t.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>f.SmolVLMImageProcessor,SmolVLMProcessor:()=>y.SmolVLMProcessor,SnacDecoderModel:()=>t.SnacDecoderModel,SnacEncoderModel:()=>t.SnacEncoderModel,SnacFeatureExtractor:()=>u.SnacFeatureExtractor,SnacModel:()=>t.SnacModel,SnacPreTrainedModel:()=>t.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>u.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>t.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>t.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>t.SpeechT5HifiGan,SpeechT5Model:()=>t.SpeechT5Model,SpeechT5PreTrainedModel:()=>t.SpeechT5PreTrainedModel,SpeechT5Processor:()=>y.SpeechT5Processor,SpeechT5Tokenizer:()=>s.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>t.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>t.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>t.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>t.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>t.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>s.SqueezeBertTokenizer,StableLmForCausalLM:()=>t.StableLmForCausalLM,StableLmModel:()=>t.StableLmModel,StableLmPreTrainedModel:()=>t.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>t.Starcoder2ForCausalLM,Starcoder2Model:()=>t.Starcoder2Model,Starcoder2PreTrainedModel:()=>t.Starcoder2PreTrainedModel,StoppingCriteria:()=>v.StoppingCriteria,StoppingCriteriaList:()=>v.StoppingCriteriaList,StyleTextToSpeech2Model:()=>t.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>t.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>r.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>T.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>t.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>f.Swin2SRImageProcessor,Swin2SRModel:()=>t.Swin2SRModel,Swin2SRPreTrainedModel:()=>t.Swin2SRPreTrainedModel,SwinForImageClassification:()=>t.SwinForImageClassification,SwinForSemanticSegmentation:()=>t.SwinForSemanticSegmentation,SwinModel:()=>t.SwinModel,SwinPreTrainedModel:()=>t.SwinPreTrainedModel,T5ForConditionalGeneration:()=>t.T5ForConditionalGeneration,T5Model:()=>t.T5Model,T5PreTrainedModel:()=>t.T5PreTrainedModel,T5Tokenizer:()=>s.T5Tokenizer,TableTransformerForObjectDetection:()=>t.TableTransformerForObjectDetection,TableTransformerModel:()=>t.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>t.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>t.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>T.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>r.Text2TextGenerationPipeline,TextClassificationPipeline:()=>r.TextClassificationPipeline,TextGenerationPipeline:()=>r.TextGenerationPipeline,TextStreamer:()=>I.TextStreamer,TextToAudioPipeline:()=>r.TextToAudioPipeline,TokenClassificationPipeline:()=>r.TokenClassificationPipeline,TokenClassifierOutput:()=>t.TokenClassifierOutput,TokenizerModel:()=>s.TokenizerModel,TopKLogitsWarper:()=>T.TopKLogitsWarper,TopPLogitsWarper:()=>T.TopPLogitsWarper,TrOCRForCausalLM:()=>t.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>t.TrOCRPreTrainedModel,TranslationPipeline:()=>r.TranslationPipeline,UltravoxModel:()=>t.UltravoxModel,UltravoxPreTrainedModel:()=>t.UltravoxPreTrainedModel,UltravoxProcessor:()=>y.UltravoxProcessor,UniSpeechForCTC:()=>t.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>t.UniSpeechForSequenceClassification,UniSpeechModel:()=>t.UniSpeechModel,UniSpeechPreTrainedModel:()=>t.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>t.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>t.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>t.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>t.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>t.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>y.VLChatProcessor,VLMImageProcessor:()=>f.VLMImageProcessor,ViTFeatureExtractor:()=>f.ViTFeatureExtractor,ViTForImageClassification:()=>t.ViTForImageClassification,ViTImageProcessor:()=>f.ViTImageProcessor,ViTMAEModel:()=>t.ViTMAEModel,ViTMAEPreTrainedModel:()=>t.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>t.ViTMSNForImageClassification,ViTMSNModel:()=>t.ViTMSNModel,ViTMSNPreTrainedModel:()=>t.ViTMSNPreTrainedModel,ViTModel:()=>t.ViTModel,ViTPreTrainedModel:()=>t.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>t.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>t.VitMatteForImageMatting,VitMatteImageProcessor:()=>f.VitMatteImageProcessor,VitMattePreTrainedModel:()=>t.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>t.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>f.VitPoseImageProcessor,VitPosePreTrainedModel:()=>t.VitPosePreTrainedModel,VitsModel:()=>t.VitsModel,VitsModelOutput:()=>t.VitsModelOutput,VitsPreTrainedModel:()=>t.VitsPreTrainedModel,VitsTokenizer:()=>s.VitsTokenizer,Wav2Vec2BertForCTC:()=>t.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>t.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>t.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>t.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>s.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>u.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>t.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>t.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>t.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>t.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>t.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>y.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>y.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>t.WavLMForAudioFrameClassification,WavLMForCTC:()=>t.WavLMForCTC,WavLMForSequenceClassification:()=>t.WavLMForSequenceClassification,WavLMForXVector:()=>t.WavLMForXVector,WavLMModel:()=>t.WavLMModel,WavLMPreTrainedModel:()=>t.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>u.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>t.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>t.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>u.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>t.WhisperForConditionalGeneration,WhisperModel:()=>t.WhisperModel,WhisperPreTrainedModel:()=>t.WhisperPreTrainedModel,WhisperProcessor:()=>y.WhisperProcessor,WhisperTextStreamer:()=>I.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>T.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>s.WhisperTokenizer,XLMForQuestionAnswering:()=>t.XLMForQuestionAnswering,XLMForSequenceClassification:()=>t.XLMForSequenceClassification,XLMForTokenClassification:()=>t.XLMForTokenClassification,XLMModel:()=>t.XLMModel,XLMPreTrainedModel:()=>t.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>t.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>t.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>t.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>t.XLMRobertaForTokenClassification,XLMRobertaModel:()=>t.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>t.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>s.XLMRobertaTokenizer,XLMTokenizer:()=>s.XLMTokenizer,XLMWithLMHeadModel:()=>t.XLMWithLMHeadModel,XVectorOutput:()=>t.XVectorOutput,YolosFeatureExtractor:()=>f.YolosFeatureExtractor,YolosForObjectDetection:()=>t.YolosForObjectDetection,YolosImageProcessor:()=>f.YolosImageProcessor,YolosModel:()=>t.YolosModel,YolosObjectDetectionOutput:()=>t.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>t.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>r.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>r.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>r.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>r.ZeroShotObjectDetectionPipeline,bankers_round:()=>d.bankers_round,cat:()=>l.cat,cos_sim:()=>d.cos_sim,dot:()=>d.dot,dynamic_time_warping:()=>d.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getKeyValueShapes:()=>n.getKeyValueShapes,hamming:()=>i.hamming,hanning:()=>i.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>d.interpolate_data,is_chinese_char:()=>s.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>o.load_image,load_video:()=>a.load_video,log_softmax:()=>d.log_softmax,magnitude:()=>d.magnitude,matmul:()=>l.matmul,max:()=>d.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>d.medianFilter,mel_filter_bank:()=>i.mel_filter_bank,min:()=>d.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>d.permute_data,pipeline:()=>r.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>i.read_audio,rfft:()=>l.rfft,round:()=>d.round,slice:()=>l.slice,softmax:()=>d.softmax,spectrogram:()=>i.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>i.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=Bt("./src/env.js"),r=Bt("./src/pipelines.js"),t=Bt("./src/models.js"),s=Bt("./src/tokenizers.js"),n=Bt("./src/configs.js"),i=Bt("./src/utils/audio.js"),o=Bt("./src/utils/image.js"),a=Bt("./src/utils/video.js"),l=Bt("./src/utils/tensor.js"),d=Bt("./src/utils/maths.js"),c=Bt("./src/base/feature_extraction_utils.js"),u=Bt("./src/models/feature_extractors.js"),p=Bt("./src/models/auto/feature_extraction_auto.js"),_=Bt("./src/base/image_processors_utils.js"),f=Bt("./src/models/image_processors.js"),P=Bt("./src/models/auto/image_processing_auto.js"),A=Bt("./src/base/processing_utils.js"),y=Bt("./src/models/processors.js"),g=Bt("./src/models/auto/processing_auto.js"),I=Bt("./src/generation/streamers.js"),v=Bt("./src/generation/stopping_criteria.js"),T=Bt("./src/generation/logits_process.js")})();m.ASTFeatureExtractor;m.ASTForAudioClassification;m.ASTModel;m.ASTPreTrainedModel;m.AlbertForMaskedLM;m.AlbertForQuestionAnswering;m.AlbertForSequenceClassification;m.AlbertModel;m.AlbertPreTrainedModel;m.AlbertTokenizer;m.AudioClassificationPipeline;m.AutoConfig;m.AutoFeatureExtractor;m.AutoImageProcessor;m.AutoModel;m.AutoModelForAudioClassification;m.AutoModelForAudioFrameClassification;m.AutoModelForAudioTextToText;m.AutoModelForCTC;m.AutoModelForCausalLM;m.AutoModelForDepthEstimation;m.AutoModelForDocumentQuestionAnswering;m.AutoModelForImageClassification;m.AutoModelForImageFeatureExtraction;m.AutoModelForImageMatting;m.AutoModelForImageSegmentation;m.AutoModelForImageTextToText;m.AutoModelForImageToImage;m.AutoModelForMaskGeneration;m.AutoModelForMaskedLM;m.AutoModelForNormalEstimation;m.AutoModelForObjectDetection;m.AutoModelForPoseEstimation;m.AutoModelForQuestionAnswering;m.AutoModelForSemanticSegmentation;m.AutoModelForSeq2SeqLM;m.AutoModelForSequenceClassification;m.AutoModelForSpeechSeq2Seq;m.AutoModelForTextToSpectrogram;m.AutoModelForTextToWaveform;m.AutoModelForTokenClassification;m.AutoModelForUniversalSegmentation;m.AutoModelForVision2Seq;m.AutoModelForXVector;m.AutoModelForZeroShotObjectDetection;m.AutoProcessor;m.AutoTokenizer;m.AutomaticSpeechRecognitionPipeline;m.BackgroundRemovalPipeline;m.BartForConditionalGeneration;m.BartForSequenceClassification;m.BartModel;m.BartPretrainedModel;m.BartTokenizer;m.BaseModelOutput;m.BaseStreamer;m.BeitFeatureExtractor;m.BeitForImageClassification;m.BeitModel;m.BeitPreTrainedModel;m.BertForMaskedLM;m.BertForQuestionAnswering;m.BertForSequenceClassification;m.BertForTokenClassification;m.BertModel;m.BertPreTrainedModel;m.BertTokenizer;m.BitImageProcessor;m.BlenderbotForConditionalGeneration;m.BlenderbotModel;m.BlenderbotPreTrainedModel;m.BlenderbotSmallForConditionalGeneration;m.BlenderbotSmallModel;m.BlenderbotSmallPreTrainedModel;m.BlenderbotSmallTokenizer;m.BlenderbotTokenizer;m.BloomForCausalLM;m.BloomModel;m.BloomPreTrainedModel;m.BloomTokenizer;m.CLIPFeatureExtractor;m.CLIPImageProcessor;m.CLIPModel;m.CLIPPreTrainedModel;m.CLIPSegForImageSegmentation;m.CLIPSegModel;m.CLIPSegPreTrainedModel;m.CLIPTextModel;m.CLIPTextModelWithProjection;m.CLIPTokenizer;m.CLIPVisionModel;m.CLIPVisionModelWithProjection;m.CamembertForMaskedLM;m.CamembertForQuestionAnswering;m.CamembertForSequenceClassification;m.CamembertForTokenClassification;m.CamembertModel;m.CamembertPreTrainedModel;m.CamembertTokenizer;m.CausalLMOutput;m.CausalLMOutputWithPast;m.ChineseCLIPFeatureExtractor;m.ChineseCLIPModel;m.ChineseCLIPPreTrainedModel;m.ClapAudioModelWithProjection;m.ClapFeatureExtractor;m.ClapModel;m.ClapPreTrainedModel;m.ClapTextModelWithProjection;m.ClassifierFreeGuidanceLogitsProcessor;m.CodeGenForCausalLM;m.CodeGenModel;m.CodeGenPreTrainedModel;m.CodeGenTokenizer;m.CodeLlamaTokenizer;m.CohereForCausalLM;m.CohereModel;m.CoherePreTrainedModel;m.CohereTokenizer;m.ConvBertForMaskedLM;m.ConvBertForQuestionAnswering;m.ConvBertForSequenceClassification;m.ConvBertForTokenClassification;m.ConvBertModel;m.ConvBertPreTrainedModel;m.ConvBertTokenizer;m.ConvNextFeatureExtractor;m.ConvNextForImageClassification;m.ConvNextImageProcessor;m.ConvNextModel;m.ConvNextPreTrainedModel;m.ConvNextV2ForImageClassification;m.ConvNextV2Model;m.ConvNextV2PreTrainedModel;m.DFineForObjectDetection;m.DFineModel;m.DFinePreTrainedModel;m.DPTFeatureExtractor;m.DPTForDepthEstimation;m.DPTImageProcessor;m.DPTModel;m.DPTPreTrainedModel;m.DacDecoderModel;m.DacDecoderOutput;m.DacEncoderModel;m.DacEncoderOutput;m.DacFeatureExtractor;m.DacModel;m.DacPreTrainedModel;m.DataTypeMap;m.DebertaForMaskedLM;m.DebertaForQuestionAnswering;m.DebertaForSequenceClassification;m.DebertaForTokenClassification;m.DebertaModel;m.DebertaPreTrainedModel;m.DebertaTokenizer;m.DebertaV2ForMaskedLM;m.DebertaV2ForQuestionAnswering;m.DebertaV2ForSequenceClassification;m.DebertaV2ForTokenClassification;m.DebertaV2Model;m.DebertaV2PreTrainedModel;m.DebertaV2Tokenizer;m.DecisionTransformerModel;m.DecisionTransformerPreTrainedModel;m.DeiTFeatureExtractor;m.DeiTForImageClassification;m.DeiTImageProcessor;m.DeiTModel;m.DeiTPreTrainedModel;m.DepthAnythingForDepthEstimation;m.DepthAnythingPreTrainedModel;m.DepthEstimationPipeline;m.DepthProForDepthEstimation;m.DepthProPreTrainedModel;m.DetrFeatureExtractor;m.DetrForObjectDetection;m.DetrForSegmentation;m.DetrImageProcessor;m.DetrModel;m.DetrObjectDetectionOutput;m.DetrPreTrainedModel;m.DetrSegmentationOutput;m.Dinov2ForImageClassification;m.Dinov2Model;m.Dinov2PreTrainedModel;m.Dinov2WithRegistersForImageClassification;m.Dinov2WithRegistersModel;m.Dinov2WithRegistersPreTrainedModel;m.DistilBertForMaskedLM;m.DistilBertForQuestionAnswering;m.DistilBertForSequenceClassification;m.DistilBertForTokenClassification;m.DistilBertModel;m.DistilBertPreTrainedModel;m.DistilBertTokenizer;m.DocumentQuestionAnsweringPipeline;m.DonutFeatureExtractor;m.DonutImageProcessor;m.DonutSwinModel;m.DonutSwinPreTrainedModel;m.EfficientNetForImageClassification;m.EfficientNetImageProcessor;m.EfficientNetModel;m.EfficientNetPreTrainedModel;m.ElectraForMaskedLM;m.ElectraForQuestionAnswering;m.ElectraForSequenceClassification;m.ElectraForTokenClassification;m.ElectraModel;m.ElectraPreTrainedModel;m.ElectraTokenizer;m.EncodecFeatureExtractor;m.EosTokenCriteria;m.EsmForMaskedLM;m.EsmForSequenceClassification;m.EsmForTokenClassification;m.EsmModel;m.EsmPreTrainedModel;m.EsmTokenizer;m.ExaoneForCausalLM;m.ExaoneModel;m.ExaonePreTrainedModel;m.FFT;m.FalconForCausalLM;m.FalconModel;m.FalconPreTrainedModel;m.FalconTokenizer;m.FastViTForImageClassification;m.FastViTModel;m.FastViTPreTrainedModel;m.FeatureExtractionPipeline;m.FeatureExtractor;m.FillMaskPipeline;m.Florence2ForConditionalGeneration;m.Florence2PreTrainedModel;m.Florence2Processor;m.ForcedBOSTokenLogitsProcessor;m.ForcedEOSTokenLogitsProcessor;m.GLPNFeatureExtractor;m.GLPNForDepthEstimation;m.GLPNModel;m.GLPNPreTrainedModel;m.GPT2LMHeadModel;m.GPT2Model;m.GPT2PreTrainedModel;m.GPT2Tokenizer;m.GPTBigCodeForCausalLM;m.GPTBigCodeModel;m.GPTBigCodePreTrainedModel;m.GPTJForCausalLM;m.GPTJModel;m.GPTJPreTrainedModel;m.GPTNeoForCausalLM;m.GPTNeoModel;m.GPTNeoPreTrainedModel;m.GPTNeoXForCausalLM;m.GPTNeoXModel;m.GPTNeoXPreTrainedModel;m.GPTNeoXTokenizer;m.Gemma2ForCausalLM;m.Gemma2Model;m.Gemma2PreTrainedModel;m.Gemma3ForCausalLM;m.Gemma3Model;m.Gemma3PreTrainedModel;m.Gemma3nAudioFeatureExtractor;m.Gemma3nForConditionalGeneration;m.Gemma3nPreTrainedModel;m.Gemma3nProcessor;m.GemmaForCausalLM;m.GemmaModel;m.GemmaPreTrainedModel;m.GemmaTokenizer;m.GlmForCausalLM;m.GlmModel;m.GlmPreTrainedModel;m.GraniteForCausalLM;m.GraniteModel;m.GranitePreTrainedModel;m.Grok1Tokenizer;m.GroundingDinoForObjectDetection;m.GroundingDinoImageProcessor;m.GroundingDinoPreTrainedModel;m.GroundingDinoProcessor;m.GroupViTModel;m.GroupViTPreTrainedModel;m.HeliumForCausalLM;m.HeliumModel;m.HeliumPreTrainedModel;m.HerbertTokenizer;m.HieraForImageClassification;m.HieraModel;m.HieraPreTrainedModel;m.HubertForCTC;m.HubertForSequenceClassification;m.HubertModel;m.HubertPreTrainedModel;m.IJepaForImageClassification;m.IJepaModel;m.IJepaPreTrainedModel;m.Idefics3ForConditionalGeneration;m.Idefics3ImageProcessor;m.Idefics3PreTrainedModel;m.Idefics3Processor;m.ImageClassificationPipeline;m.ImageFeatureExtractionPipeline;m.ImageFeatureExtractor;m.ImageMattingOutput;m.ImageProcessor;m.ImageSegmentationPipeline;m.ImageToImagePipeline;m.ImageToTextPipeline;m.InterruptableStoppingCriteria;m.JAISLMHeadModel;m.JAISModel;m.JAISPreTrainedModel;m.JinaCLIPImageProcessor;m.JinaCLIPModel;m.JinaCLIPPreTrainedModel;m.JinaCLIPProcessor;m.JinaCLIPTextModel;m.JinaCLIPVisionModel;m.LiteWhisperForConditionalGeneration;m.LlamaForCausalLM;m.LlamaModel;m.LlamaPreTrainedModel;m.LlamaTokenizer;m.LlavaForConditionalGeneration;m.LlavaOnevisionForConditionalGeneration;m.LlavaOnevisionImageProcessor;m.LlavaPreTrainedModel;m.LlavaProcessor;m.LlavaQwen2ForCausalLM;m.LogitsProcessor;m.LogitsProcessorList;m.LogitsWarper;m.LongT5ForConditionalGeneration;m.LongT5Model;m.LongT5PreTrainedModel;m.M2M100ForConditionalGeneration;m.M2M100Model;m.M2M100PreTrainedModel;m.M2M100Tokenizer;m.MBart50Tokenizer;m.MBartForCausalLM;m.MBartForConditionalGeneration;m.MBartForSequenceClassification;m.MBartModel;m.MBartPreTrainedModel;m.MBartTokenizer;m.MPNetForMaskedLM;m.MPNetForQuestionAnswering;m.MPNetForSequenceClassification;m.MPNetForTokenClassification;m.MPNetModel;m.MPNetPreTrainedModel;m.MPNetTokenizer;m.MT5ForConditionalGeneration;m.MT5Model;m.MT5PreTrainedModel;m.MarianMTModel;m.MarianModel;m.MarianPreTrainedModel;m.MarianTokenizer;m.Mask2FormerImageProcessor;m.MaskFormerFeatureExtractor;m.MaskFormerForInstanceSegmentation;m.MaskFormerImageProcessor;m.MaskFormerModel;m.MaskFormerPreTrainedModel;m.MaskedLMOutput;m.MaxLengthCriteria;m.Metric3DForDepthEstimation;m.Metric3DPreTrainedModel;m.Metric3Dv2ForDepthEstimation;m.Metric3Dv2PreTrainedModel;m.MgpstrForSceneTextRecognition;m.MgpstrModelOutput;m.MgpstrPreTrainedModel;m.MgpstrProcessor;m.MgpstrTokenizer;m.MimiDecoderModel;m.MimiDecoderOutput;m.MimiEncoderModel;m.MimiEncoderOutput;m.MimiModel;m.MimiPreTrainedModel;m.MinLengthLogitsProcessor;m.MinNewTokensLengthLogitsProcessor;m.MistralForCausalLM;m.MistralModel;m.MistralPreTrainedModel;m.MobileBertForMaskedLM;m.MobileBertForQuestionAnswering;m.MobileBertForSequenceClassification;m.MobileBertModel;m.MobileBertPreTrainedModel;m.MobileBertTokenizer;m.MobileLLMForCausalLM;m.MobileLLMModel;m.MobileLLMPreTrainedModel;m.MobileNetV1FeatureExtractor;m.MobileNetV1ForImageClassification;m.MobileNetV1ForSemanticSegmentation;m.MobileNetV1ImageProcessor;m.MobileNetV1Model;m.MobileNetV1PreTrainedModel;m.MobileNetV2FeatureExtractor;m.MobileNetV2ForImageClassification;m.MobileNetV2ForSemanticSegmentation;m.MobileNetV2ImageProcessor;m.MobileNetV2Model;m.MobileNetV2PreTrainedModel;m.MobileNetV3FeatureExtractor;m.MobileNetV3ForImageClassification;m.MobileNetV3ForSemanticSegmentation;m.MobileNetV3ImageProcessor;m.MobileNetV3Model;m.MobileNetV3PreTrainedModel;m.MobileNetV4FeatureExtractor;m.MobileNetV4ForImageClassification;m.MobileNetV4ForSemanticSegmentation;m.MobileNetV4ImageProcessor;m.MobileNetV4Model;m.MobileNetV4PreTrainedModel;m.MobileViTFeatureExtractor;m.MobileViTForImageClassification;m.MobileViTImageProcessor;m.MobileViTModel;m.MobileViTPreTrainedModel;m.MobileViTV2ForImageClassification;m.MobileViTV2Model;m.MobileViTV2PreTrainedModel;m.ModelOutput;m.ModernBertForMaskedLM;m.ModernBertForSequenceClassification;m.ModernBertForTokenClassification;m.ModernBertModel;m.ModernBertPreTrainedModel;m.Moondream1ForConditionalGeneration;m.MoonshineFeatureExtractor;m.MoonshineForConditionalGeneration;m.MoonshineModel;m.MoonshinePreTrainedModel;m.MoonshineProcessor;m.MptForCausalLM;m.MptModel;m.MptPreTrainedModel;m.MultiModalityCausalLM;m.MultiModalityPreTrainedModel;m.MusicgenForCausalLM;m.MusicgenForConditionalGeneration;m.MusicgenModel;m.MusicgenPreTrainedModel;m.NllbTokenizer;m.NoBadWordsLogitsProcessor;m.NoRepeatNGramLogitsProcessor;m.NomicBertModel;m.NomicBertPreTrainedModel;m.NougatImageProcessor;m.NougatTokenizer;m.OPTForCausalLM;m.OPTModel;m.OPTPreTrainedModel;m.ObjectDetectionPipeline;m.Olmo2ForCausalLM;m.Olmo2Model;m.Olmo2PreTrainedModel;m.OlmoForCausalLM;m.OlmoModel;m.OlmoPreTrainedModel;m.OpenELMForCausalLM;m.OpenELMModel;m.OpenELMPreTrainedModel;m.OwlViTFeatureExtractor;m.OwlViTForObjectDetection;m.OwlViTImageProcessor;m.OwlViTModel;m.OwlViTPreTrainedModel;m.OwlViTProcessor;m.Owlv2ForObjectDetection;m.Owlv2ImageProcessor;m.Owlv2Model;m.Owlv2PreTrainedModel;m.PaliGemmaForConditionalGeneration;m.PaliGemmaPreTrainedModel;m.PaliGemmaProcessor;m.PatchTSMixerForPrediction;m.PatchTSMixerModel;m.PatchTSMixerPreTrainedModel;m.PatchTSTForPrediction;m.PatchTSTModel;m.PatchTSTPreTrainedModel;m.Phi3ForCausalLM;m.Phi3Model;m.Phi3PreTrainedModel;m.Phi3VForCausalLM;m.Phi3VImageProcessor;m.Phi3VPreTrainedModel;m.Phi3VProcessor;m.PhiForCausalLM;m.PhiModel;m.PhiPreTrainedModel;m.Pipeline;m.PreTrainedModel;m.PreTrainedTokenizer;m.PretrainedConfig;m.PretrainedMixin;m.Processor;m.PvtForImageClassification;m.PvtImageProcessor;m.PvtModel;m.PvtPreTrainedModel;m.PyAnnoteFeatureExtractor;m.PyAnnoteForAudioFrameClassification;m.PyAnnoteModel;m.PyAnnotePreTrainedModel;m.PyAnnoteProcessor;m.QuestionAnsweringModelOutput;m.QuestionAnsweringPipeline;m.Qwen2ForCausalLM;m.Qwen2Model;m.Qwen2PreTrainedModel;m.Qwen2Tokenizer;m.Qwen2VLForConditionalGeneration;m.Qwen2VLImageProcessor;m.Qwen2VLPreTrainedModel;m.Qwen2VLProcessor;m.Qwen3ForCausalLM;m.Qwen3Model;m.Qwen3PreTrainedModel;m.RFDetrForObjectDetection;m.RFDetrModel;m.RFDetrObjectDetectionOutput;m.RFDetrPreTrainedModel;m.RTDetrForObjectDetection;m.RTDetrImageProcessor;m.RTDetrModel;m.RTDetrObjectDetectionOutput;m.RTDetrPreTrainedModel;m.RTDetrV2ForObjectDetection;m.RTDetrV2Model;m.RTDetrV2ObjectDetectionOutput;m.RTDetrV2PreTrainedModel;m.RawAudio;m.RawImage;m.RawVideo;m.RawVideoFrame;m.RepetitionPenaltyLogitsProcessor;m.ResNetForImageClassification;m.ResNetModel;m.ResNetPreTrainedModel;m.RoFormerForMaskedLM;m.RoFormerForQuestionAnswering;m.RoFormerForSequenceClassification;m.RoFormerForTokenClassification;m.RoFormerModel;m.RoFormerPreTrainedModel;m.RoFormerTokenizer;m.RobertaForMaskedLM;m.RobertaForQuestionAnswering;m.RobertaForSequenceClassification;m.RobertaForTokenClassification;m.RobertaModel;m.RobertaPreTrainedModel;m.RobertaTokenizer;m.SamImageProcessor;m.SamImageSegmentationOutput;m.SamModel;m.SamPreTrainedModel;m.SamProcessor;m.SapiensForDepthEstimation;m.SapiensForNormalEstimation;m.SapiensForSemanticSegmentation;m.SapiensPreTrainedModel;m.SeamlessM4TFeatureExtractor;m.SegformerFeatureExtractor;m.SegformerForImageClassification;m.SegformerForSemanticSegmentation;m.SegformerImageProcessor;m.SegformerModel;m.SegformerPreTrainedModel;m.Seq2SeqLMOutput;m.SequenceClassifierOutput;m.SiglipImageProcessor;m.SiglipModel;m.SiglipPreTrainedModel;m.SiglipTextModel;m.SiglipTokenizer;m.SiglipVisionModel;m.SmolVLMForConditionalGeneration;m.SmolVLMImageProcessor;m.SmolVLMProcessor;m.SnacDecoderModel;m.SnacEncoderModel;m.SnacFeatureExtractor;m.SnacModel;m.SnacPreTrainedModel;m.SpeechT5FeatureExtractor;m.SpeechT5ForSpeechToText;m.SpeechT5ForTextToSpeech;m.SpeechT5HifiGan;m.SpeechT5Model;m.SpeechT5PreTrainedModel;m.SpeechT5Processor;m.SpeechT5Tokenizer;m.SqueezeBertForMaskedLM;m.SqueezeBertForQuestionAnswering;m.SqueezeBertForSequenceClassification;m.SqueezeBertModel;m.SqueezeBertPreTrainedModel;m.SqueezeBertTokenizer;m.StableLmForCausalLM;m.StableLmModel;m.StableLmPreTrainedModel;m.Starcoder2ForCausalLM;m.Starcoder2Model;m.Starcoder2PreTrainedModel;m.StoppingCriteria;m.StoppingCriteriaList;m.StyleTextToSpeech2Model;m.StyleTextToSpeech2PreTrainedModel;m.SummarizationPipeline;m.SuppressTokensAtBeginLogitsProcessor;m.Swin2SRForImageSuperResolution;m.Swin2SRImageProcessor;m.Swin2SRModel;m.Swin2SRPreTrainedModel;m.SwinForImageClassification;m.SwinForSemanticSegmentation;m.SwinModel;m.SwinPreTrainedModel;m.T5ForConditionalGeneration;m.T5Model;m.T5PreTrainedModel;m.T5Tokenizer;m.TableTransformerForObjectDetection;m.TableTransformerModel;m.TableTransformerObjectDetectionOutput;m.TableTransformerPreTrainedModel;m.TemperatureLogitsWarper;m.Tensor;m.Text2TextGenerationPipeline;m.TextClassificationPipeline;m.TextGenerationPipeline;m.TextStreamer;m.TextToAudioPipeline;m.TokenClassificationPipeline;m.TokenClassifierOutput;m.TokenizerModel;m.TopKLogitsWarper;m.TopPLogitsWarper;m.TrOCRForCausalLM;m.TrOCRPreTrainedModel;m.TranslationPipeline;m.UltravoxModel;m.UltravoxPreTrainedModel;m.UltravoxProcessor;m.UniSpeechForCTC;m.UniSpeechForSequenceClassification;m.UniSpeechModel;m.UniSpeechPreTrainedModel;m.UniSpeechSatForAudioFrameClassification;m.UniSpeechSatForCTC;m.UniSpeechSatForSequenceClassification;m.UniSpeechSatModel;m.UniSpeechSatPreTrainedModel;m.VLChatProcessor;m.VLMImageProcessor;m.ViTFeatureExtractor;m.ViTForImageClassification;m.ViTImageProcessor;m.ViTMAEModel;m.ViTMAEPreTrainedModel;m.ViTMSNForImageClassification;m.ViTMSNModel;m.ViTMSNPreTrainedModel;m.ViTModel;m.ViTPreTrainedModel;m.VisionEncoderDecoderModel;m.VitMatteForImageMatting;m.VitMatteImageProcessor;m.VitMattePreTrainedModel;m.VitPoseForPoseEstimation;m.VitPoseImageProcessor;m.VitPosePreTrainedModel;m.VitsModel;m.VitsModelOutput;m.VitsPreTrainedModel;m.VitsTokenizer;m.Wav2Vec2BertForCTC;m.Wav2Vec2BertForSequenceClassification;m.Wav2Vec2BertModel;m.Wav2Vec2BertPreTrainedModel;m.Wav2Vec2CTCTokenizer;m.Wav2Vec2FeatureExtractor;m.Wav2Vec2ForAudioFrameClassification;m.Wav2Vec2ForCTC;m.Wav2Vec2ForSequenceClassification;m.Wav2Vec2Model;m.Wav2Vec2PreTrainedModel;m.Wav2Vec2Processor;m.Wav2Vec2ProcessorWithLM;m.WavLMForAudioFrameClassification;m.WavLMForCTC;m.WavLMForSequenceClassification;m.WavLMForXVector;m.WavLMModel;m.WavLMPreTrainedModel;m.WeSpeakerFeatureExtractor;m.WeSpeakerResNetModel;m.WeSpeakerResNetPreTrainedModel;m.WhisperFeatureExtractor;m.WhisperForConditionalGeneration;m.WhisperModel;m.WhisperPreTrainedModel;m.WhisperProcessor;m.WhisperTextStreamer;m.WhisperTimeStampLogitsProcessor;m.WhisperTokenizer;m.XLMForQuestionAnswering;m.XLMForSequenceClassification;m.XLMForTokenClassification;m.XLMModel;m.XLMPreTrainedModel;m.XLMRobertaForMaskedLM;m.XLMRobertaForQuestionAnswering;m.XLMRobertaForSequenceClassification;m.XLMRobertaForTokenClassification;m.XLMRobertaModel;m.XLMRobertaPreTrainedModel;m.XLMRobertaTokenizer;m.XLMTokenizer;m.XLMWithLMHeadModel;m.XVectorOutput;m.YolosFeatureExtractor;m.YolosForObjectDetection;m.YolosImageProcessor;m.YolosModel;m.YolosObjectDetectionOutput;m.YolosPreTrainedModel;m.ZeroShotAudioClassificationPipeline;m.ZeroShotClassificationPipeline;m.ZeroShotImageClassificationPipeline;m.ZeroShotObjectDetectionPipeline;m.bankers_round;m.cat;m.cos_sim;m.dot;m.dynamic_time_warping;m.env;m.full;m.full_like;m.getKeyValueShapes;m.hamming;m.hanning;m.interpolate;m.interpolate_4d;m.interpolate_data;m.is_chinese_char;m.layer_norm;m.load_image;m.load_video;m.log_softmax;m.magnitude;m.matmul;m.max;m.mean;m.mean_pooling;m.medianFilter;m.mel_filter_bank;m.min;m.ones;m.ones_like;m.permute;m.permute_data;var oT=m.pipeline;m.quantize_embeddings;m.rand;m.read_audio;m.rfft;m.round;m.slice;m.softmax;m.spectrogram;m.stack;m.std_mean;m.topk;m.window_function;m.zeros;m.zeros_like;const Zu=10,l0=(e=0)=>r=>`\x1B[${r+e}m`,u0=(e=0)=>r=>`\x1B[${38+e};5;${r}m`,c0=(e=0)=>(r,t,s)=>`\x1B[${38+e};2;${r};${t};${s}m`,ir={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],overline:[53,55],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],gray:[90,39],grey:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgGray:[100,49],bgGrey:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};Object.keys(ir.modifier);const aT=Object.keys(ir.color),lT=Object.keys(ir.bgColor);[...aT,...lT];function uT(){const e=new Map;for(const[r,t]of Object.entries(ir)){for(const[s,n]of Object.entries(t))ir[s]={open:`\x1B[${n[0]}m`,close:`\x1B[${n[1]}m`},t[s]=ir[s],e.set(n[0],n[1]);Object.defineProperty(ir,r,{value:t,enumerable:!1})}return Object.defineProperty(ir,"codes",{value:e,enumerable:!1}),ir.color.close="\x1B[39m",ir.bgColor.close="\x1B[49m",ir.color.ansi=l0(),ir.color.ansi256=u0(),ir.color.ansi16m=c0(),ir.bgColor.ansi=l0(Zu),ir.bgColor.ansi256=u0(Zu),ir.bgColor.ansi16m=c0(Zu),Object.defineProperties(ir,{rgbToAnsi256:{value(r,t,s){return r===t&&t===s?r<8?16:r>248?231:Math.round((r-8)/247*24)+232:16+36*Math.round(r/255*5)+6*Math.round(t/255*5)+Math.round(s/255*5)},enumerable:!1},hexToRgb:{value(r){const t=/[a-f\d]{6}|[a-f\d]{3}/i.exec(r.toString(16));if(!t)return[0,0,0];let[s]=t;s.length===3&&(s=[...s].map(i=>i+i).join(""));const n=Number.parseInt(s,16);return[n>>16&255,n>>8&255,n&255]},enumerable:!1},hexToAnsi256:{value:r=>ir.rgbToAnsi256(...ir.hexToRgb(r)),enumerable:!1},ansi256ToAnsi:{value(r){if(r<8)return 30+r;if(r<16)return 90+(r-8);let t,s,n;if(r>=232)t=((r-232)*10+8)/255,s=t,n=t;else{r-=16;const a=r%36;t=Math.floor(r/36)/5,s=Math.floor(a/6)/5,n=a%6/5}const i=Math.max(t,s,n)*2;if(i===0)return 30;let o=30+(Math.round(n)<<2|Math.round(s)<<1|Math.round(t));return i===2&&(o+=60),o},enumerable:!1},rgbToAnsi:{value:(r,t,s)=>ir.ansi256ToAnsi(ir.rgbToAnsi256(r,t,s)),enumerable:!1},hexToAnsi:{value:r=>ir.ansi256ToAnsi(ir.hexToAnsi256(r)),enumerable:!1}}),ir}const As=uT(),wa=(()=>{if(navigator.userAgentData){const e=navigator.userAgentData.brands.find(({brand:r})=>r==="Chromium");if(e&&e.version>93)return 3}return/\b(Chrome|Chromium)\//.test(navigator.userAgent)?1:0})(),d0=wa!==0&&{level:wa,hasBasic:!0,has256:wa>=2,has16m:wa>=3},cT={stdout:d0,stderr:d0};function dT(e,r,t){let s=e.indexOf(r);if(s===-1)return e;const n=r.length;let i=0,o="";do o+=e.slice(i,s)+r+t,i=s+n,s=e.indexOf(r,i);while(s!==-1);return o+=e.slice(i),o}function pT(e,r,t,s){let n=0,i="";do{const o=e[s-1]==="\r";i+=e.slice(n,o?s-1:s)+r+(o?`\r
`:`
`)+t,n=s+1,s=e.indexOf(`
`,n)}while(s!==-1);return i+=e.slice(n),i}const{stdout:p0,stderr:h0}=cT,Mc=Symbol("GENERATOR"),mi=Symbol("STYLER"),_o=Symbol("IS_EMPTY"),m0=["ansi","ansi","ansi256","ansi16m"],fi=Object.create(null),hT=(e,r={})=>{if(r.level&&!(Number.isInteger(r.level)&&r.level>=0&&r.level<=3))throw new Error("The `level` option should be an integer from 0 to 3");const t=p0?p0.level:0;e.level=r.level===void 0?t:r.level},mT=e=>{const r=(...t)=>t.join(" ");return hT(r,e),Object.setPrototypeOf(r,wo.prototype),r};function wo(e){return mT(e)}Object.setPrototypeOf(wo.prototype,Function.prototype);for(const[e,r]of Object.entries(As))fi[e]={get(){const t=Fa(this,vc(r.open,r.close,this[mi]),this[_o]);return Object.defineProperty(this,e,{value:t}),t}};fi.visible={get(){const e=Fa(this,this[mi],!0);return Object.defineProperty(this,"visible",{value:e}),e}};const bc=(e,r,t,...s)=>e==="rgb"?r==="ansi16m"?As[t].ansi16m(...s):r==="ansi256"?As[t].ansi256(As.rgbToAnsi256(...s)):As[t].ansi(As.rgbToAnsi(...s)):e==="hex"?bc("rgb",r,t,...As.hexToRgb(...s)):As[t][e](...s),fT=["rgb","hex","ansi256"];for(const e of fT){fi[e]={get(){const{level:t}=this;return function(...s){const n=vc(bc(e,m0[t],"color",...s),As.color.close,this[mi]);return Fa(this,n,this[_o])}}};const r="bg"+e[0].toUpperCase()+e.slice(1);fi[r]={get(){const{level:t}=this;return function(...s){const n=vc(bc(e,m0[t],"bgColor",...s),As.bgColor.close,this[mi]);return Fa(this,n,this[_o])}}}}const _T=Object.defineProperties(()=>{},{...fi,level:{enumerable:!0,get(){return this[Mc].level},set(e){this[Mc].level=e}}}),vc=(e,r,t)=>{let s,n;return t===void 0?(s=e,n=r):(s=t.openAll+e,n=r+t.closeAll),{open:e,close:r,openAll:s,closeAll:n,parent:t}},Fa=(e,r,t)=>{const s=(...n)=>gT(s,n.length===1?""+n[0]:n.join(" "));return Object.setPrototypeOf(s,_T),s[Mc]=e,s[mi]=r,s[_o]=t,s},gT=(e,r)=>{if(e.level<=0||!r)return e[_o]?"":r;let t=e[mi];if(t===void 0)return r;const{openAll:s,closeAll:n}=t;if(r.includes("\x1B"))for(;t!==void 0;)r=dT(r,t.close,t.open),t=t.parent;const i=r.indexOf(`
`);return i!==-1&&(r=pT(r,n,s,i)),s+r+n};Object.defineProperties(wo.prototype,fi);const Da=wo();wo({level:h0?h0.level:0});function wT(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var Ta={exports:{}},yT=Ta.exports,f0;function MT(){return f0||(f0=1,function(e,r){(function(t,s){e.exports=s()})(yT,function(){var t=1e3,s=6e4,n=36e5,i="millisecond",o="second",a="minute",l="hour",d="day",c="week",u="month",p="quarter",_="year",f="date",P="Invalid Date",A=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,g={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(te){var W=["th","st","nd","rd"],K=te%100;return"["+te+(W[(K-20)%10]||W[K]||W[0])+"]"}},I=function(te,W,K){var se=String(te);return!se||se.length>=W?te:""+Array(W+1-se.length).join(K)+te},v={s:I,z:function(te){var W=-te.utcOffset(),K=Math.abs(W),se=Math.floor(K/60),J=K%60;return(W<=0?"+":"-")+I(se,2,"0")+":"+I(J,2,"0")},m:function te(W,K){if(W.date()<K.date())return-te(K,W);var se=12*(K.year()-W.year())+(K.month()-W.month()),J=W.clone().add(se,u),ue=K-J<0,ce=W.clone().add(se+(ue?-1:1),u);return+(-(se+(K-J)/(ue?J-ce:ce-J))||0)},a:function(te){return te<0?Math.ceil(te)||0:Math.floor(te)},p:function(te){return{M:u,y:_,w:c,d,D:f,h:l,m:a,s:o,ms:i,Q:p}[te]||String(te||"").toLowerCase().replace(/s$/,"")},u:function(te){return te===void 0}},T="en",x={};x[T]=g;var b="$isDayjsObject",$=function(te){return te instanceof re||!(!te||!te[b])},j=function te(W,K,se){var J;if(!W)return T;if(typeof W=="string"){var ue=W.toLowerCase();x[ue]&&(J=ue),K&&(x[ue]=K,J=ue);var ce=W.split("-");if(!J&&ce.length>1)return te(ce[0])}else{var N=W.name;x[N]=W,J=N}return!se&&J&&(T=J),J||!se&&T},B=function(te,W){if($(te))return te.clone();var K=typeof W=="object"?W:{};return K.date=te,K.args=arguments,new re(K)},X=v;X.l=j,X.i=$,X.w=function(te,W){return B(te,{locale:W.$L,utc:W.$u,x:W.$x,$offset:W.$offset})};var re=function(){function te(K){this.$L=j(K.locale,null,!0),this.parse(K),this.$x=this.$x||K.x||{},this[b]=!0}var W=te.prototype;return W.parse=function(K){this.$d=function(se){var J=se.date,ue=se.utc;if(J===null)return new Date(NaN);if(X.u(J))return new Date;if(J instanceof Date)return new Date(J);if(typeof J=="string"&&!/Z$/i.test(J)){var ce=J.match(A);if(ce){var N=ce[2]-1||0,D=(ce[7]||"0").substring(0,3);return ue?new Date(Date.UTC(ce[1],N,ce[3]||1,ce[4]||0,ce[5]||0,ce[6]||0,D)):new Date(ce[1],N,ce[3]||1,ce[4]||0,ce[5]||0,ce[6]||0,D)}}return new Date(J)}(K),this.init()},W.init=function(){var K=this.$d;this.$y=K.getFullYear(),this.$M=K.getMonth(),this.$D=K.getDate(),this.$W=K.getDay(),this.$H=K.getHours(),this.$m=K.getMinutes(),this.$s=K.getSeconds(),this.$ms=K.getMilliseconds()},W.$utils=function(){return X},W.isValid=function(){return this.$d.toString()!==P},W.isSame=function(K,se){var J=B(K);return this.startOf(se)<=J&&J<=this.endOf(se)},W.isAfter=function(K,se){return B(K)<this.startOf(se)},W.isBefore=function(K,se){return this.endOf(se)<B(K)},W.$g=function(K,se,J){return X.u(K)?this[se]:this.set(J,K)},W.unix=function(){return Math.floor(this.valueOf()/1e3)},W.valueOf=function(){return this.$d.getTime()},W.startOf=function(K,se){var J=this,ue=!!X.u(se)||se,ce=X.p(K),N=function(Ve,me){var H=X.w(J.$u?Date.UTC(J.$y,me,Ve):new Date(J.$y,me,Ve),J);return ue?H:H.endOf(d)},D=function(Ve,me){return X.w(J.toDate()[Ve].apply(J.toDate("s"),(ue?[0,0,0,0]:[23,59,59,999]).slice(me)),J)},Q=this.$W,U=this.$M,ae=this.$D,Ae="set"+(this.$u?"UTC":"");switch(ce){case _:return ue?N(1,0):N(31,11);case u:return ue?N(1,U):N(0,U+1);case c:var Ee=this.$locale().weekStart||0,Le=(Q<Ee?Q+7:Q)-Ee;return N(ue?ae-Le:ae+(6-Le),U);case d:case f:return D(Ae+"Hours",0);case l:return D(Ae+"Minutes",1);case a:return D(Ae+"Seconds",2);case o:return D(Ae+"Milliseconds",3);default:return this.clone()}},W.endOf=function(K){return this.startOf(K,!1)},W.$set=function(K,se){var J,ue=X.p(K),ce="set"+(this.$u?"UTC":""),N=(J={},J[d]=ce+"Date",J[f]=ce+"Date",J[u]=ce+"Month",J[_]=ce+"FullYear",J[l]=ce+"Hours",J[a]=ce+"Minutes",J[o]=ce+"Seconds",J[i]=ce+"Milliseconds",J)[ue],D=ue===d?this.$D+(se-this.$W):se;if(ue===u||ue===_){var Q=this.clone().set(f,1);Q.$d[N](D),Q.init(),this.$d=Q.set(f,Math.min(this.$D,Q.daysInMonth())).$d}else N&&this.$d[N](D);return this.init(),this},W.set=function(K,se){return this.clone().$set(K,se)},W.get=function(K){return this[X.p(K)]()},W.add=function(K,se){var J,ue=this;K=Number(K);var ce=X.p(se),N=function(U){var ae=B(ue);return X.w(ae.date(ae.date()+Math.round(U*K)),ue)};if(ce===u)return this.set(u,this.$M+K);if(ce===_)return this.set(_,this.$y+K);if(ce===d)return N(1);if(ce===c)return N(7);var D=(J={},J[a]=s,J[l]=n,J[o]=t,J)[ce]||1,Q=this.$d.getTime()+K*D;return X.w(Q,this)},W.subtract=function(K,se){return this.add(-1*K,se)},W.format=function(K){var se=this,J=this.$locale();if(!this.isValid())return J.invalidDate||P;var ue=K||"YYYY-MM-DDTHH:mm:ssZ",ce=X.z(this),N=this.$H,D=this.$m,Q=this.$M,U=J.weekdays,ae=J.months,Ae=J.meridiem,Ee=function(me,H,fe,Z){return me&&(me[H]||me(se,ue))||fe[H].slice(0,Z)},Le=function(me){return X.s(N%12||12,me,"0")},Ve=Ae||function(me,H,fe){var Z=me<12?"AM":"PM";return fe?Z.toLowerCase():Z};return ue.replace(y,function(me,H){return H||function(fe){switch(fe){case"YY":return String(se.$y).slice(-2);case"YYYY":return X.s(se.$y,4,"0");case"M":return Q+1;case"MM":return X.s(Q+1,2,"0");case"MMM":return Ee(J.monthsShort,Q,ae,3);case"MMMM":return Ee(ae,Q);case"D":return se.$D;case"DD":return X.s(se.$D,2,"0");case"d":return String(se.$W);case"dd":return Ee(J.weekdaysMin,se.$W,U,2);case"ddd":return Ee(J.weekdaysShort,se.$W,U,3);case"dddd":return U[se.$W];case"H":return String(N);case"HH":return X.s(N,2,"0");case"h":return Le(1);case"hh":return Le(2);case"a":return Ve(N,D,!0);case"A":return Ve(N,D,!1);case"m":return String(D);case"mm":return X.s(D,2,"0");case"s":return String(se.$s);case"ss":return X.s(se.$s,2,"0");case"SSS":return X.s(se.$ms,3,"0");case"Z":return ce}return null}(me)||ce.replace(":","")})},W.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},W.diff=function(K,se,J){var ue,ce=this,N=X.p(se),D=B(K),Q=(D.utcOffset()-this.utcOffset())*s,U=this-D,ae=function(){return X.m(ce,D)};switch(N){case _:ue=ae()/12;break;case u:ue=ae();break;case p:ue=ae()/3;break;case c:ue=(U-Q)/6048e5;break;case d:ue=(U-Q)/864e5;break;case l:ue=U/n;break;case a:ue=U/s;break;case o:ue=U/t;break;default:ue=U}return J?ue:X.a(ue)},W.daysInMonth=function(){return this.endOf(u).$D},W.$locale=function(){return x[this.$L]},W.locale=function(K,se){if(!K)return this.$L;var J=this.clone(),ue=j(K,se,!0);return ue&&(J.$L=ue),J},W.clone=function(){return X.w(this.$d,this)},W.toDate=function(){return new Date(this.valueOf())},W.toJSON=function(){return this.isValid()?this.toISOString():null},W.toISOString=function(){return this.$d.toISOString()},W.toString=function(){return this.$d.toUTCString()},te}(),z=re.prototype;return B.prototype=z,[["$ms",i],["$s",o],["$m",a],["$H",l],["$W",d],["$M",u],["$y",_],["$D",f]].forEach(function(te){z[te[1]]=function(W){return this.$g(W,te[0],te[1])}}),B.extend=function(te,W){return te.$i||(te(W,re,B),te.$i=!0),B},B.locale=j,B.isDayjs=$,B.unix=function(te){return B(1e3*te)},B.en=x[T],B.Ls=x,B.p={},B})}(Ta)),Ta.exports}var bT=MT(),vT=wT(bT);const xT={BASE_URL:"/NoLLMChat/",DEV:!1,MODE:"production",PROD:!0,SSR:!1,VITE_BASE_URL:"/NoLLMChat/",VITE_ROUTE_MODE:"hash"},lv=(typeof xT<"u",typeof window<"u"&&typeof window.localStorage<"u"?window.localStorage.getItem("__DEBUG__")==="true":!1),TT=lv?console.log:void 0,ET=lv?console.debug:void 0,PT=console.warn,CT=console.error,ST=console.group,$T=console.groupEnd,La=(e,r,t,...s)=>{const[n,...i]=s,o=typeof n=="string";ST(r(`${e} ${o?n:""}[${vT().format("DD-MM-YYYY HH:mm:ss")}]`)),t?.(...o?i:s),$T()},IT=(...e)=>{La("🔵 INFO:",Da.blueBright,TT,...e)},kT=(...e)=>{La("🔴 ERROR:",Da.redBright,CT,...e)},AT=(...e)=>{La("🔶 WARN:",Da.yellowBright,PT,...e)},Ea=(...e)=>{La("⚪ DEBUG:",Da.greenBright,ET,...e)},po=new Map,uv="_WORKER_INIT_";function go(e,r,t){if(!po.get(e)&&e!==uv){AT("[No process found for message]",e);return}self.postMessage({messageId:e,type:r,payload:t}),Ea("[Send Worker to Main Thread]",{id:e,type:r,payload:t})}function FT(e){return async r=>{try{const t=await e(r);go(r.messageId,"complete",t)}catch(t){kT("Handle Worker Message",t,{payload:r}),go(r.messageId,"error",{error:t instanceof Error?t.message:"An error occurred",error_code:"UNKNOWN_ERROR"})}finally{po.delete(r.messageId)}}}function OT(e,r){self.addEventListener("message",async t=>{po.set(t.data.messageId,Promise.race([FT(e)(t.data),new Promise(s=>setTimeout(()=>s(!0),12e4)).then(()=>{po.has(t.data.messageId)&&(go(t.data.messageId,"error",{error:"Operation timed out",error_code:"TIMEOUT_ERROR"}),po.delete(t.data.messageId))})])),go(t.data.messageId,"started","Started processing")})}async function DT(e){go(uv,"complete","Worker initialized")}let io;async function LT(e){switch(Ea("[Database worker received message]",e,e.type),e.type){case"load":{const[r,t]=e.payload;return Ea("Loading model:",r,t),(!io||io.model.name!==r)&&(io=await oT("feature-extraction",r,t)),!0}case"embedding":{if(!io)throw new Error("Pipe is not ready yet.");Ea("Embedding:",e.payload);const[r,t]=e.payload;return(await io(r,t)).tolist()}default:throw new Error("Invalid operation")}}OT(LT);IT("Embedding worker initialized");DT();
//# sourceMappingURL=embedding.worker-3Fs0X7iO.js.map
