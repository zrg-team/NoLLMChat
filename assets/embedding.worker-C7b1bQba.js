function C_(Ue){return Ue&&Ue.__esModule&&Object.prototype.hasOwnProperty.call(Ue,"default")?Ue.default:Ue}var Rf={exports:{}},sn=Rf.exports={},ui,di;function Tp(){throw new Error("setTimeout has not been defined")}function Ep(){throw new Error("clearTimeout has not been defined")}(function(){try{typeof setTimeout=="function"?ui=setTimeout:ui=Tp}catch{ui=Tp}try{typeof clearTimeout=="function"?di=clearTimeout:di=Ep}catch{di=Ep}})();function Nf(Ue){if(ui===setTimeout)return setTimeout(Ue,0);if((ui===Tp||!ui)&&setTimeout)return ui=setTimeout,setTimeout(Ue,0);try{return ui(Ue,0)}catch{try{return ui.call(null,Ue,0)}catch{return ui.call(this,Ue,0)}}}function $_(Ue){if(di===clearTimeout)return clearTimeout(Ue);if((di===Ep||!di)&&clearTimeout)return di=clearTimeout,clearTimeout(Ue);try{return di(Ue)}catch{try{return di.call(null,Ue)}catch{return di.call(this,Ue)}}}var xi=[],ra=!1,vs,Sc=-1;function S_(){!ra||!vs||(ra=!1,vs.length?xi=vs.concat(xi):Sc=-1,xi.length&&jf())}function jf(){if(!ra){var Ue=Nf(S_);ra=!0;for(var Me=xi.length;Me;){for(vs=xi,xi=[];++Sc<Me;)vs&&vs[Sc].run();Sc=-1,Me=xi.length}vs=null,ra=!1,$_(Ue)}}sn.nextTick=function(Ue){var Me=new Array(arguments.length-1);if(arguments.length>1)for(var N=1;N<arguments.length;N++)Me[N-1]=arguments[N];xi.push(new Uf(Ue,Me)),xi.length===1&&!ra&&Nf(jf)};function Uf(Ue,Me){this.fun=Ue,this.array=Me}Uf.prototype.run=function(){this.fun.apply(null,this.array)};sn.title="browser";sn.browser=!0;sn.env={};sn.argv=[];sn.version="";sn.versions={};function Ti(){}sn.on=Ti;sn.addListener=Ti;sn.once=Ti;sn.off=Ti;sn.removeListener=Ti;sn.removeAllListeners=Ti;sn.emit=Ti;sn.prependListener=Ti;sn.prependOnceListener=Ti;sn.listeners=function(Ue){return[]};sn.binding=function(Ue){throw new Error("process.binding is not supported")};sn.cwd=function(){return"/"};sn.chdir=function(Ue){throw new Error("process.chdir is not supported")};sn.umask=function(){return 0};var k_=Rf.exports;const Ms=C_(k_);function P_(Ue){return Ue&&Ue.__esModule&&Object.prototype.hasOwnProperty.call(Ue,"default")?Ue.default:Ue}var Vf={};(function(Ue){Object.defineProperties(Ue,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});var Me={},N={};N.byteLength=W,N.toByteArray=ee,N.fromByteArray=xe;for(var D=[],ge=[],$e=typeof Uint8Array<"u"?Uint8Array:Array,Oe="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Pe=0,Q=Oe.length;Pe<Q;++Pe)D[Pe]=Oe[Pe],ge[Oe.charCodeAt(Pe)]=Pe;ge[45]=62,ge[95]=63;function L(le){var U=le.length;if(U%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var H=le.indexOf("=");H===-1&&(H=U);var R=H===U?0:4-H%4;return[H,R]}function W(le){var U=L(le),H=U[0],R=U[1];return(H+R)*3/4-R}function q(le,U,H){return(U+H)*3/4-H}function ee(le){var U,H=L(le),R=H[0],P=H[1],O=new $e(q(le,R,P)),T=0,fe=P>0?R-4:R,ye;for(ye=0;ye<fe;ye+=4)U=ge[le.charCodeAt(ye)]<<18|ge[le.charCodeAt(ye+1)]<<12|ge[le.charCodeAt(ye+2)]<<6|ge[le.charCodeAt(ye+3)],O[T++]=U>>16&255,O[T++]=U>>8&255,O[T++]=U&255;return P===2&&(U=ge[le.charCodeAt(ye)]<<2|ge[le.charCodeAt(ye+1)]>>4,O[T++]=U&255),P===1&&(U=ge[le.charCodeAt(ye)]<<10|ge[le.charCodeAt(ye+1)]<<4|ge[le.charCodeAt(ye+2)]>>2,O[T++]=U>>8&255,O[T++]=U&255),O}function de(le){return D[le>>18&63]+D[le>>12&63]+D[le>>6&63]+D[le&63]}function Ce(le,U,H){for(var R,P=[],O=U;O<H;O+=3)R=(le[O]<<16&16711680)+(le[O+1]<<8&65280)+(le[O+2]&255),P.push(de(R));return P.join("")}function xe(le){for(var U,H=le.length,R=H%3,P=[],O=16383,T=0,fe=H-R;T<fe;T+=O)P.push(Ce(le,T,T+O>fe?fe:T+O));return R===1?(U=le[H-1],P.push(D[U>>2]+D[U<<4&63]+"==")):R===2&&(U=(le[H-2]<<8)+le[H-1],P.push(D[U>>10]+D[U>>4&63]+D[U<<2&63]+"=")),P.join("")}var j={};/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */j.read=function(le,U,H,R,P){var O,T,fe=P*8-R-1,ye=(1<<fe)-1,Ee=ye>>1,K=-7,Ae=H?P-1:0,ot=H?-1:1,Qe=le[U+Ae];for(Ae+=ot,O=Qe&(1<<-K)-1,Qe>>=-K,K+=fe;K>0;O=O*256+le[U+Ae],Ae+=ot,K-=8);for(T=O&(1<<-K)-1,O>>=-K,K+=R;K>0;T=T*256+le[U+Ae],Ae+=ot,K-=8);if(O===0)O=1-Ee;else{if(O===ye)return T?NaN:(Qe?-1:1)*(1/0);T=T+Math.pow(2,R),O=O-Ee}return(Qe?-1:1)*T*Math.pow(2,O-R)},j.write=function(le,U,H,R,P,O){var T,fe,ye,Ee=O*8-P-1,K=(1<<Ee)-1,Ae=K>>1,ot=P===23?Math.pow(2,-24)-Math.pow(2,-77):0,Qe=R?0:O-1,ct=R?1:-1,Te=U<0||U===0&&1/U<0?1:0;for(U=Math.abs(U),isNaN(U)||U===1/0?(fe=isNaN(U)?1:0,T=K):(T=Math.floor(Math.log(U)/Math.LN2),U*(ye=Math.pow(2,-T))<1&&(T--,ye*=2),T+Ae>=1?U+=ot/ye:U+=ot*Math.pow(2,1-Ae),U*ye>=2&&(T++,ye/=2),T+Ae>=K?(fe=0,T=K):T+Ae>=1?(fe=(U*ye-1)*Math.pow(2,P),T=T+Ae):(fe=U*Math.pow(2,Ae-1)*Math.pow(2,P),T=0));P>=8;le[H+Qe]=fe&255,Qe+=ct,fe/=256,P-=8);for(T=T<<P|fe,Ee+=P;Ee>0;le[H+Qe]=T&255,Qe+=ct,T/=256,Ee-=8);le[H+Qe-ct]|=Te*128};/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */(function(le){const U=N,H=j,R=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;le.Buffer=K,le.SlowBuffer=ce,le.INSPECT_MAX_BYTES=50;const P=2147483647;le.kMaxLength=P;const{Uint8Array:O,ArrayBuffer:T,SharedArrayBuffer:fe}=globalThis;K.TYPED_ARRAY_SUPPORT=ye(),!K.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function ye(){try{const M=new O(1),d={foo:function(){return 42}};return Object.setPrototypeOf(d,O.prototype),Object.setPrototypeOf(M,d),M.foo()===42}catch{return!1}}Object.defineProperty(K.prototype,"parent",{enumerable:!0,get:function(){if(K.isBuffer(this))return this.buffer}}),Object.defineProperty(K.prototype,"offset",{enumerable:!0,get:function(){if(K.isBuffer(this))return this.byteOffset}});function Ee(M){if(M>P)throw new RangeError('The value "'+M+'" is invalid for option "size"');const d=new O(M);return Object.setPrototypeOf(d,K.prototype),d}function K(M,d,f){if(typeof M=="number"){if(typeof d=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return ct(M)}return Ae(M,d,f)}K.poolSize=8192;function Ae(M,d,f){if(typeof M=="string")return Te(M,d);if(T.isView(M))return be(M);if(M==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof M);if(Ne(M,T)||M&&Ne(M.buffer,T)||typeof fe<"u"&&(Ne(M,fe)||M&&Ne(M.buffer,fe)))return ke(M,d,f);if(typeof M=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');const I=M.valueOf&&M.valueOf();if(I!=null&&I!==M)return K.from(I,d,f);const B=He(M);if(B)return B;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof M[Symbol.toPrimitive]=="function")return K.from(M[Symbol.toPrimitive]("string"),d,f);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof M)}K.from=function(M,d,f){return Ae(M,d,f)},Object.setPrototypeOf(K.prototype,O.prototype),Object.setPrototypeOf(K,O);function ot(M){if(typeof M!="number")throw new TypeError('"size" argument must be of type number');if(M<0)throw new RangeError('The value "'+M+'" is invalid for option "size"')}function Qe(M,d,f){return ot(M),M<=0?Ee(M):d!==void 0?typeof f=="string"?Ee(M).fill(d,f):Ee(M).fill(d):Ee(M)}K.alloc=function(M,d,f){return Qe(M,d,f)};function ct(M){return ot(M),Ee(M<0?0:pt(M)|0)}K.allocUnsafe=function(M){return ct(M)},K.allocUnsafeSlow=function(M){return ct(M)};function Te(M,d){if((typeof d!="string"||d==="")&&(d="utf8"),!K.isEncoding(d))throw new TypeError("Unknown encoding: "+d);const f=tt(M,d)|0;let I=Ee(f);const B=I.write(M,d);return B!==f&&(I=I.slice(0,B)),I}function X(M){const d=M.length<0?0:pt(M.length)|0,f=Ee(d);for(let I=0;I<d;I+=1)f[I]=M[I]&255;return f}function be(M){if(Ne(M,O)){const d=new O(M);return ke(d.buffer,d.byteOffset,d.byteLength)}return X(M)}function ke(M,d,f){if(d<0||M.byteLength<d)throw new RangeError('"offset" is outside of buffer bounds');if(M.byteLength<d+(f||0))throw new RangeError('"length" is outside of buffer bounds');let I;return d===void 0&&f===void 0?I=new O(M):f===void 0?I=new O(M,d):I=new O(M,d,f),Object.setPrototypeOf(I,K.prototype),I}function He(M){if(K.isBuffer(M)){const d=pt(M.length)|0,f=Ee(d);return f.length===0||M.copy(f,0,0,d),f}if(M.length!==void 0)return typeof M.length!="number"||at(M.length)?Ee(0):X(M);if(M.type==="Buffer"&&Array.isArray(M.data))return X(M.data)}function pt(M){if(M>=P)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+P.toString(16)+" bytes");return M|0}function ce(M){return+M!=M&&(M=0),K.alloc(+M)}K.isBuffer=function(d){return d!=null&&d._isBuffer===!0&&d!==K.prototype},K.compare=function(d,f){if(Ne(d,O)&&(d=K.from(d,d.offset,d.byteLength)),Ne(f,O)&&(f=K.from(f,f.offset,f.byteLength)),!K.isBuffer(d)||!K.isBuffer(f))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(d===f)return 0;let I=d.length,B=f.length;for(let G=0,pe=Math.min(I,B);G<pe;++G)if(d[G]!==f[G]){I=d[G],B=f[G];break}return I<B?-1:B<I?1:0},K.isEncoding=function(d){switch(String(d).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},K.concat=function(d,f){if(!Array.isArray(d))throw new TypeError('"list" argument must be an Array of Buffers');if(d.length===0)return K.alloc(0);let I;if(f===void 0)for(f=0,I=0;I<d.length;++I)f+=d[I].length;const B=K.allocUnsafe(f);let G=0;for(I=0;I<d.length;++I){let pe=d[I];if(Ne(pe,O))G+pe.length>B.length?(K.isBuffer(pe)||(pe=K.from(pe)),pe.copy(B,G)):O.prototype.set.call(B,pe,G);else if(K.isBuffer(pe))pe.copy(B,G);else throw new TypeError('"list" argument must be an Array of Buffers');G+=pe.length}return B};function tt(M,d){if(K.isBuffer(M))return M.length;if(T.isView(M)||Ne(M,T))return M.byteLength;if(typeof M!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof M);const f=M.length,I=arguments.length>2&&arguments[2]===!0;if(!I&&f===0)return 0;let B=!1;for(;;)switch(d){case"ascii":case"latin1":case"binary":return f;case"utf8":case"utf-8":return ht(M).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return f*2;case"hex":return f>>>1;case"base64":return De(M).length;default:if(B)return I?-1:ht(M).length;d=(""+d).toLowerCase(),B=!0}}K.byteLength=tt;function gt(M,d,f){let I=!1;if((d===void 0||d<0)&&(d=0),d>this.length||((f===void 0||f>this.length)&&(f=this.length),f<=0)||(f>>>=0,d>>>=0,f<=d))return"";for(M||(M="utf8");;)switch(M){case"hex":return E(this,d,f);case"utf8":case"utf-8":return Ge(this,d,f);case"ascii":return Bt(this,d,f);case"latin1":case"binary":return Ct(this,d,f);case"base64":return Xe(this,d,f);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return re(this,d,f);default:if(I)throw new TypeError("Unknown encoding: "+M);M=(M+"").toLowerCase(),I=!0}}K.prototype._isBuffer=!0;function je(M,d,f){const I=M[d];M[d]=M[f],M[f]=I}K.prototype.swap16=function(){const d=this.length;if(d%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let f=0;f<d;f+=2)je(this,f,f+1);return this},K.prototype.swap32=function(){const d=this.length;if(d%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let f=0;f<d;f+=4)je(this,f,f+3),je(this,f+1,f+2);return this},K.prototype.swap64=function(){const d=this.length;if(d%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let f=0;f<d;f+=8)je(this,f,f+7),je(this,f+1,f+6),je(this,f+2,f+5),je(this,f+3,f+4);return this},K.prototype.toString=function(){const d=this.length;return d===0?"":arguments.length===0?Ge(this,0,d):gt.apply(this,arguments)},K.prototype.toLocaleString=K.prototype.toString,K.prototype.equals=function(d){if(!K.isBuffer(d))throw new TypeError("Argument must be a Buffer");return this===d?!0:K.compare(this,d)===0},K.prototype.inspect=function(){let d="";const f=le.INSPECT_MAX_BYTES;return d=this.toString("hex",0,f).replace(/(.{2})/g,"$1 ").trim(),this.length>f&&(d+=" ... "),"<Buffer "+d+">"},R&&(K.prototype[R]=K.prototype.inspect),K.prototype.compare=function(d,f,I,B,G){if(Ne(d,O)&&(d=K.from(d,d.offset,d.byteLength)),!K.isBuffer(d))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof d);if(f===void 0&&(f=0),I===void 0&&(I=d?d.length:0),B===void 0&&(B=0),G===void 0&&(G=this.length),f<0||I>d.length||B<0||G>this.length)throw new RangeError("out of range index");if(B>=G&&f>=I)return 0;if(B>=G)return-1;if(f>=I)return 1;if(f>>>=0,I>>>=0,B>>>=0,G>>>=0,this===d)return 0;let pe=G-B,Mt=I-f;const Nt=Math.min(pe,Mt),qt=this.slice(B,G),nr=d.slice(f,I);for(let jt=0;jt<Nt;++jt)if(qt[jt]!==nr[jt]){pe=qt[jt],Mt=nr[jt];break}return pe<Mt?-1:Mt<pe?1:0};function yt(M,d,f,I,B){if(M.length===0)return-1;if(typeof f=="string"?(I=f,f=0):f>2147483647?f=2147483647:f<-2147483648&&(f=-2147483648),f=+f,at(f)&&(f=B?0:M.length-1),f<0&&(f=M.length+f),f>=M.length){if(B)return-1;f=M.length-1}else if(f<0)if(B)f=0;else return-1;if(typeof d=="string"&&(d=K.from(d,I)),K.isBuffer(d))return d.length===0?-1:xt(M,d,f,I,B);if(typeof d=="number")return d=d&255,typeof O.prototype.indexOf=="function"?B?O.prototype.indexOf.call(M,d,f):O.prototype.lastIndexOf.call(M,d,f):xt(M,[d],f,I,B);throw new TypeError("val must be string, number or Buffer")}function xt(M,d,f,I,B){let G=1,pe=M.length,Mt=d.length;if(I!==void 0&&(I=String(I).toLowerCase(),I==="ucs2"||I==="ucs-2"||I==="utf16le"||I==="utf-16le")){if(M.length<2||d.length<2)return-1;G=2,pe/=2,Mt/=2,f/=2}function Nt(nr,jt){return G===1?nr[jt]:nr.readUInt16BE(jt*G)}let qt;if(B){let nr=-1;for(qt=f;qt<pe;qt++)if(Nt(M,qt)===Nt(d,nr===-1?0:qt-nr)){if(nr===-1&&(nr=qt),qt-nr+1===Mt)return nr*G}else nr!==-1&&(qt-=qt-nr),nr=-1}else for(f+Mt>pe&&(f=pe-Mt),qt=f;qt>=0;qt--){let nr=!0;for(let jt=0;jt<Mt;jt++)if(Nt(M,qt+jt)!==Nt(d,jt)){nr=!1;break}if(nr)return qt}return-1}K.prototype.includes=function(d,f,I){return this.indexOf(d,f,I)!==-1},K.prototype.indexOf=function(d,f,I){return yt(this,d,f,I,!0)},K.prototype.lastIndexOf=function(d,f,I){return yt(this,d,f,I,!1)};function Ze(M,d,f,I){f=Number(f)||0;const B=M.length-f;I?(I=Number(I),I>B&&(I=B)):I=B;const G=d.length;I>G/2&&(I=G/2);let pe;for(pe=0;pe<I;++pe){const Mt=parseInt(d.substr(pe*2,2),16);if(at(Mt))return pe;M[f+pe]=Mt}return pe}function te(M,d,f,I){return Ie(ht(d,M.length-f),M,f,I)}function Re(M,d,f,I){return Ie(Y(d),M,f,I)}function rt(M,d,f,I){return Ie(De(d),M,f,I)}function st(M,d,f,I){return Ie(Se(d,M.length-f),M,f,I)}K.prototype.write=function(d,f,I,B){if(f===void 0)B="utf8",I=this.length,f=0;else if(I===void 0&&typeof f=="string")B=f,I=this.length,f=0;else if(isFinite(f))f=f>>>0,isFinite(I)?(I=I>>>0,B===void 0&&(B="utf8")):(B=I,I=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");const G=this.length-f;if((I===void 0||I>G)&&(I=G),d.length>0&&(I<0||f<0)||f>this.length)throw new RangeError("Attempt to write outside buffer bounds");B||(B="utf8");let pe=!1;for(;;)switch(B){case"hex":return Ze(this,d,f,I);case"utf8":case"utf-8":return te(this,d,f,I);case"ascii":case"latin1":case"binary":return Re(this,d,f,I);case"base64":return rt(this,d,f,I);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return st(this,d,f,I);default:if(pe)throw new TypeError("Unknown encoding: "+B);B=(""+B).toLowerCase(),pe=!0}},K.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function Xe(M,d,f){return d===0&&f===M.length?U.fromByteArray(M):U.fromByteArray(M.slice(d,f))}function Ge(M,d,f){f=Math.min(M.length,f);const I=[];let B=d;for(;B<f;){const G=M[B];let pe=null,Mt=G>239?4:G>223?3:G>191?2:1;if(B+Mt<=f){let Nt,qt,nr,jt;switch(Mt){case 1:G<128&&(pe=G);break;case 2:Nt=M[B+1],(Nt&192)===128&&(jt=(G&31)<<6|Nt&63,jt>127&&(pe=jt));break;case 3:Nt=M[B+1],qt=M[B+2],(Nt&192)===128&&(qt&192)===128&&(jt=(G&15)<<12|(Nt&63)<<6|qt&63,jt>2047&&(jt<55296||jt>57343)&&(pe=jt));break;case 4:Nt=M[B+1],qt=M[B+2],nr=M[B+3],(Nt&192)===128&&(qt&192)===128&&(nr&192)===128&&(jt=(G&15)<<18|(Nt&63)<<12|(qt&63)<<6|nr&63,jt>65535&&jt<1114112&&(pe=jt))}}pe===null?(pe=65533,Mt=1):pe>65535&&(pe-=65536,I.push(pe>>>10&1023|55296),pe=56320|pe&1023),I.push(pe),B+=Mt}return bt(I)}const mt=4096;function bt(M){const d=M.length;if(d<=mt)return String.fromCharCode.apply(String,M);let f="",I=0;for(;I<d;)f+=String.fromCharCode.apply(String,M.slice(I,I+=mt));return f}function Bt(M,d,f){let I="";f=Math.min(M.length,f);for(let B=d;B<f;++B)I+=String.fromCharCode(M[B]&127);return I}function Ct(M,d,f){let I="";f=Math.min(M.length,f);for(let B=d;B<f;++B)I+=String.fromCharCode(M[B]);return I}function E(M,d,f){const I=M.length;(!d||d<0)&&(d=0),(!f||f<0||f>I)&&(f=I);let B="";for(let G=d;G<f;++G)B+=vt[M[G]];return B}function re(M,d,f){const I=M.slice(d,f);let B="";for(let G=0;G<I.length-1;G+=2)B+=String.fromCharCode(I[G]+I[G+1]*256);return B}K.prototype.slice=function(d,f){const I=this.length;d=~~d,f=f===void 0?I:~~f,d<0?(d+=I,d<0&&(d=0)):d>I&&(d=I),f<0?(f+=I,f<0&&(f=0)):f>I&&(f=I),f<d&&(f=d);const B=this.subarray(d,f);return Object.setPrototypeOf(B,K.prototype),B};function A(M,d,f){if(M%1!==0||M<0)throw new RangeError("offset is not uint");if(M+d>f)throw new RangeError("Trying to access beyond buffer length")}K.prototype.readUintLE=K.prototype.readUIntLE=function(d,f,I){d=d>>>0,f=f>>>0,I||A(d,f,this.length);let B=this[d],G=1,pe=0;for(;++pe<f&&(G*=256);)B+=this[d+pe]*G;return B},K.prototype.readUintBE=K.prototype.readUIntBE=function(d,f,I){d=d>>>0,f=f>>>0,I||A(d,f,this.length);let B=this[d+--f],G=1;for(;f>0&&(G*=256);)B+=this[d+--f]*G;return B},K.prototype.readUint8=K.prototype.readUInt8=function(d,f){return d=d>>>0,f||A(d,1,this.length),this[d]},K.prototype.readUint16LE=K.prototype.readUInt16LE=function(d,f){return d=d>>>0,f||A(d,2,this.length),this[d]|this[d+1]<<8},K.prototype.readUint16BE=K.prototype.readUInt16BE=function(d,f){return d=d>>>0,f||A(d,2,this.length),this[d]<<8|this[d+1]},K.prototype.readUint32LE=K.prototype.readUInt32LE=function(d,f){return d=d>>>0,f||A(d,4,this.length),(this[d]|this[d+1]<<8|this[d+2]<<16)+this[d+3]*16777216},K.prototype.readUint32BE=K.prototype.readUInt32BE=function(d,f){return d=d>>>0,f||A(d,4,this.length),this[d]*16777216+(this[d+1]<<16|this[d+2]<<8|this[d+3])},K.prototype.readBigUInt64LE=_t(function(d){d=d>>>0,Lr(d,"offset");const f=this[d],I=this[d+7];(f===void 0||I===void 0)&&Cr(d,this.length-8);const B=f+this[++d]*2**8+this[++d]*2**16+this[++d]*2**24,G=this[++d]+this[++d]*2**8+this[++d]*2**16+I*2**24;return BigInt(B)+(BigInt(G)<<BigInt(32))}),K.prototype.readBigUInt64BE=_t(function(d){d=d>>>0,Lr(d,"offset");const f=this[d],I=this[d+7];(f===void 0||I===void 0)&&Cr(d,this.length-8);const B=f*2**24+this[++d]*2**16+this[++d]*2**8+this[++d],G=this[++d]*2**24+this[++d]*2**16+this[++d]*2**8+I;return(BigInt(B)<<BigInt(32))+BigInt(G)}),K.prototype.readIntLE=function(d,f,I){d=d>>>0,f=f>>>0,I||A(d,f,this.length);let B=this[d],G=1,pe=0;for(;++pe<f&&(G*=256);)B+=this[d+pe]*G;return G*=128,B>=G&&(B-=Math.pow(2,8*f)),B},K.prototype.readIntBE=function(d,f,I){d=d>>>0,f=f>>>0,I||A(d,f,this.length);let B=f,G=1,pe=this[d+--B];for(;B>0&&(G*=256);)pe+=this[d+--B]*G;return G*=128,pe>=G&&(pe-=Math.pow(2,8*f)),pe},K.prototype.readInt8=function(d,f){return d=d>>>0,f||A(d,1,this.length),this[d]&128?(255-this[d]+1)*-1:this[d]},K.prototype.readInt16LE=function(d,f){d=d>>>0,f||A(d,2,this.length);const I=this[d]|this[d+1]<<8;return I&32768?I|4294901760:I},K.prototype.readInt16BE=function(d,f){d=d>>>0,f||A(d,2,this.length);const I=this[d+1]|this[d]<<8;return I&32768?I|4294901760:I},K.prototype.readInt32LE=function(d,f){return d=d>>>0,f||A(d,4,this.length),this[d]|this[d+1]<<8|this[d+2]<<16|this[d+3]<<24},K.prototype.readInt32BE=function(d,f){return d=d>>>0,f||A(d,4,this.length),this[d]<<24|this[d+1]<<16|this[d+2]<<8|this[d+3]},K.prototype.readBigInt64LE=_t(function(d){d=d>>>0,Lr(d,"offset");const f=this[d],I=this[d+7];(f===void 0||I===void 0)&&Cr(d,this.length-8);const B=this[d+4]+this[d+5]*2**8+this[d+6]*2**16+(I<<24);return(BigInt(B)<<BigInt(32))+BigInt(f+this[++d]*2**8+this[++d]*2**16+this[++d]*2**24)}),K.prototype.readBigInt64BE=_t(function(d){d=d>>>0,Lr(d,"offset");const f=this[d],I=this[d+7];(f===void 0||I===void 0)&&Cr(d,this.length-8);const B=(f<<24)+this[++d]*2**16+this[++d]*2**8+this[++d];return(BigInt(B)<<BigInt(32))+BigInt(this[++d]*2**24+this[++d]*2**16+this[++d]*2**8+I)}),K.prototype.readFloatLE=function(d,f){return d=d>>>0,f||A(d,4,this.length),H.read(this,d,!0,23,4)},K.prototype.readFloatBE=function(d,f){return d=d>>>0,f||A(d,4,this.length),H.read(this,d,!1,23,4)},K.prototype.readDoubleLE=function(d,f){return d=d>>>0,f||A(d,8,this.length),H.read(this,d,!0,52,8)},K.prototype.readDoubleBE=function(d,f){return d=d>>>0,f||A(d,8,this.length),H.read(this,d,!1,52,8)};function ie(M,d,f,I,B,G){if(!K.isBuffer(M))throw new TypeError('"buffer" argument must be a Buffer instance');if(d>B||d<G)throw new RangeError('"value" argument is out of bounds');if(f+I>M.length)throw new RangeError("Index out of range")}K.prototype.writeUintLE=K.prototype.writeUIntLE=function(d,f,I,B){if(d=+d,f=f>>>0,I=I>>>0,!B){const Mt=Math.pow(2,8*I)-1;ie(this,d,f,I,Mt,0)}let G=1,pe=0;for(this[f]=d&255;++pe<I&&(G*=256);)this[f+pe]=d/G&255;return f+I},K.prototype.writeUintBE=K.prototype.writeUIntBE=function(d,f,I,B){if(d=+d,f=f>>>0,I=I>>>0,!B){const Mt=Math.pow(2,8*I)-1;ie(this,d,f,I,Mt,0)}let G=I-1,pe=1;for(this[f+G]=d&255;--G>=0&&(pe*=256);)this[f+G]=d/pe&255;return f+I},K.prototype.writeUint8=K.prototype.writeUInt8=function(d,f,I){return d=+d,f=f>>>0,I||ie(this,d,f,1,255,0),this[f]=d&255,f+1},K.prototype.writeUint16LE=K.prototype.writeUInt16LE=function(d,f,I){return d=+d,f=f>>>0,I||ie(this,d,f,2,65535,0),this[f]=d&255,this[f+1]=d>>>8,f+2},K.prototype.writeUint16BE=K.prototype.writeUInt16BE=function(d,f,I){return d=+d,f=f>>>0,I||ie(this,d,f,2,65535,0),this[f]=d>>>8,this[f+1]=d&255,f+2},K.prototype.writeUint32LE=K.prototype.writeUInt32LE=function(d,f,I){return d=+d,f=f>>>0,I||ie(this,d,f,4,4294967295,0),this[f+3]=d>>>24,this[f+2]=d>>>16,this[f+1]=d>>>8,this[f]=d&255,f+4},K.prototype.writeUint32BE=K.prototype.writeUInt32BE=function(d,f,I){return d=+d,f=f>>>0,I||ie(this,d,f,4,4294967295,0),this[f]=d>>>24,this[f+1]=d>>>16,this[f+2]=d>>>8,this[f+3]=d&255,f+4};function ve(M,d,f,I,B){Er(d,I,B,M,f,7);let G=Number(d&BigInt(4294967295));M[f++]=G,G=G>>8,M[f++]=G,G=G>>8,M[f++]=G,G=G>>8,M[f++]=G;let pe=Number(d>>BigInt(32)&BigInt(4294967295));return M[f++]=pe,pe=pe>>8,M[f++]=pe,pe=pe>>8,M[f++]=pe,pe=pe>>8,M[f++]=pe,f}function lt(M,d,f,I,B){Er(d,I,B,M,f,7);let G=Number(d&BigInt(4294967295));M[f+7]=G,G=G>>8,M[f+6]=G,G=G>>8,M[f+5]=G,G=G>>8,M[f+4]=G;let pe=Number(d>>BigInt(32)&BigInt(4294967295));return M[f+3]=pe,pe=pe>>8,M[f+2]=pe,pe=pe>>8,M[f+1]=pe,pe=pe>>8,M[f]=pe,f+8}K.prototype.writeBigUInt64LE=_t(function(d,f=0){return ve(this,d,f,BigInt(0),BigInt("0xffffffffffffffff"))}),K.prototype.writeBigUInt64BE=_t(function(d,f=0){return lt(this,d,f,BigInt(0),BigInt("0xffffffffffffffff"))}),K.prototype.writeIntLE=function(d,f,I,B){if(d=+d,f=f>>>0,!B){const Nt=Math.pow(2,8*I-1);ie(this,d,f,I,Nt-1,-Nt)}let G=0,pe=1,Mt=0;for(this[f]=d&255;++G<I&&(pe*=256);)d<0&&Mt===0&&this[f+G-1]!==0&&(Mt=1),this[f+G]=(d/pe>>0)-Mt&255;return f+I},K.prototype.writeIntBE=function(d,f,I,B){if(d=+d,f=f>>>0,!B){const Nt=Math.pow(2,8*I-1);ie(this,d,f,I,Nt-1,-Nt)}let G=I-1,pe=1,Mt=0;for(this[f+G]=d&255;--G>=0&&(pe*=256);)d<0&&Mt===0&&this[f+G+1]!==0&&(Mt=1),this[f+G]=(d/pe>>0)-Mt&255;return f+I},K.prototype.writeInt8=function(d,f,I){return d=+d,f=f>>>0,I||ie(this,d,f,1,127,-128),d<0&&(d=255+d+1),this[f]=d&255,f+1},K.prototype.writeInt16LE=function(d,f,I){return d=+d,f=f>>>0,I||ie(this,d,f,2,32767,-32768),this[f]=d&255,this[f+1]=d>>>8,f+2},K.prototype.writeInt16BE=function(d,f,I){return d=+d,f=f>>>0,I||ie(this,d,f,2,32767,-32768),this[f]=d>>>8,this[f+1]=d&255,f+2},K.prototype.writeInt32LE=function(d,f,I){return d=+d,f=f>>>0,I||ie(this,d,f,4,2147483647,-2147483648),this[f]=d&255,this[f+1]=d>>>8,this[f+2]=d>>>16,this[f+3]=d>>>24,f+4},K.prototype.writeInt32BE=function(d,f,I){return d=+d,f=f>>>0,I||ie(this,d,f,4,2147483647,-2147483648),d<0&&(d=4294967295+d+1),this[f]=d>>>24,this[f+1]=d>>>16,this[f+2]=d>>>8,this[f+3]=d&255,f+4},K.prototype.writeBigInt64LE=_t(function(d,f=0){return ve(this,d,f,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),K.prototype.writeBigInt64BE=_t(function(d,f=0){return lt(this,d,f,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function Ye(M,d,f,I,B,G){if(f+I>M.length)throw new RangeError("Index out of range");if(f<0)throw new RangeError("Index out of range")}function $t(M,d,f,I,B){return d=+d,f=f>>>0,B||Ye(M,d,f,4),H.write(M,d,f,I,23,4),f+4}K.prototype.writeFloatLE=function(d,f,I){return $t(this,d,f,!0,I)},K.prototype.writeFloatBE=function(d,f,I){return $t(this,d,f,!1,I)};function ut(M,d,f,I,B){return d=+d,f=f>>>0,B||Ye(M,d,f,8),H.write(M,d,f,I,52,8),f+8}K.prototype.writeDoubleLE=function(d,f,I){return ut(this,d,f,!0,I)},K.prototype.writeDoubleBE=function(d,f,I){return ut(this,d,f,!1,I)},K.prototype.copy=function(d,f,I,B){if(!K.isBuffer(d))throw new TypeError("argument should be a Buffer");if(I||(I=0),!B&&B!==0&&(B=this.length),f>=d.length&&(f=d.length),f||(f=0),B>0&&B<I&&(B=I),B===I||d.length===0||this.length===0)return 0;if(f<0)throw new RangeError("targetStart out of bounds");if(I<0||I>=this.length)throw new RangeError("Index out of range");if(B<0)throw new RangeError("sourceEnd out of bounds");B>this.length&&(B=this.length),d.length-f<B-I&&(B=d.length-f+I);const G=B-I;return this===d&&typeof O.prototype.copyWithin=="function"?this.copyWithin(f,I,B):O.prototype.set.call(d,this.subarray(I,B),f),G},K.prototype.fill=function(d,f,I,B){if(typeof d=="string"){if(typeof f=="string"?(B=f,f=0,I=this.length):typeof I=="string"&&(B=I,I=this.length),B!==void 0&&typeof B!="string")throw new TypeError("encoding must be a string");if(typeof B=="string"&&!K.isEncoding(B))throw new TypeError("Unknown encoding: "+B);if(d.length===1){const pe=d.charCodeAt(0);(B==="utf8"&&pe<128||B==="latin1")&&(d=pe)}}else typeof d=="number"?d=d&255:typeof d=="boolean"&&(d=Number(d));if(f<0||this.length<f||this.length<I)throw new RangeError("Out of range index");if(I<=f)return this;f=f>>>0,I=I===void 0?this.length:I>>>0,d||(d=0);let G;if(typeof d=="number")for(G=f;G<I;++G)this[G]=d;else{const pe=K.isBuffer(d)?d:K.from(d,B),Mt=pe.length;if(Mt===0)throw new TypeError('The value "'+d+'" is invalid for argument "value"');for(G=0;G<I-f;++G)this[G+f]=pe[G%Mt]}return this};const ft={};function Wt(M,d,f){ft[M]=class extends f{constructor(){super(),Object.defineProperty(this,"message",{value:d.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${M}]`,this.stack,delete this.name}get code(){return M}set code(B){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:B,writable:!0})}toString(){return`${this.name} [${M}]: ${this.message}`}}}Wt("ERR_BUFFER_OUT_OF_BOUNDS",function(M){return M?`${M} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),Wt("ERR_INVALID_ARG_TYPE",function(M,d){return`The "${M}" argument must be of type number. Received type ${typeof d}`},TypeError),Wt("ERR_OUT_OF_RANGE",function(M,d,f){let I=`The value of "${M}" is out of range.`,B=f;return Number.isInteger(f)&&Math.abs(f)>2**32?B=Kt(String(f)):typeof f=="bigint"&&(B=String(f),(f>BigInt(2)**BigInt(32)||f<-(BigInt(2)**BigInt(32)))&&(B=Kt(B)),B+="n"),I+=` It must be ${d}. Received ${B}`,I},RangeError);function Kt(M){let d="",f=M.length;const I=M[0]==="-"?1:0;for(;f>=I+4;f-=3)d=`_${M.slice(f-3,f)}${d}`;return`${M.slice(0,f)}${d}`}function Ir(M,d,f){Lr(d,"offset"),(M[d]===void 0||M[d+f]===void 0)&&Cr(d,M.length-(f+1))}function Er(M,d,f,I,B,G){if(M>f||M<d){const pe=typeof d=="bigint"?"n":"";let Mt;throw d===0||d===BigInt(0)?Mt=`>= 0${pe} and < 2${pe} ** ${(G+1)*8}${pe}`:Mt=`>= -(2${pe} ** ${(G+1)*8-1}${pe}) and < 2 ** ${(G+1)*8-1}${pe}`,new ft.ERR_OUT_OF_RANGE("value",Mt,M)}Ir(I,B,G)}function Lr(M,d){if(typeof M!="number")throw new ft.ERR_INVALID_ARG_TYPE(d,"number",M)}function Cr(M,d,f){throw Math.floor(M)!==M?(Lr(M,f),new ft.ERR_OUT_OF_RANGE("offset","an integer",M)):d<0?new ft.ERR_BUFFER_OUT_OF_BOUNDS:new ft.ERR_OUT_OF_RANGE("offset",`>= 0 and <= ${d}`,M)}const Hr=/[^+/0-9A-Za-z-_]/g;function gn(M){if(M=M.split("=")[0],M=M.trim().replace(Hr,""),M.length<2)return"";for(;M.length%4!==0;)M=M+"=";return M}function ht(M,d){d=d||1/0;let f;const I=M.length;let B=null;const G=[];for(let pe=0;pe<I;++pe){if(f=M.charCodeAt(pe),f>55295&&f<57344){if(!B){if(f>56319){(d-=3)>-1&&G.push(239,191,189);continue}else if(pe+1===I){(d-=3)>-1&&G.push(239,191,189);continue}B=f;continue}if(f<56320){(d-=3)>-1&&G.push(239,191,189),B=f;continue}f=(B-55296<<10|f-56320)+65536}else B&&(d-=3)>-1&&G.push(239,191,189);if(B=null,f<128){if((d-=1)<0)break;G.push(f)}else if(f<2048){if((d-=2)<0)break;G.push(f>>6|192,f&63|128)}else if(f<65536){if((d-=3)<0)break;G.push(f>>12|224,f>>6&63|128,f&63|128)}else if(f<1114112){if((d-=4)<0)break;G.push(f>>18|240,f>>12&63|128,f>>6&63|128,f&63|128)}else throw new Error("Invalid code point")}return G}function Y(M){const d=[];for(let f=0;f<M.length;++f)d.push(M.charCodeAt(f)&255);return d}function Se(M,d){let f,I,B;const G=[];for(let pe=0;pe<M.length&&!((d-=2)<0);++pe)f=M.charCodeAt(pe),I=f>>8,B=f%256,G.push(B),G.push(I);return G}function De(M){return U.toByteArray(gn(M))}function Ie(M,d,f,I){let B;for(B=0;B<I&&!(B+f>=d.length||B>=M.length);++B)d[B+f]=M[B];return B}function Ne(M,d){return M instanceof d||M!=null&&M.constructor!=null&&M.constructor.name!=null&&M.constructor.name===d.name}function at(M){return M!==M}const vt=function(){const M="0123456789abcdef",d=new Array(256);for(let f=0;f<16;++f){const I=f*16;for(let B=0;B<16;++B)d[I+B]=M[f]+M[B]}return d}();function _t(M){return typeof BigInt>"u"?kt:M}function kt(){throw new Error("BigInt not supported")}})(Me);const oe=Me.Buffer;Ue.Blob=Me.Blob,Ue.BlobOptions=Me.BlobOptions,Ue.Buffer=Me.Buffer,Ue.File=Me.File,Ue.FileOptions=Me.FileOptions,Ue.INSPECT_MAX_BYTES=Me.INSPECT_MAX_BYTES,Ue.SlowBuffer=Me.SlowBuffer,Ue.TranscodeEncoding=Me.TranscodeEncoding,Ue.atob=Me.atob,Ue.btoa=Me.btoa,Ue.constants=Me.constants,Ue.default=oe,Ue.isAscii=Me.isAscii,Ue.isUtf8=Me.isUtf8,Ue.kMaxLength=Me.kMaxLength,Ue.kStringMaxLength=Me.kStringMaxLength,Ue.resolveObjectURL=Me.resolveObjectURL,Ue.transcode=Me.transcode})(Vf);var A_=P_(Vf),Mp={},Wf={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(Ue,Me,N)=>{Ue.exports=N.p+"ort-wasm-simd-threaded.jsep.wasm"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{Environment:()=>Ge,Interpreter:()=>mt,Template:()=>Ct,parse:()=>ke,tokenize:()=>q});var D=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),ge=Object.freeze({set:D.Set,for:D.For,in:D.In,is:D.Is,if:D.If,else:D.Else,endif:D.EndIf,elif:D.ElseIf,endfor:D.EndFor,and:D.And,or:D.Or,not:D.Not,"not in":D.NotIn,macro:D.Macro,endmacro:D.EndMacro,true:D.BooleanLiteral,false:D.BooleanLiteral,True:D.BooleanLiteral,False:D.BooleanLiteral}),$e=class{constructor(E,re){this.value=E,this.type=re}};function Oe(E){return/\w/.test(E)}function Pe(E){return/[0-9]/.test(E)}var Q=[["{%",D.OpenStatement],["%}",D.CloseStatement],["{{",D.OpenExpression],["}}",D.CloseExpression],["(",D.OpenParen],[")",D.CloseParen],["{",D.OpenCurlyBracket],["}",D.CloseCurlyBracket],["[",D.OpenSquareBracket],["]",D.CloseSquareBracket],[",",D.Comma],[".",D.Dot],[":",D.Colon],["|",D.Pipe],["<=",D.ComparisonBinaryOperator],[">=",D.ComparisonBinaryOperator],["==",D.ComparisonBinaryOperator],["!=",D.ComparisonBinaryOperator],["<",D.ComparisonBinaryOperator],[">",D.ComparisonBinaryOperator],["+",D.AdditiveBinaryOperator],["-",D.AdditiveBinaryOperator],["*",D.MultiplicativeBinaryOperator],["/",D.MultiplicativeBinaryOperator],["%",D.MultiplicativeBinaryOperator],["=",D.Equals]],L=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function W(E,re={}){return E.endsWith(`
`)&&(E=E.slice(0,-1)),E=E.replace(/{#.*?#}/gs,"{##}"),re.lstrip_blocks&&(E=E.replace(/^[ \t]*({[#%])/gm,"$1")),re.trim_blocks&&(E=E.replace(/([#%]})\n/g,"$1")),E.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function q(E,re={}){const A=[],ie=W(E,re);let ve=0;const lt=Ye=>{let $t="";for(;Ye(ie[ve]);){if(ie[ve]==="\\"){if(++ve,ve>=ie.length)throw new SyntaxError("Unexpected end of input");const ut=ie[ve++],ft=L.get(ut);if(ft===void 0)throw new SyntaxError(`Unexpected escaped character: ${ut}`);$t+=ft;continue}if($t+=ie[ve++],ve>=ie.length)throw new SyntaxError("Unexpected end of input")}return $t};e:for(;ve<ie.length;){const Ye=A.at(-1)?.type;if(Ye===void 0||Ye===D.CloseStatement||Ye===D.CloseExpression){let ut="";for(;ve<ie.length&&!(ie[ve]==="{"&&(ie[ve+1]==="%"||ie[ve+1]==="{"));)ut+=ie[ve++];if(ut.length>0){A.push(new $e(ut,D.Text));continue}}lt(ut=>/\s/.test(ut));const $t=ie[ve];if($t==="-"||$t==="+"){const ut=A.at(-1)?.type;if(ut===D.Text||ut===void 0)throw new SyntaxError(`Unexpected character: ${$t}`);switch(ut){case D.Identifier:case D.NumericLiteral:case D.BooleanLiteral:case D.StringLiteral:case D.CloseParen:case D.CloseSquareBracket:break;default:{++ve;const ft=lt(Pe);A.push(new $e(`${$t}${ft}`,ft.length>0?D.NumericLiteral:D.UnaryOperator));continue}}}for(const[ut,ft]of Q)if(ie.slice(ve,ve+ut.length)===ut){A.push(new $e(ut,ft)),ve+=ut.length;continue e}if($t==="'"||$t==='"'){++ve;const ut=lt(ft=>ft!==$t);A.push(new $e(ut,D.StringLiteral)),++ve;continue}if(Pe($t)){const ut=lt(Pe);A.push(new $e(ut,D.NumericLiteral));continue}if(Oe($t)){const ut=lt(Oe),ft=Object.hasOwn(ge,ut)?ge[ut]:D.Identifier;ft===D.In&&A.at(-1)?.type===D.Not?(A.pop(),A.push(new $e("not in",D.NotIn))):A.push(new $e(ut,ft));continue}throw new SyntaxError(`Unexpected character: ${$t}`)}return A}var ee=class{type="Statement"},de=class extends ee{constructor(E){super(),this.body=E}type="Program"},Ce=class extends ee{constructor(E,re,A){super(),this.test=E,this.body=re,this.alternate=A}type="If"},xe=class extends ee{constructor(E,re,A,ie){super(),this.loopvar=E,this.iterable=re,this.body=A,this.defaultBlock=ie}type="For"},j=class extends ee{constructor(E,re){super(),this.assignee=E,this.value=re}type="Set"},oe=class extends ee{constructor(E,re,A){super(),this.name=E,this.args=re,this.body=A}type="Macro"},le=class extends ee{type="Expression"},U=class extends le{constructor(E,re,A){super(),this.object=E,this.property=re,this.computed=A}type="MemberExpression"},H=class extends le{constructor(E,re){super(),this.callee=E,this.args=re}type="CallExpression"},R=class extends le{constructor(E){super(),this.value=E}type="Identifier"},P=class extends le{constructor(E){super(),this.value=E}type="Literal"},O=class extends P{type="NumericLiteral"},T=class extends P{type="StringLiteral"},fe=class extends P{type="BooleanLiteral"},ye=class extends P{type="ArrayLiteral"},Ee=class extends P{type="TupleLiteral"},K=class extends P{type="ObjectLiteral"},Ae=class extends le{constructor(E,re,A){super(),this.operator=E,this.left=re,this.right=A}type="BinaryExpression"},ot=class extends le{constructor(E,re){super(),this.operand=E,this.filter=re}type="FilterExpression"},Qe=class extends le{constructor(E,re){super(),this.iterable=E,this.test=re}type="SelectExpression"},ct=class extends le{constructor(E,re,A){super(),this.operand=E,this.negate=re,this.test=A}type="TestExpression"},Te=class extends le{constructor(E,re){super(),this.operator=E,this.argument=re}type="UnaryExpression"},X=class extends le{constructor(E=void 0,re=void 0,A=void 0){super(),this.start=E,this.stop=re,this.step=A}type="SliceExpression"},be=class extends le{constructor(E,re){super(),this.key=E,this.value=re}type="KeywordArgumentExpression"};function ke(E){const re=new de([]);let A=0;function ie(B,G){const pe=E[A++];if(!pe||pe.type!==B)throw new Error(`Parser Error: ${G}. ${pe.type} !== ${B}.`);return pe}function ve(){switch(E[A].type){case D.Text:return $t();case D.OpenStatement:return ut();case D.OpenExpression:return ft();default:throw new SyntaxError(`Unexpected token type: ${E[A].type}`)}}function lt(...B){return A+B.length<=E.length&&B.some((G,pe)=>G!==E[A+pe].type)}function Ye(...B){return A+B.length<=E.length&&B.every((G,pe)=>G===E[A+pe].type)}function $t(){return new T(ie(D.Text,"Expected text token").value)}function ut(){ie(D.OpenStatement,"Expected opening statement token");let B;switch(E[A].type){case D.Set:++A,B=Wt(),ie(D.CloseStatement,"Expected closing statement token");break;case D.If:++A,B=Kt(),ie(D.OpenStatement,"Expected {% token"),ie(D.EndIf,"Expected endif token"),ie(D.CloseStatement,"Expected %} token");break;case D.Macro:++A,B=Ir(),ie(D.OpenStatement,"Expected {% token"),ie(D.EndMacro,"Expected endmacro token"),ie(D.CloseStatement,"Expected %} token");break;case D.For:++A,B=Lr(),ie(D.OpenStatement,"Expected {% token"),ie(D.EndFor,"Expected endfor token"),ie(D.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${E[A].type}`)}return B}function ft(){ie(D.OpenExpression,"Expected opening expression token");const B=Cr();return ie(D.CloseExpression,"Expected closing expression token"),B}function Wt(){const B=Cr();if(Ye(D.Equals)){++A;const G=Wt();return new j(B,G)}return B}function Kt(){const B=Cr();ie(D.CloseStatement,"Expected closing statement token");const G=[],pe=[];for(;!(E[A]?.type===D.OpenStatement&&(E[A+1]?.type===D.ElseIf||E[A+1]?.type===D.Else||E[A+1]?.type===D.EndIf));)G.push(ve());if(E[A]?.type===D.OpenStatement&&E[A+1]?.type!==D.EndIf)if(++A,Ye(D.ElseIf))ie(D.ElseIf,"Expected elseif token"),pe.push(Kt());else for(ie(D.Else,"Expected else token"),ie(D.CloseStatement,"Expected closing statement token");!(E[A]?.type===D.OpenStatement&&E[A+1]?.type===D.EndIf);)pe.push(ve());return new Ce(B,G,pe)}function Ir(){const B=I();if(B.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const G=at();ie(D.CloseStatement,"Expected closing statement token");const pe=[];for(;lt(D.OpenStatement,D.EndMacro);)pe.push(ve());return new oe(B,G,pe)}function Er(B=!1){const G=B?I:Cr,pe=[G()],Mt=Ye(D.Comma);for(;Mt&&(++A,pe.push(G()),!!Ye(D.Comma)););return Mt?new Ee(pe):pe[0]}function Lr(){const B=Er(!0);if(!(B instanceof R||B instanceof Ee))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${B.type} instead`);ie(D.In,"Expected `in` keyword following loop variable");const G=Cr();ie(D.CloseStatement,"Expected closing statement token");const pe=[];for(;lt(D.OpenStatement,D.EndFor)&&lt(D.OpenStatement,D.Else);)pe.push(ve());const Mt=[];if(Ye(D.OpenStatement,D.Else))for(++A,++A,ie(D.CloseStatement,"Expected closing statement token");lt(D.OpenStatement,D.EndFor);)Mt.push(ve());return new xe(B,G,pe,Mt)}function Cr(){return Hr()}function Hr(){const B=gn();if(Ye(D.If)){++A;const G=gn();if(Ye(D.Else)){++A;const pe=gn();return new Ce(G,[B],[pe])}else return new Qe(B,G)}return B}function gn(){let B=ht();for(;Ye(D.Or);){const G=E[A];++A;const pe=ht();B=new Ae(G,B,pe)}return B}function ht(){let B=Y();for(;Ye(D.And);){const G=E[A];++A;const pe=Y();B=new Ae(G,B,pe)}return B}function Y(){let B;for(;Ye(D.Not);){const G=E[A];++A;const pe=Y();B=new Te(G,pe)}return B??Se()}function Se(){let B=De();for(;Ye(D.ComparisonBinaryOperator)||Ye(D.In)||Ye(D.NotIn);){const G=E[A];++A;const pe=De();B=new Ae(G,B,pe)}return B}function De(){let B=M();for(;Ye(D.AdditiveBinaryOperator);){const G=E[A];++A;const pe=M();B=new Ae(G,B,pe)}return B}function Ie(){const B=kt();return Ye(D.OpenParen)?Ne(B):B}function Ne(B){let G=new H(B,at());return Ye(D.OpenParen)&&(G=Ne(G)),G}function at(){ie(D.OpenParen,"Expected opening parenthesis for arguments list");const B=vt();return ie(D.CloseParen,"Expected closing parenthesis for arguments list"),B}function vt(){const B=[];for(;!Ye(D.CloseParen);){let G=Cr();if(Ye(D.Equals)){if(++A,!(G instanceof R))throw new SyntaxError("Expected identifier for keyword argument");const pe=Cr();G=new be(G,pe)}B.push(G),Ye(D.Comma)&&++A}return B}function _t(){const B=[];let G=!1;for(;!Ye(D.CloseSquareBracket);)Ye(D.Colon)?(B.push(void 0),++A,G=!0):(B.push(Cr()),Ye(D.Colon)&&(++A,G=!0));if(B.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(G){if(B.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new X(...B)}return B[0]}function kt(){let B=I();for(;Ye(D.Dot)||Ye(D.OpenSquareBracket);){const G=E[A];++A;let pe;const Mt=G.type!==D.Dot;if(Mt)pe=_t(),ie(D.CloseSquareBracket,"Expected closing square bracket");else if(pe=I(),pe.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");B=new U(B,pe,Mt)}return B}function M(){let B=d();for(;Ye(D.MultiplicativeBinaryOperator);){const G=E[A];++A;const pe=d();B=new Ae(G,B,pe)}return B}function d(){let B=f();for(;Ye(D.Is);){++A;const G=Ye(D.Not);G&&++A;let pe=I();if(pe instanceof fe&&(pe=new R(pe.value.toString())),!(pe instanceof R))throw new SyntaxError("Expected identifier for the test");B=new ct(B,G,pe)}return B}function f(){let B=Ie();for(;Ye(D.Pipe);){++A;let G=I();if(!(G instanceof R))throw new SyntaxError("Expected identifier for the filter");Ye(D.OpenParen)&&(G=Ne(G)),B=new ot(B,G)}return B}function I(){const B=E[A];switch(B.type){case D.NumericLiteral:return++A,new O(Number(B.value));case D.StringLiteral:return++A,new T(B.value);case D.BooleanLiteral:return++A,new fe(B.value.toLowerCase()==="true");case D.Identifier:return++A,new R(B.value);case D.OpenParen:{++A;const G=Er();if(E[A].type!==D.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${E[A].type} instead`);return++A,G}case D.OpenSquareBracket:{++A;const G=[];for(;!Ye(D.CloseSquareBracket);)G.push(Cr()),Ye(D.Comma)&&++A;return++A,new ye(G)}case D.OpenCurlyBracket:{++A;const G=new Map;for(;!Ye(D.CloseCurlyBracket);){const pe=Cr();ie(D.Colon,"Expected colon between key and value in object literal");const Mt=Cr();G.set(pe,Mt),Ye(D.Comma)&&++A}return++A,new K(G)}default:throw new SyntaxError(`Unexpected token: ${B.type}`)}}for(;A<E.length;)re.body.push(ve());return re}function He(E,re,A=1){re===void 0&&(re=E,E=0);const ie=[];for(let ve=E;ve<re;ve+=A)ie.push(ve);return ie}function pt(E,re,A,ie=1){const ve=Math.sign(ie);ve>=0?(re=(re??=0)<0?Math.max(E.length+re,0):Math.min(re,E.length),A=(A??=E.length)<0?Math.max(E.length+A,0):Math.min(A,E.length)):(re=(re??=E.length-1)<0?Math.max(E.length+re,-1):Math.min(re,E.length-1),A=(A??=-1)<-1?Math.max(E.length+A,-1):Math.min(A,E.length-1));const lt=[];for(let Ye=re;ve*Ye<ve*A;Ye+=ie)lt.push(E[Ye]);return lt}function ce(E){return E.replace(/\b\w/g,re=>re.toUpperCase())}var tt=class{type="RuntimeValue";value;builtins=new Map;constructor(E=void 0){this.value=E}__bool__(){return new yt(!!this.value)}},gt=class extends tt{type="NumericValue"},je=class extends tt{type="StringValue";builtins=new Map([["upper",new rt(()=>new je(this.value.toUpperCase()))],["lower",new rt(()=>new je(this.value.toLowerCase()))],["strip",new rt(()=>new je(this.value.trim()))],["title",new rt(()=>new je(ce(this.value)))],["length",new gt(this.value.length)]])},yt=class extends tt{type="BooleanValue"},xt=class extends tt{type="ObjectValue";__bool__(){return new yt(this.value.size>0)}builtins=new Map([["get",new rt(([E,re])=>{if(!(E instanceof je))throw new Error(`Object key must be a string: got ${E.type}`);return this.value.get(E.value)??re??new st})],["items",new rt(()=>new te(Array.from(this.value.entries()).map(([E,re])=>new te([new je(E),re]))))]])},Ze=class extends xt{type="KeywordArgumentsValue"},te=class extends tt{type="ArrayValue";builtins=new Map([["length",new gt(this.value.length)]]);__bool__(){return new yt(this.value.length>0)}},Re=class extends te{type="TupleValue"},rt=class extends tt{type="FunctionValue"},st=class extends tt{type="NullValue"},Xe=class extends tt{type="UndefinedValue"},Ge=class{constructor(E){this.parent=E}variables=new Map([["namespace",new rt(E=>{if(E.length===0)return new xt(new Map);if(E.length!==1||!(E[0]instanceof xt))throw new Error("`namespace` expects either zero arguments or a single object argument");return E[0]})]]);tests=new Map([["boolean",E=>E.type==="BooleanValue"],["callable",E=>E instanceof rt],["odd",E=>{if(E.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${E.type}`);return E.value%2!==0}],["even",E=>{if(E.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${E.type}`);return E.value%2===0}],["false",E=>E.type==="BooleanValue"&&!E.value],["true",E=>E.type==="BooleanValue"&&E.value],["string",E=>E.type==="StringValue"],["number",E=>E.type==="NumericValue"],["integer",E=>E.type==="NumericValue"&&Number.isInteger(E.value)],["iterable",E=>E instanceof te||E instanceof je],["lower",E=>{const re=E.value;return E.type==="StringValue"&&re===re.toLowerCase()}],["upper",E=>{const re=E.value;return E.type==="StringValue"&&re===re.toUpperCase()}],["none",E=>E.type==="NullValue"],["defined",E=>E.type!=="UndefinedValue"],["undefined",E=>E.type==="UndefinedValue"],["equalto",(E,re)=>E.value===re.value],["eq",(E,re)=>E.value===re.value]]);set(E,re){return this.declareVariable(E,bt(re))}declareVariable(E,re){if(this.variables.has(E))throw new SyntaxError(`Variable already declared: ${E}`);return this.variables.set(E,re),re}setVariable(E,re){return this.variables.set(E,re),re}resolve(E){if(this.variables.has(E))return this;if(this.parent)return this.parent.resolve(E);throw new Error(`Unknown variable: ${E}`)}lookupVariable(E){try{return this.resolve(E).variables.get(E)??new Xe}catch{return new Xe}}},mt=class{global;constructor(E){this.global=E??new Ge}run(E){return this.evaluate(E,this.global)}evaluateBinaryExpression(E,re){const A=this.evaluate(E.left,re);switch(E.operator.value){case"and":return A.__bool__().value?this.evaluate(E.right,re):A;case"or":return A.__bool__().value?A:this.evaluate(E.right,re)}const ie=this.evaluate(E.right,re);switch(E.operator.value){case"==":return new yt(A.value==ie.value);case"!=":return new yt(A.value!=ie.value)}if(A instanceof Xe||ie instanceof Xe)throw new Error("Cannot perform operation on undefined values");if(A instanceof st||ie instanceof st)throw new Error("Cannot perform operation on null values");if(A instanceof gt&&ie instanceof gt)switch(E.operator.value){case"+":return new gt(A.value+ie.value);case"-":return new gt(A.value-ie.value);case"*":return new gt(A.value*ie.value);case"/":return new gt(A.value/ie.value);case"%":return new gt(A.value%ie.value);case"<":return new yt(A.value<ie.value);case">":return new yt(A.value>ie.value);case">=":return new yt(A.value>=ie.value);case"<=":return new yt(A.value<=ie.value)}else if(A instanceof te&&ie instanceof te)switch(E.operator.value){case"+":return new te(A.value.concat(ie.value))}else if(ie instanceof te){const ve=ie.value.find(lt=>lt.value===A.value)!==void 0;switch(E.operator.value){case"in":return new yt(ve);case"not in":return new yt(!ve)}}if(A instanceof je||ie instanceof je)switch(E.operator.value){case"+":return new je(A.value.toString()+ie.value.toString())}if(A instanceof je&&ie instanceof je)switch(E.operator.value){case"in":return new yt(ie.value.includes(A.value));case"not in":return new yt(!ie.value.includes(A.value))}if(A instanceof je&&ie instanceof xt)switch(E.operator.value){case"in":return new yt(ie.value.has(A.value));case"not in":return new yt(!ie.value.has(A.value))}throw new SyntaxError(`Unknown operator "${E.operator.value}" between ${A.type} and ${ie.type}`)}evaluateArguments(E,re){const A=[],ie=new Map;for(const ve of E)if(ve.type==="KeywordArgumentExpression"){const lt=ve;ie.set(lt.key.value,this.evaluate(lt.value,re))}else{if(ie.size>0)throw new Error("Positional arguments must come before keyword arguments");A.push(this.evaluate(ve,re))}return[A,ie]}evaluateFilterExpression(E,re){const A=this.evaluate(E.operand,re);if(E.filter.type==="Identifier"){const ie=E.filter;if(ie.value==="tojson")return new je(Bt(A));if(A instanceof te)switch(ie.value){case"list":return A;case"first":return A.value[0];case"last":return A.value[A.value.length-1];case"length":return new gt(A.value.length);case"reverse":return new te(A.value.reverse());case"sort":return new te(A.value.sort((ve,lt)=>{if(ve.type!==lt.type)throw new Error(`Cannot compare different types: ${ve.type} and ${lt.type}`);switch(ve.type){case"NumericValue":return ve.value-lt.value;case"StringValue":return ve.value.localeCompare(lt.value);default:throw new Error(`Cannot compare type: ${ve.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${ie.value}`)}else if(A instanceof je)switch(ie.value){case"length":return new gt(A.value.length);case"upper":return new je(A.value.toUpperCase());case"lower":return new je(A.value.toLowerCase());case"title":return new je(ce(A.value));case"capitalize":return new je(A.value.charAt(0).toUpperCase()+A.value.slice(1));case"trim":return new je(A.value.trim());case"indent":return new je(A.value.split(`
`).map((ve,lt)=>lt===0||ve.length===0?ve:"    "+ve).join(`
`));case"string":return A;default:throw new Error(`Unknown StringValue filter: ${ie.value}`)}else if(A instanceof gt)switch(ie.value){case"abs":return new gt(Math.abs(A.value));default:throw new Error(`Unknown NumericValue filter: ${ie.value}`)}else if(A instanceof xt)switch(ie.value){case"items":return new te(Array.from(A.value.entries()).map(([ve,lt])=>new te([new je(ve),lt])));case"length":return new gt(A.value.size);default:throw new Error(`Unknown ObjectValue filter: ${ie.value}`)}throw new Error(`Cannot apply filter "${ie.value}" to type: ${A.type}`)}else if(E.filter.type==="CallExpression"){const ie=E.filter;if(ie.callee.type!=="Identifier")throw new Error(`Unknown filter: ${ie.callee.type}`);const ve=ie.callee.value;if(ve==="tojson"){const[,lt]=this.evaluateArguments(ie.args,re),Ye=lt.get("indent")??new st;if(!(Ye instanceof gt||Ye instanceof st))throw new Error("If set, indent must be a number");return new je(Bt(A,Ye.value))}if(A instanceof te){switch(ve){case"selectattr":{if(A.value.some(Wt=>!(Wt instanceof xt)))throw new Error("`selectattr` can only be applied to array of objects");if(ie.args.some(Wt=>Wt.type!=="StringLiteral"))throw new Error("arguments of `selectattr` must be strings");const[lt,Ye,$t]=ie.args.map(Wt=>this.evaluate(Wt,re));let ut;if(Ye){const Wt=re.tests.get(Ye.value);if(!Wt)throw new Error(`Unknown test: ${Ye.value}`);ut=Wt}else ut=(...Wt)=>Wt[0].__bool__().value;const ft=A.value.filter(Wt=>{const Kt=Wt.value.get(lt.value);return Kt?ut(Kt,$t):!1});return new te(ft)}case"map":{const[,lt]=this.evaluateArguments(ie.args,re);if(lt.has("attribute")){const Ye=lt.get("attribute");if(!(Ye instanceof je))throw new Error("attribute must be a string");const $t=lt.get("default"),ut=A.value.map(ft=>{if(!(ft instanceof xt))throw new Error("items in map must be an object");return ft.value.get(Ye.value)??$t??new Xe});return new te(ut)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${ve}`)}else if(A instanceof je){switch(ve){case"indent":{const[lt,Ye]=this.evaluateArguments(ie.args,re),$t=lt.at(0)??Ye.get("width")??new gt(4);if(!($t instanceof gt))throw new Error("width must be a number");const ut=lt.at(1)??Ye.get("first")??new yt(!1),ft=lt.at(2)??Ye.get("blank")??new yt(!1),Wt=A.value.split(`
`),Kt=" ".repeat($t.value),Ir=Wt.map((Er,Lr)=>!ut.value&&Lr===0||!ft.value&&Er.length===0?Er:Kt+Er);return new je(Ir.join(`
`))}}throw new Error(`Unknown StringValue filter: ${ve}`)}else throw new Error(`Cannot apply filter "${ve}" to type: ${A.type}`)}throw new Error(`Unknown filter: ${E.filter.type}`)}evaluateTestExpression(E,re){const A=this.evaluate(E.operand,re),ie=re.tests.get(E.test.value);if(!ie)throw new Error(`Unknown test: ${E.test.value}`);const ve=ie(A);return new yt(E.negate?!ve:ve)}evaluateUnaryExpression(E,re){const A=this.evaluate(E.argument,re);switch(E.operator.value){case"not":return new yt(!A.value);default:throw new SyntaxError(`Unknown operator: ${E.operator.value}`)}}evalProgram(E,re){return this.evaluateBlock(E.body,re)}evaluateBlock(E,re){let A="";for(const ie of E){const ve=this.evaluate(ie,re);ve.type!=="NullValue"&&ve.type!=="UndefinedValue"&&(A+=ve.value)}return new je(A)}evaluateIdentifier(E,re){return re.lookupVariable(E.value)}evaluateCallExpression(E,re){const[A,ie]=this.evaluateArguments(E.args,re);ie.size>0&&A.push(new Ze(ie));const ve=this.evaluate(E.callee,re);if(ve.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${ve.type}`);return ve.value(A,re)}evaluateSliceExpression(E,re,A){if(!(E instanceof te||E instanceof je))throw new Error("Slice object must be an array or string");const ie=this.evaluate(re.start,A),ve=this.evaluate(re.stop,A),lt=this.evaluate(re.step,A);if(!(ie instanceof gt||ie instanceof Xe))throw new Error("Slice start must be numeric or undefined");if(!(ve instanceof gt||ve instanceof Xe))throw new Error("Slice stop must be numeric or undefined");if(!(lt instanceof gt||lt instanceof Xe))throw new Error("Slice step must be numeric or undefined");return E instanceof te?new te(pt(E.value,ie.value,ve.value,lt.value)):new je(pt(Array.from(E.value),ie.value,ve.value,lt.value).join(""))}evaluateMemberExpression(E,re){const A=this.evaluate(E.object,re);let ie;if(E.computed){if(E.property.type==="SliceExpression")return this.evaluateSliceExpression(A,E.property,re);ie=this.evaluate(E.property,re)}else ie=new je(E.property.value);let ve;if(A instanceof xt){if(!(ie instanceof je))throw new Error(`Cannot access property with non-string: got ${ie.type}`);ve=A.value.get(ie.value)??A.builtins.get(ie.value)}else if(A instanceof te||A instanceof je)if(ie instanceof gt)ve=A.value.at(ie.value),A instanceof je&&(ve=new je(A.value.at(ie.value)));else if(ie instanceof je)ve=A.builtins.get(ie.value);else throw new Error(`Cannot access property with non-string/non-number: got ${ie.type}`);else{if(!(ie instanceof je))throw new Error(`Cannot access property with non-string: got ${ie.type}`);ve=A.builtins.get(ie.value)}return ve instanceof tt?ve:new Xe}evaluateSet(E,re){const A=this.evaluate(E.value,re);if(E.assignee.type==="Identifier"){const ie=E.assignee.value;re.setVariable(ie,A)}else if(E.assignee.type==="MemberExpression"){const ie=E.assignee,ve=this.evaluate(ie.object,re);if(!(ve instanceof xt))throw new Error("Cannot assign to member of non-object");if(ie.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");ve.value.set(ie.property.value,A)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(E.assignee)}`);return new st}evaluateIf(E,re){const A=this.evaluate(E.test,re);return this.evaluateBlock(A.__bool__().value?E.body:E.alternate,re)}evaluateFor(E,re){const A=new Ge(re);let ie,ve;if(E.iterable.type==="SelectExpression"){const ft=E.iterable;ve=this.evaluate(ft.iterable,A),ie=ft.test}else ve=this.evaluate(E.iterable,A);if(!(ve instanceof te))throw new Error(`Expected iterable type in for loop: got ${ve.type}`);const lt=[],Ye=[];for(let ft=0;ft<ve.value.length;++ft){const Wt=new Ge(A),Kt=ve.value[ft];let Ir;if(E.loopvar.type==="Identifier")Ir=Er=>Er.setVariable(E.loopvar.value,Kt);else if(E.loopvar.type==="TupleLiteral"){const Er=E.loopvar;if(Kt.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${Kt.type}`);const Lr=Kt;if(Er.value.length!==Lr.value.length)throw new Error(`Too ${Er.value.length>Lr.value.length?"few":"many"} items to unpack`);Ir=Cr=>{for(let Hr=0;Hr<Er.value.length;++Hr){if(Er.value[Hr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Er.value[Hr].type}`);Cr.setVariable(Er.value[Hr].value,Lr.value[Hr])}}}else throw new Error(`Invalid loop variable(s): ${E.loopvar.type}`);ie&&(Ir(Wt),!this.evaluate(ie,Wt).__bool__().value)||(lt.push(Kt),Ye.push(Ir))}let $t="",ut=!0;for(let ft=0;ft<lt.length;++ft){const Wt=new Map([["index",new gt(ft+1)],["index0",new gt(ft)],["revindex",new gt(lt.length-ft)],["revindex0",new gt(lt.length-ft-1)],["first",new yt(ft===0)],["last",new yt(ft===lt.length-1)],["length",new gt(lt.length)],["previtem",ft>0?lt[ft-1]:new Xe],["nextitem",ft<lt.length-1?lt[ft+1]:new Xe]]);A.setVariable("loop",new xt(Wt)),Ye[ft](A);const Kt=this.evaluateBlock(E.body,A);$t+=Kt.value,ut=!1}if(ut){const ft=this.evaluateBlock(E.defaultBlock,A);$t+=ft.value}return new je($t)}evaluateMacro(E,re){return re.setVariable(E.name.value,new rt((A,ie)=>{const ve=new Ge(ie);A=A.slice();let lt;A.at(-1)?.type==="KeywordArgumentsValue"&&(lt=A.pop());for(let Ye=0;Ye<E.args.length;++Ye){const $t=E.args[Ye],ut=A[Ye];if($t.type==="Identifier"){const ft=$t;if(!ut)throw new Error(`Missing positional argument: ${ft.value}`);ve.setVariable(ft.value,ut)}else if($t.type==="KeywordArgumentExpression"){const ft=$t,Wt=ut??lt?.value.get(ft.key.value)??this.evaluate(ft.value,ve);ve.setVariable(ft.key.value,Wt)}else throw new Error(`Unknown argument type: ${$t.type}`)}return this.evaluateBlock(E.body,ve)})),new st}evaluate(E,re){if(E===void 0)return new Xe;switch(E.type){case"Program":return this.evalProgram(E,re);case"Set":return this.evaluateSet(E,re);case"If":return this.evaluateIf(E,re);case"For":return this.evaluateFor(E,re);case"Macro":return this.evaluateMacro(E,re);case"NumericLiteral":return new gt(Number(E.value));case"StringLiteral":return new je(E.value);case"BooleanLiteral":return new yt(E.value);case"ArrayLiteral":return new te(E.value.map(A=>this.evaluate(A,re)));case"TupleLiteral":return new Re(E.value.map(A=>this.evaluate(A,re)));case"ObjectLiteral":{const A=new Map;for(const[ie,ve]of E.value){const lt=this.evaluate(ie,re);if(!(lt instanceof je))throw new Error(`Object keys must be strings: got ${lt.type}`);A.set(lt.value,this.evaluate(ve,re))}return new xt(A)}case"Identifier":return this.evaluateIdentifier(E,re);case"CallExpression":return this.evaluateCallExpression(E,re);case"MemberExpression":return this.evaluateMemberExpression(E,re);case"UnaryExpression":return this.evaluateUnaryExpression(E,re);case"BinaryExpression":return this.evaluateBinaryExpression(E,re);case"FilterExpression":return this.evaluateFilterExpression(E,re);case"TestExpression":return this.evaluateTestExpression(E,re);default:throw new SyntaxError(`Unknown node type: ${E.type}`)}}};function bt(E){switch(typeof E){case"number":return new gt(E);case"string":return new je(E);case"boolean":return new yt(E);case"undefined":return new Xe;case"object":return E===null?new st:Array.isArray(E)?new te(E.map(bt)):new xt(new Map(Object.entries(E).map(([re,A])=>[re,bt(A)])));case"function":return new rt((re,A)=>{const ie=E(...re.map(ve=>ve.value))??null;return bt(ie)});default:throw new Error(`Cannot convert to runtime value: ${E}`)}}function Bt(E,re,A){const ie=A??0;switch(E.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(E.value);case"ArrayValue":case"ObjectValue":{const ve=re?" ".repeat(re):"",lt=`
`+ve.repeat(ie),Ye=lt+ve;if(E.type==="ArrayValue"){const $t=E.value.map(ut=>Bt(ut,re,ie+1));return re?`[${Ye}${$t.join(`,${Ye}`)}${lt}]`:`[${$t.join(", ")}]`}else{const $t=Array.from(E.value.entries()).map(([ut,ft])=>{const Wt=`"${ut}": ${Bt(ft,re,ie+1)}`;return re?`${Ye}${Wt}`:Wt});return re?`{${$t.join(",")}${lt}}`:`{${$t.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${E.type}`)}}var Ct=class{parsed;constructor(E){const re=q(E,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=ke(re)}render(E){const re=new Ge;re.set("false",!1),re.set("true",!0),re.set("raise_exception",ve=>{throw new Error(ve)}),re.set("range",He);for(const[ve,lt]of Object.entries(E))re.set(ve,lt);return new mt(re).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{registerBackend:()=>$e,resolveBackendAndExecutionProviders:()=>Pe});const D=new Map,ge=[],$e=(Q,L,W)=>{if(L&&typeof L.init=="function"&&typeof L.createInferenceSessionHandler=="function"){const q=D.get(Q);if(q===void 0)D.set(Q,{backend:L,priority:W});else{if(q.priority>W)return;if(q.priority===W&&q.backend!==L)throw new Error(`cannot register backend "${Q}" using priority ${W}`)}if(W>=0){const ee=ge.indexOf(Q);ee!==-1&&ge.splice(ee,1);for(let de=0;de<ge.length;de++)if(D.get(ge[de]).priority<=W){ge.splice(de,0,Q);return}ge.push(Q)}return}throw new TypeError("not a valid backend")},Oe=async Q=>{const L=D.get(Q);if(!L)return"backend not found.";if(L.initialized)return L.backend;if(L.aborted)return L.error;{const W=!!L.initPromise;try{return W||(L.initPromise=L.backend.init(Q)),await L.initPromise,L.initialized=!0,L.backend}catch(q){return W||(L.error=`${q}`,L.aborted=!0),L.error}finally{delete L.initPromise}}},Pe=async Q=>{const L=Q.executionProviders||[],W=L.map(j=>typeof j=="string"?j:j.name),q=W.length===0?ge:W;let ee;const de=[],Ce=new Set;for(const j of q){const oe=await Oe(j);typeof oe=="string"?de.push({name:j,err:oe}):(ee||(ee=oe),ee===oe&&Ce.add(j))}if(!ee)throw new Error(`no available backend found. ERR: ${de.map(j=>`[${j.name}] ${j.err}`).join(", ")}`);for(const{name:j,err:oe}of de)W.includes(j)&&console.warn(`removing requested execution provider "${j}" from session options because it is not available: ${oe}`);const xe=L.filter(j=>Ce.has(typeof j=="string"?j:j.name));return[ee,new Proxy(Q,{get:(j,oe)=>oe==="executionProviders"?xe:Reflect.get(j,oe)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{registerBackend:()=>D.registerBackend});var D=N("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{env:()=>$e});var D=N("./node_modules/onnxruntime-common/dist/esm/version.js");let ge="warning";const $e={wasm:{},webgl:{},webgpu:{},versions:{common:D.version},set logLevel(Oe){if(Oe!==void 0){if(typeof Oe!="string"||["verbose","info","warning","error","fatal"].indexOf(Oe)===-1)throw new Error(`Unsupported logging level: ${Oe}`);ge=Oe}},get logLevel(){return ge}};Object.defineProperty($e,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{env:()=>ge});var D=N("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const ge=D.env},"./node_modules/onnxruntime-common/dist/esm/index.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{InferenceSession:()=>$e.InferenceSession,TRACE:()=>Pe.TRACE,TRACE_FUNC_BEGIN:()=>Pe.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>Pe.TRACE_FUNC_END,Tensor:()=>Oe.Tensor,TrainingSession:()=>Q.TrainingSession,env:()=>ge.env,registerBackend:()=>D.registerBackend});var D=N("./node_modules/onnxruntime-common/dist/esm/backend.js"),ge=N("./node_modules/onnxruntime-common/dist/esm/env.js"),$e=N("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),Oe=N("./node_modules/onnxruntime-common/dist/esm/tensor.js");N("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),N("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var Pe=N("./node_modules/onnxruntime-common/dist/esm/trace.js");N("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),N("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var Q=N("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{InferenceSession:()=>Oe});var D=N("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),ge=N("./node_modules/onnxruntime-common/dist/esm/tensor.js"),$e=N("./node_modules/onnxruntime-common/dist/esm/trace.js");class Oe{constructor(Q){this.handler=Q}async run(Q,L,W){(0,$e.TRACE_FUNC_BEGIN)();const q={};let ee={};if(typeof Q!="object"||Q===null||Q instanceof ge.Tensor||Array.isArray(Q))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let de=!0;if(typeof L=="object"){if(L===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(L instanceof ge.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(L)){if(L.length===0)throw new TypeError("'fetches' cannot be an empty array.");de=!1;for(const j of L){if(typeof j!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(j)===-1)throw new RangeError(`'fetches' contains invalid output name: ${j}.`);q[j]=null}if(typeof W=="object"&&W!==null)ee=W;else if(typeof W<"u")throw new TypeError("'options' must be an object.")}else{let j=!1;const oe=Object.getOwnPropertyNames(L);for(const le of this.outputNames)if(oe.indexOf(le)!==-1){const U=L[le];(U===null||U instanceof ge.Tensor)&&(j=!0,de=!1,q[le]=U)}if(j){if(typeof W=="object"&&W!==null)ee=W;else if(typeof W<"u")throw new TypeError("'options' must be an object.")}else ee=L}}else if(typeof L<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const j of this.inputNames)if(typeof Q[j]>"u")throw new Error(`input '${j}' is missing in 'feeds'.`);if(de)for(const j of this.outputNames)q[j]=null;const Ce=await this.handler.run(Q,q,ee),xe={};for(const j in Ce)if(Object.hasOwnProperty.call(Ce,j)){const oe=Ce[j];oe instanceof ge.Tensor?xe[j]=oe:xe[j]=new ge.Tensor(oe.type,oe.data,oe.dims)}return(0,$e.TRACE_FUNC_END)(),xe}async release(){return this.handler.dispose()}static async create(Q,L,W,q){(0,$e.TRACE_FUNC_BEGIN)();let ee,de={};if(typeof Q=="string"){if(ee=Q,typeof L=="object"&&L!==null)de=L;else if(typeof L<"u")throw new TypeError("'options' must be an object.")}else if(Q instanceof Uint8Array){if(ee=Q,typeof L=="object"&&L!==null)de=L;else if(typeof L<"u")throw new TypeError("'options' must be an object.")}else if(Q instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&Q instanceof SharedArrayBuffer){const oe=Q;let le=0,U=Q.byteLength;if(typeof L=="object"&&L!==null)de=L;else if(typeof L=="number"){if(le=L,!Number.isSafeInteger(le))throw new RangeError("'byteOffset' must be an integer.");if(le<0||le>=oe.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${oe.byteLength}).`);if(U=Q.byteLength-le,typeof W=="number"){if(U=W,!Number.isSafeInteger(U))throw new RangeError("'byteLength' must be an integer.");if(U<=0||le+U>oe.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${oe.byteLength-le}].`);if(typeof q=="object"&&q!==null)de=q;else if(typeof q<"u")throw new TypeError("'options' must be an object.")}else if(typeof W<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof L<"u")throw new TypeError("'options' must be an object.");ee=new Uint8Array(oe,le,U)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[Ce,xe]=await(0,D.resolveBackendAndExecutionProviders)(de),j=await Ce.createInferenceSessionHandler(ee,xe);return(0,$e.TRACE_FUNC_END)(),new Oe(j)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{InferenceSession:()=>ge});var D=N("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js");const ge=D.InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(Ue,Me,N)=>{N.r(Me)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(Ue,Me,N)=>{N.r(Me)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{tensorToDataURL:()=>D,tensorToImageData:()=>ge});const D=($e,Oe)=>{const Pe=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);Pe.width=$e.dims[3],Pe.height=$e.dims[2];const Q=Pe.getContext("2d");if(Q!=null){let L,W;Oe?.tensorLayout!==void 0&&Oe.tensorLayout==="NHWC"?(L=$e.dims[2],W=$e.dims[3]):(L=$e.dims[3],W=$e.dims[2]);const q=Oe?.format!==void 0?Oe.format:"RGB",ee=Oe?.norm;let de,Ce;ee===void 0||ee.mean===void 0?de=[255,255,255,255]:typeof ee.mean=="number"?de=[ee.mean,ee.mean,ee.mean,ee.mean]:(de=[ee.mean[0],ee.mean[1],ee.mean[2],0],ee.mean[3]!==void 0&&(de[3]=ee.mean[3])),ee===void 0||ee.bias===void 0?Ce=[0,0,0,0]:typeof ee.bias=="number"?Ce=[ee.bias,ee.bias,ee.bias,ee.bias]:(Ce=[ee.bias[0],ee.bias[1],ee.bias[2],0],ee.bias[3]!==void 0&&(Ce[3]=ee.bias[3]));const xe=W*L;let j=0,oe=xe,le=xe*2,U=-1;q==="RGBA"?(j=0,oe=xe,le=xe*2,U=xe*3):q==="RGB"?(j=0,oe=xe,le=xe*2):q==="RBG"&&(j=0,le=xe,oe=xe*2);for(let H=0;H<W;H++)for(let R=0;R<L;R++){const P=($e.data[j++]-Ce[0])*de[0],O=($e.data[oe++]-Ce[1])*de[1],T=($e.data[le++]-Ce[2])*de[2],fe=U===-1?255:($e.data[U++]-Ce[3])*de[3];Q.fillStyle="rgba("+P+","+O+","+T+","+fe+")",Q.fillRect(R,H,1,1)}if("toDataURL"in Pe)return Pe.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},ge=($e,Oe)=>{const Pe=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let Q;if(Pe!=null){let L,W,q;Oe?.tensorLayout!==void 0&&Oe.tensorLayout==="NHWC"?(L=$e.dims[2],W=$e.dims[1],q=$e.dims[3]):(L=$e.dims[3],W=$e.dims[2],q=$e.dims[1]);const ee=Oe!==void 0&&Oe.format!==void 0?Oe.format:"RGB",de=Oe?.norm;let Ce,xe;de===void 0||de.mean===void 0?Ce=[255,255,255,255]:typeof de.mean=="number"?Ce=[de.mean,de.mean,de.mean,de.mean]:(Ce=[de.mean[0],de.mean[1],de.mean[2],255],de.mean[3]!==void 0&&(Ce[3]=de.mean[3])),de===void 0||de.bias===void 0?xe=[0,0,0,0]:typeof de.bias=="number"?xe=[de.bias,de.bias,de.bias,de.bias]:(xe=[de.bias[0],de.bias[1],de.bias[2],0],de.bias[3]!==void 0&&(xe[3]=de.bias[3]));const j=W*L;if(Oe!==void 0&&(Oe.format!==void 0&&q===4&&Oe.format!=="RGBA"||q===3&&Oe.format!=="RGB"&&Oe.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const oe=4;let le=0,U=1,H=2,R=3,P=0,O=j,T=j*2,fe=-1;ee==="RGBA"?(P=0,O=j,T=j*2,fe=j*3):ee==="RGB"?(P=0,O=j,T=j*2):ee==="RBG"&&(P=0,T=j,O=j*2),Q=Pe.createImageData(L,W);for(let ye=0;ye<W*L;le+=oe,U+=oe,H+=oe,R+=oe,ye++)Q.data[le]=($e.data[P++]-xe[0])*Ce[0],Q.data[U]=($e.data[O++]-xe[1])*Ce[1],Q.data[H]=($e.data[T++]-xe[2])*Ce[2],Q.data[R]=fe===-1?255:($e.data[fe++]-xe[3])*Ce[3]}else throw new Error("Can not access image data");return Q}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(Ue,Me,N)=>{N.r(Me)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{bufferToTensor:()=>ge,tensorFromGpuBuffer:()=>Pe,tensorFromImage:()=>$e,tensorFromPinnedBuffer:()=>Q,tensorFromTexture:()=>Oe});var D=N("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const ge=(L,W)=>{if(L===void 0)throw new Error("Image buffer must be defined");if(W.height===void 0||W.width===void 0)throw new Error("Image height and width must be defined");if(W.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:q,width:ee}=W,de=W.norm??{mean:255,bias:0};let Ce,xe;typeof de.mean=="number"?Ce=[de.mean,de.mean,de.mean,de.mean]:Ce=[de.mean[0],de.mean[1],de.mean[2],de.mean[3]??255],typeof de.bias=="number"?xe=[de.bias,de.bias,de.bias,de.bias]:xe=[de.bias[0],de.bias[1],de.bias[2],de.bias[3]??0];const j=W.format!==void 0?W.format:"RGBA",oe=W.tensorFormat!==void 0&&W.tensorFormat!==void 0?W.tensorFormat:"RGB",le=q*ee,U=oe==="RGBA"?new Float32Array(le*4):new Float32Array(le*3);let H=4,R=0,P=1,O=2,T=3,fe=0,ye=le,Ee=le*2,K=-1;j==="RGB"&&(H=3,R=0,P=1,O=2,T=-1),oe==="RGBA"?K=le*3:oe==="RBG"?(fe=0,Ee=le,ye=le*2):oe==="BGR"&&(Ee=0,ye=le,fe=le*2);for(let ot=0;ot<le;ot++,R+=H,O+=H,P+=H,T+=H)U[fe++]=(L[R]+xe[0])/Ce[0],U[ye++]=(L[P]+xe[1])/Ce[1],U[Ee++]=(L[O]+xe[2])/Ce[2],K!==-1&&T!==-1&&(U[K++]=(L[T]+xe[3])/Ce[3]);return oe==="RGBA"?new D.Tensor("float32",U,[1,4,q,ee]):new D.Tensor("float32",U,[1,3,q,ee])},$e=async(L,W)=>{const q=typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement,ee=typeof ImageData<"u"&&L instanceof ImageData,de=typeof ImageBitmap<"u"&&L instanceof ImageBitmap,Ce=typeof L=="string";let xe,j=W??{};const oe=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},le=U=>U instanceof HTMLCanvasElement||U instanceof OffscreenCanvas?U.getContext("2d"):null;if(q){const U=oe();U.width=L.width,U.height=L.height;const H=le(U);if(H!=null){let R=L.height,P=L.width;if(W!==void 0&&W.resizedHeight!==void 0&&W.resizedWidth!==void 0&&(R=W.resizedHeight,P=W.resizedWidth),W!==void 0){if(j=W,W.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");j.tensorFormat="RGBA",j.height=R,j.width=P}else j.tensorFormat="RGBA",j.height=R,j.width=P;H.drawImage(L,0,0),xe=H.getImageData(0,0,P,R).data}else throw new Error("Can not access image data")}else if(ee){let U,H;if(W!==void 0&&W.resizedWidth!==void 0&&W.resizedHeight!==void 0?(U=W.resizedHeight,H=W.resizedWidth):(U=L.height,H=L.width),W!==void 0&&(j=W),j.format="RGBA",j.height=U,j.width=H,W!==void 0){const R=oe();R.width=H,R.height=U;const P=le(R);if(P!=null)P.putImageData(L,0,0),xe=P.getImageData(0,0,H,U).data;else throw new Error("Can not access image data")}else xe=L.data}else if(de){if(W===void 0)throw new Error("Please provide image config with format for Imagebitmap");const U=oe();U.width=L.width,U.height=L.height;const H=le(U);if(H!=null){const R=L.height,P=L.width;return H.drawImage(L,0,0,P,R),xe=H.getImageData(0,0,P,R).data,j.height=R,j.width=P,ge(xe,j)}else throw new Error("Can not access image data")}else{if(Ce)return new Promise((U,H)=>{const R=oe(),P=le(R);if(!L||!P)return H();const O=new Image;O.crossOrigin="Anonymous",O.src=L,O.onload=()=>{R.width=O.width,R.height=O.height,P.drawImage(O,0,0,R.width,R.height);const T=P.getImageData(0,0,R.width,R.height);j.height=R.height,j.width=R.width,U(ge(T.data,j))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(xe!==void 0)return ge(xe,j);throw new Error("Input data provided is not supported - aborted tensor creation")},Oe=(L,W)=>{const{width:q,height:ee,download:de,dispose:Ce}=W,xe=[1,ee,q,4];return new D.Tensor({location:"texture",type:"float32",texture:L,dims:xe,download:de,dispose:Ce})},Pe=(L,W)=>{const{dataType:q,dims:ee,download:de,dispose:Ce}=W;return new D.Tensor({location:"gpu-buffer",type:q??"float32",gpuBuffer:L,dims:ee,download:de,dispose:Ce})},Q=(L,W,q)=>new D.Tensor({location:"cpu-pinned",type:L,data:W,dims:q??[W.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(Ue,Me,N)=>{N.r(Me)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>ge,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>D,checkTypedArray:()=>Oe});const D=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),ge=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let $e=!1;const Oe=()=>{if(!$e){$e=!0;const Pe=typeof BigInt64Array<"u"&&BigInt64Array.from,Q=typeof BigUint64Array<"u"&&BigUint64Array.from,L=typeof Float16Array<"u"&&Float16Array.from;Pe&&(D.set("int64",BigInt64Array),ge.set(BigInt64Array,"int64")),Q&&(D.set("uint64",BigUint64Array),ge.set(BigUint64Array,"uint64")),L?(D.set("float16",Float16Array),ge.set(Float16Array,"float16")):D.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{Tensor:()=>Pe});var D=N("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),ge=N("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),$e=N("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),Oe=N("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class Pe{constructor(L,W,q){(0,$e.checkTypedArray)();let ee,de;if(typeof L=="object"&&"location"in L)switch(this.dataLocation=L.location,ee=L.type,de=L.dims,L.location){case"cpu-pinned":{const xe=$e.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(ee);if(!xe)throw new TypeError(`unsupported type "${ee}" to create tensor from pinned buffer`);if(!(L.data instanceof xe))throw new TypeError(`buffer should be of type ${xe.name}`);this.cpuData=L.data;break}case"texture":{if(ee!=="float32")throw new TypeError(`unsupported type "${ee}" to create tensor from texture`);this.gpuTextureData=L.texture,this.downloader=L.download,this.disposer=L.dispose;break}case"gpu-buffer":{if(ee!=="float32"&&ee!=="float16"&&ee!=="int32"&&ee!=="int64"&&ee!=="uint32"&&ee!=="uint8"&&ee!=="bool")throw new TypeError(`unsupported type "${ee}" to create tensor from gpu buffer`);this.gpuBufferData=L.gpuBuffer,this.downloader=L.download,this.disposer=L.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let xe,j;if(typeof L=="string")if(ee=L,j=q,L==="string"){if(!Array.isArray(W))throw new TypeError("A string tensor's data must be a string array.");xe=W}else{const oe=$e.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(L);if(oe===void 0)throw new TypeError(`Unsupported tensor type: ${L}.`);if(Array.isArray(W)){if(L==="float16"&&oe===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");L==="uint64"||L==="int64"?xe=oe.from(W,BigInt):xe=oe.from(W)}else if(W instanceof oe)xe=W;else throw new TypeError(`A ${ee} tensor's data must be type of ${oe}`)}else if(j=W,Array.isArray(L)){if(L.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const oe=typeof L[0];if(oe==="string")ee="string",xe=L;else if(oe==="boolean")ee="bool",xe=Uint8Array.from(L);else throw new TypeError(`Invalid element type of data array: ${oe}.`)}else{const oe=$e.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(L.constructor);if(oe===void 0)throw new TypeError(`Unsupported type for tensor data: ${L.constructor}.`);ee=oe,xe=L}if(j===void 0)j=[xe.length];else if(!Array.isArray(j))throw new TypeError("A tensor's dims must be a number array");de=j,this.cpuData=xe,this.dataLocation="cpu"}const Ce=(0,Oe.calculateSize)(de);if(this.cpuData&&Ce!==this.cpuData.length)throw new Error(`Tensor's size(${Ce}) does not match data length(${this.cpuData.length}).`);this.type=ee,this.dims=de,this.size=Ce}static async fromImage(L,W){return(0,ge.tensorFromImage)(L,W)}static fromTexture(L,W){return(0,ge.tensorFromTexture)(L,W)}static fromGpuBuffer(L,W){return(0,ge.tensorFromGpuBuffer)(L,W)}static fromPinnedBuffer(L,W,q){return(0,ge.tensorFromPinnedBuffer)(L,W,q)}toDataURL(L){return(0,D.tensorToDataURL)(this,L)}toImageData(L){return(0,D.tensorToImageData)(this,L)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(L){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const W=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=W,L&&this.disposer&&(this.disposer(),this.disposer=void 0),W}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(L){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,Oe.tensorReshape)(this,L)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{calculateSize:()=>ge,tensorReshape:()=>$e});var D=N("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const ge=Oe=>{let Pe=1;for(let Q=0;Q<Oe.length;Q++){const L=Oe[Q];if(typeof L!="number"||!Number.isSafeInteger(L))throw new TypeError(`dims[${Q}] must be an integer, got: ${L}`);if(L<0)throw new RangeError(`dims[${Q}] must be a non-negative integer, got: ${L}`);Pe*=L}return Pe},$e=(Oe,Pe)=>{switch(Oe.location){case"cpu":return new D.Tensor(Oe.type,Oe.data,Pe);case"cpu-pinned":return new D.Tensor({location:"cpu-pinned",data:Oe.data,type:Oe.type,dims:Pe});case"texture":return new D.Tensor({location:"texture",texture:Oe.texture,type:Oe.type,dims:Pe});case"gpu-buffer":return new D.Tensor({location:"gpu-buffer",gpuBuffer:Oe.gpuBuffer,type:Oe.type,dims:Pe});default:throw new Error(`tensorReshape: tensor location ${Oe.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{Tensor:()=>ge});var D=N("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const ge=D.Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{TRACE:()=>ge,TRACE_FUNC_BEGIN:()=>Oe,TRACE_FUNC_END:()=>Pe});var D=N("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const ge=(Q,L)=>{(typeof D.env.trace>"u"?!D.env.wasm.trace:!D.env.trace)||console.timeStamp(`${Q}::ORT::${L}`)},$e=(Q,L)=>{const W=new Error().stack?.split(/\r\n|\r|\n/g)||[];let q=!1;for(let ee=0;ee<W.length;ee++){if(q&&!W[ee].includes("TRACE_FUNC")){let de=`FUNC_${Q}::${W[ee].trim().split(" ")[1]}`;L&&(de+=`::${L}`),ge("CPU",de);return}W[ee].includes("TRACE_FUNC")&&(q=!0)}},Oe=Q=>{(typeof D.env.trace>"u"?!D.env.wasm.trace:!D.env.trace)||$e("BEGIN",Q)},Pe=Q=>{(typeof D.env.trace>"u"?!D.env.wasm.trace:!D.env.trace)||$e("END",Q)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{TrainingSession:()=>Oe});var D=N("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),ge=N("./node_modules/onnxruntime-common/dist/esm/tensor.js");const $e="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";class Oe{constructor(Q,L,W){this.handler=Q,this.hasOptimizerModel=L,this.hasEvalModel=W}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(Q,L){const W=Q.evalModel||"",q=Q.optimizerModel||"",ee=L||{},[de,Ce]=await(0,D.resolveBackendAndExecutionProviders)(ee);if(de.createTrainingSessionHandler){const xe=await de.createTrainingSessionHandler(Q.checkpointState,Q.trainModel,W,q,Ce);return new Oe(xe,!!Q.optimizerModel,!!Q.evalModel)}else throw new Error($e)}typeNarrowingForRunStep(Q,L,W,q,ee){const de={};let Ce={};if(typeof W!="object"||W===null||W instanceof ge.Tensor||Array.isArray(W))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let xe=!0;if(typeof q=="object"){if(q===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(q instanceof ge.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(q)){if(q.length===0)throw new TypeError("'fetches' cannot be an empty array.");xe=!1;for(const j of q){if(typeof j!="string")throw new TypeError("'fetches' must be a string array or an object.");if(L.indexOf(j)===-1)throw new RangeError(`'fetches' contains invalid output name: ${j}.`);de[j]=null}if(typeof ee=="object"&&ee!==null)Ce=ee;else if(typeof ee<"u")throw new TypeError("'options' must be an object.")}else{let j=!1;const oe=Object.getOwnPropertyNames(q);for(const le of L)if(oe.indexOf(le)!==-1){const U=q[le];(U===null||U instanceof ge.Tensor)&&(j=!0,xe=!1,de[le]=U)}if(j){if(typeof ee=="object"&&ee!==null)Ce=ee;else if(typeof ee<"u")throw new TypeError("'options' must be an object.")}else Ce=q}}else if(typeof q<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const j of Q)if(typeof W[j]>"u")throw new Error(`input '${j}' is missing in 'feeds'.`);if(xe)for(const j of L)de[j]=null;return[de,Ce]}convertHandlerReturnTypeToMapOfTensors(Q){const L={};for(const W in Q)if(Object.hasOwnProperty.call(Q,W)){const q=Q[W];q instanceof ge.Tensor?L[W]=q:L[W]=new ge.Tensor(q.type,q.data,q.dims)}return L}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(Q,L,W){const[q,ee]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,Q,L,W),de=await this.handler.runTrainStep(Q,q,ee);return this.convertHandlerReturnTypeToMapOfTensors(de)}async runOptimizerStep(Q){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(Q||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(Q,L,W){if(this.hasEvalModel){const[q,ee]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,Q,L,W),de=await this.handler.runEvalStep(Q,q,ee);return this.convertHandlerReturnTypeToMapOfTensors(de)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(Q=!0){return this.handler.getParametersSize(Q)}async loadParametersBuffer(Q,L=!0){const W=await this.getParametersSize(L);if(Q.length!==4*W)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(Q,L)}async getContiguousParameters(Q=!0){return this.handler.getContiguousParameters(Q)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{TrainingSession:()=>ge});var D=N("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js");const ge=D.TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{version:()=>D});const D="1.19.2"},"./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs":(Ue,Me,N)=>{N.r(Me),N.d(Me,{InferenceSession:()=>Ct,TRACE:()=>rt,TRACE_FUNC_BEGIN:()=>Xe,TRACE_FUNC_END:()=>Ge,Tensor:()=>te,TrainingSession:()=>ut,default:()=>lm,env:()=>T,registerBackend:()=>Ce});/*!
 * ONNX Runtime Web v1.21.0-dev.20241024-d9ca84ef96
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var D=Object.defineProperty,ge=Object.getOwnPropertyDescriptor,$e=Object.getOwnPropertyNames,Oe=Object.prototype.hasOwnProperty,Pe=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),Q=(e,t)=>()=>(e&&(t=e(e=0)),t),L=(e,t)=>{for(var r in t)D(e,r,{get:t[r],enumerable:!0})},W=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of $e(t))!Oe.call(e,i)&&i!==r&&D(e,i,{get:()=>t[i],enumerable:!(n=ge(t,i))||n.enumerable});return e},q=e=>W(D({},"__esModule",{value:!0}),e),ee,de,Ce,xe,j,oe=Q(()=>{ee=new Map,de=[],Ce=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let n=ee.get(e);if(n===void 0)ee.set(e,{backend:t,priority:r});else{if(n.priority>r)return;if(n.priority===r&&n.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let i=de.indexOf(e);i!==-1&&de.splice(i,1);for(let s=0;s<de.length;s++)if(ee.get(de[s]).priority<=r){de.splice(s,0,e);return}de.push(e)}return}throw new TypeError("not a valid backend")},xe=async e=>{let t=ee.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(n){return r||(t.error=`${n}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},j=async e=>{let t=e.executionProviders||[],r=t.map(c=>typeof c=="string"?c:c.name),n=r.length===0?de:r,i,s=[],o=new Set;for(let c of n){let h=await xe(c);typeof h=="string"?s.push({name:c,err:h}):(i||(i=h),i===h&&o.add(c))}if(!i)throw new Error(`no available backend found. ERR: ${s.map(c=>`[${c.name}] ${c.err}`).join(", ")}`);for(let{name:c,err:h}of s)r.includes(c)&&console.warn(`removing requested execution provider "${c}" from session options because it is not available: ${h}`);let u=t.filter(c=>o.has(typeof c=="string"?c:c.name));return[i,new Proxy(e,{get:(c,h)=>h==="executionProviders"?u:Reflect.get(c,h)})]}}),le=Q(()=>{oe()}),U,H=Q(()=>{U="1.20.0-dev.20241016-2b8fc5529b"}),R,P,O=Q(()=>{H(),R="warning",P={wasm:{},webgl:{},webgpu:{},versions:{common:U},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);R=e}},get logLevel(){return R}},Object.defineProperty(P,"logLevel",{enumerable:!0})}),T,fe=Q(()=>{O(),T=P}),ye,Ee,K=Q(()=>{ye=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let n=r.getContext("2d");if(n!=null){let i,s;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],s=e.dims[3]):(i=e.dims[3],s=e.dims[2]);let o=t?.format!==void 0?t.format:"RGB",u=t?.norm,c,h;u===void 0||u.mean===void 0?c=[255,255,255,255]:typeof u.mean=="number"?c=[u.mean,u.mean,u.mean,u.mean]:(c=[u.mean[0],u.mean[1],u.mean[2],0],u.mean[3]!==void 0&&(c[3]=u.mean[3])),u===void 0||u.bias===void 0?h=[0,0,0,0]:typeof u.bias=="number"?h=[u.bias,u.bias,u.bias,u.bias]:(h=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(h[3]=u.bias[3]));let y=s*i,l=0,x=y,k=y*2,S=-1;o==="RGBA"?(l=0,x=y,k=y*2,S=y*3):o==="RGB"?(l=0,x=y,k=y*2):o==="RBG"&&(l=0,k=y,x=y*2);for(let C=0;C<s;C++)for(let J=0;J<i;J++){let Z=(e.data[l++]-h[0])*c[0],F=(e.data[x++]-h[1])*c[1],ne=(e.data[k++]-h[2])*c[2],ue=S===-1?255:(e.data[S++]-h[3])*c[3];n.fillStyle="rgba("+Z+","+F+","+ne+","+ue+")",n.fillRect(J,C,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Ee=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),n;if(r!=null){let i,s,o;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],s=e.dims[1],o=e.dims[3]):(i=e.dims[3],s=e.dims[2],o=e.dims[1]);let u=t!==void 0&&t.format!==void 0?t.format:"RGB",c=t?.norm,h,y;c===void 0||c.mean===void 0?h=[255,255,255,255]:typeof c.mean=="number"?h=[c.mean,c.mean,c.mean,c.mean]:(h=[c.mean[0],c.mean[1],c.mean[2],255],c.mean[3]!==void 0&&(h[3]=c.mean[3])),c===void 0||c.bias===void 0?y=[0,0,0,0]:typeof c.bias=="number"?y=[c.bias,c.bias,c.bias,c.bias]:(y=[c.bias[0],c.bias[1],c.bias[2],0],c.bias[3]!==void 0&&(y[3]=c.bias[3]));let l=s*i;if(t!==void 0&&(t.format!==void 0&&o===4&&t.format!=="RGBA"||o===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let x=4,k=0,S=1,C=2,J=3,Z=0,F=l,ne=l*2,ue=-1;u==="RGBA"?(Z=0,F=l,ne=l*2,ue=l*3):u==="RGB"?(Z=0,F=l,ne=l*2):u==="RBG"&&(Z=0,ne=l,F=l*2),n=r.createImageData(i,s);for(let we=0;we<s*i;k+=x,S+=x,C+=x,J+=x,we++)n.data[k]=(e.data[Z++]-y[0])*h[0],n.data[S]=(e.data[F++]-y[1])*h[1],n.data[C]=(e.data[ne++]-y[2])*h[2],n.data[J]=ue===-1?255:(e.data[ue++]-y[3])*h[3]}else throw new Error("Can not access image data");return n}}),Ae,ot,Qe,ct,Te,X,be=Q(()=>{Ze(),Ae=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:n}=t,i=t.norm??{mean:255,bias:0},s,o;typeof i.mean=="number"?s=[i.mean,i.mean,i.mean,i.mean]:s=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?o=[i.bias,i.bias,i.bias,i.bias]:o=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let u=t.format!==void 0?t.format:"RGBA",c=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",h=r*n,y=c==="RGBA"?new Float32Array(h*4):new Float32Array(h*3),l=4,x=0,k=1,S=2,C=3,J=0,Z=h,F=h*2,ne=-1;u==="RGB"&&(l=3,x=0,k=1,S=2,C=-1),c==="RGBA"?ne=h*3:c==="RBG"?(J=0,F=h,Z=h*2):c==="BGR"&&(F=0,Z=h,J=h*2);for(let ue=0;ue<h;ue++,x+=l,S+=l,k+=l,C+=l)y[J++]=(e[x]+o[0])/s[0],y[Z++]=(e[k]+o[1])/s[1],y[F++]=(e[S]+o[2])/s[2],ne!==-1&&C!==-1&&(y[ne++]=(e[C]+o[3])/s[3]);return c==="RGBA"?new xt("float32",y,[1,4,r,n]):new xt("float32",y,[1,3,r,n])},ot=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,n=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,s=typeof e=="string",o,u=t??{},c=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},h=y=>typeof HTMLCanvasElement<"u"&&y instanceof HTMLCanvasElement||y instanceof OffscreenCanvas?y.getContext("2d"):null;if(r){let y=c();y.width=e.width,y.height=e.height;let l=h(y);if(l!=null){let x=e.height,k=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(x=t.resizedHeight,k=t.resizedWidth),t!==void 0){if(u=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");u.tensorFormat="RGBA",u.height=x,u.width=k}else u.tensorFormat="RGBA",u.height=x,u.width=k;l.drawImage(e,0,0),o=l.getImageData(0,0,k,x).data}else throw new Error("Can not access image data")}else if(n){let y,l;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(y=t.resizedHeight,l=t.resizedWidth):(y=e.height,l=e.width),t!==void 0&&(u=t),u.format="RGBA",u.height=y,u.width=l,t!==void 0){let x=c();x.width=l,x.height=y;let k=h(x);if(k!=null)k.putImageData(e,0,0),o=k.getImageData(0,0,l,y).data;else throw new Error("Can not access image data")}else o=e.data}else if(i){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let y=c();y.width=e.width,y.height=e.height;let l=h(y);if(l!=null){let x=e.height,k=e.width;return l.drawImage(e,0,0,k,x),o=l.getImageData(0,0,k,x).data,u.height=x,u.width=k,Ae(o,u)}else throw new Error("Can not access image data")}else{if(s)return new Promise((y,l)=>{let x=c(),k=h(x);if(!e||!k)return l();let S=new Image;S.crossOrigin="Anonymous",S.src=e,S.onload=()=>{x.width=S.width,x.height=S.height,k.drawImage(S,0,0,x.width,x.height);let C=k.getImageData(0,0,x.width,x.height);u.height=x.height,u.width=x.width,y(Ae(C.data,u))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return Ae(o,u);throw new Error("Input data provided is not supported - aborted tensor creation")},Qe=(e,t)=>{let{width:r,height:n,download:i,dispose:s}=t,o=[1,n,r,4];return new xt({location:"texture",type:"float32",texture:e,dims:o,download:i,dispose:s})},ct=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:s}=t;return new xt({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:n,download:i,dispose:s})},Te=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:s}=t;return new xt({location:"ml-tensor",type:r??"float32",mlTensor:e,dims:n,download:i,dispose:s})},X=(e,t,r)=>new xt({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})}),ke,He,pt,ce,tt=Q(()=>{ke=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),He=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),pt=!1,ce=()=>{if(!pt){pt=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;e&&(ke.set("int64",BigInt64Array),He.set(BigInt64Array,"int64")),t&&(ke.set("uint64",BigUint64Array),He.set(BigUint64Array,"uint64")),r?(ke.set("float16",Float16Array),He.set(Float16Array,"float16")):ke.set("float16",Uint16Array)}}}),gt,je,yt=Q(()=>{Ze(),gt=e=>{let t=1;for(let r=0;r<e.length;r++){let n=e[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);t*=n}return t},je=(e,t)=>{switch(e.location){case"cpu":return new xt(e.type,e.data,t);case"cpu-pinned":return new xt({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new xt({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new xt({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new xt({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),xt,Ze=Q(()=>{K(),be(),tt(),yt(),xt=class{constructor(e,t,r){ce();let n,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,n=e.type,i=e.dims,e.location){case"cpu-pinned":{let o=ke.get(n);if(!o)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint64"&&n!=="int8"&&n!=="uint8"&&n!=="bool")throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,u;if(typeof e=="string")if(n=e,u=r,e==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");o=t}else{let c=ke.get(e);if(c===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e==="float16"&&c===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${c.name} as data.`);e==="uint64"||e==="int64"?o=c.from(t,BigInt):o=c.from(t)}else if(t instanceof c)o=t;else if(t instanceof Uint8ClampedArray)if(e==="uint8")o=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${n} tensor's data must be type of ${c}`)}else if(u=t,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let c=typeof e[0];if(c==="string")n="string",o=e;else if(c==="boolean")n="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${c}.`)}else if(e instanceof Uint8ClampedArray)n="uint8",o=Uint8Array.from(e);else{let c=He.get(e.constructor);if(c===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);n=c,o=e}if(u===void 0)u=[o.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=o,this.dataLocation="cpu"}let s=gt(i);if(this.cpuData&&s!==this.cpuData.length&&!((n==="uint4"||n==="int4")&&Math.ceil(s/2)===this.cpuData.length))throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=i,this.size=s}static async fromImage(e,t){return ot(e,t)}static fromTexture(e,t){return Qe(e,t)}static fromGpuBuffer(e,t){return ct(e,t)}static fromMLTensor(e,t){return Te(e,t)}static fromPinnedBuffer(e,t,r){return X(e,t,r)}toDataURL(e){return ye(this,e)}toImageData(e){return Ee(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return je(this,e)}}}),te,Re=Q(()=>{Ze(),te=xt}),rt,st,Xe,Ge,mt=Q(()=>{O(),rt=(e,t)=>{(typeof P.trace>"u"?!P.wasm.trace:!P.trace)||console.timeStamp(`${e}::ORT::${t}`)},st=(e,t)=>{let r=new Error().stack?.split(/\r\n|\r|\n/g)||[],n=!1;for(let i=0;i<r.length;i++){if(n&&!r[i].includes("TRACE_FUNC")){let s=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(s+=`::${t}`),rt("CPU",s);return}r[i].includes("TRACE_FUNC")&&(n=!0)}},Xe=e=>{(typeof P.trace>"u"?!P.wasm.trace:!P.trace)||st("BEGIN",e)},Ge=e=>{(typeof P.trace>"u"?!P.wasm.trace:!P.trace)||st("END",e)}}),bt,Bt=Q(()=>{oe(),Re(),mt(),bt=class Gf{constructor(t){this.handler=t}async run(t,r,n){Xe();let i={},s={};if(typeof t!="object"||t===null||t instanceof te||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof te)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let h of r){if(typeof h!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(h)===-1)throw new RangeError(`'fetches' contains invalid output name: ${h}.`);i[h]=null}if(typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let h=!1,y=Object.getOwnPropertyNames(r);for(let l of this.outputNames)if(y.indexOf(l)!==-1){let x=r[l];(x===null||x instanceof te)&&(h=!0,o=!1,i[l]=x)}if(h){if(typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else s=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let h of this.inputNames)if(typeof t[h]>"u")throw new Error(`input '${h}' is missing in 'feeds'.`);if(o)for(let h of this.outputNames)i[h]=null;let u=await this.handler.run(t,i,s),c={};for(let h in u)if(Object.hasOwnProperty.call(u,h)){let y=u[h];y instanceof te?c[h]=y:c[h]=new te(y.type,y.data,y.dims)}return Ge(),c}async release(){return this.handler.dispose()}static async create(t,r,n,i){Xe();let s,o={};if(typeof t=="string"){if(s=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(s=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let y=t,l=0,x=t.byteLength;if(typeof r=="object"&&r!==null)o=r;else if(typeof r=="number"){if(l=r,!Number.isSafeInteger(l))throw new RangeError("'byteOffset' must be an integer.");if(l<0||l>=y.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${y.byteLength}).`);if(x=t.byteLength-l,typeof n=="number"){if(x=n,!Number.isSafeInteger(x))throw new RangeError("'byteLength' must be an integer.");if(x<=0||l+x>y.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${y.byteLength-l}].`);if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof n<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");s=new Uint8Array(y,l,x)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[u,c]=await j(o),h=await u.createInferenceSessionHandler(s,c);return Ge(),new Gf(h)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),Ct,E=Q(()=>{Bt(),Ct=bt}),re=Q(()=>{}),A=Q(()=>{}),ie=Q(()=>{}),ve=Q(()=>{}),lt,Ye,$t=Q(()=>{oe(),Re(),lt="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Ye=class qf{constructor(t,r,n){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,r){let n=t.evalModel||"",i=t.optimizerModel||"",s=r||{},[o,u]=await j(s);if(o.createTrainingSessionHandler){let c=await o.createTrainingSessionHandler(t.checkpointState,t.trainModel,n,i,u);return new qf(c,!!t.optimizerModel,!!t.evalModel)}else throw new Error(lt)}typeNarrowingForRunStep(t,r,n,i,s){let o={},u={};if(typeof n!="object"||n===null||n instanceof te||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let c=!0;if(typeof i=="object"){if(i===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof te)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(i.length===0)throw new TypeError("'fetches' cannot be an empty array.");c=!1;for(let h of i){if(typeof h!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(h)===-1)throw new RangeError(`'fetches' contains invalid output name: ${h}.`);o[h]=null}if(typeof s=="object"&&s!==null)u=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let h=!1,y=Object.getOwnPropertyNames(i);for(let l of r)if(y.indexOf(l)!==-1){let x=i[l];(x===null||x instanceof te)&&(h=!0,c=!1,o[l]=x)}if(h){if(typeof s=="object"&&s!==null)u=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else u=i}}else if(typeof i<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let h of t)if(typeof n[h]>"u")throw new Error(`input '${h}' is missing in 'feeds'.`);if(c)for(let h of r)o[h]=null;return[o,u]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let n in t)if(Object.hasOwnProperty.call(t,n)){let i=t[n];i instanceof te?r[n]=i:r[n]=new te(i.type,i.data,i.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,n){let[i,s]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,n),o=await this.handler.runTrainStep(t,i,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,n){if(this.hasEvalModel){let[i,s]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,n),o=await this.handler.runEvalStep(t,i,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let n=await this.getParametersSize(r);if(t.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}}),ut,ft=Q(()=>{$t(),ut=Ye}),Wt={};L(Wt,{InferenceSession:()=>Ct,TRACE:()=>rt,TRACE_FUNC_BEGIN:()=>Xe,TRACE_FUNC_END:()=>Ge,Tensor:()=>te,TrainingSession:()=>ut,env:()=>T,registerBackend:()=>Ce});var Kt=Q(()=>{le(),fe(),E(),Re(),re(),A(),mt(),ie(),ve(),ft()}),Ir=Q(()=>{}),Er={};L(Er,{default:()=>Hr});var Lr,Cr,Hr,gn=Q(()=>{ih(),Br(),I(),Lr="ort-wasm-proxy-worker",Cr=globalThis.self?.name===Lr,Cr&&(self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":nr(r.wasm).then(()=>{Nc(r).then(()=>{postMessage({type:t})},n=>{postMessage({type:t,err:n})})},n=>{postMessage({type:t,err:n})});break;case"init-ep":{let{epName:n,env:i}=r;jc(i,n).then(()=>{postMessage({type:t})},s=>{postMessage({type:t,err:s})});break}case"copy-from":{let{buffer:n}=r,i=hc(n);postMessage({type:t,out:i});break}case"create":{let{model:n,options:i}=r;Uc(n,i).then(s=>{postMessage({type:t,out:s})},s=>{postMessage({type:t,err:s})});break}case"release":Vc(r),postMessage({type:t});break;case"run":{let{sessionId:n,inputIndices:i,inputs:s,outputIndices:o,options:u}=r;Gc(n,i,s,o,new Array(o.length).fill(null),u).then(c=>{c.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:c},Hc([...s,...c]))},c=>{postMessage({type:t,err:c})});break}case"end-profiling":qc(r),postMessage({type:t});break;default:}}catch(n){postMessage({type:t,err:n})}}),Hr=Cr?null:e=>new Worker(e??Ne,{type:"module",name:Lr})}),ht={};L(ht,{default:()=>De});var Y,Se,De,Ie=Q(()=>{Se=(Y=import.meta.url,async function(e={}){function t(){return ir.buffer!=br.buffer&&Mn(),br}function r(){return ir.buffer!=br.buffer&&Mn(),Gt}function n(){return ir.buffer!=br.buffer&&Mn(),_r}function i(){return ir.buffer!=br.buffer&&Mn(),Je}function s(){return ir.buffer!=br.buffer&&Mn(),Et}function o(){return ir.buffer!=br.buffer&&Mn(),pr}function u(){return ir.buffer!=br.buffer&&Mn(),Ur}function c(){return ir.buffer!=br.buffer&&Mn(),Bn}var h,y,l=Object.assign({},e),x=new Promise((a,m)=>{h=a,y=m}),k=typeof window=="object",S=typeof importScripts=="function",C=S&&self.name=="em-pthread";l.mountExternalData=(a,m)=>{a.startsWith("./")&&(a=a.substring(2)),(l.Eb||(l.Eb=new Map)).set(a,m)},l.unmountExternalData=()=>{delete l.Eb};var J=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let Z=()=>{let a=(b,$,z)=>(...me)=>{let Ke=ai,dt=$?.();me=b(...me);let zt=$?.();return dt!==zt&&(b=zt,z(dt),$=z=null),ai!=Ke?new Promise((Rt,tr)=>{hp={resolve:Rt,reject:tr}}):me},m=b=>async(...$)=>{try{if(l.Fb)throw Error("Session already started");let z=l.Fb={fc:$[0],errors:[]},me=await b(...$);if(l.Fb!==z)throw Error("Session mismatch");l.Gb?.flush();let Ke=z.errors;if(0<Ke.length){let dt=await Promise.all(Ke);if(dt=dt.filter(zt=>zt),0<dt.length)throw Error(dt.join(`
`))}return me}finally{l.Fb=null}};l._OrtCreateSession=a(l._OrtCreateSession,()=>l._OrtCreateSession,b=>l._OrtCreateSession=b),l._OrtRun=m(a(l._OrtRun,()=>l._OrtRun,b=>l._OrtRun=b)),l._OrtRunWithBinding=m(a(l._OrtRunWithBinding,()=>l._OrtRunWithBinding,b=>l._OrtRunWithBinding=b)),l._OrtBindInput=a(l._OrtBindInput,()=>l._OrtBindInput,b=>l._OrtBindInput=b),Z=void 0};l.jsepInit=(a,m)=>{if(Z?.(),a==="webgpu"){[l.Gb,l.Ub,l.Yb,l.Nb,l.Xb,l.jb,l.Zb,l.bc,l.Vb,l.Wb,l.$b]=m;let b=l.Gb;l.jsepRegisterBuffer=($,z,me,Ke)=>b.registerBuffer($,z,me,Ke),l.jsepGetBuffer=$=>b.getBuffer($),l.jsepCreateDownloader=($,z,me)=>b.createDownloader($,z,me),l.jsepOnCreateSession=$=>{b.onCreateSession($)},l.jsepOnReleaseSession=$=>{b.onReleaseSession($)},l.jsepOnRunStart=$=>b.onRunStart($),l.cc=($,z)=>{b.upload($,z)}}else if(a==="webnn"){[l.Gb,l.ac,l.Ob,l.jsepEnsureTensor,l.dc,l.jsepDownloadTensor]=m,l.jsepReleaseTensorId=l.Ob;let b=l.Gb;l.jsepOnRunStart=$=>b.onRunStart($),l.jsepRegisterMLContext=($,z)=>{b.registerMLContext($,z)},l.jsepOnReleaseSession=$=>{b.onReleaseSession($)},l.jsepCreateMLTensorDownloader=($,z)=>b.createMLTensorDownloader($,z),l.jsepRegisterMLTensor=($,z,me)=>b.registerMLTensor($,z,me),l.qc=($,z,me,Ke,dt)=>b.registerMLConstant($,z,me,Ke,dt,l.Eb)}};var F,ne,ue=Object.assign({},l),we="./this.program",We=(a,m)=>{throw m},Be="";(k||S)&&(S?Be=self.location.href:typeof document<"u"&&document.currentScript&&(Be=document.currentScript.src),Y&&(Be=Y),Be=Be.startsWith("blob:")?"":Be.substr(0,Be.replace(/[?#].*/,"").lastIndexOf("/")+1),S&&(ne=a=>{var m=new XMLHttpRequest;return m.open("GET",a,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),F=(a,m,b)=>{var $=new XMLHttpRequest;$.open("GET",a,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?m($.response):b()},$.onerror=b,$.send(null)});var wt,Lt=console.log.bind(console),Dt=console.error.bind(console),sr=Lt,Qt=Dt;if(Object.assign(l,ue),ue=null,C){let a=function(m){try{var b=m.data,$=b.cmd;if($==="load"){let z=[];self.onmessage=me=>z.push(me),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let me of z)a(me);self.onmessage=a};for(let me of b.handlers)l[me]&&!l[me].proxy||(l[me]=(...Ke)=>{postMessage({Mb:"callHandler",oc:me,args:Ke})},me=="print"&&(sr=l[me]),me=="printErr"&&(Qt=l[me]));ir=b.wasmMemory,Mn(),or(b.wasmModule)}else if($==="run"){gp(b.pthread_ptr,0,0,1,0,0),dp(b.pthread_ptr),cm(),Sh(),Tr||(Cf(),Tr=!0);try{pm(b.start_routine,b.arg)}catch(z){if(z!="unwind")throw z}}else $==="cancel"?ea()&&Cc(-1):b.target!=="setimmediate"&&($==="checkMailbox"?Tr&&gc():$&&(Qt(`worker: received unknown command ${$}`),Qt(b)))}catch(z){throw $f(),z}};var or,Tr=!1;Qt=function(...m){m=m.join(" "),console.error(m)},self.alert=function(...m){postMessage({Mb:"alert",text:m.join(" "),rc:ea()})},l.instantiateWasm=(m,b)=>new Promise($=>{or=z=>{z=new WebAssembly.Instance(z,xh()),b(z),$()}}),self.onunhandledrejection=m=>{throw m.reason||m},self.onmessage=a}l.wasmBinary&&(wt=l.wasmBinary);var ir,Ht,Mr,br,Gt,_r,Je,Et,pr,Ur,Wr,Wn,Bn,En=!1;function Mn(){var a=ir.buffer;l.HEAP8=br=new Int8Array(a),l.HEAP16=_r=new Int16Array(a),l.HEAPU8=Gt=new Uint8Array(a),l.HEAPU16=Je=new Uint16Array(a),l.HEAP32=Et=new Int32Array(a),l.HEAPU32=pr=new Uint32Array(a),l.HEAPF32=Ur=new Float32Array(a),l.HEAPF64=Bn=new Float64Array(a),l.HEAP64=Wr=new BigInt64Array(a),l.HEAPU64=Wn=new BigUint64Array(a)}if(!C){if(!((ir=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof J))throw Qt("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");Mn()}var hn=[],fn=[],Hi=[],Ki=0,gs=null;function wh(){if(--Ki==0&&gs){var a=gs;gs=null,a()}}function Yo(a){throw Qt(a="Aborted("+a+")"),En=!0,Mr=1,a=new WebAssembly.RuntimeError(a+". Build with -sASSERTIONS for more info."),y(a),a}var Zc,yh=a=>a.startsWith("data:application/octet-stream;base64,"),bh=a=>a.startsWith("file://");function Mh(a){if(a==Zc&&wt)return new Uint8Array(wt);if(ne)return ne(a);throw"both async and sync fetching of the wasm failed"}function vh(a,m,b){return function($){if(!wt&&(k||S)){if(typeof fetch=="function"&&!bh($))return fetch($,{credentials:"same-origin"}).then(z=>{if(!z.ok)throw`failed to load wasm binary file at '${$}'`;return z.arrayBuffer()}).catch(()=>Mh($));if(F)return new Promise((z,me)=>{F($,Ke=>z(new Uint8Array(Ke)),me)})}return Promise.resolve().then(()=>Mh($))}(a).then($=>WebAssembly.instantiate($,m)).then(b,$=>{Qt(`failed to asynchronously prepare wasm: ${$}`),Yo($)})}function xh(){return{a:{O:dm,Aa:um,b:fm,aa:Ih,B:Bh,qa:zh,Y:Lh,_:Rh,ra:Nh,oa:jh,ha:Uh,na:Vh,L:Wh,Z:Gh,W:qh,pa:Hh,X:Kh,wa:mm,F:_m,Q:gm,P:ym,E:Mm,u:vm,q:xm,G:Tm,A:Am,R:Im,ua:Fm,ka:Om,U:Bm,ba:zm,H:Dm,ja:dp,ta:Lm,t:Rm,x:Um,n:Vm,l:Gm,c:lp,o:qm,j:Xm,w:Qm,p:Ym,g:Zm,s:Jm,m:e_,e:t_,k:r_,i:n_,h:i_,d:s_,ea:o_,fa:a_,ga:l_,ca:uf,da:df,T:u_,f:d_,D:c_,I:p_,M:h_,y:f_,sa:m_,V:__,v:pf,z:g_,N:w_,S:y_,za:b_,ya:M_,la:mf,ma:_f,$:np,C:gf,K:wf,ia:yf,J:bf,a:ir,xa:rp,va:xf,r:T_}}}var Jc={867364:(a,m,b,$,z)=>{if(l===void 0||!l.Eb)return 1;if((a=_n(a>>>0)).startsWith("./")&&(a=a.substring(2)),!(a=l.Eb.get(a)))return 2;if($>>>=0,(m>>>=0)+(b>>>=0)>a.byteLength)return 3;try{let me=a.subarray(m,m+b);switch(z){case 0:r().set(me,$>>>0);break;case 1:l.cc($,me);break;default:return 4}return 0}catch{return 4}},868047:(a,m,b)=>{l.dc(a,r().subarray(m>>>0,m+b>>>0))},868110:()=>l.ac(),868151:a=>{l.Ob(a)},868187:()=>{l.Vb()},868218:()=>{l.Wb()},868247:()=>{l.$b()},868272:a=>l.Ub(a),868305:a=>l.Yb(a),868337:(a,m,b)=>{l.Nb(a,m,b,!0)},868376:(a,m,b)=>{l.Nb(a,m,b)},868409:()=>typeof wasmOffsetConverter<"u",868466:a=>{l.jb("Abs",a,void 0)},868517:a=>{l.jb("Neg",a,void 0)},868568:a=>{l.jb("Floor",a,void 0)},868621:a=>{l.jb("Ceil",a,void 0)},868673:a=>{l.jb("Reciprocal",a,void 0)},868731:a=>{l.jb("Sqrt",a,void 0)},868783:a=>{l.jb("Exp",a,void 0)},868834:a=>{l.jb("Erf",a,void 0)},868885:a=>{l.jb("Sigmoid",a,void 0)},868940:(a,m,b)=>{l.jb("HardSigmoid",a,{alpha:m,beta:b})},869019:a=>{l.jb("Log",a,void 0)},869070:a=>{l.jb("Sin",a,void 0)},869121:a=>{l.jb("Cos",a,void 0)},869172:a=>{l.jb("Tan",a,void 0)},869223:a=>{l.jb("Asin",a,void 0)},869275:a=>{l.jb("Acos",a,void 0)},869327:a=>{l.jb("Atan",a,void 0)},869379:a=>{l.jb("Sinh",a,void 0)},869431:a=>{l.jb("Cosh",a,void 0)},869483:a=>{l.jb("Asinh",a,void 0)},869536:a=>{l.jb("Acosh",a,void 0)},869589:a=>{l.jb("Atanh",a,void 0)},869642:a=>{l.jb("Tanh",a,void 0)},869694:a=>{l.jb("Not",a,void 0)},869745:(a,m,b)=>{l.jb("Clip",a,{min:m,max:b})},869814:a=>{l.jb("Clip",a,void 0)},869866:(a,m)=>{l.jb("Elu",a,{alpha:m})},869924:a=>{l.jb("Gelu",a,void 0)},869976:a=>{l.jb("Relu",a,void 0)},870028:(a,m)=>{l.jb("LeakyRelu",a,{alpha:m})},870092:(a,m)=>{l.jb("ThresholdedRelu",a,{alpha:m})},870162:(a,m)=>{l.jb("Cast",a,{to:m})},870220:a=>{l.jb("Add",a,void 0)},870271:a=>{l.jb("Sub",a,void 0)},870322:a=>{l.jb("Mul",a,void 0)},870373:a=>{l.jb("Div",a,void 0)},870424:a=>{l.jb("Pow",a,void 0)},870475:a=>{l.jb("Equal",a,void 0)},870528:a=>{l.jb("Greater",a,void 0)},870583:a=>{l.jb("GreaterOrEqual",a,void 0)},870645:a=>{l.jb("Less",a,void 0)},870697:a=>{l.jb("LessOrEqual",a,void 0)},870756:(a,m,b,$,z)=>{l.jb("ReduceMean",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,z>>>0)):[]})},870915:(a,m,b,$,z)=>{l.jb("ReduceMax",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,z>>>0)):[]})},871073:(a,m,b,$,z)=>{l.jb("ReduceMin",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,z>>>0)):[]})},871231:(a,m,b,$,z)=>{l.jb("ReduceProd",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,z>>>0)):[]})},871390:(a,m,b,$,z)=>{l.jb("ReduceSum",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,z>>>0)):[]})},871548:(a,m,b,$,z)=>{l.jb("ReduceL1",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,z>>>0)):[]})},871705:(a,m,b,$,z)=>{l.jb("ReduceL2",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,z>>>0)):[]})},871862:(a,m,b,$,z)=>{l.jb("ReduceLogSum",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,z>>>0)):[]})},872023:(a,m,b,$,z)=>{l.jb("ReduceSumSquare",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,z>>>0)):[]})},872187:(a,m,b,$,z)=>{l.jb("ReduceLogSumExp",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,z>>>0)):[]})},872351:a=>{l.jb("Where",a,void 0)},872404:(a,m,b)=>{l.jb("Transpose",a,{perm:m?Array.from(s().subarray(m>>>0,b>>>0)):[]})},872512:(a,m,b,$)=>{l.jb("DepthToSpace",a,{blocksize:m,mode:_n(b),format:$?"NHWC":"NCHW"})},872645:(a,m,b,$)=>{l.jb("DepthToSpace",a,{blocksize:m,mode:_n(b),format:$?"NHWC":"NCHW"})},872778:(a,m,b,$,z,me,Ke,dt,zt,Rt,tr,Ar,Dr,Ve,Sr)=>{l.jb("ConvTranspose",a,{format:zt?"NHWC":"NCHW",autoPad:m,dilations:[b],group:$,kernelShape:[z],pads:[me,Ke],strides:[dt],wIsConst:()=>!!t()[Rt>>>0],outputPadding:tr?Array.from(s().subarray(tr>>>0,Ar>>>0)):[],outputShape:Dr?Array.from(s().subarray(Dr>>>0,Ve>>>0)):[],activation:_n(Sr)})},873179:(a,m,b,$,z,me,Ke,dt,zt,Rt,tr,Ar,Dr,Ve)=>{l.jb("ConvTranspose",a,{format:dt?"NHWC":"NCHW",autoPad:m,dilations:Array.from(s().subarray(b>>>0,2+(b>>>0)>>>0)),group:$,kernelShape:Array.from(s().subarray(z>>>0,2+(z>>>0)>>>0)),pads:Array.from(s().subarray(me>>>0,4+(me>>>0)>>>0)),strides:Array.from(s().subarray(Ke>>>0,2+(Ke>>>0)>>>0)),wIsConst:()=>!!t()[zt>>>0],outputPadding:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],outputShape:Ar?Array.from(s().subarray(Ar>>>0,Dr>>>0)):[],activation:_n(Ve)})},873744:(a,m,b,$,z,me,Ke,dt,zt,Rt,tr,Ar,Dr,Ve,Sr)=>{l.jb("ConvTranspose",a,{format:zt?"NHWC":"NCHW",autoPad:m,dilations:[b],group:$,kernelShape:[z],pads:[me,Ke],strides:[dt],wIsConst:()=>!!t()[Rt>>>0],outputPadding:tr?Array.from(s().subarray(tr>>>0,Ar>>>0)):[],outputShape:Dr?Array.from(s().subarray(Dr>>>0,Ve>>>0)):[],activation:_n(Sr)})},874145:(a,m,b,$,z,me,Ke,dt,zt,Rt,tr,Ar,Dr,Ve)=>{l.jb("ConvTranspose",a,{format:dt?"NHWC":"NCHW",autoPad:m,dilations:Array.from(s().subarray(b>>>0,2+(b>>>0)>>>0)),group:$,kernelShape:Array.from(s().subarray(z>>>0,2+(z>>>0)>>>0)),pads:Array.from(s().subarray(me>>>0,4+(me>>>0)>>>0)),strides:Array.from(s().subarray(Ke>>>0,2+(Ke>>>0)>>>0)),wIsConst:()=>!!t()[zt>>>0],outputPadding:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],outputShape:Ar?Array.from(s().subarray(Ar>>>0,Dr>>>0)):[],activation:_n(Ve)})},874710:(a,m)=>{l.jb("GlobalAveragePool",a,{format:m?"NHWC":"NCHW"})},874801:(a,m,b,$,z,me,Ke,dt,zt,Rt,tr,Ar,Dr,Ve)=>{l.jb("AveragePool",a,{format:Ve?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:$,storage_order:z,dilations:me?Array.from(s().subarray(me>>>0,Ke>>>0)):[],kernel_shape:dt?Array.from(s().subarray(dt>>>0,zt>>>0)):[],pads:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],strides:Ar?Array.from(s().subarray(Ar>>>0,Dr>>>0)):[]})},875216:(a,m)=>{l.jb("GlobalAveragePool",a,{format:m?"NHWC":"NCHW"})},875307:(a,m,b,$,z,me,Ke,dt,zt,Rt,tr,Ar,Dr,Ve)=>{l.jb("AveragePool",a,{format:Ve?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:$,storage_order:z,dilations:me?Array.from(s().subarray(me>>>0,Ke>>>0)):[],kernel_shape:dt?Array.from(s().subarray(dt>>>0,zt>>>0)):[],pads:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],strides:Ar?Array.from(s().subarray(Ar>>>0,Dr>>>0)):[]})},875722:(a,m)=>{l.jb("GlobalMaxPool",a,{format:m?"NHWC":"NCHW"})},875809:(a,m,b,$,z,me,Ke,dt,zt,Rt,tr,Ar,Dr,Ve)=>{l.jb("MaxPool",a,{format:Ve?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:$,storage_order:z,dilations:me?Array.from(s().subarray(me>>>0,Ke>>>0)):[],kernel_shape:dt?Array.from(s().subarray(dt>>>0,zt>>>0)):[],pads:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],strides:Ar?Array.from(s().subarray(Ar>>>0,Dr>>>0)):[]})},876220:(a,m)=>{l.jb("GlobalMaxPool",a,{format:m?"NHWC":"NCHW"})},876307:(a,m,b,$,z,me,Ke,dt,zt,Rt,tr,Ar,Dr,Ve)=>{l.jb("MaxPool",a,{format:Ve?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:$,storage_order:z,dilations:me?Array.from(s().subarray(me>>>0,Ke>>>0)):[],kernel_shape:dt?Array.from(s().subarray(dt>>>0,zt>>>0)):[],pads:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],strides:Ar?Array.from(s().subarray(Ar>>>0,Dr>>>0)):[]})},876718:(a,m,b,$,z)=>{l.jb("Gemm",a,{alpha:m,beta:b,transA:$,transB:z})},876822:a=>{l.jb("MatMul",a,void 0)},876876:(a,m,b,$)=>{l.jb("ArgMax",a,{keepDims:!!m,selectLastIndex:!!b,axis:$})},876984:(a,m,b,$)=>{l.jb("ArgMin",a,{keepDims:!!m,selectLastIndex:!!b,axis:$})},877092:(a,m)=>{l.jb("Softmax",a,{axis:m})},877155:(a,m)=>{l.jb("Concat",a,{axis:m})},877215:(a,m,b,$,z)=>{l.jb("Split",a,{axis:m,numOutputs:b,splitSizes:$?Array.from(s().subarray($>>>0,z>>>0)):[]})},877355:a=>{l.jb("Expand",a,void 0)},877409:(a,m)=>{l.jb("Gather",a,{axis:Number(m)})},877480:(a,m)=>{l.jb("GatherElements",a,{axis:Number(m)})},877559:(a,m,b,$,z,me,Ke,dt,zt,Rt,tr)=>{l.jb("Resize",a,{antialias:m,axes:b?Array.from(s().subarray(b>>>0,$>>>0)):[],coordinateTransformMode:_n(z),cubicCoeffA:me,excludeOutside:Ke,extrapolationValue:dt,keepAspectRatioPolicy:_n(zt),mode:_n(Rt),nearestMode:_n(tr)})},877905:(a,m,b,$,z,me,Ke)=>{l.jb("Slice",a,{starts:m?Array.from(s().subarray(m>>>0,b>>>0)):[],ends:$?Array.from(s().subarray($>>>0,z>>>0)):[],axes:me?Array.from(s().subarray(me>>>0,Ke>>>0)):[]})},878121:a=>{l.jb("Tile",a,void 0)},878173:(a,m,b)=>{l.jb("InstanceNormalization",a,{epsilon:m,format:b?"NHWC":"NCHW"})},878287:(a,m,b)=>{l.jb("InstanceNormalization",a,{epsilon:m,format:b?"NHWC":"NCHW"})},878401:a=>{l.jb("Range",a,void 0)},878454:(a,m)=>{l.jb("Einsum",a,{equation:_n(m)})},878535:(a,m,b,$,z)=>{l.jb("Pad",a,{mode:m,value:b,pads:$?Array.from(s().subarray($>>>0,z>>>0)):[]})},878662:(a,m,b,$,z,me)=>{l.jb("BatchNormalization",a,{epsilon:m,momentum:b,spatial:!!z,trainingMode:!!$,format:me?"NHWC":"NCHW"})},878831:(a,m,b,$,z,me)=>{l.jb("BatchNormalization",a,{epsilon:m,momentum:b,spatial:!!z,trainingMode:!!$,format:me?"NHWC":"NCHW"})},879e3:(a,m,b)=>{l.jb("CumSum",a,{exclusive:Number(m),reverse:Number(b)})},879097:(a,m,b)=>{l.jb("DequantizeLinear",a,{axis:m,blockSize:b})},879187:(a,m,b,$,z,me,Ke,dt,zt)=>{l.jb("Attention",a,{numHeads:m,isUnidirectional:b,maskFilterValue:$,scale:z,doRotary:me,qkvHiddenSizes:Ke?Array.from(s().subarray(Number(dt)>>>0,Number(dt)+Ke>>>0)):[],pastPresentShareBuffer:!!zt})},879459:a=>{l.jb("BiasAdd",a,void 0)},879514:a=>{l.jb("BiasSplitGelu",a,void 0)},879575:a=>{l.jb("FastGelu",a,void 0)},879631:(a,m,b,$,z,me,Ke,dt,zt,Rt,tr,Ar,Dr,Ve,Sr,Jr)=>{l.jb("Conv",a,{format:Ar?"NHWC":"NCHW",auto_pad:m,dilations:b?Array.from(s().subarray(b>>>0,$>>>0)):[],group:z,kernel_shape:me?Array.from(s().subarray(me>>>0,Ke>>>0)):[],pads:dt?Array.from(s().subarray(dt>>>0,zt>>>0)):[],strides:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],w_is_const:()=>!!t()[Dr>>>0],activation:_n(Ve),activation_params:Sr?Array.from(u().subarray(Sr>>>0,Jr>>>0)):[]})},880127:a=>{l.jb("Gelu",a,void 0)},880179:(a,m,b,$,z,me,Ke,dt,zt)=>{l.jb("GroupQueryAttention",a,{numHeads:m,kvNumHeads:b,scale:$,softcap:z,doRotary:me,rotaryInterleaved:Ke,smoothSoftmax:dt,localWindowSize:zt})},880396:(a,m,b,$)=>{l.jb("LayerNormalization",a,{axis:m,epsilon:b,simplified:!!$})},880507:(a,m,b,$)=>{l.jb("LayerNormalization",a,{axis:m,epsilon:b,simplified:!!$})},880618:(a,m,b,$,z,me)=>{l.jb("MatMulNBits",a,{k:m,n:b,accuracyLevel:$,bits:z,blockSize:me})},880745:(a,m,b,$,z,me)=>{l.jb("MultiHeadAttention",a,{numHeads:m,isUnidirectional:b,maskFilterValue:$,scale:z,doRotary:me})},880904:(a,m)=>{l.jb("QuickGelu",a,{alpha:m})},880968:(a,m,b,$,z)=>{l.jb("RotaryEmbedding",a,{interleaved:!!m,numHeads:b,rotaryEmbeddingDim:$,scale:z})},881107:(a,m,b)=>{l.jb("SkipLayerNormalization",a,{epsilon:m,simplified:!!b})},881209:(a,m,b)=>{l.jb("SkipLayerNormalization",a,{epsilon:m,simplified:!!b})},881311:(a,m,b,$)=>{l.jb("GatherBlockQuantized",a,{gatherAxis:m,quantizeAxis:b,blockSize:$})},881432:a=>{l.Zb(a)},881466:(a,m)=>l.bc(a,m,l.Fb.fc,l.Fb.errors)};function um(a,m,b){return nf(async()=>{await l.Xb(a,m,b)})}function dm(){return typeof wasmOffsetConverter<"u"}function ep(a){this.name="ExitStatus",this.message=`Program terminated with exit(${a})`,this.status=a}var tp=a=>{a.terminate(),a.onmessage=()=>{}},Th=a=>{Xi.length==0&&(Ph(),kh(Xi[0]));var m=Xi.pop();if(!m)return 6;ys.push(m),si[a.Ab]=m,m.Ab=a.Ab;var b={cmd:"run",start_routine:a.hc,arg:a.Qb,pthread_ptr:a.Ab};return m.postMessage(b,a.mc),0},ws=0,Qr=(a,m,...b)=>{for(var $=2*b.length,z=bp(),me=yp(8*$),Ke=me>>>3,dt=0;dt<b.length;dt++){var zt=b[dt];typeof zt=="bigint"?(Wr[Ke+2*dt]=1n,Wr[Ke+2*dt+1]=zt):(Wr[Ke+2*dt]=0n,c()[Ke+2*dt+1>>>0]=zt)}return a=Sf(a,0,$,me,m),$c(z),a};function rp(a){if(C)return Qr(0,1,a);if(Mr=a,!(0<ws)){for(var m of ys)tp(m);for(m of Xi)tp(m);Xi=[],ys=[],si=[],En=!0}We(a,new ep(a))}function Eh(a){if(C)return Qr(1,0,a);np(a)}var np=a=>{if(Mr=a,C)throw Eh(a),"unwind";rp(a)},Xi=[],ys=[],Ch=[],si={},$h=a=>{var m=a.Ab;delete si[m],Xi.push(a),ys.splice(ys.indexOf(a),1),a.Ab=0,wp(m)};function Sh(){Ch.forEach(a=>a())}var kh=a=>new Promise(m=>{a.onmessage=z=>{var me=(z=z.data).cmd;if(z.targetThread&&z.targetThread!=ea()){var Ke=si[z.targetThread];Ke?Ke.postMessage(z,z.transferList):Qt(`Internal error! Worker sent a message "${me}" to target pthread ${z.targetThread}, but that thread no longer exists!`)}else me==="checkMailbox"?gc():me==="spawnThread"?Th(z):me==="cleanupThread"?$h(si[z.thread]):me==="killThread"?(z=z.thread,me=si[z],delete si[z],tp(me),wp(z),ys.splice(ys.indexOf(me),1),me.Ab=0):me==="cancelThread"?si[z.thread].postMessage({cmd:"cancel"}):me==="loaded"?(a.loaded=!0,m(a)):me==="alert"?alert(`Thread ${z.threadId}: ${z.text}`):z.target==="setimmediate"?a.postMessage(z):me==="callHandler"?l[z.handler](...z.args):me&&Qt(`worker sent an unknown command ${me}`)},a.onerror=z=>{throw Qt(`worker sent an error! ${z.filename}:${z.lineno}: ${z.message}`),z};var b,$=[];for(b of[])l.hasOwnProperty(b)&&$.push(b);a.postMessage({cmd:"load",handlers:$,wasmMemory:ir,wasmModule:Ht})});function Ph(){var a=new Worker(new URL(import.meta.url),{type:"module",workerData:"em-pthread",name:"em-pthread"});Xi.push(a)}var _c=a=>{for(;0<a.length;)a.shift()(l)},cm=()=>{var a=ea(),m=o()[a+52>>>2>>>0];a=o()[a+56>>>2>>>0],Pf(m,m-a),$c(m)},pm=(a,m)=>{ws=0,a=Af(a,m),0<ws?Mr=a:Cc(a)};class hm{constructor(m){this.Jb=m-24}}function fm(a,m,b){var $=new hm(a>>>=0);throw m>>>=0,b>>>=0,o()[$.Jb+16>>>2>>>0]=0,o()[$.Jb+4>>>2>>>0]=m,o()[$.Jb+8>>>2>>>0]=b,a}function Ah(a,m,b,$){return C?Qr(2,1,a,m,b,$):Ih(a,m,b,$)}function Ih(a,m,b,$){if(a>>>=0,m>>>=0,b>>>=0,$>>>=0,J===void 0)return Qt("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var z=[];return C&&z.length===0?Ah(a,m,b,$):(a={hc:b,Ab:a,Qb:$,mc:z},C?(a.Mb="spawnThread",postMessage(a,z),0):Th(a))}var Fh=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Oh=(a,m,b)=>{var $=(m>>>=0)+b;for(b=m;a[b]&&!(b>=$);)++b;if(16<b-m&&a.buffer&&Fh)return Fh.decode(a.buffer instanceof J?a.slice(m,b):a.subarray(m,b));for($="";m<b;){var z=a[m++];if(128&z){var me=63&a[m++];if((224&z)==192)$+=String.fromCharCode((31&z)<<6|me);else{var Ke=63&a[m++];65536>(z=(240&z)==224?(15&z)<<12|me<<6|Ke:(7&z)<<18|me<<12|Ke<<6|63&a[m++])?$+=String.fromCharCode(z):(z-=65536,$+=String.fromCharCode(55296|z>>10,56320|1023&z))}}else $+=String.fromCharCode(z)}return $},_n=(a,m)=>(a>>>=0)?Oh(r(),a,m):"";function Bh(a,m,b){return C?Qr(3,1,a,m,b):0}function zh(a,m){if(C)return Qr(4,1,a,m)}var ip=a=>{for(var m=0,b=0;b<a.length;++b){var $=a.charCodeAt(b);127>=$?m++:2047>=$?m+=2:55296<=$&&57343>=$?(m+=4,++b):m+=3}return m},Dh=(a,m,b,$)=>{if(!(0<$))return 0;var z=b>>>=0;$=b+$-1;for(var me=0;me<a.length;++me){var Ke=a.charCodeAt(me);if(55296<=Ke&&57343>=Ke&&(Ke=65536+((1023&Ke)<<10)|1023&a.charCodeAt(++me)),127>=Ke){if(b>=$)break;m[b++>>>0]=Ke}else{if(2047>=Ke){if(b+1>=$)break;m[b++>>>0]=192|Ke>>6}else{if(65535>=Ke){if(b+2>=$)break;m[b++>>>0]=224|Ke>>12}else{if(b+3>=$)break;m[b++>>>0]=240|Ke>>18,m[b++>>>0]=128|Ke>>12&63}m[b++>>>0]=128|Ke>>6&63}m[b++>>>0]=128|63&Ke}}return m[b>>>0]=0,b-z},Zo=(a,m,b)=>Dh(a,r(),m,b);function Lh(a,m){if(C)return Qr(5,1,a,m)}function Rh(a,m,b){if(C)return Qr(6,1,a,m,b)}function Nh(a,m,b){return C?Qr(7,1,a,m,b):0}function jh(a,m){if(C)return Qr(8,1,a,m)}function Uh(a,m,b){if(C)return Qr(9,1,a,m,b)}function Vh(a,m,b,$){if(C)return Qr(10,1,a,m,b,$)}function Wh(a,m,b,$){if(C)return Qr(11,1,a,m,b,$)}function Gh(a,m,b,$){if(C)return Qr(12,1,a,m,b,$)}function qh(a){if(C)return Qr(13,1,a)}function Hh(a,m){if(C)return Qr(14,1,a,m)}function Kh(a,m,b){if(C)return Qr(15,1,a,m,b)}var Xh,Qi,mm=()=>{Yo("")},oi=a=>{for(var m="";r()[a>>>0];)m+=Xh[r()[a++>>>0]];return m},sp={},op={};function Mi(a,m,b={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function($,z,me={}){var Ke=z.name;if(!$)throw new Qi(`type "${Ke}" must have a positive integer typeid pointer`);if(op.hasOwnProperty($)){if(me.Sb)return;throw new Qi(`Cannot register type '${Ke}' twice`)}op[$]=z,sp.hasOwnProperty($)&&(z=sp[$],delete sp[$],z.forEach(dt=>dt()))}(a,m,b)}var Qh=(a,m,b)=>{switch(m){case 1:return b?$=>t()[$>>>0]:$=>r()[$>>>0];case 2:return b?$=>n()[$>>>1>>>0]:$=>i()[$>>>1>>>0];case 4:return b?$=>s()[$>>>2>>>0]:$=>o()[$>>>2>>>0];case 8:return b?$=>Wr[$>>>3]:$=>Wn[$>>>3];default:throw new TypeError(`invalid integer width (${m}): ${a}`)}};function _m(a,m,b){b>>>=0,Mi(a>>>=0,{name:m=oi(m>>>0),fromWireType:$=>$,toWireType:function($,z){if(typeof z!="bigint"&&typeof z!="number")throw z=z===null?"null":($=typeof z)=="object"||$==="array"||$==="function"?z.toString():""+z,new TypeError(`Cannot convert "${z}" to ${this.name}`);return typeof z=="number"&&(z=BigInt(z)),z},argPackAdvance:Yi,readValueFromPointer:Qh(m,b,m.indexOf("u")==-1),Db:null})}var Yi=8;function gm(a,m,b,$){Mi(a>>>=0,{name:m=oi(m>>>0),fromWireType:function(z){return!!z},toWireType:function(z,me){return me?b:$},argPackAdvance:Yi,readValueFromPointer:function(z){return this.fromWireType(r()[z>>>0])},Db:null})}var ap=[],vi=[];function lp(a){9<(a>>>=0)&&--vi[a+1]==0&&(vi[a]=void 0,ap.push(a))}var Gn=a=>{if(!a)throw new Qi("Cannot use deleted val. handle = "+a);return vi[a]},qn=a=>{switch(a){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=ap.pop()||vi.length;return vi[m]=a,vi[m+1]=1,m}};function up(a){return this.fromWireType(o()[a>>>2>>>0])}var wm={name:"emscripten::val",fromWireType:a=>{var m=Gn(a);return lp(a),m},toWireType:(a,m)=>qn(m),argPackAdvance:Yi,readValueFromPointer:up,Db:null};function ym(a){return Mi(a>>>0,wm)}var bm=(a,m)=>{switch(m){case 4:return function(b){return this.fromWireType(u()[b>>>2>>>0])};case 8:return function(b){return this.fromWireType(c()[b>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${a}`)}};function Mm(a,m,b){b>>>=0,Mi(a>>>=0,{name:m=oi(m>>>0),fromWireType:$=>$,toWireType:($,z)=>z,argPackAdvance:Yi,readValueFromPointer:bm(m,b),Db:null})}function vm(a,m,b,$,z){if(a>>>=0,b>>>=0,m=oi(m>>>0),z===-1&&(z=4294967295),z=dt=>dt,$===0){var me=32-8*b;z=dt=>dt<<me>>>me}var Ke=m.includes("unsigned")?function(dt,zt){return zt>>>0}:function(dt,zt){return zt};Mi(a,{name:m,fromWireType:z,toWireType:Ke,argPackAdvance:Yi,readValueFromPointer:Qh(m,b,$!==0),Db:null})}function xm(a,m,b){function $(me){var Ke=o()[me>>>2>>>0];return me=o()[me+4>>>2>>>0],new z(t().buffer,me,Ke)}var z=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];Mi(a>>>=0,{name:b=oi(b>>>0),fromWireType:$,argPackAdvance:Yi,readValueFromPointer:$},{Sb:!0})}function Tm(a,m){a>>>=0;var b=(m=oi(m>>>0))==="std::string";Mi(a,{name:m,fromWireType:function($){var z=o()[$>>>2>>>0],me=$+4;if(b)for(var Ke=me,dt=0;dt<=z;++dt){var zt=me+dt;if(dt==z||r()[zt>>>0]==0){if(Ke=_n(Ke,zt-Ke),Rt===void 0)var Rt=Ke;else Rt+="\0",Rt+=Ke;Ke=zt+1}}else{for(Rt=Array(z),dt=0;dt<z;++dt)Rt[dt]=String.fromCharCode(r()[me+dt>>>0]);Rt=Rt.join("")}return li($),Rt},toWireType:function($,z){z instanceof ArrayBuffer&&(z=new Uint8Array(z));var me=typeof z=="string";if(!(me||z instanceof Uint8Array||z instanceof Uint8ClampedArray||z instanceof Int8Array))throw new Qi("Cannot pass non-string to std::string");var Ke=b&&me?ip(z):z.length,dt=Ec(4+Ke+1),zt=dt+4;if(o()[dt>>>2>>>0]=Ke,b&&me)Zo(z,zt,Ke+1);else if(me)for(me=0;me<Ke;++me){var Rt=z.charCodeAt(me);if(255<Rt)throw li(zt),new Qi("String has UTF-16 code units that do not fit in 8 bits");r()[zt+me>>>0]=Rt}else for(me=0;me<Ke;++me)r()[zt+me>>>0]=z[me];return $!==null&&$.push(li,dt),dt},argPackAdvance:Yi,readValueFromPointer:up,Db($){li($)}})}var Yh=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Em=(a,m)=>{for(var b=a>>1,$=b+m/2;!(b>=$)&&i()[b>>>0];)++b;if(32<(b<<=1)-a&&Yh)return Yh.decode(r().slice(a,b));for(b="",$=0;!($>=m/2);++$){var z=n()[a+2*$>>>1>>>0];if(z==0)break;b+=String.fromCharCode(z)}return b},Cm=(a,m,b)=>{if(b??=2147483647,2>b)return 0;var $=m;b=(b-=2)<2*a.length?b/2:a.length;for(var z=0;z<b;++z){var me=a.charCodeAt(z);n()[m>>>1>>>0]=me,m+=2}return n()[m>>>1>>>0]=0,m-$},$m=a=>2*a.length,Sm=(a,m)=>{for(var b=0,$="";!(b>=m/4);){var z=s()[a+4*b>>>2>>>0];if(z==0)break;++b,65536<=z?(z-=65536,$+=String.fromCharCode(55296|z>>10,56320|1023&z)):$+=String.fromCharCode(z)}return $},km=(a,m,b)=>{if(m>>>=0,b??=2147483647,4>b)return 0;var $=m;b=$+b-4;for(var z=0;z<a.length;++z){var me=a.charCodeAt(z);if(55296<=me&&57343>=me&&(me=65536+((1023&me)<<10)|1023&a.charCodeAt(++z)),s()[m>>>2>>>0]=me,(m+=4)+4>b)break}return s()[m>>>2>>>0]=0,m-$},Pm=a=>{for(var m=0,b=0;b<a.length;++b){var $=a.charCodeAt(b);55296<=$&&57343>=$&&++b,m+=4}return m};function Am(a,m,b){if(a>>>=0,m>>>=0,b=oi(b>>>=0),m===2)var $=Em,z=Cm,me=$m,Ke=dt=>i()[dt>>>1>>>0];else m===4&&($=Sm,z=km,me=Pm,Ke=dt=>o()[dt>>>2>>>0]);Mi(a,{name:b,fromWireType:dt=>{for(var zt,Rt=o()[dt>>>2>>>0],tr=dt+4,Ar=0;Ar<=Rt;++Ar){var Dr=dt+4+Ar*m;Ar!=Rt&&Ke(Dr)!=0||(tr=$(tr,Dr-tr),zt===void 0?zt=tr:(zt+="\0",zt+=tr),tr=Dr+m)}return li(dt),zt},toWireType:(dt,zt)=>{if(typeof zt!="string")throw new Qi(`Cannot pass non-string to C++ string type ${b}`);var Rt=me(zt),tr=Ec(4+Rt+m);return o()[tr>>>2>>>0]=Rt/m,z(zt,tr+4,Rt+m),dt!==null&&dt.push(li,tr),tr},argPackAdvance:Yi,readValueFromPointer:up,Db(dt){li(dt)}})}function Im(a,m){Mi(a>>>=0,{Tb:!0,name:m=oi(m>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var Fm=()=>1;function Om(a){gp(a>>>0,!S,1,!k,131072,!1),Sh()}var Zh=a=>{if(!En)try{if(a(),!(0<ws))try{C?Cc(Mr):np(Mr)}catch(m){m instanceof ep||m=="unwind"||We(1,m)}}catch(m){m instanceof ep||m=="unwind"||We(1,m)}};function dp(a){a>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(s(),a>>>2,a).value.then(gc),a+=128,Atomics.store(s(),a>>>2,1))}var gc=()=>{var a=ea();a&&(dp(a),Zh(kf))};function Bm(a,m){(a>>>=0)==m>>>0?setTimeout(gc):C?postMessage({targetThread:a,cmd:"checkMailbox"}):(a=si[a])&&a.postMessage({cmd:"checkMailbox"})}var cp=[];function zm(a,m,b,$,z){for(m>>>=0,$/=2,cp.length=$,b=z>>>0>>>3,z=0;z<$;z++)cp[z]=Wr[b+2*z]?Wr[b+2*z+1]:c()[b+2*z+1>>>0];return(m?Jc[m]:E_[a])(...cp)}function Dm(a){a>>>=0,C?postMessage({cmd:"cleanupThread",thread:a}):$h(si[a])}function Lm(a){}var pp=(a,m)=>{var b=op[a];if(b===void 0)throw a=Ef(a),b=oi(a),li(a),new Qi(`${m} has unknown type ${b}`);return b},Jh=(a,m,b)=>{var $=[];return a=a.toWireType($,b),$.length&&(o()[m>>>2>>>0]=qn($)),a};function Rm(a,m,b){return m>>>=0,b>>>=0,a=Gn(a>>>0),m=pp(m,"emval::as"),Jh(m,b,a)}var wc=a=>{try{a()}catch(m){Yo(m)}},Zi=0,ai=null,ef=0,yc=[],tf={},rf={},Nm=0,hp=null,jm=[];function nf(a){return function(m){if(!En){if(Zi===0){var b=!1,$=!1;m((z=0)=>{if(!En&&(ef=z,b=!0,$)){Zi=2,wc(()=>Of(ai)),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.resume(),z=!1;try{var me=function(){var zt=s()[ai+8>>>2>>>0];return zt=Zt[rf[zt]],--ws,zt()}()}catch(zt){me=zt,z=!0}var Ke=!1;if(!ai){var dt=hp;dt&&(hp=null,(z?dt.reject:dt.resolve)(me),Ke=!0)}if(z&&!Ke)throw me}}),$=!0,b||(Zi=1,ai=function(){var z=Ec(65548),me=z+12;o()[z>>>2>>>0]=me,o()[z+4>>>2>>>0]=me+65536,me=yc[0];var Ke=tf[me];return Ke===void 0&&(Ke=Nm++,tf[me]=Ke,rf[Ke]=me),me=Ke,s()[z+8>>>2>>>0]=me,z}(),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.pause(),wc(()=>If(ai)))}else Zi===2?(Zi=0,wc(Bf),li(ai),ai=null,jm.forEach(Zh)):Yo(`invalid state: ${Zi}`);return ef}}(m=>{a().then(m)})}function Um(a){return a>>>=0,nf(()=>(a=Gn(a)).then(qn))}var bc=[];function Vm(a,m,b,$){return b>>>=0,$>>>=0,(a=bc[a>>>0])(null,m=Gn(m>>>0),b,$)}var Wm={},Mc=a=>{var m=Wm[a];return m===void 0?oi(a):m};function Gm(a,m,b,$,z){return b>>>=0,$>>>=0,z>>>=0,(a=bc[a>>>0])(m=Gn(m>>>0),m[b=Mc(b)],$,z)}var sf=()=>typeof globalThis=="object"?globalThis:Function("return this")();function qm(a){return(a>>>=0)==0?qn(sf()):(a=Mc(a),qn(sf()[a]))}var Hm=a=>{var m=bc.length;return bc.push(a),m},Km=(a,m)=>{for(var b=Array(a),$=0;$<a;++$)b[$]=pp(o()[m+4*$>>>2>>>0],"parameter "+$);return b},of=(a,m)=>Object.defineProperty(m,"name",{value:a});function Xm(a,m,b){var $=(m=Km(a,m>>>0)).shift();a--;var z=`return function (obj, func, destructorsRef, args) {
`,me=0,Ke=[];b===0&&Ke.push("obj");for(var dt=["retType"],zt=[$],Rt=0;Rt<a;++Rt)Ke.push("arg"+Rt),dt.push("argType"+Rt),zt.push(m[Rt]),z+=`  var arg${Rt} = argType${Rt}.readValueFromPointer(args${me?"+"+me:""});
`,me+=m[Rt].argPackAdvance;return z+=`  var rv = ${b===1?"new func":"func.call"}(${Ke.join(", ")});
`,$.Tb||(dt.push("emval_returnValue"),zt.push(Jh),z+=`  return emval_returnValue(retType, destructorsRef, rv);
`),dt.push(z+`};
`),a=function(tr){var Ar=Function;if(!(Ar instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Ar} which is not a function`);var Dr=of(Ar.name||"unknownFunctionName",function(){});return Dr.prototype=Ar.prototype,Dr=new Dr,(tr=Ar.apply(Dr,tr))instanceof Object?tr:Dr}(dt)(...zt),b=`methodCaller<(${m.map(tr=>tr.name).join(", ")}) => ${$.name}>`,Hm(of(b,a))}function Qm(a){return a=Mc(a>>>0),qn(l[a])}function Ym(a,m){return m>>>=0,a=Gn(a>>>0),m=Gn(m),qn(a[m])}function Zm(a){9<(a>>>=0)&&(vi[a+1]+=1)}function Jm(){return qn([])}function e_(a){a=Gn(a>>>0);for(var m=Array(a.length),b=0;b<a.length;b++)m[b]=a[b];return qn(m)}function t_(a){return qn(Mc(a>>>0))}function r_(){return qn({})}function n_(a){for(var m=Gn(a>>>=0);m.length;){var b=m.pop();m.pop()(b)}lp(a)}function i_(a,m,b){m>>>=0,b>>>=0,a=Gn(a>>>0),m=Gn(m),b=Gn(b),a[m]=b}function s_(a,m){return m>>>=0,a=(a=pp(a>>>0,"_emval_take_value")).readValueFromPointer(m),qn(a)}function o_(a,m){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),m>>>=0,a=new Date(1e3*a),s()[m>>>2>>>0]=a.getUTCSeconds(),s()[m+4>>>2>>>0]=a.getUTCMinutes(),s()[m+8>>>2>>>0]=a.getUTCHours(),s()[m+12>>>2>>>0]=a.getUTCDate(),s()[m+16>>>2>>>0]=a.getUTCMonth(),s()[m+20>>>2>>>0]=a.getUTCFullYear()-1900,s()[m+24>>>2>>>0]=a.getUTCDay(),a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,s()[m+28>>>2>>>0]=a}var Jo=a=>a%4==0&&(a%100!=0||a%400==0),af=[0,31,60,91,121,152,182,213,244,274,305,335],lf=[0,31,59,90,120,151,181,212,243,273,304,334];function a_(a,m){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),m>>>=0,a=new Date(1e3*a),s()[m>>>2>>>0]=a.getSeconds(),s()[m+4>>>2>>>0]=a.getMinutes(),s()[m+8>>>2>>>0]=a.getHours(),s()[m+12>>>2>>>0]=a.getDate(),s()[m+16>>>2>>>0]=a.getMonth(),s()[m+20>>>2>>>0]=a.getFullYear()-1900,s()[m+24>>>2>>>0]=a.getDay();var b=(Jo(a.getFullYear())?af:lf)[a.getMonth()]+a.getDate()-1|0;s()[m+28>>>2>>>0]=b,s()[m+36>>>2>>>0]=-60*a.getTimezoneOffset(),b=new Date(a.getFullYear(),6,1).getTimezoneOffset();var $=new Date(a.getFullYear(),0,1).getTimezoneOffset();a=0|(b!=$&&a.getTimezoneOffset()==Math.min($,b)),s()[m+32>>>2>>>0]=a}function l_(a){a>>>=0;var m=new Date(s()[a+20>>>2>>>0]+1900,s()[a+16>>>2>>>0],s()[a+12>>>2>>>0],s()[a+8>>>2>>>0],s()[a+4>>>2>>>0],s()[a>>>2>>>0],0),b=s()[a+32>>>2>>>0],$=m.getTimezoneOffset(),z=new Date(m.getFullYear(),6,1).getTimezoneOffset(),me=new Date(m.getFullYear(),0,1).getTimezoneOffset(),Ke=Math.min(me,z);return 0>b?s()[a+32>>>2>>>0]=+(z!=me&&Ke==$):0<b!=(Ke==$)&&(z=Math.max(me,z),m.setTime(m.getTime()+6e4*((0<b?Ke:z)-$))),s()[a+24>>>2>>>0]=m.getDay(),b=(Jo(m.getFullYear())?af:lf)[m.getMonth()]+m.getDate()-1|0,s()[a+28>>>2>>>0]=b,s()[a>>>2>>>0]=m.getSeconds(),s()[a+4>>>2>>>0]=m.getMinutes(),s()[a+8>>>2>>>0]=m.getHours(),s()[a+12>>>2>>>0]=m.getDate(),s()[a+16>>>2>>>0]=m.getMonth(),s()[a+20>>>2>>>0]=m.getYear(),a=m.getTime(),BigInt(isNaN(a)?-1:a/1e3)}function uf(a,m,b,$,z,me,Ke){return C?Qr(16,1,a,m,b,$,z,me,Ke):-52}function df(a,m,b,$,z,me){if(C)return Qr(17,1,a,m,b,$,z,me)}function u_(a,m,b,$){a>>>=0,m>>>=0,b>>>=0,$>>>=0;var z=new Date().getFullYear(),me=new Date(z,0,1),Ke=new Date(z,6,1);z=me.getTimezoneOffset();var dt=Ke.getTimezoneOffset(),zt=Math.max(z,dt);o()[a>>>2>>>0]=60*zt,s()[m>>>2>>>0]=+(z!=dt),me=(a=Rt=>Rt.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(me),Ke=a(Ke),dt<z?(Zo(me,b,17),Zo(Ke,$,17)):(Zo(me,$,17),Zo(Ke,b,17))}var fp=[],cf=(a,m)=>{fp.length=0;for(var b;b=r()[a++>>>0];){var $=b!=105;m+=($&=b!=112)&&m%8?4:0,fp.push(b==112?o()[m>>>2>>>0]:b==106?Wr[m>>>3]:b==105?s()[m>>>2>>>0]:c()[m>>>3>>>0]),m+=$?8:4}return fp};function d_(a,m,b){return a>>>=0,m=cf(m>>>0,b>>>0),Jc[a](...m)}function c_(a,m,b){return a>>>=0,m=cf(m>>>0,b>>>0),Jc[a](...m)}var p_=()=>{},h_=()=>Date.now();function f_(a,m){return Qt(_n(a>>>0,m>>>0))}var pf,m_=()=>{throw ws+=1,"unwind"};function __(){return 4294901760}pf=()=>performance.timeOrigin+performance.now();var g_=()=>navigator.hardwareConcurrency;function w_(){return Yo("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function y_(a){a>>>=0;var m=r().length;if(a<=m||4294901760<a)return!1;for(var b=1;4>=b;b*=2){var $=m*(1+.2/b);$=Math.min($,a+100663296);var z=Math;$=Math.max(a,$);e:{z=(z.min.call(z,4294901760,$+(65536-$%65536)%65536)-ir.buffer.byteLength+65535)/65536;try{ir.grow(z),Mn();var me=1;break e}catch{}me=void 0}if(me)return!0}return!1}var vc=()=>(Yo("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),dd={},hf=a=>{a.forEach(m=>{vc()})};function b_(){var a=Error().stack.toString().split(`
`);return a[0]=="Error"&&a.shift(),hf(a),dd.Pb=vc(),dd.ec=a,dd.Pb}function M_(a,m,b){if(a>>>=0,m>>>=0,dd.Pb==a)var $=dd.ec;else($=Error().stack.toString().split(`
`))[0]=="Error"&&$.shift(),hf($);for(var z=3;$[z]&&vc()!=a;)++z;for(a=0;a<b&&$[a+z];++a)s()[m+4*a>>>2>>>0]=vc();return a}var mp,_p={},ff=()=>{if(!mp){var a,m={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:we};for(a in _p)_p[a]===void 0?delete m[a]:m[a]=_p[a];var b=[];for(a in m)b.push(`${a}=${m[a]}`);mp=b}return mp};function mf(a,m){if(C)return Qr(18,1,a,m);a>>>=0,m>>>=0;var b=0;return ff().forEach(($,z)=>{var me=m+b;for(z=o()[a+4*z>>>2>>>0]=me,me=0;me<$.length;++me)t()[z++>>>0]=$.charCodeAt(me);t()[z>>>0]=0,b+=$.length+1}),0}function _f(a,m){if(C)return Qr(19,1,a,m);a>>>=0,m>>>=0;var b=ff();o()[a>>>2>>>0]=b.length;var $=0;return b.forEach(z=>$+=z.length+1),o()[m>>>2>>>0]=$,0}function gf(a){return C?Qr(20,1,a):52}function wf(a,m,b,$){return C?Qr(21,1,a,m,b,$):52}function yf(a,m,b,$){return C?Qr(22,1,a,m,b,$):70}var v_=[null,[],[]];function bf(a,m,b,$){if(C)return Qr(23,1,a,m,b,$);m>>>=0,b>>>=0,$>>>=0;for(var z=0,me=0;me<b;me++){var Ke=o()[m>>>2>>>0],dt=o()[m+4>>>2>>>0];m+=8;for(var zt=0;zt<dt;zt++){var Rt=r()[Ke+zt>>>0],tr=v_[a];Rt===0||Rt===10?((a===1?sr:Qt)(Oh(tr,0)),tr.length=0):tr.push(Rt)}z+=dt}return o()[$>>>2>>>0]=z,0}var Mf=[31,29,31,30,31,30,31,31,30,31,30,31],vf=[31,28,31,30,31,30,31,31,30,31,30,31],x_=(a,m)=>{t().set(a,m>>>0)};function xf(a,m,b,$){function z(Ve,Sr,Jr){for(Ve=typeof Ve=="number"?Ve.toString():Ve||"";Ve.length<Sr;)Ve=Jr[0]+Ve;return Ve}function me(Ve,Sr){return z(Ve,Sr,"0")}function Ke(Ve,Sr){function Jr(Df){return 0>Df?-1:0<Df?1:0}var bs;return(bs=Jr(Ve.getFullYear()-Sr.getFullYear()))===0&&(bs=Jr(Ve.getMonth()-Sr.getMonth()))===0&&(bs=Jr(Ve.getDate()-Sr.getDate())),bs}function dt(Ve){switch(Ve.getDay()){case 0:return new Date(Ve.getFullYear()-1,11,29);case 1:return Ve;case 2:return new Date(Ve.getFullYear(),0,3);case 3:return new Date(Ve.getFullYear(),0,2);case 4:return new Date(Ve.getFullYear(),0,1);case 5:return new Date(Ve.getFullYear()-1,11,31);case 6:return new Date(Ve.getFullYear()-1,11,30)}}function zt(Ve){var Sr=Ve.Bb;for(Ve=new Date(new Date(Ve.Cb+1900,0,1).getTime());0<Sr;){var Jr=Ve.getMonth(),bs=(Jo(Ve.getFullYear())?Mf:vf)[Jr];if(!(Sr>bs-Ve.getDate())){Ve.setDate(Ve.getDate()+Sr);break}Sr-=bs-Ve.getDate()+1,Ve.setDate(1),11>Jr?Ve.setMonth(Jr+1):(Ve.setMonth(0),Ve.setFullYear(Ve.getFullYear()+1))}return Jr=new Date(Ve.getFullYear()+1,0,4),Sr=dt(new Date(Ve.getFullYear(),0,4)),Jr=dt(Jr),0>=Ke(Sr,Ve)?0>=Ke(Jr,Ve)?Ve.getFullYear()+1:Ve.getFullYear():Ve.getFullYear()-1}a>>>=0,m>>>=0,b>>>=0,$>>>=0;var Rt=o()[$+40>>>2>>>0];for(var tr in $={kc:s()[$>>>2>>>0],jc:s()[$+4>>>2>>>0],Hb:s()[$+8>>>2>>>0],Lb:s()[$+12>>>2>>>0],Ib:s()[$+16>>>2>>>0],Cb:s()[$+20>>>2>>>0],ub:s()[$+24>>>2>>>0],Bb:s()[$+28>>>2>>>0],sc:s()[$+32>>>2>>>0],ic:s()[$+36>>>2>>>0],lc:Rt?_n(Rt):""},b=_n(b),Rt={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})b=b.replace(new RegExp(tr,"g"),Rt[tr]);var Ar="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Dr="January February March April May June July August September October November December".split(" ");for(tr in Rt={"%a":Ve=>Ar[Ve.ub].substring(0,3),"%A":Ve=>Ar[Ve.ub],"%b":Ve=>Dr[Ve.Ib].substring(0,3),"%B":Ve=>Dr[Ve.Ib],"%C":Ve=>me((Ve.Cb+1900)/100|0,2),"%d":Ve=>me(Ve.Lb,2),"%e":Ve=>z(Ve.Lb,2," "),"%g":Ve=>zt(Ve).toString().substring(2),"%G":zt,"%H":Ve=>me(Ve.Hb,2),"%I":Ve=>((Ve=Ve.Hb)==0?Ve=12:12<Ve&&(Ve-=12),me(Ve,2)),"%j":Ve=>{for(var Sr=0,Jr=0;Jr<=Ve.Ib-1;Sr+=(Jo(Ve.Cb+1900)?Mf:vf)[Jr++]);return me(Ve.Lb+Sr,3)},"%m":Ve=>me(Ve.Ib+1,2),"%M":Ve=>me(Ve.jc,2),"%n":()=>`
`,"%p":Ve=>0<=Ve.Hb&&12>Ve.Hb?"AM":"PM","%S":Ve=>me(Ve.kc,2),"%t":()=>"	","%u":Ve=>Ve.ub||7,"%U":Ve=>me(Math.floor((Ve.Bb+7-Ve.ub)/7),2),"%V":Ve=>{var Sr=Math.floor((Ve.Bb+7-(Ve.ub+6)%7)/7);if(2>=(Ve.ub+371-Ve.Bb-2)%7&&Sr++,Sr)Sr==53&&((Jr=(Ve.ub+371-Ve.Bb)%7)==4||Jr==3&&Jo(Ve.Cb)||(Sr=1));else{Sr=52;var Jr=(Ve.ub+7-Ve.Bb-1)%7;(Jr==4||Jr==5&&Jo(Ve.Cb%400-1))&&Sr++}return me(Sr,2)},"%w":Ve=>Ve.ub,"%W":Ve=>me(Math.floor((Ve.Bb+7-(Ve.ub+6)%7)/7),2),"%y":Ve=>(Ve.Cb+1900).toString().substring(2),"%Y":Ve=>Ve.Cb+1900,"%z":Ve=>{var Sr=0<=(Ve=Ve.ic);return Ve=Math.abs(Ve)/60,(Sr?"+":"-")+("0000"+(Ve/60*100+Ve%60)).slice(-4)},"%Z":Ve=>Ve.lc,"%%":()=>"%"},b=b.replace(/%%/g,"\0\0"),Rt)b.includes(tr)&&(b=b.replace(new RegExp(tr,"g"),Rt[tr]($)));return tr=function(Ve){var Sr=Array(ip(Ve)+1);return Dh(Ve,Sr,0,Sr.length),Sr}(b=b.replace(/\0\0/g,"%")),tr.length>m?0:(x_(tr,a),tr.length-1)}function T_(a,m,b,$){return xf(a>>>0,m>>>0,b>>>0,$>>>0)}C||function(){for(var a=l.numThreads-1;a--;)Ph();hn.unshift(()=>{Ki++,function(m){C?m():Promise.all(Xi.map(kh)).then(m)}(()=>wh())})}();for(var Tf=Array(256),xc=0;256>xc;++xc)Tf[xc]=String.fromCharCode(xc);Xh=Tf,Qi=l.BindingError=class extends Error{constructor(a){super(a),this.name="BindingError"}},l.InternalError=class extends Error{constructor(a){super(a),this.name="InternalError"}},vi.push(0,1,void 0,1,null,1,!0,1,!1,1),l.count_emval_handles=()=>vi.length/2-5-ap.length;var E_=[rp,Eh,Ah,Bh,zh,Lh,Rh,Nh,jh,Uh,Vh,Wh,Gh,qh,Hh,Kh,uf,df,mf,_f,gf,wf,yf,bf],Zt=function(){function a(b,$){return Zt=b.exports,Zt=function(){var z=Zt,me={};for(let[Ke,dt]of Object.entries(z))me[Ke]=typeof dt=="function"?(...zt)=>{yc.push(Ke);try{return dt(...zt)}finally{En||(yc.pop(),ai&&Zi===1&&yc.length===0&&(Zi=0,ws+=1,wc(Ff),typeof Fibers<"u"&&Fibers.tc()))}}:dt;return me}(),Zt=function(){var z=Zt,me=dt=>zt=>dt(zt)>>>0,Ke=dt=>()=>dt()>>>0;return(z=Object.assign({},z)).Ca=me(z.Ca),z.fb=Ke(z.fb),z.hb=me(z.hb),z.emscripten_main_runtime_thread_id=Ke(z.emscripten_main_runtime_thread_id),z.sb=me(z.sb),z.tb=Ke(z.tb),z}(),Ch.push(Zt.ib),fn.unshift(Zt.Ba),Ht=$,wh(),Zt}var m=xh();if(Ki++,l.instantiateWasm)try{return l.instantiateWasm(m,a)}catch(b){Qt(`Module.instantiateWasm callback failed with error: ${b}`),y(b)}return Zc||=l.locateFile?yh("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":l.locateFile?l.locateFile("ort-wasm-simd-threaded.jsep.wasm",Be):Be+"ort-wasm-simd-threaded.jsep.wasm":new URL(N("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),N.b).href,function(b,$){var z=Zc;return wt||typeof WebAssembly.instantiateStreaming!="function"||yh(z)||bh(z)||typeof fetch!="function"?vh(z,b,$):fetch(z,{credentials:"same-origin"}).then(me=>WebAssembly.instantiateStreaming(me,b).then($,function(Ke){return Qt(`wasm streaming compile failed: ${Ke}`),Qt("falling back to ArrayBuffer instantiation"),vh(z,b,$)}))}(m,function(b){a(b.instance,b.module)}).catch(y),{}}(),Ef=a=>(Ef=Zt.Ca)(a),Cf=()=>(Cf=Zt.Da)();l._OrtInit=(a,m)=>(l._OrtInit=Zt.Ea)(a,m),l._OrtGetLastError=(a,m)=>(l._OrtGetLastError=Zt.Fa)(a,m),l._OrtCreateSessionOptions=(a,m,b,$,z,me,Ke,dt,zt,Rt)=>(l._OrtCreateSessionOptions=Zt.Ga)(a,m,b,$,z,me,Ke,dt,zt,Rt),l._OrtAppendExecutionProvider=(a,m)=>(l._OrtAppendExecutionProvider=Zt.Ha)(a,m),l._OrtAddFreeDimensionOverride=(a,m,b)=>(l._OrtAddFreeDimensionOverride=Zt.Ia)(a,m,b),l._OrtAddSessionConfigEntry=(a,m,b)=>(l._OrtAddSessionConfigEntry=Zt.Ja)(a,m,b),l._OrtReleaseSessionOptions=a=>(l._OrtReleaseSessionOptions=Zt.Ka)(a),l._OrtCreateSession=(a,m,b)=>(l._OrtCreateSession=Zt.La)(a,m,b),l._OrtReleaseSession=a=>(l._OrtReleaseSession=Zt.Ma)(a),l._OrtGetInputOutputCount=(a,m,b)=>(l._OrtGetInputOutputCount=Zt.Na)(a,m,b),l._OrtGetInputName=(a,m)=>(l._OrtGetInputName=Zt.Oa)(a,m),l._OrtGetOutputName=(a,m)=>(l._OrtGetOutputName=Zt.Pa)(a,m),l._OrtFree=a=>(l._OrtFree=Zt.Qa)(a),l._OrtCreateTensor=(a,m,b,$,z,me)=>(l._OrtCreateTensor=Zt.Ra)(a,m,b,$,z,me),l._OrtGetTensorData=(a,m,b,$,z)=>(l._OrtGetTensorData=Zt.Sa)(a,m,b,$,z),l._OrtReleaseTensor=a=>(l._OrtReleaseTensor=Zt.Ta)(a),l._OrtCreateRunOptions=(a,m,b,$)=>(l._OrtCreateRunOptions=Zt.Ua)(a,m,b,$),l._OrtAddRunConfigEntry=(a,m,b)=>(l._OrtAddRunConfigEntry=Zt.Va)(a,m,b),l._OrtReleaseRunOptions=a=>(l._OrtReleaseRunOptions=Zt.Wa)(a),l._OrtCreateBinding=a=>(l._OrtCreateBinding=Zt.Xa)(a),l._OrtBindInput=(a,m,b)=>(l._OrtBindInput=Zt.Ya)(a,m,b),l._OrtBindOutput=(a,m,b,$)=>(l._OrtBindOutput=Zt.Za)(a,m,b,$),l._OrtClearBoundOutputs=a=>(l._OrtClearBoundOutputs=Zt._a)(a),l._OrtReleaseBinding=a=>(l._OrtReleaseBinding=Zt.$a)(a),l._OrtRunWithBinding=(a,m,b,$,z)=>(l._OrtRunWithBinding=Zt.ab)(a,m,b,$,z),l._OrtRun=(a,m,b,$,z,me,Ke,dt)=>(l._OrtRun=Zt.bb)(a,m,b,$,z,me,Ke,dt),l._OrtEndProfiling=a=>(l._OrtEndProfiling=Zt.cb)(a),l._JsepOutput=(a,m,b)=>(l._JsepOutput=Zt.db)(a,m,b),l._JsepGetNodeName=a=>(l._JsepGetNodeName=Zt.eb)(a);var Tc,ea=()=>(ea=Zt.fb)(),li=l._free=a=>(li=l._free=Zt.gb)(a),Ec=l._malloc=a=>(Ec=l._malloc=Zt.hb)(a),gp=(a,m,b,$,z,me)=>(gp=Zt.kb)(a,m,b,$,z,me),$f=()=>($f=Zt.lb)(),Sf=(a,m,b,$,z)=>(Sf=Zt.mb)(a,m,b,$,z),wp=a=>(wp=Zt.nb)(a),Cc=a=>(Cc=Zt.ob)(a),kf=()=>(kf=Zt.pb)(),Pf=(a,m)=>(Pf=Zt.qb)(a,m),$c=a=>($c=Zt.rb)(a),yp=a=>(yp=Zt.sb)(a),bp=()=>(bp=Zt.tb)(),Af=l.dynCall_ii=(a,m)=>(Af=l.dynCall_ii=Zt.vb)(a,m),If=a=>(If=Zt.wb)(a),Ff=()=>(Ff=Zt.xb)(),Of=a=>(Of=Zt.yb)(a),Bf=()=>(Bf=Zt.zb)();function zf(){0<Ki||(C?(h(l),C||_c(fn),startWorker(l)):(_c(hn),0<Ki||Tc||(Tc=!0,l.calledRun=!0,En||(C||_c(fn),h(l),C||_c(Hi)))))}return l.___start_em_js=881578,l.___stop_em_js=881800,l.stackSave=()=>bp(),l.stackRestore=a=>$c(a),l.stackAlloc=a=>yp(a),l.UTF8ToString=_n,l.stringToUTF8=Zo,l.lengthBytesUTF8=ip,gs=function a(){Tc||zf(),Tc||(gs=a)},zf(),x}),De=Se,globalThis.self?.name==="em-pthread"&&Se()}),Ne,at,vt,_t,kt,M,d,f,I=Q(()=>{Ir(),Ne=import.meta.url??(typeof document<"u"?document.currentScript?.src:typeof self<"u"?self.location?.href:void 0),at=typeof location>"u"?void 0:location.origin,vt=(e,t)=>{try{let r=t??Ne;return(r?new URL(e,r):new URL(e)).origin===at}catch{return!1}},_t=async e=>{let t=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(t)},kt=(gn(),q(Er)).default,M=async()=>{if(!Ne)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(vt(Ne))return[void 0,kt()];let e=await _t(Ne);return[e,kt(e)]},d=(Ie(),q(ht)).default,f=async(e,t,r)=>[void 0,d]}),B,G,pe,Mt,Nt,qt,nr,jt,Br=Q(()=>{I(),G=!1,pe=!1,Mt=!1,Nt=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},qt=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},nr=async e=>{if(G)return Promise.resolve();if(pe)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Mt)throw new Error("previous call to 'initializeWebAssembly()' failed.");pe=!0;let t=e.initTimeout,r=e.numThreads;if(!qt())throw new Error("WebAssembly SIMD is not supported in the current environment.");let n=Nt();r>1&&!n&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=r=1);let i=e.wasmPaths,s=typeof i=="string"?i:void 0,o=i?.mjs,u=o?.href??o,c=i?.wasm,h=c?.href??c,y=e.wasmBinary,[l,x]=await f(u,s,r>1),k=!1,S=[];if(t>0&&S.push(new Promise(C=>{setTimeout(()=>{k=!0,C()},t)})),S.push(new Promise((C,J)=>{let Z={numThreads:r};y?Z.wasmBinary=y:(h||s)&&(Z.locateFile=(F,ne)=>h??(s??ne)+F),x(Z).then(F=>{pe=!1,G=!0,B=F,C(),l&&URL.revokeObjectURL(l)},F=>{pe=!1,Mt=!0,J(F)})})),await Promise.race(S),k)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},jt=()=>{if(G&&B)return B;throw new Error("WebAssembly is not initialized yet.")}}),kr,zn,Rr,ci=Q(()=>{Br(),kr=(e,t)=>{let r=jt(),n=r.lengthBytesUTF8(e)+1,i=r._malloc(n);return r.stringToUTF8(e,i,n),t.push(i),i},zn=(e,t,r,n)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,s])=>{let o=t?t+i:i;if(typeof s=="object")zn(s,o+".",r,n);else if(typeof s=="string"||typeof s=="number")n(o,s.toString());else if(typeof s=="boolean")n(o,s?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof s}`)})},Rr=e=>{let t=jt(),r=t.stackSave();try{let n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);let i=t.HEAP32[n/4],s=t.HEAPU32[n/4+1],o=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${o}`)}finally{t.stackRestore(r)}}}),Ei,Hn=Q(()=>{Br(),ci(),Ei=e=>{let t=jt(),r=0,n=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let s=0;return e?.tag!==void 0&&(s=kr(e.tag,n)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,s),r===0&&Rr("Can't create run options."),e?.extra!==void 0&&zn(e.extra,"",new WeakSet,(o,u)=>{let c=kr(o,n),h=kr(u,n);t._OrtAddRunConfigEntry(r,c,h)!==0&&Rr(`Can't set a run config entry: ${o} - ${u}.`)}),[r,n]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),n.forEach(o=>t._free(o)),s}}}),Ci,$i,Si,ki,Pi,Jn=Q(()=>{Br(),ci(),Ci=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},$i=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Si=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},ki=(e,t,r)=>{for(let n of t){let i=typeof n=="string"?n:n.name;switch(i){case"webnn":if(i="WEBNN",typeof n!="string"){let o=n?.deviceType;if(o){let u=kr("deviceType",r),c=kr(o,r);jt()._OrtAddSessionConfigEntry(e,u,c)!==0&&Rr(`Can't set a session config entry: 'deviceType' - ${o}.`)}}break;case"webgpu":if(i="JS",typeof n!="string"){let o=n;if(o?.preferredLayout){if(o.preferredLayout!=="NCHW"&&o.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${o.preferredLayout}`);let u=kr("preferredLayout",r),c=kr(o.preferredLayout,r);jt()._OrtAddSessionConfigEntry(e,u,c)!==0&&Rr(`Can't set a session config entry: 'preferredLayout' - ${o.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let s=kr(i,r);jt()._OrtAppendExecutionProvider(e,s)!==0&&Rr(`Can't append execution provider: ${i}.`)}},Pi=e=>{let t=jt(),r=0,n=[],i=e||{};Si(i);try{let s=Ci(i.graphOptimizationLevel??"all"),o=$i(i.executionMode??"sequential"),u=typeof i.logId=="string"?kr(i.logId,n):0,c=i.logSeverityLevel??2;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log serverity level is not valid: ${c}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let y=typeof i.optimizedModelFilePath=="string"?kr(i.optimizedModelFilePath,n):0;if(r=t._OrtCreateSessionOptions(s,!!i.enableCpuMemArena,!!i.enableMemPattern,o,!!i.enableProfiling,0,u,c,h,y),r===0&&Rr("Can't create session options."),i.executionProviders&&ki(r,i.executionProviders,n),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let l=kr("enableGraphCapture",n),x=kr(i.enableGraphCapture.toString(),n);t._OrtAddSessionConfigEntry(r,l,x)!==0&&Rr(`Can't set a session config entry: 'enableGraphCapture' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[l,x]of Object.entries(i.freeDimensionOverrides)){if(typeof l!="string")throw new Error(`free dimension override name must be a string: ${l}`);if(typeof x!="number"||!Number.isInteger(x)||x<0)throw new Error(`free dimension override value must be a non-negative integer: ${x}`);let k=kr(l,n);t._OrtAddFreeDimensionOverride(r,k,x)!==0&&Rr(`Can't set a free dimension override: ${l} - ${x}.`)}return i.extra!==void 0&&zn(i.extra,"",new WeakSet,(l,x)=>{let k=kr(l,n),S=kr(x,n);t._OrtAddSessionConfigEntry(r,k,S)!==0&&Rr(`Can't set a session config entry: ${l} - ${x}.`)}),[r,n]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),n.forEach(o=>t._free(o)),s}}}),Kn,Cn,Dn,pi,Fn,hi,fi,mi,er=Q(()=>{Kn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Cn=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},Dn=(e,t)=>{let r=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],n=typeof t=="number"?t:t.reduce((i,s)=>i*s,1);return r>0?Math.ceil(n*r):void 0},pi=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Fn=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},hi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",fi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool",mi=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),ei,Ai=Q(()=>{Ir(),ei=async e=>{if(typeof e=="string"){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),n=r?parseInt(r,10):0;if(n<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),s;try{s=new ArrayBuffer(n)}catch(u){if(u instanceof RangeError){let c=Math.ceil(n/65536);s=new WebAssembly.Memory({initial:c,maximum:c}).buffer}else throw u}let o=0;for(;;){let{done:u,value:c}=await i.read();if(u)break;let h=c.byteLength;new Uint8Array(s,o,h).set(c),o+=h}return new Uint8Array(s,0,n)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),Ii,_i,Fi,Oi,ti,Ji,_e,_=Q(()=>{er(),Ii=["V","I","W","E","F"],_i=(e,t)=>{console.log(`[${Ii[e]},${new Date().toISOString()}]${t}`)},ti=(e,t)=>{Fi=e,Oi=t},Ji=(e,t)=>{let r=Fn(e),n=Fn(Fi);r>=n&&_i(r,typeof t=="function"?t():t)},_e=(...e)=>{Oi&&Ji(...e)}}),V,ae=Q(()=>{er(),V=(e,t)=>new(pi(t))(e)}),he=Q(()=>{}),ze,et,St,Ft,Ot,Tt,hr,ur,vr,Kr=Q(()=>{_(),he(),ze=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),et=[],St=e=>Math.ceil(e/16)*16,Ft=e=>{for(let t=0;t<et.length;t++){let r=et[t];if(e<=r)return r}return Math.ceil(e/16)*16},Ot=1,Tt=()=>Ot++,hr=async(e,t,r,n)=>{let i=St(r),s=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(t,0,s,0,i),e.flush(),await s.mapAsync(GPUMapMode.READ);let u=s.getMappedRange();if(n){let c=n();return c.set(new Uint8Array(u,0,r)),c}else return new Uint8Array(u.slice(0,r))}finally{s.destroy()}},ur=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[t]of ze)et.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[]);this.sessionCount=0}upload(e,t){let r=t.buffer,n=t.byteOffset,i=t.byteLength,s=St(i),o=this.storageCache.get(e);if(!o)throw new Error("gpu data for uploading does not exist");if(o.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),c=u.getMappedRange();new Uint8Array(c).set(new Uint8Array(r,n,i)),u.unmap();let h=this.backend.getCommandEncoder();this.backend.endComputePass(),h.copyBufferToBuffer(u,0,o.gpuData.buffer,0,s),_e("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(t);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(r.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=St(r.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(r.gpuData.buffer,0,n.gpuData.buffer,0,i)}registerExternalBuffer(e,t,r){let n;if(r){if(n=r[0],e===r[1])return _e("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else n=Tt();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:e},originalSize:t}),_e("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, registered.`),n}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),_e("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r=Ft(e),n,i=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||s){let u=(i?this.freeBuffers:this.freeUniformBuffers).get(r);u?u.length>0?n=u.pop():n=this.backend.device.createBuffer({size:r,usage:t}):n=this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let o={id:Tt(),type:0,buffer:n};return this.storageCache.set(o.id,{gpuData:o,originalSize:e}),_e("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${o.id}`),o}get(e){return this.storageCache.get(e)?.gpuData}release(e){let t=this.storageCache.get(e);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return _e("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("data does not exist");await hr(this.backend,r.gpuData.buffer,r.originalSize,t)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let t=ze.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(_e("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.storageCache=new Map)}},vr=(...e)=>new ur(...e)}),yn,dr,$r=Q(()=>{yn=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},dr=e=>new yn(e)}),vn,$n,Fe,Yr,on,Sn,Ln,Yt=Q(()=>{vn=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},$n=class{static calcShape(e,t,r=!1){let n=e.length,i=t.length;if(n===0)return t;if(i===0)return e;let s=Math.max(e.length,t.length),o=new Array(s);if(r){if(n<2||i<2)return;let u=vn.calcMatMulShape([e[n-2],e[n-1]],[t[i-2],t[i-1]]);if(u===void 0)return;[o[s-2],o[s-1]]=u}for(let u=r?3:1;u<=s;u++){let c=n-u<0?1:e[n-u],h=i-u<0?1:t[i-u];if(c!==h&&c>1&&h>1)return;let y=Math.max(c,h);if(c&&h)o[s-u]=Math.max(c,h);else{if(y>1)return;o[s-u]=0}}return o}static isValidBroadcast(e,t){let r=e.length,n=t.length;if(r>n)return!1;for(let i=1;i<=r;i++)if(e[r-i]!==1&&e[r-i]!==t[n-i])return!1;return!0}},Fe=class kc{static size(t){return kc.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let n=t.length;if(n===0)return[];let i=new Array(n),s=n-1;for(;s>=0;){if(t[s]%r===0){i[s]=t[s]/r;break}if(r%t[s]!==0)throw new Error("cannot convert shape");i[s]=1,r/=t[s],s--}for(s--;s>=0;s--)i[s]=t[s];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return kc.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return kc.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,n){let i=1;for(let s=r;s<n;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[s]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let n=new Array(r);n[r-1]=1,n[r-2]=t[r-1];for(let i=r-3;i>=0;--i)n[i]=n[i+1]*t[i+1];return n}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(n=>this.normalizeAxis(n,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(n=>t[n]):t.slice().reverse()}static padShape(t,r){let n=t.length;return t.map((i,s)=>i+r[s]+r[s+n])}static areEqual(t,r){return t.length!==r.length?!1:t.every((n,i)=>n===r[i])}},Yr=class hd{static adjustPoolAttributes(t,r,n,i,s,o){if(!t&&n.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let u=0;u<r.length-2;u++)u>=n.length?n.push(r[u+2]):n[u]=r[u+2];for(let u=0;u<n.length;u++)if(u<i.length){if(i[u]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let u=0;u<n.length;u++)if(u<s.length){if(s[u]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let u=0;u<n.length*2;u++)if(u<o.length){if(o[u]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let u=0;u<n.length;u++){if(n[u]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[u]>=n[u]||o[u+n.length]>=n[u])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,n,i,s,o,u){if(u){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let c=0;c<t.length-2;c++)hd.adjustPadAndReturnShape(t[c+(o?1:2)],r[c],n[c],i[c],s,c,c+t.length-2,u)}}static computePoolOutputShape(t,r,n,i,s,o,u){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let c=[r[0],r[1]];return hd.computeShapeHelper(t,r,c,n,i,s,o,u),c}static computeConvOutputShape(t,r,n,i,s,o,u){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let c=[t[0],r[0]];return hd.computeShapeHelper(!1,t,c,n,i,s,o,u),c}static computeShapeHelper(t,r,n,i,s,o,u,c){if(t)for(let h=0;h<r.length-2;h++)n.push(1);else for(let h=0;h<r.length-2;h++)n.push(hd.adjustPadAndReturnShape(r[h+2],i[h],s[h],o[h],u,h,h+r.length-2,c))}static adjustPadAndReturnShape(t,r,n,i,s,o,u,c){let h=n*(i-1)+1;if(c&&c!=="NOTSET")switch(c){case"VALID":return s[o]=0,s[u]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(n!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return s[o]=Math.floor(c==="SAME_LOWER"?(y+1)/2:y/2),s[u]=y-s[o],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[o]+s[u]-h)/r+1)}},on=class{static getShapeOfGemmResult(e,t,r,n,i){if(e.length!==2||r.length!==2)throw new Error("shape need to be of size 2");let s,o,u;t?(s=e[1],o=e[0]):(s=e[0],o=e[1]);let c=-1;if(n?(u=r[0],c=1):(u=r[1],c=0),r[c]!==o)throw new Error("dimension mismatch");if(s<=0||u<=0||o<=0)throw new Error("invalid shape specified");if(i&&!$n.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,o]}},Sn=-34028234663852886e22,Ln=34028234663852886e22}),dn,Xr,fr,Fr,At,gr,ri,Xn,Rn,Ut,es,nt,Vt,xs,Ts,na,gi,cr=Q(()=>{er(),Yt(),dn=64,Xr=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},fr=(e,t=1)=>{let r=Xr(e,t);return typeof r=="string"?r:r[0]},Fr=(e,t=1)=>{let r=Xr(e,t);return typeof r=="string"?r:r[1]},At=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:Fe.computeStrides(r)})}),t},gr=e=>e%4===0?4:e%2===0?2:1,ri=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Xn=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,Rn=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,Ut=(e,t,r,n)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?n==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:n==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,es=(e,t,r,n,i)=>{let s=typeof r=="number",o=s?r:r.length,u=[...new Array(o).keys()],c=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,h=Xr(t,i),y=typeof h=="string"?h:h[1],l=typeof h=="string"?h:h[0],x={indices:c,value:y,storage:l,tensor:t},k=Je=>typeof Je=="string"?Je:`${Je}u`,S={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},C=s?"uniforms.":"",J=`${C}${e}_shape`,Z=`${C}${e}_strides`,F="";for(let Je=0;Je<o-1;Je++)F+=`
    let dim${Je} = current / ${Ut(Z,Je,o)};
    let rest${Je} = current % ${Ut(Z,Je,o)};
    indices[${Je}] = dim${Je};
    current = rest${Je};
    `;F+=`indices[${o-1}] = current;`;let ne=o<2?"":`
  fn o2i_${e}(offset: u32) -> ${x.indices} {
    var indices: ${x.indices};
    var current = offset;
    ${F}
    return indices;
  }`,ue=Je=>(S.offsetToIndices=!0,o<2?Je:`o2i_${e}(${Je})`),we=[];if(o>=2)for(let Je=o-1;Je>=0;Je--)we.push(`${Ut(Z,Je,o)} * (indices[${Je}])`);let We=o<2?"":`
  fn i2o_${e}(indices: ${x.indices}) -> u32 {
    return ${we.join("+")};
  }`,Be=Je=>(S.indicesToOffset=!0,o<2?Je:`i2o_${e}(${Je})`),wt=(...Je)=>o===0?"0u":`${x.indices}(${Je.map(k).join(",")})`,Lt=(Je,Et)=>o<2?`${Je}`:`${Ut(Je,Et,o)}`,Dt=(Je,Et,pr)=>o<2?`${Je}=${pr};`:`${Ut(Je,Et,o)}=${pr};`,sr={},Qt=(Je,Et)=>{S.broadcastedIndicesToOffset=!0;let pr=`${Et.name}broadcastedIndicesTo${e}Offset`;if(pr in sr)return`${pr}(${Je})`;let Ur=[];for(let Wr=o-1;Wr>=0;Wr--){let Wn=Et.indicesGet("outputIndices",Wr+Et.rank-o);Ur.push(`${Lt(Z,Wr)} * (${Wn} % ${Lt(J,Wr)})`)}return sr[pr]=`fn ${pr}(outputIndices: ${Et.type.indices}) -> u32 {
             return ${Ur.length>0?Ur.join("+"):"0u"};
           }`,`${pr}(${Je})`},or=(Je,Et)=>(()=>{if(x.storage===x.value)return`${e}[${Je}]=${Et};`;if(x.storage==="vec2<u32>"&&x.value==="i32")return`${e}[${Je}]=vec2<u32>(u32(${Et}), select(0u, 0xFFFFFFFFu, ${Et} < 0));`;if(x.storage==="vec2<u32>"&&x.value==="u32")return`${e}[${Je}]=vec2<u32>(u32(${Et}), 0u);`;if(x.storage==="u32"&&x.value==="vec4<bool>")return`${e}[${Je}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${Et}));`;throw new Error(`not supported combination of storage type ${x.storage} and value type ${x.value} yet`)})(),Tr=Je=>(()=>{if(x.storage===x.value)return`${e}[${Je}]`;if(x.storage==="vec2<u32>"&&x.value==="i32")return`i32(${e}[${Je}].x)`;if(x.storage==="vec2<u32>"&&x.value==="u32")return`u32(${e}[${Je}].x)`;if(x.storage==="u32"&&x.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${Je}] & 0xFFu), bool(${e}[${Je}] & 0xFF00u), bool(${e}[${Je}] & 0xFF0000u), bool(${e}[${Je}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${x.storage} and value type ${x.value} yet`)})(),ir=o<2?"":`
  fn get_${e}ByIndices(indices: ${x.indices}) -> ${y} {
    return ${Tr(`i2o_${e}(indices)`)};
  }`,Ht=o<2?"":(()=>{let Je=u.map(pr=>`d${pr}: u32`).join(", "),Et=u.map(pr=>`d${pr}`).join(", ");return`
  fn get_${e}(${Je}) -> ${y} {
    return get_${e}ByIndices(${wt(Et)});
  }`})(),Mr=(...Je)=>{if(Je.length!==o)throw new Error(`indices length must be ${o}`);let Et=Je.map(k).join(",");return o===0?Tr("0u"):o===1?Tr(Et[0]):(S.get=!0,S.getByIndices=!0,S.indicesToOffset=!0,`get_${e}(${Et})`)},br=Je=>o<2?Tr(Je):(S.getByIndices=!0,S.indicesToOffset=!0,`get_${e}ByIndices(${Je})`),Gt=o<2?"":`
  fn set_${e}ByIndices(indices: ${x.indices}, value: ${y}) {
    ${or(`i2o_${e}(indices)`,"value")}
  }`,_r=o<2?"":(()=>{let Je=u.map(pr=>`d${pr}: u32`).join(", "),Et=u.map(pr=>`d${pr}`).join(", ");return`
  fn set_${e}(${Je}, value: ${y}) {
    set_${e}ByIndices(${wt(Et)}, value);
  }`})();return{impl:()=>{let Je=[],Et=!1;return S.offsetToIndices&&(Je.push(ne),Et=!0),S.indicesToOffset&&(Je.push(We),Et=!0),S.broadcastedIndicesToOffset&&(Object.values(sr).forEach(pr=>Je.push(pr)),Et=!0),S.set&&(Je.push(_r),Et=!0),S.setByIndices&&(Je.push(Gt),Et=!0),S.get&&(Je.push(Ht),Et=!0),S.getByIndices&&(Je.push(ir),Et=!0),!s&&Et&&Je.unshift(`const ${J} = ${x.indices}(${r.join(",")});`,`const ${Z} = ${x.indices}(${Fe.computeStrides(r).join(",")});`),Je.join(`
`)},type:x,offsetToIndices:ue,indicesToOffset:Be,broadcastedIndicesToOffset:Qt,indices:wt,indicesGet:Lt,indicesSet:Dt,set:(...Je)=>{if(Je.length!==o+1)throw new Error(`indices length must be ${o}`);let Et=Je[o];if(typeof Et!="string")throw new Error("value must be string");let pr=Je.slice(0,o).map(k).join(",");return o===0?or("0u",Et):o===1?or(pr[0],Et):(S.set=!0,S.setByIndices=!0,S.indicesToOffset=!0,`set_${e}(${pr}, ${Et})`)},setByOffset:or,setByIndices:(Je,Et)=>o<2?or(Je,Et):(S.setByIndices=!0,S.indicesToOffset=!0,`set_${e}ByIndices(${Je}, ${Et});`),get:Mr,getByOffset:Tr,getByIndices:br,usage:n,name:e,strides:Z,shape:J,rank:o}},nt=(e,t,r,n=1)=>es(e,t,r,"input",n),Vt=(e,t,r,n=1)=>es(e,t,r,"output",n),xs=(e,t,r,n=1)=>es(e,t,r,"internal",n),Ts=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=dn){let t=typeof e=="number"?e:e[0],r=typeof e=="number"?1:e[1],n=typeof e=="number"?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||n>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*r*n>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=i?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${t*r*n}u + local_idx;`;return`@compute @workgroup_size(${t}, ${r}, ${n})
  fn main(${s}) {
    ${o}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let r=e.usage==="input"?"read":"read_write",n=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${r}> ${e.name}: array<${n}>;`}declareVariables(...e){return e.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(e,t,r=1){return this.uniforms.push({name:e,type:t,length:r}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:t,type:r,length:n}of this.uniforms)if(n&&n>4)r==="f16"?e.push(`@align(16) ${t}:array<mat2x4<${r}>, ${Math.ceil(n/8)}>`):e.push(`${t}:array<vec4<${r}>, ${Math.ceil(n/4)}>`);else{let i=n==null||n===1?r:`vec${n}<${r}>`;e.push(`${t}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},na=(e,t)=>new Ts(e,t),gi=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;i++){let s=r-1-i,o=e[s]||1;(t[t.length-1-i]||1)>1&&o===1&&n.unshift(s)}return n}}),ia,Es,ni,sa,_d,bn,gd,oa,Nn=Q(()=>{er(),Yt(),$r(),cr(),ia=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Es=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,ni=(e,t)=>Fe.sortBasedOnPerm(e,Es(e.length,t)),sa=(e,t,r,n)=>{let i=`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`;for(let s=0;s<t;++s)i+=r.indicesSet("a",e[s],`i[${s}]`);return i+="return a;}"},_d=(e,t)=>{let r=[],n=[];for(let i=0;i<e.length;++i)e[i]!==1&&r.push(e[i]),e[t[i]]!==1&&n.push(t[i]);return{newShape:r,newPerm:n}},bn=(e,t)=>{let r=e.dataType,n=e.dims.length,i=Es(n,t),s=ni(e.dims,i),{newShape:o,newPerm:u}=_d(e.dims,i),c=Fe.areEqual(u,[2,3,1]),h=Fe.areEqual(u,[3,1,2]),y=o.length===2&&u[0]>u[1]||c||h,l=y?o:e.dims,x=s;y&&(l=c?[o[0],o[1]*o[2]]:h?[o[0]*o[1],o[2]]:o,x=[l[1],l[0]]);let k=nt("a",r,l.length),S=Vt("output",r,x.length),C=16,J;return y?J=Z=>`
  ${Z.registerUniform("output_size","u32").declareVariables(k,S)}
  var<workgroup> tile : array<array<${S.type.value}, ${C+1}>, ${C}>;
  ${Z.mainStart([C,C,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${C} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${C}u + local_id.x;
    let input_row = workgroup_id_x * ${C}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${k.getByIndices(`${k.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${C}u + local_id.x;
    let output_row = workgroup_id_y * ${C}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${S.setByIndices(`${S.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`:J=Z=>`
  ${Z.registerUniform("output_size","u32").declareVariables(k,S)}

  ${sa(i,n,k,S)}

  ${Z.mainStart()}
    ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${S.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${S.setByOffset("global_idx",k.getByIndices("aIndices"))}
  }`,{name:y?"TransposeShared":"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let Z=Fe.size(s);return{outputs:[{dims:s,dataType:e.dataType}],dispatchGroup:y?{x:Math.ceil(x[1]/C),y:Math.ceil(x[0]/C)}:{x:Math.ceil(Z/64)},programUniforms:[{type:12,data:Z},...At(l,x)]}},getShaderSource:J}},gd=(e,t)=>{ia(e.inputs),e.compute(bn(e.inputs[0],t.perm))},oa=e=>dr({perm:e.perm})}),aa,la,ua,da,ca,Cs,pa,ha,$s,fa,kn,Ss,ma,_a,ks,ga,wa,Ps,ya,ba,As,wd=Q(()=>{er(),Yt(),cr(),js(),Nn(),aa={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},la={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},ua={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},da={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ca=(e,t)=>{let r=[];for(let n=t-e;n<t;++n)r.push(n);return r},Cs=(e,t)=>{let r=[],n=e.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&r.push(e[s]);let i=t.map(s=>e[s]);return[r,i]},pa=(e,t)=>{let r=e.length+t.length,n=[],i=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?n.push(e[i++]):n.push(1);return n},ha=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},$s=(e,t)=>{let r=[];if(!ha(e,t)){for(let n=0;n<t;++n)e.indexOf(n)===-1&&r.push(n);e.forEach(n=>r.push(n))}return r},fa=(e,t,r,n,i,s,o)=>{let u=r[0].dims,c=Fe.size(s),h=Fe.size(o),y=nt("_A",r[0].dataType,u),l=Vt("output",i,s),x=32,k=`
          var<workgroup> aBestValues : array<f32, ${x}>;
       `;return{name:e,shaderCache:t,getShaderSource:S=>`
        ${S.registerUniform("reduceSize","u32").declareVariables(y,l)}
        ${k}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${S.mainStart(x)}

          let outputIndex = global_idx / ${x};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${ua[n]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${x}) {
           let candidate = f32(${y.getByOffset("offset + k")});
           bestValue = ${aa[n]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${x}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${la[n]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${l.setByOffset("outputIndex",`${n==="mean"?`${l.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${l.type.storage}(${da[n]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:c},programUniforms:[{type:12,data:h}]})}},kn=(e,t,r,n)=>{let i=e.inputs.length===1?r:Fs(e.inputs,r),s=i.axes;s.length===0&&!i.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((k,S)=>S));let o=Fe.normalizeAxes(s,e.inputs[0].dims.length),u=o,c=e.inputs[0],h=$s(u,e.inputs[0].dims.length);h.length>0&&(c=e.compute(bn(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],u=ca(u.length,c.dims.length));let[y,l]=Cs(c.dims,u),x=y;i.keepDims&&(x=pa(y,o)),e.compute(fa(t,{hint:i.cacheKey,inputDependencies:["type"]},[c],n,e.inputs[0].dataType,x,l),{inputs:[c]})},Ss=(e,t)=>{kn(e,"ReduceMeanShared",t,"mean")},ma=(e,t)=>{kn(e,"ReduceL1Shared",t,"l1")},_a=(e,t)=>{kn(e,"ReduceL2Shared",t,"l2")},ks=(e,t)=>{kn(e,"ReduceLogSumExpShared",t,"logSumExp")},ga=(e,t)=>{kn(e,"ReduceMaxShared",t,"max")},wa=(e,t)=>{kn(e,"ReduceMinShared",t,"min")},Ps=(e,t)=>{kn(e,"ReduceProdShared",t,"prod")},ya=(e,t)=>{kn(e,"ReduceSumShared",t,"sum")},ba=(e,t)=>{kn(e,"ReduceSumSquareShared",t,"sumSquare")},As=(e,t)=>{kn(e,"ReduceLogSumShared",t,"logSum")}}),Pn,Is,ts,Fs,xn,Ma,va,Os,xa,Ta,Bs,Ea,Ca,zs,$a,An,Ds,Sa,ka,Ls,Pa,Aa,Rs,Ia,Fa,Ns,js=Q(()=>{er(),Yt(),$r(),cr(),wd(),Pn=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Is=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],ts=(e,t,r,n,i,s,o=!1,u=!1)=>{let c=[],h=r[0].dims,y=h.length,l=Fe.normalizeAxes(i,y),x=!u&&l.length===0;h.forEach((C,J)=>{x||l.indexOf(J)>=0?o&&c.push(1):c.push(C)});let k=c.length,S=Fe.size(c);return{name:e,shaderCache:t,getShaderSource:C=>{let J=[],Z=nt("_A",r[0].dataType,y),F=Vt("output",s,k),ne=n(Z,F,l),ue=ne[2];for(let we=0,We=0;we<y;we++)x||l.indexOf(we)>=0?(o&&We++,ue=`for(var j${we}: u32 = 0; j${we} < ${h[we]}; j${we}++) {
                  ${ne[2].includes("last_index")?`let last_index = j${we};`:""}
                  ${Z.indicesSet("input_indices",we,`j${we}`)}
                  ${ue}
                }`):(J.push(`${Z.indicesSet("input_indices",we,F.indicesGet("output_indices",We))};`),We++);return`

        ${C.registerUniform("output_size","u32").declareVariables(Z,F)}

        ${C.mainStart()}
          ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${Z.type.indices};
          let output_indices = ${F.offsetToIndices("global_idx")};

          ${J.join(`
`)}
          ${ne[0]}       // init ops for reduce max/min
          ${ne[1]}
          ${ue}
          ${ne[3]}
          ${ne.length===4?F.setByOffset("global_idx","value"):ne.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:c,dataType:s}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:[{type:12,data:S},...At(h,c)]})}},Fs=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),dr({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},xn=(e,t,r,n)=>{let i=e.inputs,s=i.length===1?r:Fs(i,r);e.compute(ts(t,{hint:s.cacheKey,inputDependencies:["rank"]},[i[0]],s.noopWithEmptyAxes&&s.axes.length===0?Is:n,s.axes,i[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},Ma=(e,t)=>{Pn(e.inputs),xn(e,"ReduceLogSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,"value = log(value);"])},va=(e,t)=>{Pn(e.inputs),xn(e,"ReduceL1",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${r.getByIndices("input_indices")});`,""])},Os=(e,t)=>{Pn(e.inputs),xn(e,"ReduceL2",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},xa=(e,t)=>{Pn(e.inputs),xn(e,"ReduceLogSumExp",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${r.getByIndices("input_indices")});`,"value = log(value);"])},Ta=(e,t)=>{Pn(e.inputs),xn(e,"ReduceMax",t,(r,n,i)=>{let s=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&s.push(r.indicesSet("input_indices",o,0));return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = max(value, ${r.getByIndices("input_indices")});`,""]})},Bs=(e,t)=>{Pn(e.inputs),xn(e,"ReduceMean",t,(r,n,i)=>{let s=1;for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&(s*=e.inputs[0].dims[o]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${s});`]})},Ea=(e,t)=>{Pn(e.inputs),xn(e,"ReduceMin",t,(r,n,i)=>{let s=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&s.push(`input_indices[${o}] = 0;`);return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = min(value, ${r.getByIndices("input_indices")});`,""]})},Ca=(e,t)=>{Pn(e.inputs),xn(e,"ReduceProd",t,(r,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${r.getByIndices("input_indices")};`,""])},zs=(e,t)=>{Pn(e.inputs),xn(e,"ReduceSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,""])},$a=(e,t)=>{Pn(e.inputs),xn(e,"ReduceSumSquare",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += t * t;`,""])},An=(e,t,r)=>{if(t.length===0)return r;let n=1,i=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?n*=e[s]:i*=e[s];return i<32&&n>1024},Ds=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Bs(e,t):Ss(e,t)},Sa=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?va(e,t):ma(e,t)},ka=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Os(e,t):_a(e,t)},Ls=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xa(e,t):ks(e,t)},Pa=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ta(e,t):ga(e,t)},Aa=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ea(e,t):wa(e,t)},Rs=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ca(e,t):Ps(e,t)},Ia=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?zs(e,t):ya(e,t)},Fa=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$a(e,t):ba(e,t)},Ns=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ma(e,t):As(e,t)}}),Us,Vs,Oa,Ws,Ba=Q(()=>{er(),$r(),js(),Us=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Vs=(e,t)=>{Us(e.inputs);let r=(n,i,s)=>{let o=[];for(let u=0;u<n.rank;u++)(s.indexOf(u)>=0||s.length===0)&&o.push(`input_indices[${u}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(ts("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Oa=(e,t)=>{Us(e.inputs);let r=(n,i,s)=>{let o=[];for(let u=0;u<n.rank;u++)(s.indexOf(u)>=0||s.length===0)&&o.push(`input_indices[${u}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(ts("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Ws=e=>dr(e)}),za,rs,Gs,Da,La,wi,Ra,Na,ns=Q(()=>{er(),Yt(),he(),cr(),za=(e,t)=>{let r=e[0],n=e[1],i=e[2],s=e[3],o=e[4],u=e[5];if(o&&u)throw new Error("Attention cannot have both past and attention_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let c=r.dims[0],h=r.dims[1],y=r.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(n.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(n.dims[0]!==y)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==n.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let l=i.dims[0]/3,x=l,k=x;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let ne of t.qkvHiddenSizes)if(ne%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");l=t.qkvHiddenSizes[0],x=t.qkvHiddenSizes[1],k=t.qkvHiddenSizes[2]}let S=h;if(l!==x)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==l+x+k)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let C=0;if(o){if(x!==k)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(o.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(o.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==c)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==x/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(C=o.dims[3])}let J=S+C,Z=-1,F=0;if(s)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(u){if(u.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(u.dims[0]!==c||u.dims[1]!==t.numHeads||u.dims[2]!==h||u.dims[3]!==J)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:c,sequenceLength:h,pastSequenceLength:C,kvSequenceLength:S,totalSequenceLength:J,maxSequenceLength:Z,inputHiddenSize:y,hiddenSize:l,vHiddenSize:k,headSize:Math.floor(l/t.numHeads),vHeadSize:Math.floor(k/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:F,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},rs=(e,t,r)=>t&&e?`
      let total_sequence_length_input = u32(${t.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e?.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${r?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,Gs=(e,t,r,n,i,s,o,u)=>{let c=gr(o?1:s),h=64,y=s/c;y<h&&(h=32);let l=Math.ceil(s/c/h),x=[{type:12,data:t},{type:12,data:r},{type:12,data:n},{type:12,data:i},{type:12,data:y},{type:12,data:l}],k=fr(e.dataType,c),S=Fr(1,c),C=["type"];o&&C.push("type"),u&&C.push("type");let J=Z=>{let F=Vt("x",e.dataType,e.dims,c),ne=[F],ue=o?nt("seq_lens",o.dataType,o.dims):void 0;ue&&ne.push(ue);let we=u?nt("total_sequence_length_input",u.dataType,u.dims):void 0;we&&ne.push(we);let We=Fr(e.dataType),Be=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${h}>;
  var<workgroup> thread_sum: array<f32, ${h}>;
  ${Z.registerUniforms(Be).declareVariables(...ne)}
  ${Z.mainStart([h,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${rs(ue,we,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${h}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${o?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${S}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${S}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(c){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${c}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${h}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${S}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${S}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(c){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${c}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${h}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${F.type.value}(${We}(1.0) / ${We}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${S}(x[offset + i]);
        x[offset + i] = ${F.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${o?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${F.type.value}(${We}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${h};${k};${c}`,inputDependencies:C},getShaderSource:J,getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(s/h),y:i,z:t*r},programUniforms:x})}},Da=(e,t,r,n,i,s,o,u,c)=>{let h=o+s.kvSequenceLength,y=[s.batchSize,s.numHeads,s.sequenceLength,h],l=e>1&&n,x=s.kvNumHeads?s.kvNumHeads:s.numHeads,k=l?[s.batchSize,x,h,s.headSize]:void 0,S=s.nReps?s.nReps:1,C=s.scale===0?1/Math.sqrt(s.headSize):s.scale,J=gr(s.headSize),Z=s.headSize/J,F=12,ne={x:Math.ceil(h/F),y:Math.ceil(s.sequenceLength/F),z:s.batchSize*s.numHeads},ue=[{type:12,data:s.sequenceLength},{type:12,data:Z},{type:12,data:h},{type:12,data:s.numHeads},{type:12,data:s.headSize},{type:1,data:C},{type:12,data:o},{type:12,data:s.kvSequenceLength},{type:12,data:S}],we=l&&n&&Fe.size(n.dims)>0,We=["type","type"];we&&We.push("type"),i&&We.push("type"),u&&We.push("type"),c&&We.push("type");let Be=[{dims:y,dataType:t.dataType,gpuDataType:0}];l&&Be.push({dims:k,dataType:t.dataType,gpuDataType:0});let wt=Lt=>{let Dt=nt("q",t.dataType,t.dims,J),sr=nt("key",r.dataType,r.dims,J),Qt=[Dt,sr];if(we){let Gt=nt("past_key",n.dataType,n.dims,J);Qt.push(Gt)}i&&Qt.push(nt("attention_bias",i.dataType,i.dims));let or=u?nt("seq_lens",u.dataType,u.dims):void 0;or&&Qt.push(or);let Tr=c?nt("total_sequence_length_input",c.dataType,c.dims):void 0;Tr&&Qt.push(Tr);let ir=Vt("output",t.dataType,y),Ht=[ir];l&&Ht.push(Vt("present_key",t.dataType,k,J));let Mr=Fr(1,J),br=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${F}u;

  var<workgroup> tileQ: array<${Dt.type.storage}, ${F*F}>;
  var<workgroup> tileK: array<${Dt.type.storage}, ${F*F}>;
  ${Lt.registerUniforms(br).declareVariables(...Qt,...Ht)}
  ${Lt.mainStart([F,F,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${S===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${S===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${rs(or,Tr,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${we&&l?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${l?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${Mr}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${we&&l?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${l?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${Mr}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(J){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${J}`)}})()};
        output[outputIdx] = ${ir.type.value} (sum * uniforms.alpha) + ${i?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${J};${i!==void 0};${n!==void 0};${e}`,inputDependencies:We},getRunData:()=>({outputs:Be,dispatchGroup:ne,programUniforms:ue}),getShaderSource:wt}},La=(e,t,r,n,i,s,o=void 0,u=void 0)=>{let c=s+i.kvSequenceLength,h=i.nReps?i.nReps:1,y=i.vHiddenSize*h,l=e>1&&n,x=i.kvNumHeads?i.kvNumHeads:i.numHeads,k=l?[i.batchSize,x,c,i.headSize]:void 0,S=[i.batchSize,i.sequenceLength,y],C=12,J={x:Math.ceil(i.vHeadSize/C),y:Math.ceil(i.sequenceLength/C),z:i.batchSize*i.numHeads},Z=[{type:12,data:i.sequenceLength},{type:12,data:c},{type:12,data:i.vHeadSize},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:12,data:y},{type:12,data:s},{type:12,data:i.kvSequenceLength},{type:12,data:h}],F=l&&n&&Fe.size(n.dims)>0,ne=["type","type"];F&&ne.push("type"),o&&ne.push("type"),u&&ne.push("type");let ue=[{dims:S,dataType:t.dataType,gpuDataType:0}];l&&ue.push({dims:k,dataType:t.dataType,gpuDataType:0});let we=We=>{let Be=nt("probs",t.dataType,t.dims),wt=nt("v",r.dataType,r.dims),Lt=[Be,wt];F&&Lt.push(nt("past_value",n.dataType,n.dims));let Dt=o?nt("seq_lens",o.dataType,o.dims):void 0;o&&Lt.push(Dt);let sr=u?nt("total_sequence_length_input",u.dataType,u.dims):void 0;u&&Lt.push(sr);let Qt=[Vt("output",t.dataType,S)];l&&Qt.push(Vt("present_value",t.dataType,k));let or=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${C}u;
  var<workgroup> tileQ: array<${Be.type.value}, ${C*C}>;
  var<workgroup> tileV: array<${Be.type.value}, ${C*C}>;
  ${We.registerUniforms(or).declareVariables(...Lt,...Qt)}
  ${We.mainStart([C,C,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${h===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${h===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${rs(Dt,sr,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${F&&l?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${l?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${Be.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${F&&l?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${l?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${n!==void 0};${e}`,inputDependencies:ne},getRunData:()=>({outputs:ue,dispatchGroup:J,programUniforms:Z}),getShaderSource:we}},wi=(e,t,r,n,i,s,o,u,c,h,y=void 0,l=void 0)=>{let x=Math.min(e.outputCount,1+(o?1:0)+(u?1:0)),k=x>1?h.pastSequenceLength:0,S=k+h.kvSequenceLength,C=c&&Fe.size(c.dims)>0?c:void 0,J=[t,r];x>1&&o&&Fe.size(o.dims)>0&&J.push(o),C&&J.push(C),y&&J.push(y),l&&J.push(l);let Z=e.compute(Da(x,t,r,o,C,h,k,y,l),{inputs:J,outputs:x>1?[-1,1]:[-1]})[0];e.compute(Gs(Z,h.batchSize,h.numHeads,k,h.sequenceLength,S,y,l),{inputs:y&&l?[Z,y,l]:[Z],outputs:[]});let F=[Z,n];x>1&&u&&Fe.size(u.dims)>0&&F.push(u),y&&F.push(y),l&&F.push(l),e.compute(La(x,Z,n,u,h,k,y,l),{inputs:F,outputs:x>1?[0,2]:[0]})},Ra=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],n=t.sequenceLength,i=t.inputHiddenSize,s=t.headSize,o=12,u={x:Math.ceil(t.headSize/o),y:Math.ceil(t.sequenceLength/o),z:t.batchSize*t.numHeads},c=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:n},{type:12,data:i},{type:12,data:s},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],y=l=>{let x=Vt("output_q",c[0].dataType,r),k=Vt("output_k",c[0].dataType,r),S=Vt("output_v",c[0].dataType,r),C=nt("input",c[0].dataType,c[0].dims),J=nt("weight",c[1].dataType,c[1].dims),Z=nt("bias",c[2].dataType,c[2].dims),F=C.type.storage,ne=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileInput: array<${F}, ${o*o}>;
  var<workgroup> tileWeightQ: array<${F}, ${o*o}>;
  var<workgroup> tileWeightK: array<${F}, ${o*o}>;
  var<workgroup> tileWeightV: array<${F}, ${o*o}>;
  ${l.registerUniforms(ne).declareVariables(C,J,Z,x,k,S)}
  ${l.mainStart([o,o,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${F}(0);
    var valueK = ${F}(0);
    var valueV = ${F}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:u,programUniforms:h}),getShaderSource:y},{inputs:c,outputs:[-1,-1,-1]})},Na=(e,t)=>{let r=za(e.inputs,t),[n,i,s]=Ra(e,r);return wi(e,n,i,s,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r)}}),ja,Ua,qs,Va,yd=Q(()=>{Kt(),er(),Yt(),$r(),cr(),ja=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(n,i,s)=>{let o=i.length;if(o!==n.length)throw new Error(`${s}: num dimensions != ${o}`);i.forEach((u,c)=>{if(u!==n[c])throw new Error(`${s}: dim[${c}] do not match`)})};if(e[0].dims.length>1){let n=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,n,"Invalid input scale"),r(e[2].dims,n,"Invalid input B"),r(e[3].dims,n,"Invalid input mean"),r(e[4].dims,n,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Ua=(e,t)=>{let{epsilon:r,spatial:n,format:i}=t,s=e[0].dims,o=n?gr(s[s.length-1]):1,u=i==="NHWC"&&s.length>1?o:1,c=Fe.size(s)/o,h=n,y=h?s.length:s,l=nt("x",e[0].dataType,e[0].dims,o),x=nt("scale",e[1].dataType,e[1].dims,u),k=nt("bias",e[2].dataType,e[2].dims,u),S=nt("inputMean",e[3].dataType,e[3].dims,u),C=nt("inputVar",e[4].dataType,e[4].dims,u),J=Vt("y",e[0].dataType,y,o),Z=()=>{let ne="";if(n)ne=`let cOffset = ${s.length===1?"0u":i==="NHWC"?`outputIndices[${s.length-1}] / ${o}`:"outputIndices[1]"};`;else if(i==="NCHW")ne=`
            ${J.indicesSet("outputIndices","0","0")}
            let cOffset = ${J.indicesToOffset("outputIndices")};`;else{ne=`var cIndices = ${x.type.indices}(0);
                       cIndices[0] = outputIndices[${s.length-1}];`;for(let ue=1;ue<x.rank;ue++)ne+=`cIndices[${ue}] = outputIndices[${ue}];`;ne+=`let cOffset = ${x.indicesToOffset("cIndices")};`}return ne},F=ne=>`
  const epsilon = ${r};
  ${ne.registerUniform("outputSize","u32").declareVariables(l,x,k,S,C,J)}
  ${ne.mainStart()}
  ${ne.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${J.offsetToIndices(`global_idx * ${o}`)};
    ${Z()}
    let scale = ${x.getByOffset("cOffset")};
    let bias = ${k.getByOffset("cOffset")};
    let inputMean = ${S.getByOffset("cOffset")};
    let inputVar = ${C.getByOffset("cOffset")};
    let x = ${l.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${J.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${n}_${o}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:F,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:h?[{type:12,data:c},...At(s)]:[{type:12,data:c}]})}},qs=e=>dr(e),Va=(e,t)=>{let{inputs:r,outputCount:n}=e,i=qs({...t,outputCount:n});if(T.webgpu.validateInputContent&&ja(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Ua(r,i))}}),Hs,Wa,Ga,qa=Q(()=>{Yt(),cr(),Hs=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Wa=e=>{let t=e[0].dims,r=e[0].dims[2],n=Fe.size(t)/4,i=e[0].dataType,s=nt("input",i,t,4),o=nt("bias",i,[r],4),u=nt("residual",i,t,4),c=Vt("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:h=>`
  const channels = ${r}u / 4;
  ${h.declareVariables(s,o,u,c)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let value = ${s.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${u.getByOffset("global_idx")};
    ${c.setByOffset("global_idx","value")}
  }`}},Ga=e=>{Hs(e.inputs),e.compute(Wa(e.inputs))}}),Ha,Pr,Ks,Ka,Xa,Qa,Ya,Xs,Za,Ja,el,tl,Qs,rl,nl,il,Bi,Ys,is,sl,Zs,ol,al,Js,ll,ul,eo,dl,cl,to,pl,hl,ss,fl,ml,os,ro,no,as,_l,gl,wl,io,yl,bl,so=Q(()=>{er(),Yt(),$r(),cr(),Ha=(e,t,r,n,i,s,o)=>{let u=Math.ceil(t/4),c="";typeof i=="string"?c=`${i}(a)`:c=i("a");let h=nt("inputData",r,[u],4),y=Vt("outputData",n,[u],4),l=[{name:"vec_size",type:"u32"}];return o&&l.push(...o),`
      ${e.registerUniforms(l).declareVariables(h,y)}

  ${s??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${h.getByOffset("global_idx")};
    ${y.setByOffset("global_idx",c)}
  }`},Pr=(e,t,r,n,i,s=e.dataType,o,u)=>{let c=[{type:12,data:Math.ceil(Fe.size(e.dims)/4)}];return o&&c.push(...o),{name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:h=>Ha(h,Fe.size(e.dims),e.dataType,s,r,n,u),getRunData:h=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(Fe.size(h[0].dims)/64/4)},programUniforms:c})}},Ks=e=>{e.compute(Pr(e.inputs[0],"Abs","abs"))},Ka=e=>{e.compute(Pr(e.inputs[0],"Acos","acos"))},Xa=e=>{e.compute(Pr(e.inputs[0],"Acosh","acosh"))},Qa=e=>{e.compute(Pr(e.inputs[0],"Asin","asin"))},Ya=e=>{e.compute(Pr(e.inputs[0],"Asinh","asinh"))},Xs=e=>{e.compute(Pr(e.inputs[0],"Atan","atan"))},Za=e=>{e.compute(Pr(e.inputs[0],"Atanh","atanh"))},Ja=e=>dr(e),el=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(Pr(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},tl=e=>{let t,r,n=e.length>=2&&e[1].data!==0,i=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:t=n?e[1].getFloat32Array()[0]:-34028234663852886e22,r=i?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=n?e[1].getUint16Array()[0]:64511,r=i?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return dr({min:t,max:r})},Qs=(e,t)=>{let r=t||tl(e.inputs),n=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"Clip",i=>`clamp(${i}, vec4<${n}>(uniforms.min), vec4<${n}>(uniforms.max))`,void 0,r.cacheKey,void 0,[{type:e.inputs[0].dataType,data:r.min},{type:e.inputs[0].dataType,data:r.max}],[{name:"min",type:n},{name:"max",type:n}]),{inputs:[0]})},rl=e=>{e.compute(Pr(e.inputs[0],"Ceil","ceil"))},nl=e=>{e.compute(Pr(e.inputs[0],"Cos","cos"))},il=e=>{e.compute(Pr(e.inputs[0],"Cosh","cosh"))},Bi=e=>dr(e),Ys=(e,t)=>{let r=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},is=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,sl=e=>{let t=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,is(t)))},Zs=e=>{e.compute(Pr(e.inputs[0],"Exp","exp"))},ol=e=>{e.compute(Pr(e.inputs[0],"Floor","floor"))},al=e=>{let t=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,is(t)))},Js=(e,t)=>{let r=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},ll=e=>{e.compute(Pr(e.inputs[0],"Not",t=>`!${t}`))},ul=e=>{e.compute(Pr(e.inputs[0],"Neg",t=>`-${t}`))},eo=e=>{e.compute(Pr(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},dl=e=>{let t=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},cl=e=>{e.compute(Pr(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},to=e=>dr(e),pl=(e,t)=>{let r=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"HardSigmoid",n=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${n} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},hl=e=>{e.compute(Pr(e.inputs[0],"Sin","sin"))},ss=e=>{e.compute(Pr(e.inputs[0],"Sinh","sinh"))},fl=e=>{e.compute(Pr(e.inputs[0],"Sqrt","sqrt"))},ml=e=>{e.compute(Pr(e.inputs[0],"Tan","tan"))},os=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,ro=e=>{e.compute(Pr(e.inputs[0],"Tanh",os))},no=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${os("v")};
}
`,as=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,_l=e=>{let t=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"FastGelu",as,no(t),void 0,e.inputs[0].dataType))},gl=(e,t)=>{let r=Fr(e.inputs[0].dataType);return e.compute(Pr(e.inputs[0],"ThresholdedRelu",n=>`select(vec4<${r}>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},wl=e=>{e.compute(Pr(e.inputs[0],"Log","log"))},io=(e,t)=>`
const alpha = vec4<${e}>(${t});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,yl=e=>`quick_gelu_impl(${e})`,bl=(e,t)=>{let r=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"QuickGelu",yl,io(r,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),oo,Ml,vl,xl=Q(()=>{Yt(),cr(),so(),oo=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Ml=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=nt("input",e[0].dataType,e[0].dims,4),n=nt("bias",e[0].dataType,[e[0].dims[2]],4),i=Vt("output",e[0].dataType,t,4),s=Fe.size(t)/4,o=fr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${u.declareVariables(r,n,i)}

  ${is(o)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},vl=e=>{oo(e.inputs),e.compute(Ml(e.inputs))}}),Tl,El,Tn,Cl,$l,ao,Sl,kl,lo,Pl,Al,uo,Il,bd=Q(()=>{er(),Yt(),cr(),Tl=(e,t,r,n,i,s,o,u,c,h,y,l)=>{let x,k;typeof u=="string"?x=k=(F,ne)=>`${u}((${F}),(${ne}))`:typeof u=="function"?x=k=u:(x=u.scalar,k=u.vector);let S=Vt("outputData",y,n.length,4),C=nt("aData",c,t.length,4),J=nt("bData",h,r.length,4),Z;if(i)if(s){let F=Fe.size(t)===1,ne=Fe.size(r)===1,ue=t.length>0&&t[t.length-1]%4===0,we=r.length>0&&r[r.length-1]%4===0;F||ne?Z=S.setByOffset("global_idx",k(F?`${C.type.value}(${C.getByOffset("0")}.x)`:C.getByOffset("global_idx"),ne?`${J.type.value}(${J.getByOffset("0")}.x)`:J.getByOffset("global_idx"))):Z=`
            let outputIndices = ${S.offsetToIndices("global_idx * 4u")};
            let offsetA = ${C.broadcastedIndicesToOffset("outputIndices",S)};
            let offsetB = ${J.broadcastedIndicesToOffset("outputIndices",S)};
            ${S.setByOffset("global_idx",k(o||ue?C.getByOffset("offsetA / 4u"):`${C.type.value}(${C.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||we?J.getByOffset("offsetB / 4u"):`${J.type.value}(${J.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else Z=S.setByOffset("global_idx",k(C.getByOffset("global_idx"),J.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let F=(ne,ue,we="")=>{let We=`aData[indexA${ue}][componentA${ue}]`,Be=`bData[indexB${ue}][componentB${ue}]`;return`
            let outputIndices${ue} = ${S.offsetToIndices(`global_idx * 4u + ${ue}u`)};
            let offsetA${ue} = ${C.broadcastedIndicesToOffset(`outputIndices${ue}`,S)};
            let offsetB${ue} = ${J.broadcastedIndicesToOffset(`outputIndices${ue}`,S)};
            let indexA${ue} = offsetA${ue} / 4u;
            let indexB${ue} = offsetB${ue} / 4u;
            let componentA${ue} = offsetA${ue} % 4u;
            let componentB${ue} = offsetB${ue} % 4u;
            ${ne}[${ue}] = ${we}(${x(We,Be)});
          `};y===9?Z=`
            var data = vec4<u32>(0);
            ${F("data",0,"u32")}
            ${F("data",1,"u32")}
            ${F("data",2,"u32")}
            ${F("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:Z=`
            ${F("outputData[global_idx]",0)}
            ${F("outputData[global_idx]",1)}
            ${F("outputData[global_idx]",2)}
            ${F("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(C,J,S)}

        ${l??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${Z}
      }`},El=(e,t,r,n,i,s,o=r.dataType)=>{let u=!Fe.areEqual(r.dims,n.dims),c=r.dims,h=Fe.size(r.dims),y=!1,l=!1,x=[u];if(u){let k=$n.calcShape(r.dims,n.dims,!1);if(!k)throw new Error("Can't perform binary op on the given tensors");c=k,h=Fe.size(c);let S=Fe.size(r.dims)===1,C=Fe.size(n.dims)===1,J=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,Z=n.dims.length>0&&n.dims[n.dims.length-1]%4===0;x.push(S),x.push(C),x.push(J),x.push(Z);let F=1;for(let ne=1;ne<c.length;ne++){let ue=r.dims[r.dims.length-ne]??1,we=n.dims[n.dims.length-ne]??1;if(ue===we)F*=ue;else break}F%4===0?(l=!0,y=!0):(S||C||J||Z)&&(y=!0)}else y=!0;return x.push(y),{name:e,shaderCache:{hint:t+x.map(k=>k.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:k=>Tl(k,r.dims,n.dims,c,y,u,l,i,r.dataType,n.dataType,o,s),getRunData:()=>({outputs:[{dims:c,dataType:o}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(Fe.size(c)/4)},...At(r.dims,n.dims,c)]})}},Tn=(e,t,r,n,i,s)=>{e.compute(El(t,i??"",e.inputs[0],e.inputs[1],r,n,s))},Cl=e=>{Tn(e,"Add",(t,r)=>`${t}+${r}`)},$l=e=>{Tn(e,"Div",(t,r)=>`${t}/${r}`)},ao=e=>{Tn(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Sl=e=>{Tn(e,"Mul",(t,r)=>`${t}*${r}`)},kl=e=>{let t=nt("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Tn(e,"Pow",{scalar:(r,n)=>`pow_custom(${r},${n})`,vector:(r,n)=>`pow_vector_custom(${r},${n})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},lo=e=>{Tn(e,"Sub",(t,r)=>`${t}-${r}`)},Pl=e=>{Tn(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Al=e=>{Tn(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},uo=e=>{Tn(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Il=e=>{Tn(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),Fl,Ol,ls,Bl,zl,Dl,Md=Q(()=>{er(),Yt(),$r(),cr(),Fl=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,n=e[r],i=n.dataType,s=n.dims.length;e.forEach((o,u)=>{if(u!==r){if(o.dataType!==i)throw new Error("input tensors should be one type");if(o.dims.length!==s)throw new Error("input tensors should have the same shape");o.dims.forEach((c,h)=>{if(h!==t&&c!==n.dims[h])throw new Error("non concat dimensions must match")})}})},Ol=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,ls=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;++i){let s=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?n.push(s):i===0?n.push(`if (inputIndex == ${i}u) { ${s} }`):i===r-1?n.push(`else { ${s} }`):n.push(`else if (inputIndex == ${i}) { ${s} }`)}return n.join(`
`)},Bl=(e,t,r,n)=>{let i=Fe.size(r),s=new Array(e.length),o=new Array(e.length),u=0,c=[],h=[],y=[{type:12,data:i}];for(let C=0;C<e.length;++C)u+=e[C].dims[t],s[C]=u,h.push(e[C].dims.length),o[C]=nt(`input${C}`,n,h[C]),c.push("rank"),y.push({type:12,data:s[C]});for(let C=0;C<e.length;++C)y.push(...At(e[C].dims));y.push(...At(r));let l=Vt("output",n,r.length),x=l.indicesGet("indices",t),k=Array.from(Array(s.length).keys()).map(C=>`uniforms.sizeInConcatAxis${C}`).join(","),S=C=>`

  ${(()=>{C.registerUniform("outputSize","u32");for(let J=0;J<e.length;J++)C.registerUniform(`sizeInConcatAxis${J}`,"u32");return C.declareVariables(...o,l)})()}

  ${Ol(s.length,k)}

  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${l.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${x});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${s.length}u>(${k});
      ${x} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${ls(o,l)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:r,dataType:n}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:y}),getShaderSource:S}},zl=(e,t)=>{let r=e.inputs,n=r[0].dims,i=Fe.normalizeAxis(t.axis,n.length);Fl(r,i);let s=n.slice();s[i]=r.reduce((u,c)=>u+(c.dims.length>i?c.dims[i]:0),0);let o=r.filter(u=>Fe.size(u.dims)>0);e.compute(Bl(o,i,s,r[0].dataType),{inputs:o})},Dl=e=>dr({axis:e.axis})}),Qn,jn,Yn,co,Un=Q(()=>{er(),Yt(),Qn=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},jn=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Yn=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},co=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,n]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:n}}else if(t==="Clip"){let[r,n]=e?.activation_params||[Sn,Ln];return{activation:t,clipMax:n,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}}),cn,po,us=Q(()=>{cn=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},po=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),ho,fo=Q(()=>{ho=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Ll,Rl,zi,mo,Nl,Di,jl,_o,Li=Q(()=>{er(),Yt(),cr(),Un(),us(),Ll=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,Rl=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,zi=(e,t,r="f32",n,i=!1,s=32,o=!1,u=32)=>{let c=t[1]*e[1],h=t[0]*e[0],y=i?c:s,l=i?s:c,x=y/t[0],k=s/t[1];if(!((i&&x===4&&e[1]===4||!i&&(x===3||x===4))&&y%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${x} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${x} must be 3 or 4.
  tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${x}<${r}>, ${y/x}>, ${l}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${s}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${x};
const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${c};

  let num_tiles = ${o?`${Math.ceil(u/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${u}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${k};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Ll(i,n)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${k}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${x===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Rl(i,x)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},mo=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,Nl=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Di=(e,t,r="f32",n,i=!1,s=32,o=!1,u=32,c=!1)=>{let h=e[1]*t[1],y=e[0]*t[0],l=i?h:s,x=i?s:h;if(!(x%t[1]===0&&l%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${x} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let k=x/t[1],S=l/t[0],C=s/t[1],J=c?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${h};
    let globalColStart = i32(workgroupId.x) * ${y};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${x}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {
          ${mo(i,n)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${n?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${h};

let tileRowA = i32(localId.y) * ${k};
let tileColA = i32(localId.x) * ${S};
let tileRowB = i32(localId.y) * ${C};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${k}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${S}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${mo(i,n)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${C}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${n?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Nl(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${l}>, ${x}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${y}>, ${s}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(u/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${u}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;
    ${J}
  }
`},jl=(e,t,r,n,i,s=!1)=>{let[o,u,c]=i,[h,y,l,x]=n,k=gi(o,c),S=gi(u,c),C=fr(n[0].type.tensor),J=()=>{let F=y.rank,ne=h.rank,ue=`var aIndices: ${y.type.indices};`;for(let we=F-2-1,We=ne-1;we>=0;we--,We--)ue+=`
aIndices[${we}] = ${ne>1?`batchIndices[${We}]`:"batchIndices"};`;return k.forEach(we=>{ue+=`
aIndices[${we}] = 0;`}),ue+=`
aIndices[${F-2}] = u32(row);
                   aIndices[${F-1}] = u32(colIn);`,ue},Z=()=>{let F=l.rank,ne=h.rank,ue=`var bIndices: ${l.type.indices};`;for(let we=F-2-1,We=ne-1;we>=0;we--,We--)ue+=`
bIndices[${we}] = ${ne>1?`batchIndices[${We}]`:"batchIndices"};`;return S.forEach(we=>{ue+=`
bIndices[${we}] = 0;`}),ue+=`
bIndices[${F-2}] = u32(row);
                   bIndices[${F-1}] = u32(colIn);`,ue};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${cn(e,C)} {
      var value = ${cn(e,C)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${J()}
        value = ${y.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${cn(e,C)} {
      var value = ${cn(e,C)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${Z()}
        value = ${l.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${cn(e,C)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${s?"bias[colIn]":`${cn(e,C)}(bias[row])`};`:""}
        ${r}
        ${x.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},_o=(e,t,r,n,i=!1,s)=>{let o=e[0].dims,u=e[1].dims,c=o.slice(0,-2),h=u.slice(0,-2),y=n?n.slice(0,-2):r.slice(0,-2),l=Fe.size(y),x=o[o.length-2],k=o[o.length-1],S=u[u.length-1],C=k%4===0&&S%4===0,J=x<=8?[4,1,1]:[4,4,1],Z=[8,8,1],F=[Math.ceil(S/Z[0]/J[0]),Math.ceil(x/Z[1]/J[1]),Math.ceil(l/Z[2]/J[2])],ne=C?4:1,ue=[...c,x,k/ne],we=ue.length,We=[...h,k,S/ne],Be=We.length,wt=[l,x,S/ne],Lt=[{type:6,data:x},{type:6,data:S},{type:6,data:k}];jn(t,Lt),Lt.push(...At(y,ue,We));let Dt=["rank","rank"],sr=e.length>2;sr&&(Lt.push(...At(e[2].dims)),Dt.push("rank")),Lt.push(...At(wt));let Qt=or=>{let Tr=y.length,ir=xs("batchDims",e[0].dataType,Tr,1),Ht=fr(e[0].dataType),Mr=nt("a",e[0].dataType,we,ne),br=nt("b",e[1].dataType,Be,ne),Gt=Vt("result",e[0].dataType,wt.length,ne),_r=[Mr,br];if(sr){let Wr=i?ne:1;_r.push(nt("bias",e[2].dataType,e[2].dims.length,Wr))}let Je=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Yn(t,Je);let Et=fr(Gt.type.tensor),pr=Qn(t,Gt.type.value,Et),Ur=jl(ne,sr,pr,[ir,Mr,br,Gt],[c,h,y],i);return`
  ${or.registerUniforms(Je).registerInternalVariables(ir).declareVariables(..._r,Gt)}
  ${Ur}
  ${C?zi(J,Z,Ht,ir):Di(J,Z,Ht,ir)}
                   `};return{name:"MatMul",shaderCache:{hint:`${J};${t.activation};${C};${i}`,inputDependencies:Dt},getRunData:()=>({outputs:[{dims:s?s(r):r,dataType:e[0].dataType}],dispatchGroup:{x:F[0],y:F[1],z:F[2]},programUniforms:Lt}),getShaderSource:Qt}}}),Ul,Vl,vd=Q(()=>{er(),_(),cr(),Un(),us(),fo(),Li(),Ul=(e,t,r,n,i=!1,s,o=4,u=4,c=4,h="f32")=>{let y=Lt=>{switch(Lt){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Lt} is not supported.`)}},l=Lt=>{switch(Lt){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Lt} is not supported.`)}},x=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,k=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,S=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",C=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",J=e?"row":"col",Z=e?"col":"row",F=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${J} / outWidth;
    let outCol = ${J} % outWidth;

    let WRow = ${Z} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${Z} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${Z} % inChannels;
    var resData = ${cn(o,h)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${S} && xCol >= 0 && xCol < ${C}) {
      ${x}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${y(o)}
    }
    return resData;`,ne=e?t&&n?`
    let col = colIn * ${o};
    ${F}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${F}
    }
    return ${cn(o,h)}(0.0);`:n&&r?`
    let col = colIn * ${o};
    ${F}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${F}
    }
    return ${cn(o,h)}(0.0);`,ue=`${l(u)}`,we=cn(c,h),We=cn(e?o:u,h),Be=cn(e?u:o,h),wt=Qn(s,we,h);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${We} {
      ${e?ne:ue}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Be} {
      ${e?ue:ne}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${we}) {
      let col = colIn * ${c};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${k}
      ${po(i)}
      ${wt}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Vl=(e,t,r,n,i,s,o,u,c)=>{let h=t.format==="NHWC",y=h?e[0].dims[3]:e[0].dims[1],l=r[0],x=h?r[2]:r[3],k=h?r[1]:r[2],S=h?r[3]:r[1],C=h&&(y%4===0||y%3===0)&&S%4===0,J=h?S:x*k,Z=h?x*k:S,F=[8,8,1],ne=n<=8?[4,1,1]:[4,4,1],ue=[Math.ceil(J/F[0]/ne[0]),Math.ceil(Z/F[1]/ne[1]),Math.ceil(l/F[2]/ne[2])];_e("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${ue}`);let we=C?h&&y%4!==0?3:4:1,We=F[1]*ne[1],Be=F[0]*ne[0],wt=Math.max(F[0]*we,F[1]),Lt=n%We===0,Dt=i%Be===0,sr=s%wt===0,Qt=C?[we,4,4]:[1,1,1],or=[{type:6,data:n},{type:6,data:i},{type:6,data:s},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];jn(t,or),or.push(...At(e[0].dims,e[1].dims));let Tr=["rank","rank"];o&&(or.push(...At(e[2].dims)),Tr.push("rank")),or.push(...At(r));let ir=Ht=>{let Mr=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Yn(t,Mr);let br=C?4:1,Gt=fr(e[0].dataType),_r=`
      fn setOutputAtIndex(flatIndex : i32, value : ${C?`vec4<${Gt}>`:Gt}) {
        result[flatIndex] = ${C?`vec4<${Gt}>`:Gt}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${C?`vec4<${Gt}>`:Gt}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${C?"/ 4":""}, value);
      }`,Je=nt("x",e[0].dataType,e[0].dims.length,we===3?1:we),Et=nt("w",e[1].dataType,e[1].dims.length,br),pr=[Je,Et],Ur=Vt("result",e[0].dataType,r.length,br);if(o){let Wr=nt("bias",e[2].dataType,e[2].dims.length,br);pr.push(Wr),_r+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${C?`vec4<${Gt}>`:Gt} {
          return bias[coords.${h?"w":"y"}${C?"/ 4":""}];
        }`}return`
        ${ho("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Ht.registerUniforms(Mr).declareVariables(...pr,Ur)}
        ${_r}
        ${Ul(h,Lt,Dt,sr,o,t,Qt[0],Qt[1],Qt[2],Gt)}
        ${C?zi(ne,F,Gt,void 0,!h,wt):Di(ne,F,Gt,void 0,!h,wt,!1,void 0,u)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${we};${C};${Lt};${Dt};${sr};${We};${Be};${wt}`,inputDependencies:Tr},getRunData:()=>({outputs:[{dims:c?c(r):r,dataType:e[0].dataType}],dispatchGroup:{x:ue[0],y:ue[1],z:ue[2]},programUniforms:or}),getShaderSource:ir}}}),Wl,go,Ri,wo,yo,Gl,bo,ql,xd=Q(()=>{er(),_(),Yt(),cr(),Un(),us(),Wl=e=>{let t=1;for(let r=0;r<e.length;r++)t*=e[r];return t},go=e=>typeof e=="number"?[e,e,e]:e,Ri=(e,t)=>t<=1?e:e+(e-1)*(t-1),wo=(e,t,r,n=1)=>{let i=Ri(t,n);return Math.floor((e[0]*(r-1)-r+i)/2)},yo=(e,t,r,n,i)=>{i==null&&(i=wo(e,t[0],n[0]));let s=[0,0,0,r];for(let o=0;o<3;o++)e[o]+2*i>=t[o]&&(s[o]=Math.trunc((e[o]-t[o]+2*i)/n[o]+1));return s},Gl=(e,t,r,n,i,s,o,u,c,h)=>{let y,l,x,k;if(e==="VALID"&&(e=0),typeof e=="number"){y={top:e,bottom:e,left:e,right:e,front:e,back:e};let S=yo([t,r,n,1],[u,c,h],1,[i,s,o],e);l=S[0],x=S[1],k=S[2]}else if(Array.isArray(e)){if(!e.every((C,J,Z)=>C===Z[0]))throw Error(`Unsupported padding parameter: ${e}`);y={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let S=yo([t,r,n,1],[u,c,h],1,[i,s,o],e[0]);l=S[0],x=S[1],k=S[2]}else if(e==="SAME_UPPER"){l=Math.ceil(t/i),x=Math.ceil(r/s),k=Math.ceil(n/o);let S=(l-1)*i+u-t,C=(x-1)*s+c-r,J=(k-1)*o+h-n,Z=Math.floor(S/2),F=S-Z,ne=Math.floor(C/2),ue=C-ne,we=Math.floor(J/2),We=J-we;y={top:ne,bottom:ue,left:we,right:We,front:Z,back:F}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:y,outDepth:l,outHeight:x,outWidth:k}},bo=(e,t,r,n,i,s=!1,o="channelsLast")=>{let u,c,h,y,l;if(o==="channelsLast")[u,c,h,y,l]=e;else if(o==="channelsFirst")[u,l,c,h,y]=e;else throw new Error(`Unknown dataFormat ${o}`);let[x,,k,S,C]=t,[J,Z,F]=go(r),[ne,ue,we]=go(n),We=Ri(k,ne),Be=Ri(S,ue),wt=Ri(C,we),{padInfo:Lt,outDepth:Dt,outHeight:sr,outWidth:Qt}=Gl(i,c,h,y,J,Z,F,We,Be,wt),or=s?x*l:x,Tr=[0,0,0,0,0];return o==="channelsFirst"?Tr=[u,or,Dt,sr,Qt]:o==="channelsLast"&&(Tr=[u,Dt,sr,Qt,or]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:h,inWidth:y,inChannels:l,outDepth:Dt,outHeight:sr,outWidth:Qt,outChannels:or,padInfo:Lt,strideDepth:J,strideHeight:Z,strideWidth:F,filterDepth:k,filterHeight:S,filterWidth:C,effectiveFilterDepth:We,effectiveFilterHeight:Be,effectiveFilterWidth:wt,dilationDepth:ne,dilationHeight:ue,dilationWidth:we,inShape:e,outShape:Tr,filterShape:t}},ql=(e,t,r,n,i,s)=>{let o=s==="channelsLast";o?e[0].dims[3]:e[0].dims[1];let u=[64,1,1],c={x:r.map((J,Z)=>Z)},h=[Math.ceil(Wl(c.x.map(J=>r[J]))/u[0]),1,1];_e("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${h}`);let y=1,l=Fe.size(r),x=[{type:12,data:l},{type:12,data:n},{type:12,data:i},{type:12,data:t.strides},{type:12,data:t.dilations}];jn(t,x),x.push(...At(e[0].dims,e[1].dims));let k=["rank","rank"],S=e.length===3;S&&(x.push(...At(e[2].dims)),k.push("rank")),x.push(...At(r));let C=J=>{let Z=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:n.length},{name:"pads",type:"u32",length:i.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];Yn(t,Z);let F=1,ne=fr(e[0].dataType),ue=nt("x",e[0].dataType,e[0].dims.length,y),we=nt("W",e[1].dataType,e[1].dims.length,F),We=[ue,we],Be=Vt("result",e[0].dataType,r.length,F),wt="";if(S){let sr=nt("bias",e[2].dataType,e[2].dims.length,F);We.push(sr),wt+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${ne} {
          return bias[${o?Ut("coords",4,5):Ut("coords",1,5)}];
        }`}let Lt=cn(y,ne),Dt=Qn(t,Lt,ne);return`
            ${wt}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${ue.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${we.getByIndices("aIndices")};
            }
          ${J.registerUniforms(Z).declareVariables(...We,Be)}
          ${J.mainStart()}
          ${J.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${Be.offsetToIndices("global_idx")};
              let batch = ${Ut("coords",0,ue.rank)};
              let d2 = ${o?Ut("coords",ue.rank-1,ue.rank):Ut("coords",1,ue.rank)};
              let xFRCCorner = vec3<u32>(${o?Ut("coords",1,ue.rank):Ut("coords",2,ue.rank)},
              ${o?Ut("coords",2,ue.rank):Ut("coords",3,ue.rank)},
              ${o?Ut("coords",3,ue.rank):Ut("coords",4,ue.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?Ut("uniforms.x_shape",1,ue.rank):Ut("uniforms.x_shape",2,ue.rank)};
              let xShapeZ = ${o?Ut("uniforms.x_shape",2,ue.rank):Ut("uniforms.x_shape",3,ue.rank)};
              let xShapeW = ${o?Ut("uniforms.x_shape",3,ue.rank):Ut("uniforms.x_shape",4,ue.rank)};
              let xShapeU = ${o?Ut("uniforms.x_shape",4,ue.rank):Ut("uniforms.x_shape",1,ue.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${S?"value = value + getBiasByOutputCoords(coords)":""};
              ${Dt}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${o};${y};${S}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:h[0],y:h[1],z:h[2]},programUniforms:x}),getShaderSource:C}}}),Zn,Hl,Td=Q(()=>{er(),Yt(),cr(),Un(),Zn=(e,t,r,n)=>{let i=e.length>2,s=i?"value += b[output_channel];":"",o=e[0].dims,u=e[1].dims,c=t.format==="NHWC",h=c?r[3]:r[1],y=h/t.group,l=c&&y>=4?gr(h):1,x=Fe.size(r)/l,k=[{type:12,data:x},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:y}];jn(t,k),k.push(...At(o,[u[0],u[1],u[2],u[3]/l]));let S=i?["rank","rank","rank"]:["rank","rank"];k.push(...At([r[0],r[1],r[2],r[3]/l]));let C=J=>{let Z=Vt("output",e[0].dataType,r.length,l),F=fr(Z.type.tensor),ne=Qn(t,Z.type.value,F),ue=nt("x",e[0].dataType,o.length),we=nt("w",e[1].dataType,u.length,l),We=[ue,we];i&&We.push(nt("b",e[2].dataType,e[2].dims,l));let Be=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Yn(t,Be);let wt=c?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${ue.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${we.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${ue.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${we.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${J.registerUniforms(Be).declareVariables(...We,Z)}

  ${J.mainStart()}
    ${J.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${Z.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${c?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${c?1:2}], outputIndices[${c?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${l} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${c?2:1}];

    var value: ${Z.type.value} = ${Z.type.value}(0);
    ${wt}
    ${s}
    ${ne}
    ${Z.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${l}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(x/64)},programUniforms:k}),getShaderSource:C}},Hl=(e,t,r,n)=>{let i=e.length>2,s=gr(r[3]),o=gr(r[2]),u=Fe.size(r)/s/o,c=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/s],h=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/s],y=[r[0],r[1],r[2],r[3]/s],l=[{type:12,data:u},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];jn(t,l),l.push(...At(c,h,y));let x=(o-1)*t.strides[1]+h[1],k=S=>{let C=Vt("output",e[0].dataType,y.length,s),J=fr(C.type.tensor),Z=Qn(t,C.type.value,J),F=nt("x",e[0].dataType,c.length,s),ne=nt("w",e[1].dataType,h.length,s),ue=[F,ne];i&&ue.push(nt("b",e[2].dataType,e[2].dims,s));let we=i?"value += b[output_channel];":"",We=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Yn(t,We),`
  ${S.registerUniforms(We).declareVariables(...ue,C)}
  ${S.mainStart()}
    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${F.type.value}, ${x}>;
    var values: array<${C.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${h[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${x}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${F.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${F.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${h[1]}; w_width++) {
          let w_val = ${ne.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${we}
      ${Z}
      ${C.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${s};${o};${x};${h[0]};${h[1]}`,inputDependencies:i?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:k}}}),Mo,Kl,vo,Xl=Q(()=>{er(),Yt(),Li(),cr(),Un(),Mo=(e,t,r,n,i=!1,s)=>{let o=e[0].dims,u=e[1].dims,c=o[o.length-2],h=u[u.length-1],y=o[o.length-1],l=gr(h),x=gr(y),k=gr(c),S=Fe.size(r)/l/k,C=e.length>2,J=n?n.slice(0,-2):r.slice(0,-2),Z=[Fe.size(J),c,h],F=[{type:12,data:S},{type:12,data:c},{type:12,data:h},{type:12,data:y}];jn(t,F),F.push(...At(J,o,u)),C&&F.push(...At(e[2].dims)),F.push(...At(Z));let ne=ue=>{let we=xs("batch_dims",e[0].dataType,J.length),We=nt("a",e[0].dataType,o.length,x),Be=nt("b",e[1].dataType,u.length,l),wt=Vt("output",e[0].dataType,Z.length,l),Lt=fr(wt.type.tensor),Dt=Qn(t,wt.type.value,Lt),sr=[We,Be],Qt="";if(C){let _r=i?l:1;sr.push(nt("bias",e[2].dataType,e[2].dims.length,_r)),Qt=`${i?`value += bias[col / ${_r}];`:`value += ${wt.type.value}(bias[row + i]);`}`}let or=o.slice(0,-2),Tr=u.slice(0,-2),ir=gi(or,J),Ht=gi(Tr,J),Mr=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Yn(t,Mr);let br=(_r,Je)=>{let Et=_r.rank,pr=_r.name;if(Et===2)return`var ${pr}_indices = ${_r.type.indices}(0u, 0u);`;let Ur=we.rank,Wr=`var ${pr}_indices: ${_r.type.indices};`;for(let Wn=Et-2-1,Bn=Ur-1;Wn>=0;Wn--,Bn--)Wr+=`
${pr}_indices[${Wn}] = ${Ur>1?`batch_indices[${Bn}]`:"batch_indices"};`;return Je.forEach(Wn=>{Wr+=`
${pr}_indices[${Wn}] = 0;`}),Wr+=`${pr}_indices[${Et-2}] = 0u;
                     ${pr}_indices[${Et-1}] = 0u;`,Wr},Gt=()=>{let _r=`var a_data: ${We.type.value};`;for(let Je=0;Je<x;Je++)_r+=`
              let b_data${Je} = b[(b_offset + (k + ${Je}) * uniforms.N + col) / ${l}];`;for(let Je=0;Je<k;Je++){_r+=`a_data = a[(a_offset + (row + ${Je}) * uniforms.K + k) / ${x}];`;for(let Et=0;Et<x;Et++)_r+=`
            values[${Je}] = fma(${Be.type.value}(a_data${x===1?"":`[${Et}]`}), b_data${Et}, values[${Je}]);
`}return _r};return`
  ${ue.registerUniforms(Mr).registerInternalVariables(we).declareVariables(...sr,wt)}
  ${ue.mainStart()}
    ${ue.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${l})) * ${l};
    var index1 = global_idx / (uniforms.N / ${l});
    let stride1 = uniforms.M / ${k};
    let row = (index1 % stride1) * ${k};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${we.offsetToIndices("batch")};`}
    ${br(We,ir)}
    let a_offset = ${We.indicesToOffset("a_indices")};
    ${br(Be,Ht)}
    let b_offset = ${Be.indicesToOffset("b_indices")};
    var values: array<${wt.type.value}, ${k}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${x}) {
      ${Gt()}
    }
    for (var i = 0u; i < ${k}u; i++) {
      var value = values[i];
      ${Qt}
      ${Dt}
      let cur_indices = ${wt.type.indices}(batch, row + i, col);
      let offset = ${wt.indicesToOffset("cur_indices")};
      ${wt.setByOffset(`offset / ${l}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${l};${x};${k};${i}`,inputDependencies:C?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:F}),getShaderSource:ne}},Kl=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},vo=e=>{Kl(e.inputs);let t=$n.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],n=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&n<8?e.compute(Mo(e.inputs,{activation:""},t)):e.compute(_o(e.inputs,{activation:""},t))}}),Ql,ds,Yl,yi,xo,To,Zl,Ni,Eo,Ed=Q(()=>{Yt(),vd(),xd(),Li(),Td(),Un(),Xl(),Nn(),Ql=(e,t,r,n,i,s)=>{let o=e[0],u=e.slice(s?1:2,s?3:4),c=u.length,h=t[0],y=t.slice(2).map((x,k)=>x+(x-1)*(r[k]-1)),l=u.map((x,k)=>x+n[k]+n[k+c]).map((x,k)=>Math.floor((x-y[k]+i[k])/i[k]));return l.splice(0,0,o),l.splice(s?3:1,0,h),l},ds=[2,3,1,0],Yl=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[1]*t.group;if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},yi=(e,t)=>{let r=e.kernelShape.slice();r.length<t[1].dims.length-2&&r.push(...Array(t[1].dims.length-2-r.length).fill(0));for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let n=e.pads.slice();Yr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,n,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:n}),i},xo=e=>{let t=co(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,s=e.group,o=e.kernel_shape,u=e.pads,c=e.strides,h=e.w_is_const();return{autoPad:n,format:r,dilations:i,group:s,kernelShape:o,pads:u,strides:c,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},To=(e,t,r,n)=>{let i=r.format==="NHWC",s=Ql(t[0].dims,t[1].dims,r.dilations,r.pads,r.strides,i);if(r.group!==1){let We=[t[0]];if(i){let Be=e.kernelCustomData.wT??e.compute(bn(t[1],ds),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Be),We.push(Be)}else We.push(t[1]);t.length===3&&We.push(t[2]),!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1?e.compute(Hl(We,r,s,n),{inputs:We}):e.compute(Zn(We,r,s,n),{inputs:We});return}let o=t.length===3,u=t[0].dims[i?1:2],c=t[0].dims[i?2:3],h=t[0].dims[i?3:1],y=t[1].dims[2],l=t[1].dims[3],x=s[i?1:2],k=s[i?2:3],S=s[i?3:1],C=i&&y===u&&l===c&&r.pads[0]===0&&r.pads[1]===0;if(C||y===1&&l===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let We=s[0],Be,wt,Lt,Dt=[];if(i){let or=e.kernelCustomData.wT??e.compute(bn(t[1],ds),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=or),C){let Tr=u*c*h;Be=t[0].reshape([1,We,Tr]),wt=or.reshape([1,Tr,S]),Lt=[1,We,S]}else Be=t[0].reshape([We,u*c,h]),wt=or.reshape([1,h,S]),Lt=[We,x*k,S];Dt.push(Be),Dt.push(wt)}else Be=t[0].reshape([We,h,u*c]),wt=t[1].reshape([1,S,h]),Lt=[We,S,x*k],Dt.push(wt),Dt.push(Be);o&&Dt.push(t[2]);let sr=Lt[2],Qt=Dt[0].dims[Dt[0].dims.length-1];sr<8&&Qt<8?e.compute(Mo(Dt,r,s,Lt,i,n),{inputs:Dt}):e.compute(_o(Dt,r,s,Lt,i,n),{inputs:Dt});return}let J=!0,Z=e.kernelCustomData.wT??e.compute(bn(t[1],ds),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Z);let F=[t[0],Z];o&&F.push(t[2]);let ne=i?x*k:S,ue=i?S:x*k,we=y*l*h;e.compute(Vl(F,r,s,ne,ue,we,o,J,n),{inputs:F})},Zl=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),o=[1].concat(t.dilations),u=[1].concat(t.kernelShape),c=yi({...t,pads:i,strides:s,dilations:o,kernelShape:u},n);To(e,n,c,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]])},Ni=(e,t,r)=>{let n=r.format==="NHWC"?"channelsLast":"channelsFirst",i=yi(r,t),s=r.autoPad==="NOTSET"?r.pads:r.autoPad,o=bo(t[0].dims,t[1].dims,r.strides,r.dilations,s,!1,n);e.compute(ql(t,i,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],n))},Eo=(e,t)=>{if(Yl(e.inputs,t),e.inputs[0].dims.length===3)Zl(e,t);else if(e.inputs[0].dims.length===5)Ni(e,e.inputs,t);else{let r=yi(t,e.inputs);To(e,e.inputs,r)}}}),Jl,eu,Co=Q(()=>{er(),_(),cr(),Un(),us(),fo(),Li(),Jl=(e,t=!1,r,n,i=4)=>{let s=J=>{switch(J){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${n}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${J} is not supported.`)}},o=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,u=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,c=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",y=e?"row":"col",l=e?"col":"row",x=`
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${y} / outWidth;
      let outCol = ${y} % outWidth;

      let WRow = ${l} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${l} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${c}) || fract(xR) > 0.0) {
        return ${n}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {
        return ${n}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${l} % inChannels;
      ${o}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${i}];`,k=e?`
      let col = colIn * ${i};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${x}
      }
      return ${n}(0.0);`:`
      let col = colIn * ${i};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${x}
      }
      return ${n}(0.0);`,S=`
      let col = colIn * ${i};
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${s(i)}
      }
      return ${n}(0.0);
      `,C=Qn(r,n);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${e?k:S}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${e?S:k}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${n}) {
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${u}
      ${po(t)}
      ${C}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${i}] = value;
    }
  }`},eu=(e,t,r,n,i,s,o,u)=>{let c=t.format==="NHWC",h=c?e[0].dims[3]:e[0].dims[1],y=r[0],l=c?r[2]:r[3],x=c?r[1]:r[2],k=c?r[3]:r[1],S=c&&h%4===0&&h%3&&k%4===0,C=c?k:l*x,J=c?l*x:k,Z=[8,8,1],F=n<=8?[4,1,1]:[4,4,1],ne=[Math.ceil(C/Z[0]/F[0]),Math.ceil(J/Z[1]/F[1]),Math.ceil(y/Z[2]/F[2])];_e("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${ne}`);let ue=S?4:1,we=Math.max(Z[0]*ue,Z[1]),We=S?4:1,Be=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],wt=[Be[0]+(t.dilations[0]<=1?0:(Be[0]-1)*(t.dilations[0]-1)),Be[1]+(t.dilations[1]<=1?0:(Be[1]-1)*(t.dilations[1]-1))],Lt=[wt[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),wt[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],Dt=[{type:6,data:n},{type:6,data:i},{type:6,data:s},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:Be},{type:6,data:Lt}];jn(t,Dt),Dt.push(...At(e[0].dims,e[1].dims));let sr=["rank","rank"];o&&(Dt.push(...At(e[2].dims)),sr.push("rank")),Dt.push(...At(r));let Qt=or=>{let Tr=nt("x",e[0].dataType,e[0].dims.length,We),ir=nt("w",e[1].dataType,e[1].dims.length,1),Ht=Vt("result",e[0].dataType,r.length,We),Mr=[Tr,ir],br="";if(o){let Je=nt("bias",e[2].dataType,e[2].dims.length,We);Mr.push(Je),br+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${Je.type.value} {
            return bias[coords.${c?"w":"y"}${S?"/ 4":""}];
          }`}let Gt=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:Be.length},{name:"pads",type:"i32",length:Lt.length}];Yn(t,Gt);let _r=fr(e[0].dataType,1);if(_r!=="f16"&&_r!=="f32")throw new Error(`elemType ${_r} is not supported.`);return`
        ${ho("uniforms.result_strides")}
        ${or.registerUniforms(Gt).declareVariables(...Mr,Ht)};
        ${br}
        ${Jl(c,o,t,Tr.type.value,ue)}
        ${S?zi(F,Z,_r,void 0,!c,we):Di(F,Z,_r,void 0,!c,we,!1,void 0,u)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${F};${Z};${S}`,inputDependencies:sr},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:ne[0],y:ne[1],z:ne[2]},programUniforms:Dt}),getShaderSource:Qt}}}),tu,$o,Cd=Q(()=>{er(),_(),Yt(),cr(),tu=(e,t,r,n,i,s=!1,o,u,c=!1)=>{let h=c?1:2,y=c?2:3,l=c?3:1,x=s?2:1,k=`
  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${o}>`:o}) {
    result[flatIndex] = ${s?`vec4<${o}>`:o}(value);
  }`;n&&(k+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${o}>`:o} {
      return bias[coords.${c?"w":"y"}${s?"/ 4":""}];
    }`);let S=s?4:1,C=nt("W",t[1].dataType,t[1].dims.length,S),J=nt("Dy",t[0].dataType,t[0].dims.length,S),Z=[J,C];n&&Z.push(nt("bias",t[2].dataType,[r[l]].length,S));let F=Vt("result",t[0].dataType,r.length,S),ne=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${x};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${o}>, ${x}>;
        for (var i = 0; i < ${x}; i++) {
          dotProd[i] = vec4<${o}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${o}(dyCorner.x) + ${o}(wR)) / ${o}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${o}(dyCorner.y) + ${o}(wC)) / ${o}(uniforms.strides.y);
            let dyC2 = (${o}(dyCorner.y) + 1.0 + ${o}(wC)) / ${o}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${J.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${J.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${o}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${l}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${J.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${J.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${x}; i = i + 1) {
          let value = dotProd[i] + ${n?"bias[c+i]":`vec4<${o}>(0.0)`};
          ${F.set("batch","r","c + i","d1","value")};
        }
      }`,ue=`
          let outputIndices = ${F.offsetToIndices("global_idx")};
          let batch = ${F.indicesGet("outputIndices",0)};
          let d1 = ${F.indicesGet("outputIndices",l)};
          let r = ${F.indicesGet("outputIndices",h)};
          let c = ${F.indicesGet("outputIndices",y)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${o}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${o}(dyRCorner) + ${o}(wR)) / ${o}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${o}(dyCCorner) + ${o}(wC)) / ${o}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[${y}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${c?J.get("batch","idyR","idyC","inputChannel"):J.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${C.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${n?"bias[d1]":`${o}(0.0)`};
          ${F.setByOffset("global_idx","value")};
        `;return`
  ${e.registerUniforms(u).declareVariables(...Z,F)}
  ${k}

    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${s?ne:ue}}`},$o=(e,t,r)=>{let n=e.length>2,i=t.outputShape,s=Fe.size(i),o=[Math.ceil(s/64),1,1];_e("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${o}`);let u=t.format==="NHWC",c=["rank","rank"],h=[t.strides[0],t.strides[1]],y=[t.kernelShape[u?1:2],t.kernelShape[u?2:3]],l=[t.dilations[0],t.dilations[1]],x=[y[0]+(t.dilations[0]<=1?0:(t.kernelShape[u?1:2]-1)*(t.dilations[0]-1)),y[1]+(t.dilations[1]<=1?0:(t.kernelShape[u?2:3]-1)*(t.dilations[1]-1))],k=[x[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),x[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],S=!1,C=t.group,J=e[1].dims,Z=J[0]/C,F=J[1],ne=[{type:12,data:s},{type:12,data:h},{type:12,data:y},{type:12,data:l},{type:12,data:x},{type:6,data:k},{type:12,data:Z},{type:12,data:F},...At(e[0].dims,e[1].dims)];n&&(ne.push(...At(e[2].dims)),c.push("rank")),ne.push(...At(i));let ue=o[1]===1&&o[2]===1,we=We=>{let Be=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:y.length},{name:"dilations",type:"u32",length:y.length},{name:"effective_filter_dims",type:"u32",length:x.length},{name:"pads",type:"i32",length:k.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],wt=fr(e[0].dataType);return`${tu(We,e,i,n,ue,S,wt,Be,u)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:c},getRunData:()=>({dispatchGroup:{x:o[0],y:o[1],z:o[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:ne}),getShaderSource:we}}}),$d,ru,nu,So,bi,iu,su,ou,au,lu,ko=Q(()=>{Co(),Cd(),Un(),Nn(),$d=(e,t,r,n,i,s)=>(e-1)*t+r+(n-1)*i+1-s,ru=(e,t,r,n,i)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[n]=s,r[i]=e-s):t==="SAME_LOWER"&&(r[n]=e-s,r[i]=s)},nu=(e,t,r,n,i,s,o,u,c,h)=>{let y=e.length-2,l=h.length===0;c.length<y&&c.push(...Array(y-c.length).fill(0));let x=e[0],k=t[u?3:1]*i;for(let S=0,C=e.length-y-(u?1:0);S<y;++S,++C){let J=e[C],Z=l?J*o[S]:h[S],F=$d(J,o[S],s[S],t[C],r[S],Z);ru(F,n,s,S,S+y),l&&h.push(o[S]*(J-1)+c[S]+(t[C]-1)*r[S]+1-s[S]-s[S+y])}h.splice(0,0,x),h.splice(u?3:1,0,k)},So=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((l,x)=>l*x,1)===0){r.length=0;for(let l=2;l<t[1].dims.length;++l)r.push(t[1].dims[l])}let n=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(n?3:1,0,t[1].dims[1]);let i=e.pads.slice(),s=e.outputShape.slice(),o=e.outputPadding.slice(),u=t[0].dims,c=e.dilations.slice();if(c.reduce((l,x)=>l+x,0)===0){let l=t[0].dims.length-2;c=new Array(l).fill(1)}let h=e.strides.slice();if(h.reduce((l,x)=>l+x,0)===0){let l=t[0].dims.length-2;h=new Array(l).fill(1)}nu(u,r,c,e.autoPad,e.group,i,h,n,o,s);let y=Object.assign({},e);return Object.assign(y,{kernelShape:r,pads:i,outputPadding:o,outputShape:s,dilations:c,strides:h}),y},bi=e=>{let t=co(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,s=e.group,o=e.kernelShape,u=e.pads,c=e.strides,h=e.wIsConst(),y=e.outputPadding,l=e.outputShape;return{autoPad:n,format:r,dilations:i,group:s,kernelShape:o,outputPadding:y,outputShape:l,pads:u,strides:c,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},iu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[0];if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((o,u)=>o+u,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((o,u)=>o+u,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((o,u)=>o+u,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((o,u)=>o+u,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},su=[2,3,1,0],ou=(e,t,r)=>{let n=So(r,t),i=r.format==="NHWC",s=n.outputShape,o=s[i?3:1],u=t[0].dims[i?3:1];if(n.group!==1||o===1&&u===1){e.compute($o(t,n));return}let c=s[i?1:2],h=s[i?2:3],y=t[1].dims[2],l=t[1].dims[3],x=i?c*h:o,k=i?o:c*h,S=y*l*u,C=!0,J=e.kernelCustomData.wT??e.compute(bn(t[1],su),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=J);let Z=[t[0],J],F=t.length===3;F&&(!i&&t[2].dims.length===1?Z.push(t[2].reshape([t[2].dims[0],1,1])):Z.push(t[2])),e.compute(eu(Z,n,s,x,k,S,F,C),{inputs:Z})},au=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let o=t.strides;(o.length===0||o[0]===0)&&(o=[1]);let u=t.pads;u.length===0&&(u=[0,0]),u=[0,u[0],0,u[1]],o=[1].concat(o),s=[1].concat(s),i=[1].concat(i);let c=So({...t,pads:u,strides:o,dilations:s,kernelShape:i},n);e.compute($o(n,c,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},lu=(e,t)=>{iu(e.inputs,t),e.inputs[0].dims.length===3?au(e,t):ou(e,e.inputs,t)}}),Sd,uu,du,kd=Q(()=>{er(),Yt(),$r(),cr(),Sd=(e,t,r,n)=>{let i=Fe.size(t),s=t.length,o=nt("input",e,s),u=Vt("output",e,s),c=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=Fe.normalizeAxis(c,s),y=l=>{let x=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,k=Ut("uniforms.input_shape","uniforms.axis",s),S=n.reverse?x+(n.exclusive?" + 1":""):"0",C=n.reverse?k:x+(n.exclusive?"":" + 1");return`
                ${l.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,u)}
                ${l.mainStart()}
                  ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${u.offsetToIndices("global_idx")};
                  var sum = ${u.type.value}(0);
                  let first : i32 = ${S};
                  let last : i32 = ${C};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${u.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:h},...At(t,t)]}),getShaderSource:y}},uu=(e,t)=>{let r=e.inputs[0].dims,n=e.inputs[0].dataType,i=e.inputs[1];e.compute(Sd(n,r,i,t),{inputs:[0]})},du=e=>{let t=e.exclusive===1,r=e.reverse===1;return dr({exclusive:t,reverse:r})}}),cu,pu,Po,hu,fu,mu=Q(()=>{er(),Yt(),$r(),cr(),cu=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},pu=(e,t,r,n)=>{let i=[];i.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let s=0;s<t;++s)i.push(r.indicesSet("a",e[s],`i[${s}]`));return i.push("return a;}"),i.join(`
`)},Po=(e,t)=>{let r,n,i,s,o,u,c=t.format==="NHWC",h=t.blocksize,y=t.mode==="DCR";c?([r,n,i,s]=e.dims,o=y?[r,n,i,h,h,s/h**2]:[r,n,i,s/h**2,h,h],u=y?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,n,i,s]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],o=y?[r,h,h,s/h**2,n,i]:[r,s/h**2,h,h,n,i],u=y?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let l=e.reshape(o),x=l.dims.length,k=e.dataType,S=nt("a",k,x),C=Vt("output",k,x),J=Z=>`
  ${Z.registerUniform("output_size","u32").declareVariables(S,C)}

  ${pu(u,x,S,C)}

  ${Z.mainStart()}
    ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${C.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${C.setByOffset("global_idx",S.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:Z=>{let F=c?[r,n*h,i*h,s/h**2]:[r,s/h**2,n*h,i*h],ne=Fe.size(F),ue=l.dims,we=Fe.sortBasedOnPerm(ue,u);return{outputs:[{dims:F,dataType:Z[0].dataType}],dispatchGroup:{x:Math.ceil(ne/64)},programUniforms:[{type:12,data:ne},...At(ue,we)]}},getShaderSource:J}},hu=(e,t)=>{cu(e.inputs),e.compute(Po(e.inputs[0],t))},fu=e=>dr({blocksize:e.blocksize,mode:e.mode,format:e.format})}),cs,ji,ps,_u,gu,hs,wu,Ao,yu,bu,Io,Fo=Q(()=>{er(),Yt(),$r(),cr(),cs="[a-zA-Z]|\\.\\.\\.",ji="("+cs+")+",ps="^"+ji+"$",_u="("+ji+",)*"+ji,gu="^"+_u+"$",hs=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let r=this.symbolToIndices.get(e);r===void 0?r=[t]:r.push(t),this.symbolToIndices.set(e,r)}},wu=class{constructor(e,t){this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,n]=t.includes("->")?t.split("->",2):[t,""];if(!r.match(RegExp(gu)))throw new Error("Invalid LHS term");if(r.split(",").forEach((i,s)=>{let o=e[s].dims.slice();if(!i.match(RegExp(ps)))throw new Error("Invalid LHS term");let u=this.processTerm(i,!0,o,s);this.lhs.push(u)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([i,s])=>s.count===1||i==="...").map(([i])=>i).join("");else if(!n.match(RegExp(ji)))throw new Error("Invalid RHS");n.match(RegExp(cs,"g"))?.forEach(i=>{if(i==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let s=this.symbolToInfo.get(i);if(s===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(s.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(e,t,r){let n=this.symbolToInfo.get(e);if(n!==void 0){if(n.dimValue!==t&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(r)}else n={count:1,dimValue:t,inputIndices:[r]};this.symbolToInfo.set(e,n)}processTerm(e,t,r,n=-1){let i=r.length,s=!1,o=[],u=0;if(!e.match(RegExp(ps))&&!t&&e!=="")throw new Error("Invalid LHS term");let c=e.match(RegExp(cs,"g")),h=new hs(n);return c?.forEach((y,l)=>{if(y==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let x=i-c.length+1;if(x<0)throw new Error("Ellipsis out of bounds");if(o=r.slice(u,u+x),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=o;else throw new Error("Ellipsis must be specified in the LHS");for(let k=0;k<o.length;k++){let S=String.fromCharCode(48+k);h.addSymbol(S,l+k),this.addSymbol(S,r[u++],n)}}else h.addSymbol(y,l+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,r[u++],n)}),h}},Ao=e=>e+"_max",yu=(e,t,r,n)=>{let i=e.map(h=>h.length).map((h,y)=>nt(`input${y}`,t,h)),s=Fe.size(n),o=Vt("output",t,n.length),u=[...r.symbolToInfo.keys()].filter(h=>!r.rhs.symbolToIndices.has(h)),c=h=>{let y=[],l="var prod = 1.0;",x="var sum = 0.0;",k="sum += prod;",S=[],C=[],J=[],Z=[],F=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((ue,we)=>{if(r.rhs.symbolToIndices.has(we)){let We=r.rhs.symbolToIndices.get(we)?.[0];We!==void 0&&r.lhs.forEach((Be,wt)=>{if(ue.inputIndices.includes(wt)){let Lt=Be.symbolToIndices.get(we);if(Lt===void 0)throw new Error("Invalid symbol error");Lt.forEach(Dt=>{y.push(`${i[wt].indicesSet(`input${wt}Indices`,Dt,o.indicesGet("outputIndices",We))}`)})}})}else r.lhs.forEach((We,Be)=>{if(ue.inputIndices.includes(Be)){let wt=We.symbolToIndices.get(we);if(wt===void 0)throw new Error("Invalid symbol error");wt.forEach(Lt=>{S.push(`${i[Be].indicesSet(`input${Be}Indices`,Lt,`${we}`)}`)}),Z.push(`prod *= ${i[Be].getByIndices(`input${Be}Indices`)};`)}}),C.push(`for(var ${we}: u32 = 0; ${we} < uniforms.${Ao(we)}; ${we}++) {`),J.push("}")});let ne=F?[...y,`let sum = ${i.map((ue,we)=>ue.getByIndices(`input${we}Indices`)).join(" * ")};`]:[...y,x,...C,...S,l,...Z,k,...J];return`
            ${h.registerUniforms(u.map(ue=>({name:`${Ao(ue)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,o)}

            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${i.map((ue,we)=>`var input${we}Indices: ${i[we].type.indices};`).join(`
`)}
            ${ne.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let h=u.filter(l=>r.symbolToInfo.has(l)).map(l=>({type:12,data:r.symbolToInfo.get(l)?.dimValue||0}));h.push({type:12,data:s});let y=e.map((l,x)=>[...At(l)]).reduce((l,x)=>l.concat(x),h);return y.push(...At(n)),{outputs:[{dims:n,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:y}},getShaderSource:c}},bu=(e,t)=>{let r=new wu(e.inputs,t.equation),n=r.outputDims,i=e.inputs.map((s,o)=>s.dims);e.compute(yu(i,e.inputs[0].dataType,r,n))},Io=e=>{let t=e.equation.replace(/\s+/g,"");return dr({equation:t})}}),Pd,Oo,Mu,Bo,vu,Ad=Q(()=>{er(),Yt(),cr(),Pd=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;n<r.length&&i<t.length;++n,++i)if(r[n]!==t[i]&&r[n]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Oo=(e,t)=>{let r=e.length-t.length,n=[];for(let i=0;i<r;++i)n.push(e[i]);for(let i=0;i<t.length;++i)n.push(t[i]===1?e[i+r]:t[i]);return n},Mu=(e,t)=>e.length>t.length?Oo(e,t):Oo(t,e),Bo=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=Mu(t,r),i=e[0].dataType,s=i===9?4:1,o=Math.ceil(Fe.size(n)/s),u=h=>{let y=nt("input",i,t.length,s),l=Vt("output",i,n.length,s),x;if(i===9){let k=(S,C,J="")=>`
          let outputIndices${C} = ${l.offsetToIndices(`outputOffset + ${C}u`)};
          let offset${C} = ${y.broadcastedIndicesToOffset(`outputIndices${C}`,l)};
          let index${C} = offset${C} / 4u;
          let component${C} = offset${C} % 4u;
          ${S}[${C}] = ${J}(${y.getByOffset(`index${C}`)}[component${C}]);
        `;x=`
        let outputOffset = global_idx * ${s};
        var data = vec4<u32>(0);
        ${k("data",0,"u32")}
        ${k("data",1,"u32")}
        ${k("data",2,"u32")}
        ${k("data",3,"u32")}
        ${l.setByOffset("global_idx","data")}
      }`}else x=`
        let outputIndices = ${l.offsetToIndices("global_idx")};
        let inputOffset = ${y.broadcastedIndicesToOffset("outputIndices",l)};
        ${l.setByOffset("global_idx",y.getByOffset("inputOffset"))}
      }`;return`
    ${h.registerUniform("vec_size","u32").declareVariables(y,l)}
    ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${x}`},c=[{type:12,data:o},...At(t,n)];return{name:"Expand",shaderCache:{hint:`${n.length}`,inputDependencies:["rank"]},getShaderSource:u,getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:c})}},vu=e=>{Pd(e.inputs),e.compute(Bo(e.inputs),{inputs:[0]})}}),zo,xu,Id=Q(()=>{er(),Yt(),cr(),so(),zo=e=>{let t=e[0].dataType,r=Fe.size(e[0].dims),n=Fe.size(e[1].dims),i=n%4===0,s=o=>{let u=nt("x",t,[1],4),c=nt("bias",t,[1],4),h=Vt("y",t,[1],4),y=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],l=k=>`
      let bias${k}_offset: u32 = (global_idx * 4 + ${k}) % uniforms.bias_size;
      let bias${k} = ${c.getByOffset(`bias${k}_offset / 4`)}[bias${k}_offset % 4];`,x=i?`
      let bias = ${c.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${l(0)}${l(1)}${l(2)}${l(3)}
      let bias = ${u.type.value}(bias0, bias1, bias2, bias3);`;return`${o.registerUniforms(y).declareVariables(u,c,h)}

    ${no(Fr(t))}

    ${o.mainStart(dn)}
      ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${u.getByOffset("global_idx")};
      ${x}
      let x_in = x + bias;
      ${h.setByOffset("global_idx",as("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:s,getRunData:o=>({outputs:[{dims:o[0].dims,dataType:o[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:n}],dispatchGroup:{x:Math.ceil(r/dn/4)}})}},xu=e=>{e.inputs.length<2||Fe.size(e.inputs[1].dims)===0?_l(e):e.compute(zo(e.inputs))}}),Do,Fd,Od,Lo,Tu=Q(()=>{er(),Yt(),$r(),cr(),Do=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Fd=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,s=Fe.normalizeAxis(t.axis,i),o=r.slice(0);o.splice(s,1,...n);let u=r[s],c=e[0].dataType===9?4:1,h=Math.ceil(Fe.size(o)/c),y=[{type:12,data:h},{type:6,data:u},{type:12,data:s},...At(e[0].dims,e[1].dims,o)],l=x=>{let k=nt("data",e[0].dataType,e[0].dims.length,c),S=nt("inputIndices",e[1].dataType,e[1].dims.length),C=Vt("output",e[0].dataType,o.length,c),J=F=>{let ne=n.length,ue=`var indicesIndices${F}  = ${S.type.indices}(0);`;for(let we=0;we<ne;we++)ue+=`${ne>1?`indicesIndices${F}[${we}]`:`indicesIndices${F}`} = ${o.length>1?`outputIndices${F}[uniforms.axis + ${we}]`:`outputIndices${F}`};`;ue+=`
          var idx${F} = ${S.getByIndices(`indicesIndices${F}`)};
          if (idx${F} < 0) {
            idx${F} = idx${F} + uniforms.axisDimLimit;
          }
          var dataIndices${F} : ${k.type.indices};
        `;for(let we=0,We=0;we<i;we++)we===s?(ue+=`${i>1?`dataIndices${F}[${we}]`:`dataIndices${F}`} = u32(idx${F});`,We+=ne):(ue+=`${i>1?`dataIndices${F}[${we}]`:`dataIndices${F}`} = ${o.length>1?`outputIndices${F}[${We}]`:`outputIndices${F}`};`,We++);return ue},Z;if(e[0].dataType===9){let F=(ne,ue,we="")=>`
          let outputIndices${ue} = ${C.offsetToIndices(`outputOffset + ${ue}u`)};
          ${J(ue)};
          let offset${ue} = ${k.indicesToOffset(`dataIndices${ue}`)};
          let index${ue} = offset${ue} / 4u;
          let component${ue} = offset${ue} % 4u;
          ${ne}[${ue}] = ${we}(${k.getByOffset(`index${ue}`)}[component${ue}]);
        `;Z=`
        let outputOffset = global_idx * ${c};
        var value = vec4<u32>(0);
        ${F("value",0,"u32")}
        ${F("value",1,"u32")}
        ${F("value",2,"u32")}
        ${F("value",3,"u32")}
        ${C.setByOffset("global_idx","value")}
      `}else Z=`
      let outputIndices = ${C.offsetToIndices("global_idx")};
      ${J("")};
      let value = ${k.getByIndices("dataIndices")};
      ${C.setByOffset("global_idx","value")};
      `;return`
      ${x.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(k,S,C)}
      ${x.mainStart()}
        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${Z}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:y}),getShaderSource:l}},Od=e=>dr({axis:e.axis}),Lo=(e,t)=>{let r=e.inputs;Do(r),e.compute(Fd(e.inputs,t))}}),Eu,Cu,Ro,$u,Bd=Q(()=>{er(),Yt(),$r(),cr(),Eu=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let r=Fe.normalizeAxis(t.quantizeAxis,e[0].dims.length),n=t.blockSize,i=e[0],s=e[2],o=e.length===4?e[3]:void 0;if(s.dims.length!==i.dims.length||!i.dims.map((u,c)=>c===r?Math.ceil(u/n)===s.dims[c]:u===s.dims[c]).reduce((u,c)=>u&&c,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==i.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==s.dims.length||!o.dims.map((u,c)=>u===s.dims[c]).reduce((u,c)=>u&&c,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Cu=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,s=Fe.normalizeAxis(t.gatherAxis,i),o=Fe.normalizeAxis(t.quantizeAxis,i),u=r.slice(0);u.splice(s,1,...n);let c=Fe.size(u),h=e[2].dataType,y=e[0].dataType===22,l=[{type:12,data:c},{type:12,data:o},{type:12,data:s},{type:12,data:t.blockSize},...At(...e.map((k,S)=>k.dims),u)],x=k=>{let S=nt("data",e[0].dataType,e[0].dims.length),C=nt("inputIndices",e[1].dataType,e[1].dims.length),J=nt("scales",e[2].dataType,e[2].dims.length),Z=e.length>3?nt("zeroPoint",e[3].dataType,e[3].dims.length):void 0,F=Vt("output",h,u.length),ne=[S,C,J];Z&&ne.push(Z);let ue=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${k.registerUniforms(ue).declareVariables(...ne,F)}
        ${k.mainStart()}
        let output_indices = ${F.offsetToIndices("global_idx")};
        var indices_indices = ${C.type.indices}(0);
        ${n.length>1?`
          for (var i: u32 = 0; i < ${n.length}; i++) {
            let index = ${F.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${C.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${F.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${S.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${F.indicesGet("output_indices","i")};
          ${S.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${C.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${r[s]};
        }
        ${S.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${u.length}; i++) {
          let index = ${F.indicesGet("output_indices",`i + ${n.length} - 1`)};
          ${S.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${S.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${S.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${y?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${J.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${J.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${J.getByIndices("scale_indices")};
        ${Z?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${Z.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${Z.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${y?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Fr(h)}(quantized_data - zero_point) * scale;
        ${F.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter((k,S)=>S!==1).map(k=>k.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(k,S)=>"rank")},getRunData:()=>({outputs:[{dims:u,dataType:h}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:l}),getShaderSource:x}},Ro=(e,t)=>{let r=e.inputs;Eu(r,t),e.compute(Cu(e.inputs,t))},$u=e=>dr({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),No,Su,ku,jo,zd=Q(()=>{er(),Yt(),$r(),cr(),No=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Su=(e,t)=>{let r=e[0].dims,n=e[0].dataType,i=r.length,s=e[1].dims,o=e[1].dataType,u=Fe.normalizeAxis(t.axis,i),c=r[u],h=s.slice(0),y=Fe.size(h),l=nt("input",n,i),x=nt("indicesInput",o,s.length),k=Vt("output",n,h.length),S=[{type:12,data:y},{type:6,data:c},{type:12,data:u}];return S.push(...At(r,s,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:S}),getShaderSource:C=>`
      ${C.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(l,x,k)}
      ${C.mainStart()}
      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${k.offsetToIndices("global_idx")};

      var idx = ${x.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${l.type.indices}(outputIndices);
      ${l.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${l.getByIndices("inputIndices")};

      ${k.setByOffset("global_idx","value")};
  }`}},ku=e=>dr({axis:e.axis}),jo=(e,t)=>{let r=e.inputs;No(r),e.compute(Su(e.inputs,t))}}),Pu,Au,Iu,zr,Pc=Q(()=>{er(),Yt(),cr(),Pu=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Au=(e,t)=>{let r=e[0].dims.slice(),n=e[1].dims.slice(),[i,s,o]=on.getShapeOfGemmResult(r,t.transA,n,t.transB,e.length===3?e[2].dims:void 0),u=[i,s];if(!u)throw new Error("Can't use gemm on the given tensors");let c=Fe.size(u),h=[{type:12,data:c},{type:12,data:i},{type:12,data:s},{type:12,data:o},{type:1,data:t.alpha},{type:1,data:t.beta}],y=["type","type"];e.length===3&&(h.push(...At(e[2].dims)),y.push("rank")),h.push(...At(u));let l=x=>{let k="";t.transA&&t.transB?k="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?k="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?k="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(k="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let S=t.alpha===1?"":"value *= uniforms.alpha;",C=nt("a",e[0].dataType,e[0].dims),J=nt("b",e[1].dataType,e[1].dims),Z=C.type.value,F=null,ne=[C,J];e.length===3&&(F=nt("c",e[2].dataType,e[2].dims.length),ne.push(F));let ue=Vt("output",e[0].dataType,u.length);ne.push(ue);let we=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${x.registerUniforms(we).declareVariables(...ne)}

  ${x.mainStart()}
    ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${Z}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${k}
    }

    ${S}
    ${F!=null?`let cOffset = ${F.broadcastedIndicesToOffset("vec2(m, n)",ue)}; value += ${Z}(uniforms.beta) * ${F.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:h}),getShaderSource:l}},Iu=e=>{let t=e.transA,r=e.transB,n=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:n,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},zr=(e,t)=>{Pu(e.inputs),e.compute(Au(e.inputs,t))}}),wn,Dd,Uo,Vo,Fu,Ui,Ou,Wo=Q(()=>{er(),Yt(),$r(),he(),ns(),cr(),Nn(),wn=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,Dd=(e,t)=>{let r=e[0],n=wn(e,1),i=wn(e,2),s=wn(e,3),o=wn(e,4),u=wn(e,5),c=wn(e,6),h=wn(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let y=r.dims[0],l=r.dims[1],x=r.dims.length===3?r.dims[2]:t.numHeads*r.dims[4],k=l,S=0,C=0,J=Math.floor(x/t.numHeads);if(c&&h&&Fe.size(c.dims)&&Fe.size(h.dims)){if(c.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(c.dims[0]!==y||c.dims[1]!==t.numHeads||c.dims[3]!==J)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(h.dims[0]!==y||h.dims[1]!==t.numHeads||h.dims[3]!==J)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[2]!==h.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(h.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');S=c.dims[2],C=c.dims[2]}else if(c&&Fe.size(c.dims)||h&&Fe.size(h.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let Z;if(n&&Fe.size(n.dims)>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(n.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');Z=2,k=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==J)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');Z=5,k=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==J)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');Z=0,k=n.dims[2]}}else{if(r.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(r.dims[2]!==t.numHeads||r.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');Z=3}if(s&&Fe.size(s.dims)>0){if(s.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(n&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let F=S+k,ne=0;if(o&&Fe.size(o.dims)>0){ne=8;let Be=o.dims;throw Be.length===1?Be[0]===y?ne=1:Be[0]===3*y+2&&(ne=3):Be.length===2&&Be[0]===y&&Be[1]===F&&(ne=5),ne===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let ue=!1,we=x;if(i&&Fe.size(i.dims)>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(k!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');we=i.dims[2]}else{if(k!==i.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');we=i.dims[1]*i.dims[3],ue=!0}}let We=!1;if(o&&Fe.size(o.dims)>0)throw new Error("Key padding mask is not supported");if(u&&Fe.size(u.dims)>0){if(u.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(u.dims[0]!==y||u.dims[1]!==t.numHeads||u.dims[2]!==l||u.dims[3]!==F)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:y,sequenceLength:l,pastSequenceLength:S,kvSequenceLength:k,totalSequenceLength:F,maxSequenceLength:C,inputHiddenSize:0,hiddenSize:x,vHiddenSize:we,headSize:J,vHeadSize:Math.floor(we/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:ne,scale:t.scale,broadcastResPosBias:We,passPastInKv:ue,qkvFormat:Z}},Uo=e=>dr({...e}),Vo=dr({perm:[0,2,1,3]}),Fu=(e,t,r,n,i,s,o)=>{let u=[n,i,s],c=Fe.size(u),h=[{type:12,data:c},{type:12,data:o},{type:12,data:s}],y=l=>{let x=Vt("qkv_with_bias",t.dataType,u),k=nt("qkv",t.dataType,u),S=nt("bias",r.dataType,u),C=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${l.registerUniforms(C).declareVariables(k,S,x)}
  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:h}),getShaderSource:y},{inputs:[t,r],outputs:[-1]})[0]},Ui=(e,t,r,n,i,s,o,u)=>{let c=s;if(o&&Fe.size(o.dims)>0){if(n===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return c=Fu(e,s,o,t,n,r*i,u),c=c.reshape([t,n,r,i]),r===1||n===1?c:e.compute(bn(c,Vo.perm),{inputs:[c],outputs:[-1]})[0]}else return s.dims.length===3&&(c=s.reshape([t,n,r,i])),r===1||n===1?c:e.compute(bn(c,Vo.perm),{inputs:[c],outputs:[-1]})[0]},Ou=(e,t)=>{let r=Dd(e.inputs,t),n=e.inputs[0],i=wn(e.inputs,1),s=wn(e.inputs,2),o=wn(e.inputs,3),u=wn(e.inputs,4),c=wn(e.inputs,5),h=wn(e.inputs,6),y=wn(e.inputs,7);if(n.dims.length===5)throw new Error("Packed QKV is not implemented");if(i?.dims.length===5)throw new Error("Packed KV is not implemented");let l=i&&s&&i.dims.length===4&&s.dims.length===4,x=Ui(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,n,o,0);if(l)return wi(e,x,i,s,u,void 0,h,y,c,r);if(!i||!s)throw new Error("key and value must be provided");let k=Ui(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,o,r.hiddenSize),S=Ui(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,s,o,2*r.hiddenSize);wi(e,x,k,S,u,void 0,h,y,c,r)}}),Go,Bu,zu,qo,Du,Ld,Lu,Ru=Q(()=>{er(),Yt(),$r(),cr(),Go=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Bu=(e,t)=>{let r=[],n=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),n=r.length),dr({numOutputs:n,axis:t.axis,splitSizes:r})},zu=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${Ut("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,qo=e=>{let t=e.length,r=[];for(let n=0;n<t;++n){let i=e[n].setByIndices("indices","input[global_idx]");t===1?r.push(i):n===0?r.push(`if (output_number == ${n}u) { ${i} }`):n===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${n}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},Du=(e,t)=>{let r=e[0].dims,n=Fe.size(r),i=e[0].dataType,s=Fe.normalizeAxis(t.axis,r.length),o=new Array(t.numOutputs),u=nt("input",i,r.length),c=new Array(t.numOutputs),h=[],y=[],l=0,x=[{type:12,data:n}];for(let S=0;S<t.numOutputs;S++){l+=t.splitSizes[S],c[S]=l;let C=r.slice();C[s]=t.splitSizes[S],y.push(C),o[S]=Vt(`output${S}`,i,C.length),h.push({dims:y[S],dataType:e[0].dataType})}x.push({type:12,data:c},...At(r,...y));let k=S=>`
  ${S.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",c.length).declareVariables(u,...o)}
  ${zu(c.length)}
  ${qo(o)}

  ${S.mainStart()}
    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${u.offsetToIndices("global_idx")};
    var index = ${u.indicesGet("indices",s)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${Ut("uniforms.size_in_split_axis","output_number - 1u",c.length)};
      ${u.indicesSet("indices",s,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:k,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(n/64)},programUniforms:x})}},Ld=(e,t)=>{Go(e.inputs);let r=e.inputs.length===1?t:Bu(e.inputs,t);e.compute(Du(e.inputs,r),{inputs:[0]})},Lu=e=>{let t=e.axis,r=e.splitSizes,n=e.numOutputs<0?r.length:e.numOutputs;if(n!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return dr({axis:t,numOutputs:n,splitSizes:r})}}),Nu,ju,Ho,Uu,Rd=Q(()=>{$r(),ns(),Wo(),Ru(),Nn(),Nu=(e,t)=>{if(t.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let r=e[0],n=e[1],i=e[2],s=e[3],o=e[4];if(t.localWindowSize!==-1)throw new Error("Local attention is not supported");if(t.softcap!==0)throw new Error("Softcap is not supported");if(t.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(t.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let u=!1,c=r.dims[0],h=r.dims[1],y=r.dims.length===3?u?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],l=h,x=0,k=!n||n.dims.length===0,S=Math.floor(k?y/(t.numHeads+2*t.kvNumHeads):y/t.numHeads);k&&(y=S*t.numHeads);let C=s&&s.dims.length!==0,J=o&&o.dims.length!==0;if(C&&s.dims.length===4&&s.dims[0]===c&&s.dims[1]!==t.kvNumHeads&&s.dims[2]===t.kvNumHeads&&s.dims[3]===S)throw new Error("BSNH pastKey/pastValue is not supported");if(C&&J){if(s.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(o.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');x=s.dims[2]}else if(C||J)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let Z=1;if(n&&n.dims.length>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(r.dims[2]%n.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');l=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==S)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');l=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==S)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');l=n.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');Z=3}let F=0,ne=!1,ue=t.kvNumHeads?S*t.kvNumHeads:y;if(i&&i.dims.length>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(l!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');ue=i.dims[2]}else{if(l!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');ue=i.dims[1]*i.dims[3],ne=!0}}let we=e.length>4?e[5]:void 0;if(we&&we.dims.length!==1&&we.dims[0]!==c)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:c,sequenceLength:h,pastSequenceLength:x,kvSequenceLength:l,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:y,vHiddenSize:ue,headSize:S,vHeadSize:Math.floor(ue/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:F,scale:t.scale,broadcastResPosBias:!1,passPastInKv:ne,qkvFormat:Z}},ju=dr({perm:[0,2,1,3]}),Ho=(e,t,r)=>{let n=t,i=r.kvNumHeads;return t.dims.length===3&&r.kvSequenceLength!==0&&(n=t.reshape([r.batchSize,r.kvSequenceLength,i,r.headSize]),n=e.compute(bn(n,ju.perm),{inputs:[n],outputs:[-1]})[0]),n},Uu=(e,t)=>{let r=Nu(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let n=e.inputs[0],i=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,s=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,o=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,u=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,c=e.inputs.length>4?e.inputs[5]:void 0,h=e.inputs.length>5?e.inputs[6]:void 0,y=r.kvNumHeads?r.kvNumHeads:r.numHeads,l=dr({axis:2,numOutputs:3,splitSizes:[r.numHeads*r.headSize,y*r.headSize,y*r.headSize]}),[x,k,S]=!i&&!s?e.compute(Du([n],l),{inputs:[n],outputs:[-1,-1,-1]}):[n,i,s],C=Ui(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,x,void 0,0);wi(e,C,Ho(e,k,r),Ho(e,S,r),void 0,void 0,o,u,void 0,r,c,h)}}),Ko,Vu,Wu,Gu,Nd=Q(()=>{er(),Yt(),Nn(),cr(),Ko=(e,t,r,n,i,s,o,u)=>{let c=gr(s),h=c===1?"f32":`vec${c}f`,y=c===1?"vec2f":`mat2x${c}f`,l=i*o,x=[i,o,s/c],k=[i,o,2],S=["rank","type","type"],C=[];C.push(...At(x,k));let J=Z=>{let F=nt("x",t.dataType,3,c),ne=nt("scale",r.dataType,r.dims),ue=nt("bias",n.dataType,n.dims),we=Vt("output",1,3,2),We=[F,ne,ue,we],Be=64;return`
  var<workgroup> workgroup_shared : array<${y}, ${Be}>;
  const workgroup_size = ${Be}u;
  ${Z.declareVariables(...We)}
  ${Z.mainStart(Be)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${h}(0);
    var squared_sum = ${h}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${h}(${F.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${y}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Rn("workgroup_shared[0][0]",c)} / f32(hight * ${c});
      let squared_sum_final = ${Rn("workgroup_shared[0][1]",c)} / f32(hight * ${c});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${u}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${c};${u}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:k,dataType:1}],dispatchGroup:{x:l},programUniforms:C}),getShaderSource:J},{inputs:[t,r,n],outputs:[-1]})[0]},Vu=(e,t,r)=>{let n=t[0].dims,i=n,s=2,o=n[0],u=n[1],c=Fe.sizeFromDimension(n,s),h=gr(c),y=Fe.size(i)/h,l=Ko(e,t[0],t[1],t[2],o,c,u,r.epsilon),x=[o,u,c/h],k=[o,u],S=["type","none"],C=J=>{let Z=nt("x",t[0].dataType,x.length,h),F=nt("scale_shift",1,k.length,2),ne=Vt("output",t[0].dataType,x.length,h),ue=[Z,F,ne];return`
  ${J.registerUniform("output_size","u32").declareVariables(...ue)}
  ${J.mainStart()}
  ${J.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${ne.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${F.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${Z.getByOffset("global_idx")} * ${ne.type.value}(scale_shift.x) + ${ne.type.value}(scale_shift.y);
      ${ne.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${h}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:[{type:12,data:y},...At(x,k,x)]}),getShaderSource:C},{inputs:[t[0],l]})},Wu=(e,t,r)=>{let n=t[0].dims,i=n,s=n[0],o=n[n.length-1],u=Fe.sizeFromDimension(n,1)/o,c=gr(o),h=Fe.size(i)/c,y=[{type:12,data:u},{type:12,data:Math.floor(o/c)}],l=["type","type"],x=[0,n.length-1];for(let J=0;J<n.length-2;J++)x.push(J+1);let k=e.compute(bn(e.inputs[0],x),{inputs:[e.inputs[0]],outputs:[-1]})[0],S=Ko(e,k,t[1],t[2],s,u,o,r.epsilon),C=J=>{let Z=fr(t[0].dataType),F=c===1?"vec2f":`mat${c}x2f`,ne=We=>{let Be=We===0?"x":"y",wt=c===1?"f32":`vec${c}f`;switch(c){case 1:return`${Z}(${wt}(scale.${Be}))`;case 2:return`vec2<${Z}>(${wt}(scale[0].${Be}, scale[1].${Be}))`;case 4:return`vec4<${Z}>(${wt}(scale[0].${Be}, scale[1].${Be}, scale[2].${Be}, scale[3].${Be}))`;default:throw new Error(`Not supported compoents ${c}`)}},ue=nt("input",t[0].dataType,t[0].dims,c),we=Vt("output",t[0].dataType,i,c);return`
  @group(0) @binding(0) var<storage, read> input : array<${ue.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${F}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${we.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${J.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${ne(0)}, ${ne(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${c}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:y}),getShaderSource:C},{inputs:[t[0],S]})},Gu=(e,t)=>{t.format==="NHWC"?Wu(e,e.inputs,t):Vu(e,e.inputs,t)}}),qu,Hu,Ku,jd=Q(()=>{er(),Yt(),cr(),qu=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Hu=(e,t,r)=>{let n=t.simplified,i=e[0].dims,s=e[1],o=!n&&e[2],u=i,c=Fe.normalizeAxis(t.axis,i.length),h=Fe.sizeToDimension(i,c),y=Fe.sizeFromDimension(i,c),l=Fe.size(s.dims),x=o?Fe.size(o.dims):0;if(l!==y||o&&x!==y)throw new Error(`Size of X.shape()[axis:] == ${y}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${l} and bias size of ${x}`);let k=[];for(let we=0;we<i.length;++we)we<c?k.push(i[we]):k.push(1);let S=gr(y),C=["type","type"],J=[{type:12,data:h},{type:1,data:y},{type:12,data:Math.floor(y/S)},{type:1,data:t.epsilon}];o&&C.push("type");let Z=r>1,F=r>2,ne=we=>{let We=fr(e[0].dataType),Be=[nt("x",e[0].dataType,e[0].dims,S),nt("scale",s.dataType,s.dims,S)];o&&Be.push(nt("bias",o.dataType,o.dims,S)),Be.push(Vt("output",e[0].dataType,u,S)),Z&&Be.push(Vt("mean_data_output",1,k)),F&&Be.push(Vt("inv_std_output",1,k));let wt=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${we.registerUniforms(wt).declareVariables(...Be)}
  ${we.mainStart()}
    ${we.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${ri("f32",S)};
    var mean_square_vector = ${ri("f32",S)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Xn(We,S,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Rn("mean_vector",S)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Rn("mean_square_vector",S)} / uniforms.norm_size ${n?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Xn(We,S,"x[j + offset]")};
      let f32scale = ${Xn(We,S,"scale[j]")};
      output[j + offset] = ${Be[0].type.value}((f32input ${n?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${Xn(We,S,"bias[j]")}`:""}
      );
    }

    ${Z?"mean_data_output[global_idx] = mean":""};
    ${F?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},ue=[{dims:u,dataType:e[0].dataType}];return Z&&ue.push({dims:k,dataType:1}),F&&ue.push({dims:k,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${S};${r};${n}`,inputDependencies:C},getRunData:()=>({outputs:ue,dispatchGroup:{x:Math.ceil(h/64)},programUniforms:J}),getShaderSource:ne}},Ku=(e,t)=>{qu(e.inputs),e.compute(Hu(e.inputs,t,e.outputCount))}}),Xu,Ud,Vd,Wd,Gd,Ac=Q(()=>{er(),Yt(),$r(),cr(),Xu=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],n=r.dims.length;if(r.dims[n-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),s=t.blockSize/8*t.bits,o=e[1];if(!Fe.areEqual(o.dims,[t.n,i,s]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let u=e[2].dims;if(Fe.size(u)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let c=e[3].dims,h=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(Fe.size(c)!==h)throw new Error("zeroPoints input size error.")}},Ud=(e,t)=>{let r=e[0].dims,n=r.length,i=r[n-2],s=t.k,o=t.n,u=r.slice(0,n-2),c=Fe.size(u),h=e[1].dims[2]/4,y=e[0].dataType,l=gr(t.k),x=gr(h),k=gr(o),S=u.concat([i,o]),C=i>1&&o/k%2===0?2:1,J=Fe.size(S)/k/C,Z=64,F=[],ne=[c,i,s/l],ue=Fe.convertShape(e[1].dims).slice();ue.splice(-1,1,h/x),F.push(...At(ne)),F.push(...At(ue)),F.push(...At(e[2].dims)),e.length===4&&F.push(...At(Fe.convertShape(e[3].dims)));let we=[c,i,o/k];F.push(...At(we));let We=Be=>{let wt=ne.length,Lt=nt("a",e[0].dataType,wt,l),Dt=nt("b",12,ue.length,x),sr=nt("scales",e[2].dataType,e[2].dims.length),Qt=[Lt,Dt,sr],or=e.length===4?nt("zero_points",12,e[3].dims.length):void 0;or&&Qt.push(or);let Tr=we.length,ir=Vt("output",e[0].dataType,Tr,k),Ht=fr(e[0].dataType),Mr=(()=>{switch(l){case 1:return`array<${Ht}, 8>`;case 2:return`mat4x2<${Ht}>`;case 4:return`mat2x4<${Ht}>`;default:throw new Error(`${l}-component is not supported.`)}})(),br=()=>{let Je=`
          // reuse a data
            var input_offset = ${Lt.indicesToOffset(`${Lt.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Mr};
            for (var j: u32 = 0; j < ${8/l}; j++) {
              a_data[j] = ${Lt.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let Et=0;Et<k*C;Et++)Je+=`
            b_value = ${x===1?`b${Et}_data`:`b${Et}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Mr}(${Array.from({length:4},(pr,Ur)=>`${Ht}(b_value_lower[${Ur}]), ${Ht}(b_value_upper[${Ur}])`).join(", ")});
            b_dequantized_values = ${l===1?`${Mr}(${Array.from({length:8},(pr,Ur)=>`(b_quantized_values[${Ur}] - ${or?`zero_point${Et}`:"zero_point"}) * scale${Et}`).join(", ")});`:`(b_quantized_values - ${Mr}(${Array(8).fill(`${or?`zero_point${Et}`:"zero_point"}`).join(",")})) * scale${Et};`};
            workgroup_shared[local_id.x * ${C} + ${Math.floor(Et/k)}]${k>1?`[${Et%k}]`:""} += ${Array.from({length:8/l},(pr,Ur)=>`${l===1?`a_data[${Ur}] * b_dequantized_values[${Ur}]`:`dot(a_data[${Ur}], b_dequantized_values[${Ur}])`}`).join(" + ")};
          `;return Je},Gt=()=>{let Je=`
            var col_index = col * ${k};
            ${or?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Ht}(8);`}
            `;for(let Et=0;Et<k*C;Et++)Je+=`
            let scale${Et} = ${sr.getByOffset("col_index * nBlocksPerCol + block")};
            ${or?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${or.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${Et} = ${Ht}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return Je},_r=()=>{let Je=`col_index = col * ${k};`;for(let Et=0;Et<k*C;Et++)Je+=`
            let b${Et}_data = ${Dt.getByIndices(`${Dt.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return Je+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Mr};
            var b_dequantized_values: ${Mr};`,Je};return`
        var<workgroup> workgroup_shared: array<${ir.type.value}, ${C*Z}>;
        ${Be.declareVariables(...Qt,ir)}
        ${Be.mainStart([Z,1,1])}
          let output_indices = ${ir.offsetToIndices(`(global_idx / ${Z}) * ${C}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${Z}) {
            //process one block
            var word_offset: u32 = block * ${t.blockSize/l};
            ${Gt()}
            for (var word: u32 = 0; word < ${h}; word += ${x}) {
              ${_r()}
              for (var i: u32 = 0; i < ${x}; i++) {
                ${br()}
                word_offset += ${8/l};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${C}) {
            var output_value: ${ir.type.value} = ${ir.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${Z}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${C};
            }
            ${ir.setByIndices(`${ir.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${l};${x};${k};${C};${Z}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:S,dataType:y}],dispatchGroup:{x:J},programUniforms:F}),getShaderSource:We}},Vd=(e,t)=>{let r=e[0].dims,n=r.length,i=r[n-2],s=t.k,o=t.n,u=r.slice(0,n-2),c=Fe.size(u),h=e[1].dims[2]/4,y=e[0].dataType,l=gr(t.k),x=gr(h),k=u.concat([i,o]),S=128,C=o%8===0?8:o%4===0?4:1,J=S/C,Z=J*x*8,F=Z/l,ne=Z/t.blockSize,ue=Fe.size(k)/C,we=[],We=[c,i,s/l],Be=Fe.convertShape(e[1].dims).slice();Be.splice(-1,1,h/x),we.push(...At(We)),we.push(...At(Be)),we.push(...At(e[2].dims)),e.length===4&&we.push(...At(Fe.convertShape(e[3].dims)));let wt=[c,i,o];we.push(...At(wt));let Lt=Dt=>{let sr=We.length,Qt=nt("a",e[0].dataType,sr,l),or=nt("b",12,Be.length,x),Tr=nt("scales",e[2].dataType,e[2].dims.length),ir=[Qt,or,Tr],Ht=e.length===4?nt("zero_points",12,e[3].dims.length):void 0;Ht&&ir.push(Ht);let Mr=wt.length,br=Vt("output",e[0].dataType,Mr),Gt=fr(e[0].dataType),_r=()=>{switch(l){case 1:return`
          let a_data0 = vec4<${Gt}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${Gt}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${Gt}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${Gt}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${l}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${Qt.type.value}, ${F}>;
        var<workgroup> inter_results: array<array<${br.type.value}, ${J}>, ${C}>;
        ${Dt.declareVariables(...ir,br)}
        ${Dt.mainStart([J,C,1])}
          let output_indices = ${br.offsetToIndices(`workgroup_index * ${C}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${ne} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${F};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${F}; a_offset += ${S})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${Qt.getByIndices(`${Qt.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${Qt.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${ne} + local_id.x;
            ${Ht?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${Ht.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${Gt}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Gt}(8);`}
            let scale = ${Tr.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${or.getByIndices(`${or.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${t.blockSize/l};
            for (var i: u32 = 0; i < ${x}; i++) {
              ${_r()}
              let b_value = ${x===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${Gt}>(${Array.from({length:4},(Je,Et)=>`${Gt}(b_value_lower[${Et}]), ${Gt}(b_value_upper[${Et}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${Gt}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(Je,Et)=>`${`dot(a_data${Et}, b_dequantized_values[${Et}])`}`).join(" + ")};
              word_offset += ${8/l};
            }
            workgroupBarrier();
          }

          if (local_idx < ${C}) {
            var output_value: ${br.type.value} = ${br.type.value}(0);
            for (var b = 0u; b < ${J}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${br.setByIndices(`${br.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${l};${x};${J};${C}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:k,dataType:y}],dispatchGroup:{x:ue},programUniforms:we}),getShaderSource:Lt}},Wd=(e,t)=>{Xu(e.inputs,t),t.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Vd(e.inputs,t)):e.compute(Ud(e.inputs,t))},Gd=e=>dr(e)}),qd,Hd,Kd,Xd,Qd,Yd,Zd,Jd,ec,Ic=Q(()=>{er(),Yt(),cr(),qd=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Hd=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
            k = i32(${e.indicesGet("indices",i)}) - ${Ut("uniforms.pads",i,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${Ut("uniforms.x_shape",i,t)})) {
              break;
            }
            offset += k * i32(${Ut("uniforms.x_strides",i,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${n}
            value = x[offset];
          }
      `},Kd=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${Ut("uniforms.pads",i,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${Ut("uniforms.x_shape",i,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${Ut("uniforms.x_shape",i,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${Ut("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Xd=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${Ut("uniforms.pads",i,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${Ut("uniforms.x_shape",i,t)})) {
                  k = i32(${Ut("uniforms.x_shape",i,t)}) - 1;
                }
                offset += k * i32(${Ut("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Qd=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${Ut("uniforms.pads",i,r)};
                if (k < 0)  {
                  k += i32(${Ut("uniforms.x_shape",i,t)}]);
                }
                if (k >= i32(${Ut("uniforms.x_shape",i,t)})) {
                  k -= i32(${Ut("uniforms.x_shape",i,t)});
                }
                offset += k * i32(${Ut("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Yd=(e,t,r)=>{switch(r.mode){case 0:return Hd(e,t,r.pads.length);case 1:return Kd(e,t,r.pads.length);case 2:return Xd(e,t,r.pads.length);case 3:return Qd(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Zd=(e,t)=>{let r=Fe.padShape(e[0].dims.slice(),t.pads),n=e[0].dims,i=Fe.size(r),s=[{type:12,data:i},{type:6,data:t.pads}],o=e.length>=3&&e[2].data;t.mode===0&&s.push({type:o?e[2].dataType:1,data:t.value}),s.push(...At(e[0].dims,r));let u=["rank"],c=h=>{let y=Vt("output",e[0].dataType,r.length),l=nt("x",e[0].dataType,n.length),x=l.type.value,k=Yd(y,n.length,t),S=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&S.push({name:"constant_value",type:o?x:"f32"}),`
            ${h.registerUniforms(S).declareVariables(l,y)}
            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${y.offsetToIndices("global_idx")};

            var value = ${x}(0);
            ${k}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}${o}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Fe.size(r)/64)},programUniforms:s}),getShaderSource:c}},Jd=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),n=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,i=e[0].dims.length,s=new Int32Array(2*i).fill(0);if(e.length>=4){let u=e[3].getBigInt64Array();for(let c=0;c<u.length;c++)s[Number(u[c])]=Number(r[c]),s[Number(u[c])+i]=Number(r[c+u.length])}else r.forEach((u,c)=>s[Number(c)]=Number(u));let o=[];return s.forEach(u=>o.push(u)),{mode:t.mode,value:n,pads:o}}else return t},ec=(e,t)=>{qd(e.inputs);let r=Jd(e.inputs,t);e.compute(Zd(e.inputs,r),{inputs:[0]})}}),fs,Qu,Yu,Zu,Ju,tc,rc,ed,td,nc,ic,rd,sc,oc,nd,lr,id,tn,an,mn=Q(()=>{Kt(),er(),Yt(),cr(),fs=e=>{if(T.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Qu=(e,t,r)=>{let n=t.format==="NHWC",i=e.dims.slice();n&&i.splice(1,0,i.pop());let s=Object.hasOwnProperty.call(t,"dilations"),o=t.kernelShape.slice(),u=t.strides.slice(),c=s?t.dilations.slice():[],h=t.pads.slice();Yr.adjustPoolAttributes(r,i,o,u,c,h);let y=Yr.computePoolOutputShape(r,i,u,c,o,h,t.autoPad),l=Object.assign({},t);s?Object.assign(l,{kernelShape:o,strides:u,pads:h,dilations:c,cacheKey:t.cacheKey}):Object.assign(l,{kernelShape:o,strides:u,pads:h,cacheKey:t.cacheKey});let x=y.slice();return x.push(x.splice(1,1)[0]),[l,n?x:y]},Yu=(e,t)=>{let r=t.format==="NHWC",n=Fe.size(e),i=Fe.size(t.kernelShape),s=[{type:12,data:n},{type:12,data:i}],o=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let u=t.kernelShape[t.kernelShape.length-1],c=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],y=t.pads[t.pads.length-1],l=!!(h+y);s.push({type:12,data:u},{type:12,data:c},{type:12,data:h},{type:12,data:y}),o.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let x=!1;if(t.kernelShape.length===2){let k=t.kernelShape[t.kernelShape.length-2],S=t.strides[t.strides.length-2],C=t.pads[t.pads.length/2-2],J=t.pads[t.pads.length-2];x=!!(C+J),s.push({type:12,data:k},{type:12,data:S},{type:12,data:C},{type:12,data:J}),o.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,o,!0,l,x]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let u=Fe.computeStrides(t.kernelShape);s.push({type:12,data:u},{type:12,data:t.pads},{type:12,data:t.strides}),o.push({name:"kernelStrides",type:"u32",length:u.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let c=t.pads.reduce((h,y)=>h+y);return[s,o,!!c,!1,!1]}},Zu=(e,t,r,n,i,s,o,u,c,h,y,l)=>{let x=i.format==="NHWC",k=t.type.value,S=Vt("output",t.type.tensor,n);if(i.kernelShape.length<=2){let C="",J="",Z="",F=r-(x?2:1);if(y?C=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${F}] = indices[${F}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${F}] < 0 || xIndices[${F}]
                      >= uniforms.x_shape[${F}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`:C=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${F}] = indices[${F}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`,i.kernelShape.length===2){let ne=r-(x?3:2);l?J=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${ne}] = indices[${ne}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${ne}] < 0 || xIndices[${ne}] >= uniforms.x_shape[${ne}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:J=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${ne}] = indices[${ne}] * uniforms.sh - uniforms.phStart + j;
                `,Z=`
              }
            `}return`
            ${e.registerUniforms(c).declareVariables(t,S)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${S.offsetToIndices("global_idx")};
              var xIndices = ${S.offsetToIndices("global_idx")};

              var value = ${k}(${u});
              var pad = 0;
              ${J}
              ${C}
              ${Z}
              ${o}

              output[global_idx] = value;
            }`}else{if(x)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let C=i.kernelShape.length,J=i.pads.length,Z="";return h?Z=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${s}
              }`:Z=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${s}
            `,`
            ${e.registerUniforms(c).declareVariables(t,S)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${S.offsetToIndices("global_idx")};
              var xIndices = ${S.offsetToIndices("global_idx")};

              var offsets: array<u32, ${C}>;

              var value = ${k}(${u});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${C-1}u; j++) {
                  offsets[j] = offset / ${Ut("uniforms.kernelStrides","j",C)};
                  offset -= offsets[j] * ${Ut("uniforms.kernelStrides","j",C)};
                }
                offsets[${C-1}] = offset;

                isPad = false;
                for (var j = ${r-C}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${Ut("uniforms.strides",`j - ${r-C}u`,C)}
                    + offsets[j - ${r-C}u] - ${Ut("uniforms.pads","j - 2u",J)};
                  ${Z}
              }
              ${o}

              output[global_idx] = value;
            }`}},Ju=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,tc=e=>`${Ju(e)};${e.countIncludePad}`,rc=e=>`${Ju(e)};${e.storageOrder};${e.dilations}`,ed=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),td=(e,t,r,n)=>{let[i,s]=Qu(t,n,r),o=nt("x",t.dataType,t.dims.length),u=o.type.value,c="value += x_val;",h="";i.countIncludePad?h+=`value /= ${u}(uniforms.kernelSize);`:h+=`value /= ${u}(i32(uniforms.kernelSize) - pad);`;let[y,l,x,k,S]=Yu(s,i);y.push(...At(t.dims,s));let C=["rank"];return{name:e,shaderCache:{hint:`${n.cacheKey};${x};${k};${S}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Fe.size(s)/64)},programUniforms:y}),getShaderSource:J=>Zu(J,o,t.dims.length,s.length,i,c,h,0,l,x,k,S)}},nc=e=>{let t=e.count_include_pad!==0,r=ed(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let n={countIncludePad:t,...r,cacheKey:""};return{...n,cacheKey:tc(n)}},ic=(e,t)=>{fs(e.inputs),e.compute(td("AveragePool",e.inputs[0],!1,t))},rd={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},sc=e=>{let t=e.format;return{format:t,...rd,cacheKey:t}},oc=(e,t)=>{fs(e.inputs),e.compute(td("GlobalAveragePool",e.inputs[0],!0,t))},nd=(e,t,r,n)=>{let[i,s]=Qu(t,n,r),o=`
      value = max(x_val, value);
    `,u="",c=nt("x",t.dataType,t.dims.length),h=["rank"],[y,l,x,k,S]=Yu(s,i);return y.push(...At(t.dims,s)),{name:e,shaderCache:{hint:`${n.cacheKey};${x};${k};${S}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Fe.size(s)/64)},programUniforms:y}),getShaderSource:C=>Zu(C,c,t.dims.length,s.length,i,o,u,t.dataType===10?-65504:-1e5,l,x,k,S)}},lr=(e,t)=>{fs(e.inputs),e.compute(nd("MaxPool",e.inputs[0],!1,t))},id=e=>{let t=e.storage_order,r=e.dilations,n=ed(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...n,cacheKey:""};return{...i,cacheKey:rc(i)}},tn=e=>{let t=e.format;return{format:t,...rd,cacheKey:t}},an=(e,t)=>{fs(e.inputs),e.compute(nd("GlobalMaxPool",e.inputs[0],!0,t))}}),ii,ac,sd,od,g=Q(()=>{er(),Yt(),$r(),cr(),ii=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((r,n)=>r===e[2].dims[n]).reduce((r,n)=>r&&n,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((i,s)=>s===t.axis||i===e[0].dims[s]).reduce((i,s)=>i&&s,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let r=e[0].dims[t.axis],n=e[1].dims[t.axis];if(t.blockSize<Math.ceil(r/n)||t.blockSize>Math.ceil(r/(n-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},ac=(e,t)=>{let r=Fe.normalizeAxis(t.axis,e[0].dims.length),n=e[0].dataType,i=n===3,s=e[0].dims,o=e[1].dataType,u=Fe.size(s),c=n===3||n===2,h=c?[Math.ceil(Fe.size(e[0].dims)/4)]:e[0].dims,y=e[1].dims,l=e.length>2?e[2]:void 0,x=l?c?[Math.ceil(Fe.size(l.dims)/4)]:l.dims:void 0,k=y.length===0||y.length===1&&y[0]===1,S=k===!1&&y.length===1,C=gr(u),J=k&&(!c||C===4),Z=J?C:1,F=J&&!c?C:1,ne=nt("input",c?12:n,h.length,F),ue=nt("scale",o,y.length),we=l?nt("zero_point",c?12:n,x.length):void 0,We=Vt("output",o,s.length,Z),Be=[ne,ue];we&&Be.push(we);let wt=[h,y];l&&wt.push(x);let Lt=[{type:12,data:u/Z},{type:12,data:r},{type:12,data:t.blockSize},...At(...wt,s)],Dt=sr=>{let Qt=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${sr.registerUniforms(Qt).declareVariables(...Be,We)}
      ${sr.mainStart()}
          ${sr.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${We.offsetToIndices("global_idx")};

          // Set input x
          ${c?`
            let input = ${ne.getByOffset("global_idx / 4")};
            let x_vec = ${i?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${Z===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${ne.getByOffset("global_idx")};`};

          // Set scale input
          ${k?`let scale_value= ${ue.getByOffset("0")}`:S?`
            let scale_index = ${We.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${ue.getByOffset("scale_index")};`:`
            var scale_indices: ${ue.type.indices} = output_indices;
            let index = ${ue.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${ue.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${ue.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${we?k?c?`
                let zero_point_input = ${we.getByOffset("0")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${we.getByOffset("0")}`:S?c?`
                let zero_point_index = ${We.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${we.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${We.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${we.getByOffset("zero_point_index")};`:c?`
                let zero_point_offset = ${ue.indicesToOffset("scale_indices")};
                let zero_point_input = ${we.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${we.getByIndices("scale_indices")};`:`let zero_point_value = ${c?i?"i32":"u32":ne.type.value}(0);`};
      // Compute and write output
      ${We.setByOffset("global_idx",`${We.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:we?["rank","rank","rank"]:["rank","rank"]},getShaderSource:Dt,getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(u/Z/64),y:1,z:1},programUniforms:Lt})}},sd=(e,t)=>{ii(e.inputs,t),e.compute(ac(e.inputs,t))},od=e=>dr({axis:e.axis,blockSize:e.blockSize})}),w,se,Le,qe=Q(()=>{Kt(),er(),cr(),w=(e,t,r)=>{let n=e===t,i=e<t&&r<0,s=e>t&&r>0;if(n||i||s)throw new Error("Range these inputs' contents are invalid.")},se=(e,t,r,n)=>{let i=Math.abs(Math.ceil((t-e)/r)),s=[i],o=i,u=[{type:12,data:o},{type:n,data:e},{type:n,data:r},...At(s)],c=h=>{let y=Vt("output",n,s.length),l=y.type.value,x=[{name:"outputSize",type:"u32"},{name:"start",type:l},{name:"delta",type:l}];return`
        ${h.registerUniforms(x).declareVariables(y)}
        ${h.mainStart()}
        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${l}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${n}`},getShaderSource:c,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:u})}},Le=e=>{let t=0,r=0,n=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],n=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],n=e.inputs[2].getFloat32Array()[0]),T.webgpu.validateInputContent&&w(t,r,n),e.compute(se(t,r,n,e.inputs[0].dataType),{inputs:[]})}}),it,It,Pt,Xt,mr,Nr,Or,xr,Jt,en,wr,yr,jr,ln,Vr,rn,pn,Zr,nn,Xo=Q(()=>{er(),Yt(),$r(),cr(),it=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},It=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let n=new Array(r).fill(1);return t.forEach((i,s)=>n[i]=e[s]),n},Pt=(e,t,r,n,i,s)=>{let[o,u,c]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach(y=>s.push(y));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(u>0&&e.length>u&&e[u].dims.length===1&&e[u].dims[0]>0){if(e[u].getFloat32Array().forEach(y=>n.push(y)),n.length!==0&&n.length!==h&&r>=18&&n.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");it(n,t),t.axes.length>0&&It(n,t.axes,h).forEach((y,l)=>n[l]=y)}if(c>0&&e.length>c&&e[c].dims.length===1&&e[c].dims[0]>0&&(e[c].getBigInt64Array().forEach(y=>i.push(Number(y))),i.length!==0&&i.length!==h&&r>=18&&i.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(n.length!==0&&n.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==0&&i.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof n<"u"&&typeof i<"u"&&n.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Xt=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",mr=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Nr=(e,t,r)=>{let n=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?n:e.slice();return t.length>0?(t.forEach((s,o)=>{n[s]=i[o],n[o+r]=i[t.length+o]}),n):i},Or=(e,t,r,n)=>{let i=[];if(r.length>0)if(n.length>0){if(e.forEach(s=>i.push(s)),Math.max(...n)>e.length)throw new Error("axes is out of bound");n.forEach((s,o)=>i[s]=r[o])}else r.forEach(s=>i.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((s,o)=>Math.round(s*t[o]))}return i},xr=(e,t,r)=>{let n=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(s=>t[s]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(s=>t[s]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(s=>t[s]=n),r.axes.forEach(s=>i[s]=Math.round(e[s]*t[s]))):(t.fill(n,0,t.length),i.forEach((s,o)=>i[o]=Math.round(s*t[o]))),i},Jt=(e,t,r,n,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${Ut("uniforms.scales","i",n)};
        var roi_low = ${Ut("uniforms.roi","i",i)};
        var roi_hi = ${Ut("uniforms.roi",`i + ${t.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${Ut("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${Ut("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,en=(e,t,r,n,i,s,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${Ut("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${Ut("uniforms.roi","i",s)};
          var roi_hi = ${Ut("uniforms.roi",`i + ${r.length}`,s)};
          var input_shape_i = ${Ut("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${Ut("uniforms.output_shape","i",n.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,wr=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${Ut("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,yr=(e,t,r,n)=>e.rank>n?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",jr=(e,t,r,n,i)=>{let[s,o,u,c]=r.length===2?[-1,0,1,-1]:[0,2,3,1],h=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${h} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(row, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(col, ${r[u]} - 1))`)};
      ${yr(e,c,s,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${h} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${h} = originalIndices[${o}];
      var col:${h} = originalIndices[${u}];
      ${n?`if (row < 0 || row > (${r[o]} - 1) || col < 0 || col > (${r[u]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${r[o]} - 1));
      col = max(0, min(col, ${r[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${c}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${h} = getInputValue(batch, channel, row1, col1);
      var x12: ${h} = getInputValue(batch, channel, row1, col2);
      var x21: ${h} = getInputValue(batch, channel, row2, col1);
      var x22: ${h} = getInputValue(batch, channel, row2, col2);
      var dx1: ${h} = abs(row - ${h}(row1));
      var dx2: ${h} = abs(${h}(row2) - row);
      var dy1: ${h} = abs(col - ${h}(col1));
      var dy2: ${h} = abs(${h}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},ln=(e,t,r,n,i,s,o,u,c,h)=>{let y=r.length===2,[l,x]=y?[0,1]:[2,3],k=e.type.value,S=C=>{let J=C===l?"row":"col";return`
      fn ${J}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${k} {
        var output_index = ${t.indicesGet("output_indices",C)};
        var originalIdx: ${k} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[C]},
        ${n[C]}, ${r[C]}, ${s[C]}, ${s[C]} + ${r.length});
        var fractOriginalIdx: ${k} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${u} && (originalIdx < 0 || originalIdx > (${r[C]} - 1))) {
          return ${c};
        }
        var data: array<${k}, 4> = array<${k}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${J}: ${k} = originalIdx + ${k}(i);
          if (${J} < 0 || ${J} >= ${r[C]}) {
            ${h?`coefs[i + 1] = 0.0;
                        continue;`:u?`return ${c};`:`${J} = max(0, min(${J}, ${r[C]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",C,`u32(${J})`)};
          data[i + 1] = ${C===l?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${S(l)};
    ${S(x)};
  fn getCubicInterpolationCoefs(s: ${k}) -> array<${k}, 4> {
    var absS = abs(s);
    var coeffs: array<${k}, 4> = array<${k}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${k} = 1.0 - absS;
    var twoMinusAbsS: ${k} = 2.0 - absS;
    var onePlusAbsS: ${k} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${k}, 4>, coefs: array<${k}, 4>) -> ${k} {
    var coefsSum: ${k} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${k} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Vr=(e,t,r,n,i)=>{let[s,o,u,c,h]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(depth, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(height, ${r[u]} - 1))`)};
      ${e.indicesSet("input_indices",c,`max(0, min(width, ${r[c]} - 1))`)};
      ${yr(e,h,s,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${y} = originalIndices[${o}];
      var height:${y} = originalIndices[${u}];
      var width:${y} = originalIndices[${c}];
      ${n?`if (depth < 0 || depth > (${r[o]} - 1) || height < 0 || height > (${r[u]} - 1) || width < 0 || (width > ${r[c]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${r[o]} - 1));
      height = max(0, min(height, ${r[u]} - 1));
      width = max(0, min(width, ${r[c]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${h}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${y} = abs(depth - ${y}(depth1));
      var dx2: ${y} = abs(${y}(depth2) - depth);
      var dy1: ${y} = abs(height - ${y}(height1));
      var dy2: ${y} = abs(${y}(height2) - height);
      var dz1: ${y} = abs(width - ${y}(width1));
      var dz2: ${y} = abs(${y}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},rn=(e,t,r,n,i,s)=>{let o=e.dims,u=Nr(s,t.axes,o.length),c=Or(o,n,i,t.axes),h=n.slice();n.length===0&&(h=o.map((F,ne)=>F===0?1:c[ne]/F),t.keepAspectRatioPolicy!=="stretch"&&(c=xr(o,h,t)));let y=Vt("output",e.dataType,c.length),l=nt("input",e.dataType,o.length),x=Fe.size(c),k=o.length===c.length&&o.every((F,ne)=>F===c[ne]),S=t.coordinateTransformMode==="tf_crop_and_resize",C=t.extrapolationValue,J=l.type.value,Z=F=>`
      ${k?"":`
      ${Xt(t.coordinateTransformMode,J)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${wr(l,o)};
              ${mr(t.nearestMode,r,J)};
              ${en(l,y,o,c,h.length,u.length,S)};
              `;case"linear":return`
              ${Jt(y,o,c,h.length,u.length)};
              ${(()=>{if(o.length===2||o.length===4)return`${jr(l,y,o,S,C)}`;if(o.length===3||o.length===5)return`${Vr(l,y,o,S,C)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(o.length===2||o.length===4)return`${ln(l,y,o,c,h,u,t.cubicCoeffA,S,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${F.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",u.length).declareVariables(l,y)}
      ${F.mainStart()}
        ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${k?"output[global_idx] = input[global_idx];":`
        let output_indices = ${y.offsetToIndices("global_idx")};
        var input_indices: ${l.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${l.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${o.length===2||o.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${u.length>0?u:""}|${k}|${o}`,inputDependencies:["rank"]},getShaderSource:Z,getRunData:()=>({outputs:[{dims:c,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(x/64)},programUniforms:[{type:12,data:x},{type:1,data:h},{type:1,data:u},...At(o,c)]})}},pn=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Zr=(e,t)=>{let r=[],n=[],i=[],s=pn(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Pt(e.inputs,t,s,r,n,i),e.compute(rn(e.inputs[0],t,s,r,n,i),{inputs:[0]})},nn=e=>{let t=e.antialias,r=e.axes,n=e.coordinateTransformMode,i=e.cubicCoeffA,s=e.excludeOutside!==0,o=e.extrapolationValue,u=e.keepAspectRatioPolicy,c=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return dr({antialias:t,axes:r,coordinateTransformMode:n,cubicCoeffA:i,excludeOutside:s,extrapolationValue:o,keepAspectRatioPolicy:u,mode:c,nearestMode:h})}}),Vi,Fc,On,Wi=Q(()=>{er(),Yt(),$r(),cr(),Vi=(e,t)=>{let[r,n,i,s]=e,{numHeads:o,rotaryEmbeddingDim:u}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!Fe.areEqual(n.dims,[])&&!Fe.areEqual(n.dims,[1])&&n.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${n.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(s.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(!Fe.areEqual(i.dims,s.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(u>0&&o===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let c=r.dims[0],h=r.dims[r.dims.length-2],y=i.dims[0],l=Fe.sizeFromDimension(r.dims,1)/h,x=u===0?i.dims[1]*2:l/o;if(u>x)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(n.dims.length===2){if(c!==n.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${n.dims[0]}`);if(h!==n.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${n.dims[1]}`)}if(x/2!==i.dims[1]&&u/2!==i.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(h>y)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Fc=(e,t)=>{let{interleaved:r,numHeads:n,rotaryEmbeddingDim:i,scale:s}=t,o=e[0].dims[0],u=Fe.sizeFromDimension(e[0].dims,1),c=e[0].dims[e[0].dims.length-2],h=u/c,y=e[2].dims[1],l=i===0?y*2:h/n,x=new Array(o,c,h/l,l-y),k=Fe.computeStrides(x),S=[{type:1,data:s},{type:12,data:x},{type:12,data:k},...e[0].dims.length===3?new Array({type:12,data:[u,h,l,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[u,l,c*l,1]}):[],...At(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],C=J=>{let Z=nt("input",e[0].dataType,e[0].dims.length),F=nt("position_ids",e[1].dataType,e[1].dims.length),ne=nt("cos_cache",e[2].dataType,e[2].dims.length),ue=nt("sin_cache",e[3].dataType,e[3].dims.length),we=Vt("output",e[0].dataType,e[0].dims.length);return J.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:x.length},{name:"global_strides",type:"u32",length:k.length},{name:"input_output_strides",type:"u32",length:k.length}]),`
        ${J.declareVariables(Z,F,ne,ue,we)}

        ${J.mainStart(dn)}
          let half_rotary_emb_dim = uniforms.${ne.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${J.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${F.broadcastedIndicesToOffset("bsnh.xy",Vt("",F.type.tensor,2))};
            let position_id =
                u32(${F.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});
            let j = i + select(half_rotary_emb_dim, 1, ${r});
            let re = ${Z.getByOffset("i")} * ${ne.get("position_id","bsnh[3]")} -
                ${Z.getByOffset("j")} * ${ue.get("position_id","bsnh[3]")};
            ${we.setByOffset("i","re")}
            let im = ${Z.getByOffset("i")} * ${ue.get("position_id","bsnh[3]")} +
                ${Z.getByOffset("j")} * ${ne.get("position_id","bsnh[3]")};
            ${we.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${we.setByOffset("k",Z.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:dr({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:C,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Fe.size(x)/dn)},programUniforms:S})}},On=(e,t)=>{Vi(e.inputs,t),e.compute(Fc(e.inputs,t))}}),lc,uc,dc,cc=Q(()=>{er(),Yt(),cr(),lc=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],n=e[2];if(t.dataType!==r.dataType||t.dataType!==n.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(n.dims.length!==1)throw new Error("Gamma must be 1D");if(n.dims[n.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let o=e[3];if(o.dims.length!==1)throw new Error("Beta must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let o=e[4];if(o.dims.length!==1)throw new Error("Bias must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},uc=(e,t,r,n)=>{let i=t.simplified,s=e[0].dims,o=Fe.size(s),u=s,c=o,h=s.slice(-1)[0],y=n?s.slice(0,-1).concat(1):[],l=!i&&e.length>3,x=e.length>4,k=n&&r>1,S=n&&r>2,C=r>3,J=64,Z=gr(h),F=[{type:12,data:c},{type:12,data:Z},{type:12,data:h},{type:1,data:t.epsilon}],ne=we=>{let We=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],Be=[nt("x",e[0].dataType,e[0].dims,Z),nt("skip",e[1].dataType,e[1].dims,Z),nt("gamma",e[2].dataType,e[2].dims,Z)];l&&Be.push(nt("beta",e[3].dataType,e[3].dims,Z)),x&&Be.push(nt("bias",e[4].dataType,e[4].dims,Z)),Be.push(Vt("output",e[0].dataType,u,Z)),k&&Be.push(Vt("mean_output",1,y)),S&&Be.push(Vt("inv_std_output",1,y)),C&&Be.push(Vt("input_skip_bias_sum",e[0].dataType,u,Z));let wt=fr(e[0].dataType),Lt=fr(1,Z);return`

      ${we.registerUniforms(We).declareVariables(...Be)}
      var<workgroup> sum_shared : array<${Lt}, ${J}>;
      var<workgroup> sum_squared_shared : array<${Lt}, ${J}>;

      ${we.mainStart([J,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${J};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${J};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${J-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${x?"bias[offset1d + i]":wt+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${C?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Xn(wt,Z,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${J};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Rn("sum",Z)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Rn("square_sum",Z)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);
        ${k?"mean_output[global_idx] = mean;":""}
        ${S?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${i?"":`- ${wt}(mean)`}) *
            ${wt}(inv_std_dev) * gamma[offset1d + i]
            ${l?"+ beta[offset1d + i]":""};
        }
      }`},ue=[{dims:u,dataType:e[0].dataType}];return r>1&&ue.push({dims:y,dataType:1}),r>2&&ue.push({dims:y,dataType:1}),r>3&&ue.push({dims:s,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${Z};${k};${S};${C}`,inputDependencies:e.map((we,We)=>"type")},getShaderSource:ne,getRunData:()=>({outputs:ue,dispatchGroup:{x:Math.ceil(c/h)},programUniforms:F})}},dc=(e,t)=>{lc(e.inputs);let r=[0];e.outputCount>1&&r.push(-3),e.outputCount>2&&r.push(-3),e.outputCount>3&&r.push(3),e.compute(uc(e.inputs,t,e.outputCount,!1),{outputs:r})}}),Cp,ad,$p,Oc,Sp,kp,Pp,Ap,Xf=Q(()=>{er(),Yt(),$r(),cr(),Cp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,n)=>{if(e[n+1].dataType!==6&&e[n+1].dataType!==7)throw new Error(`Input ${n} must be an array of int32 or int64`)})},ad=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(n=>r.push(Number(n)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(n=>r.push(Number(n)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},$p=(e,t)=>{if(e.length>1){let r=ad(e,1),n=ad(e,2),i=ad(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),dr({starts:r,ends:n,axes:i})}else return t},Oc=(e,t,r,n,i)=>{let s=e;return e<0&&(s+=r[n[t]]),i[t]<0?Math.max(0,Math.min(s,r[n[t]]-1)):Math.max(0,Math.min(s,r[n[t]]))},Sp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${Ut("uniforms.input_shape","i",r.length)};
            let steps_i = ${Ut("uniforms.steps","i",r.length)};
            let signs_i = ${Ut("uniforms.signs","i",r.length)};
            let starts_i = ${Ut("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,kp=(e,t)=>{let r=e[0].dims,n=Fe.size(r),i=t.axes.length>0?Fe.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=ad(e,4);s.forEach(Z=>Z!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(i.length).fill(1));let o=t.starts.map((Z,F)=>Oc(Z,F,r,i,s)),u=t.ends.map((Z,F)=>Oc(Z,F,r,i,s));if(i.length!==o.length||i.length!==u.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let Z=0;Z<r.length;++Z)i.includes(Z)||(o.splice(Z,0,0),u.splice(Z,0,r[Z]),s.splice(Z,0,1));let c=s.map(Z=>Math.sign(Z));s.forEach((Z,F,ne)=>{if(Z<0){let ue=(u[F]-o[F])/Z,we=o[F],We=we+ue*s[F];o[F]=We,u[F]=we,ne[F]=-Z}});let h=r.slice(0);i.forEach((Z,F)=>{h[Z]=Math.ceil((u[Z]-o[Z])/s[Z])});let y={dims:h,dataType:e[0].dataType},l=Vt("output",e[0].dataType,h.length),x=nt("input",e[0].dataType,e[0].dims.length),k=Fe.size(h),S=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:c.length},{name:"steps",type:"u32",length:s.length}],C=[{type:12,data:k},{type:12,data:o},{type:6,data:c},{type:12,data:s},...At(e[0].dims,h)],J=Z=>`
      ${Z.registerUniforms(S).declareVariables(x,l)}
        ${Sp(x,l,r)}
        ${Z.mainStart()}
          ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${l.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${l.setByOffset("global_idx",x.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${c.length}_${o.length}_${s.length}`,inputDependencies:["rank"]},getShaderSource:J,getRunData:()=>({outputs:[y],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:C})}},Pp=(e,t)=>{Cp(e.inputs,t);let r=$p(e.inputs,t);e.compute(kp(e.inputs,r),{inputs:[0]})},Ap=e=>{let t=e.starts,r=e.ends,n=e.axes;return dr({starts:t,ends:r,axes:n})}}),Ip,Fp,Op,Bp,Qf=Q(()=>{er(),Yt(),$r(),Nn(),cr(),Ip=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Fp=(e,t)=>{let r=e.inputs[0],n=r.dims,i=Fe.size(n),s=64,o=n.length,u=Fe.normalizeAxis(t.axis,o),c=u<n.length-1,h,y=[];c?(y=Array.from({length:o},(Be,wt)=>wt),y[u]=o-1,y[o-1]=u,h=e.compute(bn(r,y),{inputs:[r],outputs:[-1]})[0]):h=r;let l=h.dims,x=l[o-1],k=i/x,S=gr(x),C=x/S,J=(Be,wt)=>wt===4?`max(max(${Be}.x, ${Be}.y), max(${Be}.z, ${Be}.w))`:wt===2?`max(${Be}.x, ${Be}.y)`:wt===3?`max(max(${Be}.x, ${Be}.y), ${Be}.z)`:Be,Z=nt("x",h.dataType,h.dims,S),F=Vt("result",h.dataType,h.dims,S),ne=Z.type.value,ue=fr(h.dataType)==="f32"?`var threadMax = ${ne}(-3.402823e+38f);`:`var threadMax = ${ne}(-65504.0h);`,we=Be=>`
      var<workgroup> rowMaxShared : ${ne};
      var<workgroup> rowSumShared : ${ne};
      var<workgroup> threadShared : array<${ne}, ${s}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${ne} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${ne}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${Be.registerUniform("packedCols","i32").declareVariables(Z,F)}
      ${Be.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${s};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${ue}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${ne}(${J("threadShared[0]",S)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${ne}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${ne}(${Rn("threadShared[0]",S)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,We=e.compute({name:"Softmax",shaderCache:{hint:`${S}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:l,dataType:h.dataType}],dispatchGroup:{x:k},programUniforms:[{type:6,data:C}]}),getShaderSource:we},{inputs:[h],outputs:[c?-1:0]})[0];c&&e.compute(bn(We,y),{inputs:[We]})},Op=(e,t)=>{Ip(e.inputs),Fp(e,t)},Bp=e=>dr({axis:e.axis})}),Bc,zp,Dp,Lp,Rp,Yf=Q(()=>{er(),Yt(),cr(),Bc=e=>Array.from(e.getBigInt64Array(),Number),zp=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Bc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Dp=(e,t)=>{let r=[];for(let n=0;n<e.length;++n)r.push(e[n]*t[n]);return r},Lp=(e,t)=>{let r=e[0].dims,n=t??Bc(e[1]),i=Dp(r,n),s=Fe.size(i),o=e[0].dataType,u=nt("input",o,r.length),c=Vt("output",o,i.length),h=y=>`
      const inputShape = ${u.indices(...r)};
      ${y.registerUniform("output_size","u32").declareVariables(u,c)}
      ${y.mainStart()}
      ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${c.offsetToIndices("global_idx")};
      var input_indices: ${u.type.indices};
      for (var i = 0; i < ${r.length}; i++) {
        let input_dim_i = ${u.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;

        ${u.indicesSet("input_indices","i","input_dim_value")}
      }
      ${c.setByOffset("global_idx",u.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},...At(e[0].dims,i)]}),getShaderSource:h}},Rp=e=>{zp(e.inputs),e.compute(Lp(e.inputs),{inputs:[0]})}}),Np,jp,Up,Zf=Q(()=>{er(),Yt(),cr(),Np=(e,t,r,n,i)=>{let s=Vt("output_data",i,r.length,4),o=nt("a_data",t[1].dataType,t[1].dims.length,4),u=nt("b_data",t[2].dataType,t[2].dims.length,4),c=nt("c_data",t[0].dataType,t[0].dims.length,4),h,y=(l,x,k)=>`select(${x}, ${l}, ${k})`;if(!n)h=s.setByOffset("global_idx",y(o.getByOffset("global_idx"),u.getByOffset("global_idx"),c.getByOffset("global_idx")));else{let l=(x,k,S="")=>{let C=`a_data[index_a${k}][component_a${k}]`,J=`b_data[index_b${k}][component_b${k}]`,Z=`bool(c_data[index_c${k}] & (0xffu << (component_c${k} * 8)))`;return`
            let output_indices${k} = ${s.offsetToIndices(`global_idx * 4u + ${k}u`)};
            let offset_a${k} = ${o.broadcastedIndicesToOffset(`output_indices${k}`,s)};
            let offset_b${k} = ${u.broadcastedIndicesToOffset(`output_indices${k}`,s)};
            let offset_c${k} = ${c.broadcastedIndicesToOffset(`output_indices${k}`,s)};
            let index_a${k} = offset_a${k} / 4u;
            let index_b${k} = offset_b${k} / 4u;
            let index_c${k} = offset_c${k} / 4u;
            let component_a${k} = offset_a${k} % 4u;
            let component_b${k} = offset_b${k} % 4u;
            let component_c${k} = offset_c${k} % 4u;
            ${x}[${k}] = ${S}(${y(C,J,Z)});
          `};i===9?h=`
            var data = vec4<u32>(0);
            ${l("data",0,"u32")}
            ${l("data",1,"u32")}
            ${l("data",2,"u32")}
            ${l("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`
            ${l("output_data[global_idx]",0)}
            ${l("output_data[global_idx]",1)}
            ${l("output_data[global_idx]",2)}
            ${l("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(c,o,u,s)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${h}
      }`},jp=e=>{let t=e[1].dims,r=e[2].dims,n=e[0].dims,i=e[1].dataType,s=!(Fe.areEqual(t,r)&&Fe.areEqual(r,n)),o=t,u=Fe.size(t);if(s){let h=$n.calcShape($n.calcShape(t,r,!1),n,!1);if(!h)throw new Error("Can't perform where op on the given tensors");o=h,u=Fe.size(o)}let c=Math.ceil(u/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>Np(h,e,o,s,i),getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:c},...At(n,t,r,o)]})}},Up=e=>{e.compute(jp(e.inputs))}}),Vp,Jf=Q(()=>{Ba(),ns(),yd(),qa(),xl(),bd(),Md(),Ed(),ko(),kd(),mu(),Fo(),Ad(),Id(),Tu(),Bd(),zd(),Pc(),Rd(),Nd(),jd(),Xl(),Ac(),Wo(),Ic(),mn(),g(),qe(),js(),Xo(),Wi(),cc(),Xf(),Qf(),Ru(),Yf(),Nn(),so(),Zf(),Vp=new Map([["Abs",[Ks]],["Acos",[Ka]],["Acosh",[Xa]],["Add",[Cl]],["ArgMax",[Oa,Ws]],["ArgMin",[Vs,Ws]],["Asin",[Qa]],["Asinh",[Ya]],["Atan",[Xs]],["Atanh",[Za]],["Attention",[Na]],["AveragePool",[ic,nc]],["BatchNormalization",[Va]],["BiasAdd",[Ga]],["BiasSplitGelu",[vl]],["Cast",[el,Ja]],["Ceil",[rl]],["Clip",[Qs]],["Concat",[zl,Dl]],["Conv",[Eo,xo]],["ConvTranspose",[lu,bi]],["Cos",[nl]],["Cosh",[il]],["CumSum",[uu,du]],["DepthToSpace",[hu,fu]],["DequantizeLinear",[sd,od]],["Div",[$l]],["Einsum",[bu,Io]],["Elu",[Ys,Bi]],["Equal",[ao]],["Erf",[sl]],["Exp",[Zs]],["Expand",[vu]],["FastGelu",[xu]],["Floor",[ol]],["FusedConv",[Eo,xo]],["Gather",[Lo,Od]],["GatherElements",[jo,ku]],["GatherBlockQuantized",[Ro,$u]],["Gelu",[al]],["Gemm",[zr,Iu]],["GlobalAveragePool",[oc,sc]],["GlobalMaxPool",[an,tn]],["Greater",[Pl]],["GreaterOrEqual",[uo]],["GroupQueryAttention",[Uu]],["HardSigmoid",[pl,to]],["InstanceNormalization",[Gu]],["LayerNormalization",[Ku]],["LeakyRelu",[Js,Bi]],["Less",[Al]],["LessOrEqual",[Il]],["Log",[wl]],["MatMul",[vo]],["MatMulNBits",[Wd,Gd]],["MaxPool",[lr,id]],["Mul",[Sl]],["MultiHeadAttention",[Ou,Uo]],["Neg",[ul]],["Not",[ll]],["Pad",[ec]],["Pow",[kl]],["QuickGelu",[bl,Bi]],["Range",[Le]],["Reciprocal",[eo]],["ReduceMin",[Aa]],["ReduceMean",[Ds]],["ReduceMax",[Pa]],["ReduceSum",[Ia]],["ReduceProd",[Rs]],["ReduceL1",[Sa]],["ReduceL2",[ka]],["ReduceLogSum",[Ns]],["ReduceLogSumExp",[Ls]],["ReduceSumSquare",[Fa]],["Relu",[dl]],["Resize",[Zr,nn]],["RotaryEmbedding",[On]],["Sigmoid",[cl]],["Sin",[hl]],["Sinh",[ss]],["Slice",[Pp,Ap]],["SkipLayerNormalization",[dc]],["Split",[Ld,Lu]],["Sqrt",[fl]],["Softmax",[Op,Bp]],["Sub",[lo]],["Tan",[ml]],["Tanh",[ro]],["ThresholdedRelu",[gl,Bi]],["Tile",[Rp]],["Transpose",[gd,oa]],["Where",[Up]]])}),Wp,em=Q(()=>{Kt(),_(),cr(),Wp=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,r,n,i){Xe(e.programInfo.name);let s=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let u=[];for(let h of t)u.push({binding:u.length,resource:{buffer:h.buffer}});for(let h of r)u.push({binding:u.length,resource:{buffer:h.buffer}});i&&u.push({binding:u.length,resource:i});let c=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let h={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:c,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(h)}o.setPipeline(e.computePipeline),o.setBindGroup(0,c),o.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ge(e.programInfo.name)}dispose(){}build(e,t){Xe(e.name);let r=this.backend.device,n=[];r.features.has("shader-f16")&&n.push("enable f16;");let i=na(t,this.backend.device.limits),s=e.getShaderSource(i),o=`${n.join(`
`)}
${i.additionalImplementations}
${s}`,u=r.createShaderModule({code:o,label:e.name});_e("verbose",()=>`[WebGPU] ${e.name} shader code: ${o}`);let c=r.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return Ge(e.name),{programInfo:e,computePipeline:c,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let t=typeof e=="number"?e:e.x,r=typeof e=="number"?1:e.y||1,n=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=i&&r<=i&&n<=i)return[t,r,n];let s=t*r*n,o=Math.ceil(Math.sqrt(s));if(o>i){if(o=Math.ceil(Math.cbrt(s)),o>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}else return[o,o,1]}}}),Gp,qp,Hp,Kp,tm=Q(()=>{Kt(),er(),_(),ae(),Kr(),Jf(),em(),Gp=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let n=0;n<e.length;++n){let i=e[n].dataType;switch(t[n]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let s=e[n].dims.length;r.push(`${i};${s}`);break}case"dims":{let s=e[n].dims.join(",");r.push(`${i};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[n]}`)}}return r.join("|")},qp=(e,t,r)=>{let n=e.name;return e.shaderCache?.hint&&(n+="["+e.shaderCache.hint+"]"),n+=":"+r+`:${Gp(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,n},Hp=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},Kp=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let r=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r};t.features.has("chromium-experimental-timestamp-query-inside-passes")?r.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&r.push("timestamp-query"),t.features.has("shader-f16")&&r.push("shader-f16"),this.device=await t.requestDevice(n),this.adapterInfo=new Hp(t.info||await t.requestAdapterInfo()),this.gpuDataManager=vr(this),this.programManager=new Wp(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ti(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Xe(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let t=new BigUint64Array(e.getMappedRange()),r=this.pendingQueries.get(e);for(let n=0;n<t.length/2;n++){let i=r[n],s=i.kernelId,o=this.kernels.get(s),u=o.kernelType,c=o.kernelName,h=i.programName,y=i.inputTensorViews,l=i.outputTensorViews,x=t[n*2],k=t[n*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=x);let S=Number(x-this.queryTimeBase),C=Number(k-this.queryTimeBase);if(!Number.isSafeInteger(S)||!Number.isSafeInteger(C))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(J=>({dims:J.dims,dataType:Cn(J.dataType)})),outputsMetadata:l.map(J=>({dims:J.dims,dataType:Cn(J.dataType)})),kernelId:s,kernelType:u,kernelName:c,programName:h,startTime:S,endTime:C});else{let J="";y.forEach((F,ne)=>{J+=`input[${ne}]: [${F.dims}] | ${Cn(F.dataType)}, `});let Z="";l.forEach((F,ne)=>{Z+=`output[${ne}]: [${F.dims}] | ${Cn(F.dataType)}, `}),console.log(`[profiling] kernel "${s}|${u}|${c}|${h}" ${J}${Z}execution time: ${C-S} ns`)}rt("GPU",`${h}::${x}::${k}`)}e.unmap(),this.pendingQueries.delete(e)}),Ge()}run(e,t,r,n,i,s){Xe(e.name);let o=[];for(let F=0;F<t.length;++F){let ne=t[F].data;if(ne===0)continue;let ue=this.gpuDataManager.get(ne);if(!ue)throw new Error(`no GPU data for input: ${ne}`);o.push(ue)}let{outputs:u,dispatchGroup:c,programUniforms:h}=e.getRunData(t),y=r.length===0?u.map((F,ne)=>ne):r;if(y.length!==u.length)throw new Error(`Output size ${y.length} must be equal to ${u.length}.`);let l=[],x=[];for(let F=0;F<u.length;++F){if(!Number.isInteger(y[F])||y[F]<-3||y[F]>=s)throw new Error(`Invalid output index: ${y[F]}`);if(y[F]===-3)continue;let ne=y[F]===-1,ue=y[F]===-2,we=ne||ue?i(u[F].dataType,u[F].dims):n(y[F],u[F].dataType,u[F].dims);if(l.push(we),we.data===0)continue;let We=this.gpuDataManager.get(we.data);if(!We)throw new Error(`no GPU data for output: ${we.data}`);if(ne&&this.temporaryData.push(We),ue){let Be=this.kernelPersistentData.get(this.currentKernelId);Be||(Be=[],this.kernelPersistentData.set(this.currentKernelId,Be)),Be.push(We)}x.push(We)}if(o.length!==t.length||x.length!==l.length){if(x.length===0)return Ge(e.name),l;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let k;if(h){let F=0,ne=[];h.forEach(Be=>{let wt=typeof Be.data=="number"?[Be.data]:Be.data;if(wt.length===0)return;let Lt=Be.type===10?2:4,Dt,sr;Be.type===10?(sr=wt.length>4?16:wt.length>2?8:wt.length*Lt,Dt=wt.length>4?16:Lt*wt.length):(sr=wt.length<=2?wt.length*Lt:16,Dt=16),F=Math.ceil(F/sr)*sr,ne.push(F);let Qt=Be.type===10?8:4;F+=wt.length>4?Math.ceil(wt.length/Qt)*Dt:wt.length*Lt});let ue=16;F=Math.ceil(F/ue)*ue;let we=new ArrayBuffer(F);h.forEach((Be,wt)=>{let Lt=ne[wt],Dt=typeof Be.data=="number"?[Be.data]:Be.data;if(Be.type===6)new Int32Array(we,Lt,Dt.length).set(Dt);else if(Be.type===12)new Uint32Array(we,Lt,Dt.length).set(Dt);else if(Be.type===10)new Uint16Array(we,Lt,Dt.length).set(Dt);else if(Be.type===1)new Float32Array(we,Lt,Dt.length).set(Dt);else throw new Error(`Unsupported uniform type: ${Cn(Be.type)}`)});let We=this.gpuDataManager.create(F,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(We.buffer,0,we,0,F),this.gpuDataManager.release(We.id),k={offset:0,size:F,buffer:We.buffer}}let S=this.programManager.normalizeDispatchGroupSize(c),C=S[1]===1&&S[2]===1,J=qp(e,t,C),Z=this.programManager.getArtifact(J);if(Z||(Z=this.programManager.build(e,S),this.programManager.setArtifact(J,Z),_e("info",()=>`[artifact] key: ${J}, programName: ${e.name}`)),h&&Z.uniformVariablesInfo){if(h.length!==Z.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${Z.uniformVariablesInfo.length}, got ${h.length} in program "${Z.programInfo.name}".`);for(let F=0;F<h.length;F++){let ne=h[F],ue=ne.type,we=typeof ne.data=="number"?1:ne.data.length,[We,Be]=Z.uniformVariablesInfo[F];if(ue!==We||we!==Be)throw new Error(`Uniform variable ${F} mismatch: expect type ${We} with size ${Be}, got type ${ue} with size ${we} in program "${Z.programInfo.name}".`)}}if(_e("info",()=>`[ProgramManager] run "${e.name}" (key=${J}) with ${S[0]}x${S[1]}x${S[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let F={kernelId:this.currentKernelId,programName:Z.programInfo.name,inputTensorViews:t,outputTensorViews:l};this.pendingKernels.push(F),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(F)}return this.programManager.run(Z,o,x,S,k),Ge(e.name),l}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,r,n){let i=Vp.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let s={kernelType:e,kernelName:n,kernelEntry:i[0],attributes:[i[1],r]};this.kernels.set(t,s)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let r of t)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,r){let n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);let i=n.kernelType,s=n.kernelName,o=n.kernelEntry,u=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${s}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),_e("info",()=>`[WebGPU] Start to run kernel "[${i}] ${s}"...`);let c=this.env.debug;this.temporaryData=[];try{return c&&this.device.pushErrorScope("validation"),o(t,u[1]),0}catch(h){return r.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${s}" failed. ${h}`)),1}finally{c&&r.push(this.device.popErrorScope().then(h=>h?`GPU validation error for kernel "[${i}] ${s}": ${h.message}`:null));for(let h of this.temporaryData)this.gpuDataManager.release(h.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,r,n){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let s=i.get(t),o=this.gpuDataManager.registerExternalBuffer(r,n,s);return i.set(t,[o,r]),o}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,r){return async()=>{let n=await hr(this,e,t);return V(n.buffer,r)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){_e("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){_e("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){_e("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),r=e.length;this.pendingKernels=[];for(let n=0;n<r;n++){let i=this.getComputePassEncoder(),s=e[n];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(s.computePipeline),i.setBindGroup(0,s.bindGroup),i.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),Xp,zc,Dc,Lc,Qp,Yp,rm=Q(()=>{_(),Xp=1,zc=()=>Xp++,Dc=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}destroy(){_e("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}sameTypeAndShape(e,t){return this.dataType===e&&this.tensorShape.every((r,n)=>r===t[n])}},Lc=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&this.tensorManager.releaseTensor(this.tensorWrapper)}async ensureTensor(e,t,r){if(this.wrapper){if(this.wrapper.sameTypeAndShape(e,t))return this.wrapper.tensor;r&&(this.activeUpload=new Uint8Array(await this.wrapper.read())),this.tensorManager.releaseTensor(this.wrapper)}let n=MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,t,n,!0,!0),r&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){if(this.wrapper){this.wrapper.write(e);return}this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(e):this.wrapper.read()}},Qp=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let e=zc();return this.tensorTrackersById.set(e,new Lc(this)),e}releaseTensorId(e){let t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,r,n){_e("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${r}, copyOld: ${n}}`);let i=this.tensorTrackersById.get(e);if(!i)throw new Error("Tensor not found.");return i.ensureTensor(t,r,n)}upload(e,t){let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");r.upload(t)}async download(e,t){_e("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t?.byteLength}}`);let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");return r.download(t)}releaseTensorsForSession(e){for(let t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter(t=>t.sessionId!==e)}registerTensor(e,t,r,n){let i=zc(),s=new Dc({sessionId:this.backend.currentSessionId,context:e,tensor:t,dataType:r,shape:n});return this.tensorTrackersById.set(i,new Lc(this,s)),this.externalTensors.add(s),i}async getCachedTensor(e,t,r,n,i){let s=this.backend.currentSessionId;for(let[c,h]of this.freeTensors.entries())if(h.sameTypeAndShape(e,t)){let y=this.freeTensors.splice(c,1)[0];return y.sessionId=s,y}let o=this.backend.currentContext;_e("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`);let u=await o.createTensor({dataType:e,shape:t,dimensions:t,usage:r,writable:n,readable:i});return new Dc({sessionId:s,context:o,tensor:u,dataType:e,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},Yp=(...e)=>new Qp(...e)}),Rc,Zp,nm=Q(()=>{er(),Br(),ae(),rm(),_(),Rc=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Zp=class{constructor(e){this.tensorManager=Yp(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,ti(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let r=this.sessionIdsByMLContext.get(t);r||(r=new Set,this.sessionIdsByMLContext.set(t,r)),r.add(e)}onReleaseSession(e){let t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let r=this.sessionIdsByMLContext.get(t);r.delete(e),r.size===0&&this.sessionIdsByMLContext.delete(t)}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){_e("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,r,n){let i=Rc.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,i,r,n)}uploadTensor(e,t){if(!jt().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");_e("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let r=await this.tensorManager.download(e);return V(r,t)}}registerMLTensor(e,t,r){let n=Rc.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);let i=this.tensorManager.registerTensor(this.currentContext,e,n,r);return _e("verbose",()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${n}, dimensions: ${r}} -> {tensorId: ${i}}`),i}registerMLConstant(e,t,r,n,i,s){if(!s)throw new Error("External mounted files are not available.");let o=e;e.startsWith("./")&&(o=e.substring(2));let u=s.get(o);if(!u)throw new Error(`File with name ${o} not found in preloaded files.`);if(t+r>u.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let c=u.slice(t,t+r).buffer,h;switch(i.dataType){case"float32":h=new Float32Array(c);break;case"float16":h=new Uint16Array(c);break;case"int32":h=new Int32Array(c);break;case"uint32":h=new Uint32Array(c);break;case"int64":h=new BigInt64Array(c);break;case"uint64":h=new BigUint64Array(c);break;case"int8":h=new Int8Array(c);break;case"uint8":h=new Uint8Array(c);break;default:throw new Error(`Unsupported data type: ${i.dataType} in creating WebNN Constant from external data.`)}return _e("verbose",()=>`[WebNN] registerMLConstant {dataType: ${i.dataType}, shape: ${i.shape}}}`),n.constant(i,h)}flush(){}}}),Jp={};L(Jp,{init:()=>th});var pc,eh,th,im=Q(()=>{er(),tm(),_(),Yt(),nm(),pc=class Hf{constructor(t,r,n,i){this.module=t,this.dataType=r,this.data=n,this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=Fe.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=Fe.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=Fe.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let t=Fe.size(this.dims);return t===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(Fe.size(t)!==Fe.size(this.dims))throw new Error("Invalid new shape");return new Hf(this.module,this.dataType,this.data,t)}},eh=class{constructor(e,t,r){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let n=e.HEAPU32,i=r>>>2;this.opKernelContext=n[i++];let s=n[i++];this.outputCount=n[i++],this.customDataOffset=n[i++],this.customDataSize=n[i++];let o=[];for(let u=0;u<s;u++){let c=n[i++],h=n[i++],y=n[i++],l=[];for(let x=0;x<y;x++)l.push(n[i++]);o.push(new pc(e,c,h,l))}this.inputs=o}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,t){let r=t?.inputs?.map(o=>typeof o=="number"?this.inputs[o]:o)??this.inputs,n=t?.outputs??[],i=(o,u,c)=>new pc(this.module,u,this.output(o,c),c),s=(o,u)=>{let c=Dn(o,u);if(!c)throw new Error(`Unsupported data type: ${o}`);let h=c>0?this.backend.gpuDataManager.create(c).id:0;return new pc(this.module,o,h,u)};return this.backend.run(e,r,n,i,s,this.outputCount)}output(e,t){let r=this.module.stackSave();try{let n=this.module.stackAlloc((1+t.length)*4),i=n>>2;this.module.HEAPU32[i++]=t.length;for(let s=0;s<t.length;s++)this.module.HEAPU32[i++]=t[s];return this.module._JsepOutput(this.opKernelContext,e,n)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(r)}}},th=async(e,t,r,n)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let s=new Kp;await s.initialize(r,n),i("webgpu",[s,o=>s.alloc(o),o=>s.free(o),(o,u,c,h=!1)=>{if(h)_e("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${o}, dst=${u}, size=${c}`),s.memcpy(o,u);else{_e("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${o}, gpuDataId=${u}, size=${c}`);let y=t.HEAPU8.subarray(o>>>0,(o>>>0)+c);s.upload(u,y)}},async(o,u,c)=>{_e("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${u}, size=${c}`),await s.download(o,()=>t.HEAPU8.subarray(u>>>0,(u>>>0)+c))},(o,u,c)=>s.createKernel(o,u,c,t.UTF8ToString(t._JsepGetNodeName(u))),o=>s.releaseKernel(o),(o,u,c,h)=>{_e("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${c}, kernel=${o}, contextDataOffset=${u}`);let y=new eh(t,s,u);return s.computeKernel(o,y,h)},()=>s.captureBegin(),()=>s.captureEnd(),()=>s.replay()])}else{let s=new Zp(r);i("webnn",[s,()=>s.reserveTensorId(),o=>s.releaseTensorId(o),async(o,u,c,h)=>s.ensureTensor(o,u,c,h),(o,u)=>{s.uploadTensor(o,u)},async(o,u)=>s.downloadTensor(o,u)])}}}),rh,Nc,jc,Gi,nh,hc,Uc,Vc,Wc,Gc,qc,Hc,ih=Q(()=>{Hn(),Jn(),er(),Br(),ci(),Ai(),rh=(e,t)=>{jt()._OrtInit(e,t)!==0&&Rr("Can't initialize onnxruntime.")},Nc=async e=>{rh(e.wasm.numThreads,Fn(e.logLevel))},jc=async(e,t)=>{{let r=(im(),q(Jp)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=e.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let s=e.webgpu.forceFallbackAdapter;if(s!==void 0&&typeof s!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${s}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:s}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await r("webgpu",jt(),e,n)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",jt(),e)}}},Gi=new Map,nh=e=>{let t=jt(),r=t.stackSave();try{let n=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,n,n+4)!==0&&Rr("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(r)}},hc=e=>{let t=jt(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Uc=async(e,t)=>{let r,n,i=jt();Array.isArray(e)?[r,n]=e:e.buffer===i.HEAPU8.buffer?[r,n]=[e.byteOffset,e.byteLength]:[r,n]=hc(e);let s=0,o=0,u=0,c=[],h=[],y=[];try{if([o,c]=Pi(t),t?.externalData&&i.mountExternalData){let F=[];for(let ne of t.externalData){let ue=typeof ne=="string"?ne:ne.path;F.push(ei(typeof ne=="string"?ne:ne.data).then(we=>{i.mountExternalData(ue,we)}))}await Promise.all(F)}for(let F of t?.executionProviders??[])if((typeof F=="string"?F:F.name)==="webnn"){if(i.shouldTransferToMLTensor=!1,i.currentContext)throw new Error("WebNN execution provider is already set.");if(typeof F!="string"){let ne=F,ue=ne?.context,we=ne?.gpuDevice,We=ne?.deviceType,Be=ne?.powerPreference;ue?i.currentContext=ue:we?i.currentContext=await navigator.ml.createContext(we):i.currentContext=await navigator.ml.createContext({deviceType:We,powerPreference:Be})}else i.currentContext=await navigator.ml.createContext();break}s=await i._OrtCreateSession(r,n,o),s===0&&Rr("Can't create a session."),i.jsepOnCreateSession?.(),i.currentContext&&(i.jsepRegisterMLContext(s,i.currentContext),i.currentContext=void 0,i.shouldTransferToMLTensor=!0);let[l,x]=nh(s),k=!!t?.enableGraphCapture,S=[],C=[],J=[];for(let F=0;F<l;F++){let ne=i._OrtGetInputName(s,F);ne===0&&Rr("Can't get an input name."),h.push(ne),S.push(i.UTF8ToString(ne))}for(let F=0;F<x;F++){let ne=i._OrtGetOutputName(s,F);ne===0&&Rr("Can't get an output name."),y.push(ne);let ue=i.UTF8ToString(ne);C.push(ue);{if(k&&t?.preferredOutputLocation===void 0){J.push("gpu-buffer");continue}let we=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[ue]??"cpu";if(we!=="cpu"&&we!=="cpu-pinned"&&we!=="gpu-buffer"&&we!=="ml-tensor")throw new Error(`Not supported preferred output location: ${we}.`);if(k&&we!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${we}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);J.push(we)}}let Z=null;return J.some(F=>F==="gpu-buffer"||F==="ml-tensor")&&(u=i._OrtCreateBinding(s),u===0&&Rr("Can't create IO binding."),Z={handle:u,outputPreferredLocations:J,outputPreferredLocationsEncoded:J.map(F=>mi(F))}),Gi.set(s,[s,h,y,Z,k,!1]),[s,S,C]}catch(l){throw h.forEach(x=>i._OrtFree(x)),y.forEach(x=>i._OrtFree(x)),u!==0&&i._OrtReleaseBinding(u),s!==0&&i._OrtReleaseSession(s),l}finally{i._free(r),o!==0&&i._OrtReleaseSessionOptions(o),c.forEach(l=>i._free(l)),i.unmountExternalData?.()}},Vc=e=>{let t=jt(),r=Gi.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[n,i,s,o,u]=r;o&&(u&&t._OrtClearBoundOutputs(o.handle),t._OrtReleaseBinding(o.handle)),t.jsepOnReleaseSession?.(e),i.forEach(c=>t._OrtFree(c)),s.forEach(c=>t._OrtFree(c)),t._OrtReleaseSession(n),Gi.delete(e)},Wc=(e,t,r,n,i,s=!1)=>{if(!e){t.push(0);return}let o=jt(),u=e[0],c=e[1],h=e[3],y,l;if(u==="string"&&(h==="gpu-buffer"||h==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(s&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let S=e[2].gpuBuffer;l=Dn(Kn(u),c);let C=o.jsepRegisterBuffer;if(!C)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');y=C(n,i,S,l)}else if(h==="ml-tensor"){let S=e[2].mlTensor;l=Dn(Kn(u),c);let C=o.jsepRegisterMLTensor;if(!C)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');y=C(S,Kn(u),c)}else{let S=e[2];if(Array.isArray(S)){l=4*S.length,y=o._malloc(l),r.push(y);let C=y/4;for(let J=0;J<S.length;J++){if(typeof S[J]!="string")throw new TypeError(`tensor data at index ${J} is not a string`);o.HEAPU32[C++]=kr(S[J],r)}}else l=S.byteLength,y=o._malloc(l),r.push(y),o.HEAPU8.set(new Uint8Array(S.buffer,S.byteOffset,l),y)}let x=o.stackSave(),k=o.stackAlloc(4*c.length);try{let S=k/4;c.forEach(J=>o.HEAP32[S++]=J);let C=o._OrtCreateTensor(Kn(u),y,l,k,c.length,mi(h));C===0&&Rr(`Can't create tensor for input/output. session=${n}, index=${i}.`),t.push(C)}finally{o.stackRestore(x)}},Gc=async(e,t,r,n,i,s)=>{let o=jt(),u=Gi.get(e);if(!u)throw new Error(`cannot run inference. invalid session id: ${e}`);let c=u[0],h=u[1],y=u[2],l=u[3],x=u[4],k=u[5],S=t.length,C=n.length,J=0,Z=[],F=[],ne=[],ue=[],we=o.stackSave(),We=o.stackAlloc(S*4),Be=o.stackAlloc(S*4),wt=o.stackAlloc(C*4),Lt=o.stackAlloc(C*4);try{o.jsepOnRunStart?.(c),[J,Z]=Ei(s);for(let Ht=0;Ht<S;Ht++)Wc(r[Ht],F,ue,e,t[Ht],x);for(let Ht=0;Ht<C;Ht++)Wc(i[Ht],ne,ue,e,S+n[Ht],x);let Dt=We/4,sr=Be/4,Qt=wt/4,or=Lt/4;for(let Ht=0;Ht<S;Ht++)o.HEAPU32[Dt++]=F[Ht],o.HEAPU32[sr++]=h[t[Ht]];for(let Ht=0;Ht<C;Ht++)o.HEAPU32[Qt++]=ne[Ht],o.HEAPU32[or++]=y[n[Ht]];if(l&&!k){let{handle:Ht,outputPreferredLocations:Mr,outputPreferredLocationsEncoded:br}=l;if(h.length!==S)throw new Error(`input count from feeds (${S}) is expected to be always equal to model's input count (${h.length}).`);for(let Gt=0;Gt<S;Gt++){let _r=t[Gt];await o._OrtBindInput(Ht,h[_r],F[Gt])!==0&&Rr(`Can't bind input[${Gt}] for session=${e}.`)}for(let Gt=0;Gt<C;Gt++){let _r=n[Gt];i[Gt]?.[3]?o._OrtBindOutput(Ht,y[_r],ne[Gt],0)!==0&&Rr(`Can't bind pre-allocated output[${Gt}] for session=${e}.`):o._OrtBindOutput(Ht,y[_r],0,br[_r])!==0&&Rr(`Can't bind output[${Gt}] to ${Mr[Gt]} for session=${e}.`)}Gi.set(e,[c,h,y,l,x,!0])}let Tr;l?Tr=await o._OrtRunWithBinding(c,l.handle,C,wt,J):Tr=await o._OrtRun(c,Be,We,S,Lt,C,wt,J),Tr!==0&&Rr("failed to call OrtRun().");let ir=[];for(let Ht=0;Ht<C;Ht++){let Mr=o.HEAPU32[wt/4+Ht];if(Mr===ne[Ht]){ir.push(i[Ht]);continue}let br=o.stackSave(),Gt=o.stackAlloc(4*4),_r=!1,Je,Et=0;try{o._OrtGetTensorData(Mr,Gt,Gt+4,Gt+8,Gt+12)!==0&&Rr(`Can't access output tensor data on index ${Ht}.`);let pr=Gt/4,Ur=o.HEAPU32[pr++];Et=o.HEAPU32[pr++];let Wr=o.HEAPU32[pr++],Wn=o.HEAPU32[pr++],Bn=[];for(let hn=0;hn<Wn;hn++)Bn.push(o.HEAPU32[Wr/4+hn]);o._OrtFree(Wr);let En=Bn.reduce((hn,fn)=>hn*fn,1);Je=Cn(Ur);let Mn=l?.outputPreferredLocations[n[Ht]];if(Je==="string"){if(Mn==="gpu-buffer"||Mn==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let hn=[],fn=Et/4;for(let Hi=0;Hi<En;Hi++){let Ki=o.HEAPU32[fn++],gs=Hi===En-1?void 0:o.HEAPU32[fn]-Ki;hn.push(o.UTF8ToString(Ki,gs))}ir.push([Je,Bn,hn,"cpu"])}else if(Mn==="gpu-buffer"&&En>0){let hn=o.jsepGetBuffer;if(!hn)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let fn=hn(Et),Hi=Dn(Ur,En);if(Hi===void 0||!hi(Je))throw new Error(`Unsupported data type: ${Je}`);_r=!0,ir.push([Je,Bn,{gpuBuffer:fn,download:o.jsepCreateDownloader(fn,Hi,Je),dispose:()=>{o._OrtReleaseTensor(Mr)}},"gpu-buffer"])}else if(Mn==="ml-tensor"&&En>0){let hn=o.jsepEnsureTensor;if(!hn)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(Dn(Ur,En)===void 0||!fi(Je))throw new Error(`Unsupported data type: ${Je}`);let fn=await hn(Et,Ur,Bn,!1);_r=!0,ir.push([Je,Bn,{mlTensor:fn,download:o.jsepCreateMLTensorDownloader(Et,Je),dispose:()=>{o.jsepReleaseTensorId(Et),o._OrtReleaseTensor(Mr)}},"ml-tensor"])}else{let hn=pi(Je),fn=new hn(En);new Uint8Array(fn.buffer,fn.byteOffset,fn.byteLength).set(o.HEAPU8.subarray(Et,Et+fn.byteLength)),ir.push([Je,Bn,fn,"cpu"])}}finally{o.stackRestore(br),Je==="string"&&Et&&o._free(Et),_r||o._OrtReleaseTensor(Mr)}}return l&&!x&&(o._OrtClearBoundOutputs(l.handle),Gi.set(e,[c,h,y,l,x,!1])),ir}finally{o.stackRestore(we),F.forEach(Dt=>o._OrtReleaseTensor(Dt)),ne.forEach(Dt=>o._OrtReleaseTensor(Dt)),ue.forEach(Dt=>o._free(Dt)),J!==0&&o._OrtReleaseRunOptions(J),Z.forEach(Dt=>o._free(Dt))}},qc=e=>{let t=jt(),r=Gi.get(e);if(!r)throw new Error("invalid session id");let n=r[0],i=t._OrtEndProfiling(n);i===0&&Rr("Can't get an profile file name."),t._OrtFree(i)},Hc=e=>{let t=[];for(let r of e){let n=r[2];!Array.isArray(n)&&"buffer"in n&&t.push(n.buffer)}return t}}),qi,Vn,Qo,ld,ud,fc,Kc,mc,ms,_s,sh,oh,ah,lh,uh,dh,ch,ph,hh=Q(()=>{Kt(),ih(),Br(),I(),qi=()=>!!T.wasm.proxy&&typeof document<"u",Qo=!1,ld=!1,ud=!1,mc=new Map,ms=(e,t)=>{let r=mc.get(e);r?r.push(t):mc.set(e,[t])},_s=()=>{if(Qo||!ld||ud||!Vn)throw new Error("worker not ready")},sh=e=>{switch(e.data.type){case"init-wasm":Qo=!1,e.data.err?(ud=!0,Kc[1](e.data.err)):(ld=!0,Kc[0]()),fc&&(URL.revokeObjectURL(fc),fc=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=mc.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},oh=async()=>{if(!ld){if(Qo)throw new Error("multiple calls to 'initWasm()' detected.");if(ud)throw new Error("previous call to 'initWasm()' failed.");if(Qo=!0,qi())return new Promise((e,t)=>{Vn?.terminate(),M().then(([r,n])=>{try{Vn=n,Vn.onerror=s=>t(s),Vn.onmessage=sh,Kc=[e,t];let i={type:"init-wasm",in:T};Vn.postMessage(i),fc=r}catch(i){t(i)}},t)});try{await nr(T.wasm),await Nc(T),ld=!0}catch(e){throw ud=!0,e}finally{Qo=!1}}},ah=async e=>{if(qi())return _s(),new Promise((t,r)=>{ms("init-ep",[t,r]);let n={type:"init-ep",in:{epName:e,env:T}};Vn.postMessage(n)});await jc(T,e)},lh=async e=>qi()?(_s(),new Promise((t,r)=>{ms("copy-from",[t,r]);let n={type:"copy-from",in:{buffer:e}};Vn.postMessage(n,[e.buffer])})):hc(e),uh=async(e,t)=>{if(qi()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return _s(),new Promise((r,n)=>{ms("create",[r,n]);let i={type:"create",in:{model:e,options:{...t}}},s=[];e instanceof Uint8Array&&s.push(e.buffer),Vn.postMessage(i,s)})}else return Uc(e,t)},dh=async e=>{if(qi())return _s(),new Promise((t,r)=>{ms("release",[t,r]);let n={type:"release",in:e};Vn.postMessage(n)});Vc(e)},ch=async(e,t,r,n,i,s)=>{if(qi()){if(r.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return _s(),new Promise((o,u)=>{ms("run",[o,u]);let c=r,h={type:"run",in:{sessionId:e,inputIndices:t,inputs:c,outputIndices:n,options:s}};Vn.postMessage(h,Hc(c))})}else return Gc(e,t,r,n,i,s)},ph=async e=>{if(qi())return _s(),new Promise((t,r)=>{ms("end-profiling",[t,r]);let n={type:"end-profiling",in:e};Vn.postMessage(n)});qc(e)}}),Xc,fh,mh,sm=Q(()=>{Kt(),hh(),er(),Ir(),Ai(),Xc=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},fh=e=>{switch(e[3]){case"cpu":return new te(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!hi(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:n,dispose:i}=e[2];return te.fromGpuBuffer(r,{dataType:t,dims:e[1],download:n,dispose:i})}case"ml-tensor":{let t=e[0];if(!fi(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:r,download:n,dispose:i}=e[2];return te.fromMLTensor(r,{dataType:t,dims:e[1],download:n,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},mh=class{async fetchModelAndCopyToWasmMemory(e){return lh(await ei(e))}async loadModel(e,t){Xe();let r;typeof e=="string"?r=await this.fetchModelAndCopyToWasmMemory(e):r=e,[this.sessionId,this.inputNames,this.outputNames]=await uh(r,t),Ge()}async dispose(){return dh(this.sessionId)}async run(e,t,r){Xe();let n=[],i=[];Object.entries(e).forEach(l=>{let x=l[0],k=l[1],S=this.inputNames.indexOf(x);if(S===-1)throw new Error(`invalid input '${x}'`);n.push(k),i.push(S)});let s=[],o=[];Object.entries(t).forEach(l=>{let x=l[0],k=l[1],S=this.outputNames.indexOf(x);if(S===-1)throw new Error(`invalid output '${x}'`);s.push(k),o.push(S)});let u=n.map((l,x)=>Xc(l,()=>`input "${this.inputNames[i[x]]}"`)),c=s.map((l,x)=>l?Xc(l,()=>`output "${this.outputNames[o[x]]}"`):null),h=await ch(this.sessionId,i,u,o,c,r),y={};for(let l=0;l<h.length;l++)y[this.outputNames[o[l]]]=s[l]??fh(h[l]);return Ge(),y}startProfiling(){}endProfiling(){ph(this.sessionId)}}}),_h={};L(_h,{OnnxruntimeWebAssemblyBackend:()=>Yc,initializeFlags:()=>Qc,wasmBackend:()=>gh});var Qc,Yc,gh,om=Q(()=>{Kt(),hh(),sm(),I(),Qc=()=>{if((typeof T.wasm.initTimeout!="number"||T.wasm.initTimeout<0)&&(T.wasm.initTimeout=0),T.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof T.wasm.proxy!="boolean"&&(T.wasm.proxy=!1),typeof T.wasm.trace!="boolean"&&(T.wasm.trace=!1),typeof T.wasm.numThreads!="number"||!Number.isInteger(T.wasm.numThreads)||T.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)T.wasm.numThreads=1;else{let e=typeof navigator>"u"?Pe("node:os").cpus().length:navigator.hardwareConcurrency;T.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},Yc=class{async init(e){Qc(),await oh(),await ah(e)}async createInferenceSessionHandler(e,t){let r=new mh;return await r.loadModel(e,t),Promise.resolve(r)}},gh=new Yc});Kt(),Kt(),Kt();var am="1.21.0-dev.20241024-d9ca84ef96",lm=Wt;{let e=(om(),q(_h)).wasmBackend;Ce("webgpu",e,5),Ce("webnn",e,5),Ce("cpu",e,10),Ce("wasm",e,10)}Object.defineProperty(T.versions,"web",{value:am,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"./src/backends/onnx.js":(Ue,Me,N)=>{var D;N.r(Me),N.d(Me,{Tensor:()=>Pe.Tensor,createInferenceSession:()=>j,deviceToExecutionProviders:()=>Ce,isONNXProxy:()=>U,isONNXTensor:()=>oe});var ge=N("./src/env.js"),$e=N("?2ce3"),Oe=N("./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs"),Pe=N("./node_modules/onnxruntime-common/dist/esm/index.js");const Q=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),L=[];let W,q;const ee=Symbol.for("onnxruntime");if(ee in globalThis)q=globalThis[ee];else if(ge.apis.IS_NODE_ENV){switch(q=$e??(D||(D=N.t($e,2))),Ms.platform){case"win32":L.push("dml");break;case"linux":Ms.arch==="x64"&&L.push("cuda");break}L.push("cpu"),W=["cpu"]}else q=Oe,ge.apis.IS_WEBNN_AVAILABLE&&L.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),ge.apis.IS_WEBGPU_AVAILABLE&&L.push("webgpu"),L.push("wasm"),W=["wasm"];const de=q.InferenceSession;function Ce(H=null){if(!H)return W;switch(H){case"auto":return L;case"gpu":return L.filter(R=>["webgpu","cuda","dml","webnn-gpu"].includes(R))}if(L.includes(H))return[Q[H]??H];throw new Error(`Unsupported device: "${H}". Should be one of: ${L.join(", ")}.`)}let xe=null;async function j(H,R,P){xe&&await xe;const O=de.create(H,R);xe??=O;const T=await O;return T.config=P,T}function oe(H){return H instanceof q.Tensor}const le=q?.env;le?.wasm&&(le.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${ge.env.version}/dist/`,le.wasm.proxy=!1,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(le.wasm.numThreads=1)),le?.webgpu&&(le.webgpu.powerPreference="high-performance");function U(){return le?.wasm?.proxy}ge.env.backends.onnx=le},"./src/configs.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{AutoConfig:()=>L,PretrainedConfig:()=>Q,getKeyValueShapes:()=>Pe});var D=N("./src/utils/core.js"),ge=N("./src/utils/hub.js");async function $e(W,q){return await(0,ge.getModelJSON)(W,"config.json",!0,q)}function Oe(W){const q={};let ee={};switch(W.model_type){case"llava":case"paligemma":case"florence2":ee=Oe(W.text_config);break;case"moondream1":ee=Oe(W.phi_config);break;case"musicgen":ee=Oe(W.decoder);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":q.num_heads="n_head",q.num_layers="n_layer",q.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":q.num_heads="num_attention_heads",q.num_layers="num_hidden_layers",q.hidden_size="hidden_size";break;case"llama":case"olmo":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":q.num_heads="num_key_value_heads",q.num_layers="num_hidden_layers",q.hidden_size="hidden_size",q.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":q.num_heads="num_key_value_heads",q.num_layers="num_hidden_layers",q.dim_kv="head_dim";break;case"openelm":q.num_heads="num_kv_heads",q.num_layers="num_transformer_layers",q.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":q.num_heads="num_heads",q.num_layers="num_layers",q.hidden_size="hidden_size";break;case"bloom":q.num_heads="n_head",q.num_layers="n_layer",q.hidden_size="hidden_size";break;case"mpt":q.num_heads="n_heads",q.num_layers="n_layers",q.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":q.num_decoder_layers="num_decoder_layers",q.num_decoder_heads="num_heads",q.decoder_dim_kv="d_kv",q.num_encoder_layers="num_layers",q.num_encoder_heads="num_heads",q.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":q.num_decoder_layers="decoder_layers",q.num_decoder_heads="decoder_attention_heads",q.decoder_hidden_size="d_model",q.num_encoder_layers="encoder_layers",q.num_encoder_heads="encoder_attention_heads",q.encoder_hidden_size="d_model";break;case"speecht5":q.num_decoder_layers="decoder_layers",q.num_decoder_heads="decoder_attention_heads",q.decoder_hidden_size="hidden_size",q.num_encoder_layers="encoder_layers",q.num_encoder_heads="encoder_attention_heads",q.encoder_hidden_size="hidden_size";break;case"trocr":q.num_encoder_layers=q.num_decoder_layers="decoder_layers",q.num_encoder_heads=q.num_decoder_heads="decoder_attention_heads",q.encoder_hidden_size=q.decoder_hidden_size="d_model";break;case"musicgen_decoder":q.num_encoder_layers=q.num_decoder_layers="num_hidden_layers",q.num_encoder_heads=q.num_decoder_heads="num_attention_heads",q.encoder_hidden_size=q.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const Ce=Oe(W.decoder),xe="num_decoder_layers"in Ce,j=(0,D.pick)(W,["model_type","is_encoder_decoder"]);return xe?(j.num_decoder_layers=Ce.num_decoder_layers,j.num_decoder_heads=Ce.num_decoder_heads,j.decoder_hidden_size=Ce.decoder_hidden_size,j.num_encoder_layers=Ce.num_encoder_layers,j.num_encoder_heads=Ce.num_encoder_heads,j.encoder_hidden_size=Ce.encoder_hidden_size):(j.num_layers=Ce.num_layers,j.num_heads=Ce.num_heads,j.hidden_size=Ce.hidden_size),j}const de={...ee,...(0,D.pick)(W,["model_type","multi_query","is_encoder_decoder"])};for(const Ce in q)de[Ce]=W[q[Ce]];return de}function Pe(W,{prefix:q="past_key_values"}={}){const ee={},de=W.normalized_config,Ce=1;if(de.is_encoder_decoder&&"num_encoder_heads"in de&&"num_decoder_heads"in de){const xe=de.encoder_dim_kv??de.encoder_hidden_size/de.num_encoder_heads,j=de.decoder_dim_kv??de.decoder_hidden_size/de.num_decoder_heads,oe=[Ce,de.num_encoder_heads,0,xe],le=[Ce,de.num_decoder_heads,0,j];for(let U=0;U<de.num_decoder_layers;++U)ee[`${q}.${U}.encoder.key`]=oe,ee[`${q}.${U}.encoder.value`]=oe,ee[`${q}.${U}.decoder.key`]=le,ee[`${q}.${U}.decoder.value`]=le}else{const xe=de.num_heads,j=de.num_layers,oe=de.dim_kv??de.hidden_size/(de.num_attention_heads??xe);if(de.model_type==="falcon"){const le=[Ce*xe,0,oe];for(let U=0;U<j;++U)ee[`${q}.${U}.key`]=le,ee[`${q}.${U}.value`]=le}else if(de.multi_query){const le=[Ce*xe,0,2*oe];for(let U=0;U<j;++U)ee[`${q}.${U}.key_value`]=le}else if(de.model_type==="bloom"){const le=[Ce*xe,oe,0],U=[Ce*xe,0,oe];for(let H=0;H<j;++H)ee[`${q}.${H}.key`]=le,ee[`${q}.${H}.value`]=U}else if(de.model_type==="openelm")for(let le=0;le<j;++le){const U=[Ce,xe[le],0,oe];ee[`${q}.${le}.key`]=U,ee[`${q}.${le}.value`]=U}else{const le=[Ce,xe,0,oe];for(let U=0;U<j;++U)ee[`${q}.${U}.key`]=le,ee[`${q}.${U}.value`]=le}}return ee}class Q{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(q){Object.assign(this,q),this.normalized_config=Oe(this)}static async from_pretrained(q,{progress_callback:ee=null,config:de=null,cache_dir:Ce=null,local_files_only:xe=!1,revision:j="main"}={}){de&&!(de instanceof Q)&&(de=new Q(de));const oe=de??await $e(q,{progress_callback:ee,config:de,cache_dir:Ce,local_files_only:xe,revision:j});return new this(oe)}}class L{static async from_pretrained(...q){return Q.from_pretrained(...q)}}},"./src/env.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{apis:()=>j,env:()=>P});var D=N("?569f"),ge=N("?3f59"),$e=N("?154a");const Oe="3.0.2",Pe=typeof self<"u",Q=Pe&&self.constructor.name==="DedicatedWorkerGlobalScope",L=Pe&&"caches"in self,W=typeof navigator<"u"&&"gpu"in navigator,q=typeof navigator<"u"&&"ml"in navigator,ee=typeof Ms<"u",de=ee&&Ms?.release?.name==="node",Ce=!O(D),xe=!O(ge),j=Object.freeze({IS_BROWSER_ENV:Pe,IS_WEBWORKER_ENV:Q,IS_WEB_CACHE_AVAILABLE:L,IS_WEBGPU_AVAILABLE:W,IS_WEBNN_AVAILABLE:q,IS_PROCESS_AVAILABLE:ee,IS_NODE_ENV:de,IS_FS_AVAILABLE:Ce,IS_PATH_AVAILABLE:xe}),oe=Ce&&xe;let le="./";if(oe){const T=Object(import.meta).url;T?le=ge.dirname(ge.dirname($e.fileURLToPath(T))):typeof __dirname<"u"&&(le=ge.dirname(__dirname))}const U=oe?ge.join(le,"/.cache/"):null,H="/models/",R=oe?ge.join(le,H):H,P={version:Oe,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!Pe,localModelPath:R,useFS:Ce,useBrowserCache:L,useFSCache:Ce,cacheDir:U,useCustomCache:!1,customCache:null};function O(T){return Object.keys(T).length===0}},"./src/generation/configuration_utils.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{GenerationConfig:()=>ge});var D=N("./src/utils/core.js");class ge{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(Oe){Object.assign(this,(0,D.pick)(Oe,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{ClassifierFreeGuidanceLogitsProcessor:()=>oe,ForcedBOSTokenLogitsProcessor:()=>Q,ForcedEOSTokenLogitsProcessor:()=>L,LogitsProcessor:()=>$e,LogitsProcessorList:()=>Pe,LogitsWarper:()=>Oe,MinLengthLogitsProcessor:()=>Ce,MinNewTokensLengthLogitsProcessor:()=>xe,NoBadWordsLogitsProcessor:()=>j,NoRepeatNGramLogitsProcessor:()=>ee,RepetitionPenaltyLogitsProcessor:()=>de,SuppressTokensAtBeginLogitsProcessor:()=>W,TemperatureLogitsWarper:()=>le,TopKLogitsWarper:()=>H,TopPLogitsWarper:()=>U,WhisperTimeStampLogitsProcessor:()=>q});var D=N("./src/utils/generic.js");N("./src/utils/tensor.js");var ge=N("./src/utils/maths.js");class $e extends D.Callable{_call(P,O){throw Error("`_call` should be implemented in a subclass")}}class Oe extends D.Callable{_call(P,O){throw Error("`_call` should be implemented in a subclass")}}class Pe extends D.Callable{constructor(){super(),this.processors=[]}push(P){this.processors.push(P)}extend(P){this.processors.push(...P)}_call(P,O){let T=O;for(const fe of this.processors)T=fe(P,T);return T}[Symbol.iterator](){return this.processors.values()}}class Q extends $e{constructor(P){super(),this.bos_token_id=P}_call(P,O){for(let T=0;T<P.length;++T)if(P[T].length===1){const fe=O[T].data;fe.fill(-1/0),fe[this.bos_token_id]=0}return O}}class L extends $e{constructor(P,O){super(),this.max_length=P,this.eos_token_id=Array.isArray(O)?O:[O]}_call(P,O){for(let T=0;T<P.length;++T)if(P[T].length===this.max_length-1){const fe=O[T].data;fe.fill(-1/0);for(const ye of this.eos_token_id)fe[ye]=0}return O}}class W extends $e{constructor(P,O){super(),this.begin_suppress_tokens=P,this.begin_index=O}_call(P,O){for(let T=0;T<P.length;++T)if(P[T].length===this.begin_index){const fe=O[T].data;for(const ye of this.begin_suppress_tokens)fe[ye]=-1/0}return O}}class q extends $e{constructor(P,O){super(),this.eos_token_id=Array.isArray(P.eos_token_id)?P.eos_token_id[0]:P.eos_token_id,this.no_timestamps_token_id=P.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=O.length,O.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=P.max_initial_timestamp_index}_call(P,O){for(let T=0;T<P.length;++T){const fe=O[T].data;if(fe[this.no_timestamps_token_id]=-1/0,P[T].length===this.begin_index-1){fe.fill(-1/0),fe[this.timestamp_begin]=0;continue}const ye=P[T].slice(this.begin_index),Ee=ye.length>=1&&ye[ye.length-1]>=this.timestamp_begin,K=ye.length<2||ye[ye.length-2]>=this.timestamp_begin;if(Ee&&(K?fe.subarray(this.timestamp_begin).fill(-1/0):fe.subarray(0,this.eos_token_id).fill(-1/0)),P[T].length===this.begin_index&&this.max_initial_timestamp_index!==null){const ct=this.timestamp_begin+this.max_initial_timestamp_index;fe.subarray(ct+1).fill(-1/0)}const Ae=(0,ge.log_softmax)(fe),ot=Math.log(Ae.subarray(this.timestamp_begin).map(Math.exp).reduce((ct,Te)=>ct+Te)),Qe=(0,ge.max)(Ae.subarray(0,this.timestamp_begin))[0];ot>Qe&&fe.subarray(0,this.timestamp_begin).fill(-1/0)}return O}}class ee extends $e{constructor(P){super(),this.no_repeat_ngram_size=P}getNgrams(P){const O=P.length,T=[];for(let ye=0;ye<O+1-this.no_repeat_ngram_size;++ye){const Ee=[];for(let K=0;K<this.no_repeat_ngram_size;++K)Ee.push(P[ye+K]);T.push(Ee.map(Number))}const fe=new Map;for(const ye of T){const Ee=ye.slice(0,ye.length-1),K=JSON.stringify(Ee),Ae=fe.get(K)??[];Ae.push(ye[ye.length-1]),fe.set(K,Ae)}return fe}getGeneratedNgrams(P,O){const T=O.slice(O.length+1-this.no_repeat_ngram_size,O.length);return P.get(JSON.stringify(T.map(Number)))??[]}calcBannedNgramTokens(P){const O=[];if(P.length+1<this.no_repeat_ngram_size)return O;{const T=this.getNgrams(P);return this.getGeneratedNgrams(T,P)}}_call(P,O){for(let T=0;T<P.length;++T){const fe=O[T].data,ye=this.calcBannedNgramTokens(P[T]);for(const Ee of ye)fe[Ee]=-1/0}return O}}class de extends $e{constructor(P){super(),this.penalty=P}_call(P,O){for(let T=0;T<P.length;++T){const fe=O[T].data;for(const ye of P[T]){const Ee=Number(ye);fe[Ee]<0?fe[Ee]*=this.penalty:fe[Ee]/=this.penalty}}return O}}class Ce extends $e{constructor(P,O){super(),this.min_length=P,this.eos_token_id=Array.isArray(O)?O:[O]}_call(P,O){for(let T=0;T<P.length;++T)if(P[T].length<this.min_length){const fe=O[T].data;for(const ye of this.eos_token_id)fe[ye]=-1/0}return O}}class xe extends $e{constructor(P,O,T){super(),this.prompt_length_to_skip=P,this.min_new_tokens=O,this.eos_token_id=Array.isArray(T)?T:[T]}_call(P,O){for(let T=0;T<P.length;++T)if(P[T].length-this.prompt_length_to_skip<this.min_new_tokens){const ye=O[T].data;for(const Ee of this.eos_token_id)ye[Ee]=-1/0}return O}}class j extends $e{constructor(P,O){super(),this.bad_words_ids=P,this.eos_token_id=Array.isArray(O)?O:[O]}_call(P,O){for(let T=0;T<P.length;++T){const fe=O[T].data,ye=P[T];for(const Ee of this.bad_words_ids){let K=!0;for(let Ae=1;Ae<=Ee.length-1&&Ee.length<ye.length;++Ae)if(Ee.at(-Ae-1)!=ye.at(-Ae)){K=!1;break}K&&(fe[Ee.at(-1)]=-1/0)}}return O}}class oe extends $e{constructor(P){if(super(),P<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${P}.`);this.guidance_scale=P}_call(P,O){if(O.dims[0]!==2*P.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${O.dims[0]} for the logits and ${P.length} for the input ids.`);const T=P.length,fe=O.slice([0,T],null),ye=O.slice([T,O.dims[0]],null);for(let Ee=0;Ee<ye.data.length;++Ee)ye.data[Ee]+=(fe.data[Ee]-ye.data[Ee])*this.guidance_scale;return ye}}class le extends Oe{constructor(P){super(),this.temperature=P}_call(P,O){const T=O.data;for(let fe=0;fe<T.length;++fe)T[fe]/=this.temperature;return O}}class U extends Oe{constructor(P,{filter_value:O=-1/0,min_tokens_to_keep:T=1}={}){if(super(),P<0||P>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${P}`);if(!Number.isInteger(T)||T<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${T}`);this.top_p=P,this.filter_value=O,this.min_tokens_to_keep=T}}class H extends Oe{constructor(P,{filter_value:O=-1/0,min_tokens_to_keep:T=1}={}){if(super(),!Number.isInteger(P)||P<0)throw new Error(`\`top_k\` must be a positive integer, but is ${P}`);this.top_k=Math.max(P,T),this.filter_value=O}}},"./src/generation/logits_sampler.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{LogitsSampler:()=>Oe});var D=N("./src/utils/generic.js"),ge=N("./src/utils/tensor.js"),$e=N("./src/utils/maths.js");N("./src/generation/configuration_utils.js");class Oe extends D.Callable{constructor(q){super(),this.generation_config=q}async _call(q){return this.sample(q)}async sample(q){throw Error("sample should be implemented in subclasses.")}getLogits(q,ee){let de=q.dims.at(-1),Ce=q.data;if(ee===-1)Ce=Ce.slice(-de);else{let xe=ee*de;Ce=Ce.slice(xe,xe+de)}return Ce}randomSelect(q){let ee=0;for(let Ce=0;Ce<q.length;++Ce)ee+=q[Ce];let de=Math.random()*ee;for(let Ce=0;Ce<q.length;++Ce)if(de-=q[Ce],de<=0)return Ce;return 0}static getSampler(q){if(q.do_sample)return new Q(q);if(q.num_beams>1)return new L(q);if(q.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${q.num_return_sequences}.`);return new Pe(q)}}class Pe extends Oe{async sample(q){const ee=(0,$e.max)(q.data)[1];return[[BigInt(ee),0]]}}class Q extends Oe{async sample(q){let ee=q.dims.at(-1);this.generation_config.top_k>0&&(ee=Math.min(this.generation_config.top_k,ee));const[de,Ce]=await(0,ge.topk)(q,ee),xe=(0,$e.softmax)(de.data);return Array.from({length:this.generation_config.num_beams},()=>{const j=this.randomSelect(xe);return[Ce.data[j],Math.log(xe[j])]})}}class L extends Oe{async sample(q){let ee=q.dims.at(-1);this.generation_config.top_k>0&&(ee=Math.min(this.generation_config.top_k,ee));const[de,Ce]=await(0,ge.topk)(q,ee),xe=(0,$e.softmax)(de.data);return Array.from({length:this.generation_config.num_beams},(j,oe)=>[Ce.data[oe],Math.log(xe[oe])])}}},"./src/generation/stopping_criteria.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{EosTokenCriteria:()=>Pe,InterruptableStoppingCriteria:()=>Q,MaxLengthCriteria:()=>Oe,StoppingCriteria:()=>ge,StoppingCriteriaList:()=>$e});var D=N("./src/utils/generic.js");class ge extends D.Callable{_call(W,q){throw Error("StoppingCriteria needs to be subclassed")}}class $e extends D.Callable{constructor(){super(),this.criteria=[]}push(W){this.criteria.push(W)}extend(W){W instanceof $e?W=W.criteria:W instanceof ge&&(W=[W]),this.criteria.push(...W)}_call(W,q){const ee=new Array(W.length).fill(!1);for(const de of this.criteria){const Ce=de(W,q);for(let xe=0;xe<ee.length;++xe)ee[xe]||=Ce[xe]}return ee}[Symbol.iterator](){return this.criteria.values()}}class Oe extends ge{constructor(W,q=null){super(),this.max_length=W,this.max_position_embeddings=q}_call(W){return W.map(q=>q.length>=this.max_length)}}class Pe extends ge{constructor(W){super(),Array.isArray(W)||(W=[W]),this.eos_token_id=W}_call(W,q){return W.map(ee=>{const de=ee.at(-1);return this.eos_token_id.some(Ce=>de==Ce)})}}class Q extends ge{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(W,q){return new Array(W.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{BaseStreamer:()=>Oe,TextStreamer:()=>Q,WhisperTextStreamer:()=>L});var D=N("./src/utils/core.js"),ge=N("./src/tokenizers.js"),$e=N("./src/env.js");class Oe{put(q){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const Pe=$e.apis.IS_PROCESS_AVAILABLE?W=>Ms.stdout.write(W):W=>console.log(W);class Q extends Oe{constructor(q,{skip_prompt:ee=!1,callback_function:de=null,token_callback_function:Ce=null,decode_kwargs:xe={},...j}={}){super(),this.tokenizer=q,this.skip_prompt=ee,this.callback_function=de??Pe,this.token_callback_function=Ce,this.decode_kwargs={...xe,...j},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(q){if(q.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}const ee=q[0];this.token_callback_function?.(ee),this.token_cache=(0,D.mergeArrays)(this.token_cache,ee);const de=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let Ce;de.endsWith(`
`)?(Ce=de.slice(this.print_len),this.token_cache=[],this.print_len=0):de.length>0&&(0,ge.is_chinese_char)(de.charCodeAt(de.length-1))?(Ce=de.slice(this.print_len),this.print_len+=Ce.length):(Ce=de.slice(this.print_len,de.lastIndexOf(" ")+1),this.print_len+=Ce.length),this.on_finalized_text(Ce,!1)}end(){let q;this.token_cache.length>0?(q=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):q="",this.next_tokens_are_prompt=!0,this.on_finalized_text(q,!0)}on_finalized_text(q,ee){q.length>0&&this.callback_function?.(q),ee&&this.callback_function===Pe&&$e.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.(`
`)}}class L extends Q{constructor(q,{skip_prompt:ee=!1,callback_function:de=null,token_callback_function:Ce=null,on_chunk_start:xe=null,on_chunk_end:j=null,on_finalize:oe=null,time_precision:le=.02,skip_special_tokens:U=!0,decode_kwargs:H={}}={}){super(q,{skip_prompt:ee,callback_function:de,token_callback_function:Ce,decode_kwargs:{skip_special_tokens:U,...H}}),this.timestamp_begin=q.timestamp_begin,this.on_chunk_start=xe,this.on_chunk_end=j,this.on_finalize=oe,this.time_precision=le,this.waiting_for_timestamp=!1}put(q){if(q.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const ee=q[0];if(ee.length===1){const de=Number(ee[0])-this.timestamp_begin;if(de>=0){const Ce=de*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(Ce):this.on_chunk_start?.(Ce),this.waiting_for_timestamp=!this.waiting_for_timestamp,q=[[]]}}return super.put(q)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{ASTForAudioClassification:()=>es,ASTModel:()=>Ut,ASTPreTrainedModel:()=>Rn,AlbertForMaskedLM:()=>er,AlbertForQuestionAnswering:()=>mi,AlbertForSequenceClassification:()=>fi,AlbertModel:()=>hi,AlbertPreTrainedModel:()=>Fn,AutoModel:()=>Vd,AutoModelForAudioClassification:()=>tc,AutoModelForAudioFrameClassification:()=>ed,AutoModelForCTC:()=>Ju,AutoModelForCausalLM:()=>Xd,AutoModelForDepthEstimation:()=>rd,AutoModelForDocumentQuestionAnswering:()=>td,AutoModelForImageClassification:()=>Jd,AutoModelForImageFeatureExtraction:()=>oc,AutoModelForImageMatting:()=>nc,AutoModelForImageSegmentation:()=>ec,AutoModelForImageToImage:()=>ic,AutoModelForMaskGeneration:()=>Zu,AutoModelForMaskedLM:()=>Qd,AutoModelForNormalEstimation:()=>sc,AutoModelForObjectDetection:()=>Qu,AutoModelForQuestionAnswering:()=>Yd,AutoModelForSemanticSegmentation:()=>Ic,AutoModelForSeq2SeqLM:()=>Ac,AutoModelForSequenceClassification:()=>Wd,AutoModelForSpeechSeq2Seq:()=>qd,AutoModelForTextToSpectrogram:()=>Hd,AutoModelForTextToWaveform:()=>Kd,AutoModelForTokenClassification:()=>Gd,AutoModelForUniversalSegmentation:()=>fs,AutoModelForVision2Seq:()=>Zd,AutoModelForXVector:()=>rc,AutoModelForZeroShotObjectDetection:()=>Yu,BartForConditionalGeneration:()=>ae,BartForSequenceClassification:()=>he,BartModel:()=>V,BartPretrainedModel:()=>_,BaseModelOutput:()=>gt,BeitForImageClassification:()=>hl,BeitModel:()=>pl,BeitPreTrainedModel:()=>to,BertForMaskedLM:()=>xt,BertForQuestionAnswering:()=>Re,BertForSequenceClassification:()=>Ze,BertForTokenClassification:()=>te,BertModel:()=>yt,BertPreTrainedModel:()=>je,BlenderbotForConditionalGeneration:()=>ur,BlenderbotModel:()=>hr,BlenderbotPreTrainedModel:()=>Tt,BlenderbotSmallForConditionalGeneration:()=>yn,BlenderbotSmallModel:()=>Kr,BlenderbotSmallPreTrainedModel:()=>vr,BloomForCausalLM:()=>Ua,BloomModel:()=>ja,BloomPreTrainedModel:()=>ns,CLIPModel:()=>sa,CLIPPreTrainedModel:()=>ni,CLIPSegForImageSegmentation:()=>ha,CLIPSegModel:()=>pa,CLIPSegPreTrainedModel:()=>Cs,CLIPTextModel:()=>_d,CLIPTextModelWithProjection:()=>bn,CLIPVisionModel:()=>gd,CLIPVisionModelWithProjection:()=>oa,CamembertForMaskedLM:()=>Lr,CamembertForQuestionAnswering:()=>gn,CamembertForSequenceClassification:()=>Cr,CamembertForTokenClassification:()=>Hr,CamembertModel:()=>Er,CamembertPreTrainedModel:()=>Ir,CausalLMOutput:()=>ii,CausalLMOutputWithPast:()=>ac,ChineseCLIPModel:()=>ca,ChineseCLIPPreTrainedModel:()=>da,ClapAudioModelWithProjection:()=>yu,ClapModel:()=>wu,ClapPreTrainedModel:()=>hs,ClapTextModelWithProjection:()=>Ao,CodeGenForCausalLM:()=>va,CodeGenModel:()=>Ma,CodeGenPreTrainedModel:()=>xn,CohereForCausalLM:()=>Aa,CohereModel:()=>Pa,CoherePreTrainedModel:()=>Ls,ConvBertForMaskedLM:()=>A,ConvBertForQuestionAnswering:()=>lt,ConvBertForSequenceClassification:()=>ie,ConvBertForTokenClassification:()=>ve,ConvBertModel:()=>re,ConvBertPreTrainedModel:()=>E,ConvNextForImageClassification:()=>Rl,ConvNextModel:()=>Ll,ConvNextPreTrainedModel:()=>fo,ConvNextV2ForImageClassification:()=>Nl,ConvNextV2Model:()=>mo,ConvNextV2PreTrainedModel:()=>zi,DPTForDepthEstimation:()=>bd,DPTModel:()=>Il,DPTPreTrainedModel:()=>uo,DebertaForMaskedLM:()=>Se,DebertaForQuestionAnswering:()=>Ne,DebertaForSequenceClassification:()=>De,DebertaForTokenClassification:()=>Ie,DebertaModel:()=>Y,DebertaPreTrainedModel:()=>ht,DebertaV2ForMaskedLM:()=>_t,DebertaV2ForQuestionAnswering:()=>d,DebertaV2ForSequenceClassification:()=>kt,DebertaV2ForTokenClassification:()=>M,DebertaV2Model:()=>vt,DebertaV2PreTrainedModel:()=>at,DecisionTransformerModel:()=>Iu,DecisionTransformerPreTrainedModel:()=>Au,DeiTForImageClassification:()=>vl,DeiTModel:()=>Ml,DeiTPreTrainedModel:()=>oo,DepthAnythingForDepthEstimation:()=>Ol,DepthAnythingPreTrainedModel:()=>Fl,DepthProForDepthEstimation:()=>Qn,DepthProPreTrainedModel:()=>Md,DetrForObjectDetection:()=>ml,DetrForSegmentation:()=>os,DetrModel:()=>fl,DetrObjectDetectionOutput:()=>ro,DetrPreTrainedModel:()=>ss,DetrSegmentationOutput:()=>no,Dinov2ForImageClassification:()=>_o,Dinov2Model:()=>jl,Dinov2PreTrainedModel:()=>Di,DistilBertForMaskedLM:()=>Mt,DistilBertForQuestionAnswering:()=>pe,DistilBertForSequenceClassification:()=>B,DistilBertForTokenClassification:()=>G,DistilBertModel:()=>I,DistilBertPreTrainedModel:()=>f,DonutSwinModel:()=>ho,DonutSwinPreTrainedModel:()=>us,EfficientNetForImageClassification:()=>Id,EfficientNetModel:()=>xu,EfficientNetPreTrainedModel:()=>zo,ElectraForMaskedLM:()=>ut,ElectraForQuestionAnswering:()=>Kt,ElectraForSequenceClassification:()=>ft,ElectraForTokenClassification:()=>Wt,ElectraModel:()=>$t,ElectraPreTrainedModel:()=>Ye,EsmForMaskedLM:()=>nr,EsmForSequenceClassification:()=>jt,EsmForTokenClassification:()=>Br,EsmModel:()=>qt,EsmPreTrainedModel:()=>Nt,FalconForCausalLM:()=>gu,FalconModel:()=>_u,FalconPreTrainedModel:()=>ps,FastViTForImageClassification:()=>nl,FastViTModel:()=>rl,FastViTPreTrainedModel:()=>Qs,Florence2ForConditionalGeneration:()=>Es,Florence2PreTrainedModel:()=>ia,GLPNForDepthEstimation:()=>po,GLPNModel:()=>cn,GLPNPreTrainedModel:()=>Un,GPT2LMHeadModel:()=>kn,GPT2Model:()=>fa,GPT2PreTrainedModel:()=>$s,GPTBigCodeForCausalLM:()=>Fs,GPTBigCodeModel:()=>ts,GPTBigCodePreTrainedModel:()=>Is,GPTJForCausalLM:()=>Pn,GPTJModel:()=>wd,GPTJPreTrainedModel:()=>As,GPTNeoForCausalLM:()=>wa,GPTNeoModel:()=>ga,GPTNeoPreTrainedModel:()=>ks,GPTNeoXForCausalLM:()=>ba,GPTNeoXModel:()=>ya,GPTNeoXPreTrainedModel:()=>Ps,Gemma2ForCausalLM:()=>Us,Gemma2Model:()=>js,Gemma2PreTrainedModel:()=>Ns,GemmaForCausalLM:()=>Fa,GemmaModel:()=>Ia,GemmaPreTrainedModel:()=>Rs,GraniteForCausalLM:()=>ka,GraniteModel:()=>Sa,GranitePreTrainedModel:()=>Ds,GroupViTModel:()=>tl,GroupViTPreTrainedModel:()=>el,HieraForImageClassification:()=>El,HieraModel:()=>Tl,HieraPreTrainedModel:()=>xl,HubertForCTC:()=>nu,HubertForSequenceClassification:()=>So,HubertModel:()=>ru,HubertPreTrainedModel:()=>$d,ImageMattingOutput:()=>sd,JAISLMHeadModel:()=>_a,JAISModel:()=>ma,JAISPreTrainedModel:()=>Ss,LlamaForCausalLM:()=>Ta,LlamaModel:()=>xa,LlamaPreTrainedModel:()=>Os,LlavaForConditionalGeneration:()=>gi,LlavaPreTrainedModel:()=>na,LongT5ForConditionalGeneration:()=>Oi,LongT5Model:()=>Fi,LongT5PreTrainedModel:()=>_i,M2M100ForConditionalGeneration:()=>xd,M2M100Model:()=>ql,M2M100PreTrainedModel:()=>bo,MBartForCausalLM:()=>Ot,MBartForConditionalGeneration:()=>St,MBartForSequenceClassification:()=>Ft,MBartModel:()=>et,MBartPreTrainedModel:()=>ze,MPNetForMaskedLM:()=>$i,MPNetForQuestionAnswering:()=>Pi,MPNetForSequenceClassification:()=>Si,MPNetForTokenClassification:()=>ki,MPNetModel:()=>Ci,MPNetPreTrainedModel:()=>Hn,MT5ForConditionalGeneration:()=>_e,MT5Model:()=>Ji,MT5PreTrainedModel:()=>ti,MarianMTModel:()=>Gl,MarianModel:()=>yo,MarianPreTrainedModel:()=>wo,MaskFormerForInstanceSegmentation:()=>co,MaskFormerModel:()=>Yn,MaskFormerPreTrainedModel:()=>jn,MaskedLMOutput:()=>an,MistralForCausalLM:()=>fu,MistralModel:()=>hu,MistralPreTrainedModel:()=>Po,MobileBertForMaskedLM:()=>Rr,MobileBertForQuestionAnswering:()=>Ei,MobileBertForSequenceClassification:()=>ci,MobileBertModel:()=>zn,MobileBertPreTrainedModel:()=>kr,MobileLLMForCausalLM:()=>Ca,MobileLLMModel:()=>Ea,MobileLLMPreTrainedModel:()=>Bs,MobileNetV1ForImageClassification:()=>Cu,MobileNetV1Model:()=>Eu,MobileNetV1PreTrainedModel:()=>Tu,MobileNetV2ForImageClassification:()=>Bd,MobileNetV2Model:()=>$u,MobileNetV2PreTrainedModel:()=>Ro,MobileNetV3ForImageClassification:()=>ku,MobileNetV3Model:()=>Su,MobileNetV3PreTrainedModel:()=>No,MobileNetV4ForImageClassification:()=>Pu,MobileNetV4Model:()=>zd,MobileNetV4PreTrainedModel:()=>jo,MobileViTForImageClassification:()=>sl,MobileViTModel:()=>is,MobileViTPreTrainedModel:()=>Ys,MobileViTV2ForImageClassification:()=>al,MobileViTV2Model:()=>ol,MobileViTV2PreTrainedModel:()=>Zs,ModelOutput:()=>tt,Moondream1ForConditionalGeneration:()=>cr,MptForCausalLM:()=>yd,MptModel:()=>Va,MptPreTrainedModel:()=>qs,MusicgenForCausalLM:()=>Od,MusicgenForConditionalGeneration:()=>Lo,MusicgenModel:()=>Fd,MusicgenPreTrainedModel:()=>Do,NomicBertModel:()=>st,NomicBertPreTrainedModel:()=>rt,OPTForCausalLM:()=>Ga,OPTModel:()=>Wa,OPTPreTrainedModel:()=>Hs,OlmoForCausalLM:()=>An,OlmoModel:()=>$a,OlmoPreTrainedModel:()=>zs,OpenELMForCausalLM:()=>Ws,OpenELMModel:()=>Oa,OpenELMPreTrainedModel:()=>Vs,OwlViTForObjectDetection:()=>ul,OwlViTModel:()=>ll,OwlViTPreTrainedModel:()=>Js,Owlv2ForObjectDetection:()=>cl,Owlv2Model:()=>dl,Owlv2PreTrainedModel:()=>eo,Phi3ForCausalLM:()=>Na,Phi3Model:()=>Ra,Phi3PreTrainedModel:()=>wi,PhiForCausalLM:()=>La,PhiModel:()=>Da,PhiPreTrainedModel:()=>Gs,PreTrainedModel:()=>ce,PretrainedMixin:()=>zr,PvtForImageClassification:()=>Xa,PvtModel:()=>Ka,PvtPreTrainedModel:()=>Ks,PyAnnoteForAudioFrameClassification:()=>Ql,PyAnnoteModel:()=>Xl,PyAnnotePreTrainedModel:()=>vo,QuestionAnsweringModelOutput:()=>mn,Qwen2ForCausalLM:()=>rs,Qwen2Model:()=>za,Qwen2PreTrainedModel:()=>Ba,RTDetrForObjectDetection:()=>gl,RTDetrModel:()=>_l,RTDetrObjectDetectionOutput:()=>wl,RTDetrPreTrainedModel:()=>as,ResNetForImageClassification:()=>$l,ResNetModel:()=>Cl,ResNetPreTrainedModel:()=>Tn,RoFormerForMaskedLM:()=>mt,RoFormerForQuestionAnswering:()=>Ct,RoFormerForSequenceClassification:()=>bt,RoFormerForTokenClassification:()=>Bt,RoFormerModel:()=>Ge,RoFormerPreTrainedModel:()=>Xe,RobertaForMaskedLM:()=>vn,RobertaForQuestionAnswering:()=>Yr,RobertaForSequenceClassification:()=>$n,RobertaForTokenClassification:()=>Fe,RobertaModel:()=>$r,RobertaPreTrainedModel:()=>dr,SamImageSegmentationOutput:()=>Ri,SamModel:()=>go,SamPreTrainedModel:()=>Wl,SapiensForDepthEstimation:()=>zl,SapiensForNormalEstimation:()=>Dl,SapiensForSemanticSegmentation:()=>Bl,SapiensPreTrainedModel:()=>ls,SegformerForImageClassification:()=>Oo,SegformerForSemanticSegmentation:()=>Mu,SegformerModel:()=>Pd,SegformerPreTrainedModel:()=>Fo,Seq2SeqLMOutput:()=>nd,SequenceClassifierOutput:()=>lr,SiglipModel:()=>aa,SiglipPreTrainedModel:()=>Nn,SiglipTextModel:()=>la,SiglipVisionModel:()=>ua,SpeechT5ForSpeechToText:()=>uu,SpeechT5ForTextToSpeech:()=>du,SpeechT5HifiGan:()=>kd,SpeechT5Model:()=>Sd,SpeechT5PreTrainedModel:()=>ko,SqueezeBertForMaskedLM:()=>Cn,SqueezeBertForQuestionAnswering:()=>pi,SqueezeBertForSequenceClassification:()=>Dn,SqueezeBertModel:()=>Kn,SqueezeBertPreTrainedModel:()=>Jn,StableLmForCausalLM:()=>Ad,StableLmModel:()=>vu,StableLmPreTrainedModel:()=>Bo,Starcoder2ForCausalLM:()=>ji,Starcoder2Model:()=>cs,Starcoder2PreTrainedModel:()=>mu,Swin2SRForImageSuperResolution:()=>Al,Swin2SRModel:()=>Pl,Swin2SRPreTrainedModel:()=>lo,SwinForImageClassification:()=>kl,SwinModel:()=>Sl,SwinPreTrainedModel:()=>ao,T5ForConditionalGeneration:()=>Ii,T5Model:()=>Ai,T5PreTrainedModel:()=>ei,TableTransformerForObjectDetection:()=>bl,TableTransformerModel:()=>yl,TableTransformerObjectDetectionOutput:()=>so,TableTransformerPreTrainedModel:()=>io,TokenClassifierOutput:()=>tn,TrOCRForCausalLM:()=>pu,TrOCRPreTrainedModel:()=>cu,UniSpeechForCTC:()=>To,UniSpeechForSequenceClassification:()=>Zl,UniSpeechModel:()=>xo,UniSpeechPreTrainedModel:()=>yi,UniSpeechSatForAudioFrameClassification:()=>eu,UniSpeechSatForCTC:()=>Ed,UniSpeechSatForSequenceClassification:()=>Jl,UniSpeechSatModel:()=>Eo,UniSpeechSatPreTrainedModel:()=>Ni,ViTForImageClassification:()=>Pr,ViTMAEModel:()=>Ya,ViTMAEPreTrainedModel:()=>Qa,ViTMSNForImageClassification:()=>Ja,ViTMSNModel:()=>Za,ViTMSNPreTrainedModel:()=>Xs,ViTModel:()=>Ha,ViTPreTrainedModel:()=>qa,VisionEncoderDecoderModel:()=>Ts,VitMatteForImageMatting:()=>Bi,VitMattePreTrainedModel:()=>il,VitsModel:()=>Io,VitsModelOutput:()=>od,VitsPreTrainedModel:()=>bu,Wav2Vec2BertForCTC:()=>$o,Wav2Vec2BertForSequenceClassification:()=>Cd,Wav2Vec2BertModel:()=>tu,Wav2Vec2BertPreTrainedModel:()=>Co,Wav2Vec2ForAudioFrameClassification:()=>Kl,Wav2Vec2ForCTC:()=>Td,Wav2Vec2ForSequenceClassification:()=>Mo,Wav2Vec2Model:()=>Hl,Wav2Vec2PreTrainedModel:()=>Zn,WavLMForAudioFrameClassification:()=>lu,WavLMForCTC:()=>su,WavLMForSequenceClassification:()=>ou,WavLMForXVector:()=>au,WavLMModel:()=>iu,WavLMPreTrainedModel:()=>bi,WeSpeakerResNetModel:()=>Yl,WeSpeakerResNetPreTrainedModel:()=>ds,WhisperForConditionalGeneration:()=>xs,WhisperModel:()=>Vt,WhisperPreTrainedModel:()=>nt,XLMForQuestionAnswering:()=>Xr,XLMForSequenceClassification:()=>Yt,XLMForTokenClassification:()=>dn,XLMModel:()=>Sn,XLMPreTrainedModel:()=>on,XLMRobertaForMaskedLM:()=>At,XLMRobertaForQuestionAnswering:()=>Xn,XLMRobertaForSequenceClassification:()=>gr,XLMRobertaForTokenClassification:()=>ri,XLMRobertaModel:()=>Fr,XLMRobertaPreTrainedModel:()=>fr,XLMWithLMHeadModel:()=>Ln,XVectorOutput:()=>id,YolosForObjectDetection:()=>Vl,YolosModel:()=>Ul,YolosObjectDetectionOutput:()=>vd,YolosPreTrainedModel:()=>Li});var D=N("./src/configs.js"),ge=N("./src/backends/onnx.js"),$e=N("./src/utils/dtypes.js"),Oe=N("./src/utils/generic.js"),Pe=N("./src/utils/core.js"),Q=N("./src/utils/hub.js"),L=N("./src/utils/constants.js"),W=N("./src/generation/logits_process.js"),q=N("./src/generation/configuration_utils.js"),ee=N("./src/utils/tensor.js"),de=N("./src/utils/maths.js"),Ce=N("./src/generation/stopping_criteria.js"),xe=N("./src/generation/logits_sampler.js"),j=N("./src/env.js"),oe=N("./src/models/whisper/generation_whisper.js"),le=N("./src/models/whisper/common_whisper.js");const U={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7},H=new Map,R=new Map,P=new Map;async function O(g,w,se){const Le=se.config?.["transformers.js_config"]??{};let qe=se.device??Le.device;qe&&typeof qe!="string"&&(qe.hasOwnProperty(w)?qe=qe[w]:(console.warn(`device not specified for "${w}". Using the default device.`),qe=null));const it=qe??(j.apis.IS_NODE_ENV?"cpu":"wasm"),It=(0,ge.deviceToExecutionProviders)(it);let Pt=se.dtype??Le.dtype;typeof Pt!="string"&&(Pt&&Pt.hasOwnProperty(w)?Pt=Pt[w]:(Pt=$e.DEFAULT_DEVICE_DTYPE_MAPPING[it]??$e.DATA_TYPES.fp32,console.warn(`dtype not specified for "${w}". Using the default dtype (${Pt}) for this device (${it}).`)));const Xt=Pt;if($e.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Xt)){if(Xt===$e.DATA_TYPES.fp16&&it==="webgpu"&&!await(0,$e.isWebGpuFp16Supported)())throw new Error(`The device (${it}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Xt}. Should be one of: ${Object.keys($e.DATA_TYPES).join(", ")}`);const mr=Le.kv_cache_dtype?typeof Le.kv_cache_dtype=="string"?Le.kv_cache_dtype:Le.kv_cache_dtype[Xt]??"float32":void 0;if(mr&&!["float32","float16"].includes(mr))throw new Error(`Invalid kv_cache_dtype: ${mr}. Should be one of: float32, float16`);const Nr={dtype:Xt,kv_cache_dtype:mr},Or=$e.DEFAULT_DTYPE_SUFFIX_MAPPING[Xt],xr=`${se.subfolder??""}/${w}${Or}.onnx`,Jt={...se.session_options};Jt.executionProviders??=It;const en=Le.free_dimension_overrides;en?Jt.freeDimensionOverrides??=en:it.startsWith("webnn")&&!Jt.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const wr=(0,Q.getModelFile)(g,xr,!0,se),yr=se.use_external_data_format??Le.use_external_data_format;let jr=[];if(yr&&(yr===!0||typeof yr=="object"&&yr.hasOwnProperty(w)&&yr[w]===!0)){if(j.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const Vr=`${w}${Or}.onnx_data`,rn=`${se.subfolder??""}/${Vr}`;jr.push(new Promise(async(pn,Zr)=>{const nn=await(0,Q.getModelFile)(g,rn,!0,se);pn({path:Vr,data:nn})}))}else Jt.externalData!==void 0&&(jr=Jt.externalData.map(async Vr=>{if(typeof Vr.data=="string"){const rn=await(0,Q.getModelFile)(g,Vr.data,!0,se);return{...Vr,data:rn}}return Vr}));if(jr.length>0&&(Jt.externalData=await Promise.all(jr)),it==="webgpu"){const Vr=(0,D.getKeyValueShapes)(se.config,{prefix:"present"});if(Object.keys(Vr).length>0&&!(0,ge.isONNXProxy)()){const rn={};for(const pn in Vr)rn[pn]="gpu-buffer";Jt.preferredOutputLocation=rn}}return{buffer:await wr,session_options:Jt,session_config:Nr}}async function T(g,w,se){return Object.fromEntries(await Promise.all(Object.keys(w).map(async Le=>{const{buffer:qe,session_options:it,session_config:It}=await O(g,w[Le],se),Pt=await(0,ge.createInferenceSession)(qe,it,It);return[Le,Pt]})))}async function fe(g,w,se){return Object.fromEntries(await Promise.all(Object.keys(w).map(async Le=>{const qe=await(0,Q.getModelJSON)(g,w[Le],!1,se);return[Le,qe]})))}function ye(g,w){const se=Object.create(null),Le=[];for(const It of g.inputNames){const Pt=w[It];if(!(Pt instanceof ee.Tensor)){Le.push(It);continue}se[It]=(0,ge.isONNXProxy)()?Pt.clone():Pt}if(Le.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${Le.join(", ")}.`);const qe=Object.keys(w).length,it=g.inputNames.length;if(qe>it){let It=Object.keys(w).filter(Pt=>!g.inputNames.includes(Pt));console.warn(`WARNING: Too many inputs were provided (${qe} > ${it}). The following inputs will be ignored: "${It.join(", ")}".`)}return se}async function Ee(g,w){const se=ye(g,w);try{const Le=Object.fromEntries(Object.entries(se).map(([it,It])=>[it,It.ort_tensor]));let qe=await g.run(Le);return qe=K(qe),qe}catch(Le){throw console.error(`An error occurred during model execution: "${Le}".`),console.error("Inputs given to model:",se),Le}}function K(g){for(let w in g)(0,ge.isONNXTensor)(g[w])?g[w]=new ee.Tensor(g[w]):typeof g[w]=="object"&&K(g[w]);return g}function Ae(g){if(g instanceof ee.Tensor)return g;if(g.length===0)throw Error("items must be non-empty");if(Array.isArray(g[0])){if(g.some(w=>w.length!==g[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new ee.Tensor("int64",BigInt64Array.from(g.flat().map(w=>BigInt(w))),[g.length,g[0].length])}else return new ee.Tensor("int64",BigInt64Array.from(g.map(w=>BigInt(w))),[1,g.length])}function ot(g){return new ee.Tensor("bool",[g],[1])}async function Qe(g,w){let{encoder_outputs:se,input_ids:Le,decoder_input_ids:qe,...it}=w;if(!se){const Pt=(0,Pe.pick)(w,g.sessions.model.inputNames);se=(await ct(g,Pt)).last_hidden_state}return it.input_ids=qe,it.encoder_hidden_states=se,g.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(it.encoder_attention_mask=w.attention_mask),await Te(g,it,!0)}async function ct(g,w){const se=g.sessions.model,Le=(0,Pe.pick)(w,se.inputNames);if(se.inputNames.includes("inputs_embeds")&&!Le.inputs_embeds){if(!w.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");Le.inputs_embeds=await g.encode_text({input_ids:w.input_ids})}return se.inputNames.includes("token_type_ids")&&!Le.token_type_ids&&(Le.token_type_ids=new ee.Tensor("int64",new BigInt64Array(Le.input_ids.data.length),Le.input_ids.dims)),await Ee(se,Le)}async function Te(g,w,se=!1){const Le=g.sessions[se?"decoder_model_merged":"model"],{past_key_values:qe,...it}=w;Le.inputNames.includes("use_cache_branch")&&(it.use_cache_branch=ot(!!qe)),Le.inputNames.includes("position_ids")&&it.attention_mask&&!it.position_ids&&(it.position_ids=be(it,qe)),g.addPastKeyValues(it,qe);const It=(0,Pe.pick)(it,Le.inputNames);return await Ee(Le,It)}async function X(g,{input_ids:w=null,attention_mask:se=null,pixel_values:Le=null,position_ids:qe=null,inputs_embeds:it=null,past_key_values:It=null,generation_config:Pt=null,logits_processor:Xt=null,...mr}){if(!it){if(it=await g.encode_text({input_ids:w}),Le&&w.dims[1]!==1){const Or=await g.encode_image({pixel_values:Le});({inputs_embeds:it,attention_mask:se}=g._merge_input_ids_with_image_features({image_features:Or,inputs_embeds:it,input_ids:w,attention_mask:se}))}else if(It&&Le&&w.dims[1]===1){const Or=w.dims[1],xr=Object.values(It)[0].dims.at(-2);se=(0,ee.cat)([(0,ee.ones)([w.dims[0],xr]),se.slice(null,[se.dims[1]-Or,se.dims[1]])],1)}}return await Te(g,{inputs_embeds:it,past_key_values:It,attention_mask:se,position_ids:qe,generation_config:Pt,logits_processor:Xt},!0)}function be(g,w=null){const{input_ids:se,inputs_embeds:Le,attention_mask:qe}=g,[it,It]=qe.dims,Pt=new BigInt64Array(qe.data.length);for(let mr=0;mr<it;++mr){const Nr=mr*It;let Or=BigInt(0);for(let xr=0;xr<It;++xr){const Jt=Nr+xr;qe.data[Jt]===0n?Pt[Jt]=BigInt(1):(Pt[Jt]=Or,Or+=qe.data[Jt])}}let Xt=new ee.Tensor("int64",Pt,qe.dims);if(w){const mr=-(se??Le).dims.at(1);Xt=Xt.slice(null,[mr,null])}return Xt}function ke(g,w,se,Le){if(se.past_key_values){const qe=Object.values(se.past_key_values)[0].dims.at(-2),{input_ids:it,attention_mask:It}=se;if(!(It&&It.dims[1]>it.dims[1])){if(qe<it.dims[1])se.input_ids=it.slice(null,[qe,null]);else if(g.config.image_token_index!=null&&it.data.some(Pt=>Pt==g.config.image_token_index)){const Pt=g.config.num_image_tokens;if(!Pt)throw new Error("`num_image_tokens` is missing in the model configuration.");const Xt=it.dims[1]-(qe-Pt);se.input_ids=it.slice(null,[-Xt,null]),se.attention_mask=(0,ee.ones)([1,qe+Xt])}}}return se}function He(g,w,se,Le){return se.past_key_values&&(w=w.map(qe=>[qe.at(-1)])),{...se,decoder_input_ids:Ae(w)}}function pt(g,...w){return g.config.is_encoder_decoder?He(g,...w):ke(g,...w)}class ce extends Oe.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(w,se,Le){super(),this.config=w,this.sessions=se,this.configs=Le;const qe=P.get(this.constructor),it=H.get(qe);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,it){case U.DecoderOnly:this.can_generate=!0,this._forward=Te,this._prepare_inputs_for_generation=ke;break;case U.Seq2Seq:case U.Vision2Seq:case U.Musicgen:this.can_generate=!0,this._forward=Qe,this._prepare_inputs_for_generation=He;break;case U.EncoderDecoder:this._forward=Qe;break;case U.ImageTextToText:this.can_generate=!0,this._forward=X,this._prepare_inputs_for_generation=pt;break;default:this._forward=ct;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const w=[];for(const se of Object.values(this.sessions))se?.handler?.dispose&&w.push(se.handler.dispose());return await Promise.all(w)}static async from_pretrained(w,{progress_callback:se=null,config:Le=null,cache_dir:qe=null,local_files_only:it=!1,revision:It="main",model_file_name:Pt=null,subfolder:Xt="onnx",device:mr=null,dtype:Nr=null,use_external_data_format:Or=null,session_options:xr={}}={}){let Jt={progress_callback:se,config:Le,cache_dir:qe,local_files_only:it,revision:It,model_file_name:Pt,subfolder:Xt,device:mr,dtype:Nr,use_external_data_format:Or,session_options:xr};const en=P.get(this),wr=H.get(en);Le=Jt.config=await D.AutoConfig.from_pretrained(w,Jt);let yr;if(wr===U.DecoderOnly)yr=await Promise.all([T(w,{model:Jt.model_file_name??"model"},Jt),fe(w,{generation_config:"generation_config.json"},Jt)]);else if(wr===U.Seq2Seq||wr===U.Vision2Seq)yr=await Promise.all([T(w,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},Jt),fe(w,{generation_config:"generation_config.json"},Jt)]);else if(wr===U.MaskGeneration)yr=await Promise.all([T(w,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},Jt)]);else if(wr===U.EncoderDecoder)yr=await Promise.all([T(w,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},Jt)]);else if(wr===U.ImageTextToText){const jr={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Le.is_encoder_decoder&&(jr.model="encoder_model"),yr=await Promise.all([T(w,jr,Jt),fe(w,{generation_config:"generation_config.json"},Jt)])}else wr===U.Musicgen?yr=await Promise.all([T(w,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},Jt),fe(w,{generation_config:"generation_config.json"},Jt)]):(wr!==U.EncoderOnly&&console.warn(`Model type for '${en??Le?.model_type}' not found, assuming encoder-only architecture. Please report this at ${L.GITHUB_ISSUE_URL}.`),yr=await Promise.all([T(w,{model:Jt.model_file_name??"model"},Jt)]));return new this(Le,...yr)}async _call(w){return await this.forward(w)}async forward(w){return await this._forward(this,w)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(w){const se=new W.LogitsProcessorList;return w.temperature!==null&&w.temperature!==1&&se.push(new W.TemperatureLogitsWarper(w.temperature)),w.top_k!==null&&w.top_k!==0&&se.push(new W.TopKLogitsWarper(w.top_k)),w.top_p!==null&&w.top_p<1&&se.push(new W.TopPLogitsWarper(w.top_p)),se}_get_logits_processor(w,se,Le=null){const qe=new W.LogitsProcessorList;if(w.repetition_penalty!==null&&w.repetition_penalty!==1&&qe.push(new W.RepetitionPenaltyLogitsProcessor(w.repetition_penalty)),w.no_repeat_ngram_size!==null&&w.no_repeat_ngram_size>0&&qe.push(new W.NoRepeatNGramLogitsProcessor(w.no_repeat_ngram_size)),w.bad_words_ids!==null&&qe.push(new W.NoBadWordsLogitsProcessor(w.bad_words_ids,w.eos_token_id)),w.min_length!==null&&w.eos_token_id!==null&&w.min_length>0&&qe.push(new W.MinLengthLogitsProcessor(w.min_length,w.eos_token_id)),w.min_new_tokens!==null&&w.eos_token_id!==null&&w.min_new_tokens>0&&qe.push(new W.MinNewTokensLengthLogitsProcessor(se,w.min_new_tokens,w.eos_token_id)),w.forced_bos_token_id!==null&&qe.push(new W.ForcedBOSTokenLogitsProcessor(w.forced_bos_token_id)),w.forced_eos_token_id!==null&&qe.push(new W.ForcedEOSTokenLogitsProcessor(w.max_length,w.forced_eos_token_id)),w.begin_suppress_tokens!==null){const it=se>1||w.forced_bos_token_id===null?se:se+1;qe.push(new W.SuppressTokensAtBeginLogitsProcessor(w.begin_suppress_tokens,it))}return w.guidance_scale!==null&&w.guidance_scale>1&&qe.push(new W.ClassifierFreeGuidanceLogitsProcessor(w.guidance_scale)),Le!==null&&qe.extend(Le),qe}_prepare_generation_config(w,se,Le=q.GenerationConfig){const qe={...this.config};for(const It of["decoder","generator","text_config"])It in qe&&Object.assign(qe,qe[It]);const it=new Le(qe);return Object.assign(it,this.generation_config??{}),w&&Object.assign(it,w),se&&Object.assign(it,(0,Pe.pick)(se,Object.getOwnPropertyNames(it))),it}_get_stopping_criteria(w,se=null){const Le=new Ce.StoppingCriteriaList;return w.max_length!==null&&Le.push(new Ce.MaxLengthCriteria(w.max_length,this.config.max_position_embeddings??null)),w.eos_token_id!==null&&Le.push(new Ce.EosTokenCriteria(w.eos_token_id)),se&&Le.extend(se),Le}_validate_model_class(){if(!this.can_generate){const w=[Go,qo,Wo,Uo],se=P.get(this.constructor),Le=new Set,qe=this.config.model_type;for(const It of w){const Pt=It.get(qe);Pt&&Le.add(Pt[0])}let it=`The current model class (${se}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw Le.size>0&&(it+=` Please use the following class instead: ${[...Le].join(", ")}`),Error(it)}}prepare_inputs_for_generation(...w){return this._prepare_inputs_for_generation(this,...w)}_update_model_kwargs_for_generation({generated_input_ids:w,outputs:se,model_inputs:Le,is_encoder_decoder:qe}){return Le.past_key_values=this.getPastKeyValues(se,Le.past_key_values),Le.input_ids=new ee.Tensor("int64",w.flat(),[w.length,1]),qe||(Le.attention_mask=(0,ee.cat)([Le.attention_mask,(0,ee.ones)([Le.attention_mask.dims[0],1])],1)),Le.position_ids=null,Le}_prepare_model_inputs({inputs:w,bos_token_id:se,model_kwargs:Le}){const qe=(0,Pe.pick)(Le,this.forward_params),it=this.main_input_name;if(it in qe){if(w)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else qe[it]=w;return{inputs_tensor:qe[it],model_inputs:qe,model_input_name:it}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:w,model_inputs:se,model_input_name:Le,generation_config:qe}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!se.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:It,pixel_values:Pt,attention_mask:Xt,...mr}=se,Nr=await this._prepare_inputs_embeds(se);se={...mr,...(0,Pe.pick)(Nr,["inputs_embeds","attention_mask"])}}let{last_hidden_state:it}=await ct(this,se);if(qe.guidance_scale!==null&&qe.guidance_scale>1)it=(0,ee.cat)([it,(0,ee.full_like)(it,0)],0),"attention_mask"in se&&(se.attention_mask=(0,ee.cat)([se.attention_mask,(0,ee.zeros_like)(se.attention_mask)],0));else if(se.decoder_input_ids){const It=Ae(se.decoder_input_ids).dims[0];if(It!==it.dims[0]){if(it.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${it.dims[0]}) than the decoder inputs (${It}).`);it=(0,ee.cat)(Array.from({length:It},()=>it),0)}}return se.encoder_outputs=it,se}_prepare_decoder_input_ids_for_generation({batch_size:w,model_input_name:se,model_kwargs:Le,decoder_start_token_id:qe,bos_token_id:it,generation_config:It}){let{decoder_input_ids:Pt,...Xt}=Le;if(!(Pt instanceof ee.Tensor)){if(Pt)Array.isArray(Pt[0])||(Pt=Array.from({length:w},()=>Pt));else if(qe??=it,this.config.model_type==="musicgen")Pt=Array.from({length:w*this.config.decoder.num_codebooks},()=>[qe]);else if(Array.isArray(qe)){if(qe.length!==w)throw new Error(`\`decoder_start_token_id\` expcted to have length ${w} but got ${qe.length}`);Pt=qe}else Pt=Array.from({length:w},()=>[qe]);Pt=Ae(Pt)}return Le.decoder_attention_mask=(0,ee.ones_like)(Pt),{input_ids:Pt,model_inputs:Xt}}async generate({inputs:w=null,generation_config:se=null,logits_processor:Le=null,stopping_criteria:qe=null,streamer:it=null,...It}){this._validate_model_class(),se=this._prepare_generation_config(se,It);let{inputs_tensor:Pt,model_inputs:Xt,model_input_name:mr}=this._prepare_model_inputs({inputs:w,model_kwargs:It});const Nr=this.config.is_encoder_decoder;Nr&&("encoder_outputs"in Xt||(Xt=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Pt,model_inputs:Xt,model_input_name:mr,generation_config:se})));let Or;Nr?{input_ids:Or,model_inputs:Xt}=this._prepare_decoder_input_ids_for_generation({batch_size:Xt[mr].dims.at(0),model_input_name:mr,model_kwargs:Xt,decoder_start_token_id:se.decoder_start_token_id,bos_token_id:se.bos_token_id,generation_config:se}):Or=Xt[mr];let xr=Or.dims.at(-1);se.max_new_tokens!==null&&(se.max_length=xr+se.max_new_tokens);const Jt=this._get_logits_processor(se,xr,Le),en=this._get_stopping_criteria(se,qe),wr=Xt[mr].dims.at(0),yr=xe.LogitsSampler.getSampler(se),jr=new Array(wr).fill(0),ln=Or.tolist();it&&it.put(ln);let Vr,rn={};for(;;){if(Xt=this.prepare_inputs_for_generation(ln,Xt,se),Vr=await this.forward(Xt),se.output_attentions&&se.return_dict_in_generate){const On=this.getAttentions(Vr);for(const Wi in On)Wi in rn||(rn[Wi]=[]),rn[Wi].push(On[Wi])}const nn=Vr.logits.slice(null,-1,null),Xo=Jt(ln,nn),Vi=[];for(let On=0;On<Xo.dims.at(0);++On){const Wi=Xo[On],lc=await yr(Wi);for(const[uc,dc]of lc){const cc=BigInt(uc);jr[On]+=dc,ln[On].push(cc),Vi.push([cc]);break}}if(it&&it.put(Vi),en(ln).every(On=>On))break;Xt=this._update_model_kwargs_for_generation({generated_input_ids:Vi,outputs:Vr,model_inputs:Xt,is_encoder_decoder:Nr})}it&&it.end();const pn=this.getPastKeyValues(Vr,Xt.past_key_values,!0),Zr=new ee.Tensor("int64",ln.flat(),[ln.length,ln[0].length]);if(se.return_dict_in_generate)return{sequences:Zr,past_key_values:pn,...rn};for(const nn of Object.values(Vr))nn.location==="gpu-buffer"&&nn.dispose();return Zr}getPastKeyValues(w,se,Le=!1){const qe=Object.create(null);for(const it in w)if(it.startsWith("present")){const It=it.replace("present","past_key_values"),Pt=it.includes("encoder");if(Pt&&se?qe[It]=se[It]:qe[It]=w[it],se&&(!Pt||Le)){const Xt=se[It];Xt.location==="gpu-buffer"&&Xt.dispose()}}return qe}getAttentions(w){const se={};for(const Le of["cross_attentions","encoder_attentions","decoder_attentions"])for(const qe in w)qe.startsWith(Le)&&(Le in se||(se[Le]=[]),se[Le].push(w[qe]));return se}addPastKeyValues(w,se){if(se)Object.assign(w,se);else{const qe=(this.sessions.decoder_model_merged??this.sessions.model)?.config?.kv_cache_dtype??"float32",it=qe==="float16"?new Uint16Array:[],It=(0,D.getKeyValueShapes)(this.config);for(const Pt in It)w[Pt]=new ee.Tensor(qe,it,It[Pt])}}async encode_image({pixel_values:w}){const se=(await Ee(this.sessions.vision_encoder,{pixel_values:w})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${se.dims[1]}).`),this.config.num_image_tokens=se.dims[1]),se}async encode_text({input_ids:w}){return(await Ee(this.sessions.embed_tokens,{input_ids:w})).inputs_embeds}}class tt{}class gt extends tt{constructor({last_hidden_state:w,hidden_states:se=null,attentions:Le=null}){super(),this.last_hidden_state=w,this.hidden_states=se,this.attentions=Le}}class je extends ce{}class yt extends je{}class xt extends je{async _call(w){return new an(await super._call(w))}}class Ze extends je{async _call(w){return new lr(await super._call(w))}}class te extends je{async _call(w){return new tn(await super._call(w))}}class Re extends je{async _call(w){return new mn(await super._call(w))}}class rt extends ce{}class st extends rt{}class Xe extends ce{}class Ge extends Xe{}class mt extends Xe{async _call(w){return new an(await super._call(w))}}class bt extends Xe{async _call(w){return new lr(await super._call(w))}}class Bt extends Xe{async _call(w){return new tn(await super._call(w))}}class Ct extends Xe{async _call(w){return new mn(await super._call(w))}}class E extends ce{}class re extends E{}class A extends E{async _call(w){return new an(await super._call(w))}}class ie extends E{async _call(w){return new lr(await super._call(w))}}class ve extends E{async _call(w){return new tn(await super._call(w))}}class lt extends E{async _call(w){return new mn(await super._call(w))}}class Ye extends ce{}class $t extends Ye{}class ut extends Ye{async _call(w){return new an(await super._call(w))}}class ft extends Ye{async _call(w){return new lr(await super._call(w))}}class Wt extends Ye{async _call(w){return new tn(await super._call(w))}}class Kt extends Ye{async _call(w){return new mn(await super._call(w))}}class Ir extends ce{}class Er extends Ir{}class Lr extends Ir{async _call(w){return new an(await super._call(w))}}class Cr extends Ir{async _call(w){return new lr(await super._call(w))}}class Hr extends Ir{async _call(w){return new tn(await super._call(w))}}class gn extends Ir{async _call(w){return new mn(await super._call(w))}}class ht extends ce{}class Y extends ht{}class Se extends ht{async _call(w){return new an(await super._call(w))}}class De extends ht{async _call(w){return new lr(await super._call(w))}}class Ie extends ht{async _call(w){return new tn(await super._call(w))}}class Ne extends ht{async _call(w){return new mn(await super._call(w))}}class at extends ce{}class vt extends at{}class _t extends at{async _call(w){return new an(await super._call(w))}}class kt extends at{async _call(w){return new lr(await super._call(w))}}class M extends at{async _call(w){return new tn(await super._call(w))}}class d extends at{async _call(w){return new mn(await super._call(w))}}class f extends ce{}class I extends f{}class B extends f{async _call(w){return new lr(await super._call(w))}}class G extends f{async _call(w){return new tn(await super._call(w))}}class pe extends f{async _call(w){return new mn(await super._call(w))}}class Mt extends f{async _call(w){return new an(await super._call(w))}}class Nt extends ce{}class qt extends Nt{}class nr extends Nt{async _call(w){return new an(await super._call(w))}}class jt extends Nt{async _call(w){return new lr(await super._call(w))}}class Br extends Nt{async _call(w){return new tn(await super._call(w))}}class kr extends ce{}class zn extends kr{}class Rr extends kr{async _call(w){return new an(await super._call(w))}}class ci extends kr{async _call(w){return new lr(await super._call(w))}}class Ei extends kr{async _call(w){return new mn(await super._call(w))}}class Hn extends ce{}class Ci extends Hn{}class $i extends Hn{async _call(w){return new an(await super._call(w))}}class Si extends Hn{async _call(w){return new lr(await super._call(w))}}class ki extends Hn{async _call(w){return new tn(await super._call(w))}}class Pi extends Hn{async _call(w){return new mn(await super._call(w))}}class Jn extends ce{}class Kn extends Jn{}class Cn extends Jn{async _call(w){return new an(await super._call(w))}}class Dn extends Jn{async _call(w){return new lr(await super._call(w))}}class pi extends Jn{async _call(w){return new mn(await super._call(w))}}class Fn extends ce{}class hi extends Fn{}class fi extends Fn{async _call(w){return new lr(await super._call(w))}}class mi extends Fn{async _call(w){return new mn(await super._call(w))}}class er extends Fn{async _call(w){return new an(await super._call(w))}}class ei extends ce{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Ai extends ei{}class Ii extends ei{}class _i extends ce{}class Fi extends _i{}class Oi extends _i{}class ti extends ce{}class Ji extends ti{}class _e extends ti{}class _ extends ce{}class V extends _{}class ae extends _{}class he extends _{async _call(w){return new lr(await super._call(w))}}class ze extends ce{}class et extends ze{}class St extends ze{}class Ft extends ze{async _call(w){return new lr(await super._call(w))}}class Ot extends ze{}class Tt extends ce{}class hr extends Tt{}class ur extends Tt{}class vr extends ce{}class Kr extends vr{}class yn extends vr{}class dr extends ce{}class $r extends dr{}class vn extends dr{async _call(w){return new an(await super._call(w))}}class $n extends dr{async _call(w){return new lr(await super._call(w))}}class Fe extends dr{async _call(w){return new tn(await super._call(w))}}class Yr extends dr{async _call(w){return new mn(await super._call(w))}}class on extends ce{}class Sn extends on{}class Ln extends on{async _call(w){return new an(await super._call(w))}}class Yt extends on{async _call(w){return new lr(await super._call(w))}}class dn extends on{async _call(w){return new tn(await super._call(w))}}class Xr extends on{async _call(w){return new mn(await super._call(w))}}class fr extends ce{}class Fr extends fr{}class At extends fr{async _call(w){return new an(await super._call(w))}}class gr extends fr{async _call(w){return new lr(await super._call(w))}}class ri extends fr{async _call(w){return new tn(await super._call(w))}}class Xn extends fr{async _call(w){return new mn(await super._call(w))}}class Rn extends ce{}class Ut extends Rn{}class es extends Rn{}class nt extends ce{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Vt extends nt{}class xs extends nt{_prepare_generation_config(w,se){return super._prepare_generation_config(w,se,oe.WhisperGenerationConfig)}_retrieve_init_tokens(w){const se=[w.decoder_start_token_id];let Le=w.language;const qe=w.task;if(w.is_multilingual){Le||(console.warn("No language specified - defaulting to English (en)."),Le="en");const It=`<|${(0,le.whisper_language_to_code)(Le)}|>`;se.push(w.lang_to_id[It]),se.push(w.task_to_id[qe??"transcribe"])}else if(Le||qe)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!w.return_timestamps&&w.no_timestamps_token_id&&se.at(-1)!==w.no_timestamps_token_id?se.push(w.no_timestamps_token_id):w.return_timestamps&&se.at(-1)===w.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),se.pop()),se.filter(it=>it!=null)}async generate({inputs:w=null,generation_config:se=null,logits_processor:Le=null,stopping_criteria:qe=null,...it}){se=this._prepare_generation_config(se,it);const It=it.decoder_input_ids??this._retrieve_init_tokens(se);if(se.return_timestamps&&(Le??=new W.LogitsProcessorList,Le.push(new W.WhisperTimeStampLogitsProcessor(se,It))),se.begin_suppress_tokens&&(Le??=new W.LogitsProcessorList,Le.push(new W.SuppressTokensAtBeginLogitsProcessor(se.begin_suppress_tokens,It.length))),se.return_token_timestamps){if(!se.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");se.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),se.output_attentions=!0,se.return_dict_in_generate=!0}const Pt=await super.generate({inputs:w,generation_config:se,logits_processor:Le,decoder_input_ids:It,...it});return se.return_token_timestamps&&(Pt.token_timestamps=this._extract_token_timestamps(Pt,se.alignment_heads,se.num_frames)),Pt}_extract_token_timestamps(w,se,Le=null,qe=.02){if(!w.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");Le==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let it=this.config.median_filter_width;it===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),it=7);const It=w.cross_attentions,Pt=Array.from({length:this.config.decoder_layers},(wr,yr)=>(0,ee.cat)(It.map(jr=>jr[yr]),2)),Xt=(0,ee.stack)(se.map(([wr,yr])=>{if(wr>=Pt.length)throw new Error(`Layer index ${wr} is out of bounds for cross attentions (length ${Pt.length}).`);return Le?Pt[wr].slice(null,yr,null,[0,Le]):Pt[wr].slice(null,yr)})).transpose(1,0,2,3),[mr,Nr]=(0,ee.std_mean)(Xt,-2,0,!0),Or=Xt.clone();for(let wr=0;wr<Or.dims[0];++wr){const yr=Or[wr];for(let jr=0;jr<yr.dims[0];++jr){const ln=yr[jr],Vr=mr[wr][jr][0].data,rn=Nr[wr][jr][0].data;for(let pn=0;pn<ln.dims[0];++pn){let Zr=ln[pn].data;for(let nn=0;nn<Zr.length;++nn)Zr[nn]=(Zr[nn]-rn[nn])/Vr[nn];Zr.set((0,de.medianFilter)(Zr,it))}}}const xr=[(0,ee.mean)(Or,1)],Jt=w.sequences.dims,en=new ee.Tensor("float32",new Float32Array(Jt[0]*Jt[1]),Jt);for(let wr=0;wr<Jt[0];++wr){const yr=xr[wr].neg().squeeze_(0),[jr,ln]=(0,de.dynamic_time_warping)(yr.tolist()),Vr=Array.from({length:jr.length-1},(Zr,nn)=>jr[nn+1]-jr[nn]),rn=(0,Pe.mergeArrays)([1],Vr).map(Zr=>!!Zr),pn=[];for(let Zr=0;Zr<rn.length;++Zr)rn[Zr]&&pn.push(ln[Zr]*qe);en[wr].data.set(pn,1)}return en}}class Ts extends ce{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class na extends ce{forward_params=["input_ids","pixel_values","attention_mask","position_ids","past_key_values"]}class gi extends na{_merge_input_ids_with_image_features({inputs_embeds:w,image_features:se,input_ids:Le,attention_mask:qe}){const it=this.config.image_token_index,Pt=Le.tolist().map(xr=>xr.findIndex(Jt=>Jt==it)),Xt=Pt.every(xr=>xr===-1),mr=Pt.every(xr=>xr!==-1);if(!Xt&&!mr)throw new Error("Every input should contain either 0 or 1 image token.");if(Xt)return{inputs_embeds:w,attention_mask:qe};const Nr=[],Or=[];for(let xr=0;xr<Pt.length;++xr){const Jt=Pt[xr],en=w[xr],wr=se[xr],yr=qe[xr];Nr.push((0,ee.cat)([en.slice([0,Jt]),wr,en.slice([Jt+1,en.dims[0]])],0)),Or.push((0,ee.cat)([yr.slice([0,Jt]),(0,ee.ones)([wr.dims[0]]),yr.slice([Jt+1,yr.dims[0]])],0))}return{inputs_embeds:(0,ee.stack)(Nr,0),attention_mask:(0,ee.stack)(Or,0)}}}class cr extends gi{}class ia extends ce{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class Es extends ia{_merge_input_ids_with_image_features({inputs_embeds:w,image_features:se,input_ids:Le,attention_mask:qe}){return{inputs_embeds:(0,ee.cat)([se,w],1),attention_mask:(0,ee.cat)([(0,ee.ones)(se.dims.slice(0,2)),qe],1)}}async _prepare_inputs_embeds({input_ids:w,pixel_values:se,inputs_embeds:Le,attention_mask:qe}){if(!w&&!se)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let it,It;return w&&(it=await this.encode_text({input_ids:w})),se&&(It=await this.encode_image({pixel_values:se})),it&&It?{inputs_embeds:Le,attention_mask:qe}=this._merge_input_ids_with_image_features({inputs_embeds:it,image_features:It,input_ids:w,attention_mask:qe}):Le=it||It,{inputs_embeds:Le,attention_mask:qe}}async forward({input_ids:w,pixel_values:se,attention_mask:Le,decoder_input_ids:qe,decoder_attention_mask:it,encoder_outputs:It,past_key_values:Pt,inputs_embeds:Xt,decoder_inputs_embeds:mr}){if(Xt||({inputs_embeds:Xt,attention_mask:Le}=await this._prepare_inputs_embeds({input_ids:w,pixel_values:se,inputs_embeds:Xt,attention_mask:Le})),!It){let{last_hidden_state:xr}=await ct(this,{inputs_embeds:Xt,attention_mask:Le});It=xr}if(!mr){if(!qe)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");mr=await this.encode_text({input_ids:qe})}return await Te(this,{inputs_embeds:mr,attention_mask:it,encoder_attention_mask:Le,encoder_hidden_states:It,past_key_values:Pt},!0)}}class ni extends ce{}class sa extends ni{}class _d extends ni{static async from_pretrained(w,se={}){return se.model_file_name??="text_model",super.from_pretrained(w,se)}}class bn extends ni{static async from_pretrained(w,se={}){return se.model_file_name??="text_model",super.from_pretrained(w,se)}}class gd extends ni{static async from_pretrained(w,se={}){return se.model_file_name??="vision_model",super.from_pretrained(w,se)}}class oa extends ni{static async from_pretrained(w,se={}){return se.model_file_name??="vision_model",super.from_pretrained(w,se)}}class Nn extends ce{}class aa extends Nn{}class la extends Nn{static async from_pretrained(w,se={}){return se.model_file_name??="text_model",super.from_pretrained(w,se)}}class ua extends ni{static async from_pretrained(w,se={}){return se.model_file_name??="vision_model",super.from_pretrained(w,se)}}class da extends ce{}class ca extends da{}class Cs extends ce{}class pa extends Cs{}class ha extends Cs{}class $s extends ce{}class fa extends $s{}class kn extends $s{}class Ss extends ce{}class ma extends Ss{}class _a extends Ss{}class ks extends ce{}class ga extends ks{}class wa extends ks{}class Ps extends ce{}class ya extends Ps{}class ba extends Ps{}class As extends ce{}class wd extends As{}class Pn extends As{}class Is extends ce{}class ts extends Is{}class Fs extends Is{}class xn extends ce{}class Ma extends xn{}class va extends xn{}class Os extends ce{}class xa extends Os{}class Ta extends Os{}class Bs extends ce{}class Ea extends Bs{}class Ca extends Bs{}class zs extends ce{}class $a extends zs{}class An extends zs{}class Ds extends ce{}class Sa extends Ds{}class ka extends Ds{}class Ls extends ce{}class Pa extends Ls{}class Aa extends Ls{}class Rs extends ce{}class Ia extends Rs{}class Fa extends Rs{}class Ns extends ce{}class js extends Ns{}class Us extends Ns{}class Vs extends ce{}class Oa extends Vs{}class Ws extends Vs{}class Ba extends ce{}class za extends Ba{}class rs extends Ba{}class Gs extends ce{}class Da extends Gs{}class La extends Gs{}class wi extends ce{}class Ra extends wi{}class Na extends wi{}class ns extends ce{}class ja extends ns{}class Ua extends ns{}class qs extends ce{}class Va extends qs{}class yd extends qs{}class Hs extends ce{}class Wa extends Hs{}class Ga extends Hs{}class qa extends ce{}class Ha extends qa{}class Pr extends qa{async _call(w){return new lr(await super._call(w))}}class Ks extends ce{}class Ka extends Ks{}class Xa extends Ks{async _call(w){return new lr(await super._call(w))}}class Qa extends ce{}class Ya extends Qa{}class Xs extends ce{}class Za extends Xs{}class Ja extends Xs{async _call(w){return new lr(await super._call(w))}}class el extends ce{}class tl extends el{}class Qs extends ce{}class rl extends Qs{}class nl extends Qs{async _call(w){return new lr(await super._call(w))}}class il extends ce{}class Bi extends il{async _call(w){return new sd(await super._call(w))}}class Ys extends ce{}class is extends Ys{}class sl extends Ys{async _call(w){return new lr(await super._call(w))}}class Zs extends ce{}class ol extends Zs{}class al extends Zs{async _call(w){return new lr(await super._call(w))}}class Js extends ce{}class ll extends Js{}class ul extends Js{}class eo extends ce{}class dl extends eo{}class cl extends eo{}class to extends ce{}class pl extends to{}class hl extends to{async _call(w){return new lr(await super._call(w))}}class ss extends ce{}class fl extends ss{}class ml extends ss{async _call(w){return new ro(await super._call(w))}}class os extends ss{async _call(w){return new no(await super._call(w))}}class ro extends tt{constructor({logits:w,pred_boxes:se}){super(),this.logits=w,this.pred_boxes=se}}class no extends tt{constructor({logits:w,pred_boxes:se,pred_masks:Le}){super(),this.logits=w,this.pred_boxes=se,this.pred_masks=Le}}class as extends ce{}class _l extends as{}class gl extends as{async _call(w){return new wl(await super._call(w))}}class wl extends tt{constructor({logits:w,pred_boxes:se}){super(),this.logits=w,this.pred_boxes=se}}class io extends ce{}class yl extends io{}class bl extends io{async _call(w){return new so(await super._call(w))}}class so extends ro{}class oo extends ce{}class Ml extends oo{}class vl extends oo{async _call(w){return new lr(await super._call(w))}}class xl extends ce{}class Tl extends xl{}class El extends xl{async _call(w){return new lr(await super._call(w))}}class Tn extends ce{}class Cl extends Tn{}class $l extends Tn{async _call(w){return new lr(await super._call(w))}}class ao extends ce{}class Sl extends ao{}class kl extends ao{async _call(w){return new lr(await super._call(w))}}class lo extends ce{}class Pl extends lo{}class Al extends lo{}class uo extends ce{}class Il extends uo{}class bd extends uo{}class Fl extends ce{}class Ol extends Fl{}class ls extends ce{}class Bl extends ls{}class zl extends ls{}class Dl extends ls{}class Md extends ce{}class Qn extends Md{}class jn extends ce{}class Yn extends jn{}class co extends jn{}class Un extends ce{}class cn extends Un{}class po extends Un{}class us extends ce{}class ho extends us{}class fo extends ce{}class Ll extends fo{}class Rl extends fo{async _call(w){return new lr(await super._call(w))}}class zi extends ce{}class mo extends zi{}class Nl extends zi{async _call(w){return new lr(await super._call(w))}}class Di extends ce{}class jl extends Di{}class _o extends Di{async _call(w){return new lr(await super._call(w))}}class Li extends ce{}class Ul extends Li{}class Vl extends Li{async _call(w){return new vd(await super._call(w))}}class vd extends tt{constructor({logits:w,pred_boxes:se}){super(),this.logits=w,this.pred_boxes=se}}class Wl extends ce{}class go extends Wl{async get_image_embeddings({pixel_values:w}){return await ct(this,{pixel_values:w})}async forward(w){if((!w.image_embeddings||!w.image_positional_embeddings)&&(w={...w,...await this.get_image_embeddings(w)}),!w.input_labels&&w.input_points){const Le=w.input_points.dims.slice(0,-1),qe=Le.reduce((it,It)=>it*It,1);w.input_labels=new ee.Tensor("int64",new BigInt64Array(qe).fill(1n),Le)}const se={image_embeddings:w.image_embeddings,image_positional_embeddings:w.image_positional_embeddings};return w.input_points&&(se.input_points=w.input_points),w.input_labels&&(se.input_labels=w.input_labels),w.input_boxes&&(se.input_boxes=w.input_boxes),await Ee(this.sessions.prompt_encoder_mask_decoder,se)}async _call(w){return new Ri(await super._call(w))}}class Ri extends tt{constructor({iou_scores:w,pred_masks:se}){super(),this.iou_scores=w,this.pred_masks=se}}class wo extends ce{}class yo extends wo{}class Gl extends wo{}class bo extends ce{}class ql extends bo{}class xd extends bo{}class Zn extends ce{}class Hl extends Zn{}class Td extends Zn{async _call(w){return new ii(await super._call(w))}}class Mo extends Zn{async _call(w){return new lr(await super._call(w))}}class Kl extends Zn{async _call(w){return new tn(await super._call(w))}}class vo extends ce{}class Xl extends vo{}class Ql extends vo{async _call(w){return new tn(await super._call(w))}}class ds extends ce{}class Yl extends ds{}class yi extends ce{}class xo extends yi{}class To extends yi{async _call(w){return new ii(await super._call(w))}}class Zl extends yi{async _call(w){return new lr(await super._call(w))}}class Ni extends ce{}class Eo extends Ni{}class Ed extends Ni{async _call(w){return new ii(await super._call(w))}}class Jl extends Ni{async _call(w){return new lr(await super._call(w))}}class eu extends Ni{async _call(w){return new tn(await super._call(w))}}class Co extends ce{}class tu extends Co{}class $o extends Co{async _call(w){return new ii(await super._call(w))}}class Cd extends Co{async _call(w){return new lr(await super._call(w))}}class $d extends ce{}class ru extends Zn{}class nu extends Zn{async _call(w){return new ii(await super._call(w))}}class So extends Zn{async _call(w){return new lr(await super._call(w))}}class bi extends ce{}class iu extends bi{}class su extends bi{async _call(w){return new ii(await super._call(w))}}class ou extends bi{async _call(w){return new lr(await super._call(w))}}class au extends bi{async _call(w){return new id(await super._call(w))}}class lu extends bi{async _call(w){return new tn(await super._call(w))}}class ko extends ce{}class Sd extends ko{}class uu extends ko{}class du extends ko{async generate_speech(w,se,{threshold:Le=.5,minlenratio:qe=0,maxlenratio:it=20,vocoder:It=null}={}){const Pt={input_ids:w},{encoder_outputs:Xt,encoder_attention_mask:mr}=await ct(this,Pt),Nr=Xt.dims[1]/this.config.reduction_factor,Or=Math.floor(Nr*it),xr=Math.floor(Nr*qe),Jt=this.config.num_mel_bins;let en=[],wr=null,yr=null,jr=0;for(;;){++jr;const rn=ot(!!yr);let pn;yr?pn=yr.output_sequence_out:pn=new ee.Tensor("float32",new Float32Array(Jt),[1,1,Jt]);let Zr={use_cache_branch:rn,output_sequence:pn,encoder_attention_mask:mr,speaker_embeddings:se,encoder_hidden_states:Xt};this.addPastKeyValues(Zr,wr),yr=await Ee(this.sessions.decoder_model_merged,Zr),wr=this.getPastKeyValues(yr,wr);const{prob:nn,spectrum:Xo}=yr;if(en.push(Xo),jr>=xr&&(Array.from(nn.data).filter(Vi=>Vi>=Le).length>0||jr>=Or))break}const ln=(0,ee.cat)(en),{waveform:Vr}=await Ee(It.sessions.model,{spectrogram:ln});return{spectrogram:ln,waveform:Vr}}}class kd extends ce{main_input_name="spectrogram"}class cu extends ce{}class pu extends cu{}class Po extends ce{}class hu extends Po{}class fu extends Po{}class mu extends ce{}class cs extends mu{}class ji extends mu{}class ps extends ce{}class _u extends ps{}class gu extends ps{}class hs extends ce{}class wu extends hs{}class Ao extends hs{static async from_pretrained(w,se={}){return se.model_file_name??="text_model",super.from_pretrained(w,se)}}class yu extends hs{static async from_pretrained(w,se={}){return se.model_file_name??="audio_model",super.from_pretrained(w,se)}}class bu extends ce{}class Io extends bu{async _call(w){return new od(await super._call(w))}}class Fo extends ce{}class Pd extends Fo{}class Oo extends Fo{}class Mu extends Fo{}class Bo extends ce{}class vu extends Bo{}class Ad extends Bo{}class zo extends ce{}class xu extends zo{}class Id extends zo{async _call(w){return new lr(await super._call(w))}}class Do extends ce{}class Fd extends Do{}class Od extends Do{}class Lo extends ce{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(w){const[se,Le]=w.dims,qe=this.config.decoder.num_codebooks,it=Le-qe;let It=0;for(let mr=0;mr<w.size;++mr){if(w.data[mr]===this.config.decoder.pad_token_id)continue;const Nr=mr%Le,Or=Math.floor(mr/Le)%qe,xr=Nr-Or;xr>0&&xr<=it&&(w.data[It++]=w.data[mr])}const Pt=Math.floor(se/qe),Xt=It/(Pt*qe);return new ee.Tensor(w.type,w.data.slice(0,It),[Pt,qe,Xt])}prepare_inputs_for_generation(w,se,Le){let qe=structuredClone(w);for(let It=0;It<qe.length;++It)for(let Pt=0;Pt<qe[It].length;++Pt)It%this.config.decoder.num_codebooks>=Pt&&(qe[It][Pt]=BigInt(this.config.decoder.pad_token_id));return Le.guidance_scale!==null&&Le.guidance_scale>1&&(qe=qe.concat(qe)),super.prepare_inputs_for_generation(qe,se,Le)}async generate(w){const se=await super.generate(w),Le=this._apply_and_filter_by_delay_pattern_mask(se).unsqueeze_(0),{audio_values:qe}=await Ee(this.sessions.encodec_decode,{audio_codes:Le});return qe}}class Tu extends ce{}class Eu extends Tu{}class Cu extends Tu{async _call(w){return new lr(await super._call(w))}}class Ro extends ce{}class $u extends Ro{}class Bd extends Ro{async _call(w){return new lr(await super._call(w))}}class No extends ce{}class Su extends No{}class ku extends No{async _call(w){return new lr(await super._call(w))}}class jo extends ce{}class zd extends jo{}class Pu extends jo{async _call(w){return new lr(await super._call(w))}}class Au extends ce{}class Iu extends Au{}class zr{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(w,{progress_callback:se=null,config:Le=null,cache_dir:qe=null,local_files_only:it=!1,revision:It="main",model_file_name:Pt=null,subfolder:Xt="onnx",device:mr=null,dtype:Nr=null,use_external_data_format:Or=null,session_options:xr={}}={}){const Jt={progress_callback:se,config:Le,cache_dir:qe,local_files_only:it,revision:It,model_file_name:Pt,subfolder:Xt,device:mr,dtype:Nr,use_external_data_format:Or,session_options:xr};if(Jt.config=await D.AutoConfig.from_pretrained(w,Jt),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const en of this.MODEL_CLASS_MAPPINGS){const wr=en.get(Jt.config.model_type);if(wr)return await wr[1].from_pretrained(w,Jt)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${Jt.config.model_type}", attempting to construct from base class.`),await ce.from_pretrained(w,Jt);throw Error(`Unsupported model type: ${Jt.config.model_type}`)}}const Pc=new Map([["bert",["BertModel",yt]],["nomic_bert",["NomicBertModel",st]],["roformer",["RoFormerModel",Ge]],["electra",["ElectraModel",$t]],["esm",["EsmModel",qt]],["convbert",["ConvBertModel",re]],["camembert",["CamembertModel",Er]],["deberta",["DebertaModel",Y]],["deberta-v2",["DebertaV2Model",vt]],["mpnet",["MPNetModel",Ci]],["albert",["AlbertModel",hi]],["distilbert",["DistilBertModel",I]],["roberta",["RobertaModel",$r]],["xlm",["XLMModel",Sn]],["xlm-roberta",["XLMRobertaModel",Fr]],["clap",["ClapModel",wu]],["clip",["CLIPModel",sa]],["clipseg",["CLIPSegModel",pa]],["chinese_clip",["ChineseCLIPModel",ca]],["siglip",["SiglipModel",aa]],["mobilebert",["MobileBertModel",zn]],["squeezebert",["SqueezeBertModel",Kn]],["wav2vec2",["Wav2Vec2Model",Hl]],["wav2vec2-bert",["Wav2Vec2BertModel",tu]],["unispeech",["UniSpeechModel",xo]],["unispeech-sat",["UniSpeechSatModel",Eo]],["hubert",["HubertModel",ru]],["wavlm",["WavLMModel",iu]],["audio-spectrogram-transformer",["ASTModel",Ut]],["vits",["VitsModel",Io]],["pyannote",["PyAnnoteModel",Xl]],["wespeaker-resnet",["WeSpeakerResNetModel",Yl]],["detr",["DetrModel",fl]],["rt_detr",["RTDetrModel",_l]],["table-transformer",["TableTransformerModel",yl]],["vit",["ViTModel",Ha]],["pvt",["PvtModel",Ka]],["vit_msn",["ViTMSNModel",Za]],["vit_mae",["ViTMAEModel",Ya]],["groupvit",["GroupViTModel",tl]],["fastvit",["FastViTModel",rl]],["mobilevit",["MobileViTModel",is]],["mobilevitv2",["MobileViTV2Model",ol]],["owlvit",["OwlViTModel",ll]],["owlv2",["Owlv2Model",dl]],["beit",["BeitModel",pl]],["deit",["DeiTModel",Ml]],["hiera",["HieraModel",Tl]],["convnext",["ConvNextModel",Ll]],["convnextv2",["ConvNextV2Model",mo]],["dinov2",["Dinov2Model",jl]],["resnet",["ResNetModel",Cl]],["swin",["SwinModel",Sl]],["swin2sr",["Swin2SRModel",Pl]],["donut-swin",["DonutSwinModel",ho]],["yolos",["YolosModel",Ul]],["dpt",["DPTModel",Il]],["glpn",["GLPNModel",cn]],["hifigan",["SpeechT5HifiGan",kd]],["efficientnet",["EfficientNetModel",xu]],["decision_transformer",["DecisionTransformerModel",Iu]],["mobilenet_v1",["MobileNetV1Model",Eu]],["mobilenet_v2",["MobileNetV2Model",$u]],["mobilenet_v3",["MobileNetV3Model",Su]],["mobilenet_v4",["MobileNetV4Model",zd]],["maskformer",["MaskFormerModel",Yn]]]),wn=new Map([["t5",["T5Model",Ai]],["longt5",["LongT5Model",Fi]],["mt5",["MT5Model",Ji]],["bart",["BartModel",V]],["mbart",["MBartModel",et]],["marian",["MarianModel",yo]],["whisper",["WhisperModel",Vt]],["m2m_100",["M2M100Model",ql]],["blenderbot",["BlenderbotModel",hr]],["blenderbot-small",["BlenderbotSmallModel",Kr]]]),Dd=new Map([["bloom",["BloomModel",ja]],["jais",["JAISModel",ma]],["gpt2",["GPT2Model",fa]],["gptj",["GPTJModel",wd]],["gpt_bigcode",["GPTBigCodeModel",ts]],["gpt_neo",["GPTNeoModel",ga]],["gpt_neox",["GPTNeoXModel",ya]],["codegen",["CodeGenModel",Ma]],["llama",["LlamaModel",xa]],["olmo",["OlmoModel",$a]],["mobilellm",["MobileLLMModel",Ea]],["granite",["GraniteModel",Sa]],["cohere",["CohereModel",Pa]],["gemma",["GemmaModel",Ia]],["gemma2",["Gemma2Model",js]],["openelm",["OpenELMModel",Oa]],["qwen2",["Qwen2Model",za]],["phi",["PhiModel",Da]],["phi3",["Phi3Model",Ra]],["mpt",["MptModel",Va]],["opt",["OPTModel",Wa]],["mistral",["MistralModel",hu]],["starcoder2",["Starcoder2Model",cs]],["falcon",["FalconModel",_u]],["stablelm",["StableLmModel",vu]]]),Uo=new Map([["speecht5",["SpeechT5ForSpeechToText",uu]],["whisper",["WhisperForConditionalGeneration",xs]]]),Vo=new Map([["speecht5",["SpeechT5ForTextToSpeech",du]]]),Fu=new Map([["vits",["VitsModel",Io]],["musicgen",["MusicgenForConditionalGeneration",Lo]]]),Ui=new Map([["bert",["BertForSequenceClassification",Ze]],["roformer",["RoFormerForSequenceClassification",bt]],["electra",["ElectraForSequenceClassification",ft]],["esm",["EsmForSequenceClassification",jt]],["convbert",["ConvBertForSequenceClassification",ie]],["camembert",["CamembertForSequenceClassification",Cr]],["deberta",["DebertaForSequenceClassification",De]],["deberta-v2",["DebertaV2ForSequenceClassification",kt]],["mpnet",["MPNetForSequenceClassification",Si]],["albert",["AlbertForSequenceClassification",fi]],["distilbert",["DistilBertForSequenceClassification",B]],["roberta",["RobertaForSequenceClassification",$n]],["xlm",["XLMForSequenceClassification",Yt]],["xlm-roberta",["XLMRobertaForSequenceClassification",gr]],["bart",["BartForSequenceClassification",he]],["mbart",["MBartForSequenceClassification",Ft]],["mobilebert",["MobileBertForSequenceClassification",ci]],["squeezebert",["SqueezeBertForSequenceClassification",Dn]]]),Ou=new Map([["bert",["BertForTokenClassification",te]],["roformer",["RoFormerForTokenClassification",Bt]],["electra",["ElectraForTokenClassification",Wt]],["esm",["EsmForTokenClassification",Br]],["convbert",["ConvBertForTokenClassification",ve]],["camembert",["CamembertForTokenClassification",Hr]],["deberta",["DebertaForTokenClassification",Ie]],["deberta-v2",["DebertaV2ForTokenClassification",M]],["mpnet",["MPNetForTokenClassification",ki]],["distilbert",["DistilBertForTokenClassification",G]],["roberta",["RobertaForTokenClassification",Fe]],["xlm",["XLMForTokenClassification",dn]],["xlm-roberta",["XLMRobertaForTokenClassification",ri]]]),Wo=new Map([["t5",["T5ForConditionalGeneration",Ii]],["longt5",["LongT5ForConditionalGeneration",Oi]],["mt5",["MT5ForConditionalGeneration",_e]],["bart",["BartForConditionalGeneration",ae]],["mbart",["MBartForConditionalGeneration",St]],["marian",["MarianMTModel",Gl]],["m2m_100",["M2M100ForConditionalGeneration",xd]],["blenderbot",["BlenderbotForConditionalGeneration",ur]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",yn]]]),Go=new Map([["bloom",["BloomForCausalLM",Ua]],["gpt2",["GPT2LMHeadModel",kn]],["jais",["JAISLMHeadModel",_a]],["gptj",["GPTJForCausalLM",Pn]],["gpt_bigcode",["GPTBigCodeForCausalLM",Fs]],["gpt_neo",["GPTNeoForCausalLM",wa]],["gpt_neox",["GPTNeoXForCausalLM",ba]],["codegen",["CodeGenForCausalLM",va]],["llama",["LlamaForCausalLM",Ta]],["olmo",["OlmoForCausalLM",An]],["mobilellm",["MobileLLMForCausalLM",Ca]],["granite",["GraniteForCausalLM",ka]],["cohere",["CohereForCausalLM",Aa]],["gemma",["GemmaForCausalLM",Fa]],["gemma2",["Gemma2ForCausalLM",Us]],["openelm",["OpenELMForCausalLM",Ws]],["qwen2",["Qwen2ForCausalLM",rs]],["phi",["PhiForCausalLM",La]],["phi3",["Phi3ForCausalLM",Na]],["mpt",["MptForCausalLM",yd]],["opt",["OPTForCausalLM",Ga]],["mbart",["MBartForCausalLM",Ot]],["mistral",["MistralForCausalLM",fu]],["starcoder2",["Starcoder2ForCausalLM",ji]],["falcon",["FalconForCausalLM",gu]],["trocr",["TrOCRForCausalLM",pu]],["stablelm",["StableLmForCausalLM",Ad]]]),Bu=new Map([["bert",["BertForMaskedLM",xt]],["roformer",["RoFormerForMaskedLM",mt]],["electra",["ElectraForMaskedLM",ut]],["esm",["EsmForMaskedLM",nr]],["convbert",["ConvBertForMaskedLM",A]],["camembert",["CamembertForMaskedLM",Lr]],["deberta",["DebertaForMaskedLM",Se]],["deberta-v2",["DebertaV2ForMaskedLM",_t]],["mpnet",["MPNetForMaskedLM",$i]],["albert",["AlbertForMaskedLM",er]],["distilbert",["DistilBertForMaskedLM",Mt]],["roberta",["RobertaForMaskedLM",vn]],["xlm",["XLMWithLMHeadModel",Ln]],["xlm-roberta",["XLMRobertaForMaskedLM",At]],["mobilebert",["MobileBertForMaskedLM",Rr]],["squeezebert",["SqueezeBertForMaskedLM",Cn]]]),zu=new Map([["bert",["BertForQuestionAnswering",Re]],["roformer",["RoFormerForQuestionAnswering",Ct]],["electra",["ElectraForQuestionAnswering",Kt]],["convbert",["ConvBertForQuestionAnswering",lt]],["camembert",["CamembertForQuestionAnswering",gn]],["deberta",["DebertaForQuestionAnswering",Ne]],["deberta-v2",["DebertaV2ForQuestionAnswering",d]],["mpnet",["MPNetForQuestionAnswering",Pi]],["albert",["AlbertForQuestionAnswering",mi]],["distilbert",["DistilBertForQuestionAnswering",pe]],["roberta",["RobertaForQuestionAnswering",Yr]],["xlm",["XLMForQuestionAnswering",Xr]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Xn]],["mobilebert",["MobileBertForQuestionAnswering",Ei]],["squeezebert",["SqueezeBertForQuestionAnswering",pi]]]),qo=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Ts]]]),Du=new Map([["llava",["LlavaForConditionalGeneration",gi]],["moondream1",["Moondream1ForConditionalGeneration",cr]],["florence2",["Florence2ForConditionalGeneration",Es]]]),Ld=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Ts]]]),Lu=new Map([["vit",["ViTForImageClassification",Pr]],["pvt",["PvtForImageClassification",Xa]],["vit_msn",["ViTMSNForImageClassification",Ja]],["fastvit",["FastViTForImageClassification",nl]],["mobilevit",["MobileViTForImageClassification",sl]],["mobilevitv2",["MobileViTV2ForImageClassification",al]],["beit",["BeitForImageClassification",hl]],["deit",["DeiTForImageClassification",vl]],["hiera",["HieraForImageClassification",El]],["convnext",["ConvNextForImageClassification",Rl]],["convnextv2",["ConvNextV2ForImageClassification",Nl]],["dinov2",["Dinov2ForImageClassification",_o]],["resnet",["ResNetForImageClassification",$l]],["swin",["SwinForImageClassification",kl]],["segformer",["SegformerForImageClassification",Oo]],["efficientnet",["EfficientNetForImageClassification",Id]],["mobilenet_v1",["MobileNetV1ForImageClassification",Cu]],["mobilenet_v2",["MobileNetV2ForImageClassification",Bd]],["mobilenet_v3",["MobileNetV3ForImageClassification",ku]],["mobilenet_v4",["MobileNetV4ForImageClassification",Pu]]]),Ru=new Map([["detr",["DetrForObjectDetection",ml]],["rt_detr",["RTDetrForObjectDetection",gl]],["table-transformer",["TableTransformerForObjectDetection",bl]],["yolos",["YolosForObjectDetection",Vl]]]),Nu=new Map([["owlvit",["OwlViTForObjectDetection",ul]],["owlv2",["Owlv2ForObjectDetection",cl]]]),ju=new Map([["detr",["DetrForSegmentation",os]],["clipseg",["CLIPSegForImageSegmentation",ha]]]),Ho=new Map([["segformer",["SegformerForSemanticSegmentation",Mu]],["sapiens",["SapiensForSemanticSegmentation",Bl]]]),Uu=new Map([["detr",["DetrForSegmentation",os]],["maskformer",["MaskFormerForInstanceSegmentation",co]]]),Rd=new Map([["sam",["SamModel",go]]]),Ko=new Map([["wav2vec2",["Wav2Vec2ForCTC",Td]],["wav2vec2-bert",["Wav2Vec2BertForCTC",$o]],["unispeech",["UniSpeechForCTC",To]],["unispeech-sat",["UniSpeechSatForCTC",Ed]],["wavlm",["WavLMForCTC",su]],["hubert",["HubertForCTC",nu]]]),Vu=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Mo]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Cd]],["unispeech",["UniSpeechForSequenceClassification",Zl]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Jl]],["wavlm",["WavLMForSequenceClassification",ou]],["hubert",["HubertForSequenceClassification",So]],["audio-spectrogram-transformer",["ASTForAudioClassification",es]]]),Wu=new Map([["wavlm",["WavLMForXVector",au]]]),Gu=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",eu]],["wavlm",["WavLMForAudioFrameClassification",lu]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Kl]],["pyannote",["PyAnnoteForAudioFrameClassification",Ql]]]),Nd=new Map([["vitmatte",["VitMatteForImageMatting",Bi]]]),qu=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Al]]]),Hu=new Map([["dpt",["DPTForDepthEstimation",bd]],["depth_anything",["DepthAnythingForDepthEstimation",Ol]],["glpn",["GLPNForDepthEstimation",po]],["sapiens",["SapiensForDepthEstimation",zl]],["depth_pro",["DepthProForDepthEstimation",Qn]]]),Ku=new Map([["sapiens",["SapiensForNormalEstimation",Dl]]]),jd=new Map([["clip",["CLIPVisionModelWithProjection",oa]],["siglip",["SiglipVisionModel",ua]]]),Xu=[[Pc,U.EncoderOnly],[wn,U.EncoderDecoder],[Dd,U.DecoderOnly],[Ui,U.EncoderOnly],[Ou,U.EncoderOnly],[Wo,U.Seq2Seq],[Uo,U.Seq2Seq],[Go,U.DecoderOnly],[Bu,U.EncoderOnly],[zu,U.EncoderOnly],[qo,U.Vision2Seq],[Du,U.ImageTextToText],[Lu,U.EncoderOnly],[ju,U.EncoderOnly],[Uu,U.EncoderOnly],[Ho,U.EncoderOnly],[Nd,U.EncoderOnly],[qu,U.EncoderOnly],[Hu,U.EncoderOnly],[Ku,U.EncoderOnly],[Ru,U.EncoderOnly],[Nu,U.EncoderOnly],[Rd,U.MaskGeneration],[Ko,U.EncoderOnly],[Vu,U.EncoderOnly],[Vo,U.Seq2Seq],[Fu,U.EncoderOnly],[Wu,U.EncoderOnly],[Gu,U.EncoderOnly],[jd,U.EncoderOnly]];for(const[g,w]of Xu)for(const[se,Le]of g.values())H.set(se,w),P.set(Le,se),R.set(se,Le);const Ud=[["MusicgenForConditionalGeneration",Lo,U.Musicgen],["CLIPTextModelWithProjection",bn,U.EncoderOnly],["SiglipTextModel",la,U.EncoderOnly],["ClapTextModelWithProjection",Ao,U.EncoderOnly],["ClapAudioModelWithProjection",yu,U.EncoderOnly]];for(const[g,w,se]of Ud)H.set(g,se),P.set(w,g),R.set(g,w);class Vd extends zr{static MODEL_CLASS_MAPPINGS=Xu.map(w=>w[0]);static BASE_IF_FAIL=!0}class Wd extends zr{static MODEL_CLASS_MAPPINGS=[Ui]}class Gd extends zr{static MODEL_CLASS_MAPPINGS=[Ou]}class Ac extends zr{static MODEL_CLASS_MAPPINGS=[Wo]}class qd extends zr{static MODEL_CLASS_MAPPINGS=[Uo]}class Hd extends zr{static MODEL_CLASS_MAPPINGS=[Vo]}class Kd extends zr{static MODEL_CLASS_MAPPINGS=[Fu]}class Xd extends zr{static MODEL_CLASS_MAPPINGS=[Go]}class Qd extends zr{static MODEL_CLASS_MAPPINGS=[Bu]}class Yd extends zr{static MODEL_CLASS_MAPPINGS=[zu]}class Zd extends zr{static MODEL_CLASS_MAPPINGS=[qo]}class Jd extends zr{static MODEL_CLASS_MAPPINGS=[Lu]}class ec extends zr{static MODEL_CLASS_MAPPINGS=[ju]}class Ic extends zr{static MODEL_CLASS_MAPPINGS=[Ho]}class fs extends zr{static MODEL_CLASS_MAPPINGS=[Uu]}class Qu extends zr{static MODEL_CLASS_MAPPINGS=[Ru]}class Yu extends zr{static MODEL_CLASS_MAPPINGS=[Nu]}class Zu extends zr{static MODEL_CLASS_MAPPINGS=[Rd]}class Ju extends zr{static MODEL_CLASS_MAPPINGS=[Ko]}class tc extends zr{static MODEL_CLASS_MAPPINGS=[Vu]}class rc extends zr{static MODEL_CLASS_MAPPINGS=[Wu]}class ed extends zr{static MODEL_CLASS_MAPPINGS=[Gu]}class td extends zr{static MODEL_CLASS_MAPPINGS=[Ld]}class nc extends zr{static MODEL_CLASS_MAPPINGS=[Nd]}class ic extends zr{static MODEL_CLASS_MAPPINGS=[qu]}class rd extends zr{static MODEL_CLASS_MAPPINGS=[Hu]}class sc extends zr{static MODEL_CLASS_MAPPINGS=[Ku]}class oc extends zr{static MODEL_CLASS_MAPPINGS=[jd]}class nd extends tt{constructor({logits:w,past_key_values:se,encoder_outputs:Le,decoder_attentions:qe=null,cross_attentions:it=null}){super(),this.logits=w,this.past_key_values=se,this.encoder_outputs=Le,this.decoder_attentions=qe,this.cross_attentions=it}}class lr extends tt{constructor({logits:w}){super(),this.logits=w}}class id extends tt{constructor({logits:w,embeddings:se}){super(),this.logits=w,this.embeddings=se}}class tn extends tt{constructor({logits:w}){super(),this.logits=w}}class an extends tt{constructor({logits:w}){super(),this.logits=w}}class mn extends tt{constructor({start_logits:w,end_logits:se}){super(),this.start_logits=w,this.end_logits=se}}class ii extends tt{constructor({logits:w}){super(),this.logits=w}}class ac extends tt{constructor({logits:w,past_key_values:se}){super(),this.logits=w,this.past_key_values=se}}class sd extends tt{constructor({alphas:w}){super(),this.alphas=w}}class od extends tt{constructor({waveform:w,spectrogram:se}){super(),this.waveform=w,this.spectrogram=se}}},"./src/models/whisper/common_whisper.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{WHISPER_LANGUAGE_MAPPING:()=>ge,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>$e,whisper_language_to_code:()=>Oe});const D=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],ge=new Map(D),$e=new Map([...D.map(([Pe,Q])=>[Q,Pe]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function Oe(Pe){Pe=Pe.toLowerCase();let Q=$e.get(Pe);if(Q===void 0)if(ge.has(Pe))Q=Pe;else{const W=Pe.length===2?ge.keys():ge.values();throw new Error(`Language "${Pe}" is not supported. Must be one of: ${JSON.stringify(W)}`)}return Q}},"./src/models/whisper/generation_whisper.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{WhisperGenerationConfig:()=>ge});var D=N("./src/generation/configuration_utils.js");class ge extends D.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/ops/registry.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{TensorOpRegistry:()=>Oe});var D=N("./src/backends/onnx.js"),ge=N("./src/utils/tensor.js");const $e=async(Pe,Q,L)=>{const W=await(0,D.createInferenceSession)(new Uint8Array(Pe),Q);return async q=>{const ee=Object.fromEntries(Object.entries(q).map(([Ce,xe])=>[Ce,xe.ort_tensor])),de=await W.run(ee);return Array.isArray(L)?L.map(Ce=>new ge.Tensor(de[Ce])):new ge.Tensor(de[L])}};class Oe{static session_options={};static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=$e([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=$e([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=$e([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=$e([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=$e([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=$e([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}},"./src/pipelines.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{AudioClassificationPipeline:()=>K,AutomaticSpeechRecognitionPipeline:()=>ot,DepthEstimationPipeline:()=>tt,DocumentQuestionAnsweringPipeline:()=>He,FeatureExtractionPipeline:()=>ye,FillMaskPipeline:()=>U,ImageClassificationPipeline:()=>ct,ImageFeatureExtractionPipeline:()=>Ee,ImageSegmentationPipeline:()=>Te,ImageToImagePipeline:()=>ce,ImageToTextPipeline:()=>Qe,ObjectDetectionPipeline:()=>be,Pipeline:()=>xe,QuestionAnsweringPipeline:()=>le,SummarizationPipeline:()=>R,Text2TextGenerationPipeline:()=>H,TextClassificationPipeline:()=>j,TextGenerationPipeline:()=>T,TextToAudioPipeline:()=>pt,TokenClassificationPipeline:()=>oe,TranslationPipeline:()=>P,ZeroShotAudioClassificationPipeline:()=>Ae,ZeroShotClassificationPipeline:()=>fe,ZeroShotImageClassificationPipeline:()=>X,ZeroShotObjectDetectionPipeline:()=>ke,pipeline:()=>yt});var D=N("./src/tokenizers.js"),ge=N("./src/models.js"),$e=N("./src/processors.js"),Oe=N("./src/utils/generic.js"),Pe=N("./src/utils/core.js"),Q=N("./src/utils/maths.js"),L=N("./src/utils/audio.js"),W=N("./src/utils/tensor.js"),q=N("./src/utils/image.js");async function ee(Ze){return Array.isArray(Ze)||(Ze=[Ze]),await Promise.all(Ze.map(te=>q.RawImage.read(te)))}async function de(Ze,te){return Array.isArray(Ze)||(Ze=[Ze]),await Promise.all(Ze.map(Re=>typeof Re=="string"||Re instanceof URL?(0,L.read_audio)(Re,te):Re instanceof Float64Array?new Float32Array(Re):Re))}function Ce(Ze,te){te&&(Ze=Ze.map(Ge=>Ge|0));const[Re,rt,st,Xe]=Ze;return{xmin:Re,ymin:rt,xmax:st,ymax:Xe}}class xe extends Oe.Callable{constructor({task:te,model:Re,tokenizer:rt=null,processor:st=null}){super(),this.task=te,this.model=Re,this.tokenizer=rt,this.processor=st}async dispose(){await this.model.dispose()}}class j extends xe{constructor(te){super(te)}async _call(te,{top_k:Re=1}={}){const rt=this.tokenizer(te,{padding:!0,truncation:!0}),st=await this.model(rt),Xe=this.model.config.problem_type==="multi_label_classification"?bt=>bt.sigmoid():bt=>new W.Tensor("float32",(0,Q.softmax)(bt.data),bt.dims),Ge=this.model.config.id2label,mt=[];for(const bt of st.logits){const Bt=Xe(bt),Ct=await(0,W.topk)(Bt,Re),E=Ct[0].tolist(),A=Ct[1].tolist().map((ie,ve)=>({label:Ge?Ge[ie]:`LABEL_${ie}`,score:E[ve]}));Re===1?mt.push(...A):mt.push(A)}return Array.isArray(te)||Re===1?mt:mt[0]}}class oe extends xe{constructor(te){super(te)}async _call(te,{ignore_labels:Re=["O"]}={}){const rt=Array.isArray(te),st=this.tokenizer(rt?te:[te],{padding:!0,truncation:!0}),Ge=(await this.model(st)).logits,mt=this.model.config.id2label,bt=[];for(let Bt=0;Bt<Ge.dims[0];++Bt){const Ct=st.input_ids[Bt],E=Ge[Bt],re=[];for(let A=0;A<E.dims[0];++A){const ie=E[A],ve=(0,Q.max)(ie.data)[1],lt=mt?mt[ve]:`LABEL_${ve}`;if(Re.includes(lt))continue;const Ye=this.tokenizer.decode([Ct[A].item()],{skip_special_tokens:!0});if(Ye==="")continue;const $t=(0,Q.softmax)(ie.data);re.push({entity:lt,score:$t[ve],index:A,word:Ye})}bt.push(re)}return rt?bt:bt[0]}}class le extends xe{constructor(te){super(te)}async _call(te,Re,{top_k:rt=1}={}){const st=this.tokenizer(te,{text_pair:Re,padding:!0,truncation:!0}),{start_logits:Xe,end_logits:Ge}=await this.model(st),mt=st.input_ids.tolist(),bt=st.attention_mask.tolist(),Bt=this.tokenizer.all_special_ids,Ct=[];for(let E=0;E<Xe.dims[0];++E){const re=mt[E],A=re.findIndex(ut=>ut==this.tokenizer.sep_token_id);bt[E].map((ut,ft)=>ut==1&&(ft===0||ft>A&&Bt.findIndex(Wt=>Wt==re[ft])===-1));const ie=Xe[E].tolist(),ve=Ge[E].tolist();for(let ut=1;ut<ie.length;++ut)(bt[E]==0||ut<=A||Bt.findIndex(ft=>ft==re[ut])!==-1)&&(ie[ut]=-1/0,ve[ut]=-1/0);const lt=(0,Q.softmax)(ie).map((ut,ft)=>[ut,ft]),Ye=(0,Q.softmax)(ve).map((ut,ft)=>[ut,ft]);lt[0][0]=0,Ye[0][0]=0;const $t=(0,Pe.product)(lt,Ye).filter(ut=>ut[0][1]<=ut[1][1]).map(ut=>[ut[0][1],ut[1][1],ut[0][0]*ut[1][0]]).sort((ut,ft)=>ft[2]-ut[2]);for(let ut=0;ut<Math.min($t.length,rt);++ut){const[ft,Wt,Kt]=$t[ut],Ir=re.slice(ft,Wt+1),Er=this.tokenizer.decode(Ir,{skip_special_tokens:!0});Ct.push({answer:Er,score:Kt})}}return rt===1?Ct[0]:Ct}}class U extends xe{constructor(te){super(te)}async _call(te,{top_k:Re=5}={}){const rt=this.tokenizer(te,{padding:!0,truncation:!0}),{logits:st}=await this.model(rt),Xe=[],Ge=rt.input_ids.tolist();for(let mt=0;mt<Ge.length;++mt){const bt=Ge[mt],Bt=bt.findIndex(ie=>ie==this.tokenizer.mask_token_id);if(Bt===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Ct=st[mt][Bt],E=await(0,W.topk)(new W.Tensor("float32",(0,Q.softmax)(Ct.data),Ct.dims),Re),re=E[0].tolist(),A=E[1].tolist();Xe.push(A.map((ie,ve)=>{const lt=bt.slice();return lt[Bt]=ie,{score:re[ve],token:Number(ie),token_str:this.tokenizer.model.vocab[ie],sequence:this.tokenizer.decode(lt,{skip_special_tokens:!0})}}))}return Array.isArray(te)?Xe:Xe[0]}}class H extends xe{_key="generated_text";constructor(te){super(te)}async _call(te,Re={}){Array.isArray(te)||(te=[te]),this.model.config.prefix&&(te=te.map(bt=>this.model.config.prefix+bt));const rt=this.model.config.task_specific_params;rt&&rt[this.task]&&rt[this.task].prefix&&(te=te.map(bt=>rt[this.task].prefix+bt));const st=this.tokenizer,Xe={padding:!0,truncation:!0};let Ge;this instanceof P&&"_build_translation_inputs"in st?Ge=st._build_translation_inputs(te,Xe,Re):Ge=st(te,Xe);const mt=await this.model.generate({...Ge,...Re});return st.batch_decode(mt,{skip_special_tokens:!0}).map(bt=>({[this._key]:bt}))}}class R extends H{_key="summary_text";constructor(te){super(te)}}class P extends H{_key="translation_text";constructor(te){super(te)}}function O(Ze){return Array.isArray(Ze)&&Ze.every(te=>"role"in te&&"content"in te)}class T extends xe{constructor(te){super(te)}async _call(te,Re={}){let rt=!1,st=!1,Xe;if(typeof te=="string")Xe=te=[te];else if(Array.isArray(te)&&te.every(A=>typeof A=="string"))rt=!0,Xe=te;else{if(O(te))te=[te];else if(Array.isArray(te)&&te.every(O))rt=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");st=!0,Xe=te.map(A=>this.tokenizer.apply_chat_template(A,{tokenize:!1,add_generation_prompt:!0}))}const Ge=Re.add_special_tokens??!1,mt=st?!1:Re.return_full_text??!0;this.tokenizer.padding_side="left";const bt=this.tokenizer(Xe,{add_special_tokens:Ge,padding:!0,truncation:!0}),Bt=await this.model.generate({...bt,...Re}),Ct=this.tokenizer.batch_decode(Bt,{skip_special_tokens:!0});let E;!mt&&bt.input_ids.dims.at(-1)>0&&(E=this.tokenizer.batch_decode(bt.input_ids,{skip_special_tokens:!0}).map(A=>A.length));const re=Array.from({length:te.length},A=>[]);for(let A=0;A<Ct.length;++A){const ie=Math.floor(A/Bt.dims[0]*te.length);E&&(Ct[A]=Ct[A].slice(E[ie])),re[ie].push({generated_text:st?[...te[ie],{role:"assistant",content:Ct[A]}]:Ct[A]})}return!rt&&re.length===1?re[0]:re}}class fe extends xe{constructor(te){super(te),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([Re,rt])=>[Re.toLowerCase(),rt])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(te,Re,{hypothesis_template:rt="This example is {}.",multi_label:st=!1}={}){const Xe=Array.isArray(te);Xe||(te=[te]),Array.isArray(Re)||(Re=[Re]);const Ge=Re.map(Bt=>rt.replace("{}",Bt)),mt=st||Re.length===1,bt=[];for(const Bt of te){const Ct=[];for(const A of Ge){const ie=this.tokenizer(Bt,{text_pair:A,padding:!0,truncation:!0}),ve=await this.model(ie);mt?Ct.push([ve.logits.data[this.contradiction_id],ve.logits.data[this.entailment_id]]):Ct.push(ve.logits.data[this.entailment_id])}const re=(mt?Ct.map(A=>(0,Q.softmax)(A)[1]):(0,Q.softmax)(Ct)).map((A,ie)=>[A,ie]).sort((A,ie)=>ie[0]-A[0]);bt.push({sequence:Bt,labels:re.map(A=>Re[A[1]]),scores:re.map(A=>A[0])})}return Xe?bt:bt[0]}}class ye extends xe{constructor(te){super(te)}async _call(te,{pooling:Re="none",normalize:rt=!1,quantize:st=!1,precision:Xe="binary"}={}){const Ge=this.tokenizer(te,{padding:!0,truncation:!0}),mt=await this.model(Ge);let bt=mt.last_hidden_state??mt.logits??mt.token_embeddings;if(Re!=="none")if(Re==="mean")bt=(0,W.mean_pooling)(bt,Ge.attention_mask);else if(Re==="cls")bt=bt.slice(null,0);else throw Error(`Pooling method '${Re}' not supported.`);return rt&&(bt=bt.normalize(2,-1)),st&&(bt=(0,W.quantize_embeddings)(bt,Xe)),bt}}class Ee extends xe{constructor(te){super(te)}async _call(te,{pool:Re=null}={}){const rt=await ee(te),{pixel_values:st}=await this.processor(rt),Xe=await this.model({pixel_values:st});let Ge;if(Re){if(!("pooler_output"in Xe))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Ge=Xe.pooler_output}else Ge=Xe.last_hidden_state??Xe.logits??Xe.image_embeds;return Ge}}class K extends xe{constructor(te){super(te)}async _call(te,{top_k:Re=5}={}){const rt=this.processor.feature_extractor.config.sampling_rate,st=await de(te,rt),Xe=this.model.config.id2label,Ge=[];for(const mt of st){const bt=await this.processor(mt),Ct=(await this.model(bt)).logits[0],E=await(0,W.topk)(new W.Tensor("float32",(0,Q.softmax)(Ct.data),Ct.dims),Re),re=E[0].tolist(),ie=E[1].tolist().map((ve,lt)=>({label:Xe?Xe[ve]:`LABEL_${ve}`,score:re[lt]}));Ge.push(ie)}return Array.isArray(te)?Ge:Ge[0]}}class Ae extends xe{constructor(te){super(te)}async _call(te,Re,{hypothesis_template:rt="This is a sound of {}."}={}){const st=!Array.isArray(te);st&&(te=[te]);const Xe=Re.map(Ct=>rt.replace("{}",Ct)),Ge=this.tokenizer(Xe,{padding:!0,truncation:!0}),mt=this.processor.feature_extractor.config.sampling_rate,bt=await de(te,mt),Bt=[];for(const Ct of bt){const E=await this.processor(Ct),re=await this.model({...Ge,...E}),A=(0,Q.softmax)(re.logits_per_audio.data);Bt.push([...A].map((ie,ve)=>({score:ie,label:Re[ve]})))}return st?Bt[0]:Bt}}class ot extends xe{constructor(te){super(te)}async _call(te,Re={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(te,Re);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(te,Re);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(te,Re){Re.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),Re.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const rt=!Array.isArray(te);rt&&(te=[te]);const st=this.processor.feature_extractor.config.sampling_rate,Xe=await de(te,st),Ge=[];for(const mt of Xe){const bt=await this.processor(mt),Ct=(await this.model(bt)).logits[0],E=[];for(const A of Ct)E.push((0,Q.max)(A.data)[1]);const re=this.tokenizer.decode(E);Ge.push({text:re})}return rt?Ge[0]:Ge}async _call_whisper(te,Re){const rt=Re.return_timestamps??!1,st=Re.chunk_length_s??0,Xe=Re.force_full_sequences??!1;let Ge=Re.stride_length_s??null;const mt={...Re};rt==="word"&&(mt.return_token_timestamps=!0,mt.return_timestamps=!1);const bt=!Array.isArray(te);bt&&(te=[te]);const Bt=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Ct=this.processor.feature_extractor.config.hop_length,E=this.processor.feature_extractor.config.sampling_rate,re=await de(te,E),A=[];for(const ie of re){let ve=[];if(st>0){if(Ge===null)Ge=st/6;else if(st<=Ge)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const $t=E*st,ut=E*Ge,ft=$t-2*ut;let Wt=0;for(;;){const Kt=Wt+$t,Ir=ie.subarray(Wt,Kt),Er=await this.processor(Ir),Lr=Wt===0,Cr=Kt>=ie.length;if(ve.push({stride:[Ir.length,Lr?0:ut,Cr?0:ut],input_features:Er.input_features,is_last:Cr}),Cr)break;Wt+=ft}}else ve=[{stride:[ie.length,0,0],input_features:(await this.processor(ie)).input_features,is_last:!0}];for(const $t of ve){mt.num_frames=Math.floor($t.stride[0]/Ct);const ut=await this.model.generate({inputs:$t.input_features,...mt});rt==="word"?($t.tokens=ut.sequences.tolist()[0],$t.token_timestamps=ut.token_timestamps.tolist()[0].map(ft=>(0,Q.round)(ft,2))):$t.tokens=ut[0].tolist(),$t.stride=$t.stride.map(ft=>ft/E)}const[lt,Ye]=this.tokenizer._decode_asr(ve,{time_precision:Bt,return_timestamps:rt,force_full_sequences:Xe});A.push({text:lt,...Ye})}return bt?A[0]:A}}class Qe extends xe{constructor(te){super(te)}async _call(te,Re={}){const rt=Array.isArray(te),st=await ee(te),{pixel_values:Xe}=await this.processor(st),Ge=[];for(const mt of Xe){mt.dims=[1,...mt.dims];const bt=await this.model.generate({inputs:mt,...Re}),Bt=this.tokenizer.batch_decode(bt,{skip_special_tokens:!0}).map(Ct=>({generated_text:Ct.trim()}));Ge.push(Bt)}return rt?Ge:Ge[0]}}class ct extends xe{constructor(te){super(te)}async _call(te,{top_k:Re=5}={}){const rt=await ee(te),{pixel_values:st}=await this.processor(rt),Xe=await this.model({pixel_values:st}),Ge=this.model.config.id2label,mt=[];for(const bt of Xe.logits){const Bt=await(0,W.topk)(new W.Tensor("float32",(0,Q.softmax)(bt.data),bt.dims),Re),Ct=Bt[0].tolist(),re=Bt[1].tolist().map((A,ie)=>({label:Ge?Ge[A]:`LABEL_${A}`,score:Ct[ie]}));mt.push(re)}return Array.isArray(te)?mt:mt[0]}}class Te extends xe{constructor(te){super(te),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(te,{threshold:Re=.5,mask_threshold:rt=.5,overlap_mask_area_threshold:st=.8,label_ids_to_fuse:Xe=null,target_sizes:Ge=null,subtask:mt=null}={}){if(Array.isArray(te)&&te.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const Bt=await ee(te),Ct=Bt.map(Ye=>[Ye.height,Ye.width]),{pixel_values:E,pixel_mask:re}=await this.processor(Bt),A=await this.model({pixel_values:E,pixel_mask:re});let ie=null;if(mt!==null)ie=this.subtasks_mapping[mt];else for(let[Ye,$t]of Object.entries(this.subtasks_mapping))if($t in this.processor.feature_extractor){ie=this.processor.feature_extractor[$t].bind(this.processor.feature_extractor),mt=Ye;break}const ve=this.model.config.id2label,lt=[];if(mt==="panoptic"||mt==="instance"){const Ye=ie(A,Re,rt,st,Xe,Ge??Ct)[0],$t=Ye.segmentation;for(const ut of Ye.segments_info){const ft=new Uint8ClampedArray($t.data.length);for(let Kt=0;Kt<$t.data.length;++Kt)$t.data[Kt]===ut.id&&(ft[Kt]=255);const Wt=new q.RawImage(ft,$t.dims[1],$t.dims[0],1);lt.push({score:ut.score,label:ve[ut.label_id],mask:Wt})}}else if(mt==="semantic"){const{segmentation:Ye,labels:$t}=ie(A,Ge??Ct)[0];for(const ut of $t){const ft=new Uint8ClampedArray(Ye.data.length);for(let Kt=0;Kt<Ye.data.length;++Kt)Ye.data[Kt]===ut&&(ft[Kt]=255);const Wt=new q.RawImage(ft,Ye.dims[1],Ye.dims[0],1);lt.push({score:null,label:ve[ut],mask:Wt})}}else throw Error(`Subtask ${mt} not supported.`);return lt}}class X extends xe{constructor(te){super(te)}async _call(te,Re,{hypothesis_template:rt="This is a photo of {}"}={}){const st=Array.isArray(te),Xe=await ee(te),Ge=Re.map(re=>rt.replace("{}",re)),mt=this.tokenizer(Ge,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:bt}=await this.processor(Xe),Bt=await this.model({...mt,pixel_values:bt}),Ct=this.model.config.model_type==="siglip"?re=>re.sigmoid().data:re=>(0,Q.softmax)(re.data),E=[];for(const re of Bt.logits_per_image){const ie=[...Ct(re)].map((ve,lt)=>({score:ve,label:Re[lt]}));ie.sort((ve,lt)=>lt.score-ve.score),E.push(ie)}return st?E:E[0]}}class be extends xe{constructor(te){super(te)}async _call(te,{threshold:Re=.9,percentage:rt=!1}={}){const st=Array.isArray(te);if(st&&te.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Xe=await ee(te),Ge=rt?null:Xe.map(A=>[A.height,A.width]),{pixel_values:mt,pixel_mask:bt}=await this.processor(Xe),Bt=await this.model({pixel_values:mt,pixel_mask:bt}),Ct=this.processor.feature_extractor.post_process_object_detection(Bt,Re,Ge),E=this.model.config.id2label,re=Ct.map(A=>A.boxes.map((ie,ve)=>({score:A.scores[ve],label:E[A.classes[ve]],box:Ce(ie,!rt)})));return st?re:re[0]}}class ke extends xe{constructor(te){super(te)}async _call(te,Re,{threshold:rt=.1,top_k:st=null,percentage:Xe=!1}={}){const Ge=Array.isArray(te),mt=await ee(te),bt=this.tokenizer(Re,{padding:!0,truncation:!0}),Bt=await this.processor(mt),Ct=[];for(let E=0;E<mt.length;++E){const re=mt[E],A=Xe?null:[[re.height,re.width]],ie=Bt.pixel_values[E].unsqueeze_(0),ve=await this.model({...bt,pixel_values:ie}),lt=this.processor.feature_extractor.post_process_object_detection(ve,rt,A,!0)[0];let Ye=lt.boxes.map(($t,ut)=>({score:lt.scores[ut],label:Re[lt.classes[ut]],box:Ce($t,!Xe)})).sort(($t,ut)=>ut.score-$t.score);st!==null&&(Ye=Ye.slice(0,st)),Ct.push(Ye)}return Ge?Ct:Ct[0]}}class He extends xe{constructor(te){super(te)}async _call(te,Re,rt={}){const st=(await ee(te))[0],{pixel_values:Xe}=await this.processor(st),Ge=`<s_docvqa><s_question>${Re}</s_question><s_answer>`,mt=this.tokenizer(Ge,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,bt=await this.model.generate({inputs:Xe,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:mt,...rt}),Ct=this.tokenizer.batch_decode(bt)[0].match(/<s_answer>(.*?)<\/s_answer>/);let E=null;return Ct&&Ct.length>=2&&(E=Ct[1].trim()),[{answer:E}]}}class pt extends xe{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(te){super(te),this.vocoder=te.vocoder??null}async _call(te,{speaker_embeddings:Re=null}={}){return this.processor?this._call_text_to_spectrogram(te,{speaker_embeddings:Re}):this._call_text_to_waveform(te)}async _call_text_to_waveform(te){const Re=this.tokenizer(te,{padding:!0,truncation:!0}),{waveform:rt}=await this.model(Re),st=this.model.config.sampling_rate;return{audio:rt.data,sampling_rate:st}}async _call_text_to_spectrogram(te,{speaker_embeddings:Re}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await ge.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof Re=="string"||Re instanceof URL)&&(Re=new Float32Array(await(await fetch(Re)).arrayBuffer())),Re instanceof Float32Array)Re=new W.Tensor("float32",Re,[1,Re.length]);else if(!(Re instanceof W.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:rt}=this.tokenizer(te,{padding:!0,truncation:!0}),{waveform:st}=await this.model.generate_speech(rt,Re,{vocoder:this.vocoder}),Xe=this.processor.feature_extractor.config.sampling_rate;return{audio:st.data,sampling_rate:Xe}}}class ce extends xe{constructor(te){super(te)}async _call(te){const Re=await ee(te),rt=await this.processor(Re),st=await this.model(rt),Xe=[];for(const Ge of st.reconstruction){const mt=Ge.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Xe.push(q.RawImage.fromTensor(mt))}return Xe.length>1?Xe:Xe[0]}}class tt extends xe{constructor(te){super(te)}async _call(te){const Re=await ee(te),rt=await this.processor(Re),{predicted_depth:st}=await this.model(rt),Xe=[];for(let Ge=0;Ge<Re.length;++Ge){const mt=(0,W.interpolate)(st[Ge],Re[Ge].size.reverse(),"bilinear",!1),bt=mt.mul_(255/(0,Q.max)(mt.data)[0]).to("uint8");Xe.push({predicted_depth:st[Ge],depth:q.RawImage.fromTensor(bt)})}return Xe.length>1?Xe:Xe[0]}}const gt=Object.freeze({"text-classification":{tokenizer:D.AutoTokenizer,pipeline:j,model:ge.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:D.AutoTokenizer,pipeline:oe,model:ge.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:D.AutoTokenizer,pipeline:le,model:ge.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:D.AutoTokenizer,pipeline:U,model:ge.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:D.AutoTokenizer,pipeline:R,model:ge.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:D.AutoTokenizer,pipeline:P,model:ge.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:D.AutoTokenizer,pipeline:H,model:ge.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:D.AutoTokenizer,pipeline:T,model:ge.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:D.AutoTokenizer,pipeline:fe,model:ge.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:K,model:ge.AutoModelForAudioClassification,processor:$e.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:D.AutoTokenizer,pipeline:Ae,model:ge.AutoModel,processor:$e.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:D.AutoTokenizer,pipeline:ot,model:[ge.AutoModelForSpeechSeq2Seq,ge.AutoModelForCTC],processor:$e.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:D.AutoTokenizer,pipeline:pt,model:[ge.AutoModelForTextToWaveform,ge.AutoModelForTextToSpectrogram],processor:[$e.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:D.AutoTokenizer,pipeline:Qe,model:ge.AutoModelForVision2Seq,processor:$e.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:ct,model:ge.AutoModelForImageClassification,processor:$e.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Te,model:[ge.AutoModelForImageSegmentation,ge.AutoModelForSemanticSegmentation,ge.AutoModelForUniversalSegmentation],processor:$e.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:D.AutoTokenizer,pipeline:X,model:ge.AutoModel,processor:$e.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:be,model:ge.AutoModelForObjectDetection,processor:$e.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:D.AutoTokenizer,pipeline:ke,model:ge.AutoModelForZeroShotObjectDetection,processor:$e.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:D.AutoTokenizer,pipeline:He,model:ge.AutoModelForDocumentQuestionAnswering,processor:$e.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:ce,model:ge.AutoModelForImageToImage,processor:$e.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:tt,model:ge.AutoModelForDepthEstimation,processor:$e.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:D.AutoTokenizer,pipeline:ye,model:ge.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:$e.AutoProcessor,pipeline:Ee,model:[ge.AutoModelForImageFeatureExtraction,ge.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),je=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function yt(Ze,te=null,{progress_callback:Re=null,config:rt=null,cache_dir:st=null,local_files_only:Xe=!1,revision:Ge="main",device:mt=null,dtype:bt=null,model_file_name:Bt=null,session_options:Ct={}}={}){Ze=je[Ze]??Ze;const E=gt[Ze.split("_",1)[0]];if(!E)throw Error(`Unsupported pipeline: ${Ze}. Must be one of [${Object.keys(gt)}]`);te||(te=E.default.model,console.log(`No model specified. Using default model: "${te}".`));const re={progress_callback:Re,config:rt,cache_dir:st,local_files_only:Xe,revision:Ge,device:mt,dtype:bt,model_file_name:Bt,session_options:Ct},A=new Map([["tokenizer",E.tokenizer],["model",E.model],["processor",E.processor]]),ie=await xt(A,te,re);ie.task=Ze,(0,Pe.dispatchCallback)(Re,{status:"ready",task:Ze,model:te});const ve=E.pipeline;return new ve(ie)}async function xt(Ze,te,Re){const rt=Object.create(null),st=[];for(const[Xe,Ge]of Ze.entries()){if(!Ge)continue;let mt;Array.isArray(Ge)?mt=new Promise(async(bt,Bt)=>{let Ct;for(const E of Ge){if(E===null){bt(null);return}try{bt(await E.from_pretrained(te,Re));return}catch(re){if(re.message?.includes("Unsupported model type"))Ct=re;else if(re.message?.includes("Could not locate file"))Ct=re;else{Bt(re);return}}}Bt(Ct)}):mt=Ge.from_pretrained(te,Re),rt[Xe]=mt,st.push(mt)}await Promise.all(st);for(const[Xe,Ge]of Object.entries(rt))rt[Xe]=await Ge;return rt}},"./src/processors.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{ASTFeatureExtractor:()=>ve,AutoProcessor:()=>gn,BeitFeatureExtractor:()=>Re,BitImageProcessor:()=>ye,CLIPFeatureExtractor:()=>K,CLIPImageProcessor:()=>Ae,ChineseCLIPFeatureExtractor:()=>ot,ClapFeatureExtractor:()=>lt,ConvNextFeatureExtractor:()=>ct,ConvNextImageProcessor:()=>Te,DPTFeatureExtractor:()=>T,DPTImageProcessor:()=>fe,DeiTFeatureExtractor:()=>te,DetrFeatureExtractor:()=>Ge,DonutFeatureExtractor:()=>rt,DonutImageProcessor:()=>st,EfficientNetImageProcessor:()=>ke,FeatureExtractor:()=>U,Florence2Processor:()=>Hr,GLPNFeatureExtractor:()=>Ee,ImageFeatureExtractor:()=>H,MaskFormerFeatureExtractor:()=>mt,MobileNetV1FeatureExtractor:()=>He,MobileNetV2FeatureExtractor:()=>pt,MobileNetV3FeatureExtractor:()=>ce,MobileNetV4FeatureExtractor:()=>tt,MobileViTFeatureExtractor:()=>gt,MobileViTImageProcessor:()=>je,NougatImageProcessor:()=>Xe,OwlViTFeatureExtractor:()=>yt,OwlViTProcessor:()=>Cr,Owlv2ImageProcessor:()=>xt,Processor:()=>ft,PvtImageProcessor:()=>O,PyAnnoteFeatureExtractor:()=>Ye,PyAnnoteProcessor:()=>Er,RTDetrImageProcessor:()=>Ze,SamImageProcessor:()=>Bt,SamProcessor:()=>Wt,SapiensFeatureExtractor:()=>R,SeamlessM4TFeatureExtractor:()=>ie,SegformerFeatureExtractor:()=>P,SiglipImageProcessor:()=>Qe,SpeechT5FeatureExtractor:()=>ut,SpeechT5Processor:()=>Lr,Swin2SRImageProcessor:()=>Ct,ViTFeatureExtractor:()=>X,ViTImageProcessor:()=>be,VitMatteImageProcessor:()=>E,Wav2Vec2FeatureExtractor:()=>A,Wav2Vec2ProcessorWithLM:()=>Ir,WeSpeakerFeatureExtractor:()=>$t,WhisperFeatureExtractor:()=>re,WhisperProcessor:()=>Kt,YolosFeatureExtractor:()=>bt});var D=N("./src/utils/generic.js"),ge=N("./src/utils/core.js"),$e=N("./src/utils/hub.js"),Oe=N("./src/utils/maths.js"),Pe=N("./src/utils/tensor.js");N("./src/utils/image.js");var Q=N("./src/utils/audio.js");function L([ht,Y,Se,De]){return[ht-Se/2,Y-De/2,ht+Se/2,Y+De/2]}function W(ht,Y=.5,Se=null,De=!1){const Ie=ht.logits,Ne=ht.pred_boxes,[at,vt,_t]=Ie.dims;if(Se!==null&&Se.length!==at)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let kt=[];for(let M=0;M<at;++M){let d=Se!==null?Se[M]:null,f={boxes:[],classes:[],scores:[]},I=Ie[M],B=Ne[M];for(let G=0;G<vt;++G){let pe=I[G],Mt=[],Nt;if(De){Nt=pe.sigmoid().data;for(let qt=0;qt<Nt.length;++qt)Nt[qt]>Y&&Mt.push(qt)}else{let qt=(0,Oe.max)(pe.data)[1];if(qt===_t-1||(Nt=(0,Oe.softmax)(pe.data),Nt[qt]<Y))continue;Mt.push(qt)}for(const qt of Mt){let nr=B[G].data;nr=L(nr),d!==null&&(nr=nr.map((jt,Br)=>jt*d[(Br+1)%2])),f.boxes.push(nr),f.classes.push(qt),f.scores.push(Nt[qt])}}kt.push(f)}return kt}function q(ht,Y=null){const Se=ht.logits,De=Se.dims[0];if(Y!==null&&Y.length!==De)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const Ie=[];for(let Ne=0;Ne<De;++Ne){const at=Y!==null?Y[Ne]:null;let vt=Se[Ne];at!==null&&(vt=(0,Pe.interpolate)(vt,at,"bilinear",!1));const[_t,kt]=at??vt.dims.slice(-2),M=new Pe.Tensor("int32",new Int32Array(_t*kt),[_t,kt]),d=vt[0].data,f=M.data;for(let G=1;G<vt.dims[0];++G){const pe=vt[G].data;for(let Mt=0;Mt<pe.length;++Mt)pe[Mt]>d[Mt]&&(d[Mt]=pe[Mt],f[Mt]=G)}const I=new Array(vt.dims[0]);for(let G=0;G<f.length;++G){const pe=f[G];I[pe]=pe}const B=I.filter(G=>G!==void 0);Ie.push({segmentation:M,labels:B})}return Ie}function ee(ht,Y,Se,De){const Ie=[],Ne=[],at=[];for(let vt=0;vt<ht.dims[0];++vt){const _t=ht[vt],kt=Y[vt],M=(0,Oe.max)(_t.data)[1];if(M===De)continue;const f=(0,Oe.softmax)(_t.data)[M];f>Se&&(Ie.push(kt),Ne.push(f),at.push(M))}return[Ie,Ne,at]}function de(ht,Y,Se,De=.5,Ie=.8){const Ne=[];let at=0,vt=0;const _t=Y[Se].data;for(let M=0;M<ht.length;++M)ht[M]===Se&&(Ne.push(M),++at),_t[M]>=De&&++vt;let kt=at>0&&vt>0;return kt&&(kt=at/vt>Ie),[kt,Ne]}function Ce(ht,Y,Se,De,Ie,Ne=null,at=null){const[vt,_t]=at??ht[0].dims,kt=new Pe.Tensor("int32",new Int32Array(vt*_t),[vt,_t]),M=[];if(at!==null)for(let G=0;G<ht.length;++G)ht[G]=(0,Pe.interpolate)(ht[G],at,"bilinear",!1);const d=new Int32Array(ht[0].data.length),f=new Float32Array(ht[0].data.length);for(let G=0;G<ht.length;++G){let pe=Y[G];const Mt=ht[G].data;for(let Nt=0;Nt<Mt.length;++Nt)Mt[Nt]*=pe,Mt[Nt]>f[Nt]&&(d[Nt]=G,f[Nt]=Mt[Nt])}let I=0;const B=kt.data;for(let G=0;G<Se.length;++G){const pe=Se[G],[Mt,Nt]=de(d,ht,G,De,Ie);if(Mt){++I;for(const qt of Nt)B[qt]=I;M.push({id:I,label_id:pe,score:Y[G]})}}return[kt,M]}function xe(ht,Y=.5,Se=.5,De=.8,Ie=null,Ne=null){Ie===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),Ie=new Set);const at=ht.class_queries_logits??ht.logits,_t=(ht.masks_queries_logits??ht.pred_masks).sigmoid();let[kt,M,d]=at.dims;if(d-=1,Ne!==null&&Ne.length!==kt)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let f=[];for(let I=0;I<kt;++I){let B=Ne!==null?Ne[I]:null,G=at[I],pe=_t[I],[Mt,Nt,qt]=ee(G,pe,Y,d);if(qt.length===0){let[Br,kr]=B??pe.dims.slice(-2),zn=new Pe.Tensor("int32",new Int32Array(Br*kr).fill(-1),[Br,kr]);f.push({segmentation:zn,segments_info:[]});continue}let[nr,jt]=Ce(Mt,Nt,qt,Se,De,Ie,B);f.push({segmentation:nr,segments_info:jt})}return f}function j(ht,Y){if(!(ht instanceof Float32Array||ht instanceof Float64Array))throw new Error(`${Y} expects input to be a Float32Array or a Float64Array, but got ${ht?.constructor?.name??typeof ht} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}function oe(ht,Y,Se=0,De=null){const Ie=ht/Y;let Ne=(0,Oe.bankers_round)(Ie)*Y;return De!==null&&Ne>De&&(Ne=Math.floor(Ie)*Y),Ne<Se&&(Ne=Math.ceil(Ie)*Y),Ne}function le([ht,Y],Se){return[Math.max(Math.floor(ht/Se),1)*Se,Math.max(Math.floor(Y/Se),1)*Se]}class U extends D.Callable{constructor(Y){super(),this.config=Y}}class H extends U{constructor(Y){super(Y),this.image_mean=this.config.image_mean??this.config.mean,this.image_std=this.config.image_std??this.config.std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.do_thumbnail=this.config.do_thumbnail,this.size=this.config.size,this.size_divisibility=this.config.size_divisibility??this.config.size_divisor,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.do_crop_margin=this.config.do_crop_margin,this.pad_size=this.config.pad_size,this.do_pad=this.config.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=this.config.do_flip_channel_order??!1}async thumbnail(Y,Se,De=2){const Ie=Y.height,Ne=Y.width,at=Se.height,vt=Se.width;let _t=Math.min(Ie,at),kt=Math.min(Ne,vt);return _t===Ie&&kt===Ne?Y:(Ie>Ne?kt=Math.floor(Ne*_t/Ie):Ne>Ie&&(_t=Math.floor(Ie*kt/Ne)),await Y.resize(kt,_t,{resample:De}))}async crop_margin(Y,Se=200){const De=Y.clone().grayscale(),Ie=(0,Oe.min)(De.data)[0],at=(0,Oe.max)(De.data)[0]-Ie;if(at===0)return Y;const vt=Se/255;let _t=De.width,kt=De.height,M=0,d=0;const f=De.data;for(let I=0;I<De.height;++I){const B=I*De.width;for(let G=0;G<De.width;++G)(f[B+G]-Ie)/at<vt&&(_t=Math.min(_t,G),kt=Math.min(kt,I),M=Math.max(M,G),d=Math.max(d,I))}return Y=await Y.crop([_t,kt,M,d]),Y}pad_image(Y,Se,De,{mode:Ie="constant",center:Ne=!1,constant_values:at=0}={}){const[vt,_t,kt]=Se;let M,d;if(typeof De=="number"?(M=De,d=De):(M=De.width,d=De.height),M!==_t||d!==vt){const f=new Float32Array(M*d*kt);if(Array.isArray(at))for(let G=0;G<f.length;++G)f[G]=at[G%kt];else at!==0&&f.fill(at);const[I,B]=Ne?[Math.floor((M-_t)/2),Math.floor((d-vt)/2)]:[0,0];for(let G=0;G<vt;++G){const pe=(G+B)*M,Mt=G*_t;for(let Nt=0;Nt<_t;++Nt){const qt=(pe+Nt+I)*kt,nr=(Mt+Nt)*kt;for(let jt=0;jt<kt;++jt)f[qt+jt]=Y[nr+jt]}}if(Ie==="symmetric"){if(Ne)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const G=vt-1,pe=_t-1;for(let Mt=0;Mt<d;++Mt){const Nt=Mt*M,qt=(0,ge.calculateReflectOffset)(Mt,G)*_t;for(let nr=0;nr<M;++nr){if(Mt<vt&&nr<_t)continue;const jt=(Nt+nr)*kt,Br=(qt+(0,ge.calculateReflectOffset)(nr,pe))*kt;for(let kr=0;kr<kt;++kr)f[jt+kr]=Y[Br+kr]}}}Y=f,Se=[d,M,kt]}return[Y,Se]}rescale(Y){for(let Se=0;Se<Y.length;++Se)Y[Se]=this.rescale_factor*Y[Se]}get_resize_output_image_size(Y,Se){const[De,Ie]=Y.size;let Ne,at;if(this.do_thumbnail){const{height:vt,width:_t}=Se;Ne=Math.min(vt,_t)}else Number.isInteger(Se)?(Ne=Se,at=this.config.max_size??Ne):Se!==void 0&&(Ne=Se.shortest_edge,at=Se.longest_edge);if(Ne!==void 0||at!==void 0){const vt=Ne===void 0?1:Math.max(Ne/De,Ne/Ie),_t=De*vt,kt=Ie*vt,M=at===void 0?1:Math.min(at/_t,at/kt);let d=Math.floor(Number((_t*M).toFixed(2))),f=Math.floor(Number((kt*M).toFixed(2)));return this.size_divisibility!==void 0&&([d,f]=le([d,f],this.size_divisibility)),[d,f]}else if(Se!==void 0&&Se.width!==void 0&&Se.height!==void 0){let vt=Se.width,_t=Se.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let kt=_t/Ie,M=vt/De;Math.abs(1-M)<Math.abs(1-kt)?kt=M:M=kt,_t=oe(kt*Ie,this.config.ensure_multiple_of),vt=oe(M*De,this.config.ensure_multiple_of)}return[vt,_t]}else{if(this.size_divisibility!==void 0)return le([De,Ie],this.size_divisibility);throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(Se)}`)}}async resize(Y){const[Se,De]=this.get_resize_output_image_size(Y,this.size);return await Y.resize(Se,De,{resample:this.resample})}async preprocess(Y,{do_normalize:Se=null,do_pad:De=null,do_convert_rgb:Ie=null,do_convert_grayscale:Ne=null,do_flip_channel_order:at=null}={}){this.do_crop_margin&&(Y=await this.crop_margin(Y));const[vt,_t]=Y.size;if(Ie??this.do_convert_rgb?Y=Y.rgb():Ne&&(Y=Y.grayscale()),this.do_resize&&(Y=await this.resize(Y)),this.do_thumbnail&&(Y=await this.thumbnail(Y,this.size,this.resample)),this.do_center_crop){let I,B;Number.isInteger(this.crop_size)?(I=this.crop_size,B=this.crop_size):(I=this.crop_size.width,B=this.crop_size.height),Y=await Y.center_crop(I,B)}const kt=[Y.height,Y.width];let M=Float32Array.from(Y.data),d=[Y.height,Y.width,Y.channels];if(this.do_rescale&&this.rescale(M),Se??this.do_normalize){let I=this.image_mean;Array.isArray(this.image_mean)||(I=new Array(Y.channels).fill(I));let B=this.image_std;if(Array.isArray(this.image_std)||(B=new Array(Y.channels).fill(I)),I.length!==Y.channels||B.length!==Y.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${I.length}) and \`image_std\` (${B.length}) must match the number of channels in the image (${Y.channels}).`);for(let G=0;G<M.length;G+=Y.channels)for(let pe=0;pe<Y.channels;++pe)M[G+pe]=(M[G+pe]-I[pe])/B[pe]}if(De??this.do_pad){if(this.pad_size)[M,d]=this.pad_image(M,[Y.height,Y.width,Y.channels],this.pad_size);else if(this.size_divisibility){const[I,B]=le([d[1],d[0]],this.size_divisibility);[M,d]=this.pad_image(M,d,{width:I,height:B})}}if(at??this.do_flip_channel_order){if(d[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let I=0;I<M.length;I+=3){const B=M[I];M[I]=M[I+2],M[I+2]=B}}const f=new Pe.Tensor("float32",M,d).permute(2,0,1);return{original_size:[_t,vt],reshaped_input_size:kt,pixel_values:f}}async _call(Y,...Se){Array.isArray(Y)||(Y=[Y]);const De=await Promise.all(Y.map(Ne=>this.preprocess(Ne)));return{pixel_values:(0,Pe.stack)(De.map(Ne=>Ne.pixel_values),0),original_sizes:De.map(Ne=>Ne.original_size),reshaped_input_sizes:De.map(Ne=>Ne.reshaped_input_size)}}}class R extends H{post_process_semantic_segmentation(...Y){return q(...Y)}}class P extends H{post_process_semantic_segmentation(...Y){return q(...Y)}}class O extends H{}class T extends H{}class fe extends T{}class ye extends H{}class Ee extends H{}class K extends H{}class Ae extends K{}class ot extends H{}class Qe extends H{}class ct extends H{constructor(Y){super(Y),this.crop_pct=this.config.crop_pct??224/256}async resize(Y){const Se=this.size?.shortest_edge;if(Se===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(Se<384){const De=Math.floor(Se/this.crop_pct),[Ie,Ne]=this.get_resize_output_image_size(Y,{shortest_edge:De});Y=await Y.resize(Ie,Ne,{resample:this.resample}),Y=await Y.center_crop(Se,Se)}else Y=await Y.resize(Se,Se,{resample:this.resample});return Y}}class Te extends ct{}class X extends H{}class be extends H{}class ke extends H{constructor(Y){super(Y),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(Se=>Se*Se))}}class He extends H{}class pt extends H{}class ce extends H{}class tt extends H{}class gt extends H{}class je extends gt{}class yt extends H{post_process_object_detection(...Y){return W(...Y)}}class xt extends yt{}class Ze extends H{post_process_object_detection(...Y){return W(...Y)}}class te extends H{}class Re extends H{}class rt extends H{pad_image(Y,Se,De,Ie={}){const[Ne,at,vt]=Se;let _t=this.image_mean;Array.isArray(this.image_mean)||(_t=new Array(vt).fill(_t));let kt=this.image_std;Array.isArray(kt)||(kt=new Array(vt).fill(_t));const M=_t.map((d,f)=>-d/kt[f]);return super.pad_image(Y,Se,De,{center:!0,constant_values:M,...Ie})}}class st extends rt{}class Xe extends rt{}class Ge extends H{async _call(Y){const Se=await super._call(Y),De=[Se.pixel_values.dims[0],64,64],Ie=(0,Pe.full)(De,1n);return{...Se,pixel_mask:Ie}}post_process_object_detection(...Y){return W(...Y)}post_process_panoptic_segmentation(...Y){return xe(...Y)}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class mt extends H{post_process_panoptic_segmentation(...Y){return xe(...Y)}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class bt extends H{post_process_object_detection(...Y){return W(...Y)}}class Bt extends H{reshape_input_points(Y,Se,De,Ie=!1){Y=structuredClone(Y);let Ne=(0,ge.calculateDimensions)(Y);if(Ne.length===3)Ie||(Ne=[1,...Ne]),Y=[Y];else if(Ne.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let at=0;at<Y.length;++at){let vt=Se[at],_t=De[at],kt=[_t[0]/vt[0],_t[1]/vt[1]];for(let M=0;M<Y[at].length;++M)for(let d=0;d<Y[at][M].length;++d)for(let f=0;f<Y[at][M][d].length;++f)Y[at][M][d][f]*=kt[f%2]}return new Pe.Tensor("float32",Float32Array.from(Y.flat(1/0)),Ne)}add_input_labels(Y,Se){let De=(0,ge.calculateDimensions)(Y);if(De.length===2)De=[1,...De],Y=[Y];else if(De.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(De.some((Ie,Ne)=>Ie!==Se.dims[Ne]))throw Error(`The first ${De.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new Pe.Tensor("int64",Y.flat(1/0).map(BigInt),De)}async _call(Y,{input_points:Se=null,input_labels:De=null,input_boxes:Ie=null}={}){const Ne=await super._call(Y);if(Se&&(Ne.input_points=this.reshape_input_points(Se,Ne.original_sizes,Ne.reshaped_input_sizes)),De){if(!Ne.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");Ne.input_labels=this.add_input_labels(De,Ne.input_points)}return Ie&&(Ne.input_boxes=this.reshape_input_points(Ie,Ne.original_sizes,Ne.reshaped_input_sizes,!0)),Ne}async post_process_masks(Y,Se,De,{mask_threshold:Ie=0,binarize:Ne=!0,pad_size:at=null}={}){const vt=[];at=at??this.pad_size;const _t=[at.height,at.width];for(let kt=0;kt<Se.length;++kt){const M=Se[kt],d=De[kt];let f=await(0,Pe.interpolate_4d)(Y[kt],{mode:"bilinear",size:_t});if(f=f.slice(null,null,[0,d[0]],[0,d[1]]),f=await(0,Pe.interpolate_4d)(f,{mode:"bilinear",size:M}),Ne){const I=f.data,B=new Uint8Array(I.length);for(let G=0;G<I.length;++G)I[G]>Ie&&(B[G]=1);f=new Pe.Tensor("bool",B,f.dims)}vt.push(f)}return vt}generate_crop_boxes(Y,Se,{crop_n_layers:De=0,overlap_ratio:Ie=512/1500,points_per_crop:Ne=32,crop_n_points_downscale_factor:at=1}={}){}}class Ct extends H{pad_image(Y,Se,De,Ie={}){const[Ne,at,vt]=Se;return super.pad_image(Y,Se,{width:at+(De-at%De)%De,height:Ne+(De-Ne%De)%De},{mode:"symmetric",center:!1,constant_values:-1,...Ie})}}class E extends H{async _call(Y,Se){Array.isArray(Y)||(Y=[Y]),Array.isArray(Se)||(Se=[Se]);const De=await Promise.all(Y.map(at=>this.preprocess(at))),Ie=await Promise.all(Se.map(at=>this.preprocess(at,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,Pe.stack)(De.map((at,vt)=>(0,Pe.cat)([at.pixel_values,Ie[vt].pixel_values],0)),0),original_sizes:De.map(at=>at.original_size),reshaped_input_sizes:De.map(at=>at.reshaped_input_size)}}}class re extends U{constructor(Y){super(Y),this.config.mel_filters??=(0,Q.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,Q.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(Y){const Se=await(0,Q.spectrogram)(Y,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),De=Se.data,Ie=(0,Oe.max)(De)[0];for(let Ne=0;Ne<De.length;++Ne)De[Ne]=(Math.max(De[Ne],Ie-8)+4)/4;return Se}async _call(Y){j(Y,"WhisperFeatureExtractor");let Se;return Y.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),Se=Y.slice(0,this.config.n_samples)):(Se=new Float32Array(this.config.n_samples),Se.set(Y)),{input_features:(await this._extract_fbank_features(Se)).unsqueeze_(0)}}}class A extends U{_zero_mean_unit_var_norm(Y){const De=Y.reduce((Ne,at)=>Ne+at,0)/Y.length,Ie=Y.reduce((Ne,at)=>Ne+(at-De)**2,0)/Y.length;return Y.map(Ne=>(Ne-De)/Math.sqrt(Ie+1e-7))}async _call(Y){j(Y,"Wav2Vec2FeatureExtractor"),Y instanceof Float64Array&&(Y=new Float32Array(Y));let Se=Y;this.config.do_normalize&&(Se=this._zero_mean_unit_var_norm(Se));const De=[1,Se.length];return{input_values:new Pe.Tensor("float32",Se,De),attention_mask:new Pe.Tensor("int64",new BigInt64Array(Se.length).fill(1n),De)}}}class ie extends U{constructor(Y){super(Y);const Se=this.config.sampling_rate,De=(0,Q.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(Se/2),Se,null,"kaldi",!0);for(let Ie=0;Ie<De.length;++Ie)De[Ie].push(0);this.mel_filters=De,this.window=(0,Q.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(Y,Se){return Y=Y.map(De=>De*32768),(0,Q.spectrogram)(Y,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:Se,transpose:!0})}async _call(Y,{padding:Se=!0,pad_to_multiple_of:De=2,do_normalize_per_mel_bins:Ie=!0,return_attention_mask:Ne=!0}={}){j(Y,"SeamlessM4TFeatureExtractor");let at=await this._extract_fbank_features(Y,this.config.max_length);if(Ie){const[B,G]=at.dims,pe=at.data;for(let Mt=0;Mt<G;++Mt){let Nt=0;for(let Br=0;Br<B;++Br)Nt+=pe[Br*G+Mt];const qt=Nt/B;let nr=0;for(let Br=0;Br<B;++Br)nr+=(pe[Br*G+Mt]-qt)**2;nr/=B-1;const jt=Math.sqrt(nr+1e-7);for(let Br=0;Br<B;++Br){const kr=Br*G+Mt;pe[kr]=(pe[kr]-qt)/jt}}}let vt;if(Se){const[B,G]=at.dims,pe=at.data,Mt=B%De;if(Mt>0){const Nt=new Float32Array(G*(B+Mt));Nt.set(pe),Nt.fill(this.config.padding_value,pe.length);const qt=B+Mt;at=new Pe.Tensor(at.type,Nt,[qt,G]),Ne&&(vt=new Pe.Tensor("int64",new BigInt64Array(qt),[1,qt]),vt.data.fill(1n,0,B))}}const[_t,kt]=at.dims,M=this.config.stride;if(_t%M!==0)throw new Error(`The number of frames (${_t}) must be a multiple of the stride (${M}).`);const f=at.view(1,Math.floor(_t/M),kt*M),I={input_features:f};if(Ne){const B=f.dims[1],G=new BigInt64Array(B);if(vt){const pe=vt.data;for(let Mt=1,Nt=0;Mt<_t;Mt+=M,++Nt)G[Nt]=pe[Mt]}else G.fill(1n);I.attention_mask=new Pe.Tensor("int64",G,[1,B])}return I}}class ve extends U{constructor(Y){super(Y);const Se=this.config.sampling_rate,De=(0,Q.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(Se/2),Se,null,"kaldi",!0);for(let Ie=0;Ie<De.length;++Ie)De[Ie].push(0);this.mel_filters=De,this.window=(0,Q.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(Y,Se){return(0,Q.spectrogram)(Y,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:Se,transpose:!0})}async _call(Y){j(Y,"ASTFeatureExtractor");const Se=await this._extract_fbank_features(Y,this.config.max_length);if(this.config.do_normalize){const De=this.std*2,Ie=Se.data;for(let Ne=0;Ne<Ie.length;++Ne)Ie[Ne]=(Ie[Ne]-this.mean)/De}return{input_values:Se.unsqueeze_(0)}}}class lt extends U{constructor(Y){super(Y),this.mel_filters=(0,Q.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,Q.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,Q.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(Y,Se,De,Ie){let Ne;const at=Y.length-Se;if(at>0)if(De==="rand_trunc"){const vt=Math.floor(Math.random()*(at+1));Y=Y.subarray(vt,vt+Se),Ne=await this._extract_fbank_features(Y,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${De}" not implemented`);else{if(at<0){let vt=new Float64Array(Se);if(vt.set(Y),Ie==="repeat")for(let _t=Y.length;_t<Se;_t+=Y.length)vt.set(Y.subarray(0,Math.min(Y.length,Se-_t)),_t);else if(Ie==="repeatpad")for(let _t=Y.length;_t<-at;_t+=Y.length)vt.set(Y,_t);Y=vt}if(De==="fusion")throw new Error(`Truncation strategy "${De}" not implemented`);Ne=await this._extract_fbank_features(Y,this.mel_filters_slaney,this.config.nb_max_samples)}return Ne.unsqueeze_(0)}async _extract_fbank_features(Y,Se,De=null){return(0,Q.spectrogram)(Y,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:Se,log_mel:"dB",max_num_frames:De,do_pad:!1,transpose:!0})}async _call(Y,{max_length:Se=null}={}){return j(Y,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(Y,Se??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}class Ye extends U{async _call(Y){j(Y,"PyAnnoteFeatureExtractor"),Y instanceof Float64Array&&(Y=new Float32Array(Y));const Se=[1,1,Y.length];return{input_values:new Pe.Tensor("float32",Y,Se)}}samples_to_frames(Y){return(Y-this.config.offset)/this.config.step}post_process_speaker_diarization(Y,Se){const De=Se/this.samples_to_frames(Se)/this.config.sampling_rate,Ie=[];for(const Ne of Y.tolist()){const at=[];let vt=-1;for(let _t=0;_t<Ne.length;++_t){const kt=(0,Oe.softmax)(Ne[_t]),[M,d]=(0,Oe.max)(kt),[f,I]=[_t,_t+1];d!==vt?(vt=d,at.push({id:d,start:f,end:I,score:M})):(at.at(-1).end=I,at.at(-1).score+=M)}Ie.push(at.map(({id:_t,start:kt,end:M,score:d})=>({id:_t,start:kt*De,end:M*De,confidence:d/(M-kt)})))}return Ie}}class $t extends U{constructor(Y){super(Y);const Se=this.config.sampling_rate,De=(0,Q.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(Se/2),Se,null,"kaldi",!0);for(let Ie=0;Ie<De.length;++Ie)De[Ie].push(0);this.mel_filters=De,this.window=(0,Q.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(Y){return Y=Y.map(Se=>Se*32768),(0,Q.spectrogram)(Y,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(Y){j(Y,"WeSpeakerFeatureExtractor");const Se=(await this._extract_fbank_features(Y)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const De=Se.mean(1).data,Ie=Se.data,[Ne,at,vt]=Se.dims;for(let _t=0;_t<Ne;++_t){const kt=_t*at*vt,M=_t*vt;for(let d=0;d<at;++d){const f=kt+d*vt;for(let I=0;I<vt;++I)Ie[f+I]-=De[M+I]}}}return{input_features:Se}}}class ut extends U{}class ft extends D.Callable{constructor(Y){super(),this.feature_extractor=Y}async _call(Y,...Se){return await this.feature_extractor(Y,...Se)}}class Wt extends ft{async _call(...Y){return await this.feature_extractor(...Y)}post_process_masks(...Y){return this.feature_extractor.post_process_masks(...Y)}reshape_input_points(...Y){return this.feature_extractor.reshape_input_points(...Y)}}class Kt extends ft{async _call(Y){return await this.feature_extractor(Y)}}class Ir extends ft{async _call(Y){return await this.feature_extractor(Y)}}class Er extends ft{async _call(Y){return await this.feature_extractor(Y)}post_process_speaker_diarization(...Y){return this.feature_extractor.post_process_speaker_diarization(...Y)}}class Lr extends ft{async _call(Y){return await this.feature_extractor(Y)}}class Cr extends ft{}class Hr extends ft{constructor(Y){super(Y);const{tasks_answer_post_processing_type:Se,task_prompts_without_inputs:De,task_prompts_with_input:Ie}=Y.config;this.tasks_answer_post_processing_type=new Map(Object.entries(Se??{})),this.task_prompts_without_inputs=new Map(Object.entries(De??{})),this.task_prompts_with_input=new Map(Object.entries(Ie??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(Y){typeof Y=="string"&&(Y=[Y]);const Se=[];for(const De of Y)if(this.task_prompts_without_inputs.has(De))Se.push(this.task_prompts_without_inputs.get(De));else{for(const[Ie,Ne]of this.task_prompts_with_input)if(De.includes(Ie)){Se.push(Ne.replaceAll("{input}",De).replaceAll(Ie,""));break}Se.length!==Y.length&&Se.push(De)}return Se}post_process_generation(Y,Se,De){const Ie=this.tasks_answer_post_processing_type.get(Se)??"pure_text";Y=Y.replaceAll("<s>","").replaceAll("</s>","");let Ne;switch(Ie){case"pure_text":Ne=Y;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const at=Ie==="ocr"?"quad_boxes":"bboxes",vt=Y.matchAll(this.regexes[at]),_t=[],kt=[];for(const[M,d,...f]of vt)_t.push(d?d.trim():_t.at(-1)??""),kt.push(f.map((I,B)=>(Number(I)+.5)/this.size_per_bin*De[B%2]));Ne={labels:_t,[at]:kt};break;default:throw new Error(`Task "${Se}" (of type "${Ie}") not yet implemented.`)}return{[Se]:Ne}}}class gn{static FEATURE_EXTRACTOR_CLASS_MAPPING={ImageFeatureExtractor:H,WhisperFeatureExtractor:re,ViTFeatureExtractor:X,MobileViTFeatureExtractor:gt,MobileViTImageProcessor:je,MobileNetV1FeatureExtractor:He,MobileNetV2FeatureExtractor:pt,MobileNetV3FeatureExtractor:ce,MobileNetV4FeatureExtractor:tt,OwlViTFeatureExtractor:yt,Owlv2ImageProcessor:xt,CLIPFeatureExtractor:K,CLIPImageProcessor:Ae,Florence2Processor:Hr,ChineseCLIPFeatureExtractor:ot,SiglipImageProcessor:Qe,ConvNextFeatureExtractor:ct,ConvNextImageProcessor:Te,SegformerFeatureExtractor:P,SapiensFeatureExtractor:R,BitImageProcessor:ye,DPTImageProcessor:fe,DPTFeatureExtractor:T,PvtImageProcessor:O,GLPNFeatureExtractor:Ee,BeitFeatureExtractor:Re,DeiTFeatureExtractor:te,DetrFeatureExtractor:Ge,RTDetrImageProcessor:Ze,MaskFormerFeatureExtractor:mt,YolosFeatureExtractor:bt,DonutFeatureExtractor:rt,DonutImageProcessor:st,NougatImageProcessor:Xe,EfficientNetImageProcessor:ke,ViTImageProcessor:be,VitMatteImageProcessor:E,SamImageProcessor:Bt,Swin2SRImageProcessor:Ct,Wav2Vec2FeatureExtractor:A,SeamlessM4TFeatureExtractor:ie,SpeechT5FeatureExtractor:ut,ASTFeatureExtractor:ve,ClapFeatureExtractor:lt,PyAnnoteFeatureExtractor:Ye,WeSpeakerFeatureExtractor:$t};static PROCESSOR_CLASS_MAPPING={WhisperProcessor:Kt,Wav2Vec2ProcessorWithLM:Ir,PyAnnoteProcessor:Er,SamProcessor:Wt,SpeechT5Processor:Lr,OwlViTProcessor:Cr,Florence2Processor:Hr};static async from_pretrained(Y,{progress_callback:Se=null,config:De=null,cache_dir:Ie=null,local_files_only:Ne=!1,revision:at="main"}={}){let vt=De??await(0,$e.getModelJSON)(Y,"preprocessor_config.json",!0,{progress_callback:Se,config:De,cache_dir:Ie,local_files_only:Ne,revision:at}),_t=vt.feature_extractor_type??vt.image_processor_type,kt=this.FEATURE_EXTRACTOR_CLASS_MAPPING[_t];if(!kt)if(vt.size!==void 0)console.warn(`Feature extractor type "${_t}" not found, assuming ImageFeatureExtractor due to size parameter in config.`),kt=H;else throw new Error(`Unknown Feature Extractor type: ${_t}`);let M=this.PROCESSOR_CLASS_MAPPING[vt.processor_class]??ft,d=new kt(vt);return new M(d)}}},"./src/tokenizers.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{AlbertTokenizer:()=>at,AutoTokenizer:()=>Ji,BartTokenizer:()=>nr,BertTokenizer:()=>Ne,BlenderbotSmallTokenizer:()=>Ii,BlenderbotTokenizer:()=>Ai,BloomTokenizer:()=>zn,CLIPTokenizer:()=>fi,CamembertTokenizer:()=>G,CodeGenTokenizer:()=>hi,CodeLlamaTokenizer:()=>Ei,CohereTokenizer:()=>ti,ConvBertTokenizer:()=>f,DebertaTokenizer:()=>kt,DebertaV2Tokenizer:()=>M,DistilBertTokenizer:()=>B,ElectraTokenizer:()=>Mt,EsmTokenizer:()=>ki,FalconTokenizer:()=>$i,GPT2Tokenizer:()=>qt,GPTNeoXTokenizer:()=>Si,GemmaTokenizer:()=>Jn,Grok1Tokenizer:()=>Kn,HerbertTokenizer:()=>d,LlamaTokenizer:()=>ci,M2M100Tokenizer:()=>pi,MBart50Tokenizer:()=>Br,MBartTokenizer:()=>jt,MPNetTokenizer:()=>Ci,MarianTokenizer:()=>er,MobileBertTokenizer:()=>vt,NllbTokenizer:()=>Dn,NougatTokenizer:()=>Fi,PreTrainedTokenizer:()=>Ie,Qwen2Tokenizer:()=>Pi,RoFormerTokenizer:()=>I,RobertaTokenizer:()=>kr,SiglipTokenizer:()=>mi,SpeechT5Tokenizer:()=>_i,SqueezeBertTokenizer:()=>_t,T5Tokenizer:()=>Nt,TokenizerModel:()=>Ee,VitsTokenizer:()=>Oi,Wav2Vec2CTCTokenizer:()=>ei,WhisperTokenizer:()=>Fn,XLMRobertaTokenizer:()=>Hn,XLMTokenizer:()=>pe,is_chinese_char:()=>U});var D=N("./src/utils/generic.js"),ge=N("./src/utils/core.js"),$e=N("./src/utils/hub.js"),Oe=N("./src/utils/maths.js"),Pe=N("./src/utils/tensor.js"),Q=N("./src/utils/data-structures.js"),L=N("./node_modules/@huggingface/jinja/dist/index.js"),W=N("./src/models/whisper/common_whisper.js");N("./src/utils/constants.js");async function q(_e,_){const V=await Promise.all([(0,$e.getModelJSON)(_e,"tokenizer.json",!0,_),(0,$e.getModelJSON)(_e,"tokenizer_config.json",!0,_)]);return _.legacy!==null&&(V[1].legacy=_.legacy),V}function ee(_e,_){const V=[];let ae=0;for(const he of _e.matchAll(_)){const ze=he[0];ae<he.index&&V.push(_e.slice(ae,he.index)),ze.length>0&&V.push(ze),ae=he.index+ze.length}return ae<_e.length&&V.push(_e.slice(ae)),V}function de(_e,_=!0){if(_e.Regex!==void 0){let V=_e.Regex.replace(/\\([#&~])/g,"$1");for(const[ae,he]of fe)V=V.replaceAll(ae,he);return new RegExp(V,"gu")}else if(_e.String!==void 0){const V=(0,ge.escapeRegExp)(_e.String);return new RegExp(_?V:`(${V})`,"gu")}else return console.warn("Unknown pattern type:",_e),null}function Ce(_e){return new Map(Object.entries(_e))}function xe(_e){const _=_e.dims;switch(_.length){case 1:return _e.tolist();case 2:if(_[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return _e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${_.length}.`)}}function j(_e){return _e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function oe(_e){return _e.replace(/\p{M}/gu,"")}function le(_e){return oe(_e.toLowerCase())}function U(_e){return _e>=19968&&_e<=40959||_e>=13312&&_e<=19903||_e>=131072&&_e<=173791||_e>=173824&&_e<=177983||_e>=177984&&_e<=178207||_e>=178208&&_e<=183983||_e>=63744&&_e<=64255||_e>=194560&&_e<=195103}function H(_e,_,V){const ae=[];let he=0;for(;he<_e.length;){if(ae.push(_e[he]),(_.get(_e[he])??V)!==V){++he;continue}for(;++he<_e.length&&(_.get(_e[he])??V)===V;)_.get(ae.at(-1))!==V&&(ae[ae.length-1]+=_e[he])}return ae}function R(_e){return _e.match(/\S+/g)||[]}const P="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",O=new RegExp(`^[${P}]+$`,"gu"),T=".,!?…。，、।۔،",fe=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${T}])]+`,` ?[^\\s${T}]+`]]);class ye{constructor(_){this.content=_.content,this.id=_.id,this.single_word=_.single_word??!1,this.lstrip=_.lstrip??!1,this.rstrip=_.rstrip??!1,this.special=_.special??!1,this.normalized=_.normalized??null}}class Ee extends D.Callable{constructor(_){super(),this.config=_,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(_,...V){switch(_.type){case"WordPiece":return new K(_);case"Unigram":return new Ae(_,...V);case"BPE":return new ct(_);default:if(_.vocab)return Array.isArray(_.vocab)?new Ae(_,...V):new Te(_,...V);throw new Error(`Unknown TokenizerModel type: ${_.type}`)}}_call(_){return _=this.encode(_),this.fuse_unk&&(_=H(_,this.tokens_to_ids,this.unk_token_id)),_}encode(_){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(_){return _.map(V=>this.tokens_to_ids.get(V)??this.unk_token_id)}convert_ids_to_tokens(_){return _.map(V=>this.vocab[V]??this.unk_token)}}class K extends Ee{constructor(_){super(_),this.tokens_to_ids=Ce(_.vocab),this.unk_token_id=this.tokens_to_ids.get(_.unk_token),this.unk_token=_.unk_token,this.max_input_chars_per_word=_.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[V,ae]of this.tokens_to_ids)this.vocab[ae]=V}encode(_){const V=[];for(const ae of _){const he=[...ae];if(he.length>this.max_input_chars_per_word){V.push(this.unk_token);continue}let ze=!1,et=0;const St=[];for(;et<he.length;){let Ft=he.length,Ot=null;for(;et<Ft;){let Tt=he.slice(et,Ft).join("");if(et>0&&(Tt=this.config.continuing_subword_prefix+Tt),this.tokens_to_ids.has(Tt)){Ot=Tt;break}--Ft}if(Ot===null){ze=!0;break}St.push(Ot),et=Ft}ze?V.push(this.unk_token):V.push(...St)}return V}}class Ae extends Ee{constructor(_,V){super(_);const ae=_.vocab.length;this.vocab=new Array(ae),this.scores=new Array(ae);for(let he=0;he<ae;++he){const ze=_.vocab[he];this.vocab[he]=ze[0],this.scores[he]=ze[1]}this.unk_token_id=_.unk_id,this.unk_token=this.vocab[_.unk_id],this.tokens_to_ids=new Map(this.vocab.map((he,ze)=>[he,ze])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=V.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,Oe.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new Q.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(_){const V=_.chars,ae=1;let he=0;for(;he<V.length;){let ze=!1;const et=V.slice(he).join(""),St=this.trie.commonPrefixSearch(et);for(const Ft of St){const Ot=this.tokens_to_ids.get(Ft),Tt=this.scores[Ot],hr=(0,ge.len)(Ft);_.insert(he,hr,Tt,Ot),!ze&&hr===ae&&(ze=!0)}ze||_.insert(he,ae,this.unk_score,this.unk_token_id),he+=ae}}tokenize(_){const V=new Q.TokenLattice(_,this.bos_token_id,this.eos_token_id);return this.populateNodes(V),V.tokens()}encode(_){const V=[];for(const ae of _){const he=this.tokenize(ae);V.push(...he)}return V}}const ot=(()=>{const _e=[...Array.from({length:94},(he,ze)=>ze+33),...Array.from({length:12},(he,ze)=>ze+161),...Array.from({length:82},(he,ze)=>ze+174)],_=_e.slice();let V=0;for(let he=0;he<256;++he)_e.includes(he)||(_e.push(he),_.push(256+V),V+=1);const ae=_.map(he=>String.fromCharCode(he));return Object.fromEntries(_e.map((he,ze)=>[he,ae[ze]]))})(),Qe=(0,ge.reverseDictionary)(ot);class ct extends Ee{constructor(_){super(_),this.tokens_to_ids=Ce(_.vocab),this.unk_token_id=this.tokens_to_ids.get(_.unk_token),this.unk_token=_.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[ae,he]of this.tokens_to_ids)this.vocab[he]=ae;const V=Array.isArray(_.merges[0]);this.merges=V?_.merges:_.merges.map(ae=>ae.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((ae,he)=>[JSON.stringify(ae),he])),this.end_of_word_suffix=_.end_of_word_suffix,this.continuing_subword_suffix=_.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(_){if(_.length===0)return[];const V=this.cache.get(_);if(V!==void 0)return V;const ae=Array.from(_);this.end_of_word_suffix&&(ae[ae.length-1]+=this.end_of_word_suffix);let he=[];if(ae.length>1){const ze=new Q.PriorityQueue((Ft,Ot)=>Ft.score<Ot.score);let et={token:ae[0],bias:0,prev:null,next:null},St=et;for(let Ft=1;Ft<ae.length;++Ft){const Ot={bias:Ft/ae.length,token:ae[Ft],prev:St,next:null};St.next=Ot,this._add_node(ze,St),St=Ot}for(;!ze.isEmpty();){const Ft=ze.pop();if(Ft.deleted||!Ft.next||Ft.next.deleted)continue;if(Ft.deleted=!0,Ft.next.deleted=!0,Ft.prev){const Tt={...Ft.prev};Ft.prev.deleted=!0,Ft.prev=Tt,Tt.prev?Tt.prev.next=Tt:et=Tt}const Ot={token:Ft.token+Ft.next.token,bias:Ft.bias,prev:Ft.prev,next:Ft.next.next};Ot.prev?(Ot.prev.next=Ot,this._add_node(ze,Ot.prev)):et=Ot,Ot.next&&(Ot.next.prev=Ot,this._add_node(ze,Ot))}for(let Ft=et;Ft!==null;Ft=Ft.next)he.push(Ft.token)}else he=ae;if(this.continuing_subword_suffix)for(let ze=0;ze<he.length-1;++ze)he[ze]+=this.continuing_subword_suffix;return this.cache.set(_,he),he}_add_node(_,V){const ae=this.bpe_ranks.get(JSON.stringify([V.token,V.next.token]));ae!==void 0&&(V.score=ae+V.bias,_.push(V))}encode(_){const V=[];for(const ae of _){if(this.ignore_merges&&this.tokens_to_ids.has(ae)){V.push(ae);continue}const he=this.bpe(ae);for(const ze of he)if(this.tokens_to_ids.has(ze))V.push(ze);else if(this.byte_fallback){const et=Array.from(this.text_encoder.encode(ze)).map(St=>`<0x${St.toString(16).toUpperCase().padStart(2,"0")}>`);et.every(St=>this.tokens_to_ids.has(St))?V.push(...et):V.push(this.unk_token)}else V.push(this.unk_token)}return V}}class Te extends Ee{constructor(_,V){super(_),this.tokens_to_ids=Ce(V.target_lang?_.vocab[V.target_lang]:_.vocab),this.bos_token=V.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=V.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=V.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=V.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[ae,he]of this.tokens_to_ids)this.vocab[he]=ae}encode(_){return _}}class X extends D.Callable{constructor(_){super(),this.config=_}static fromConfig(_){if(_===null)return null;switch(_.type){case"BertNormalizer":return new xt(_);case"Precompiled":return new Lr(_);case"Sequence":return new yt(_);case"Replace":return new be(_);case"NFC":return new ke(_);case"NFKC":return new He(_);case"NFKD":return new pt(_);case"Strip":return new ce(_);case"StripAccents":return new tt(_);case"Lowercase":return new gt(_);case"Prepend":return new je(_);default:throw new Error(`Unknown Normalizer type: ${_.type}`)}}normalize(_){throw Error("normalize should be implemented in subclass.")}_call(_){return this.normalize(_)}}class be extends X{normalize(_){const V=de(this.config.pattern);return V===null?_:_.replaceAll(V,this.config.content)}}class ke extends X{normalize(_){return _=_.normalize("NFC"),_}}class He extends X{normalize(_){return _=_.normalize("NFKC"),_}}class pt extends X{normalize(_){return _=_.normalize("NFKD"),_}}class ce extends X{normalize(_){return this.config.strip_left&&this.config.strip_right?_=_.trim():(this.config.strip_left&&(_=_.trimStart()),this.config.strip_right&&(_=_.trimEnd())),_}}class tt extends X{normalize(_){return _=oe(_),_}}class gt extends X{normalize(_){return _=_.toLowerCase(),_}}class je extends X{normalize(_){return _=this.config.prepend+_,_}}class yt extends X{constructor(_){super(_),this.normalizers=_.normalizers.map(V=>X.fromConfig(V))}normalize(_){return this.normalizers.reduce((V,ae)=>ae.normalize(V),_)}}class xt extends X{_tokenize_chinese_chars(_){const V=[];for(let ae=0;ae<_.length;++ae){const he=_[ae],ze=he.charCodeAt(0);U(ze)?(V.push(" "),V.push(he),V.push(" ")):V.push(he)}return V.join("")}stripAccents(_){return _.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(_){switch(_){case"	":case`
`:case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(_)}}_clean_text(_){const V=[];for(const ae of _){const he=ae.charCodeAt(0);he===0||he===65533||this._is_control(ae)||(/^\s$/.test(ae)?V.push(" "):V.push(ae))}return V.join("")}normalize(_){return this.config.clean_text&&(_=this._clean_text(_)),this.config.handle_chinese_chars&&(_=this._tokenize_chinese_chars(_)),this.config.lowercase?(_=_.toLowerCase(),this.config.strip_accents!==!1&&(_=this.stripAccents(_))):this.config.strip_accents&&(_=this.stripAccents(_)),_}}class Ze extends D.Callable{static fromConfig(_){if(_===null)return null;switch(_.type){case"BertPreTokenizer":return new te(_);case"Sequence":return new Cr(_);case"Whitespace":return new Hr(_);case"WhitespaceSplit":return new gn(_);case"Metaspace":return new Ir(_);case"ByteLevel":return new Re(_);case"Split":return new rt(_);case"Punctuation":return new st(_);case"Digits":return new Xe(_);case"Replace":return new ht(_);default:throw new Error(`Unknown PreTokenizer type: ${_.type}`)}}pre_tokenize_text(_,V){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(_,V){return(Array.isArray(_)?_.map(ae=>this.pre_tokenize_text(ae,V)):this.pre_tokenize_text(_,V)).flat()}_call(_,V){return this.pre_tokenize(_,V)}}class te extends Ze{constructor(_){super(),this.pattern=new RegExp(`[^\\s${P}]+|[${P}]`,"gu")}pre_tokenize_text(_,V){return _.trim().match(this.pattern)||[]}}class Re extends Ze{constructor(_){super(),this.config=_,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=ot,this.text_encoder=new TextEncoder}pre_tokenize_text(_,V){return this.add_prefix_space&&!_.startsWith(" ")&&(_=" "+_),(this.use_regex?_.match(this.pattern)||[]:[_]).map(he=>Array.from(this.text_encoder.encode(he),ze=>this.byte_encoder[ze]).join(""))}}class rt extends Ze{constructor(_){super(),this.config=_,this.pattern=de(this.config.pattern,this.config.invert)}pre_tokenize_text(_,V){return this.pattern===null?[]:this.config.invert?_.match(this.pattern)||[]:ee(_,this.pattern)}}class st extends Ze{constructor(_){super(),this.config=_,this.pattern=new RegExp(`[^${P}]+|[${P}]+`,"gu")}pre_tokenize_text(_,V){return _.match(this.pattern)||[]}}class Xe extends Ze{constructor(_){super(),this.config=_;const V=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(V,"gu")}pre_tokenize_text(_,V){return _.match(this.pattern)||[]}}class Ge extends D.Callable{constructor(_){super(),this.config=_}static fromConfig(_){if(_===null)return null;switch(_.type){case"TemplateProcessing":return new Bt(_);case"ByteLevel":return new Ct(_);case"RobertaProcessing":return new bt(_);case"BertProcessing":return new mt(_);case"Sequence":return new E(_);default:throw new Error(`Unknown PostProcessor type: ${_.type}`)}}post_process(_,...V){throw Error("post_process should be implemented in subclass.")}_call(_,...V){return this.post_process(_,...V)}}class mt extends Ge{constructor(_){super(_),this.cls=_.cls[0],this.sep=_.sep[0]}post_process(_,V=null,{add_special_tokens:ae=!0}={}){ae&&(_=(0,ge.mergeArrays)([this.cls],_,[this.sep]));let he=new Array(_.length).fill(0);if(V!==null){const ze=ae&&this instanceof bt?[this.sep]:[],et=ae?[this.sep]:[];_=(0,ge.mergeArrays)(_,ze,V,et),he=(0,ge.mergeArrays)(he,new Array(V.length+ze.length+et.length).fill(1))}return{tokens:_,token_type_ids:he}}}class bt extends mt{}class Bt extends Ge{constructor(_){super(_),this.single=_.single,this.pair=_.pair}post_process(_,V=null,{add_special_tokens:ae=!0}={}){const he=V===null?this.single:this.pair;let ze=[],et=[];for(const St of he)"SpecialToken"in St?ae&&(ze.push(St.SpecialToken.id),et.push(St.SpecialToken.type_id)):"Sequence"in St&&(St.Sequence.id==="A"?(ze=(0,ge.mergeArrays)(ze,_),et=(0,ge.mergeArrays)(et,new Array(_.length).fill(St.Sequence.type_id))):St.Sequence.id==="B"&&(ze=(0,ge.mergeArrays)(ze,V),et=(0,ge.mergeArrays)(et,new Array(V.length).fill(St.Sequence.type_id))));return{tokens:ze,token_type_ids:et}}}class Ct extends Ge{post_process(_,V=null){return V&&(_=(0,ge.mergeArrays)(_,V)),{tokens:_}}}class E extends Ge{constructor(_){super(_),this.processors=_.processors.map(V=>Ge.fromConfig(V))}post_process(_,V=null,ae={}){let he;for(const ze of this.processors)if(ze instanceof Ct)_=ze.post_process(_).tokens,V&&(V=ze.post_process(V).tokens);else{const et=ze.post_process(_,V,ae);_=et.tokens,he=et.token_type_ids}return{tokens:_,token_type_ids:he}}}class re extends D.Callable{constructor(_){super(),this.config=_,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=_.trim_offsets}static fromConfig(_){if(_===null)return null;switch(_.type){case"WordPiece":return new Ye(_);case"Metaspace":return new Er(_);case"ByteLevel":return new $t(_);case"Replace":return new A(_);case"ByteFallback":return new ie(_);case"Fuse":return new ve(_);case"Strip":return new lt(_);case"Sequence":return new ft(_);case"CTC":return new ut(_);case"BPEDecoder":return new Wt(_);default:throw new Error(`Unknown Decoder type: ${_.type}`)}}_call(_){return this.decode(_)}decode(_){return this.decode_chain(_).join("")}decode_chain(_){throw Error("`decode_chain` should be implemented in subclass.")}}class A extends re{decode_chain(_){const V=de(this.config.pattern);return V===null?_:_.map(ae=>ae.replaceAll(V,this.config.content))}}class ie extends re{constructor(_){super(_),this.text_decoder=new TextDecoder}decode_chain(_){const V=[];let ae=[];for(const he of _){let ze=null;if(he.length===6&&he.startsWith("<0x")&&he.endsWith(">")){const et=parseInt(he.slice(3,5),16);isNaN(et)||(ze=et)}if(ze!==null)ae.push(ze);else{if(ae.length>0){const et=this.text_decoder.decode(Uint8Array.from(ae));V.push(et),ae=[]}V.push(he)}}if(ae.length>0){const he=this.text_decoder.decode(Uint8Array.from(ae));V.push(he),ae=[]}return V}}class ve extends re{decode_chain(_){return[_.join("")]}}class lt extends re{constructor(_){super(_),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(_){return _.map(V=>{let ae=0;for(let ze=0;ze<this.start&&V[ze]===this.content;++ze){ae=ze+1;continue}let he=V.length;for(let ze=0;ze<this.stop;++ze){const et=V.length-ze-1;if(V[et]===this.content){he=et;continue}else break}return V.slice(ae,he)})}}class Ye extends re{constructor(_){super(_),this.cleanup=_.cleanup}decode_chain(_){return _.map((V,ae)=>(ae!==0&&(V.startsWith(this.config.prefix)?V=V.replace(this.config.prefix,""):V=" "+V),this.cleanup&&(V=j(V)),V))}}class $t extends re{constructor(_){super(_),this.byte_decoder=Qe,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(_){const V=_.join(""),ae=new Uint8Array([...V].map(ze=>this.byte_decoder[ze]));return this.text_decoder.decode(ae)}decode_chain(_){const V=[];let ae=[];for(const he of _)this.added_tokens.find(ze=>ze.content===he)!==void 0?(ae.length>0&&(V.push(this.convert_tokens_to_string(ae)),ae=[]),V.push(he)):ae.push(he);return ae.length>0&&V.push(this.convert_tokens_to_string(ae)),V}}class ut extends re{constructor(_){super(_),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(_){if(_.length===0)return"";const V=[_[0]];for(let ze=1;ze<_.length;++ze)_[ze]!==V.at(-1)&&V.push(_[ze]);let he=V.filter(ze=>ze!==this.pad_token).join("");return this.cleanup&&(he=j(he).replaceAll(this.word_delimiter_token," ").trim()),he}decode_chain(_){return[this.convert_tokens_to_string(_)]}}class ft extends re{constructor(_){super(_),this.decoders=_.decoders.map(V=>re.fromConfig(V))}decode_chain(_){return this.decoders.reduce((V,ae)=>ae.decode_chain(V),_)}}class Wt extends re{constructor(_){super(_),this.suffix=this.config.suffix}decode_chain(_){return _.map((V,ae)=>V.replaceAll(this.suffix,ae===_.length-1?"":" "))}}class Kt extends re{decode_chain(_){let V="";for(let ae=1;ae<_.length;ae+=2)V+=_[ae];return[V]}}class Ir extends Ze{constructor(_){super(),this.addPrefixSpace=_.add_prefix_space,this.replacement=_.replacement,this.strRep=_.str_rep||this.replacement,this.prepend_scheme=_.prepend_scheme??"always"}pre_tokenize_text(_,{section_index:V=void 0}={}){let ae=_.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!ae.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&V===0)&&(ae=this.strRep+ae),[ae]}}class Er extends re{constructor(_){super(_),this.addPrefixSpace=_.add_prefix_space,this.replacement=_.replacement}decode_chain(_){const V=[];for(let ae=0;ae<_.length;++ae){let he=_[ae].replaceAll(this.replacement," ");this.addPrefixSpace&&ae==0&&he.startsWith(" ")&&(he=he.substring(1)),V.push(he)}return V}}class Lr extends X{constructor(_){super(_),this.charsmap=_.precompiled_charsmap}normalize(_){return _=_.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),_=_.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),_.includes("～")?_=_.split("～").map(ae=>ae.normalize("NFKC")).join("～"):_=_.normalize("NFKC"),_}}class Cr extends Ze{constructor(_){super(),this.tokenizers=_.pretokenizers.map(V=>Ze.fromConfig(V))}pre_tokenize_text(_,V){return this.tokenizers.reduce((ae,he)=>he.pre_tokenize(ae,V),[_])}}class Hr extends Ze{constructor(_){super()}pre_tokenize_text(_,V){return _.match(/\w+|[^\w\s]+/g)||[]}}class gn extends Ze{constructor(_){super()}pre_tokenize_text(_,V){return R(_)}}class ht extends Ze{constructor(_){super(),this.config=_,this.pattern=de(this.config.pattern),this.content=this.config.content}pre_tokenize_text(_,V){return this.pattern===null?[_]:[_.replaceAll(this.pattern,this.config.content)]}}const Y=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Se(_e,_,V,ae){for(const he of Object.keys(_e)){const ze=_-_e[he].length,et=V(he),St=new Array(ze).fill(et);_e[he]=ae==="right"?(0,ge.mergeArrays)(_e[he],St):(0,ge.mergeArrays)(St,_e[he])}}function De(_e,_){for(const V of Object.keys(_e))_e[V].length=_}class Ie extends D.Callable{return_token_type_ids=!1;padding_side="right";constructor(_,V){super(),this._tokenizer_config=V,this.normalizer=X.fromConfig(_.normalizer),this.pre_tokenizer=Ze.fromConfig(_.pre_tokenizer),this.model=Ee.fromConfig(_.model,V),this.post_processor=Ge.fromConfig(_.post_processor),this.decoder=re.fromConfig(_.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const ae of _.added_tokens){const he=new ye(ae);this.added_tokens.push(he),this.model.tokens_to_ids.set(he.content,he.id),this.model.vocab[he.id]=he.content,he.special&&(this.special_tokens.push(he.content),this.all_special_ids.push(he.id))}if(this.additional_special_tokens=V.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((ae,he)=>he.content.length-ae.content.length).map(ae=>`${ae.lstrip?"\\s*":""}(${(0,ge.escapeRegExp)(ae.content)})${ae.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=V.model_max_length,this.remove_space=V.remove_space,this.clean_up_tokenization_spaces=V.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=V.do_lowercase_and_remove_accent??!1,V.padding_side&&(this.padding_side=V.padding_side),this.legacy=!1,this.chat_template=V.chat_template??null,Array.isArray(this.chat_template)){const ae=Object.create(null);for(const{name:he,template:ze}of this.chat_template){if(typeof he!="string"||typeof ze!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');ae[he]=ze}this.chat_template=ae}this._compiled_template_cache=new Map}getToken(..._){for(const V of _){const ae=this._tokenizer_config[V];if(ae)if(typeof ae=="object"){if(ae.__type==="AddedToken")return ae.content;throw Error(`Unknown token: ${ae}`)}else return ae}return null}static async from_pretrained(_,{progress_callback:V=null,config:ae=null,cache_dir:he=null,local_files_only:ze=!1,revision:et="main",legacy:St=null}={}){const Ft=await q(_,{progress_callback:V,config:ae,cache_dir:he,local_files_only:ze,revision:et,legacy:St});return new this(...Ft)}_call(_,{text_pair:V=null,add_special_tokens:ae=!0,padding:he=!1,truncation:ze=null,max_length:et=null,return_tensor:St=!0,return_token_type_ids:Ft=null}={}){const Ot=Array.isArray(_);let Tt;if(Ot){if(_.length===0)throw Error("text array must be non-empty");if(V!==null){if(Array.isArray(V)){if(_.length!==V.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");Tt=_.map((ur,vr)=>this._encode_plus(ur,{text_pair:V[vr],add_special_tokens:ae,return_token_type_ids:Ft}))}else Tt=_.map(ur=>this._encode_plus(ur,{add_special_tokens:ae,return_token_type_ids:Ft}))}else{if(_==null)throw Error("text may not be null or undefined");if(Array.isArray(V))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");Tt=[this._encode_plus(_,{text_pair:V,add_special_tokens:ae,return_token_type_ids:Ft})]}if(et===null?he==="max_length"?et=this.model_max_length:et=(0,Oe.max)(Tt.map(ur=>ur.input_ids.length))[0]:ze||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),et=Math.min(et,this.model_max_length??1/0),he||ze)for(let ur=0;ur<Tt.length;++ur)Tt[ur].input_ids.length!==et&&(Tt[ur].input_ids.length>et?ze&&De(Tt[ur],et):he&&Se(Tt[ur],et,vr=>vr==="input_ids"?this.pad_token_id:0,this.padding_side));const hr={};if(St){if(!(he&&ze)&&Tt.some(vr=>{for(const Kr of Object.keys(vr))if(vr[Kr].length!==Tt[0][Kr]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const ur=[Tt.length,Tt[0].input_ids.length];for(const vr of Object.keys(Tt[0]))hr[vr]=new Pe.Tensor("int64",BigInt64Array.from(Tt.flatMap(Kr=>Kr[vr]).map(BigInt)),ur)}else{for(const ur of Object.keys(Tt[0]))hr[ur]=Tt.map(vr=>vr[ur]);if(!Ot)for(const ur of Object.keys(hr))hr[ur]=hr[ur][0]}return hr}_encode_text(_){return _===null?null:(this.added_tokens_regex?_.split(this.added_tokens_regex).filter(he=>he):[_]).map((he,ze)=>{if(this.added_tokens.find(St=>St.content===he)!==void 0)return he;{if(this.remove_space===!0&&(he=he.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(he=le(he)),this.normalizer!==null&&(he=this.normalizer(he)),he.length===0)return[];const St=this.pre_tokenizer!==null?this.pre_tokenizer(he,{section_index:ze}):[he];return this.model(St)}}).flat()}_encode_plus(_,{text_pair:V=null,add_special_tokens:ae=!0,return_token_type_ids:he=null}={}){const{tokens:ze,token_type_ids:et}=this._tokenize_helper(_,{pair:V,add_special_tokens:ae}),St=this.model.convert_tokens_to_ids(ze),Ft={input_ids:St,attention_mask:new Array(St.length).fill(1)};return(he??this.return_token_type_ids)&&et&&(Ft.token_type_ids=et),Ft}_tokenize_helper(_,{pair:V=null,add_special_tokens:ae=!1}={}){const he=this._encode_text(_),ze=this._encode_text(V);return this.post_processor?this.post_processor(he,ze,{add_special_tokens:ae}):{tokens:(0,ge.mergeArrays)(he??[],ze??[])}}tokenize(_,{pair:V=null,add_special_tokens:ae=!1}={}){return this._tokenize_helper(_,{pair:V,add_special_tokens:ae}).tokens}encode(_,{text_pair:V=null,add_special_tokens:ae=!0,return_token_type_ids:he=null}={}){return this._encode_plus(_,{text_pair:V,add_special_tokens:ae,return_token_type_ids:he}).input_ids}batch_decode(_,V={}){return _ instanceof Pe.Tensor&&(_=_.tolist()),_.map(ae=>this.decode(ae,V))}decode(_,V={}){if(_ instanceof Pe.Tensor&&(_=xe(_)),!Array.isArray(_)||_.length===0||!(0,ge.isIntegralNumber)(_[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(_,V)}decode_single(_,{skip_special_tokens:V=!1,clean_up_tokenization_spaces:ae=null}){let he=this.model.convert_ids_to_tokens(_);V&&(he=he.filter(et=>!this.special_tokens.includes(et)));let ze=this.decoder?this.decoder(he):he.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(ze=ze.replaceAll(this.decoder.end_of_word_suffix," "),V&&(ze=ze.trim())),(ae??this.clean_up_tokenization_spaces)&&(ze=j(ze)),ze}get_chat_template({chat_template:_=null,tools:V=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const ae=this.chat_template;if(_!==null&&Object.hasOwn(ae,_))_=ae[_];else if(_===null)if(V!==null&&"tool_use"in ae)_=ae.tool_use;else if("default"in ae)_=ae.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(ae).sort()}.`)}else if(_===null)if(this.chat_template)_=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return _}apply_chat_template(_,{tools:V=null,documents:ae=null,chat_template:he=null,add_generation_prompt:ze=!1,tokenize:et=!0,padding:St=!1,truncation:Ft=!1,max_length:Ot=null,return_tensor:Tt=!0,return_dict:hr=!1,tokenizer_kwargs:ur={},...vr}={}){if(he=this.get_chat_template({chat_template:he,tools:V}),typeof he!="string")throw Error(`chat_template must be a string, but got ${typeof he}`);let Kr=this._compiled_template_cache.get(he);Kr===void 0&&(Kr=new L.Template(he),this._compiled_template_cache.set(he,Kr));const yn=Object.create(null);for(const $r of Y){const vn=this.getToken($r);vn&&(yn[$r]=vn)}const dr=Kr.render({messages:_,add_generation_prompt:ze,tools:V,documents:ae,...yn,...vr});if(et){const $r=this._call(dr,{add_special_tokens:!1,padding:St,truncation:Ft,max_length:Ot,return_tensor:Tt,...ur});return hr?$r:$r.input_ids}return dr}}class Ne extends Ie{return_token_type_ids=!0}class at extends Ie{return_token_type_ids=!0}class vt extends Ie{return_token_type_ids=!0}class _t extends Ie{return_token_type_ids=!0}class kt extends Ie{return_token_type_ids=!0}class M extends Ie{return_token_type_ids=!0}class d extends Ie{return_token_type_ids=!0}class f extends Ie{return_token_type_ids=!0}class I extends Ie{return_token_type_ids=!0}class B extends Ie{}class G extends Ie{}class pe extends Ie{return_token_type_ids=!0;constructor(_,V){super(_,V),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Mt extends Ie{return_token_type_ids=!0}class Nt extends Ie{}class qt extends Ie{}class nr extends Ie{}class jt extends Ie{constructor(_,V){super(_,V),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(ae=>this.languageRegex.test(ae)),this.lang_to_token=ae=>ae}_build_translation_inputs(_,V,ae){return Cn(this,_,V,ae)}}class Br extends jt{}class kr extends Ie{}class zn extends Ie{}const Rr="▁";class ci extends Ie{padding_side="left";constructor(_,V){super(_,V),this.legacy=V.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Ir({replacement:Rr,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(_){if(_===null)return null;if(this.legacy||_.length===0)return super._encode_text(_);let V=super._encode_text(Rr+_.replaceAll(Rr," "));return V.length>1&&V[0]===Rr&&this.special_tokens.includes(V[1])&&(V=V.slice(1)),V}}class Ei extends Ie{}class Hn extends Ie{}class Ci extends Ie{}class $i extends Ie{}class Si extends Ie{}class ki extends Ie{}class Pi extends Ie{}class Jn extends Ie{}class Kn extends Ie{}function Cn(_e,_,V,ae){if(!("language_codes"in _e)||!Array.isArray(_e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in _e)||!(_e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in _e)||typeof _e.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const he=ae.src_lang,ze=ae.tgt_lang;if(!_e.language_codes.includes(ze))throw new Error(`Target language code "${ze}" is not valid. Must be one of: {${_e.language_codes.join(", ")}}`);if(he!==void 0){if(!_e.language_codes.includes(he))throw new Error(`Source language code "${he}" is not valid. Must be one of: {${_e.language_codes.join(", ")}}`);for(const et of _e.post_processor.config.single)if("SpecialToken"in et&&_e.languageRegex.test(et.SpecialToken.id)){et.SpecialToken.id=_e.lang_to_token(he);break}}return ae.forced_bos_token_id=_e.model.convert_tokens_to_ids([_e.lang_to_token(ze)])[0],_e._call(_,V)}class Dn extends Ie{constructor(_,V){super(_,V),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(ae=>this.languageRegex.test(ae)),this.lang_to_token=ae=>ae}_build_translation_inputs(_,V,ae){return Cn(this,_,V,ae)}}class pi extends Ie{constructor(_,V){super(_,V),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(ae=>this.languageRegex.test(ae)).map(ae=>ae.slice(2,-2)),this.lang_to_token=ae=>`__${ae}__`}_build_translation_inputs(_,V,ae){return Cn(this,_,V,ae)}}class Fn extends Ie{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(_,{return_timestamps:V=!1,return_language:ae=!1,time_precision:he=null,force_full_sequences:ze=!0}={}){if(he===null)throw Error("Must specify time_precision");let et=null;const St=V==="word";function Ft(){return{language:et,timestamp:[null,null],text:""}}const Ot=[];let Tt=Ft(),hr=0;const ur=this.timestamp_begin;let vr=[],Kr=[],yn=!1,dr=null;const $r=new Set(this.all_special_ids);for(const Fe of _){const Yr=Fe.tokens,on=St?Fe.token_timestamps:null;let Sn=null,Ln=ur;if("stride"in Fe){const[Xr,fr,Fr]=Fe.stride;if(hr-=fr,dr=Xr-Fr,fr&&(Ln=fr/he+ur),Fr)for(let At=Yr.length-1;At>=0;--At){const gr=Number(Yr[At]);if(gr>=ur){if(Sn!==null&&(gr-ur)*he<dr)break;Sn=gr}}}let Yt=[],dn=[];for(let Xr=0;Xr<Yr.length;++Xr){const fr=Number(Yr[Xr]);if($r.has(fr)){const Fr=this.decode([fr]),At=W.WHISPER_LANGUAGE_MAPPING.get(Fr.slice(2,-2));if(At!==void 0){if(et!==null&&At!==et&&!V){vr.push(Yt);const gr=this.findLongestCommonSequence(vr)[0],ri=this.decode(gr);Tt.text=ri,Ot.push(Tt),vr=[],Yt=[],Tt=Ft()}et=Tt.language=At}}else if(fr>=ur){const Fr=(fr-ur)*he+hr,At=(0,Oe.round)(Fr,2);if(Sn!==null&&fr>=Sn)yn=!0;else if(yn||vr.length>0&&fr<Ln)yn=!1;else if(Tt.timestamp[0]===null)Tt.timestamp[0]=At;else if(At!==Tt.timestamp[0]){Tt.timestamp[1]=At,vr.push(Yt),St&&Kr.push(dn);const[gr,ri]=this.findLongestCommonSequence(vr,Kr),Xn=this.decode(gr);Tt.text=Xn,St&&(Tt.words=this.collateWordTimestamps(gr,ri,et)),Ot.push(Tt),vr=[],Yt=[],Kr=[],dn=[],Tt=Ft()}}else if(Yt.push(fr),St){let Fr=(0,Oe.round)(on[Xr]+hr,2),At;if(Xr+1<on.length){At=(0,Oe.round)(on[Xr+1]+hr,2);const gr=this.decode([fr]);O.test(gr)&&(At=(0,Oe.round)(Math.min(Fr+he,At),2))}else At=null;dn.push([Fr,At])}}if("stride"in Fe){const[Xr,fr,Fr]=Fe.stride;hr+=Xr-Fr}Yt.length>0?(vr.push(Yt),St&&Kr.push(dn)):vr.every(Xr=>Xr.length===0)&&(Tt=Ft(),vr=[],Yt=[],Kr=[],dn=[])}if(vr.length>0){if(ze&&V)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Fe,Yr]=this.findLongestCommonSequence(vr,Kr),on=this.decode(Fe);Tt.text=on,St&&(Tt.words=this.collateWordTimestamps(Fe,Yr,et)),Ot.push(Tt)}let vn=Object.create(null);const $n=Ot.map(Fe=>Fe.text).join("");if(V||ae){for(let Fe=0;Fe<Ot.length;++Fe){const Yr=Ot[Fe];V||delete Yr.timestamp,ae||delete Yr.language}if(St){const Fe=[];for(const Yr of Ot)for(const on of Yr.words)Fe.push(on);vn={chunks:Fe}}else vn={chunks:Ot}}return[$n,vn]}findLongestCommonSequence(_,V=null){let ae=_[0],he=ae.length,ze=[];const et=Array.isArray(V)&&V.length>0;let St=et?[]:null,Ft=et?V[0]:null;for(let Ot=1;Ot<_.length;++Ot){const Tt=_[Ot];let hr=0,ur=[he,he,0,0];const vr=Tt.length;for(let Fe=1;Fe<he+vr;++Fe){const Yr=Math.max(0,he-Fe),on=Math.min(he,he+vr-Fe),Sn=ae.slice(Yr,on),Ln=Math.max(0,Fe-he),Yt=Math.min(vr,Fe),dn=Tt.slice(Ln,Yt);if(Sn.length!==dn.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Xr;et?Xr=Sn.filter((At,gr)=>At===dn[gr]&&Ft[Yr+gr]<=V[Ot][Ln+gr]).length:Xr=Sn.filter((At,gr)=>At===dn[gr]).length;const fr=Fe/1e4,Fr=Xr/Fe+fr;Xr>1&&Fr>hr&&(hr=Fr,ur=[Yr,on,Ln,Yt])}const[Kr,yn,dr,$r]=ur,vn=Math.floor((yn+Kr)/2),$n=Math.floor(($r+dr)/2);ze.push(...ae.slice(0,vn)),ae=Tt.slice($n),he=ae.length,et&&(St.push(...Ft.slice(0,vn)),Ft=V[Ot].slice($n))}return ze.push(...ae),et?(St.push(...Ft),[ze,St]):[ze,[]]}collateWordTimestamps(_,V,ae){const[he,ze,et]=this.combineTokensIntoWords(_,ae),St=[];for(let Ft=0;Ft<he.length;++Ft){const Ot=et[Ft];St.push({text:he[Ft],timestamp:[V[Ot.at(0)][0],V[Ot.at(-1)][1]]})}return St}combineTokensIntoWords(_,V,ae=`"'“¡¿([{-`,he=`"'.。,，!！?？:：”)]}、`){V=V??"english";let ze,et,St;return["chinese","japanese","thai","lao","myanmar"].includes(V)?[ze,et,St]=this.splitTokensOnUnicode(_):[ze,et,St]=this.splitTokensOnSpaces(_),this.mergePunctuations(ze,et,St,ae,he)}decode(_,V){let ae;return V?.decode_with_timestamps?(_ instanceof Pe.Tensor&&(_=xe(_)),ae=this.decodeWithTimestamps(_,V)):ae=super.decode(_,V),ae}decodeWithTimestamps(_,V){const ae=V?.time_precision??.02,he=Array.from(this.all_special_ids).at(-1)+1;let ze=[[]];for(let et of _)if(et=Number(et),et>=he){const St=((et-he)*ae).toFixed(2);ze.push(`<|${St}|>`),ze.push([])}else ze[ze.length-1].push(et);return ze=ze.map(et=>typeof et=="string"?et:super.decode(et,V)),ze.join("")}splitTokensOnUnicode(_){const V=this.decode(_,{decode_with_timestamps:!0}),ae="�",he=[],ze=[],et=[];let St=[],Ft=[],Ot=0;for(let Tt=0;Tt<_.length;++Tt){const hr=_[Tt];St.push(hr),Ft.push(Tt);const ur=this.decode(St,{decode_with_timestamps:!0});(!ur.includes(ae)||V[Ot+ur.indexOf(ae)]===ae)&&(he.push(ur),ze.push(St),et.push(Ft),St=[],Ft=[],Ot+=ur.length)}return[he,ze,et]}splitTokensOnSpaces(_){const[V,ae,he]=this.splitTokensOnUnicode(_),ze=[],et=[],St=[],Ft=new RegExp(`^[${P}]$`,"gu");for(let Ot=0;Ot<V.length;++Ot){const Tt=V[Ot],hr=ae[Ot],ur=he[Ot],vr=hr[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Kr=Tt.startsWith(" "),yn=Tt.trim(),dr=Ft.test(yn);if(vr||Kr||dr||ze.length===0)ze.push(Tt),et.push(hr),St.push(ur);else{const $r=ze.length-1;ze[$r]+=Tt,et[$r].push(...hr),St[$r].push(...ur)}}return[ze,et,St]}mergePunctuations(_,V,ae,he,ze){const et=structuredClone(_),St=structuredClone(V),Ft=structuredClone(ae);let Ot=et.length-2,Tt=et.length-1;for(;Ot>=0;)et[Ot].startsWith(" ")&&he.includes(et[Ot].trim())?(et[Tt]=et[Ot]+et[Tt],St[Tt]=(0,ge.mergeArrays)(St[Ot],St[Tt]),Ft[Tt]=(0,ge.mergeArrays)(Ft[Ot],Ft[Tt]),et[Ot]="",St[Ot]=[],Ft[Ot]=[]):Tt=Ot,--Ot;for(Ot=0,Tt=1;Tt<et.length;)!et[Ot].endsWith(" ")&&ze.includes(et[Tt])?(et[Ot]+=et[Tt],St[Ot]=(0,ge.mergeArrays)(St[Ot],St[Tt]),Ft[Ot]=(0,ge.mergeArrays)(Ft[Ot],Ft[Tt]),et[Tt]="",St[Tt]=[],Ft[Tt]=[]):Ot=Tt,++Tt;return[et.filter(hr=>hr),St.filter(hr=>hr.length>0),Ft.filter(hr=>hr.length>0)]}}class hi extends Ie{}class fi extends Ie{}class mi extends Ie{}class er extends Ie{constructor(_,V){super(_,V),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(ae=>this.languageRegex.test(ae)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(_){if(_===null)return null;const[V,...ae]=_.trim().split(this.languageRegex);if(ae.length===0)return super._encode_text(V);if(ae.length===2){const[he,ze]=ae;return this.supported_language_codes.includes(he)||console.warn(`Unsupported language code "${he}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,ge.mergeArrays)([he],super._encode_text(ze))}}}class ei extends Ie{}class Ai extends Ie{}class Ii extends Ie{}class _i extends Ie{}class Fi extends Ie{}class Oi extends Ie{constructor(_,V){super(_,V),this.decoder=new Kt({})}}class ti extends Ie{}class Ji{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:Nt,DistilBertTokenizer:B,CamembertTokenizer:G,DebertaTokenizer:kt,DebertaV2Tokenizer:M,BertTokenizer:Ne,HerbertTokenizer:d,ConvBertTokenizer:f,RoFormerTokenizer:I,XLMTokenizer:pe,ElectraTokenizer:Mt,MobileBertTokenizer:vt,SqueezeBertTokenizer:_t,AlbertTokenizer:at,GPT2Tokenizer:qt,BartTokenizer:nr,MBartTokenizer:jt,MBart50Tokenizer:Br,RobertaTokenizer:kr,WhisperTokenizer:Fn,CodeGenTokenizer:hi,CLIPTokenizer:fi,SiglipTokenizer:mi,MarianTokenizer:er,BloomTokenizer:zn,NllbTokenizer:Dn,M2M100Tokenizer:pi,LlamaTokenizer:ci,CodeLlamaTokenizer:Ei,XLMRobertaTokenizer:Hn,MPNetTokenizer:Ci,FalconTokenizer:$i,GPTNeoXTokenizer:Si,EsmTokenizer:ki,Wav2Vec2CTCTokenizer:ei,BlenderbotTokenizer:Ai,BlenderbotSmallTokenizer:Ii,SpeechT5Tokenizer:_i,NougatTokenizer:Fi,VitsTokenizer:Oi,Qwen2Tokenizer:Pi,GemmaTokenizer:Jn,Grok1Tokenizer:Kn,CohereTokenizer:ti,PreTrainedTokenizer:Ie};static async from_pretrained(_,{progress_callback:V=null,config:ae=null,cache_dir:he=null,local_files_only:ze=!1,revision:et="main",legacy:St=null}={}){const[Ft,Ot]=await q(_,{progress_callback:V,config:ae,cache_dir:he,local_files_only:ze,revision:et,legacy:St}),Tt=Ot.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let hr=this.TOKENIZER_CLASS_MAPPING[Tt];return hr||(console.warn(`Unknown tokenizer class "${Tt}", attempting to construct from base class.`),hr=Ie),new hr(Ft,Ot)}}},"./src/utils/audio.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{hamming:()=>W,hanning:()=>L,mel_filter_bank:()=>oe,read_audio:()=>Pe,spectrogram:()=>P,window_function:()=>O});var D=N("./src/utils/hub.js"),ge=N("./src/utils/maths.js"),$e=N("./src/utils/core.js"),Oe=N("./src/utils/tensor.js");async function Pe(T,fe){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const ye=await(await(0,D.getFile)(T)).arrayBuffer(),Ee=new AudioContext({sampleRate:fe});typeof fe>"u"&&console.warn(`No sampling rate provided, using default of ${Ee.sampleRate}Hz.`);const K=await Ee.decodeAudioData(ye);let Ae;if(K.numberOfChannels===2){const ot=Math.sqrt(2),Qe=K.getChannelData(0),ct=K.getChannelData(1);Ae=new Float32Array(Qe.length);for(let Te=0;Te<K.length;++Te)Ae[Te]=ot*(Qe[Te]+ct[Te])/2}else Ae=K.getChannelData(0);return Ae}function Q(T,fe){if(T<1)return new Float64Array;if(T===1)return new Float64Array([1]);const ye=1-fe,Ee=2*Math.PI/(T-1),K=new Float64Array(T);for(let Ae=0;Ae<T;++Ae)K[Ae]=fe-ye*Math.cos(Ae*Ee);return K}function L(T){return Q(T,.5)}function W(T){return Q(T,.54)}const q={htk:T=>2595*Math.log10(1+T/700),kaldi:T=>1127*Math.log(1+T/700),slaney:(T,fe=1e3,ye=15,Ee=27/Math.log(6.4))=>T>=fe?ye+Math.log(T/fe)*Ee:3*T/200};function ee(T,fe="htk"){const ye=q[fe];if(!ye)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof T=="number"?ye(T):T.map(Ee=>ye(Ee))}const de={htk:T=>700*(10**(T/2595)-1),kaldi:T=>700*(Math.exp(T/1127)-1),slaney:(T,fe=1e3,ye=15,Ee=Math.log(6.4)/27)=>T>=ye?fe*Math.exp(Ee*(T-ye)):200*T/3};function Ce(T,fe="htk"){const ye=de[fe];if(!ye)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof T=="number"?ye(T):T.map(Ee=>ye(Ee))}function xe(T,fe){const ye=Float64Array.from({length:fe.length-1},(ot,Qe)=>fe[Qe+1]-fe[Qe]),Ee=Array.from({length:T.length},()=>new Array(fe.length));for(let ot=0;ot<T.length;++ot){const Qe=Ee[ot];for(let ct=0;ct<fe.length;++ct)Qe[ct]=fe[ct]-T[ot]}const K=fe.length-2,Ae=Array.from({length:K},()=>new Array(T.length));for(let ot=0;ot<T.length;++ot){const Qe=Ee[ot];for(let ct=0;ct<K;++ct){const Te=-Qe[ct]/ye[ct],X=Qe[ct+2]/ye[ct+1];Ae[ct][ot]=Math.max(0,Math.min(Te,X))}}return Ae}function j(T,fe,ye){const Ee=(fe-T)/(ye-1);return Float64Array.from({length:ye},(K,Ae)=>T+Ee*Ae)}function oe(T,fe,ye,Ee,K,Ae=null,ot="htk",Qe=!1){if(Ae!==null&&Ae!=="slaney")throw new Error('norm must be one of null or "slaney"');const ct=ee(ye,ot),Te=ee(Ee,ot),X=j(ct,Te,fe+2);let be=Ce(X,ot),ke;if(Qe){const pt=K/(T*2);ke=ee(Float64Array.from({length:T},(ce,tt)=>tt*pt),ot),be=X}else ke=j(0,Math.floor(K/2),T);const He=xe(ke,be);if(Ae!==null&&Ae==="slaney")for(let pt=0;pt<fe;++pt){const ce=He[pt],tt=2/(be[pt+2]-be[pt]);for(let gt=0;gt<T;++gt)ce[gt]*=tt}return He}function le(T,fe,ye){const Ee=new T.constructor(T.length+fe+ye),K=T.length-1;for(let Ae=0;Ae<T.length;++Ae)Ee[fe+Ae]=T[Ae];for(let Ae=1;Ae<=fe;++Ae)Ee[fe-Ae]=T[(0,$e.calculateReflectOffset)(Ae,K)];for(let Ae=1;Ae<=ye;++Ae)Ee[K+fe+Ae]=T[(0,$e.calculateReflectOffset)(K-Ae,K)];return Ee}function U(T,fe,ye,Ee,K){if(ye<=0)throw new Error("reference must be greater than zero");if(Ee<=0)throw new Error("min_value must be greater than zero");ye=Math.max(Ee,ye);const Ae=Math.log10(ye);for(let ot=0;ot<T.length;++ot)T[ot]=fe*Math.log10(Math.max(Ee,T[ot])-Ae);if(K!==null){if(K<=0)throw new Error("db_range must be greater than zero");const ot=(0,ge.max)(T)[0]-K;for(let Qe=0;Qe<T.length;++Qe)T[Qe]=Math.max(T[Qe],ot)}return T}function H(T,fe=1,ye=1e-5,Ee=null){return U(T,20,fe,ye,Ee)}function R(T,fe=1,ye=1e-10,Ee=null){return U(T,10,fe,ye,Ee)}async function P(T,fe,ye,Ee,{fft_length:K=null,power:Ae=1,center:ot=!0,pad_mode:Qe="reflect",onesided:ct=!0,preemphasis:Te=null,mel_filters:X=null,mel_floor:be=1e-10,log_mel:ke=null,reference:He=1,min_value:pt=1e-10,db_range:ce=null,remove_dc_offset:tt=null,min_num_frames:gt=null,max_num_frames:je=null,do_pad:yt=!0,transpose:xt=!1}={}){const Ze=fe.length;if(K===null&&(K=ye),ye>K)throw Error(`frame_length (${ye}) may not be larger than fft_length (${K})`);if(Ze!==ye)throw new Error(`Length of the window (${Ze}) must equal frame_length (${ye})`);if(Ee<=0)throw new Error("hop_length must be greater than zero");if(Ae===null&&X!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(ot){if(Qe!=="reflect")throw new Error(`pad_mode="${Qe}" not implemented yet.`);const re=Math.floor((K-1)/2)+1;T=le(T,re,re)}let te=Math.floor(1+Math.floor((T.length-ye)/Ee));gt!==null&&te<gt&&(te=gt);const Re=ct?Math.floor(K/2)+1:K;let rt=te,st=te;je!==null&&(je>te?yt&&(st=je):st=rt=je);const Xe=new ge.FFT(K),Ge=new Float64Array(K),mt=new Float64Array(Xe.outputBufferSize),bt=new Float32Array(Re*st);for(let re=0;re<rt;++re){const A=re*Ee,ie=Math.min(T.length-A,ye);ie!==ye&&Ge.fill(0,0,ye);for(let ve=0;ve<ie;++ve)Ge[ve]=T[A+ve];if(tt){let ve=0;for(let Ye=0;Ye<ie;++Ye)ve+=Ge[Ye];const lt=ve/ie;for(let Ye=0;Ye<ie;++Ye)Ge[Ye]-=lt}if(Te!==null){for(let ve=ie-1;ve>=1;--ve)Ge[ve]-=Te*Ge[ve-1];Ge[0]*=1-Te}for(let ve=0;ve<fe.length;++ve)Ge[ve]*=fe[ve];Xe.realTransform(mt,Ge);for(let ve=0;ve<Re;++ve){const lt=ve<<1;bt[ve*st+re]=mt[lt]**2+mt[lt+1]**2}}if(Ae!==null&&Ae!==2){const re=2/Ae;for(let A=0;A<bt.length;++A)bt[A]**=re}const Bt=X.length;let Ct=await(0,Oe.matmul)(new Oe.Tensor("float32",X.flat(),[Bt,Re]),new Oe.Tensor("float32",bt,[Re,st]));xt&&(Ct=Ct.transpose(1,0));const E=Ct.data;for(let re=0;re<E.length;++re)E[re]=Math.max(be,E[re]);if(Ae!==null&&ke!==null){const re=Math.min(E.length,rt*Bt);switch(ke){case"log":for(let A=0;A<re;++A)E[A]=Math.log(E[A]);break;case"log10":for(let A=0;A<re;++A)E[A]=Math.log10(E[A]);break;case"dB":if(Ae===1)H(E,He,pt,ce);else if(Ae===2)R(E,He,pt,ce);else throw new Error(`Cannot use log_mel option '${ke}' with power ${Ae}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${ke}'`)}}return Ct}function O(T,fe,{periodic:ye=!0,frame_length:Ee=null,center:K=!0}={}){const Ae=ye?T+1:T;let ot;switch(fe){case"boxcar":ot=new Float64Array(Ae).fill(1);break;case"hann":case"hann_window":ot=L(Ae);break;case"hamming":ot=W(Ae);break;case"povey":ot=L(Ae).map(Qe=>Math.pow(Qe,.85));break;default:throw new Error(`Unknown window type ${fe}.`)}if(ye&&(ot=ot.subarray(0,T)),Ee===null)return ot;if(T>Ee)throw new Error(`Length of the window (${T}) may not be larger than frame_length (${Ee})`);return ot}},"./src/utils/constants.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{GITHUB_ISSUE_URL:()=>D});const D="https://github.com/huggingface/transformers.js/issues/new/choose"},"./src/utils/core.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{calculateDimensions:()=>Q,calculateReflectOffset:()=>ee,dispatchCallback:()=>D,escapeRegExp:()=>$e,isIntegralNumber:()=>Pe,isTypedArray:()=>Oe,len:()=>Ce,mergeArrays:()=>W,pick:()=>de,pop:()=>L,product:()=>q,reverseDictionary:()=>ge});function D(xe,j){xe&&xe(j)}function ge(xe){return Object.fromEntries(Object.entries(xe).map(([j,oe])=>[oe,j]))}function $e(xe){return xe.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function Oe(xe){return xe?.prototype?.__proto__?.constructor?.name==="TypedArray"}function Pe(xe){return Number.isInteger(xe)||typeof xe=="bigint"}function Q(xe){const j=[];let oe=xe;for(;Array.isArray(oe);)j.push(oe.length),oe=oe[0];return j}function L(xe,j,oe=void 0){const le=xe[j];if(le!==void 0)return delete xe[j],le;if(oe===void 0)throw Error(`Key ${j} does not exist in object.`);return oe}function W(...xe){return Array.prototype.concat.apply([],xe)}function q(...xe){return xe.reduce((j,oe)=>j.flatMap(le=>oe.map(U=>[le,U])))}function ee(xe,j){return Math.abs((xe+j)%(2*j)-j)}function de(xe,j){return Object.assign({},...j.map(oe=>{if(xe[oe]!==void 0)return{[oe]:xe[oe]}}))}function Ce(xe){let j=0;for(const oe of xe)++j;return j}},"./src/utils/data-structures.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{CharTrie:()=>ge,PriorityQueue:()=>D,TokenLattice:()=>Oe});class D{constructor(L=(q,ee)=>q>ee,W=1/0){this._heap=[],this._comparator=L,this._maxSize=W}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...L){return this.extend(L)}extend(L){for(const W of L)if(this.size<this._maxSize)this._heap.push(W),this._siftUp();else{const q=this._smallest();this._comparator(W,this._heap[q])&&(this._heap[q]=W,this._siftUpFrom(q))}return this.size}pop(){const L=this.peek(),W=this.size-1;return W>0&&this._swap(0,W),this._heap.pop(),this._siftDown(),L}replace(L){const W=this.peek();return this._heap[0]=L,this._siftDown(),W}_parent(L){return(L+1>>>1)-1}_left(L){return(L<<1)+1}_right(L){return L+1<<1}_greater(L,W){return this._comparator(this._heap[L],this._heap[W])}_swap(L,W){const q=this._heap[L];this._heap[L]=this._heap[W],this._heap[W]=q}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(L){for(;L>0&&this._greater(L,this._parent(L));)this._swap(L,this._parent(L)),L=this._parent(L)}_siftDown(){let L=0;for(;this._left(L)<this.size&&this._greater(this._left(L),L)||this._right(L)<this.size&&this._greater(this._right(L),L);){const W=this._right(L)<this.size&&this._greater(this._right(L),this._left(L))?this._right(L):this._left(L);this._swap(L,W),L=W}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class ge{constructor(){this.root=$e.default()}extend(L){for(const W of L)this.push(W)}push(L){let W=this.root;for(const q of L){let ee=W.children.get(q);ee===void 0&&(ee=$e.default(),W.children.set(q,ee)),W=ee}W.isLeaf=!0}*commonPrefixSearch(L){let W=this.root;if(W===void 0)return;let q="";for(const ee of L){if(q+=ee,W=W.children.get(ee),W===void 0)return;W.isLeaf&&(yield q)}}}class $e{constructor(L,W){this.isLeaf=L,this.children=W}static default(){return new $e(!1,new Map)}}class Oe{constructor(L,W,q){this.chars=Array.from(L),this.len=this.chars.length,this.bosTokenId=W,this.eosTokenId=q,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const ee=new Pe(this.bosTokenId,0,0,0,0),de=new Pe(this.eosTokenId,1,this.len,0,0);this.nodes.push(ee.clone()),this.nodes.push(de.clone()),this.beginNodes[this.len].push(de),this.endNodes[0].push(ee)}insert(L,W,q,ee){const de=this.nodes.length,Ce=new Pe(ee,de,L,W,q);this.beginNodes[L].push(Ce),this.endNodes[L+W].push(Ce),this.nodes.push(Ce)}viterbi(){const L=this.len;let W=0;for(;W<=L;){if(this.beginNodes[W].length==0)return[];for(let xe of this.beginNodes[W]){xe.prev=null;let j=0,oe=null;for(let le of this.endNodes[W]){const U=le.backtraceScore+xe.score;(oe===null||U>j)&&(oe=le.clone(),j=U)}if(oe!==null)xe.prev=oe,xe.backtraceScore=j;else return[]}++W}const q=[],de=this.beginNodes[L][0].prev;if(de===null)return[];let Ce=de.clone();for(;Ce.prev!==null;)q.push(Ce.clone()),Ce=Ce.clone().prev.clone();return q.reverse(),q}piece(L){return this.chars.slice(L.pos,L.pos+L.length).join("")}tokens(){return this.viterbi().map(W=>this.piece(W))}tokenIds(){return this.viterbi().map(W=>W.tokenId)}}class Pe{constructor(L,W,q,ee,de){this.tokenId=L,this.nodeId=W,this.pos=q,this.length=ee,this.score=de,this.prev=null,this.backtraceScore=0}clone(){const L=new Pe(this.tokenId,this.nodeId,this.pos,this.length,this.score);return L.prev=this.prev,L.backtraceScore=this.backtraceScore,L}}},"./src/utils/devices.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{DEVICE_TYPES:()=>D});const D=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{DATA_TYPES:()=>Oe,DEFAULT_DEVICE_DTYPE_MAPPING:()=>Pe,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>Q,isWebGpuFp16Supported:()=>$e});var D=N("./src/env.js"),ge=N("./src/utils/devices.js");const $e=function(){let L;return async function(){if(L===void 0)if(!D.apis.IS_WEBGPU_AVAILABLE)L=!1;else try{L=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{L=!1}return L}}(),Oe=Object.freeze({fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),Pe=Object.freeze({[ge.DEVICE_TYPES.wasm]:Oe.q8}),Q=Object.freeze({[Oe.fp32]:"",[Oe.fp16]:"_fp16",[Oe.int8]:"_int8",[Oe.uint8]:"_uint8",[Oe.q8]:"_quantized",[Oe.q4]:"_q4",[Oe.q4f16]:"_q4f16",[Oe.bnb4]:"_bnb4"})},"./src/utils/generic.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{Callable:()=>D});const D=class{constructor(){let ge=function(...$e){return ge._call(...$e)};return Object.setPrototypeOf(ge,new.target.prototype)}_call(...ge){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{getFile:()=>W,getModelFile:()=>xe,getModelJSON:()=>j});var D=N("?7a2c"),ge=N("?a42a"),$e=N("./src/env.js"),Oe=N("./src/utils/core.js");const Pe={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class Q{constructor(H){if(this.filePath=H,this.headers=new Headers,this.exists=D.existsSync(H),this.exists){this.status=200,this.statusText="OK";let R=D.statSync(H);this.headers.set("content-length",R.size.toString()),this.updateContentType();let P=this;this.body=new ReadableStream({start(O){P.arrayBuffer().then(T=>{O.enqueue(new Uint8Array(T)),O.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const H=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",Pe[H]??"application/octet-stream")}clone(){let H=new Q(this.filePath);return H.exists=this.exists,H.status=this.status,H.statusText=this.statusText,H.headers=new Headers(this.headers),H}async arrayBuffer(){return(await D.promises.readFile(this.filePath)).buffer}async blob(){const H=await D.promises.readFile(this.filePath);return new Blob([H],{type:this.headers.get("content-type")})}async text(){return await D.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function L(U,H=null,R=null){let P;try{P=new URL(U)}catch{return!1}return!(H&&!H.includes(P.protocol)||R&&!R.includes(P.hostname))}async function W(U){if($e.env.useFS&&!L(U,["http:","https:","blob:"]))return new Q(U);if(typeof Ms<"u"&&Ms?.release?.name==="node"){const H=!!Mp?.TESTING_REMOTELY,R=$e.env.version,P=new Headers;if(P.set("User-Agent",`transformers.js/${R}; is_ci/${H};`),L(U,["http:","https:"],["huggingface.co","hf.co"])){const T=Mp?.HF_TOKEN??Mp?.HF_ACCESS_TOKEN;T&&P.set("Authorization",`Bearer ${T}`)}return fetch(U,{headers:P})}else return fetch(U)}const q={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function ee(U,H,R){if(!R)return null;const P=q[U]??`Error (${U}) occurred while trying to load file`;throw Error(`${P}: "${H}".`)}class de{constructor(H){this.path=H}async match(H){let R=ge.join(this.path,H),P=new Q(R);if(P.exists)return P}async put(H,R){const P=A_.from(await R.arrayBuffer());let O=ge.join(this.path,H);try{await D.promises.mkdir(ge.dirname(O),{recursive:!0}),await D.promises.writeFile(O,P)}catch(T){console.warn("An error occurred while writing the file to cache:",T)}}}async function Ce(U,...H){for(let R of H)try{let P=await U.match(R);if(P)return P}catch{continue}}async function xe(U,H,R=!0,P={}){if(!$e.env.allowLocalModels){if(P.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!$e.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,Oe.dispatchCallback)(P.progress_callback,{status:"initiate",name:U,file:H});let O;if(!O&&$e.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{O=await caches.open("transformers-cache")}catch(ke){console.warn("An error occurred while opening the browser cache:",ke)}}if(!O&&$e.env.useFSCache&&(O=new de(P.cache_dir??$e.env.cacheDir)),!O&&$e.env.useCustomCache){if(!$e.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!$e.env.customCache.match||!$e.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");O=$e.env.customCache}const T=P.revision??"main";let fe=le(U,H),ye=le($e.env.localModelPath,fe),Ee=le($e.env.remoteHost,$e.env.remotePathTemplate.replaceAll("{model}",U).replaceAll("{revision}",encodeURIComponent(T)),H),K=T==="main"?fe:le(U,T,H),Ae,ot=O instanceof de?K:Ee,Qe=!1,ct;O&&(ct=await Ce(O,ye,ot));const Te=ct!==void 0;if(ct===void 0){if($e.env.allowLocalModels)if(L(fe,["http:","https:"])){if(P.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${fe}.`);if(!$e.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${fe}.`)}else try{ct=await W(ye),Ae=ye}catch(He){console.warn(`Unable to load from local path "${ye}": "${He}"`)}if(ct===void 0||ct.status===404){if(P.local_files_only||!$e.env.allowRemoteModels){if(R)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${ye}".`);return null}if(ct=await W(Ee),ct.status!==200)return ee(ct.status,Ee,R);Ae=ot}Qe=O&&typeof Response<"u"&&ct instanceof Response&&ct.status===200}(0,Oe.dispatchCallback)(P.progress_callback,{status:"download",name:U,file:H});const X={status:"progress",name:U,file:H};let be;return P.progress_callback?Te&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(be=new Uint8Array(await ct.arrayBuffer()),(0,Oe.dispatchCallback)(P.progress_callback,{...X,progress:100,loaded:be.length,total:be.length})):be=await oe(ct,ke=>{(0,Oe.dispatchCallback)(P.progress_callback,{...X,...ke})}):be=new Uint8Array(await ct.arrayBuffer()),Qe&&Ae&&await O.match(Ae)===void 0&&await O.put(Ae,new Response(be,{headers:ct.headers})).catch(ke=>{console.warn(`Unable to add response to browser cache: ${ke}.`)}),(0,Oe.dispatchCallback)(P.progress_callback,{status:"done",name:U,file:H}),be}async function j(U,H,R=!0,P={}){let O=await xe(U,H,R,P);if(O===null)return{};let fe=new TextDecoder("utf-8").decode(O);return JSON.parse(fe)}async function oe(U,H){const R=U.headers.get("Content-Length");R===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let P=parseInt(R??"0"),O=new Uint8Array(P),T=0;const fe=U.body.getReader();async function ye(){const{done:Ee,value:K}=await fe.read();if(Ee)return;let Ae=T+K.length;if(Ae>P){P=Ae;let Qe=new Uint8Array(P);Qe.set(O),O=Qe}O.set(K,T),T=Ae;const ot=T/P*100;return H({progress:ot,loaded:T,total:P}),ye()}return await ye(),O}function le(...U){return U=U.map((H,R)=>(R&&(H=H.replace(new RegExp("^/"),"")),R!==U.length-1&&(H=H.replace(new RegExp("/$"),"")),H)),U.join("/")}},"./src/utils/image.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{RawImage:()=>Ce});var D=N("./src/utils/hub.js"),ge=N("./src/env.js"),$e=N("./src/utils/tensor.js"),Oe=N("?2b25");const Pe=typeof self<"u",Q=Pe&&self.constructor.name==="DedicatedWorkerGlobalScope";let L,W,q;if(Pe)L=(xe,j)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(xe,j)},q=self.createImageBitmap,W=self.ImageData;else if(Oe)q=async xe=>{const oe=(await xe.metadata()).channels,{data:le,info:U}=await xe.rotate().raw().toBuffer({resolveWithObject:!0}),H=new Ce(new Uint8ClampedArray(le),U.width,U.height,U.channels);return oe!==void 0&&oe!==U.channels&&H.convert(oe),H};else throw new Error("Unable to load image processing library.");const ee={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},de=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class Ce{constructor(j,oe,le,U){this.data=j,this.width=oe,this.height=le,this.channels=U}get size(){return[this.width,this.height]}static async read(j){if(j instanceof Ce)return j;if(typeof j=="string"||j instanceof URL)return await this.fromURL(j);throw new Error(`Unsupported input type: ${typeof j}`)}static fromCanvas(j){if(!Pe)throw new Error("fromCanvas() is only supported in browser environments.");const le=j.getContext("2d").getImageData(0,0,j.width,j.height).data;return new Ce(le,j.width,j.height,4)}static async fromURL(j){const oe=await(0,D.getFile)(j);if(oe.status!==200)throw new Error(`Unable to read image from "${j}" (${oe.status} ${oe.statusText})`);const le=await oe.blob();return this.fromBlob(le)}static async fromBlob(j){if(Pe){const oe=await q(j),le=L(oe.width,oe.height).getContext("2d");return le.drawImage(oe,0,0),new this(le.getImageData(0,0,oe.width,oe.height).data,oe.width,oe.height,4)}else{const oe=Oe(await j.arrayBuffer());return await q(oe)}}static fromTensor(j,oe="CHW"){if(j.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${j.dims.length} dimensions.`);if(oe==="CHW")j=j.transpose(1,2,0);else if(oe!=="HWC")throw new Error(`Unsupported channel format: ${oe}`);if(!(j.data instanceof Uint8ClampedArray||j.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${j.type}`);switch(j.dims[2]){case 1:case 2:case 3:case 4:return new Ce(j.data,j.dims[1],j.dims[0],j.dims[2]);default:throw new Error(`Unsupported number of channels: ${j.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const j=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let oe=0,le=0;oe<this.data.length;oe+=this.channels){const U=this.data[oe],H=this.data[oe+1],R=this.data[oe+2];j[le++]=Math.round(.2989*U+.587*H+.114*R)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(j,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const j=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let oe=0,le=0;oe<this.data.length;++oe)j[le++]=this.data[oe],j[le++]=this.data[oe],j[le++]=this.data[oe];break;case 4:for(let oe=0,le=0;oe<this.data.length;oe+=4)j[le++]=this.data[oe],j[le++]=this.data[oe+1],j[le++]=this.data[oe+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(j,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const j=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let oe=0,le=0;oe<this.data.length;++oe)j[le++]=this.data[oe],j[le++]=this.data[oe],j[le++]=this.data[oe],j[le++]=255;break;case 3:for(let oe=0,le=0;oe<this.data.length;oe+=3)j[le++]=this.data[oe],j[le++]=this.data[oe+1],j[le++]=this.data[oe+2],j[le++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(j,this.width,this.height,4)}async resize(j,oe,{resample:le=2}={}){let U=ee[le]??le;if(Pe){const H=this.channels,R=this.toCanvas(),P=L(j,oe).getContext("2d");return P.drawImage(R,0,0,j,oe),new Ce(P.getImageData(0,0,j,oe).data,j,oe,4).convert(H)}else{let H=this.toSharp();switch(U){case"box":case"hamming":(U==="box"||U==="hamming")&&(console.warn(`Resampling method ${U} is not yet supported. Using bilinear instead.`),U="bilinear");case"nearest":case"bilinear":case"bicubic":H=H.affine([j/this.width,0,0,oe/this.height],{interpolator:U});break;case"lanczos":H=H.resize({width:j,height:oe,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${U} is not supported.`)}return await q(H)}}async pad([j,oe,le,U]){if(j=Math.max(j,0),oe=Math.max(oe,0),le=Math.max(le,0),U=Math.max(U,0),j===0&&oe===0&&le===0&&U===0)return this;if(Pe){const H=this.channels,R=this.toCanvas(),P=this.width+j+oe,O=this.height+le+U,T=L(P,O).getContext("2d");return T.drawImage(R,0,0,this.width,this.height,j,le,P,O),new Ce(T.getImageData(0,0,P,O).data,P,O,4).convert(H)}else{const H=this.toSharp().extend({left:j,right:oe,top:le,bottom:U});return await q(H)}}async crop([j,oe,le,U]){if(j=Math.max(j,0),oe=Math.max(oe,0),le=Math.min(le,this.width-1),U=Math.min(U,this.height-1),j===0&&oe===0&&le===this.width-1&&U===this.height-1)return this;const H=le-j+1,R=U-oe+1;if(Pe){const P=this.channels,O=this.toCanvas(),T=L(H,R).getContext("2d");return T.drawImage(O,j,oe,H,R,0,0,H,R),new Ce(T.getImageData(0,0,H,R).data,H,R,4).convert(P)}else{const P=this.toSharp().extract({left:j,top:oe,width:H,height:R});return await q(P)}}async center_crop(j,oe){if(this.width===j&&this.height===oe)return this;const le=(this.width-j)/2,U=(this.height-oe)/2;if(Pe){const H=this.channels,R=this.toCanvas(),P=L(j,oe).getContext("2d");let O=0,T=0,fe=0,ye=0;return le>=0?O=le:fe=-le,U>=0?T=U:ye=-U,P.drawImage(R,O,T,j,oe,fe,ye,j,oe),new Ce(P.getImageData(0,0,j,oe).data,j,oe,4).convert(H)}else{let H=this.toSharp();if(le>=0&&U>=0)H=H.extract({left:Math.floor(le),top:Math.floor(U),width:j,height:oe});else if(le<=0&&U<=0){const R=Math.floor(-U),P=Math.floor(-le);H=H.extend({top:R,left:P,right:j-this.width-P,bottom:oe-this.height-R})}else{let R=[0,0],P=0;U<0?(R[0]=Math.floor(-U),R[1]=oe-this.height-R[0]):P=Math.floor(U);let O=[0,0],T=0;le<0?(O[0]=Math.floor(-le),O[1]=j-this.width-O[0]):T=Math.floor(le),H=H.extend({top:R[0],bottom:R[1],left:O[0],right:O[1]}).extract({left:T,top:P,width:j,height:oe})}return await q(H)}}async toBlob(j="image/png",oe=1){if(!Pe)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:j,quality:oe})}toTensor(j="CHW"){let oe=new $e.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(j!=="HWC")if(j==="CHW")oe=oe.permute(2,0,1);else throw new Error(`Unsupported channel format: ${j}`);return oe}toCanvas(){if(!Pe)throw new Error("toCanvas() is only supported in browser environments.");const j=this.clone().rgba(),oe=L(j.width,j.height),le=new W(j.data,j.width,j.height);return oe.getContext("2d").putImageData(le,0,0),oe}_update(j,oe,le,U=null){return this.data=j,this.width=oe,this.height=le,U!==null&&(this.channels=U),this}clone(){return new Ce(this.data.slice(),this.width,this.height,this.channels)}convert(j){if(this.channels===j)return this;switch(j){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(j){if(Pe){if(Q)throw new Error("Unable to save an image from a Web Worker.");const oe=j.split(".").pop().toLowerCase(),le=de.get(oe)??"image/png",U=await this.toBlob(le),H=URL.createObjectURL(U),R=document.createElement("a");R.href=H,R.download=j,R.click(),R.remove()}else{if(ge.env.useFS)return await this.toSharp().toFile(j);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(Pe)throw new Error("toSharp() is only supported in server-side environments.");return Oe(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}},"./src/utils/maths.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{FFT:()=>xe,bankers_round:()=>le,cos_sim:()=>Q,dot:()=>Pe,dynamic_time_warping:()=>U,interpolate_data:()=>D,log_softmax:()=>Oe,magnitude:()=>L,max:()=>q,medianFilter:()=>j,min:()=>W,permute_data:()=>ge,round:()=>oe,softmax:()=>$e});function D(H,[R,P,O],[T,fe],ye="bilinear",Ee=!1){const K=fe/O,Ae=T/P,ot=new H.constructor(T*fe*R),Qe=P*O,ct=T*fe;for(let Te=0;Te<T;++Te)for(let X=0;X<fe;++X){const be=Te*fe+X,ke=(X+.5)/K-.5,He=(Te+.5)/Ae-.5;let pt=Math.floor(ke),ce=Math.floor(He);const tt=Math.min(pt+1,O-1),gt=Math.min(ce+1,P-1);pt=Math.max(pt,0),ce=Math.max(ce,0);const je=ke-pt,yt=He-ce,xt=(1-je)*(1-yt),Ze=je*(1-yt),te=(1-je)*yt,Re=je*yt,rt=ce*O,st=gt*O,Xe=rt+pt,Ge=rt+tt,mt=st+pt,bt=st+tt;for(let Bt=0;Bt<R;++Bt){const Ct=Bt*Qe;ot[Bt*ct+be]=xt*H[Ct+Xe]+Ze*H[Ct+Ge]+te*H[Ct+mt]+Re*H[Ct+bt]}}return ot}function ge(H,R,P){const O=new Array(P.length),T=new Array(P.length);for(let Ee=P.length-1,K=1;Ee>=0;--Ee)T[Ee]=K,O[Ee]=R[P[Ee]],K*=O[Ee];const fe=P.map((Ee,K)=>T[P.indexOf(K)]),ye=new H.constructor(H.length);for(let Ee=0;Ee<H.length;++Ee){let K=0;for(let Ae=R.length-1,ot=Ee;Ae>=0;--Ae)K+=ot%R[Ae]*fe[Ae],ot=Math.floor(ot/R[Ae]);ye[K]=H[Ee]}return[ye,O]}function $e(H){const R=q(H)[0],P=H.map(fe=>Math.exp(fe-R)),O=P.reduce((fe,ye)=>fe+ye,0);return P.map(fe=>fe/O)}function Oe(H){const R=q(H)[0];let P=0;for(let fe=0;fe<H.length;++fe)P+=Math.exp(H[fe]-R);const O=Math.log(P);return H.map(fe=>fe-R-O)}function Pe(H,R){let P=0;for(let O=0;O<H.length;++O)P+=H[O]*R[O];return P}function Q(H,R){const P=Pe(H,R),O=L(H),T=L(R);return P/(O*T)}function L(H){return Math.sqrt(H.reduce((R,P)=>R+P*P,0))}function W(H){if(H.length===0)throw Error("Array must not be empty");let R=H[0],P=0;for(let O=1;O<H.length;++O)H[O]<R&&(R=H[O],P=O);return[R,P]}function q(H){if(H.length===0)throw Error("Array must not be empty");let R=H[0],P=0;for(let O=1;O<H.length;++O)H[O]>R&&(R=H[O],P=O);return[Number(R),P]}function ee(H){return H>0&&(H&H-1)===0}class de{constructor(R){if(this.size=R|0,this.size<=1||!ee(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=R<<1,this.table=new Float64Array(this.size*2);for(let O=0;O<this.table.length;O+=2){const T=Math.PI*O/this.size;this.table[O]=Math.cos(T),this.table[O+1]=-Math.sin(T)}let P=0;for(let O=1;this.size>O;O<<=1)++P;this._width=P%2===0?P-1:P,this._bitrev=new Int32Array(1<<this._width);for(let O=0;O<this._bitrev.length;++O){this._bitrev[O]=0;for(let T=0;T<this._width;T+=2){const fe=this._width-T-2;this._bitrev[O]|=(O>>>T&3)<<fe}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(R,P){const O=P||new Array(R.length>>>1);for(let T=0;T<R.length;T+=2)O[T>>>1]=R[T];return O}toComplexArray(R,P){const O=P||this.createComplexArray();for(let T=0;T<O.length;T+=2)O[T]=R[T>>>1],O[T+1]=0;return O}transform(R,P){if(R===P)throw new Error("Input and output buffers must be different");this._transform4(R,P,1)}realTransform(R,P){if(R===P)throw new Error("Input and output buffers must be different");this._realTransform4(R,P,1)}inverseTransform(R,P){if(R===P)throw new Error("Input and output buffers must be different");this._transform4(R,P,-1);for(let O=0;O<R.length;++O)R[O]/=this.size}_transform4(R,P,O){const T=this._csize;let ye=1<<this._width,Ee=T/ye<<1,K,Ae;const ot=this._bitrev;if(Ee===4)for(K=0,Ae=0;K<T;K+=Ee,++Ae){const ct=ot[Ae];this._singleTransform2(P,R,K,ct,ye)}else for(K=0,Ae=0;K<T;K+=Ee,++Ae){const ct=ot[Ae];this._singleTransform4(P,R,K,ct,ye,O)}const Qe=this.table;for(ye>>=2;ye>=2;ye>>=2){Ee=T/ye<<1;const ct=Ee>>>2;for(K=0;K<T;K+=Ee){const Te=K+ct-1;for(let X=K,be=0;X<Te;X+=2,be+=ye){const ke=X,He=ke+ct,pt=He+ct,ce=pt+ct,tt=R[ke],gt=R[ke+1],je=R[He],yt=R[He+1],xt=R[pt],Ze=R[pt+1],te=R[ce],Re=R[ce+1],rt=Qe[be],st=O*Qe[be+1],Xe=je*rt-yt*st,Ge=je*st+yt*rt,mt=Qe[2*be],bt=O*Qe[2*be+1],Bt=xt*mt-Ze*bt,Ct=xt*bt+Ze*mt,E=Qe[3*be],re=O*Qe[3*be+1],A=te*E-Re*re,ie=te*re+Re*E,ve=tt+Bt,lt=gt+Ct,Ye=tt-Bt,$t=gt-Ct,ut=Xe+A,ft=Ge+ie,Wt=O*(Xe-A),Kt=O*(Ge-ie);R[ke]=ve+ut,R[ke+1]=lt+ft,R[He]=Ye+Kt,R[He+1]=$t-Wt,R[pt]=ve-ut,R[pt+1]=lt-ft,R[ce]=Ye-Kt,R[ce+1]=$t+Wt}}}}_singleTransform2(R,P,O,T,fe){const ye=R[T],Ee=R[T+1],K=R[T+fe],Ae=R[T+fe+1];P[O]=ye+K,P[O+1]=Ee+Ae,P[O+2]=ye-K,P[O+3]=Ee-Ae}_singleTransform4(R,P,O,T,fe,ye){const Ee=fe*2,K=fe*3,Ae=R[T],ot=R[T+1],Qe=R[T+fe],ct=R[T+fe+1],Te=R[T+Ee],X=R[T+Ee+1],be=R[T+K],ke=R[T+K+1],He=Ae+Te,pt=ot+X,ce=Ae-Te,tt=ot-X,gt=Qe+be,je=ct+ke,yt=ye*(Qe-be),xt=ye*(ct-ke);P[O]=He+gt,P[O+1]=pt+je,P[O+2]=ce+xt,P[O+3]=tt-yt,P[O+4]=He-gt,P[O+5]=pt-je,P[O+6]=ce-xt,P[O+7]=tt+yt}_realTransform4(R,P,O){const T=this._csize;let ye=1<<this._width,Ee=T/ye<<1,K,Ae;const ot=this._bitrev;if(Ee===4)for(K=0,Ae=0;K<T;K+=Ee,++Ae){const Te=ot[Ae];this._singleRealTransform2(P,R,K,Te>>>1,ye>>>1)}else for(K=0,Ae=0;K<T;K+=Ee,++Ae){const Te=ot[Ae];this._singleRealTransform4(P,R,K,Te>>>1,ye>>>1,O)}const Qe=this.table;for(ye>>=2;ye>=2;ye>>=2){Ee=T/ye<<1;const Te=Ee>>>1,X=Te>>>1,be=X>>>1;for(K=0;K<T;K+=Ee)for(let ke=0,He=0;ke<=be;ke+=2,He+=ye){const pt=K+ke,ce=pt+X,tt=ce+X,gt=tt+X,je=R[pt],yt=R[pt+1],xt=R[ce],Ze=R[ce+1],te=R[tt],Re=R[tt+1],rt=R[gt],st=R[gt+1],Xe=je,Ge=yt,mt=Qe[He],bt=O*Qe[He+1],Bt=xt*mt-Ze*bt,Ct=xt*bt+Ze*mt,E=Qe[2*He],re=O*Qe[2*He+1],A=te*E-Re*re,ie=te*re+Re*E,ve=Qe[3*He],lt=O*Qe[3*He+1],Ye=rt*ve-st*lt,$t=rt*lt+st*ve,ut=Xe+A,ft=Ge+ie,Wt=Xe-A,Kt=Ge-ie,Ir=Bt+Ye,Er=Ct+$t,Lr=O*(Bt-Ye),Cr=O*(Ct-$t);if(R[pt]=ut+Ir,R[pt+1]=ft+Er,R[ce]=Wt+Cr,R[ce+1]=Kt-Lr,ke===0){R[tt]=ut-Ir,R[tt+1]=ft-Er;continue}if(ke===be)continue;const Hr=K+X-ke,gn=K+Te-ke;R[Hr]=Wt-O*Cr,R[Hr+1]=-Kt-O*Lr,R[gn]=ut-O*Ir,R[gn+1]=-ft+O*Er}}const ct=T>>>1;for(let Te=2;Te<ct;Te+=2)R[T-Te]=R[Te],R[T-Te+1]=-R[Te+1]}_singleRealTransform2(R,P,O,T,fe){const ye=R[T],Ee=R[T+fe];P[O]=ye+Ee,P[O+1]=0,P[O+2]=ye-Ee,P[O+3]=0}_singleRealTransform4(R,P,O,T,fe,ye){const Ee=fe*2,K=fe*3,Ae=R[T],ot=R[T+fe],Qe=R[T+Ee],ct=R[T+K],Te=Ae+Qe,X=Ae-Qe,be=ot+ct,ke=ye*(ot-ct);P[O]=Te+be,P[O+1]=0,P[O+2]=X,P[O+3]=-ke,P[O+4]=Te-be,P[O+5]=0,P[O+6]=X,P[O+7]=ke}}class Ce{constructor(R){const P=2*(R-1),O=2*(2*R-1),T=2**Math.ceil(Math.log2(O));this.bufferSize=T,this._a=P;const fe=new Float64Array(O),ye=new Float64Array(T);this._chirpBuffer=new Float64Array(T),this._buffer1=new Float64Array(T),this._buffer2=new Float64Array(T),this._outBuffer1=new Float64Array(T),this._outBuffer2=new Float64Array(T);const Ee=-2*Math.PI/R,K=Math.cos(Ee),Ae=Math.sin(Ee);for(let ot=0;ot<O>>1;++ot){const Qe=(ot+1-R)**2/2,ct=Math.sqrt(K**2+Ae**2)**Qe,Te=Qe*Math.atan2(Ae,K),X=2*ot;fe[X]=ct*Math.cos(Te),fe[X+1]=ct*Math.sin(Te),ye[X]=fe[X],ye[X+1]=-fe[X+1]}this._slicedChirpBuffer=fe.subarray(P,O),this._f=new de(T>>1),this._f.transform(this._chirpBuffer,ye)}_transform(R,P,O){const T=this._buffer1,fe=this._buffer2,ye=this._outBuffer1,Ee=this._outBuffer2,K=this._chirpBuffer,Ae=this._slicedChirpBuffer,ot=this._a;if(O)for(let Qe=0;Qe<Ae.length;Qe+=2){const ct=Qe+1,Te=Qe>>1,X=P[Te];T[Qe]=X*Ae[Qe],T[ct]=X*Ae[ct]}else for(let Qe=0;Qe<Ae.length;Qe+=2){const ct=Qe+1;T[Qe]=P[Qe]*Ae[Qe]-P[ct]*Ae[ct],T[ct]=P[Qe]*Ae[ct]+P[ct]*Ae[Qe]}this._f.transform(ye,T);for(let Qe=0;Qe<K.length;Qe+=2){const ct=Qe+1;fe[Qe]=ye[Qe]*K[Qe]-ye[ct]*K[ct],fe[ct]=ye[Qe]*K[ct]+ye[ct]*K[Qe]}this._f.inverseTransform(Ee,fe);for(let Qe=0;Qe<Ee.length;Qe+=2){const ct=Ee[Qe+ot],Te=Ee[Qe+ot+1],X=Ae[Qe],be=Ae[Qe+1];R[Qe]=ct*X-Te*be,R[Qe+1]=ct*be+Te*X}}transform(R,P){this._transform(R,P,!1)}realTransform(R,P){this._transform(R,P,!0)}}class xe{constructor(R){this.fft_length=R,this.isPowerOfTwo=ee(R),this.isPowerOfTwo?(this.fft=new de(R),this.outputBufferSize=2*R):(this.fft=new Ce(R),this.outputBufferSize=this.fft.bufferSize)}realTransform(R,P){this.fft.realTransform(R,P)}transform(R,P){this.fft.transform(R,P)}}function j(H,R){if(R%2===0||R<=0)throw new Error("Window size must be a positive odd number");const P=new H.constructor(H.length),O=new H.constructor(R),T=Math.floor(R/2);for(let fe=0;fe<H.length;++fe){let ye=0;for(let Ee=-T;Ee<=T;++Ee){let K=fe+Ee;K<0?K=Math.abs(K):K>=H.length&&(K=2*(H.length-1)-K),O[ye++]=H[K]}O.sort(),P[fe]=O[T]}return P}function oe(H,R){const P=Math.pow(10,R);return Math.round(H*P)/P}function le(H){const R=Math.round(H);return Math.abs(H)%1===.5?R%2===0?R:R-1:R}function U(H){const R=H.length,P=H[0].length,O=[R+1,P+1],T=Array.from({length:O[0]},()=>Array(O[1]).fill(1/0));T[0][0]=0;const fe=Array.from({length:O[0]},()=>Array(O[1]).fill(-1));for(let ot=1;ot<O[1];++ot)for(let Qe=1;Qe<O[0];++Qe){const ct=T[Qe-1][ot-1],Te=T[Qe-1][ot],X=T[Qe][ot-1];let be,ke;ct<Te&&ct<X?(be=ct,ke=0):Te<ct&&Te<X?(be=Te,ke=1):(be=X,ke=2),T[Qe][ot]=H[Qe-1][ot-1]+be,fe[Qe][ot]=ke}for(let ot=0;ot<O[1];++ot)fe[0][ot]=2;for(let ot=0;ot<O[0];++ot)fe[ot][0]=1;let ye=R,Ee=P,K=[],Ae=[];for(;ye>0||Ee>0;)switch(K.push(ye-1),Ae.push(Ee-1),fe[ye][Ee]){case 0:--ye,--Ee;break;case 1:--ye;break;case 2:--Ee;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${ye}, ${Ee}]. Please file a bug report.`)}return K.reverse(),Ae.reverse(),[K,Ae]}},"./src/utils/tensor.js":(Ue,Me,N)=>{N.r(Me),N.d(Me,{Tensor:()=>Pe,cat:()=>H,full:()=>ye,full_like:()=>Ee,interpolate:()=>W,interpolate_4d:()=>q,layer_norm:()=>j,matmul:()=>ee,mean:()=>O,mean_pooling:()=>xe,ones:()=>K,ones_like:()=>Ae,permute:()=>L,quantize_embeddings:()=>ct,rfft:()=>de,stack:()=>R,std_mean:()=>P,topk:()=>Ce,zeros:()=>ot,zeros_like:()=>Qe});var D=N("./src/utils/maths.js"),ge=N("./src/backends/onnx.js"),$e=N("./src/ops/registry.js");const Oe=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array});class Pe{get dims(){return this.ort_tensor.dims}set dims(X){this.ort_tensor.dims=X}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...X){return(0,ge.isONNXTensor)(X[0])?this.ort_tensor=X[0]:this.ort_tensor=new ge.Tensor(X[0],X[1],X[2]),new Proxy(this,{get:(be,ke)=>{if(typeof ke=="string"){let He=Number(ke);if(Number.isInteger(He))return be._getitem(He)}return be[ke]},set:(be,ke,He)=>be[ke]=He})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[X,...be]=this.dims;if(be.length>0){const ke=be.reduce((He,pt)=>He*pt);for(let He=0;He<X;++He)yield this._subarray(He,ke,be)}else yield*this.data}_getitem(X){const[be,...ke]=this.dims;if(X=U(X,be),ke.length>0){const He=ke.reduce((pt,ce)=>pt*ce);return this._subarray(X,He,ke)}else return new Pe(this.type,[this.data[X]],ke)}indexOf(X){const be=this.data;for(let ke=0;ke<be.length;++ke)if(be[ke]==X)return ke;return-1}_subarray(X,be,ke){const He=X*be,pt=(X+1)*be,ce="subarray"in this.data?this.data.subarray(He,pt):this.data.slice(He,pt);return new Pe(this.type,ce,ke)}item(){const X=this.data;if(X.length!==1)throw new Error(`a Tensor with ${X.length} elements cannot be converted to Scalar`);return X[0]}tolist(){return Q(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const X=this.data;for(let be=0;be<X.length;++be)X[be]=1/(1+Math.exp(-X[be]));return this}map(X){return this.clone().map_(X)}map_(X){const be=this.data;for(let ke=0;ke<be.length;++ke)be[ke]=X(be[ke],ke,be);return this}mul(X){return this.clone().mul_(X)}mul_(X){const be=this.data;for(let ke=0;ke<be.length;++ke)be[ke]*=X;return this}div(X){return this.clone().div_(X)}div_(X){const be=this.data;for(let ke=0;ke<be.length;++ke)be[ke]/=X;return this}add(X){return this.clone().add_(X)}add_(X){const be=this.data;for(let ke=0;ke<be.length;++ke)be[ke]+=X;return this}sub(X){return this.clone().sub_(X)}sub_(X){const be=this.data;for(let ke=0;ke<be.length;++ke)be[ke]-=X;return this}clone(){return new Pe(this.type,this.data.slice(),this.dims.slice())}slice(...X){const be=[],ke=[];for(let je=0;je<this.dims.length;++je){let yt=X[je];if(yt==null)ke.push([0,this.dims[je]]),be.push(this.dims[je]);else if(typeof yt=="number")yt=U(yt,this.dims[je],je),ke.push([yt,yt+1]);else if(Array.isArray(yt)&&yt.length===2){let[xt,Ze]=yt;if(xt=xt===null?0:U(xt,this.dims[je],je,!1),Ze=Ze===null?this.dims[je]:U(Ze,this.dims[je],je,!1),xt>Ze)throw new Error(`Invalid slice: ${yt}`);const te=[Math.max(xt,0),Math.min(Ze,this.dims[je])];ke.push(te),be.push(te[1]-te[0])}else throw new Error(`Invalid slice: ${yt}`)}const He=ke.map(([je,yt])=>yt-je),pt=He.reduce((je,yt)=>je*yt),ce=this.data,tt=new ce.constructor(pt),gt=this.stride();for(let je=0;je<pt;++je){let yt=0;for(let xt=He.length-1,Ze=je;xt>=0;--xt){const te=He[xt];yt+=(Ze%te+ke[xt][0])*gt[xt],Ze=Math.floor(Ze/te)}tt[je]=ce[yt]}return new Pe(this.type,tt,be)}permute(...X){return L(this,X)}transpose(...X){return this.permute(...X)}sum(X=null,be=!1){return this.norm(1,X,be)}norm(X="fro",be=null,ke=!1){if(X==="fro")X=2;else if(typeof X=="string")throw Error(`Unsupported norm: ${X}`);const He=this.data;if(be===null){let tt=He.reduce((gt,je)=>gt+je**X,0)**(1/X);return new Pe(this.type,[tt],[])}be=U(be,this.dims.length);const pt=this.dims.slice();pt[be]=1;const ce=new He.constructor(He.length/this.dims[be]);for(let tt=0;tt<He.length;++tt){let gt=0;for(let je=this.dims.length-1,yt=tt,xt=1;je>=0;--je){const Ze=this.dims[je];if(je!==be){const te=yt%Ze;gt+=te*xt,xt*=pt[je]}yt=Math.floor(yt/Ze)}ce[gt]+=He[tt]**X}if(X!==1)for(let tt=0;tt<ce.length;++tt)ce[tt]=ce[tt]**(1/X);return ke||pt.splice(be,1),new Pe(this.type,ce,pt)}normalize_(X=2,be=1){be=U(be,this.dims.length);const ke=this.norm(X,be,!0),He=this.data,pt=ke.data;for(let ce=0;ce<He.length;++ce){let tt=0;for(let gt=this.dims.length-1,je=ce,yt=1;gt>=0;--gt){const xt=this.dims[gt];if(gt!==be){const Ze=je%xt;tt+=Ze*yt,yt*=this.dims[gt]}je=Math.floor(je/xt)}He[ce]/=pt[tt]}return this}normalize(X=2,be=1){return this.clone().normalize_(X,be)}stride(){return T(this.dims)}squeeze(X=null){return new Pe(this.type,this.data,oe(this.dims,X))}squeeze_(X=null){return this.dims=oe(this.dims,X),this}unsqueeze(X=null){return new Pe(this.type,this.data,le(this.dims,X))}unsqueeze_(X=null){return this.dims=le(this.dims,X),this}flatten_(X=0,be=-1){be=(be+this.dims.length)%this.dims.length;let ke=this.dims.slice(0,X),He=this.dims.slice(X,be+1),pt=this.dims.slice(be+1);return this.dims=[...ke,He.reduce((ce,tt)=>ce*tt,1),...pt],this}flatten(X=0,be=-1){return this.clone().flatten_(X,be)}view(...X){let be=-1;for(let He=0;He<X.length;++He)if(X[He]===-1){if(be!==-1)throw new Error("Only one dimension can be inferred");be=He}const ke=this.data;if(be!==-1){const He=X.reduce((pt,ce,tt)=>tt!==be?pt*ce:pt,1);X[be]=ke.length/He}return new Pe(this.type,ke,X)}neg_(){const X=this.data;for(let be=0;be<X.length;++be)X[be]=-X[be];return this}neg(){return this.clone().neg_()}clamp_(X,be){const ke=this.data;for(let He=0;He<ke.length;++He)ke[He]=Math.min(Math.max(ke[He],X),be);return this}clamp(X,be){return this.clone().clamp_(X,be)}round_(){const X=this.data;for(let be=0;be<X.length;++be)X[be]=Math.round(X[be]);return this}round(){return this.clone().round_()}mean(X=null,be=!1){return O(this,X,be)}to(X){if(this.type===X)return this;if(!Oe.hasOwnProperty(X))throw new Error(`Unsupported type: ${X}`);return new Pe(X,Oe[X].from(this.data),this.dims)}}function Q(Te,X){const be=Te.length,ke=X.reduce((pt,ce)=>pt*ce);if(be!==ke)throw Error(`cannot reshape array of size ${be} into shape (${X})`);let He=Te;for(let pt=X.length-1;pt>=0;pt--)He=He.reduce((ce,tt)=>{let gt=ce[ce.length-1];return gt.length<X[pt]?gt.push(tt):ce.push([tt]),ce},[[]]);return He[0]}function L(Te,X){const[be,ke]=(0,D.permute_data)(Te.data,Te.dims,X);return new Pe(Te.type,be,ke)}function W(Te,[X,be],ke="bilinear",He=!1){const pt=Te.dims.at(-3)??1,ce=Te.dims.at(-2),tt=Te.dims.at(-1);let gt=(0,D.interpolate_data)(Te.data,[pt,ce,tt],[X,be],ke,He);return new Pe(Te.type,gt,[pt,X,be])}async function q(Te,{size:X=null,mode:be="bilinear"}={}){if(Te.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!X)throw new Error("`interpolate_4d` requires a `size` argument.");let ke;if(X.length===2)ke=[...Te.dims.slice(0,2),...X];else if(X.length===3)ke=[Te.dims[0],...X];else if(X.length===4)ke=X;else throw new Error("`size` must be of length 2, 3, or 4.");let He;if(be==="bilinear")He=await $e.TensorOpRegistry.bilinear_interpolate_4d;else if(be==="bicubic")He=await $e.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${be}`);const pt=new Pe("int64",new BigInt64Array(ke.map(BigInt)),[ke.length]);return await He({x:Te,s:pt})}async function ee(Te,X){return await(await $e.TensorOpRegistry.matmul)({a:Te,b:X})}async function de(Te,X){return await(await $e.TensorOpRegistry.rfft)({x:Te,a:X})}async function Ce(Te,X){const be=await $e.TensorOpRegistry.top_k;return X===null?X=Te.dims.at(-1):X=Math.min(X,Te.dims.at(-1)),await be({x:Te,k:new Pe("int64",[BigInt(X)],[1])})}function xe(Te,X){const be=Te.data,ke=X.data,He=[Te.dims[0],Te.dims[2]],pt=new be.constructor(He[0]*He[1]),[ce,tt,gt]=Te.dims;let je=0;for(let yt=0;yt<ce;++yt){const xt=yt*gt*tt;for(let Ze=0;Ze<gt;++Ze){let te=0,Re=0;const rt=yt*tt,st=xt+Ze;for(let Ge=0;Ge<tt;++Ge){const mt=Number(ke[rt+Ge]);Re+=mt,te+=be[st+Ge*gt]*mt}const Xe=te/Re;pt[je++]=Xe}}return new Pe(Te.type,pt,He)}function j(Te,X,{eps:be=1e-5}={}){if(Te.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[ke,He]=Te.dims;if(X.length!==1&&X[0]!==He)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[pt,ce]=P(Te,1,0,!0),tt=pt.data,gt=ce.data,je=Te.data,yt=new je.constructor(je.length);for(let xt=0;xt<ke;++xt){const Ze=xt*He;for(let te=0;te<He;++te){const Re=Ze+te;yt[Re]=(je[Re]-gt[xt])/(tt[xt]+be)}}return new Pe(Te.type,yt,Te.dims)}function oe(Te,X){return Te=Te.slice(),X===null?Te=Te.filter(be=>be!==1):typeof X=="number"?Te[X]===1&&Te.splice(X,1):Array.isArray(X)&&(Te=Te.filter((be,ke)=>be!==1||!X.includes(ke))),Te}function le(Te,X){return X=U(X,Te.length+1),Te=Te.slice(),Te.splice(X,0,1),Te}function U(Te,X,be=null,ke=!0){if(ke&&(Te<-X||Te>=X))throw new Error(`IndexError: index ${Te} is out of bounds for dimension${be===null?"":" "+be} with size ${X}`);return Te<0&&(Te=(Te%X+X)%X),Te}function H(Te,X=0){X=U(X,Te[0].dims.length);const be=Te[0].dims.slice();be[X]=Te.reduce((ce,tt)=>ce+tt.dims[X],0);const ke=be.reduce((ce,tt)=>ce*tt,1),He=new Te[0].data.constructor(ke),pt=Te[0].type;if(X===0){let ce=0;for(const tt of Te){const gt=tt.data;He.set(gt,ce),ce+=gt.length}}else{let ce=0;for(let tt=0;tt<Te.length;++tt){const{data:gt,dims:je}=Te[tt];for(let yt=0;yt<gt.length;++yt){let xt=0;for(let Ze=je.length-1,te=yt,Re=1;Ze>=0;--Ze){const rt=je[Ze];let st=te%rt;Ze===X&&(st+=ce),xt+=st*Re,Re*=be[Ze],te=Math.floor(te/rt)}He[xt]=gt[yt]}ce+=je[X]}}return new Pe(pt,He,be)}function R(Te,X=0){return H(Te.map(be=>be.unsqueeze(X)),X)}function P(Te,X=null,be=1,ke=!1){const He=Te.data,pt=Te.dims;if(X===null){const Ze=He.reduce((st,Xe)=>st+Xe,0)/He.length,te=Math.sqrt(He.reduce((st,Xe)=>st+(Xe-Ze)**2,0)/(He.length-be)),Re=new Pe(Te.type,[Ze],[]);return[new Pe(Te.type,[te],[]),Re]}X=U(X,pt.length);const ce=O(Te,X,ke),tt=ce.data,gt=pt.slice();gt[X]=1;const je=new He.constructor(He.length/pt[X]);for(let xt=0;xt<He.length;++xt){let Ze=0;for(let te=pt.length-1,Re=xt,rt=1;te>=0;--te){const st=pt[te];if(te!==X){const Xe=Re%st;Ze+=Xe*rt,rt*=gt[te]}Re=Math.floor(Re/st)}je[Ze]+=(He[xt]-tt[Ze])**2}for(let xt=0;xt<je.length;++xt)je[xt]=Math.sqrt(je[xt]/(pt[X]-be));return ke||gt.splice(X,1),[new Pe(Te.type,je,gt),ce]}function O(Te,X=null,be=!1){const ke=Te.data;if(X===null){const tt=ke.reduce((gt,je)=>gt+je,0);return new Pe(Te.type,[tt/ke.length],[])}const He=Te.dims;X=U(X,He.length);const pt=He.slice();pt[X]=1;const ce=new ke.constructor(ke.length/He[X]);for(let tt=0;tt<ke.length;++tt){let gt=0;for(let je=He.length-1,yt=tt,xt=1;je>=0;--je){const Ze=He[je];if(je!==X){const te=yt%Ze;gt+=te*xt,xt*=pt[je]}yt=Math.floor(yt/Ze)}ce[gt]+=ke[tt]}if(He[X]!==1)for(let tt=0;tt<ce.length;++tt)ce[tt]=ce[tt]/He[X];return be||pt.splice(X,1),new Pe(Te.type,ce,pt)}function T(Te){const X=new Array(Te.length);for(let be=Te.length-1,ke=1;be>=0;--be)X[be]=ke,ke*=Te[be];return X}function fe(Te,X,be,ke){const He=Te.reduce((pt,ce)=>pt*ce,1);return new Pe(be,new ke(He).fill(X),Te)}function ye(Te,X){let be,ke;if(typeof X=="number")be="float32",ke=Float32Array;else if(typeof X=="bigint")be="int64",ke=BigInt64Array;else throw new Error(`Unsupported data type: ${typeof X}`);return fe(Te,X,be,ke)}function Ee(Te,X){return ye(Te.dims,X)}function K(Te){return fe(Te,1n,"int64",BigInt64Array)}function Ae(Te){return K(Te.dims)}function ot(Te){return fe(Te,0n,"int64",BigInt64Array)}function Qe(Te){return ot(Te.dims)}function ct(Te,X){if(Te.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(Te.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(X))throw new Error("The precision must be either 'binary' or 'ubinary'");const be=X==="binary",ke=be?"int8":"uint8",He=be?Int8Array:Uint8Array,pt=Te.data,ce=new He(pt.length/8);for(let tt=0;tt<pt.length;++tt){const gt=pt[tt]>0?1:0,je=Math.floor(tt/8),yt=tt%8;ce[je]|=gt<<7-yt,be&&yt===0&&(ce[je]-=128)}return new Pe(ke,ce,[Te.dims[0],Te.dims[1]/8])}}},Lf={};function qr(Ue){var Me=Lf[Ue];if(Me!==void 0)return Me.exports;var N=Lf[Ue]={exports:{}};return Wf[Ue](N,N.exports,qr),N.exports}qr.m=Wf;(()=>{var Ue=Object.getPrototypeOf?N=>Object.getPrototypeOf(N):N=>N.__proto__,Me;qr.t=function(N,D){if(D&1&&(N=this(N)),D&8||typeof N=="object"&&N&&(D&4&&N.__esModule||D&16&&typeof N.then=="function"))return N;var ge=Object.create(null);qr.r(ge);var $e={};Me=Me||[null,Ue({}),Ue([]),Ue(Ue)];for(var Oe=D&2&&N;typeof Oe=="object"&&!~Me.indexOf(Oe);Oe=Ue(Oe))Object.getOwnPropertyNames(Oe).forEach(Pe=>$e[Pe]=()=>N[Pe]);return $e.default=()=>N,qr.d(ge,$e),ge}})();qr.d=(Ue,Me)=>{for(var N in Me)qr.o(Me,N)&&!qr.o(Ue,N)&&Object.defineProperty(Ue,N,{enumerable:!0,get:Me[N]})};qr.o=(Ue,Me)=>Object.prototype.hasOwnProperty.call(Ue,Me);qr.r=Ue=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(Ue,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Ue,"__esModule",{value:!0})};(()=>{var Ue;if(typeof import.meta.url=="string"&&(Ue=import.meta.url),!Ue)throw new Error("Automatic publicPath is not supported in this browser");Ue=Ue.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),qr.p=Ue})();qr.b=new URL("./",import.meta.url);var p={};/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/qr.r(p);qr.d(p,{ASTFeatureExtractor:()=>rr.ASTFeatureExtractor,ASTForAudioClassification:()=>v.ASTForAudioClassification,ASTModel:()=>v.ASTModel,ASTPreTrainedModel:()=>v.ASTPreTrainedModel,AlbertForMaskedLM:()=>v.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>v.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>v.AlbertForSequenceClassification,AlbertModel:()=>v.AlbertModel,AlbertPreTrainedModel:()=>v.AlbertPreTrainedModel,AlbertTokenizer:()=>ar.AlbertTokenizer,AudioClassificationPipeline:()=>Gr.AudioClassificationPipeline,AutoConfig:()=>vp.AutoConfig,AutoModel:()=>v.AutoModel,AutoModelForAudioClassification:()=>v.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>v.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>v.AutoModelForCTC,AutoModelForCausalLM:()=>v.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>v.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>v.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>v.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>v.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>v.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>v.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>v.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>v.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>v.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>v.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>v.AutoModelForObjectDetection,AutoModelForQuestionAnswering:()=>v.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>v.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>v.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>v.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>v.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>v.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>v.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>v.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>v.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>v.AutoModelForVision2Seq,AutoModelForXVector:()=>v.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>v.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>rr.AutoProcessor,AutoTokenizer:()=>ar.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>Gr.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>v.BartForConditionalGeneration,BartForSequenceClassification:()=>v.BartForSequenceClassification,BartModel:()=>v.BartModel,BartPretrainedModel:()=>v.BartPretrainedModel,BartTokenizer:()=>ar.BartTokenizer,BaseModelOutput:()=>v.BaseModelOutput,BaseStreamer:()=>xp.BaseStreamer,BeitFeatureExtractor:()=>rr.BeitFeatureExtractor,BeitForImageClassification:()=>v.BeitForImageClassification,BeitModel:()=>v.BeitModel,BeitPreTrainedModel:()=>v.BeitPreTrainedModel,BertForMaskedLM:()=>v.BertForMaskedLM,BertForQuestionAnswering:()=>v.BertForQuestionAnswering,BertForSequenceClassification:()=>v.BertForSequenceClassification,BertForTokenClassification:()=>v.BertForTokenClassification,BertModel:()=>v.BertModel,BertPreTrainedModel:()=>v.BertPreTrainedModel,BertTokenizer:()=>ar.BertTokenizer,BitImageProcessor:()=>rr.BitImageProcessor,BlenderbotForConditionalGeneration:()=>v.BlenderbotForConditionalGeneration,BlenderbotModel:()=>v.BlenderbotModel,BlenderbotPreTrainedModel:()=>v.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>v.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>v.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>v.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>ar.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>ar.BlenderbotTokenizer,BloomForCausalLM:()=>v.BloomForCausalLM,BloomModel:()=>v.BloomModel,BloomPreTrainedModel:()=>v.BloomPreTrainedModel,BloomTokenizer:()=>ar.BloomTokenizer,CLIPFeatureExtractor:()=>rr.CLIPFeatureExtractor,CLIPImageProcessor:()=>rr.CLIPImageProcessor,CLIPModel:()=>v.CLIPModel,CLIPPreTrainedModel:()=>v.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>v.CLIPSegForImageSegmentation,CLIPSegModel:()=>v.CLIPSegModel,CLIPSegPreTrainedModel:()=>v.CLIPSegPreTrainedModel,CLIPTextModel:()=>v.CLIPTextModel,CLIPTextModelWithProjection:()=>v.CLIPTextModelWithProjection,CLIPTokenizer:()=>ar.CLIPTokenizer,CLIPVisionModel:()=>v.CLIPVisionModel,CLIPVisionModelWithProjection:()=>v.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>v.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>v.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>v.CamembertForSequenceClassification,CamembertForTokenClassification:()=>v.CamembertForTokenClassification,CamembertModel:()=>v.CamembertModel,CamembertPreTrainedModel:()=>v.CamembertPreTrainedModel,CamembertTokenizer:()=>ar.CamembertTokenizer,CausalLMOutput:()=>v.CausalLMOutput,CausalLMOutputWithPast:()=>v.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>rr.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>v.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>v.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>v.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>rr.ClapFeatureExtractor,ClapModel:()=>v.ClapModel,ClapPreTrainedModel:()=>v.ClapPreTrainedModel,ClapTextModelWithProjection:()=>v.ClapTextModelWithProjection,CodeGenForCausalLM:()=>v.CodeGenForCausalLM,CodeGenModel:()=>v.CodeGenModel,CodeGenPreTrainedModel:()=>v.CodeGenPreTrainedModel,CodeGenTokenizer:()=>ar.CodeGenTokenizer,CodeLlamaTokenizer:()=>ar.CodeLlamaTokenizer,CohereForCausalLM:()=>v.CohereForCausalLM,CohereModel:()=>v.CohereModel,CoherePreTrainedModel:()=>v.CoherePreTrainedModel,CohereTokenizer:()=>ar.CohereTokenizer,ConvBertForMaskedLM:()=>v.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>v.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>v.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>v.ConvBertForTokenClassification,ConvBertModel:()=>v.ConvBertModel,ConvBertPreTrainedModel:()=>v.ConvBertPreTrainedModel,ConvBertTokenizer:()=>ar.ConvBertTokenizer,ConvNextFeatureExtractor:()=>rr.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>v.ConvNextForImageClassification,ConvNextImageProcessor:()=>rr.ConvNextImageProcessor,ConvNextModel:()=>v.ConvNextModel,ConvNextPreTrainedModel:()=>v.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>v.ConvNextV2ForImageClassification,ConvNextV2Model:()=>v.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>v.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>rr.DPTFeatureExtractor,DPTForDepthEstimation:()=>v.DPTForDepthEstimation,DPTImageProcessor:()=>rr.DPTImageProcessor,DPTModel:()=>v.DPTModel,DPTPreTrainedModel:()=>v.DPTPreTrainedModel,DebertaForMaskedLM:()=>v.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>v.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>v.DebertaForSequenceClassification,DebertaForTokenClassification:()=>v.DebertaForTokenClassification,DebertaModel:()=>v.DebertaModel,DebertaPreTrainedModel:()=>v.DebertaPreTrainedModel,DebertaTokenizer:()=>ar.DebertaTokenizer,DebertaV2ForMaskedLM:()=>v.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>v.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>v.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>v.DebertaV2ForTokenClassification,DebertaV2Model:()=>v.DebertaV2Model,DebertaV2PreTrainedModel:()=>v.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>ar.DebertaV2Tokenizer,DecisionTransformerModel:()=>v.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>v.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>rr.DeiTFeatureExtractor,DeiTForImageClassification:()=>v.DeiTForImageClassification,DeiTModel:()=>v.DeiTModel,DeiTPreTrainedModel:()=>v.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>v.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>v.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>Gr.DepthEstimationPipeline,DepthProForDepthEstimation:()=>v.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>v.DepthProPreTrainedModel,DetrFeatureExtractor:()=>rr.DetrFeatureExtractor,DetrForObjectDetection:()=>v.DetrForObjectDetection,DetrForSegmentation:()=>v.DetrForSegmentation,DetrModel:()=>v.DetrModel,DetrObjectDetectionOutput:()=>v.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>v.DetrPreTrainedModel,DetrSegmentationOutput:()=>v.DetrSegmentationOutput,Dinov2ForImageClassification:()=>v.Dinov2ForImageClassification,Dinov2Model:()=>v.Dinov2Model,Dinov2PreTrainedModel:()=>v.Dinov2PreTrainedModel,DistilBertForMaskedLM:()=>v.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>v.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>v.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>v.DistilBertForTokenClassification,DistilBertModel:()=>v.DistilBertModel,DistilBertPreTrainedModel:()=>v.DistilBertPreTrainedModel,DistilBertTokenizer:()=>ar.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>Gr.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>rr.DonutFeatureExtractor,DonutImageProcessor:()=>rr.DonutImageProcessor,DonutSwinModel:()=>v.DonutSwinModel,DonutSwinPreTrainedModel:()=>v.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>v.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>rr.EfficientNetImageProcessor,EfficientNetModel:()=>v.EfficientNetModel,EfficientNetPreTrainedModel:()=>v.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>v.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>v.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>v.ElectraForSequenceClassification,ElectraForTokenClassification:()=>v.ElectraForTokenClassification,ElectraModel:()=>v.ElectraModel,ElectraPreTrainedModel:()=>v.ElectraPreTrainedModel,ElectraTokenizer:()=>ar.ElectraTokenizer,EosTokenCriteria:()=>cd.EosTokenCriteria,EsmForMaskedLM:()=>v.EsmForMaskedLM,EsmForSequenceClassification:()=>v.EsmForSequenceClassification,EsmForTokenClassification:()=>v.EsmForTokenClassification,EsmModel:()=>v.EsmModel,EsmPreTrainedModel:()=>v.EsmPreTrainedModel,EsmTokenizer:()=>ar.EsmTokenizer,FFT:()=>In.FFT,FalconForCausalLM:()=>v.FalconForCausalLM,FalconModel:()=>v.FalconModel,FalconPreTrainedModel:()=>v.FalconPreTrainedModel,FalconTokenizer:()=>ar.FalconTokenizer,FastViTForImageClassification:()=>v.FastViTForImageClassification,FastViTModel:()=>v.FastViTModel,FastViTPreTrainedModel:()=>v.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>Gr.FeatureExtractionPipeline,FeatureExtractor:()=>rr.FeatureExtractor,FillMaskPipeline:()=>Gr.FillMaskPipeline,Florence2ForConditionalGeneration:()=>v.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>v.Florence2PreTrainedModel,Florence2Processor:()=>rr.Florence2Processor,GLPNFeatureExtractor:()=>rr.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>v.GLPNForDepthEstimation,GLPNModel:()=>v.GLPNModel,GLPNPreTrainedModel:()=>v.GLPNPreTrainedModel,GPT2LMHeadModel:()=>v.GPT2LMHeadModel,GPT2Model:()=>v.GPT2Model,GPT2PreTrainedModel:()=>v.GPT2PreTrainedModel,GPT2Tokenizer:()=>ar.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>v.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>v.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>v.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>v.GPTJForCausalLM,GPTJModel:()=>v.GPTJModel,GPTJPreTrainedModel:()=>v.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>v.GPTNeoForCausalLM,GPTNeoModel:()=>v.GPTNeoModel,GPTNeoPreTrainedModel:()=>v.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>v.GPTNeoXForCausalLM,GPTNeoXModel:()=>v.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>v.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>ar.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>v.Gemma2ForCausalLM,Gemma2Model:()=>v.Gemma2Model,Gemma2PreTrainedModel:()=>v.Gemma2PreTrainedModel,GemmaForCausalLM:()=>v.GemmaForCausalLM,GemmaModel:()=>v.GemmaModel,GemmaPreTrainedModel:()=>v.GemmaPreTrainedModel,GemmaTokenizer:()=>ar.GemmaTokenizer,GraniteForCausalLM:()=>v.GraniteForCausalLM,GraniteModel:()=>v.GraniteModel,GranitePreTrainedModel:()=>v.GranitePreTrainedModel,Grok1Tokenizer:()=>ar.Grok1Tokenizer,GroupViTModel:()=>v.GroupViTModel,GroupViTPreTrainedModel:()=>v.GroupViTPreTrainedModel,HerbertTokenizer:()=>ar.HerbertTokenizer,HieraForImageClassification:()=>v.HieraForImageClassification,HieraModel:()=>v.HieraModel,HieraPreTrainedModel:()=>v.HieraPreTrainedModel,HubertForCTC:()=>v.HubertForCTC,HubertForSequenceClassification:()=>v.HubertForSequenceClassification,HubertModel:()=>v.HubertModel,HubertPreTrainedModel:()=>v.HubertPreTrainedModel,ImageClassificationPipeline:()=>Gr.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>Gr.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>rr.ImageFeatureExtractor,ImageMattingOutput:()=>v.ImageMattingOutput,ImageSegmentationPipeline:()=>Gr.ImageSegmentationPipeline,ImageToImagePipeline:()=>Gr.ImageToImagePipeline,ImageToTextPipeline:()=>Gr.ImageToTextPipeline,InterruptableStoppingCriteria:()=>cd.InterruptableStoppingCriteria,JAISLMHeadModel:()=>v.JAISLMHeadModel,JAISModel:()=>v.JAISModel,JAISPreTrainedModel:()=>v.JAISPreTrainedModel,LlamaForCausalLM:()=>v.LlamaForCausalLM,LlamaModel:()=>v.LlamaModel,LlamaPreTrainedModel:()=>v.LlamaPreTrainedModel,LlamaTokenizer:()=>ar.LlamaTokenizer,LlavaForConditionalGeneration:()=>v.LlavaForConditionalGeneration,LlavaPreTrainedModel:()=>v.LlavaPreTrainedModel,LongT5ForConditionalGeneration:()=>v.LongT5ForConditionalGeneration,LongT5Model:()=>v.LongT5Model,LongT5PreTrainedModel:()=>v.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>v.M2M100ForConditionalGeneration,M2M100Model:()=>v.M2M100Model,M2M100PreTrainedModel:()=>v.M2M100PreTrainedModel,M2M100Tokenizer:()=>ar.M2M100Tokenizer,MBart50Tokenizer:()=>ar.MBart50Tokenizer,MBartForCausalLM:()=>v.MBartForCausalLM,MBartForConditionalGeneration:()=>v.MBartForConditionalGeneration,MBartForSequenceClassification:()=>v.MBartForSequenceClassification,MBartModel:()=>v.MBartModel,MBartPreTrainedModel:()=>v.MBartPreTrainedModel,MBartTokenizer:()=>ar.MBartTokenizer,MPNetForMaskedLM:()=>v.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>v.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>v.MPNetForSequenceClassification,MPNetForTokenClassification:()=>v.MPNetForTokenClassification,MPNetModel:()=>v.MPNetModel,MPNetPreTrainedModel:()=>v.MPNetPreTrainedModel,MPNetTokenizer:()=>ar.MPNetTokenizer,MT5ForConditionalGeneration:()=>v.MT5ForConditionalGeneration,MT5Model:()=>v.MT5Model,MT5PreTrainedModel:()=>v.MT5PreTrainedModel,MarianMTModel:()=>v.MarianMTModel,MarianModel:()=>v.MarianModel,MarianPreTrainedModel:()=>v.MarianPreTrainedModel,MarianTokenizer:()=>ar.MarianTokenizer,MaskFormerFeatureExtractor:()=>rr.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>v.MaskFormerForInstanceSegmentation,MaskFormerModel:()=>v.MaskFormerModel,MaskFormerPreTrainedModel:()=>v.MaskFormerPreTrainedModel,MaskedLMOutput:()=>v.MaskedLMOutput,MaxLengthCriteria:()=>cd.MaxLengthCriteria,MistralForCausalLM:()=>v.MistralForCausalLM,MistralModel:()=>v.MistralModel,MistralPreTrainedModel:()=>v.MistralPreTrainedModel,MobileBertForMaskedLM:()=>v.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>v.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>v.MobileBertForSequenceClassification,MobileBertModel:()=>v.MobileBertModel,MobileBertPreTrainedModel:()=>v.MobileBertPreTrainedModel,MobileBertTokenizer:()=>ar.MobileBertTokenizer,MobileLLMForCausalLM:()=>v.MobileLLMForCausalLM,MobileLLMModel:()=>v.MobileLLMModel,MobileLLMPreTrainedModel:()=>v.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>rr.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>v.MobileNetV1ForImageClassification,MobileNetV1Model:()=>v.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>v.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>rr.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>v.MobileNetV2ForImageClassification,MobileNetV2Model:()=>v.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>v.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>rr.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>v.MobileNetV3ForImageClassification,MobileNetV3Model:()=>v.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>v.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>rr.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>v.MobileNetV4ForImageClassification,MobileNetV4Model:()=>v.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>v.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>rr.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>v.MobileViTForImageClassification,MobileViTImageProcessor:()=>rr.MobileViTImageProcessor,MobileViTModel:()=>v.MobileViTModel,MobileViTPreTrainedModel:()=>v.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>v.MobileViTV2ForImageClassification,MobileViTV2Model:()=>v.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>v.MobileViTV2PreTrainedModel,ModelOutput:()=>v.ModelOutput,Moondream1ForConditionalGeneration:()=>v.Moondream1ForConditionalGeneration,MptForCausalLM:()=>v.MptForCausalLM,MptModel:()=>v.MptModel,MptPreTrainedModel:()=>v.MptPreTrainedModel,MusicgenForCausalLM:()=>v.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>v.MusicgenForConditionalGeneration,MusicgenModel:()=>v.MusicgenModel,MusicgenPreTrainedModel:()=>v.MusicgenPreTrainedModel,NllbTokenizer:()=>ar.NllbTokenizer,NomicBertModel:()=>v.NomicBertModel,NomicBertPreTrainedModel:()=>v.NomicBertPreTrainedModel,NougatImageProcessor:()=>rr.NougatImageProcessor,NougatTokenizer:()=>ar.NougatTokenizer,OPTForCausalLM:()=>v.OPTForCausalLM,OPTModel:()=>v.OPTModel,OPTPreTrainedModel:()=>v.OPTPreTrainedModel,ObjectDetectionPipeline:()=>Gr.ObjectDetectionPipeline,OlmoForCausalLM:()=>v.OlmoForCausalLM,OlmoModel:()=>v.OlmoModel,OlmoPreTrainedModel:()=>v.OlmoPreTrainedModel,OpenELMForCausalLM:()=>v.OpenELMForCausalLM,OpenELMModel:()=>v.OpenELMModel,OpenELMPreTrainedModel:()=>v.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>rr.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>v.OwlViTForObjectDetection,OwlViTModel:()=>v.OwlViTModel,OwlViTPreTrainedModel:()=>v.OwlViTPreTrainedModel,OwlViTProcessor:()=>rr.OwlViTProcessor,Owlv2ForObjectDetection:()=>v.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>rr.Owlv2ImageProcessor,Owlv2Model:()=>v.Owlv2Model,Owlv2PreTrainedModel:()=>v.Owlv2PreTrainedModel,Phi3ForCausalLM:()=>v.Phi3ForCausalLM,Phi3Model:()=>v.Phi3Model,Phi3PreTrainedModel:()=>v.Phi3PreTrainedModel,PhiForCausalLM:()=>v.PhiForCausalLM,PhiModel:()=>v.PhiModel,PhiPreTrainedModel:()=>v.PhiPreTrainedModel,Pipeline:()=>Gr.Pipeline,PreTrainedModel:()=>v.PreTrainedModel,PreTrainedTokenizer:()=>ar.PreTrainedTokenizer,PretrainedConfig:()=>vp.PretrainedConfig,PretrainedMixin:()=>v.PretrainedMixin,Processor:()=>rr.Processor,PvtForImageClassification:()=>v.PvtForImageClassification,PvtImageProcessor:()=>rr.PvtImageProcessor,PvtModel:()=>v.PvtModel,PvtPreTrainedModel:()=>v.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>rr.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>v.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>v.PyAnnoteModel,PyAnnotePreTrainedModel:()=>v.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>rr.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>v.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>Gr.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>v.Qwen2ForCausalLM,Qwen2Model:()=>v.Qwen2Model,Qwen2PreTrainedModel:()=>v.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>ar.Qwen2Tokenizer,RTDetrForObjectDetection:()=>v.RTDetrForObjectDetection,RTDetrImageProcessor:()=>rr.RTDetrImageProcessor,RTDetrModel:()=>v.RTDetrModel,RTDetrObjectDetectionOutput:()=>v.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>v.RTDetrPreTrainedModel,RawImage:()=>F_.RawImage,ResNetForImageClassification:()=>v.ResNetForImageClassification,ResNetModel:()=>v.ResNetModel,ResNetPreTrainedModel:()=>v.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>v.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>v.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>v.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>v.RoFormerForTokenClassification,RoFormerModel:()=>v.RoFormerModel,RoFormerPreTrainedModel:()=>v.RoFormerPreTrainedModel,RoFormerTokenizer:()=>ar.RoFormerTokenizer,RobertaForMaskedLM:()=>v.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>v.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>v.RobertaForSequenceClassification,RobertaForTokenClassification:()=>v.RobertaForTokenClassification,RobertaModel:()=>v.RobertaModel,RobertaPreTrainedModel:()=>v.RobertaPreTrainedModel,RobertaTokenizer:()=>ar.RobertaTokenizer,SamImageProcessor:()=>rr.SamImageProcessor,SamImageSegmentationOutput:()=>v.SamImageSegmentationOutput,SamModel:()=>v.SamModel,SamPreTrainedModel:()=>v.SamPreTrainedModel,SamProcessor:()=>rr.SamProcessor,SapiensFeatureExtractor:()=>rr.SapiensFeatureExtractor,SapiensForDepthEstimation:()=>v.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>v.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>v.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>v.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>rr.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>rr.SegformerFeatureExtractor,SegformerForImageClassification:()=>v.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>v.SegformerForSemanticSegmentation,SegformerModel:()=>v.SegformerModel,SegformerPreTrainedModel:()=>v.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>v.Seq2SeqLMOutput,SequenceClassifierOutput:()=>v.SequenceClassifierOutput,SiglipImageProcessor:()=>rr.SiglipImageProcessor,SiglipModel:()=>v.SiglipModel,SiglipPreTrainedModel:()=>v.SiglipPreTrainedModel,SiglipTextModel:()=>v.SiglipTextModel,SiglipTokenizer:()=>ar.SiglipTokenizer,SiglipVisionModel:()=>v.SiglipVisionModel,SpeechT5FeatureExtractor:()=>rr.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>v.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>v.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>v.SpeechT5HifiGan,SpeechT5Model:()=>v.SpeechT5Model,SpeechT5PreTrainedModel:()=>v.SpeechT5PreTrainedModel,SpeechT5Processor:()=>rr.SpeechT5Processor,SpeechT5Tokenizer:()=>ar.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>v.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>v.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>v.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>v.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>v.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>ar.SqueezeBertTokenizer,StableLmForCausalLM:()=>v.StableLmForCausalLM,StableLmModel:()=>v.StableLmModel,StableLmPreTrainedModel:()=>v.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>v.Starcoder2ForCausalLM,Starcoder2Model:()=>v.Starcoder2Model,Starcoder2PreTrainedModel:()=>v.Starcoder2PreTrainedModel,StoppingCriteria:()=>cd.StoppingCriteria,StoppingCriteriaList:()=>cd.StoppingCriteriaList,SummarizationPipeline:()=>Gr.SummarizationPipeline,Swin2SRForImageSuperResolution:()=>v.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>rr.Swin2SRImageProcessor,Swin2SRModel:()=>v.Swin2SRModel,Swin2SRPreTrainedModel:()=>v.Swin2SRPreTrainedModel,SwinForImageClassification:()=>v.SwinForImageClassification,SwinModel:()=>v.SwinModel,SwinPreTrainedModel:()=>v.SwinPreTrainedModel,T5ForConditionalGeneration:()=>v.T5ForConditionalGeneration,T5Model:()=>v.T5Model,T5PreTrainedModel:()=>v.T5PreTrainedModel,T5Tokenizer:()=>ar.T5Tokenizer,TableTransformerForObjectDetection:()=>v.TableTransformerForObjectDetection,TableTransformerModel:()=>v.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>v.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>v.TableTransformerPreTrainedModel,Tensor:()=>un.Tensor,Text2TextGenerationPipeline:()=>Gr.Text2TextGenerationPipeline,TextClassificationPipeline:()=>Gr.TextClassificationPipeline,TextGenerationPipeline:()=>Gr.TextGenerationPipeline,TextStreamer:()=>xp.TextStreamer,TextToAudioPipeline:()=>Gr.TextToAudioPipeline,TokenClassificationPipeline:()=>Gr.TokenClassificationPipeline,TokenClassifierOutput:()=>v.TokenClassifierOutput,TokenizerModel:()=>ar.TokenizerModel,TrOCRForCausalLM:()=>v.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>v.TrOCRPreTrainedModel,TranslationPipeline:()=>Gr.TranslationPipeline,UniSpeechForCTC:()=>v.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>v.UniSpeechForSequenceClassification,UniSpeechModel:()=>v.UniSpeechModel,UniSpeechPreTrainedModel:()=>v.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>v.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>v.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>v.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>v.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>v.UniSpeechSatPreTrainedModel,ViTFeatureExtractor:()=>rr.ViTFeatureExtractor,ViTForImageClassification:()=>v.ViTForImageClassification,ViTImageProcessor:()=>rr.ViTImageProcessor,ViTMAEModel:()=>v.ViTMAEModel,ViTMAEPreTrainedModel:()=>v.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>v.ViTMSNForImageClassification,ViTMSNModel:()=>v.ViTMSNModel,ViTMSNPreTrainedModel:()=>v.ViTMSNPreTrainedModel,ViTModel:()=>v.ViTModel,ViTPreTrainedModel:()=>v.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>v.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>v.VitMatteForImageMatting,VitMatteImageProcessor:()=>rr.VitMatteImageProcessor,VitMattePreTrainedModel:()=>v.VitMattePreTrainedModel,VitsModel:()=>v.VitsModel,VitsModelOutput:()=>v.VitsModelOutput,VitsPreTrainedModel:()=>v.VitsPreTrainedModel,VitsTokenizer:()=>ar.VitsTokenizer,Wav2Vec2BertForCTC:()=>v.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>v.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>v.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>v.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>ar.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>rr.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>v.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>v.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>v.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>v.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>v.Wav2Vec2PreTrainedModel,Wav2Vec2ProcessorWithLM:()=>rr.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>v.WavLMForAudioFrameClassification,WavLMForCTC:()=>v.WavLMForCTC,WavLMForSequenceClassification:()=>v.WavLMForSequenceClassification,WavLMForXVector:()=>v.WavLMForXVector,WavLMModel:()=>v.WavLMModel,WavLMPreTrainedModel:()=>v.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>rr.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>v.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>v.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>rr.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>v.WhisperForConditionalGeneration,WhisperModel:()=>v.WhisperModel,WhisperPreTrainedModel:()=>v.WhisperPreTrainedModel,WhisperProcessor:()=>rr.WhisperProcessor,WhisperTextStreamer:()=>xp.WhisperTextStreamer,WhisperTokenizer:()=>ar.WhisperTokenizer,XLMForQuestionAnswering:()=>v.XLMForQuestionAnswering,XLMForSequenceClassification:()=>v.XLMForSequenceClassification,XLMForTokenClassification:()=>v.XLMForTokenClassification,XLMModel:()=>v.XLMModel,XLMPreTrainedModel:()=>v.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>v.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>v.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>v.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>v.XLMRobertaForTokenClassification,XLMRobertaModel:()=>v.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>v.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>ar.XLMRobertaTokenizer,XLMTokenizer:()=>ar.XLMTokenizer,XLMWithLMHeadModel:()=>v.XLMWithLMHeadModel,XVectorOutput:()=>v.XVectorOutput,YolosFeatureExtractor:()=>rr.YolosFeatureExtractor,YolosForObjectDetection:()=>v.YolosForObjectDetection,YolosModel:()=>v.YolosModel,YolosObjectDetectionOutput:()=>v.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>v.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>Gr.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>Gr.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>Gr.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>Gr.ZeroShotObjectDetectionPipeline,bankers_round:()=>In.bankers_round,cat:()=>un.cat,cos_sim:()=>In.cos_sim,dot:()=>In.dot,dynamic_time_warping:()=>In.dynamic_time_warping,env:()=>I_.env,full:()=>un.full,full_like:()=>un.full_like,getKeyValueShapes:()=>vp.getKeyValueShapes,hamming:()=>ta.hamming,hanning:()=>ta.hanning,interpolate:()=>un.interpolate,interpolate_4d:()=>un.interpolate_4d,interpolate_data:()=>In.interpolate_data,is_chinese_char:()=>ar.is_chinese_char,layer_norm:()=>un.layer_norm,log_softmax:()=>In.log_softmax,magnitude:()=>In.magnitude,matmul:()=>un.matmul,max:()=>In.max,mean:()=>un.mean,mean_pooling:()=>un.mean_pooling,medianFilter:()=>In.medianFilter,mel_filter_bank:()=>ta.mel_filter_bank,min:()=>In.min,ones:()=>un.ones,ones_like:()=>un.ones_like,permute:()=>un.permute,permute_data:()=>In.permute_data,pipeline:()=>Gr.pipeline,quantize_embeddings:()=>un.quantize_embeddings,read_audio:()=>ta.read_audio,rfft:()=>un.rfft,round:()=>In.round,softmax:()=>In.softmax,spectrogram:()=>ta.spectrogram,stack:()=>un.stack,std_mean:()=>un.std_mean,topk:()=>un.topk,window_function:()=>ta.window_function,zeros:()=>un.zeros,zeros_like:()=>un.zeros_like});var I_=qr("./src/env.js"),Gr=qr("./src/pipelines.js"),v=qr("./src/models.js"),ar=qr("./src/tokenizers.js"),rr=qr("./src/processors.js"),vp=qr("./src/configs.js"),ta=qr("./src/utils/audio.js"),F_=qr("./src/utils/image.js"),un=qr("./src/utils/tensor.js"),In=qr("./src/utils/maths.js"),xp=qr("./src/generation/streamers.js"),cd=qr("./src/generation/stopping_criteria.js");p.ASTFeatureExtractor;p.ASTForAudioClassification;p.ASTModel;p.ASTPreTrainedModel;p.AlbertForMaskedLM;p.AlbertForQuestionAnswering;p.AlbertForSequenceClassification;p.AlbertModel;p.AlbertPreTrainedModel;p.AlbertTokenizer;p.AudioClassificationPipeline;p.AutoConfig;p.AutoModel;p.AutoModelForAudioClassification;p.AutoModelForAudioFrameClassification;p.AutoModelForCTC;p.AutoModelForCausalLM;p.AutoModelForDepthEstimation;p.AutoModelForDocumentQuestionAnswering;p.AutoModelForImageClassification;p.AutoModelForImageFeatureExtraction;p.AutoModelForImageMatting;p.AutoModelForImageSegmentation;p.AutoModelForImageToImage;p.AutoModelForMaskGeneration;p.AutoModelForMaskedLM;p.AutoModelForNormalEstimation;p.AutoModelForObjectDetection;p.AutoModelForQuestionAnswering;p.AutoModelForSemanticSegmentation;p.AutoModelForSeq2SeqLM;p.AutoModelForSequenceClassification;p.AutoModelForSpeechSeq2Seq;p.AutoModelForTextToSpectrogram;p.AutoModelForTextToWaveform;p.AutoModelForTokenClassification;p.AutoModelForUniversalSegmentation;p.AutoModelForVision2Seq;p.AutoModelForXVector;p.AutoModelForZeroShotObjectDetection;p.AutoProcessor;p.AutoTokenizer;p.AutomaticSpeechRecognitionPipeline;p.BartForConditionalGeneration;p.BartForSequenceClassification;p.BartModel;p.BartPretrainedModel;p.BartTokenizer;p.BaseModelOutput;p.BaseStreamer;p.BeitFeatureExtractor;p.BeitForImageClassification;p.BeitModel;p.BeitPreTrainedModel;p.BertForMaskedLM;p.BertForQuestionAnswering;p.BertForSequenceClassification;p.BertForTokenClassification;p.BertModel;p.BertPreTrainedModel;p.BertTokenizer;p.BitImageProcessor;p.BlenderbotForConditionalGeneration;p.BlenderbotModel;p.BlenderbotPreTrainedModel;p.BlenderbotSmallForConditionalGeneration;p.BlenderbotSmallModel;p.BlenderbotSmallPreTrainedModel;p.BlenderbotSmallTokenizer;p.BlenderbotTokenizer;p.BloomForCausalLM;p.BloomModel;p.BloomPreTrainedModel;p.BloomTokenizer;p.CLIPFeatureExtractor;p.CLIPImageProcessor;p.CLIPModel;p.CLIPPreTrainedModel;p.CLIPSegForImageSegmentation;p.CLIPSegModel;p.CLIPSegPreTrainedModel;p.CLIPTextModel;p.CLIPTextModelWithProjection;p.CLIPTokenizer;p.CLIPVisionModel;p.CLIPVisionModelWithProjection;p.CamembertForMaskedLM;p.CamembertForQuestionAnswering;p.CamembertForSequenceClassification;p.CamembertForTokenClassification;p.CamembertModel;p.CamembertPreTrainedModel;p.CamembertTokenizer;p.CausalLMOutput;p.CausalLMOutputWithPast;p.ChineseCLIPFeatureExtractor;p.ChineseCLIPModel;p.ChineseCLIPPreTrainedModel;p.ClapAudioModelWithProjection;p.ClapFeatureExtractor;p.ClapModel;p.ClapPreTrainedModel;p.ClapTextModelWithProjection;p.CodeGenForCausalLM;p.CodeGenModel;p.CodeGenPreTrainedModel;p.CodeGenTokenizer;p.CodeLlamaTokenizer;p.CohereForCausalLM;p.CohereModel;p.CoherePreTrainedModel;p.CohereTokenizer;p.ConvBertForMaskedLM;p.ConvBertForQuestionAnswering;p.ConvBertForSequenceClassification;p.ConvBertForTokenClassification;p.ConvBertModel;p.ConvBertPreTrainedModel;p.ConvBertTokenizer;p.ConvNextFeatureExtractor;p.ConvNextForImageClassification;p.ConvNextImageProcessor;p.ConvNextModel;p.ConvNextPreTrainedModel;p.ConvNextV2ForImageClassification;p.ConvNextV2Model;p.ConvNextV2PreTrainedModel;p.DPTFeatureExtractor;p.DPTForDepthEstimation;p.DPTImageProcessor;p.DPTModel;p.DPTPreTrainedModel;p.DebertaForMaskedLM;p.DebertaForQuestionAnswering;p.DebertaForSequenceClassification;p.DebertaForTokenClassification;p.DebertaModel;p.DebertaPreTrainedModel;p.DebertaTokenizer;p.DebertaV2ForMaskedLM;p.DebertaV2ForQuestionAnswering;p.DebertaV2ForSequenceClassification;p.DebertaV2ForTokenClassification;p.DebertaV2Model;p.DebertaV2PreTrainedModel;p.DebertaV2Tokenizer;p.DecisionTransformerModel;p.DecisionTransformerPreTrainedModel;p.DeiTFeatureExtractor;p.DeiTForImageClassification;p.DeiTModel;p.DeiTPreTrainedModel;p.DepthAnythingForDepthEstimation;p.DepthAnythingPreTrainedModel;p.DepthEstimationPipeline;p.DepthProForDepthEstimation;p.DepthProPreTrainedModel;p.DetrFeatureExtractor;p.DetrForObjectDetection;p.DetrForSegmentation;p.DetrModel;p.DetrObjectDetectionOutput;p.DetrPreTrainedModel;p.DetrSegmentationOutput;p.Dinov2ForImageClassification;p.Dinov2Model;p.Dinov2PreTrainedModel;p.DistilBertForMaskedLM;p.DistilBertForQuestionAnswering;p.DistilBertForSequenceClassification;p.DistilBertForTokenClassification;p.DistilBertModel;p.DistilBertPreTrainedModel;p.DistilBertTokenizer;p.DocumentQuestionAnsweringPipeline;p.DonutFeatureExtractor;p.DonutImageProcessor;p.DonutSwinModel;p.DonutSwinPreTrainedModel;p.EfficientNetForImageClassification;p.EfficientNetImageProcessor;p.EfficientNetModel;p.EfficientNetPreTrainedModel;p.ElectraForMaskedLM;p.ElectraForQuestionAnswering;p.ElectraForSequenceClassification;p.ElectraForTokenClassification;p.ElectraModel;p.ElectraPreTrainedModel;p.ElectraTokenizer;p.EosTokenCriteria;p.EsmForMaskedLM;p.EsmForSequenceClassification;p.EsmForTokenClassification;p.EsmModel;p.EsmPreTrainedModel;p.EsmTokenizer;p.FFT;p.FalconForCausalLM;p.FalconModel;p.FalconPreTrainedModel;p.FalconTokenizer;p.FastViTForImageClassification;p.FastViTModel;p.FastViTPreTrainedModel;p.FeatureExtractionPipeline;p.FeatureExtractor;p.FillMaskPipeline;p.Florence2ForConditionalGeneration;p.Florence2PreTrainedModel;p.Florence2Processor;p.GLPNFeatureExtractor;p.GLPNForDepthEstimation;p.GLPNModel;p.GLPNPreTrainedModel;p.GPT2LMHeadModel;p.GPT2Model;p.GPT2PreTrainedModel;p.GPT2Tokenizer;p.GPTBigCodeForCausalLM;p.GPTBigCodeModel;p.GPTBigCodePreTrainedModel;p.GPTJForCausalLM;p.GPTJModel;p.GPTJPreTrainedModel;p.GPTNeoForCausalLM;p.GPTNeoModel;p.GPTNeoPreTrainedModel;p.GPTNeoXForCausalLM;p.GPTNeoXModel;p.GPTNeoXPreTrainedModel;p.GPTNeoXTokenizer;p.Gemma2ForCausalLM;p.Gemma2Model;p.Gemma2PreTrainedModel;p.GemmaForCausalLM;p.GemmaModel;p.GemmaPreTrainedModel;p.GemmaTokenizer;p.GraniteForCausalLM;p.GraniteModel;p.GranitePreTrainedModel;p.Grok1Tokenizer;p.GroupViTModel;p.GroupViTPreTrainedModel;p.HerbertTokenizer;p.HieraForImageClassification;p.HieraModel;p.HieraPreTrainedModel;p.HubertForCTC;p.HubertForSequenceClassification;p.HubertModel;p.HubertPreTrainedModel;p.ImageClassificationPipeline;p.ImageFeatureExtractionPipeline;p.ImageFeatureExtractor;p.ImageMattingOutput;p.ImageSegmentationPipeline;p.ImageToImagePipeline;p.ImageToTextPipeline;p.InterruptableStoppingCriteria;p.JAISLMHeadModel;p.JAISModel;p.JAISPreTrainedModel;p.LlamaForCausalLM;p.LlamaModel;p.LlamaPreTrainedModel;p.LlamaTokenizer;p.LlavaForConditionalGeneration;p.LlavaPreTrainedModel;p.LongT5ForConditionalGeneration;p.LongT5Model;p.LongT5PreTrainedModel;p.M2M100ForConditionalGeneration;p.M2M100Model;p.M2M100PreTrainedModel;p.M2M100Tokenizer;p.MBart50Tokenizer;p.MBartForCausalLM;p.MBartForConditionalGeneration;p.MBartForSequenceClassification;p.MBartModel;p.MBartPreTrainedModel;p.MBartTokenizer;p.MPNetForMaskedLM;p.MPNetForQuestionAnswering;p.MPNetForSequenceClassification;p.MPNetForTokenClassification;p.MPNetModel;p.MPNetPreTrainedModel;p.MPNetTokenizer;p.MT5ForConditionalGeneration;p.MT5Model;p.MT5PreTrainedModel;p.MarianMTModel;p.MarianModel;p.MarianPreTrainedModel;p.MarianTokenizer;p.MaskFormerFeatureExtractor;p.MaskFormerForInstanceSegmentation;p.MaskFormerModel;p.MaskFormerPreTrainedModel;p.MaskedLMOutput;p.MaxLengthCriteria;p.MistralForCausalLM;p.MistralModel;p.MistralPreTrainedModel;p.MobileBertForMaskedLM;p.MobileBertForQuestionAnswering;p.MobileBertForSequenceClassification;p.MobileBertModel;p.MobileBertPreTrainedModel;p.MobileBertTokenizer;p.MobileLLMForCausalLM;p.MobileLLMModel;p.MobileLLMPreTrainedModel;p.MobileNetV1FeatureExtractor;p.MobileNetV1ForImageClassification;p.MobileNetV1Model;p.MobileNetV1PreTrainedModel;p.MobileNetV2FeatureExtractor;p.MobileNetV2ForImageClassification;p.MobileNetV2Model;p.MobileNetV2PreTrainedModel;p.MobileNetV3FeatureExtractor;p.MobileNetV3ForImageClassification;p.MobileNetV3Model;p.MobileNetV3PreTrainedModel;p.MobileNetV4FeatureExtractor;p.MobileNetV4ForImageClassification;p.MobileNetV4Model;p.MobileNetV4PreTrainedModel;p.MobileViTFeatureExtractor;p.MobileViTForImageClassification;p.MobileViTImageProcessor;p.MobileViTModel;p.MobileViTPreTrainedModel;p.MobileViTV2ForImageClassification;p.MobileViTV2Model;p.MobileViTV2PreTrainedModel;p.ModelOutput;p.Moondream1ForConditionalGeneration;p.MptForCausalLM;p.MptModel;p.MptPreTrainedModel;p.MusicgenForCausalLM;p.MusicgenForConditionalGeneration;p.MusicgenModel;p.MusicgenPreTrainedModel;p.NllbTokenizer;p.NomicBertModel;p.NomicBertPreTrainedModel;p.NougatImageProcessor;p.NougatTokenizer;p.OPTForCausalLM;p.OPTModel;p.OPTPreTrainedModel;p.ObjectDetectionPipeline;p.OlmoForCausalLM;p.OlmoModel;p.OlmoPreTrainedModel;p.OpenELMForCausalLM;p.OpenELMModel;p.OpenELMPreTrainedModel;p.OwlViTFeatureExtractor;p.OwlViTForObjectDetection;p.OwlViTModel;p.OwlViTPreTrainedModel;p.OwlViTProcessor;p.Owlv2ForObjectDetection;p.Owlv2ImageProcessor;p.Owlv2Model;p.Owlv2PreTrainedModel;p.Phi3ForCausalLM;p.Phi3Model;p.Phi3PreTrainedModel;p.PhiForCausalLM;p.PhiModel;p.PhiPreTrainedModel;p.Pipeline;p.PreTrainedModel;p.PreTrainedTokenizer;p.PretrainedConfig;p.PretrainedMixin;p.Processor;p.PvtForImageClassification;p.PvtImageProcessor;p.PvtModel;p.PvtPreTrainedModel;p.PyAnnoteFeatureExtractor;p.PyAnnoteForAudioFrameClassification;p.PyAnnoteModel;p.PyAnnotePreTrainedModel;p.PyAnnoteProcessor;p.QuestionAnsweringModelOutput;p.QuestionAnsweringPipeline;p.Qwen2ForCausalLM;p.Qwen2Model;p.Qwen2PreTrainedModel;p.Qwen2Tokenizer;p.RTDetrForObjectDetection;p.RTDetrImageProcessor;p.RTDetrModel;p.RTDetrObjectDetectionOutput;p.RTDetrPreTrainedModel;p.RawImage;p.ResNetForImageClassification;p.ResNetModel;p.ResNetPreTrainedModel;p.RoFormerForMaskedLM;p.RoFormerForQuestionAnswering;p.RoFormerForSequenceClassification;p.RoFormerForTokenClassification;p.RoFormerModel;p.RoFormerPreTrainedModel;p.RoFormerTokenizer;p.RobertaForMaskedLM;p.RobertaForQuestionAnswering;p.RobertaForSequenceClassification;p.RobertaForTokenClassification;p.RobertaModel;p.RobertaPreTrainedModel;p.RobertaTokenizer;p.SamImageProcessor;p.SamImageSegmentationOutput;p.SamModel;p.SamPreTrainedModel;p.SamProcessor;p.SapiensFeatureExtractor;p.SapiensForDepthEstimation;p.SapiensForNormalEstimation;p.SapiensForSemanticSegmentation;p.SapiensPreTrainedModel;p.SeamlessM4TFeatureExtractor;p.SegformerFeatureExtractor;p.SegformerForImageClassification;p.SegformerForSemanticSegmentation;p.SegformerModel;p.SegformerPreTrainedModel;p.Seq2SeqLMOutput;p.SequenceClassifierOutput;p.SiglipImageProcessor;p.SiglipModel;p.SiglipPreTrainedModel;p.SiglipTextModel;p.SiglipTokenizer;p.SiglipVisionModel;p.SpeechT5FeatureExtractor;p.SpeechT5ForSpeechToText;p.SpeechT5ForTextToSpeech;p.SpeechT5HifiGan;p.SpeechT5Model;p.SpeechT5PreTrainedModel;p.SpeechT5Processor;p.SpeechT5Tokenizer;p.SqueezeBertForMaskedLM;p.SqueezeBertForQuestionAnswering;p.SqueezeBertForSequenceClassification;p.SqueezeBertModel;p.SqueezeBertPreTrainedModel;p.SqueezeBertTokenizer;p.StableLmForCausalLM;p.StableLmModel;p.StableLmPreTrainedModel;p.Starcoder2ForCausalLM;p.Starcoder2Model;p.Starcoder2PreTrainedModel;p.StoppingCriteria;p.StoppingCriteriaList;p.SummarizationPipeline;p.Swin2SRForImageSuperResolution;p.Swin2SRImageProcessor;p.Swin2SRModel;p.Swin2SRPreTrainedModel;p.SwinForImageClassification;p.SwinModel;p.SwinPreTrainedModel;p.T5ForConditionalGeneration;p.T5Model;p.T5PreTrainedModel;p.T5Tokenizer;p.TableTransformerForObjectDetection;p.TableTransformerModel;p.TableTransformerObjectDetectionOutput;p.TableTransformerPreTrainedModel;p.Tensor;p.Text2TextGenerationPipeline;p.TextClassificationPipeline;p.TextGenerationPipeline;p.TextStreamer;p.TextToAudioPipeline;p.TokenClassificationPipeline;p.TokenClassifierOutput;p.TokenizerModel;p.TrOCRForCausalLM;p.TrOCRPreTrainedModel;p.TranslationPipeline;p.UniSpeechForCTC;p.UniSpeechForSequenceClassification;p.UniSpeechModel;p.UniSpeechPreTrainedModel;p.UniSpeechSatForAudioFrameClassification;p.UniSpeechSatForCTC;p.UniSpeechSatForSequenceClassification;p.UniSpeechSatModel;p.UniSpeechSatPreTrainedModel;p.ViTFeatureExtractor;p.ViTForImageClassification;p.ViTImageProcessor;p.ViTMAEModel;p.ViTMAEPreTrainedModel;p.ViTMSNForImageClassification;p.ViTMSNModel;p.ViTMSNPreTrainedModel;p.ViTModel;p.ViTPreTrainedModel;p.VisionEncoderDecoderModel;p.VitMatteForImageMatting;p.VitMatteImageProcessor;p.VitMattePreTrainedModel;p.VitsModel;p.VitsModelOutput;p.VitsPreTrainedModel;p.VitsTokenizer;p.Wav2Vec2BertForCTC;p.Wav2Vec2BertForSequenceClassification;p.Wav2Vec2BertModel;p.Wav2Vec2BertPreTrainedModel;p.Wav2Vec2CTCTokenizer;p.Wav2Vec2FeatureExtractor;p.Wav2Vec2ForAudioFrameClassification;p.Wav2Vec2ForCTC;p.Wav2Vec2ForSequenceClassification;p.Wav2Vec2Model;p.Wav2Vec2PreTrainedModel;p.Wav2Vec2ProcessorWithLM;p.WavLMForAudioFrameClassification;p.WavLMForCTC;p.WavLMForSequenceClassification;p.WavLMForXVector;p.WavLMModel;p.WavLMPreTrainedModel;p.WeSpeakerFeatureExtractor;p.WeSpeakerResNetModel;p.WeSpeakerResNetPreTrainedModel;p.WhisperFeatureExtractor;p.WhisperForConditionalGeneration;p.WhisperModel;p.WhisperPreTrainedModel;p.WhisperProcessor;p.WhisperTextStreamer;p.WhisperTokenizer;p.XLMForQuestionAnswering;p.XLMForSequenceClassification;p.XLMForTokenClassification;p.XLMModel;p.XLMPreTrainedModel;p.XLMRobertaForMaskedLM;p.XLMRobertaForQuestionAnswering;p.XLMRobertaForSequenceClassification;p.XLMRobertaForTokenClassification;p.XLMRobertaModel;p.XLMRobertaPreTrainedModel;p.XLMRobertaTokenizer;p.XLMTokenizer;p.XLMWithLMHeadModel;p.XVectorOutput;p.YolosFeatureExtractor;p.YolosForObjectDetection;p.YolosModel;p.YolosObjectDetectionOutput;p.YolosPreTrainedModel;p.ZeroShotAudioClassificationPipeline;p.ZeroShotClassificationPipeline;p.ZeroShotImageClassificationPipeline;p.ZeroShotObjectDetectionPipeline;p.bankers_round;p.cat;p.cos_sim;p.dot;p.dynamic_time_warping;p.env;p.full;p.full_like;p.getKeyValueShapes;p.hamming;p.hanning;p.interpolate;p.interpolate_4d;p.interpolate_data;p.is_chinese_char;p.layer_norm;p.log_softmax;p.magnitude;p.matmul;p.max;p.mean;p.mean_pooling;p.medianFilter;p.mel_filter_bank;p.min;p.ones;p.ones_like;p.permute;p.permute_data;var O_=p.pipeline;p.quantize_embeddings;p.read_audio;p.rfft;p.round;p.softmax;p.spectrogram;p.stack;p.std_mean;p.topk;p.window_function;p.zeros;p.zeros_like;const B_=(...Ue)=>{},fd=new Map,Kf="_WORKER_INIT_";function md(Ue,Me,N){!fd.get(Ue)&&Ue!==Kf||self.postMessage({messageId:Ue,type:Me,payload:N})}function z_(Ue){return async Me=>{try{const N=await Ue(Me);md(Me.messageId,"complete",N)}catch(N){md(Me.messageId,"error",{error:N instanceof Error?N.message:"An error occurred",error_code:"UNKNOWN_ERROR"})}finally{fd.delete(Me.messageId)}}}function D_(Ue,Me){self.addEventListener("message",async N=>{fd.set(N.data.messageId,Promise.race([z_(Ue)(N.data),new Promise(D=>setTimeout(()=>D(!0),12e4)).then(()=>{fd.has(N.data.messageId)&&(md(N.data.messageId,"error",{error:"Operation timed out",error_code:"TIMEOUT_ERROR"}),fd.delete(N.data.messageId))})])),md(N.data.messageId,"started","Started processing")})}async function L_(Ue){md(Kf,"complete","Worker initialized")}let pd;async function R_(Ue){switch(Ue.type){case"load":{const[Me,N]=Ue.payload;return(!pd||pd.model.name!==Me)&&(pd=await O_("feature-extraction",Me,N)),!0}case"embedding":{if(!pd)throw new Error("Pipe is not ready yet.");B_("Embedding:",Ue.payload);const[Me,N]=Ue.payload;return(await pd(Me,N)).tolist()}default:throw new Error("Invalid operation")}}D_(R_);L_();
