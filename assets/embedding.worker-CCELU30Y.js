function ng(ae){return ae&&ae.__esModule&&Object.prototype.hasOwnProperty.call(ae,"default")?ae.default:ae}var hm={exports:{}},an=hm.exports={},ci,pi;function Np(){throw new Error("setTimeout has not been defined")}function jp(){throw new Error("clearTimeout has not been defined")}(function(){try{typeof setTimeout=="function"?ci=setTimeout:ci=Np}catch{ci=Np}try{typeof clearTimeout=="function"?pi=clearTimeout:pi=jp}catch{pi=jp}})();function fm(ae){if(ci===setTimeout)return setTimeout(ae,0);if((ci===Np||!ci)&&setTimeout)return ci=setTimeout,setTimeout(ae,0);try{return ci(ae,0)}catch{try{return ci.call(null,ae,0)}catch{return ci.call(this,ae,0)}}}function ig(ae){if(pi===clearTimeout)return clearTimeout(ae);if((pi===jp||!pi)&&clearTimeout)return pi=clearTimeout,clearTimeout(ae);try{return pi(ae)}catch{try{return pi.call(null,ae)}catch{return pi.call(this,ae)}}}var $i=[],aa=!1,Cs,Nc=-1;function sg(){!aa||!Cs||(aa=!1,Cs.length?$i=Cs.concat($i):Nc=-1,$i.length&&mm())}function mm(){if(!aa){var ae=fm(sg);aa=!0;for(var L=$i.length;L;){for(Cs=$i,$i=[];++Nc<L;)Cs&&Cs[Nc].run();Nc=-1,L=$i.length}Cs=null,aa=!1,ig(ae)}}an.nextTick=function(ae){var L=new Array(arguments.length-1);if(arguments.length>1)for(var T=1;T<arguments.length;T++)L[T-1]=arguments[T];$i.push(new _m(ae,L)),$i.length===1&&!aa&&fm(mm)};function _m(ae,L){this.fun=ae,this.array=L}_m.prototype.run=function(){this.fun.apply(null,this.array)};an.title="browser";an.browser=!0;an.env={};an.argv=[];an.version="";an.versions={};function Si(){}an.on=Si;an.addListener=Si;an.once=Si;an.off=Si;an.removeListener=Si;an.removeAllListeners=Si;an.emit=Si;an.prependListener=Si;an.prependOnceListener=Si;an.listeners=function(ae){return[]};an.binding=function(ae){throw new Error("process.binding is not supported")};an.cwd=function(){return"/"};an.chdir=function(ae){throw new Error("process.chdir is not supported")};an.umask=function(){return 0};var og=hm.exports;const Es=ng(og);var gm={},Vc={};Vc.byteLength=ug;Vc.toByteArray=cg;Vc.fromByteArray=fg;var fi=[],Kn=[],ag=typeof Uint8Array<"u"?Uint8Array:Array,Bp="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(var sa=0,lg=Bp.length;sa<lg;++sa)fi[sa]=Bp[sa],Kn[Bp.charCodeAt(sa)]=sa;Kn[45]=62;Kn[95]=63;function wm(ae){var L=ae.length;if(L%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var T=ae.indexOf("=");T===-1&&(T=L);var C=T===L?0:4-T%4;return[T,C]}function ug(ae){var L=wm(ae),T=L[0],C=L[1];return(T+C)*3/4-C}function dg(ae,L,T){return(L+T)*3/4-T}function cg(ae){var L,T=wm(ae),C=T[0],J=T[1],ne=new ag(dg(ae,C,J)),fe=0,Te=J>0?C-4:C,R;for(R=0;R<Te;R+=4)L=Kn[ae.charCodeAt(R)]<<18|Kn[ae.charCodeAt(R+1)]<<12|Kn[ae.charCodeAt(R+2)]<<6|Kn[ae.charCodeAt(R+3)],ne[fe++]=L>>16&255,ne[fe++]=L>>8&255,ne[fe++]=L&255;return J===2&&(L=Kn[ae.charCodeAt(R)]<<2|Kn[ae.charCodeAt(R+1)]>>4,ne[fe++]=L&255),J===1&&(L=Kn[ae.charCodeAt(R)]<<10|Kn[ae.charCodeAt(R+1)]<<4|Kn[ae.charCodeAt(R+2)]>>2,ne[fe++]=L>>8&255,ne[fe++]=L&255),ne}function pg(ae){return fi[ae>>18&63]+fi[ae>>12&63]+fi[ae>>6&63]+fi[ae&63]}function hg(ae,L,T){for(var C,J=[],ne=L;ne<T;ne+=3)C=(ae[ne]<<16&16711680)+(ae[ne+1]<<8&65280)+(ae[ne+2]&255),J.push(pg(C));return J.join("")}function fg(ae){for(var L,T=ae.length,C=T%3,J=[],ne=16383,fe=0,Te=T-C;fe<Te;fe+=ne)J.push(hg(ae,fe,fe+ne>Te?Te:fe+ne));return C===1?(L=ae[T-1],J.push(fi[L>>2]+fi[L<<4&63]+"==")):C===2&&(L=(ae[T-2]<<8)+ae[T-1],J.push(fi[L>>10]+fi[L>>4&63]+fi[L<<2&63]+"=")),J.join("")}var qp={};/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */qp.read=function(ae,L,T,C,J){var ne,fe,Te=J*8-C-1,R=(1<<Te)-1,O=R>>1,M=-7,U=T?J-1:0,X=T?-1:1,le=ae[L+U];for(U+=X,ne=le&(1<<-M)-1,le>>=-M,M+=Te;M>0;ne=ne*256+ae[L+U],U+=X,M-=8);for(fe=ne&(1<<-M)-1,ne>>=-M,M+=C;M>0;fe=fe*256+ae[L+U],U+=X,M-=8);if(ne===0)ne=1-O;else{if(ne===R)return fe?NaN:(le?-1:1)*(1/0);fe=fe+Math.pow(2,C),ne=ne-O}return(le?-1:1)*fe*Math.pow(2,ne-C)};qp.write=function(ae,L,T,C,J,ne){var fe,Te,R,O=ne*8-J-1,M=(1<<O)-1,U=M>>1,X=J===23?Math.pow(2,-24)-Math.pow(2,-77):0,le=C?0:ne-1,Ce=C?1:-1,ve=L<0||L===0&&1/L<0?1:0;for(L=Math.abs(L),isNaN(L)||L===1/0?(Te=isNaN(L)?1:0,fe=M):(fe=Math.floor(Math.log(L)/Math.LN2),L*(R=Math.pow(2,-fe))<1&&(fe--,R*=2),fe+U>=1?L+=X/R:L+=X*Math.pow(2,1-U),L*R>=2&&(fe++,R/=2),fe+U>=M?(Te=0,fe=M):fe+U>=1?(Te=(L*R-1)*Math.pow(2,J),fe=fe+U):(Te=L*Math.pow(2,U-1)*Math.pow(2,J),fe=0));J>=8;ae[T+le]=Te&255,le+=Ce,Te/=256,J-=8);for(fe=fe<<J|Te,O+=J;O>0;ae[T+le]=fe&255,le+=Ce,fe/=256,O-=8);ae[T+le-Ce]|=ve*128};/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */(function(ae){const L=Vc,T=qp,C=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;ae.Buffer=M,ae.SlowBuffer=G,ae.INSPECT_MAX_BYTES=50;const J=2147483647;ae.kMaxLength=J;const{Uint8Array:ne,ArrayBuffer:fe,SharedArrayBuffer:Te}=globalThis;M.TYPED_ARRAY_SUPPORT=R(),!M.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function R(){try{const E=new ne(1),c={foo:function(){return 42}};return Object.setPrototypeOf(c,ne.prototype),Object.setPrototypeOf(E,c),E.foo()===42}catch{return!1}}Object.defineProperty(M.prototype,"parent",{enumerable:!0,get:function(){if(M.isBuffer(this))return this.buffer}}),Object.defineProperty(M.prototype,"offset",{enumerable:!0,get:function(){if(M.isBuffer(this))return this.byteOffset}});function O(E){if(E>J)throw new RangeError('The value "'+E+'" is invalid for option "size"');const c=new ne(E);return Object.setPrototypeOf(c,M.prototype),c}function M(E,c,m){if(typeof E=="number"){if(typeof c=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return Ce(E)}return U(E,c,m)}M.poolSize=8192;function U(E,c,m){if(typeof E=="string")return ve(E,c);if(fe.isView(E))return se(E);if(E==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof E);if(it(E,fe)||E&&it(E.buffer,fe)||typeof Te<"u"&&(it(E,Te)||E&&it(E.buffer,Te)))return xe(E,c,m);if(typeof E=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');const V=E.valueOf&&E.valueOf();if(V!=null&&V!==E)return M.from(V,c,m);const me=te(E);if(me)return me;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof E[Symbol.toPrimitive]=="function")return M.from(E[Symbol.toPrimitive]("string"),c,m);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof E)}M.from=function(E,c,m){return U(E,c,m)},Object.setPrototypeOf(M.prototype,ne.prototype),Object.setPrototypeOf(M,ne);function X(E){if(typeof E!="number")throw new TypeError('"size" argument must be of type number');if(E<0)throw new RangeError('The value "'+E+'" is invalid for option "size"')}function le(E,c,m){return X(E),E<=0?O(E):c!==void 0?typeof m=="string"?O(E).fill(c,m):O(E).fill(c):O(E)}M.alloc=function(E,c,m){return le(E,c,m)};function Ce(E){return X(E),O(E<0?0:ee(E)|0)}M.allocUnsafe=function(E){return Ce(E)},M.allocUnsafeSlow=function(E){return Ce(E)};function ve(E,c){if((typeof c!="string"||c==="")&&(c="utf8"),!M.isEncoding(c))throw new TypeError("Unknown encoding: "+c);const m=B(E,c)|0;let V=O(m);const me=V.write(E,c);return me!==m&&(V=V.slice(0,me)),V}function j(E){const c=E.length<0?0:ee(E.length)|0,m=O(c);for(let V=0;V<c;V+=1)m[V]=E[V]&255;return m}function se(E){if(it(E,ne)){const c=new ne(E);return xe(c.buffer,c.byteOffset,c.byteLength)}return j(E)}function xe(E,c,m){if(c<0||E.byteLength<c)throw new RangeError('"offset" is outside of buffer bounds');if(E.byteLength<c+(m||0))throw new RangeError('"length" is outside of buffer bounds');let V;return c===void 0&&m===void 0?V=new ne(E):m===void 0?V=new ne(E,c):V=new ne(E,c,m),Object.setPrototypeOf(V,M.prototype),V}function te(E){if(M.isBuffer(E)){const c=ee(E.length)|0,m=O(c);return m.length===0||E.copy(m,0,0,c),m}if(E.length!==void 0)return typeof E.length!="number"||et(E.length)?O(0):j(E);if(E.type==="Buffer"&&Array.isArray(E.data))return j(E.data)}function ee(E){if(E>=J)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+J.toString(16)+" bytes");return E|0}function G(E){return+E!=E&&(E=0),M.alloc(+E)}M.isBuffer=function(c){return c!=null&&c._isBuffer===!0&&c!==M.prototype},M.compare=function(c,m){if(it(c,ne)&&(c=M.from(c,c.offset,c.byteLength)),it(m,ne)&&(m=M.from(m,m.offset,m.byteLength)),!M.isBuffer(c)||!M.isBuffer(m))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(c===m)return 0;let V=c.length,me=m.length;for(let ke=0,Ge=Math.min(V,me);ke<Ge;++ke)if(c[ke]!==m[ke]){V=c[ke],me=m[ke];break}return V<me?-1:me<V?1:0},M.isEncoding=function(c){switch(String(c).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},M.concat=function(c,m){if(!Array.isArray(c))throw new TypeError('"list" argument must be an Array of Buffers');if(c.length===0)return M.alloc(0);let V;if(m===void 0)for(m=0,V=0;V<c.length;++V)m+=c[V].length;const me=M.allocUnsafe(m);let ke=0;for(V=0;V<c.length;++V){let Ge=c[V];if(it(Ge,ne))ke+Ge.length>me.length?(M.isBuffer(Ge)||(Ge=M.from(Ge)),Ge.copy(me,ke)):ne.prototype.set.call(me,Ge,ke);else if(M.isBuffer(Ge))Ge.copy(me,ke);else throw new TypeError('"list" argument must be an Array of Buffers');ke+=Ge.length}return me};function B(E,c){if(M.isBuffer(E))return E.length;if(fe.isView(E)||it(E,fe))return E.byteLength;if(typeof E!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof E);const m=E.length,V=arguments.length>2&&arguments[2]===!0;if(!V&&m===0)return 0;let me=!1;for(;;)switch(c){case"ascii":case"latin1":case"binary":return m;case"utf8":case"utf-8":return $(E).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return m*2;case"hex":return m>>>1;case"base64":return ue(E).length;default:if(me)return V?-1:$(E).length;c=(""+c).toLowerCase(),me=!0}}M.byteLength=B;function q(E,c,m){let V=!1;if((c===void 0||c<0)&&(c=0),c>this.length||((m===void 0||m>this.length)&&(m=this.length),m<=0)||(m>>>=0,c>>>=0,m<=c))return"";for(E||(E="utf8");;)switch(E){case"hex":return _t(this,c,m);case"utf8":case"utf-8":return Ee(this,c,m);case"ascii":return Pe(this,c,m);case"latin1":case"binary":return Qe(this,c,m);case"base64":return gt(this,c,m);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ce(this,c,m);default:if(V)throw new TypeError("Unknown encoding: "+E);E=(E+"").toLowerCase(),V=!0}}M.prototype._isBuffer=!0;function I(E,c,m){const V=E[c];E[c]=E[m],E[m]=V}M.prototype.swap16=function(){const c=this.length;if(c%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let m=0;m<c;m+=2)I(this,m,m+1);return this},M.prototype.swap32=function(){const c=this.length;if(c%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let m=0;m<c;m+=4)I(this,m,m+3),I(this,m+1,m+2);return this},M.prototype.swap64=function(){const c=this.length;if(c%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let m=0;m<c;m+=8)I(this,m,m+7),I(this,m+1,m+6),I(this,m+2,m+5),I(this,m+3,m+4);return this},M.prototype.toString=function(){const c=this.length;return c===0?"":arguments.length===0?Ee(this,0,c):q.apply(this,arguments)},M.prototype.toLocaleString=M.prototype.toString,M.prototype.equals=function(c){if(!M.isBuffer(c))throw new TypeError("Argument must be a Buffer");return this===c?!0:M.compare(this,c)===0},M.prototype.inspect=function(){let c="";const m=ae.INSPECT_MAX_BYTES;return c=this.toString("hex",0,m).replace(/(.{2})/g,"$1 ").trim(),this.length>m&&(c+=" ... "),"<Buffer "+c+">"},C&&(M.prototype[C]=M.prototype.inspect),M.prototype.compare=function(c,m,V,me,ke){if(it(c,ne)&&(c=M.from(c,c.offset,c.byteLength)),!M.isBuffer(c))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof c);if(m===void 0&&(m=0),V===void 0&&(V=c?c.length:0),me===void 0&&(me=0),ke===void 0&&(ke=this.length),m<0||V>c.length||me<0||ke>this.length)throw new RangeError("out of range index");if(me>=ke&&m>=V)return 0;if(me>=ke)return-1;if(m>=V)return 1;if(m>>>=0,V>>>=0,me>>>=0,ke>>>=0,this===c)return 0;let Ge=ke-me,sr=V-m;const Je=Math.min(Ge,sr),N=this.slice(me,ke),ye=c.slice(m,V);for(let Se=0;Se<Je;++Se)if(N[Se]!==ye[Se]){Ge=N[Se],sr=ye[Se];break}return Ge<sr?-1:sr<Ge?1:0};function be(E,c,m,V,me){if(E.length===0)return-1;if(typeof m=="string"?(V=m,m=0):m>2147483647?m=2147483647:m<-2147483648&&(m=-2147483648),m=+m,et(m)&&(m=me?0:E.length-1),m<0&&(m=E.length+m),m>=E.length){if(me)return-1;m=E.length-1}else if(m<0)if(me)m=0;else return-1;if(typeof c=="string"&&(c=M.from(c,V)),M.isBuffer(c))return c.length===0?-1:$e(E,c,m,V,me);if(typeof c=="number")return c=c&255,typeof ne.prototype.indexOf=="function"?me?ne.prototype.indexOf.call(E,c,m):ne.prototype.lastIndexOf.call(E,c,m):$e(E,[c],m,V,me);throw new TypeError("val must be string, number or Buffer")}function $e(E,c,m,V,me){let ke=1,Ge=E.length,sr=c.length;if(V!==void 0&&(V=String(V).toLowerCase(),V==="ucs2"||V==="ucs-2"||V==="utf16le"||V==="utf-16le")){if(E.length<2||c.length<2)return-1;ke=2,Ge/=2,sr/=2,m/=2}function Je(ye,Se){return ke===1?ye[Se]:ye.readUInt16BE(Se*ke)}let N;if(me){let ye=-1;for(N=m;N<Ge;N++)if(Je(E,N)===Je(c,ye===-1?0:N-ye)){if(ye===-1&&(ye=N),N-ye+1===sr)return ye*ke}else ye!==-1&&(N-=N-ye),ye=-1}else for(m+sr>Ge&&(m=Ge-sr),N=m;N>=0;N--){let ye=!0;for(let Se=0;Se<sr;Se++)if(Je(E,N+Se)!==Je(c,Se)){ye=!1;break}if(ye)return N}return-1}M.prototype.includes=function(c,m,V){return this.indexOf(c,m,V)!==-1},M.prototype.indexOf=function(c,m,V){return be(this,c,m,V,!0)},M.prototype.lastIndexOf=function(c,m,V){return be(this,c,m,V,!1)};function Ae(E,c,m,V){m=Number(m)||0;const me=E.length-m;V?(V=Number(V),V>me&&(V=me)):V=me;const ke=c.length;V>ke/2&&(V=ke/2);let Ge;for(Ge=0;Ge<V;++Ge){const sr=parseInt(c.substr(Ge*2,2),16);if(et(sr))return Ge;E[m+Ge]=sr}return Ge}function je(E,c,m,V){return Me($(c,E.length-m),E,m,V)}function De(E,c,m,V){return Me(Z(c),E,m,V)}function ft(E,c,m,V){return Me(ue(c),E,m,V)}function dt(E,c,m,V){return Me(z(c,E.length-m),E,m,V)}M.prototype.write=function(c,m,V,me){if(m===void 0)me="utf8",V=this.length,m=0;else if(V===void 0&&typeof m=="string")me=m,V=this.length,m=0;else if(isFinite(m))m=m>>>0,isFinite(V)?(V=V>>>0,me===void 0&&(me="utf8")):(me=V,V=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");const ke=this.length-m;if((V===void 0||V>ke)&&(V=ke),c.length>0&&(V<0||m<0)||m>this.length)throw new RangeError("Attempt to write outside buffer bounds");me||(me="utf8");let Ge=!1;for(;;)switch(me){case"hex":return Ae(this,c,m,V);case"utf8":case"utf-8":return je(this,c,m,V);case"ascii":case"latin1":case"binary":return De(this,c,m,V);case"base64":return ft(this,c,m,V);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return dt(this,c,m,V);default:if(Ge)throw new TypeError("Unknown encoding: "+me);me=(""+me).toLowerCase(),Ge=!0}},M.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function gt(E,c,m){return c===0&&m===E.length?L.fromByteArray(E):L.fromByteArray(E.slice(c,m))}function Ee(E,c,m){m=Math.min(E.length,m);const V=[];let me=c;for(;me<m;){const ke=E[me];let Ge=null,sr=ke>239?4:ke>223?3:ke>191?2:1;if(me+sr<=m){let Je,N,ye,Se;switch(sr){case 1:ke<128&&(Ge=ke);break;case 2:Je=E[me+1],(Je&192)===128&&(Se=(ke&31)<<6|Je&63,Se>127&&(Ge=Se));break;case 3:Je=E[me+1],N=E[me+2],(Je&192)===128&&(N&192)===128&&(Se=(ke&15)<<12|(Je&63)<<6|N&63,Se>2047&&(Se<55296||Se>57343)&&(Ge=Se));break;case 4:Je=E[me+1],N=E[me+2],ye=E[me+3],(Je&192)===128&&(N&192)===128&&(ye&192)===128&&(Se=(ke&15)<<18|(Je&63)<<12|(N&63)<<6|ye&63,Se>65535&&Se<1114112&&(Ge=Se))}}Ge===null?(Ge=65533,sr=1):Ge>65535&&(Ge-=65536,V.push(Ge>>>10&1023|55296),Ge=56320|Ge&1023),V.push(Ge),me+=sr}return we(V)}const H=4096;function we(E){const c=E.length;if(c<=H)return String.fromCharCode.apply(String,E);let m="",V=0;for(;V<c;)m+=String.fromCharCode.apply(String,E.slice(V,V+=H));return m}function Pe(E,c,m){let V="";m=Math.min(E.length,m);for(let me=c;me<m;++me)V+=String.fromCharCode(E[me]&127);return V}function Qe(E,c,m){let V="";m=Math.min(E.length,m);for(let me=c;me<m;++me)V+=String.fromCharCode(E[me]);return V}function _t(E,c,m){const V=E.length;(!c||c<0)&&(c=0),(!m||m<0||m>V)&&(m=V);let me="";for(let ke=c;ke<m;++ke)me+=At[E[ke]];return me}function ce(E,c,m){const V=E.slice(c,m);let me="";for(let ke=0;ke<V.length-1;ke+=2)me+=String.fromCharCode(V[ke]+V[ke+1]*256);return me}M.prototype.slice=function(c,m){const V=this.length;c=~~c,m=m===void 0?V:~~m,c<0?(c+=V,c<0&&(c=0)):c>V&&(c=V),m<0?(m+=V,m<0&&(m=0)):m>V&&(m=V),m<c&&(m=c);const me=this.subarray(c,m);return Object.setPrototypeOf(me,M.prototype),me};function Ue(E,c,m){if(E%1!==0||E<0)throw new RangeError("offset is not uint");if(E+c>m)throw new RangeError("Trying to access beyond buffer length")}M.prototype.readUintLE=M.prototype.readUIntLE=function(c,m,V){c=c>>>0,m=m>>>0,V||Ue(c,m,this.length);let me=this[c],ke=1,Ge=0;for(;++Ge<m&&(ke*=256);)me+=this[c+Ge]*ke;return me},M.prototype.readUintBE=M.prototype.readUIntBE=function(c,m,V){c=c>>>0,m=m>>>0,V||Ue(c,m,this.length);let me=this[c+--m],ke=1;for(;m>0&&(ke*=256);)me+=this[c+--m]*ke;return me},M.prototype.readUint8=M.prototype.readUInt8=function(c,m){return c=c>>>0,m||Ue(c,1,this.length),this[c]},M.prototype.readUint16LE=M.prototype.readUInt16LE=function(c,m){return c=c>>>0,m||Ue(c,2,this.length),this[c]|this[c+1]<<8},M.prototype.readUint16BE=M.prototype.readUInt16BE=function(c,m){return c=c>>>0,m||Ue(c,2,this.length),this[c]<<8|this[c+1]},M.prototype.readUint32LE=M.prototype.readUInt32LE=function(c,m){return c=c>>>0,m||Ue(c,4,this.length),(this[c]|this[c+1]<<8|this[c+2]<<16)+this[c+3]*16777216},M.prototype.readUint32BE=M.prototype.readUInt32BE=function(c,m){return c=c>>>0,m||Ue(c,4,this.length),this[c]*16777216+(this[c+1]<<16|this[c+2]<<8|this[c+3])},M.prototype.readBigUInt64LE=ot(function(c){c=c>>>0,mt(c,"offset");const m=this[c],V=this[c+7];(m===void 0||V===void 0)&&wt(c,this.length-8);const me=m+this[++c]*2**8+this[++c]*2**16+this[++c]*2**24,ke=this[++c]+this[++c]*2**8+this[++c]*2**16+V*2**24;return BigInt(me)+(BigInt(ke)<<BigInt(32))}),M.prototype.readBigUInt64BE=ot(function(c){c=c>>>0,mt(c,"offset");const m=this[c],V=this[c+7];(m===void 0||V===void 0)&&wt(c,this.length-8);const me=m*2**24+this[++c]*2**16+this[++c]*2**8+this[++c],ke=this[++c]*2**24+this[++c]*2**16+this[++c]*2**8+V;return(BigInt(me)<<BigInt(32))+BigInt(ke)}),M.prototype.readIntLE=function(c,m,V){c=c>>>0,m=m>>>0,V||Ue(c,m,this.length);let me=this[c],ke=1,Ge=0;for(;++Ge<m&&(ke*=256);)me+=this[c+Ge]*ke;return ke*=128,me>=ke&&(me-=Math.pow(2,8*m)),me},M.prototype.readIntBE=function(c,m,V){c=c>>>0,m=m>>>0,V||Ue(c,m,this.length);let me=m,ke=1,Ge=this[c+--me];for(;me>0&&(ke*=256);)Ge+=this[c+--me]*ke;return ke*=128,Ge>=ke&&(Ge-=Math.pow(2,8*m)),Ge},M.prototype.readInt8=function(c,m){return c=c>>>0,m||Ue(c,1,this.length),this[c]&128?(255-this[c]+1)*-1:this[c]},M.prototype.readInt16LE=function(c,m){c=c>>>0,m||Ue(c,2,this.length);const V=this[c]|this[c+1]<<8;return V&32768?V|4294901760:V},M.prototype.readInt16BE=function(c,m){c=c>>>0,m||Ue(c,2,this.length);const V=this[c+1]|this[c]<<8;return V&32768?V|4294901760:V},M.prototype.readInt32LE=function(c,m){return c=c>>>0,m||Ue(c,4,this.length),this[c]|this[c+1]<<8|this[c+2]<<16|this[c+3]<<24},M.prototype.readInt32BE=function(c,m){return c=c>>>0,m||Ue(c,4,this.length),this[c]<<24|this[c+1]<<16|this[c+2]<<8|this[c+3]},M.prototype.readBigInt64LE=ot(function(c){c=c>>>0,mt(c,"offset");const m=this[c],V=this[c+7];(m===void 0||V===void 0)&&wt(c,this.length-8);const me=this[c+4]+this[c+5]*2**8+this[c+6]*2**16+(V<<24);return(BigInt(me)<<BigInt(32))+BigInt(m+this[++c]*2**8+this[++c]*2**16+this[++c]*2**24)}),M.prototype.readBigInt64BE=ot(function(c){c=c>>>0,mt(c,"offset");const m=this[c],V=this[c+7];(m===void 0||V===void 0)&&wt(c,this.length-8);const me=(m<<24)+this[++c]*2**16+this[++c]*2**8+this[++c];return(BigInt(me)<<BigInt(32))+BigInt(this[++c]*2**24+this[++c]*2**16+this[++c]*2**8+V)}),M.prototype.readFloatLE=function(c,m){return c=c>>>0,m||Ue(c,4,this.length),T.read(this,c,!0,23,4)},M.prototype.readFloatBE=function(c,m){return c=c>>>0,m||Ue(c,4,this.length),T.read(this,c,!1,23,4)},M.prototype.readDoubleLE=function(c,m){return c=c>>>0,m||Ue(c,8,this.length),T.read(this,c,!0,52,8)},M.prototype.readDoubleBE=function(c,m){return c=c>>>0,m||Ue(c,8,this.length),T.read(this,c,!1,52,8)};function ct(E,c,m,V,me,ke){if(!M.isBuffer(E))throw new TypeError('"buffer" argument must be a Buffer instance');if(c>me||c<ke)throw new RangeError('"value" argument is out of bounds');if(m+V>E.length)throw new RangeError("Index out of range")}M.prototype.writeUintLE=M.prototype.writeUIntLE=function(c,m,V,me){if(c=+c,m=m>>>0,V=V>>>0,!me){const sr=Math.pow(2,8*V)-1;ct(this,c,m,V,sr,0)}let ke=1,Ge=0;for(this[m]=c&255;++Ge<V&&(ke*=256);)this[m+Ge]=c/ke&255;return m+V},M.prototype.writeUintBE=M.prototype.writeUIntBE=function(c,m,V,me){if(c=+c,m=m>>>0,V=V>>>0,!me){const sr=Math.pow(2,8*V)-1;ct(this,c,m,V,sr,0)}let ke=V-1,Ge=1;for(this[m+ke]=c&255;--ke>=0&&(Ge*=256);)this[m+ke]=c/Ge&255;return m+V},M.prototype.writeUint8=M.prototype.writeUInt8=function(c,m,V){return c=+c,m=m>>>0,V||ct(this,c,m,1,255,0),this[m]=c&255,m+1},M.prototype.writeUint16LE=M.prototype.writeUInt16LE=function(c,m,V){return c=+c,m=m>>>0,V||ct(this,c,m,2,65535,0),this[m]=c&255,this[m+1]=c>>>8,m+2},M.prototype.writeUint16BE=M.prototype.writeUInt16BE=function(c,m,V){return c=+c,m=m>>>0,V||ct(this,c,m,2,65535,0),this[m]=c>>>8,this[m+1]=c&255,m+2},M.prototype.writeUint32LE=M.prototype.writeUInt32LE=function(c,m,V){return c=+c,m=m>>>0,V||ct(this,c,m,4,4294967295,0),this[m+3]=c>>>24,this[m+2]=c>>>16,this[m+1]=c>>>8,this[m]=c&255,m+4},M.prototype.writeUint32BE=M.prototype.writeUInt32BE=function(c,m,V){return c=+c,m=m>>>0,V||ct(this,c,m,4,4294967295,0),this[m]=c>>>24,this[m+1]=c>>>16,this[m+2]=c>>>8,this[m+3]=c&255,m+4};function Ve(E,c,m,V,me){He(c,V,me,E,m,7);let ke=Number(c&BigInt(4294967295));E[m++]=ke,ke=ke>>8,E[m++]=ke,ke=ke>>8,E[m++]=ke,ke=ke>>8,E[m++]=ke;let Ge=Number(c>>BigInt(32)&BigInt(4294967295));return E[m++]=Ge,Ge=Ge>>8,E[m++]=Ge,Ge=Ge>>8,E[m++]=Ge,Ge=Ge>>8,E[m++]=Ge,m}function Mt(E,c,m,V,me){He(c,V,me,E,m,7);let ke=Number(c&BigInt(4294967295));E[m+7]=ke,ke=ke>>8,E[m+6]=ke,ke=ke>>8,E[m+5]=ke,ke=ke>>8,E[m+4]=ke;let Ge=Number(c>>BigInt(32)&BigInt(4294967295));return E[m+3]=Ge,Ge=Ge>>8,E[m+2]=Ge,Ge=Ge>>8,E[m+1]=Ge,Ge=Ge>>8,E[m]=Ge,m+8}M.prototype.writeBigUInt64LE=ot(function(c,m=0){return Ve(this,c,m,BigInt(0),BigInt("0xffffffffffffffff"))}),M.prototype.writeBigUInt64BE=ot(function(c,m=0){return Mt(this,c,m,BigInt(0),BigInt("0xffffffffffffffff"))}),M.prototype.writeIntLE=function(c,m,V,me){if(c=+c,m=m>>>0,!me){const Je=Math.pow(2,8*V-1);ct(this,c,m,V,Je-1,-Je)}let ke=0,Ge=1,sr=0;for(this[m]=c&255;++ke<V&&(Ge*=256);)c<0&&sr===0&&this[m+ke-1]!==0&&(sr=1),this[m+ke]=(c/Ge>>0)-sr&255;return m+V},M.prototype.writeIntBE=function(c,m,V,me){if(c=+c,m=m>>>0,!me){const Je=Math.pow(2,8*V-1);ct(this,c,m,V,Je-1,-Je)}let ke=V-1,Ge=1,sr=0;for(this[m+ke]=c&255;--ke>=0&&(Ge*=256);)c<0&&sr===0&&this[m+ke+1]!==0&&(sr=1),this[m+ke]=(c/Ge>>0)-sr&255;return m+V},M.prototype.writeInt8=function(c,m,V){return c=+c,m=m>>>0,V||ct(this,c,m,1,127,-128),c<0&&(c=255+c+1),this[m]=c&255,m+1},M.prototype.writeInt16LE=function(c,m,V){return c=+c,m=m>>>0,V||ct(this,c,m,2,32767,-32768),this[m]=c&255,this[m+1]=c>>>8,m+2},M.prototype.writeInt16BE=function(c,m,V){return c=+c,m=m>>>0,V||ct(this,c,m,2,32767,-32768),this[m]=c>>>8,this[m+1]=c&255,m+2},M.prototype.writeInt32LE=function(c,m,V){return c=+c,m=m>>>0,V||ct(this,c,m,4,2147483647,-2147483648),this[m]=c&255,this[m+1]=c>>>8,this[m+2]=c>>>16,this[m+3]=c>>>24,m+4},M.prototype.writeInt32BE=function(c,m,V){return c=+c,m=m>>>0,V||ct(this,c,m,4,2147483647,-2147483648),c<0&&(c=4294967295+c+1),this[m]=c>>>24,this[m+1]=c>>>16,this[m+2]=c>>>8,this[m+3]=c&255,m+4},M.prototype.writeBigInt64LE=ot(function(c,m=0){return Ve(this,c,m,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),M.prototype.writeBigInt64BE=ot(function(c,m=0){return Mt(this,c,m,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function Et(E,c,m,V,me,ke){if(m+V>E.length)throw new RangeError("Index out of range");if(m<0)throw new RangeError("Index out of range")}function tt(E,c,m,V,me){return c=+c,m=m>>>0,me||Et(E,c,m,4),T.write(E,c,m,V,23,4),m+4}M.prototype.writeFloatLE=function(c,m,V){return tt(this,c,m,!0,V)},M.prototype.writeFloatBE=function(c,m,V){return tt(this,c,m,!1,V)};function Y(E,c,m,V,me){return c=+c,m=m>>>0,me||Et(E,c,m,8),T.write(E,c,m,V,52,8),m+8}M.prototype.writeDoubleLE=function(c,m,V){return Y(this,c,m,!0,V)},M.prototype.writeDoubleBE=function(c,m,V){return Y(this,c,m,!1,V)},M.prototype.copy=function(c,m,V,me){if(!M.isBuffer(c))throw new TypeError("argument should be a Buffer");if(V||(V=0),!me&&me!==0&&(me=this.length),m>=c.length&&(m=c.length),m||(m=0),me>0&&me<V&&(me=V),me===V||c.length===0||this.length===0)return 0;if(m<0)throw new RangeError("targetStart out of bounds");if(V<0||V>=this.length)throw new RangeError("Index out of range");if(me<0)throw new RangeError("sourceEnd out of bounds");me>this.length&&(me=this.length),c.length-m<me-V&&(me=c.length-m+V);const ke=me-V;return this===c&&typeof ne.prototype.copyWithin=="function"?this.copyWithin(m,V,me):ne.prototype.set.call(c,this.subarray(V,me),m),ke},M.prototype.fill=function(c,m,V,me){if(typeof c=="string"){if(typeof m=="string"?(me=m,m=0,V=this.length):typeof V=="string"&&(me=V,V=this.length),me!==void 0&&typeof me!="string")throw new TypeError("encoding must be a string");if(typeof me=="string"&&!M.isEncoding(me))throw new TypeError("Unknown encoding: "+me);if(c.length===1){const Ge=c.charCodeAt(0);(me==="utf8"&&Ge<128||me==="latin1")&&(c=Ge)}}else typeof c=="number"?c=c&255:typeof c=="boolean"&&(c=Number(c));if(m<0||this.length<m||this.length<V)throw new RangeError("Out of range index");if(V<=m)return this;m=m>>>0,V=V===void 0?this.length:V>>>0,c||(c=0);let ke;if(typeof c=="number")for(ke=m;ke<V;++ke)this[ke]=c;else{const Ge=M.isBuffer(c)?c:M.from(c,me),sr=Ge.length;if(sr===0)throw new TypeError('The value "'+c+'" is invalid for argument "value"');for(ke=0;ke<V-m;++ke)this[ke+m]=Ge[ke%sr]}return this};const ze={};function nt(E,c,m){ze[E]=class extends m{constructor(){super(),Object.defineProperty(this,"message",{value:c.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${E}]`,this.stack,delete this.name}get code(){return E}set code(me){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:me,writable:!0})}toString(){return`${this.name} [${E}]: ${this.message}`}}}nt("ERR_BUFFER_OUT_OF_BOUNDS",function(E){return E?`${E} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),nt("ERR_INVALID_ARG_TYPE",function(E,c){return`The "${E}" argument must be of type number. Received type ${typeof c}`},TypeError),nt("ERR_OUT_OF_RANGE",function(E,c,m){let V=`The value of "${E}" is out of range.`,me=m;return Number.isInteger(m)&&Math.abs(m)>2**32?me=at(String(m)):typeof m=="bigint"&&(me=String(m),(m>BigInt(2)**BigInt(32)||m<-(BigInt(2)**BigInt(32)))&&(me=at(me)),me+="n"),V+=` It must be ${c}. Received ${me}`,V},RangeError);function at(E){let c="",m=E.length;const V=E[0]==="-"?1:0;for(;m>=V+4;m-=3)c=`_${E.slice(m-3,m)}${c}`;return`${E.slice(0,m)}${c}`}function Ze(E,c,m){mt(c,"offset"),(E[c]===void 0||E[c+m]===void 0)&&wt(c,E.length-(m+1))}function He(E,c,m,V,me,ke){if(E>m||E<c){const Ge=typeof c=="bigint"?"n":"";let sr;throw c===0||c===BigInt(0)?sr=`>= 0${Ge} and < 2${Ge} ** ${(ke+1)*8}${Ge}`:sr=`>= -(2${Ge} ** ${(ke+1)*8-1}${Ge}) and < 2 ** ${(ke+1)*8-1}${Ge}`,new ze.ERR_OUT_OF_RANGE("value",sr,E)}Ze(V,me,ke)}function mt(E,c){if(typeof E!="number")throw new ze.ERR_INVALID_ARG_TYPE(c,"number",E)}function wt(E,c,m){throw Math.floor(E)!==E?(mt(E,m),new ze.ERR_OUT_OF_RANGE("offset","an integer",E)):c<0?new ze.ERR_BUFFER_OUT_OF_BOUNDS:new ze.ERR_OUT_OF_RANGE("offset",`>= 0 and <= ${c}`,E)}const Lt=/[^+/0-9A-Za-z-_]/g;function kt(E){if(E=E.split("=")[0],E=E.trim().replace(Lt,""),E.length<2)return"";for(;E.length%4!==0;)E=E+"=";return E}function $(E,c){c=c||1/0;let m;const V=E.length;let me=null;const ke=[];for(let Ge=0;Ge<V;++Ge){if(m=E.charCodeAt(Ge),m>55295&&m<57344){if(!me){if(m>56319){(c-=3)>-1&&ke.push(239,191,189);continue}else if(Ge+1===V){(c-=3)>-1&&ke.push(239,191,189);continue}me=m;continue}if(m<56320){(c-=3)>-1&&ke.push(239,191,189),me=m;continue}m=(me-55296<<10|m-56320)+65536}else me&&(c-=3)>-1&&ke.push(239,191,189);if(me=null,m<128){if((c-=1)<0)break;ke.push(m)}else if(m<2048){if((c-=2)<0)break;ke.push(m>>6|192,m&63|128)}else if(m<65536){if((c-=3)<0)break;ke.push(m>>12|224,m>>6&63|128,m&63|128)}else if(m<1114112){if((c-=4)<0)break;ke.push(m>>18|240,m>>12&63|128,m>>6&63|128,m&63|128)}else throw new Error("Invalid code point")}return ke}function Z(E){const c=[];for(let m=0;m<E.length;++m)c.push(E.charCodeAt(m)&255);return c}function z(E,c){let m,V,me;const ke=[];for(let Ge=0;Ge<E.length&&!((c-=2)<0);++Ge)m=E.charCodeAt(Ge),V=m>>8,me=m%256,ke.push(me),ke.push(V);return ke}function ue(E){return L.toByteArray(kt(E))}function Me(E,c,m,V){let me;for(me=0;me<V&&!(me+m>=c.length||me>=E.length);++me)c[me+m]=E[me];return me}function it(E,c){return E instanceof c||E!=null&&E.constructor!=null&&E.constructor.name!=null&&E.constructor.name===c.name}function et(E){return E!==E}const At=function(){const E="0123456789abcdef",c=new Array(256);for(let m=0;m<16;++m){const V=m*16;for(let me=0;me<16;++me)c[V+me]=E[m]+E[me]}return c}();function ot(E){return typeof BigInt>"u"?yt:E}function yt(){throw new Error("BigInt not supported")}})(gm);const mg=gm.Buffer;var zp={},ym={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(ae,L,T)=>{ae.exports=T.p+"ort-wasm-simd-threaded.jsep.wasm"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(ae,L,T)=>{T.r(L),T.d(L,{Environment:()=>He,Interpreter:()=>mt,Template:()=>kt,parse:()=>Pe,tokenize:()=>U});var C=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),J=Object.freeze({set:C.Set,for:C.For,in:C.In,is:C.Is,if:C.If,else:C.Else,endif:C.EndIf,elif:C.ElseIf,endfor:C.EndFor,and:C.And,or:C.Or,not:C.Not,"not in":C.NotIn,macro:C.Macro,endmacro:C.EndMacro,true:C.BooleanLiteral,false:C.BooleanLiteral,True:C.BooleanLiteral,False:C.BooleanLiteral}),ne=class{constructor($,Z){this.value=$,this.type=Z}};function fe($){return/\w/.test($)}function Te($){return/[0-9]/.test($)}var R=[["{%",C.OpenStatement],["%}",C.CloseStatement],["{{",C.OpenExpression],["}}",C.CloseExpression],["(",C.OpenParen],[")",C.CloseParen],["{",C.OpenCurlyBracket],["}",C.CloseCurlyBracket],["[",C.OpenSquareBracket],["]",C.CloseSquareBracket],[",",C.Comma],[".",C.Dot],[":",C.Colon],["|",C.Pipe],["<=",C.ComparisonBinaryOperator],[">=",C.ComparisonBinaryOperator],["==",C.ComparisonBinaryOperator],["!=",C.ComparisonBinaryOperator],["<",C.ComparisonBinaryOperator],[">",C.ComparisonBinaryOperator],["+",C.AdditiveBinaryOperator],["-",C.AdditiveBinaryOperator],["*",C.MultiplicativeBinaryOperator],["/",C.MultiplicativeBinaryOperator],["%",C.MultiplicativeBinaryOperator],["=",C.Equals]],O=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function M($,Z={}){return $.endsWith(`
`)&&($=$.slice(0,-1)),$=$.replace(/{#.*?#}/gs,"{##}"),Z.lstrip_blocks&&($=$.replace(/^[ \t]*({[#%])/gm,"$1")),Z.trim_blocks&&($=$.replace(/([#%]})\n/g,"$1")),$.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function U($,Z={}){const z=[],ue=M($,Z);let Me=0;const it=et=>{let At="";for(;et(ue[Me]);){if(ue[Me]==="\\"){if(++Me,Me>=ue.length)throw new SyntaxError("Unexpected end of input");const ot=ue[Me++],yt=O.get(ot);if(yt===void 0)throw new SyntaxError(`Unexpected escaped character: ${ot}`);At+=yt;continue}if(At+=ue[Me++],Me>=ue.length)throw new SyntaxError("Unexpected end of input")}return At};e:for(;Me<ue.length;){const et=z.at(-1)?.type;if(et===void 0||et===C.CloseStatement||et===C.CloseExpression){let ot="";for(;Me<ue.length&&!(ue[Me]==="{"&&(ue[Me+1]==="%"||ue[Me+1]==="{"));)ot+=ue[Me++];if(ot.length>0){z.push(new ne(ot,C.Text));continue}}it(ot=>/\s/.test(ot));const At=ue[Me];if(At==="-"||At==="+"){const ot=z.at(-1)?.type;if(ot===C.Text||ot===void 0)throw new SyntaxError(`Unexpected character: ${At}`);switch(ot){case C.Identifier:case C.NumericLiteral:case C.BooleanLiteral:case C.StringLiteral:case C.CloseParen:case C.CloseSquareBracket:break;default:{++Me;const yt=it(Te);z.push(new ne(`${At}${yt}`,yt.length>0?C.NumericLiteral:C.UnaryOperator));continue}}}for(const[ot,yt]of R)if(ue.slice(Me,Me+ot.length)===ot){z.push(new ne(ot,yt)),Me+=ot.length;continue e}if(At==="'"||At==='"'){++Me;const ot=it(yt=>yt!==At);z.push(new ne(ot,C.StringLiteral)),++Me;continue}if(Te(At)){const ot=it(Te);z.push(new ne(ot,C.NumericLiteral));continue}if(fe(At)){const ot=it(fe),yt=Object.hasOwn(J,ot)?J[ot]:C.Identifier;yt===C.In&&z.at(-1)?.type===C.Not?(z.pop(),z.push(new ne("not in",C.NotIn))):z.push(new ne(ot,yt));continue}throw new SyntaxError(`Unexpected character: ${At}`)}return z}var X=class{type="Statement"},le=class extends X{constructor($){super(),this.body=$}type="Program"},Ce=class extends X{constructor($,Z,z){super(),this.test=$,this.body=Z,this.alternate=z}type="If"},ve=class extends X{constructor($,Z,z,ue){super(),this.loopvar=$,this.iterable=Z,this.body=z,this.defaultBlock=ue}type="For"},j=class extends X{constructor($,Z){super(),this.assignee=$,this.value=Z}type="Set"},se=class extends X{constructor($,Z,z){super(),this.name=$,this.args=Z,this.body=z}type="Macro"},xe=class extends X{type="Expression"},te=class extends xe{constructor($,Z,z){super(),this.object=$,this.property=Z,this.computed=z}type="MemberExpression"},ee=class extends xe{constructor($,Z){super(),this.callee=$,this.args=Z}type="CallExpression"},G=class extends xe{constructor($){super(),this.value=$}type="Identifier"},B=class extends xe{constructor($){super(),this.value=$}type="Literal"},q=class extends B{type="NumericLiteral"},I=class extends B{type="StringLiteral"},be=class extends B{type="BooleanLiteral"},$e=class extends B{type="ArrayLiteral"},Ae=class extends B{type="TupleLiteral"},je=class extends B{type="ObjectLiteral"},De=class extends xe{constructor($,Z,z){super(),this.operator=$,this.left=Z,this.right=z}type="BinaryExpression"},ft=class extends xe{constructor($,Z){super(),this.operand=$,this.filter=Z}type="FilterExpression"},dt=class extends xe{constructor($,Z){super(),this.iterable=$,this.test=Z}type="SelectExpression"},gt=class extends xe{constructor($,Z,z){super(),this.operand=$,this.negate=Z,this.test=z}type="TestExpression"},Ee=class extends xe{constructor($,Z){super(),this.operator=$,this.argument=Z}type="UnaryExpression"},H=class extends xe{constructor($=void 0,Z=void 0,z=void 0){super(),this.start=$,this.stop=Z,this.step=z}type="SliceExpression"},we=class extends xe{constructor($,Z){super(),this.key=$,this.value=Z}type="KeywordArgumentExpression"};function Pe($){const Z=new le([]);let z=0;function ue(Le,Re){const vt=$[z++];if(!vt||vt.type!==Le)throw new Error(`Parser Error: ${Re}. ${vt.type} !== ${Le}.`);return vt}function Me(){switch($[z].type){case C.Text:return At();case C.OpenStatement:return ot();case C.OpenExpression:return yt();default:throw new SyntaxError(`Unexpected token type: ${$[z].type}`)}}function it(...Le){return z+Le.length<=$.length&&Le.some((Re,vt)=>Re!==$[z+vt].type)}function et(...Le){return z+Le.length<=$.length&&Le.every((Re,vt)=>Re===$[z+vt].type)}function At(){return new I(ue(C.Text,"Expected text token").value)}function ot(){ue(C.OpenStatement,"Expected opening statement token");let Le;switch($[z].type){case C.Set:++z,Le=E(),ue(C.CloseStatement,"Expected closing statement token");break;case C.If:++z,Le=c(),ue(C.OpenStatement,"Expected {% token"),ue(C.EndIf,"Expected endif token"),ue(C.CloseStatement,"Expected %} token");break;case C.Macro:++z,Le=m(),ue(C.OpenStatement,"Expected {% token"),ue(C.EndMacro,"Expected endmacro token"),ue(C.CloseStatement,"Expected %} token");break;case C.For:++z,Le=me(),ue(C.OpenStatement,"Expected {% token"),ue(C.EndFor,"Expected endfor token"),ue(C.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${$[z].type}`)}return Le}function yt(){ue(C.OpenExpression,"Expected opening expression token");const Le=ke();return ue(C.CloseExpression,"Expected closing expression token"),Le}function E(){const Le=ke();if(et(C.Equals)){++z;const Re=E();return new j(Le,Re)}return Le}function c(){const Le=ke();ue(C.CloseStatement,"Expected closing statement token");const Re=[],vt=[];for(;!($[z]?.type===C.OpenStatement&&($[z+1]?.type===C.ElseIf||$[z+1]?.type===C.Else||$[z+1]?.type===C.EndIf));)Re.push(Me());if($[z]?.type===C.OpenStatement&&$[z+1]?.type!==C.EndIf)if(++z,et(C.ElseIf))ue(C.ElseIf,"Expected elseif token"),vt.push(c());else for(ue(C.Else,"Expected else token"),ue(C.CloseStatement,"Expected closing statement token");!($[z]?.type===C.OpenStatement&&$[z+1]?.type===C.EndIf);)vt.push(Me());return new Ce(Le,Re,vt)}function m(){const Le=Nt();if(Le.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Re=pt();ue(C.CloseStatement,"Expected closing statement token");const vt=[];for(;it(C.OpenStatement,C.EndMacro);)vt.push(Me());return new se(Le,Re,vt)}function V(Le=!1){const Re=Le?Nt:ke,vt=[Re()],Ht=et(C.Comma);for(;Ht&&(++z,vt.push(Re()),!!et(C.Comma)););return Ht?new Ae(vt):vt[0]}function me(){const Le=V(!0);if(!(Le instanceof G||Le instanceof Ae))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Le.type} instead`);ue(C.In,"Expected `in` keyword following loop variable");const Re=ke();ue(C.CloseStatement,"Expected closing statement token");const vt=[];for(;it(C.OpenStatement,C.EndFor)&&it(C.OpenStatement,C.Else);)vt.push(Me());const Ht=[];if(et(C.OpenStatement,C.Else))for(++z,++z,ue(C.CloseStatement,"Expected closing statement token");it(C.OpenStatement,C.EndFor);)Ht.push(Me());return new ve(Le,Re,vt,Ht)}function ke(){return Ge()}function Ge(){const Le=sr();if(et(C.If)){++z;const Re=sr();if(et(C.Else)){++z;const vt=sr();return new Ce(Re,[Le],[vt])}else return new dt(Le,Re)}return Le}function sr(){let Le=Je();for(;et(C.Or);){const Re=$[z];++z;const vt=Je();Le=new De(Re,Le,vt)}return Le}function Je(){let Le=N();for(;et(C.And);){const Re=$[z];++z;const vt=N();Le=new De(Re,Le,vt)}return Le}function N(){let Le;for(;et(C.Not);){const Re=$[z];++z;const vt=N();Le=new Ee(Re,vt)}return Le??ye()}function ye(){let Le=Se();for(;et(C.ComparisonBinaryOperator)||et(C.In)||et(C.NotIn);){const Re=$[z];++z;const vt=Se();Le=new De(Re,Le,vt)}return Le}function Se(){let Le=xt();for(;et(C.AdditiveBinaryOperator);){const Re=$[z];++z;const vt=xt();Le=new De(Re,Le,vt)}return Le}function Be(){const Le=Ft();return et(C.OpenParen)?Ke(Le):Le}function Ke(Le){let Re=new ee(Le,pt());return et(C.OpenParen)&&(Re=Ke(Re)),Re}function pt(){ue(C.OpenParen,"Expected opening parenthesis for arguments list");const Le=Ct();return ue(C.CloseParen,"Expected closing parenthesis for arguments list"),Le}function Ct(){const Le=[];for(;!et(C.CloseParen);){let Re=ke();if(et(C.Equals)){if(++z,!(Re instanceof G))throw new SyntaxError("Expected identifier for keyword argument");const vt=ke();Re=new we(Re,vt)}Le.push(Re),et(C.Comma)&&++z}return Le}function Tt(){const Le=[];let Re=!1;for(;!et(C.CloseSquareBracket);)et(C.Colon)?(Le.push(void 0),++z,Re=!0):(Le.push(ke()),et(C.Colon)&&(++z,Re=!0));if(Le.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Re){if(Le.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new H(...Le)}return Le[0]}function Ft(){let Le=Nt();for(;et(C.Dot)||et(C.OpenSquareBracket);){const Re=$[z];++z;let vt;const Ht=Re.type!==C.Dot;if(Ht)vt=Tt(),ue(C.CloseSquareBracket,"Expected closing square bracket");else if(vt=Nt(),vt.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Le=new te(Le,vt,Ht)}return Le}function xt(){let Le=Ut();for(;et(C.MultiplicativeBinaryOperator);){const Re=$[z];++z;const vt=Ut();Le=new De(Re,Le,vt)}return Le}function Ut(){let Le=Wt();for(;et(C.Is);){++z;const Re=et(C.Not);Re&&++z;let vt=Nt();if(vt instanceof be&&(vt=new G(vt.value.toString())),!(vt instanceof G))throw new SyntaxError("Expected identifier for the test");Le=new gt(Le,Re,vt)}return Le}function Wt(){let Le=Be();for(;et(C.Pipe);){++z;let Re=Nt();if(!(Re instanceof G))throw new SyntaxError("Expected identifier for the filter");et(C.OpenParen)&&(Re=Ke(Re)),Le=new ft(Le,Re)}return Le}function Nt(){const Le=$[z];switch(Le.type){case C.NumericLiteral:return++z,new q(Number(Le.value));case C.StringLiteral:return++z,new I(Le.value);case C.BooleanLiteral:return++z,new be(Le.value.toLowerCase()==="true");case C.Identifier:return++z,new G(Le.value);case C.OpenParen:{++z;const Re=V();if($[z].type!==C.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${$[z].type} instead`);return++z,Re}case C.OpenSquareBracket:{++z;const Re=[];for(;!et(C.CloseSquareBracket);)Re.push(ke()),et(C.Comma)&&++z;return++z,new $e(Re)}case C.OpenCurlyBracket:{++z;const Re=new Map;for(;!et(C.CloseCurlyBracket);){const vt=ke();ue(C.Colon,"Expected colon between key and value in object literal");const Ht=ke();Re.set(vt,Ht),et(C.Comma)&&++z}return++z,new je(Re)}default:throw new SyntaxError(`Unexpected token: ${Le.type}`)}}for(;z<$.length;)Z.body.push(Me());return Z}function Qe($,Z,z=1){Z===void 0&&(Z=$,$=0);const ue=[];for(let Me=$;Me<Z;Me+=z)ue.push(Me);return ue}function _t($,Z,z,ue=1){const Me=Math.sign(ue);Me>=0?(Z=(Z??=0)<0?Math.max($.length+Z,0):Math.min(Z,$.length),z=(z??=$.length)<0?Math.max($.length+z,0):Math.min(z,$.length)):(Z=(Z??=$.length-1)<0?Math.max($.length+Z,-1):Math.min(Z,$.length-1),z=(z??=-1)<-1?Math.max($.length+z,-1):Math.min(z,$.length-1));const it=[];for(let et=Z;Me*et<Me*z;et+=ue)it.push($[et]);return it}function ce($){return $.replace(/\b\w/g,Z=>Z.toUpperCase())}var Ue=class{type="RuntimeValue";value;builtins=new Map;constructor($=void 0){this.value=$}__bool__(){return new Mt(!!this.value)}},ct=class extends Ue{type="NumericValue"},Ve=class extends Ue{type="StringValue";builtins=new Map([["upper",new nt(()=>new Ve(this.value.toUpperCase()))],["lower",new nt(()=>new Ve(this.value.toLowerCase()))],["strip",new nt(()=>new Ve(this.value.trim()))],["title",new nt(()=>new Ve(ce(this.value)))],["length",new ct(this.value.length)]])},Mt=class extends Ue{type="BooleanValue"},Et=class extends Ue{type="ObjectValue";__bool__(){return new Mt(this.value.size>0)}builtins=new Map([["get",new nt(([$,Z])=>{if(!($ instanceof Ve))throw new Error(`Object key must be a string: got ${$.type}`);return this.value.get($.value)??Z??new at})],["items",new nt(()=>new Y(Array.from(this.value.entries()).map(([$,Z])=>new Y([new Ve($),Z]))))]])},tt=class extends Et{type="KeywordArgumentsValue"},Y=class extends Ue{type="ArrayValue";builtins=new Map([["length",new ct(this.value.length)]]);__bool__(){return new Mt(this.value.length>0)}},ze=class extends Y{type="TupleValue"},nt=class extends Ue{type="FunctionValue"},at=class extends Ue{type="NullValue"},Ze=class extends Ue{type="UndefinedValue"},He=class{constructor($){this.parent=$}variables=new Map([["namespace",new nt($=>{if($.length===0)return new Et(new Map);if($.length!==1||!($[0]instanceof Et))throw new Error("`namespace` expects either zero arguments or a single object argument");return $[0]})]]);tests=new Map([["boolean",$=>$.type==="BooleanValue"],["callable",$=>$ instanceof nt],["odd",$=>{if($.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${$.type}`);return $.value%2!==0}],["even",$=>{if($.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${$.type}`);return $.value%2===0}],["false",$=>$.type==="BooleanValue"&&!$.value],["true",$=>$.type==="BooleanValue"&&$.value],["string",$=>$.type==="StringValue"],["number",$=>$.type==="NumericValue"],["integer",$=>$.type==="NumericValue"&&Number.isInteger($.value)],["iterable",$=>$ instanceof Y||$ instanceof Ve],["lower",$=>{const Z=$.value;return $.type==="StringValue"&&Z===Z.toLowerCase()}],["upper",$=>{const Z=$.value;return $.type==="StringValue"&&Z===Z.toUpperCase()}],["none",$=>$.type==="NullValue"],["defined",$=>$.type!=="UndefinedValue"],["undefined",$=>$.type==="UndefinedValue"],["equalto",($,Z)=>$.value===Z.value],["eq",($,Z)=>$.value===Z.value]]);set($,Z){return this.declareVariable($,wt(Z))}declareVariable($,Z){if(this.variables.has($))throw new SyntaxError(`Variable already declared: ${$}`);return this.variables.set($,Z),Z}setVariable($,Z){return this.variables.set($,Z),Z}resolve($){if(this.variables.has($))return this;if(this.parent)return this.parent.resolve($);throw new Error(`Unknown variable: ${$}`)}lookupVariable($){try{return this.resolve($).variables.get($)??new Ze}catch{return new Ze}}},mt=class{global;constructor($){this.global=$??new He}run($){return this.evaluate($,this.global)}evaluateBinaryExpression($,Z){const z=this.evaluate($.left,Z);switch($.operator.value){case"and":return z.__bool__().value?this.evaluate($.right,Z):z;case"or":return z.__bool__().value?z:this.evaluate($.right,Z)}const ue=this.evaluate($.right,Z);switch($.operator.value){case"==":return new Mt(z.value==ue.value);case"!=":return new Mt(z.value!=ue.value)}if(z instanceof Ze||ue instanceof Ze)throw new Error("Cannot perform operation on undefined values");if(z instanceof at||ue instanceof at)throw new Error("Cannot perform operation on null values");if(z instanceof ct&&ue instanceof ct)switch($.operator.value){case"+":return new ct(z.value+ue.value);case"-":return new ct(z.value-ue.value);case"*":return new ct(z.value*ue.value);case"/":return new ct(z.value/ue.value);case"%":return new ct(z.value%ue.value);case"<":return new Mt(z.value<ue.value);case">":return new Mt(z.value>ue.value);case">=":return new Mt(z.value>=ue.value);case"<=":return new Mt(z.value<=ue.value)}else if(z instanceof Y&&ue instanceof Y)switch($.operator.value){case"+":return new Y(z.value.concat(ue.value))}else if(ue instanceof Y){const Me=ue.value.find(it=>it.value===z.value)!==void 0;switch($.operator.value){case"in":return new Mt(Me);case"not in":return new Mt(!Me)}}if(z instanceof Ve||ue instanceof Ve)switch($.operator.value){case"+":return new Ve(z.value.toString()+ue.value.toString())}if(z instanceof Ve&&ue instanceof Ve)switch($.operator.value){case"in":return new Mt(ue.value.includes(z.value));case"not in":return new Mt(!ue.value.includes(z.value))}if(z instanceof Ve&&ue instanceof Et)switch($.operator.value){case"in":return new Mt(ue.value.has(z.value));case"not in":return new Mt(!ue.value.has(z.value))}throw new SyntaxError(`Unknown operator "${$.operator.value}" between ${z.type} and ${ue.type}`)}evaluateArguments($,Z){const z=[],ue=new Map;for(const Me of $)if(Me.type==="KeywordArgumentExpression"){const it=Me;ue.set(it.key.value,this.evaluate(it.value,Z))}else{if(ue.size>0)throw new Error("Positional arguments must come before keyword arguments");z.push(this.evaluate(Me,Z))}return[z,ue]}evaluateFilterExpression($,Z){const z=this.evaluate($.operand,Z);if($.filter.type==="Identifier"){const ue=$.filter;if(ue.value==="tojson")return new Ve(Lt(z));if(z instanceof Y)switch(ue.value){case"list":return z;case"first":return z.value[0];case"last":return z.value[z.value.length-1];case"length":return new ct(z.value.length);case"reverse":return new Y(z.value.reverse());case"sort":return new Y(z.value.sort((Me,it)=>{if(Me.type!==it.type)throw new Error(`Cannot compare different types: ${Me.type} and ${it.type}`);switch(Me.type){case"NumericValue":return Me.value-it.value;case"StringValue":return Me.value.localeCompare(it.value);default:throw new Error(`Cannot compare type: ${Me.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${ue.value}`)}else if(z instanceof Ve)switch(ue.value){case"length":return new ct(z.value.length);case"upper":return new Ve(z.value.toUpperCase());case"lower":return new Ve(z.value.toLowerCase());case"title":return new Ve(ce(z.value));case"capitalize":return new Ve(z.value.charAt(0).toUpperCase()+z.value.slice(1));case"trim":return new Ve(z.value.trim());case"indent":return new Ve(z.value.split(`
`).map((Me,it)=>it===0||Me.length===0?Me:"    "+Me).join(`
`));case"string":return z;default:throw new Error(`Unknown StringValue filter: ${ue.value}`)}else if(z instanceof ct)switch(ue.value){case"abs":return new ct(Math.abs(z.value));default:throw new Error(`Unknown NumericValue filter: ${ue.value}`)}else if(z instanceof Et)switch(ue.value){case"items":return new Y(Array.from(z.value.entries()).map(([Me,it])=>new Y([new Ve(Me),it])));case"length":return new ct(z.value.size);default:throw new Error(`Unknown ObjectValue filter: ${ue.value}`)}throw new Error(`Cannot apply filter "${ue.value}" to type: ${z.type}`)}else if($.filter.type==="CallExpression"){const ue=$.filter;if(ue.callee.type!=="Identifier")throw new Error(`Unknown filter: ${ue.callee.type}`);const Me=ue.callee.value;if(Me==="tojson"){const[,it]=this.evaluateArguments(ue.args,Z),et=it.get("indent")??new at;if(!(et instanceof ct||et instanceof at))throw new Error("If set, indent must be a number");return new Ve(Lt(z,et.value))}if(z instanceof Y){switch(Me){case"selectattr":{if(z.value.some(E=>!(E instanceof Et)))throw new Error("`selectattr` can only be applied to array of objects");if(ue.args.some(E=>E.type!=="StringLiteral"))throw new Error("arguments of `selectattr` must be strings");const[it,et,At]=ue.args.map(E=>this.evaluate(E,Z));let ot;if(et){const E=Z.tests.get(et.value);if(!E)throw new Error(`Unknown test: ${et.value}`);ot=E}else ot=(...E)=>E[0].__bool__().value;const yt=z.value.filter(E=>{const c=E.value.get(it.value);return c?ot(c,At):!1});return new Y(yt)}case"map":{const[,it]=this.evaluateArguments(ue.args,Z);if(it.has("attribute")){const et=it.get("attribute");if(!(et instanceof Ve))throw new Error("attribute must be a string");const At=it.get("default"),ot=z.value.map(yt=>{if(!(yt instanceof Et))throw new Error("items in map must be an object");return yt.value.get(et.value)??At??new Ze});return new Y(ot)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${Me}`)}else if(z instanceof Ve){switch(Me){case"indent":{const[it,et]=this.evaluateArguments(ue.args,Z),At=it.at(0)??et.get("width")??new ct(4);if(!(At instanceof ct))throw new Error("width must be a number");const ot=it.at(1)??et.get("first")??new Mt(!1),yt=it.at(2)??et.get("blank")??new Mt(!1),E=z.value.split(`
`),c=" ".repeat(At.value),m=E.map((V,me)=>!ot.value&&me===0||!yt.value&&V.length===0?V:c+V);return new Ve(m.join(`
`))}}throw new Error(`Unknown StringValue filter: ${Me}`)}else throw new Error(`Cannot apply filter "${Me}" to type: ${z.type}`)}throw new Error(`Unknown filter: ${$.filter.type}`)}evaluateTestExpression($,Z){const z=this.evaluate($.operand,Z),ue=Z.tests.get($.test.value);if(!ue)throw new Error(`Unknown test: ${$.test.value}`);const Me=ue(z);return new Mt($.negate?!Me:Me)}evaluateUnaryExpression($,Z){const z=this.evaluate($.argument,Z);switch($.operator.value){case"not":return new Mt(!z.value);default:throw new SyntaxError(`Unknown operator: ${$.operator.value}`)}}evalProgram($,Z){return this.evaluateBlock($.body,Z)}evaluateBlock($,Z){let z="";for(const ue of $){const Me=this.evaluate(ue,Z);Me.type!=="NullValue"&&Me.type!=="UndefinedValue"&&(z+=Me.value)}return new Ve(z)}evaluateIdentifier($,Z){return Z.lookupVariable($.value)}evaluateCallExpression($,Z){const[z,ue]=this.evaluateArguments($.args,Z);ue.size>0&&z.push(new tt(ue));const Me=this.evaluate($.callee,Z);if(Me.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${Me.type}`);return Me.value(z,Z)}evaluateSliceExpression($,Z,z){if(!($ instanceof Y||$ instanceof Ve))throw new Error("Slice object must be an array or string");const ue=this.evaluate(Z.start,z),Me=this.evaluate(Z.stop,z),it=this.evaluate(Z.step,z);if(!(ue instanceof ct||ue instanceof Ze))throw new Error("Slice start must be numeric or undefined");if(!(Me instanceof ct||Me instanceof Ze))throw new Error("Slice stop must be numeric or undefined");if(!(it instanceof ct||it instanceof Ze))throw new Error("Slice step must be numeric or undefined");return $ instanceof Y?new Y(_t($.value,ue.value,Me.value,it.value)):new Ve(_t(Array.from($.value),ue.value,Me.value,it.value).join(""))}evaluateMemberExpression($,Z){const z=this.evaluate($.object,Z);let ue;if($.computed){if($.property.type==="SliceExpression")return this.evaluateSliceExpression(z,$.property,Z);ue=this.evaluate($.property,Z)}else ue=new Ve($.property.value);let Me;if(z instanceof Et){if(!(ue instanceof Ve))throw new Error(`Cannot access property with non-string: got ${ue.type}`);Me=z.value.get(ue.value)??z.builtins.get(ue.value)}else if(z instanceof Y||z instanceof Ve)if(ue instanceof ct)Me=z.value.at(ue.value),z instanceof Ve&&(Me=new Ve(z.value.at(ue.value)));else if(ue instanceof Ve)Me=z.builtins.get(ue.value);else throw new Error(`Cannot access property with non-string/non-number: got ${ue.type}`);else{if(!(ue instanceof Ve))throw new Error(`Cannot access property with non-string: got ${ue.type}`);Me=z.builtins.get(ue.value)}return Me instanceof Ue?Me:new Ze}evaluateSet($,Z){const z=this.evaluate($.value,Z);if($.assignee.type==="Identifier"){const ue=$.assignee.value;Z.setVariable(ue,z)}else if($.assignee.type==="MemberExpression"){const ue=$.assignee,Me=this.evaluate(ue.object,Z);if(!(Me instanceof Et))throw new Error("Cannot assign to member of non-object");if(ue.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");Me.value.set(ue.property.value,z)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify($.assignee)}`);return new at}evaluateIf($,Z){const z=this.evaluate($.test,Z);return this.evaluateBlock(z.__bool__().value?$.body:$.alternate,Z)}evaluateFor($,Z){const z=new He(Z);let ue,Me;if($.iterable.type==="SelectExpression"){const yt=$.iterable;Me=this.evaluate(yt.iterable,z),ue=yt.test}else Me=this.evaluate($.iterable,z);if(!(Me instanceof Y))throw new Error(`Expected iterable type in for loop: got ${Me.type}`);const it=[],et=[];for(let yt=0;yt<Me.value.length;++yt){const E=new He(z),c=Me.value[yt];let m;if($.loopvar.type==="Identifier")m=V=>V.setVariable($.loopvar.value,c);else if($.loopvar.type==="TupleLiteral"){const V=$.loopvar;if(c.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${c.type}`);const me=c;if(V.value.length!==me.value.length)throw new Error(`Too ${V.value.length>me.value.length?"few":"many"} items to unpack`);m=ke=>{for(let Ge=0;Ge<V.value.length;++Ge){if(V.value[Ge].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${V.value[Ge].type}`);ke.setVariable(V.value[Ge].value,me.value[Ge])}}}else throw new Error(`Invalid loop variable(s): ${$.loopvar.type}`);ue&&(m(E),!this.evaluate(ue,E).__bool__().value)||(it.push(c),et.push(m))}let At="",ot=!0;for(let yt=0;yt<it.length;++yt){const E=new Map([["index",new ct(yt+1)],["index0",new ct(yt)],["revindex",new ct(it.length-yt)],["revindex0",new ct(it.length-yt-1)],["first",new Mt(yt===0)],["last",new Mt(yt===it.length-1)],["length",new ct(it.length)],["previtem",yt>0?it[yt-1]:new Ze],["nextitem",yt<it.length-1?it[yt+1]:new Ze]]);z.setVariable("loop",new Et(E)),et[yt](z);const c=this.evaluateBlock($.body,z);At+=c.value,ot=!1}if(ot){const yt=this.evaluateBlock($.defaultBlock,z);At+=yt.value}return new Ve(At)}evaluateMacro($,Z){return Z.setVariable($.name.value,new nt((z,ue)=>{const Me=new He(ue);z=z.slice();let it;z.at(-1)?.type==="KeywordArgumentsValue"&&(it=z.pop());for(let et=0;et<$.args.length;++et){const At=$.args[et],ot=z[et];if(At.type==="Identifier"){const yt=At;if(!ot)throw new Error(`Missing positional argument: ${yt.value}`);Me.setVariable(yt.value,ot)}else if(At.type==="KeywordArgumentExpression"){const yt=At,E=ot??it?.value.get(yt.key.value)??this.evaluate(yt.value,Me);Me.setVariable(yt.key.value,E)}else throw new Error(`Unknown argument type: ${At.type}`)}return this.evaluateBlock($.body,Me)})),new at}evaluate($,Z){if($===void 0)return new Ze;switch($.type){case"Program":return this.evalProgram($,Z);case"Set":return this.evaluateSet($,Z);case"If":return this.evaluateIf($,Z);case"For":return this.evaluateFor($,Z);case"Macro":return this.evaluateMacro($,Z);case"NumericLiteral":return new ct(Number($.value));case"StringLiteral":return new Ve($.value);case"BooleanLiteral":return new Mt($.value);case"ArrayLiteral":return new Y($.value.map(z=>this.evaluate(z,Z)));case"TupleLiteral":return new ze($.value.map(z=>this.evaluate(z,Z)));case"ObjectLiteral":{const z=new Map;for(const[ue,Me]of $.value){const it=this.evaluate(ue,Z);if(!(it instanceof Ve))throw new Error(`Object keys must be strings: got ${it.type}`);z.set(it.value,this.evaluate(Me,Z))}return new Et(z)}case"Identifier":return this.evaluateIdentifier($,Z);case"CallExpression":return this.evaluateCallExpression($,Z);case"MemberExpression":return this.evaluateMemberExpression($,Z);case"UnaryExpression":return this.evaluateUnaryExpression($,Z);case"BinaryExpression":return this.evaluateBinaryExpression($,Z);case"FilterExpression":return this.evaluateFilterExpression($,Z);case"TestExpression":return this.evaluateTestExpression($,Z);default:throw new SyntaxError(`Unknown node type: ${$.type}`)}}};function wt($){switch(typeof $){case"number":return new ct($);case"string":return new Ve($);case"boolean":return new Mt($);case"undefined":return new Ze;case"object":return $===null?new at:Array.isArray($)?new Y($.map(wt)):new Et(new Map(Object.entries($).map(([Z,z])=>[Z,wt(z)])));case"function":return new nt((Z,z)=>{const ue=$(...Z.map(Me=>Me.value))??null;return wt(ue)});default:throw new Error(`Cannot convert to runtime value: ${$}`)}}function Lt($,Z,z){const ue=z??0;switch($.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify($.value);case"ArrayValue":case"ObjectValue":{const Me=Z?" ".repeat(Z):"",it=`
`+Me.repeat(ue),et=it+Me;if($.type==="ArrayValue"){const At=$.value.map(ot=>Lt(ot,Z,ue+1));return Z?`[${et}${At.join(`,${et}`)}${it}]`:`[${At.join(", ")}]`}else{const At=Array.from($.value.entries()).map(([ot,yt])=>{const E=`"${ot}": ${Lt(yt,Z,ue+1)}`;return Z?`${et}${E}`:E});return Z?`{${At.join(",")}${it}}`:`{${At.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${$.type}`)}}var kt=class{parsed;constructor($){const Z=U($,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=Pe(Z)}render($){const Z=new He;Z.set("false",!1),Z.set("true",!0),Z.set("raise_exception",Me=>{throw new Error(Me)}),Z.set("range",Qe);for(const[Me,it]of Object.entries($))Z.set(Me,it);return new mt(Z).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(ae,L,T)=>{T.r(L),T.d(L,{registerBackend:()=>ne,resolveBackendAndExecutionProviders:()=>Te});const C=new Map,J=[],ne=(R,O,M)=>{if(O&&typeof O.init=="function"&&typeof O.createInferenceSessionHandler=="function"){const U=C.get(R);if(U===void 0)C.set(R,{backend:O,priority:M});else{if(U.priority>M)return;if(U.priority===M&&U.backend!==O)throw new Error(`cannot register backend "${R}" using priority ${M}`)}if(M>=0){const X=J.indexOf(R);X!==-1&&J.splice(X,1);for(let le=0;le<J.length;le++)if(C.get(J[le]).priority<=M){J.splice(le,0,R);return}J.push(R)}return}throw new TypeError("not a valid backend")},fe=async R=>{const O=C.get(R);if(!O)return"backend not found.";if(O.initialized)return O.backend;if(O.aborted)return O.error;{const M=!!O.initPromise;try{return M||(O.initPromise=O.backend.init(R)),await O.initPromise,O.initialized=!0,O.backend}catch(U){return M||(O.error=`${U}`,O.aborted=!0),O.error}finally{delete O.initPromise}}},Te=async R=>{const O=R.executionProviders||[],M=O.map(j=>typeof j=="string"?j:j.name),U=M.length===0?J:M;let X;const le=[],Ce=new Set;for(const j of U){const se=await fe(j);typeof se=="string"?le.push({name:j,err:se}):(X||(X=se),X===se&&Ce.add(j))}if(!X)throw new Error(`no available backend found. ERR: ${le.map(j=>`[${j.name}] ${j.err}`).join(", ")}`);for(const{name:j,err:se}of le)M.includes(j)&&console.warn(`removing requested execution provider "${j}" from session options because it is not available: ${se}`);const ve=O.filter(j=>Ce.has(typeof j=="string"?j:j.name));return[X,new Proxy(R,{get:(j,se)=>se==="executionProviders"?ve:Reflect.get(j,se)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(ae,L,T)=>{T.r(L),T.d(L,{registerBackend:()=>C.registerBackend});var C=T("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(ae,L,T)=>{T.r(L),T.d(L,{env:()=>ne});var C=T("./node_modules/onnxruntime-common/dist/esm/version.js");let J="warning";const ne={wasm:{},webgl:{},webgpu:{},versions:{common:C.version},set logLevel(fe){if(fe!==void 0){if(typeof fe!="string"||["verbose","info","warning","error","fatal"].indexOf(fe)===-1)throw new Error(`Unsupported logging level: ${fe}`);J=fe}},get logLevel(){return J}};Object.defineProperty(ne,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(ae,L,T)=>{T.r(L),T.d(L,{env:()=>J});var C=T("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const J=C.env},"./node_modules/onnxruntime-common/dist/esm/index.js":(ae,L,T)=>{T.r(L),T.d(L,{InferenceSession:()=>ne.InferenceSession,TRACE:()=>Te.TRACE,TRACE_FUNC_BEGIN:()=>Te.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>Te.TRACE_FUNC_END,Tensor:()=>fe.Tensor,TrainingSession:()=>R.TrainingSession,env:()=>J.env,registerBackend:()=>C.registerBackend});var C=T("./node_modules/onnxruntime-common/dist/esm/backend.js"),J=T("./node_modules/onnxruntime-common/dist/esm/env.js"),ne=T("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),fe=T("./node_modules/onnxruntime-common/dist/esm/tensor.js");T("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),T("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var Te=T("./node_modules/onnxruntime-common/dist/esm/trace.js");T("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),T("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var R=T("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(ae,L,T)=>{T.r(L),T.d(L,{InferenceSession:()=>fe});var C=T("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),J=T("./node_modules/onnxruntime-common/dist/esm/tensor.js"),ne=T("./node_modules/onnxruntime-common/dist/esm/trace.js");class fe{constructor(R){this.handler=R}async run(R,O,M){(0,ne.TRACE_FUNC_BEGIN)();const U={};let X={};if(typeof R!="object"||R===null||R instanceof J.Tensor||Array.isArray(R))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let le=!0;if(typeof O=="object"){if(O===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(O instanceof J.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(O)){if(O.length===0)throw new TypeError("'fetches' cannot be an empty array.");le=!1;for(const j of O){if(typeof j!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(j)===-1)throw new RangeError(`'fetches' contains invalid output name: ${j}.`);U[j]=null}if(typeof M=="object"&&M!==null)X=M;else if(typeof M<"u")throw new TypeError("'options' must be an object.")}else{let j=!1;const se=Object.getOwnPropertyNames(O);for(const xe of this.outputNames)if(se.indexOf(xe)!==-1){const te=O[xe];(te===null||te instanceof J.Tensor)&&(j=!0,le=!1,U[xe]=te)}if(j){if(typeof M=="object"&&M!==null)X=M;else if(typeof M<"u")throw new TypeError("'options' must be an object.")}else X=O}}else if(typeof O<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const j of this.inputNames)if(typeof R[j]>"u")throw new Error(`input '${j}' is missing in 'feeds'.`);if(le)for(const j of this.outputNames)U[j]=null;const Ce=await this.handler.run(R,U,X),ve={};for(const j in Ce)if(Object.hasOwnProperty.call(Ce,j)){const se=Ce[j];se instanceof J.Tensor?ve[j]=se:ve[j]=new J.Tensor(se.type,se.data,se.dims)}return(0,ne.TRACE_FUNC_END)(),ve}async release(){return this.handler.dispose()}static async create(R,O,M,U){(0,ne.TRACE_FUNC_BEGIN)();let X,le={};if(typeof R=="string"){if(X=R,typeof O=="object"&&O!==null)le=O;else if(typeof O<"u")throw new TypeError("'options' must be an object.")}else if(R instanceof Uint8Array){if(X=R,typeof O=="object"&&O!==null)le=O;else if(typeof O<"u")throw new TypeError("'options' must be an object.")}else if(R instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&R instanceof SharedArrayBuffer){const se=R;let xe=0,te=R.byteLength;if(typeof O=="object"&&O!==null)le=O;else if(typeof O=="number"){if(xe=O,!Number.isSafeInteger(xe))throw new RangeError("'byteOffset' must be an integer.");if(xe<0||xe>=se.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${se.byteLength}).`);if(te=R.byteLength-xe,typeof M=="number"){if(te=M,!Number.isSafeInteger(te))throw new RangeError("'byteLength' must be an integer.");if(te<=0||xe+te>se.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${se.byteLength-xe}].`);if(typeof U=="object"&&U!==null)le=U;else if(typeof U<"u")throw new TypeError("'options' must be an object.")}else if(typeof M<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof O<"u")throw new TypeError("'options' must be an object.");X=new Uint8Array(se,xe,te)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[Ce,ve]=await(0,C.resolveBackendAndExecutionProviders)(le),j=await Ce.createInferenceSessionHandler(X,ve);return(0,ne.TRACE_FUNC_END)(),new fe(j)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(ae,L,T)=>{T.r(L),T.d(L,{InferenceSession:()=>J});var C=T("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js");const J=C.InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(ae,L,T)=>{T.r(L)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(ae,L,T)=>{T.r(L)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(ae,L,T)=>{T.r(L),T.d(L,{tensorToDataURL:()=>C,tensorToImageData:()=>J});const C=(ne,fe)=>{const Te=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);Te.width=ne.dims[3],Te.height=ne.dims[2];const R=Te.getContext("2d");if(R!=null){let O,M;fe?.tensorLayout!==void 0&&fe.tensorLayout==="NHWC"?(O=ne.dims[2],M=ne.dims[3]):(O=ne.dims[3],M=ne.dims[2]);const U=fe?.format!==void 0?fe.format:"RGB",X=fe?.norm;let le,Ce;X===void 0||X.mean===void 0?le=[255,255,255,255]:typeof X.mean=="number"?le=[X.mean,X.mean,X.mean,X.mean]:(le=[X.mean[0],X.mean[1],X.mean[2],0],X.mean[3]!==void 0&&(le[3]=X.mean[3])),X===void 0||X.bias===void 0?Ce=[0,0,0,0]:typeof X.bias=="number"?Ce=[X.bias,X.bias,X.bias,X.bias]:(Ce=[X.bias[0],X.bias[1],X.bias[2],0],X.bias[3]!==void 0&&(Ce[3]=X.bias[3]));const ve=M*O;let j=0,se=ve,xe=ve*2,te=-1;U==="RGBA"?(j=0,se=ve,xe=ve*2,te=ve*3):U==="RGB"?(j=0,se=ve,xe=ve*2):U==="RBG"&&(j=0,xe=ve,se=ve*2);for(let ee=0;ee<M;ee++)for(let G=0;G<O;G++){const B=(ne.data[j++]-Ce[0])*le[0],q=(ne.data[se++]-Ce[1])*le[1],I=(ne.data[xe++]-Ce[2])*le[2],be=te===-1?255:(ne.data[te++]-Ce[3])*le[3];R.fillStyle="rgba("+B+","+q+","+I+","+be+")",R.fillRect(G,ee,1,1)}if("toDataURL"in Te)return Te.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},J=(ne,fe)=>{const Te=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let R;if(Te!=null){let O,M,U;fe?.tensorLayout!==void 0&&fe.tensorLayout==="NHWC"?(O=ne.dims[2],M=ne.dims[1],U=ne.dims[3]):(O=ne.dims[3],M=ne.dims[2],U=ne.dims[1]);const X=fe!==void 0&&fe.format!==void 0?fe.format:"RGB",le=fe?.norm;let Ce,ve;le===void 0||le.mean===void 0?Ce=[255,255,255,255]:typeof le.mean=="number"?Ce=[le.mean,le.mean,le.mean,le.mean]:(Ce=[le.mean[0],le.mean[1],le.mean[2],255],le.mean[3]!==void 0&&(Ce[3]=le.mean[3])),le===void 0||le.bias===void 0?ve=[0,0,0,0]:typeof le.bias=="number"?ve=[le.bias,le.bias,le.bias,le.bias]:(ve=[le.bias[0],le.bias[1],le.bias[2],0],le.bias[3]!==void 0&&(ve[3]=le.bias[3]));const j=M*O;if(fe!==void 0&&(fe.format!==void 0&&U===4&&fe.format!=="RGBA"||U===3&&fe.format!=="RGB"&&fe.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const se=4;let xe=0,te=1,ee=2,G=3,B=0,q=j,I=j*2,be=-1;X==="RGBA"?(B=0,q=j,I=j*2,be=j*3):X==="RGB"?(B=0,q=j,I=j*2):X==="RBG"&&(B=0,I=j,q=j*2),R=Te.createImageData(O,M);for(let $e=0;$e<M*O;xe+=se,te+=se,ee+=se,G+=se,$e++)R.data[xe]=(ne.data[B++]-ve[0])*Ce[0],R.data[te]=(ne.data[q++]-ve[1])*Ce[1],R.data[ee]=(ne.data[I++]-ve[2])*Ce[2],R.data[G]=be===-1?255:(ne.data[be++]-ve[3])*Ce[3]}else throw new Error("Can not access image data");return R}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(ae,L,T)=>{T.r(L)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(ae,L,T)=>{T.r(L),T.d(L,{bufferToTensor:()=>J,tensorFromGpuBuffer:()=>Te,tensorFromImage:()=>ne,tensorFromPinnedBuffer:()=>R,tensorFromTexture:()=>fe});var C=T("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const J=(O,M)=>{if(O===void 0)throw new Error("Image buffer must be defined");if(M.height===void 0||M.width===void 0)throw new Error("Image height and width must be defined");if(M.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:U,width:X}=M,le=M.norm??{mean:255,bias:0};let Ce,ve;typeof le.mean=="number"?Ce=[le.mean,le.mean,le.mean,le.mean]:Ce=[le.mean[0],le.mean[1],le.mean[2],le.mean[3]??255],typeof le.bias=="number"?ve=[le.bias,le.bias,le.bias,le.bias]:ve=[le.bias[0],le.bias[1],le.bias[2],le.bias[3]??0];const j=M.format!==void 0?M.format:"RGBA",se=M.tensorFormat!==void 0&&M.tensorFormat!==void 0?M.tensorFormat:"RGB",xe=U*X,te=se==="RGBA"?new Float32Array(xe*4):new Float32Array(xe*3);let ee=4,G=0,B=1,q=2,I=3,be=0,$e=xe,Ae=xe*2,je=-1;j==="RGB"&&(ee=3,G=0,B=1,q=2,I=-1),se==="RGBA"?je=xe*3:se==="RBG"?(be=0,Ae=xe,$e=xe*2):se==="BGR"&&(Ae=0,$e=xe,be=xe*2);for(let ft=0;ft<xe;ft++,G+=ee,q+=ee,B+=ee,I+=ee)te[be++]=(O[G]+ve[0])/Ce[0],te[$e++]=(O[B]+ve[1])/Ce[1],te[Ae++]=(O[q]+ve[2])/Ce[2],je!==-1&&I!==-1&&(te[je++]=(O[I]+ve[3])/Ce[3]);return se==="RGBA"?new C.Tensor("float32",te,[1,4,U,X]):new C.Tensor("float32",te,[1,3,U,X])},ne=async(O,M)=>{const U=typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement,X=typeof ImageData<"u"&&O instanceof ImageData,le=typeof ImageBitmap<"u"&&O instanceof ImageBitmap,Ce=typeof O=="string";let ve,j=M??{};const se=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},xe=te=>te instanceof HTMLCanvasElement||te instanceof OffscreenCanvas?te.getContext("2d"):null;if(U){const te=se();te.width=O.width,te.height=O.height;const ee=xe(te);if(ee!=null){let G=O.height,B=O.width;if(M!==void 0&&M.resizedHeight!==void 0&&M.resizedWidth!==void 0&&(G=M.resizedHeight,B=M.resizedWidth),M!==void 0){if(j=M,M.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");j.tensorFormat="RGBA",j.height=G,j.width=B}else j.tensorFormat="RGBA",j.height=G,j.width=B;ee.drawImage(O,0,0),ve=ee.getImageData(0,0,B,G).data}else throw new Error("Can not access image data")}else if(X){let te,ee;if(M!==void 0&&M.resizedWidth!==void 0&&M.resizedHeight!==void 0?(te=M.resizedHeight,ee=M.resizedWidth):(te=O.height,ee=O.width),M!==void 0&&(j=M),j.format="RGBA",j.height=te,j.width=ee,M!==void 0){const G=se();G.width=ee,G.height=te;const B=xe(G);if(B!=null)B.putImageData(O,0,0),ve=B.getImageData(0,0,ee,te).data;else throw new Error("Can not access image data")}else ve=O.data}else if(le){if(M===void 0)throw new Error("Please provide image config with format for Imagebitmap");const te=se();te.width=O.width,te.height=O.height;const ee=xe(te);if(ee!=null){const G=O.height,B=O.width;return ee.drawImage(O,0,0,B,G),ve=ee.getImageData(0,0,B,G).data,j.height=G,j.width=B,J(ve,j)}else throw new Error("Can not access image data")}else{if(Ce)return new Promise((te,ee)=>{const G=se(),B=xe(G);if(!O||!B)return ee();const q=new Image;q.crossOrigin="Anonymous",q.src=O,q.onload=()=>{G.width=q.width,G.height=q.height,B.drawImage(q,0,0,G.width,G.height);const I=B.getImageData(0,0,G.width,G.height);j.height=G.height,j.width=G.width,te(J(I.data,j))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(ve!==void 0)return J(ve,j);throw new Error("Input data provided is not supported - aborted tensor creation")},fe=(O,M)=>{const{width:U,height:X,download:le,dispose:Ce}=M,ve=[1,X,U,4];return new C.Tensor({location:"texture",type:"float32",texture:O,dims:ve,download:le,dispose:Ce})},Te=(O,M)=>{const{dataType:U,dims:X,download:le,dispose:Ce}=M;return new C.Tensor({location:"gpu-buffer",type:U??"float32",gpuBuffer:O,dims:X,download:le,dispose:Ce})},R=(O,M,U)=>new C.Tensor({location:"cpu-pinned",type:O,data:M,dims:U??[M.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(ae,L,T)=>{T.r(L)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(ae,L,T)=>{T.r(L),T.d(L,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>J,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>C,checkTypedArray:()=>fe});const C=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),J=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let ne=!1;const fe=()=>{if(!ne){ne=!0;const Te=typeof BigInt64Array<"u"&&BigInt64Array.from,R=typeof BigUint64Array<"u"&&BigUint64Array.from,O=typeof Float16Array<"u"&&Float16Array.from;Te&&(C.set("int64",BigInt64Array),J.set(BigInt64Array,"int64")),R&&(C.set("uint64",BigUint64Array),J.set(BigUint64Array,"uint64")),O?(C.set("float16",Float16Array),J.set(Float16Array,"float16")):C.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(ae,L,T)=>{T.r(L),T.d(L,{Tensor:()=>Te});var C=T("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),J=T("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),ne=T("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),fe=T("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class Te{constructor(O,M,U){(0,ne.checkTypedArray)();let X,le;if(typeof O=="object"&&"location"in O)switch(this.dataLocation=O.location,X=O.type,le=O.dims,O.location){case"cpu-pinned":{const ve=ne.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(X);if(!ve)throw new TypeError(`unsupported type "${X}" to create tensor from pinned buffer`);if(!(O.data instanceof ve))throw new TypeError(`buffer should be of type ${ve.name}`);this.cpuData=O.data;break}case"texture":{if(X!=="float32")throw new TypeError(`unsupported type "${X}" to create tensor from texture`);this.gpuTextureData=O.texture,this.downloader=O.download,this.disposer=O.dispose;break}case"gpu-buffer":{if(X!=="float32"&&X!=="float16"&&X!=="int32"&&X!=="int64"&&X!=="uint32"&&X!=="uint8"&&X!=="bool")throw new TypeError(`unsupported type "${X}" to create tensor from gpu buffer`);this.gpuBufferData=O.gpuBuffer,this.downloader=O.download,this.disposer=O.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let ve,j;if(typeof O=="string")if(X=O,j=U,O==="string"){if(!Array.isArray(M))throw new TypeError("A string tensor's data must be a string array.");ve=M}else{const se=ne.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(O);if(se===void 0)throw new TypeError(`Unsupported tensor type: ${O}.`);if(Array.isArray(M)){if(O==="float16"&&se===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");O==="uint64"||O==="int64"?ve=se.from(M,BigInt):ve=se.from(M)}else if(M instanceof se)ve=M;else throw new TypeError(`A ${X} tensor's data must be type of ${se}`)}else if(j=M,Array.isArray(O)){if(O.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const se=typeof O[0];if(se==="string")X="string",ve=O;else if(se==="boolean")X="bool",ve=Uint8Array.from(O);else throw new TypeError(`Invalid element type of data array: ${se}.`)}else{const se=ne.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(O.constructor);if(se===void 0)throw new TypeError(`Unsupported type for tensor data: ${O.constructor}.`);X=se,ve=O}if(j===void 0)j=[ve.length];else if(!Array.isArray(j))throw new TypeError("A tensor's dims must be a number array");le=j,this.cpuData=ve,this.dataLocation="cpu"}const Ce=(0,fe.calculateSize)(le);if(this.cpuData&&Ce!==this.cpuData.length)throw new Error(`Tensor's size(${Ce}) does not match data length(${this.cpuData.length}).`);this.type=X,this.dims=le,this.size=Ce}static async fromImage(O,M){return(0,J.tensorFromImage)(O,M)}static fromTexture(O,M){return(0,J.tensorFromTexture)(O,M)}static fromGpuBuffer(O,M){return(0,J.tensorFromGpuBuffer)(O,M)}static fromPinnedBuffer(O,M,U){return(0,J.tensorFromPinnedBuffer)(O,M,U)}toDataURL(O){return(0,C.tensorToDataURL)(this,O)}toImageData(O){return(0,C.tensorToImageData)(this,O)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(O){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const M=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=M,O&&this.disposer&&(this.disposer(),this.disposer=void 0),M}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(O){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,fe.tensorReshape)(this,O)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(ae,L,T)=>{T.r(L),T.d(L,{calculateSize:()=>J,tensorReshape:()=>ne});var C=T("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const J=fe=>{let Te=1;for(let R=0;R<fe.length;R++){const O=fe[R];if(typeof O!="number"||!Number.isSafeInteger(O))throw new TypeError(`dims[${R}] must be an integer, got: ${O}`);if(O<0)throw new RangeError(`dims[${R}] must be a non-negative integer, got: ${O}`);Te*=O}return Te},ne=(fe,Te)=>{switch(fe.location){case"cpu":return new C.Tensor(fe.type,fe.data,Te);case"cpu-pinned":return new C.Tensor({location:"cpu-pinned",data:fe.data,type:fe.type,dims:Te});case"texture":return new C.Tensor({location:"texture",texture:fe.texture,type:fe.type,dims:Te});case"gpu-buffer":return new C.Tensor({location:"gpu-buffer",gpuBuffer:fe.gpuBuffer,type:fe.type,dims:Te});default:throw new Error(`tensorReshape: tensor location ${fe.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(ae,L,T)=>{T.r(L),T.d(L,{Tensor:()=>J});var C=T("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const J=C.Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(ae,L,T)=>{T.r(L),T.d(L,{TRACE:()=>J,TRACE_FUNC_BEGIN:()=>fe,TRACE_FUNC_END:()=>Te});var C=T("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const J=(R,O)=>{(typeof C.env.trace>"u"?!C.env.wasm.trace:!C.env.trace)||console.timeStamp(`${R}::ORT::${O}`)},ne=(R,O)=>{const M=new Error().stack?.split(/\r\n|\r|\n/g)||[];let U=!1;for(let X=0;X<M.length;X++){if(U&&!M[X].includes("TRACE_FUNC")){let le=`FUNC_${R}::${M[X].trim().split(" ")[1]}`;O&&(le+=`::${O}`),J("CPU",le);return}M[X].includes("TRACE_FUNC")&&(U=!0)}},fe=R=>{(typeof C.env.trace>"u"?!C.env.wasm.trace:!C.env.trace)||ne("BEGIN",R)},Te=R=>{(typeof C.env.trace>"u"?!C.env.wasm.trace:!C.env.trace)||ne("END",R)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(ae,L,T)=>{T.r(L),T.d(L,{TrainingSession:()=>fe});var C=T("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),J=T("./node_modules/onnxruntime-common/dist/esm/tensor.js");const ne="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";class fe{constructor(R,O,M){this.handler=R,this.hasOptimizerModel=O,this.hasEvalModel=M}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(R,O){const M=R.evalModel||"",U=R.optimizerModel||"",X=O||{},[le,Ce]=await(0,C.resolveBackendAndExecutionProviders)(X);if(le.createTrainingSessionHandler){const ve=await le.createTrainingSessionHandler(R.checkpointState,R.trainModel,M,U,Ce);return new fe(ve,!!R.optimizerModel,!!R.evalModel)}else throw new Error(ne)}typeNarrowingForRunStep(R,O,M,U,X){const le={};let Ce={};if(typeof M!="object"||M===null||M instanceof J.Tensor||Array.isArray(M))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let ve=!0;if(typeof U=="object"){if(U===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(U instanceof J.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(U)){if(U.length===0)throw new TypeError("'fetches' cannot be an empty array.");ve=!1;for(const j of U){if(typeof j!="string")throw new TypeError("'fetches' must be a string array or an object.");if(O.indexOf(j)===-1)throw new RangeError(`'fetches' contains invalid output name: ${j}.`);le[j]=null}if(typeof X=="object"&&X!==null)Ce=X;else if(typeof X<"u")throw new TypeError("'options' must be an object.")}else{let j=!1;const se=Object.getOwnPropertyNames(U);for(const xe of O)if(se.indexOf(xe)!==-1){const te=U[xe];(te===null||te instanceof J.Tensor)&&(j=!0,ve=!1,le[xe]=te)}if(j){if(typeof X=="object"&&X!==null)Ce=X;else if(typeof X<"u")throw new TypeError("'options' must be an object.")}else Ce=U}}else if(typeof U<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const j of R)if(typeof M[j]>"u")throw new Error(`input '${j}' is missing in 'feeds'.`);if(ve)for(const j of O)le[j]=null;return[le,Ce]}convertHandlerReturnTypeToMapOfTensors(R){const O={};for(const M in R)if(Object.hasOwnProperty.call(R,M)){const U=R[M];U instanceof J.Tensor?O[M]=U:O[M]=new J.Tensor(U.type,U.data,U.dims)}return O}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(R,O,M){const[U,X]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,R,O,M),le=await this.handler.runTrainStep(R,U,X);return this.convertHandlerReturnTypeToMapOfTensors(le)}async runOptimizerStep(R){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(R||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(R,O,M){if(this.hasEvalModel){const[U,X]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,R,O,M),le=await this.handler.runEvalStep(R,U,X);return this.convertHandlerReturnTypeToMapOfTensors(le)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(R=!0){return this.handler.getParametersSize(R)}async loadParametersBuffer(R,O=!0){const M=await this.getParametersSize(O);if(R.length!==4*M)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(R,O)}async getContiguousParameters(R=!0){return this.handler.getContiguousParameters(R)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(ae,L,T)=>{T.r(L),T.d(L,{TrainingSession:()=>J});var C=T("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js");const J=C.TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(ae,L,T)=>{T.r(L),T.d(L,{version:()=>C});const C="1.19.2"},"./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs":(ae,L,T)=>{T.r(L),T.d(L,{InferenceSession:()=>kt,TRACE:()=>nt,TRACE_FUNC_BEGIN:()=>Ze,TRACE_FUNC_END:()=>He,Tensor:()=>Y,TrainingSession:()=>ot,default:()=>Rm,env:()=>I,registerBackend:()=>Ce});/*!
 * ONNX Runtime Web v1.21.0-dev.20241024-d9ca84ef96
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var C=Object.defineProperty,J=Object.getOwnPropertyDescriptor,ne=Object.getOwnPropertyNames,fe=Object.prototype.hasOwnProperty,Te=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),R=(e,t)=>()=>(e&&(t=e(e=0)),t),O=(e,t)=>{for(var r in t)C(e,r,{get:t[r],enumerable:!0})},M=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of ne(t))!fe.call(e,i)&&i!==r&&C(e,i,{get:()=>t[i],enumerable:!(n=J(t,i))||n.enumerable});return e},U=e=>M(C({},"__esModule",{value:!0}),e),X,le,Ce,ve,j,se=R(()=>{X=new Map,le=[],Ce=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let n=X.get(e);if(n===void 0)X.set(e,{backend:t,priority:r});else{if(n.priority>r)return;if(n.priority===r&&n.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let i=le.indexOf(e);i!==-1&&le.splice(i,1);for(let s=0;s<le.length;s++)if(X.get(le[s]).priority<=r){le.splice(s,0,e);return}le.push(e)}return}throw new TypeError("not a valid backend")},ve=async e=>{let t=X.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(n){return r||(t.error=`${n}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},j=async e=>{let t=e.executionProviders||[],r=t.map(d=>typeof d=="string"?d:d.name),n=r.length===0?le:r,i,s=[],o=new Set;for(let d of n){let h=await ve(d);typeof h=="string"?s.push({name:d,err:h}):(i||(i=h),i===h&&o.add(d))}if(!i)throw new Error(`no available backend found. ERR: ${s.map(d=>`[${d.name}] ${d.err}`).join(", ")}`);for(let{name:d,err:h}of s)r.includes(d)&&console.warn(`removing requested execution provider "${d}" from session options because it is not available: ${h}`);let u=t.filter(d=>o.has(typeof d=="string"?d:d.name));return[i,new Proxy(e,{get:(d,h)=>h==="executionProviders"?u:Reflect.get(d,h)})]}}),xe=R(()=>{se()}),te,ee=R(()=>{te="1.20.0-dev.20241016-2b8fc5529b"}),G,B,q=R(()=>{ee(),G="warning",B={wasm:{},webgl:{},webgpu:{},versions:{common:te},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);G=e}},get logLevel(){return G}},Object.defineProperty(B,"logLevel",{enumerable:!0})}),I,be=R(()=>{q(),I=B}),$e,Ae,je=R(()=>{$e=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let n=r.getContext("2d");if(n!=null){let i,s;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],s=e.dims[3]):(i=e.dims[3],s=e.dims[2]);let o=t?.format!==void 0?t.format:"RGB",u=t?.norm,d,h;u===void 0||u.mean===void 0?d=[255,255,255,255]:typeof u.mean=="number"?d=[u.mean,u.mean,u.mean,u.mean]:(d=[u.mean[0],u.mean[1],u.mean[2],0],u.mean[3]!==void 0&&(d[3]=u.mean[3])),u===void 0||u.bias===void 0?h=[0,0,0,0]:typeof u.bias=="number"?h=[u.bias,u.bias,u.bias,u.bias]:(h=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(h[3]=u.bias[3]));let y=s*i,l=0,x=y,A=y*2,P=-1;o==="RGBA"?(l=0,x=y,A=y*2,P=y*3):o==="RGB"?(l=0,x=y,A=y*2):o==="RBG"&&(l=0,A=y,x=y*2);for(let S=0;S<s;S++)for(let Q=0;Q<i;Q++){let K=(e.data[l++]-h[0])*d[0],F=(e.data[x++]-h[1])*d[1],re=(e.data[A++]-h[2])*d[2],de=P===-1?255:(e.data[P++]-h[3])*d[3];n.fillStyle="rgba("+K+","+F+","+re+","+de+")",n.fillRect(Q,S,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Ae=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),n;if(r!=null){let i,s,o;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],s=e.dims[1],o=e.dims[3]):(i=e.dims[3],s=e.dims[2],o=e.dims[1]);let u=t!==void 0&&t.format!==void 0?t.format:"RGB",d=t?.norm,h,y;d===void 0||d.mean===void 0?h=[255,255,255,255]:typeof d.mean=="number"?h=[d.mean,d.mean,d.mean,d.mean]:(h=[d.mean[0],d.mean[1],d.mean[2],255],d.mean[3]!==void 0&&(h[3]=d.mean[3])),d===void 0||d.bias===void 0?y=[0,0,0,0]:typeof d.bias=="number"?y=[d.bias,d.bias,d.bias,d.bias]:(y=[d.bias[0],d.bias[1],d.bias[2],0],d.bias[3]!==void 0&&(y[3]=d.bias[3]));let l=s*i;if(t!==void 0&&(t.format!==void 0&&o===4&&t.format!=="RGBA"||o===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let x=4,A=0,P=1,S=2,Q=3,K=0,F=l,re=l*2,de=-1;u==="RGBA"?(K=0,F=l,re=l*2,de=l*3):u==="RGB"?(K=0,F=l,re=l*2):u==="RBG"&&(K=0,re=l,F=l*2),n=r.createImageData(i,s);for(let ge=0;ge<s*i;A+=x,P+=x,S+=x,Q+=x,ge++)n.data[A]=(e.data[K++]-y[0])*h[0],n.data[P]=(e.data[F++]-y[1])*h[1],n.data[S]=(e.data[re++]-y[2])*h[2],n.data[Q]=de===-1?255:(e.data[de++]-y[3])*h[3]}else throw new Error("Can not access image data");return n}}),De,ft,dt,gt,Ee,H,we=R(()=>{tt(),De=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:n}=t,i=t.norm??{mean:255,bias:0},s,o;typeof i.mean=="number"?s=[i.mean,i.mean,i.mean,i.mean]:s=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?o=[i.bias,i.bias,i.bias,i.bias]:o=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let u=t.format!==void 0?t.format:"RGBA",d=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",h=r*n,y=d==="RGBA"?new Float32Array(h*4):new Float32Array(h*3),l=4,x=0,A=1,P=2,S=3,Q=0,K=h,F=h*2,re=-1;u==="RGB"&&(l=3,x=0,A=1,P=2,S=-1),d==="RGBA"?re=h*3:d==="RBG"?(Q=0,F=h,K=h*2):d==="BGR"&&(F=0,K=h,Q=h*2);for(let de=0;de<h;de++,x+=l,P+=l,A+=l,S+=l)y[Q++]=(e[x]+o[0])/s[0],y[K++]=(e[A]+o[1])/s[1],y[F++]=(e[P]+o[2])/s[2],re!==-1&&S!==-1&&(y[re++]=(e[S]+o[3])/s[3]);return d==="RGBA"?new Et("float32",y,[1,4,r,n]):new Et("float32",y,[1,3,r,n])},ft=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,n=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,s=typeof e=="string",o,u=t??{},d=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},h=y=>typeof HTMLCanvasElement<"u"&&y instanceof HTMLCanvasElement||y instanceof OffscreenCanvas?y.getContext("2d"):null;if(r){let y=d();y.width=e.width,y.height=e.height;let l=h(y);if(l!=null){let x=e.height,A=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(x=t.resizedHeight,A=t.resizedWidth),t!==void 0){if(u=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");u.tensorFormat="RGBA",u.height=x,u.width=A}else u.tensorFormat="RGBA",u.height=x,u.width=A;l.drawImage(e,0,0),o=l.getImageData(0,0,A,x).data}else throw new Error("Can not access image data")}else if(n){let y,l;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(y=t.resizedHeight,l=t.resizedWidth):(y=e.height,l=e.width),t!==void 0&&(u=t),u.format="RGBA",u.height=y,u.width=l,t!==void 0){let x=d();x.width=l,x.height=y;let A=h(x);if(A!=null)A.putImageData(e,0,0),o=A.getImageData(0,0,l,y).data;else throw new Error("Can not access image data")}else o=e.data}else if(i){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let y=d();y.width=e.width,y.height=e.height;let l=h(y);if(l!=null){let x=e.height,A=e.width;return l.drawImage(e,0,0,A,x),o=l.getImageData(0,0,A,x).data,u.height=x,u.width=A,De(o,u)}else throw new Error("Can not access image data")}else{if(s)return new Promise((y,l)=>{let x=d(),A=h(x);if(!e||!A)return l();let P=new Image;P.crossOrigin="Anonymous",P.src=e,P.onload=()=>{x.width=P.width,x.height=P.height,A.drawImage(P,0,0,x.width,x.height);let S=A.getImageData(0,0,x.width,x.height);u.height=x.height,u.width=x.width,y(De(S.data,u))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return De(o,u);throw new Error("Input data provided is not supported - aborted tensor creation")},dt=(e,t)=>{let{width:r,height:n,download:i,dispose:s}=t,o=[1,n,r,4];return new Et({location:"texture",type:"float32",texture:e,dims:o,download:i,dispose:s})},gt=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:s}=t;return new Et({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:n,download:i,dispose:s})},Ee=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:s}=t;return new Et({location:"ml-tensor",type:r??"float32",mlTensor:e,dims:n,download:i,dispose:s})},H=(e,t,r)=>new Et({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})}),Pe,Qe,_t,ce,Ue=R(()=>{Pe=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Qe=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),_t=!1,ce=()=>{if(!_t){_t=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;e&&(Pe.set("int64",BigInt64Array),Qe.set(BigInt64Array,"int64")),t&&(Pe.set("uint64",BigUint64Array),Qe.set(BigUint64Array,"uint64")),r?(Pe.set("float16",Float16Array),Qe.set(Float16Array,"float16")):Pe.set("float16",Uint16Array)}}}),ct,Ve,Mt=R(()=>{tt(),ct=e=>{let t=1;for(let r=0;r<e.length;r++){let n=e[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);t*=n}return t},Ve=(e,t)=>{switch(e.location){case"cpu":return new Et(e.type,e.data,t);case"cpu-pinned":return new Et({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new Et({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new Et({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new Et({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),Et,tt=R(()=>{je(),we(),Ue(),Mt(),Et=class{constructor(e,t,r){ce();let n,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,n=e.type,i=e.dims,e.location){case"cpu-pinned":{let o=Pe.get(n);if(!o)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint64"&&n!=="int8"&&n!=="uint8"&&n!=="bool")throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,u;if(typeof e=="string")if(n=e,u=r,e==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");o=t}else{let d=Pe.get(e);if(d===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e==="float16"&&d===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${d.name} as data.`);e==="uint64"||e==="int64"?o=d.from(t,BigInt):o=d.from(t)}else if(t instanceof d)o=t;else if(t instanceof Uint8ClampedArray)if(e==="uint8")o=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${n} tensor's data must be type of ${d}`)}else if(u=t,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let d=typeof e[0];if(d==="string")n="string",o=e;else if(d==="boolean")n="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${d}.`)}else if(e instanceof Uint8ClampedArray)n="uint8",o=Uint8Array.from(e);else{let d=Qe.get(e.constructor);if(d===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);n=d,o=e}if(u===void 0)u=[o.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=o,this.dataLocation="cpu"}let s=ct(i);if(this.cpuData&&s!==this.cpuData.length&&!((n==="uint4"||n==="int4")&&Math.ceil(s/2)===this.cpuData.length))throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=i,this.size=s}static async fromImage(e,t){return ft(e,t)}static fromTexture(e,t){return dt(e,t)}static fromGpuBuffer(e,t){return gt(e,t)}static fromMLTensor(e,t){return Ee(e,t)}static fromPinnedBuffer(e,t,r){return H(e,t,r)}toDataURL(e){return $e(this,e)}toImageData(e){return Ae(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Ve(this,e)}}}),Y,ze=R(()=>{tt(),Y=Et}),nt,at,Ze,He,mt=R(()=>{q(),nt=(e,t)=>{(typeof B.trace>"u"?!B.wasm.trace:!B.trace)||console.timeStamp(`${e}::ORT::${t}`)},at=(e,t)=>{let r=new Error().stack?.split(/\r\n|\r|\n/g)||[],n=!1;for(let i=0;i<r.length;i++){if(n&&!r[i].includes("TRACE_FUNC")){let s=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(s+=`::${t}`),nt("CPU",s);return}r[i].includes("TRACE_FUNC")&&(n=!0)}},Ze=e=>{(typeof B.trace>"u"?!B.wasm.trace:!B.trace)||at("BEGIN",e)},He=e=>{(typeof B.trace>"u"?!B.wasm.trace:!B.trace)||at("END",e)}}),wt,Lt=R(()=>{se(),ze(),mt(),wt=class bm{constructor(t){this.handler=t}async run(t,r,n){Ze();let i={},s={};if(typeof t!="object"||t===null||t instanceof Y||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof Y)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let h of r){if(typeof h!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(h)===-1)throw new RangeError(`'fetches' contains invalid output name: ${h}.`);i[h]=null}if(typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let h=!1,y=Object.getOwnPropertyNames(r);for(let l of this.outputNames)if(y.indexOf(l)!==-1){let x=r[l];(x===null||x instanceof Y)&&(h=!0,o=!1,i[l]=x)}if(h){if(typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else s=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let h of this.inputNames)if(typeof t[h]>"u")throw new Error(`input '${h}' is missing in 'feeds'.`);if(o)for(let h of this.outputNames)i[h]=null;let u=await this.handler.run(t,i,s),d={};for(let h in u)if(Object.hasOwnProperty.call(u,h)){let y=u[h];y instanceof Y?d[h]=y:d[h]=new Y(y.type,y.data,y.dims)}return He(),d}async release(){return this.handler.dispose()}static async create(t,r,n,i){Ze();let s,o={};if(typeof t=="string"){if(s=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(s=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let y=t,l=0,x=t.byteLength;if(typeof r=="object"&&r!==null)o=r;else if(typeof r=="number"){if(l=r,!Number.isSafeInteger(l))throw new RangeError("'byteOffset' must be an integer.");if(l<0||l>=y.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${y.byteLength}).`);if(x=t.byteLength-l,typeof n=="number"){if(x=n,!Number.isSafeInteger(x))throw new RangeError("'byteLength' must be an integer.");if(x<=0||l+x>y.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${y.byteLength-l}].`);if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof n<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");s=new Uint8Array(y,l,x)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[u,d]=await j(o),h=await u.createInferenceSessionHandler(s,d);return He(),new bm(h)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),kt,$=R(()=>{Lt(),kt=wt}),Z=R(()=>{}),z=R(()=>{}),ue=R(()=>{}),Me=R(()=>{}),it,et,At=R(()=>{se(),ze(),it="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",et=class Mm{constructor(t,r,n){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,r){let n=t.evalModel||"",i=t.optimizerModel||"",s=r||{},[o,u]=await j(s);if(o.createTrainingSessionHandler){let d=await o.createTrainingSessionHandler(t.checkpointState,t.trainModel,n,i,u);return new Mm(d,!!t.optimizerModel,!!t.evalModel)}else throw new Error(it)}typeNarrowingForRunStep(t,r,n,i,s){let o={},u={};if(typeof n!="object"||n===null||n instanceof Y||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let d=!0;if(typeof i=="object"){if(i===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof Y)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(i.length===0)throw new TypeError("'fetches' cannot be an empty array.");d=!1;for(let h of i){if(typeof h!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(h)===-1)throw new RangeError(`'fetches' contains invalid output name: ${h}.`);o[h]=null}if(typeof s=="object"&&s!==null)u=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let h=!1,y=Object.getOwnPropertyNames(i);for(let l of r)if(y.indexOf(l)!==-1){let x=i[l];(x===null||x instanceof Y)&&(h=!0,d=!1,o[l]=x)}if(h){if(typeof s=="object"&&s!==null)u=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else u=i}}else if(typeof i<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let h of t)if(typeof n[h]>"u")throw new Error(`input '${h}' is missing in 'feeds'.`);if(d)for(let h of r)o[h]=null;return[o,u]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let n in t)if(Object.hasOwnProperty.call(t,n)){let i=t[n];i instanceof Y?r[n]=i:r[n]=new Y(i.type,i.data,i.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,n){let[i,s]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,n),o=await this.handler.runTrainStep(t,i,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,n){if(this.hasEvalModel){let[i,s]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,n),o=await this.handler.runEvalStep(t,i,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let n=await this.getParametersSize(r);if(t.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}}),ot,yt=R(()=>{At(),ot=et}),E={};O(E,{InferenceSession:()=>kt,TRACE:()=>nt,TRACE_FUNC_BEGIN:()=>Ze,TRACE_FUNC_END:()=>He,Tensor:()=>Y,TrainingSession:()=>ot,env:()=>I,registerBackend:()=>Ce});var c=R(()=>{xe(),be(),$(),ze(),Z(),z(),mt(),ue(),Me(),yt()}),m=R(()=>{}),V={};O(V,{default:()=>Ge});var me,ke,Ge,sr=R(()=>{Eh(),Dr(),Nt(),me="ort-wasm-proxy-worker",ke=globalThis.self?.name===me,ke&&(self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":jr(r.wasm).then(()=>{ep(r).then(()=>{postMessage({type:t})},n=>{postMessage({type:t,err:n})})},n=>{postMessage({type:t,err:n})});break;case"init-ep":{let{epName:n,env:i}=r;tp(i,n).then(()=>{postMessage({type:t})},s=>{postMessage({type:t,err:s})});break}case"copy-from":{let{buffer:n}=r,i=Tc(n);postMessage({type:t,out:i});break}case"create":{let{model:n,options:i}=r;rp(n,i).then(s=>{postMessage({type:t,out:s})},s=>{postMessage({type:t,err:s})});break}case"release":np(r),postMessage({type:t});break;case"run":{let{sessionId:n,inputIndices:i,inputs:s,outputIndices:o,options:u}=r;sp(n,i,s,o,new Array(o.length).fill(null),u).then(d=>{d.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:d},ap([...s,...d]))},d=>{postMessage({type:t,err:d})});break}case"end-profiling":op(r),postMessage({type:t});break;default:}}catch(n){postMessage({type:t,err:n})}}),Ge=ke?null:e=>new Worker(e??Ke,{type:"module",name:me})}),Je={};O(Je,{default:()=>Se});var N,ye,Se,Be=R(()=>{ye=(N=import.meta.url,async function(e={}){function t(){return or.buffer!=xr.buffer&&vn(),xr}function r(){return or.buffer!=xr.buffer&&vn(),Xt}function n(){return or.buffer!=xr.buffer&&vn(),yr}function i(){return or.buffer!=xr.buffer&&vn(),rt}function s(){return or.buffer!=xr.buffer&&vn(),St}function o(){return or.buffer!=xr.buffer&&vn(),mr}function u(){return or.buffer!=xr.buffer&&vn(),Wr}function d(){return or.buffer!=xr.buffer&&vn(),zn}var h,y,l=Object.assign({},e),x=new Promise((a,f)=>{h=a,y=f}),A=typeof window=="object",P=typeof importScripts=="function",S=P&&self.name=="em-pthread";l.mountExternalData=(a,f)=>{a.startsWith("./")&&(a=a.substring(2)),(l.Eb||(l.Eb=new Map)).set(a,f)},l.unmountExternalData=()=>{delete l.Eb};var Q=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let K=()=>{let a=(b,k,D)=>(...he)=>{let Ye=ui,ht=k?.();he=b(...he);let Rt=k?.();return ht!==Rt&&(b=Rt,D(ht),k=D=null),ui!=Ye?new Promise((Gt,nr)=>{$p={resolve:Gt,reject:nr}}):he},f=b=>async(...k)=>{try{if(l.Fb)throw Error("Session already started");let D=l.Fb={fc:k[0],errors:[]},he=await b(...k);if(l.Fb!==D)throw Error("Session mismatch");l.Gb?.flush();let Ye=D.errors;if(0<Ye.length){let ht=await Promise.all(Ye);if(ht=ht.filter(Rt=>Rt),0<ht.length)throw Error(ht.join(`
`))}return he}finally{l.Fb=null}};l._OrtCreateSession=a(l._OrtCreateSession,()=>l._OrtCreateSession,b=>l._OrtCreateSession=b),l._OrtRun=f(a(l._OrtRun,()=>l._OrtRun,b=>l._OrtRun=b)),l._OrtRunWithBinding=f(a(l._OrtRunWithBinding,()=>l._OrtRunWithBinding,b=>l._OrtRunWithBinding=b)),l._OrtBindInput=a(l._OrtBindInput,()=>l._OrtBindInput,b=>l._OrtBindInput=b),K=void 0};l.jsepInit=(a,f)=>{if(K?.(),a==="webgpu"){[l.Gb,l.Ub,l.Yb,l.Nb,l.Xb,l.jb,l.Zb,l.bc,l.Vb,l.Wb,l.$b]=f;let b=l.Gb;l.jsepRegisterBuffer=(k,D,he,Ye)=>b.registerBuffer(k,D,he,Ye),l.jsepGetBuffer=k=>b.getBuffer(k),l.jsepCreateDownloader=(k,D,he)=>b.createDownloader(k,D,he),l.jsepOnCreateSession=k=>{b.onCreateSession(k)},l.jsepOnReleaseSession=k=>{b.onReleaseSession(k)},l.jsepOnRunStart=k=>b.onRunStart(k),l.cc=(k,D)=>{b.upload(k,D)}}else if(a==="webnn"){[l.Gb,l.ac,l.Ob,l.jsepEnsureTensor,l.dc,l.jsepDownloadTensor]=f,l.jsepReleaseTensorId=l.Ob;let b=l.Gb;l.jsepOnRunStart=k=>b.onRunStart(k),l.jsepRegisterMLContext=(k,D)=>{b.registerMLContext(k,D)},l.jsepOnReleaseSession=k=>{b.onReleaseSession(k)},l.jsepCreateMLTensorDownloader=(k,D)=>b.createMLTensorDownloader(k,D),l.jsepRegisterMLTensor=(k,D,he)=>b.registerMLTensor(k,D,he),l.qc=(k,D,he,Ye,ht)=>b.registerMLConstant(k,D,he,Ye,ht,l.Eb)}};var F,re,de=Object.assign({},l),ge="./this.program",qe=(a,f)=>{throw f},Fe="";(A||P)&&(P?Fe=self.location.href:typeof document<"u"&&document.currentScript&&(Fe=document.currentScript.src),N&&(Fe=N),Fe=Fe.startsWith("blob:")?"":Fe.substr(0,Fe.replace(/[?#].*/,"").lastIndexOf("/")+1),P&&(re=a=>{var f=new XMLHttpRequest;return f.open("GET",a,!1),f.responseType="arraybuffer",f.send(null),new Uint8Array(f.response)}),F=(a,f,b)=>{var k=new XMLHttpRequest;k.open("GET",a,!0),k.responseType="arraybuffer",k.onload=()=>{k.status==200||k.status==0&&k.response?f(k.response):b()},k.onerror=b,k.send(null)});var bt,Vt=console.log.bind(console),jt=console.error.bind(console),lr=Vt,Zt=jt;if(Object.assign(l,de),de=null,S){let a=function(f){try{var b=f.data,k=b.cmd;if(k==="load"){let D=[];self.onmessage=he=>D.push(he),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let he of D)a(he);self.onmessage=a};for(let he of b.handlers)l[he]&&!l[he].proxy||(l[he]=(...Ye)=>{postMessage({Mb:"callHandler",oc:he,args:Ye})},he=="print"&&(lr=l[he]),he=="printErr"&&(Zt=l[he]));or=b.wasmMemory,vn(),ur(b.wasmModule)}else if(k==="run"){Ap(b.pthread_ptr,0,0,1,0,0),Tp(b.pthread_ptr),Um(),Xh(),Sr||(Hf(),Sr=!0);try{Vm(b.start_routine,b.arg)}catch(D){if(D!="unwind")throw D}}else k==="cancel"?ia()&&Dc(-1):b.target!=="setimmediate"&&(k==="checkMailbox"?Sr&&Sc():k&&(Zt(`worker: received unknown command ${k}`),Zt(b)))}catch(D){throw Kf(),D}};var ur,Sr=!1;Zt=function(...f){f=f.join(" "),console.error(f)},self.alert=function(...f){postMessage({Mb:"alert",text:f.join(" "),rc:ia()})},l.instantiateWasm=(f,b)=>new Promise(k=>{ur=D=>{D=new WebAssembly.Instance(D,Wh()),b(D),k()}}),self.onunhandledrejection=f=>{throw f.reason||f},self.onmessage=a}l.wasmBinary&&(bt=l.wasmBinary);var or,Qt,Tr,xr,Xt,yr,rt,St,mr,Wr,qr,Gn,zn,Cn=!1;function vn(){var a=or.buffer;l.HEAP8=xr=new Int8Array(a),l.HEAP16=yr=new Int16Array(a),l.HEAPU8=Xt=new Uint8Array(a),l.HEAPU16=rt=new Uint16Array(a),l.HEAP32=St=new Int32Array(a),l.HEAPU32=mr=new Uint32Array(a),l.HEAPF32=Wr=new Float32Array(a),l.HEAPF64=zn=new Float64Array(a),l.HEAP64=qr=new BigInt64Array(a),l.HEAPU64=Gn=new BigUint64Array(a)}if(!S){if(!((or=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof Q))throw Zt("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");vn()}var mn=[],_n=[],Yi=[],Zi=0,Ms=null;function Rh(){if(--Zi==0&&Ms){var a=Ms;Ms=null,a()}}function ta(a){throw Zt(a="Aborted("+a+")"),Cn=!0,Tr=1,a=new WebAssembly.RuntimeError(a+". Build with -sASSERTIONS for more info."),y(a),a}var pp,Nh=a=>a.startsWith("data:application/octet-stream;base64,"),jh=a=>a.startsWith("file://");function Uh(a){if(a==pp&&bt)return new Uint8Array(bt);if(re)return re(a);throw"both async and sync fetching of the wasm failed"}function Vh(a,f,b){return function(k){if(!bt&&(A||P)){if(typeof fetch=="function"&&!jh(k))return fetch(k,{credentials:"same-origin"}).then(D=>{if(!D.ok)throw`failed to load wasm binary file at '${k}'`;return D.arrayBuffer()}).catch(()=>Uh(k));if(F)return new Promise((D,he)=>{F(k,Ye=>D(new Uint8Array(Ye)),he)})}return Promise.resolve().then(()=>Uh(k))}(a).then(k=>WebAssembly.instantiate(k,f)).then(b,k=>{Zt(`failed to asynchronously prepare wasm: ${k}`),ta(k)})}function Wh(){return{a:{O:jm,Aa:Nm,b:Gm,aa:Jh,B:rf,qa:nf,Y:of,_:af,ra:lf,oa:uf,ha:df,na:cf,L:pf,Z:hf,W:ff,pa:mf,X:_f,wa:qm,F:Hm,Q:Km,P:Qm,E:Zm,u:Jm,q:e_,G:t_,A:l_,R:u_,ua:d_,ka:c_,U:p_,ba:h_,H:f_,ja:Tp,ta:m_,t:__,x:y_,n:b_,l:v_,c:vp,o:x_,j:C_,w:$_,p:S_,g:k_,s:P_,m:A_,e:I_,k:F_,i:O_,h:B_,d:z_,ea:D_,fa:L_,ga:R_,ca:Pf,da:Af,T:N_,f:j_,D:U_,I:V_,M:W_,y:G_,sa:q_,V:H_,v:Ff,z:K_,N:X_,S:Q_,za:Y_,ya:Z_,la:zf,ma:Df,$:gp,C:Lf,K:Rf,ia:Nf,J:jf,a:or,xa:_p,va:Wf,r:tg}}}var hp={867364:(a,f,b,k,D)=>{if(l===void 0||!l.Eb)return 1;if((a=wn(a>>>0)).startsWith("./")&&(a=a.substring(2)),!(a=l.Eb.get(a)))return 2;if(k>>>=0,(f>>>=0)+(b>>>=0)>a.byteLength)return 3;try{let he=a.subarray(f,f+b);switch(D){case 0:r().set(he,k>>>0);break;case 1:l.cc(k,he);break;default:return 4}return 0}catch{return 4}},868047:(a,f,b)=>{l.dc(a,r().subarray(f>>>0,f+b>>>0))},868110:()=>l.ac(),868151:a=>{l.Ob(a)},868187:()=>{l.Vb()},868218:()=>{l.Wb()},868247:()=>{l.$b()},868272:a=>l.Ub(a),868305:a=>l.Yb(a),868337:(a,f,b)=>{l.Nb(a,f,b,!0)},868376:(a,f,b)=>{l.Nb(a,f,b)},868409:()=>typeof wasmOffsetConverter<"u",868466:a=>{l.jb("Abs",a,void 0)},868517:a=>{l.jb("Neg",a,void 0)},868568:a=>{l.jb("Floor",a,void 0)},868621:a=>{l.jb("Ceil",a,void 0)},868673:a=>{l.jb("Reciprocal",a,void 0)},868731:a=>{l.jb("Sqrt",a,void 0)},868783:a=>{l.jb("Exp",a,void 0)},868834:a=>{l.jb("Erf",a,void 0)},868885:a=>{l.jb("Sigmoid",a,void 0)},868940:(a,f,b)=>{l.jb("HardSigmoid",a,{alpha:f,beta:b})},869019:a=>{l.jb("Log",a,void 0)},869070:a=>{l.jb("Sin",a,void 0)},869121:a=>{l.jb("Cos",a,void 0)},869172:a=>{l.jb("Tan",a,void 0)},869223:a=>{l.jb("Asin",a,void 0)},869275:a=>{l.jb("Acos",a,void 0)},869327:a=>{l.jb("Atan",a,void 0)},869379:a=>{l.jb("Sinh",a,void 0)},869431:a=>{l.jb("Cosh",a,void 0)},869483:a=>{l.jb("Asinh",a,void 0)},869536:a=>{l.jb("Acosh",a,void 0)},869589:a=>{l.jb("Atanh",a,void 0)},869642:a=>{l.jb("Tanh",a,void 0)},869694:a=>{l.jb("Not",a,void 0)},869745:(a,f,b)=>{l.jb("Clip",a,{min:f,max:b})},869814:a=>{l.jb("Clip",a,void 0)},869866:(a,f)=>{l.jb("Elu",a,{alpha:f})},869924:a=>{l.jb("Gelu",a,void 0)},869976:a=>{l.jb("Relu",a,void 0)},870028:(a,f)=>{l.jb("LeakyRelu",a,{alpha:f})},870092:(a,f)=>{l.jb("ThresholdedRelu",a,{alpha:f})},870162:(a,f)=>{l.jb("Cast",a,{to:f})},870220:a=>{l.jb("Add",a,void 0)},870271:a=>{l.jb("Sub",a,void 0)},870322:a=>{l.jb("Mul",a,void 0)},870373:a=>{l.jb("Div",a,void 0)},870424:a=>{l.jb("Pow",a,void 0)},870475:a=>{l.jb("Equal",a,void 0)},870528:a=>{l.jb("Greater",a,void 0)},870583:a=>{l.jb("GreaterOrEqual",a,void 0)},870645:a=>{l.jb("Less",a,void 0)},870697:a=>{l.jb("LessOrEqual",a,void 0)},870756:(a,f,b,k,D)=>{l.jb("ReduceMean",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:k?Array.from(s().subarray(k>>>0,D>>>0)):[]})},870915:(a,f,b,k,D)=>{l.jb("ReduceMax",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:k?Array.from(s().subarray(k>>>0,D>>>0)):[]})},871073:(a,f,b,k,D)=>{l.jb("ReduceMin",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:k?Array.from(s().subarray(k>>>0,D>>>0)):[]})},871231:(a,f,b,k,D)=>{l.jb("ReduceProd",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:k?Array.from(s().subarray(k>>>0,D>>>0)):[]})},871390:(a,f,b,k,D)=>{l.jb("ReduceSum",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:k?Array.from(s().subarray(k>>>0,D>>>0)):[]})},871548:(a,f,b,k,D)=>{l.jb("ReduceL1",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:k?Array.from(s().subarray(k>>>0,D>>>0)):[]})},871705:(a,f,b,k,D)=>{l.jb("ReduceL2",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:k?Array.from(s().subarray(k>>>0,D>>>0)):[]})},871862:(a,f,b,k,D)=>{l.jb("ReduceLogSum",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:k?Array.from(s().subarray(k>>>0,D>>>0)):[]})},872023:(a,f,b,k,D)=>{l.jb("ReduceSumSquare",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:k?Array.from(s().subarray(k>>>0,D>>>0)):[]})},872187:(a,f,b,k,D)=>{l.jb("ReduceLogSumExp",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:k?Array.from(s().subarray(k>>>0,D>>>0)):[]})},872351:a=>{l.jb("Where",a,void 0)},872404:(a,f,b)=>{l.jb("Transpose",a,{perm:f?Array.from(s().subarray(f>>>0,b>>>0)):[]})},872512:(a,f,b,k)=>{l.jb("DepthToSpace",a,{blocksize:f,mode:wn(b),format:k?"NHWC":"NCHW"})},872645:(a,f,b,k)=>{l.jb("DepthToSpace",a,{blocksize:f,mode:wn(b),format:k?"NHWC":"NCHW"})},872778:(a,f,b,k,D,he,Ye,ht,Rt,Gt,nr,Fr,Rr,We,Pr)=>{l.jb("ConvTranspose",a,{format:Rt?"NHWC":"NCHW",autoPad:f,dilations:[b],group:k,kernelShape:[D],pads:[he,Ye],strides:[ht],wIsConst:()=>!!t()[Gt>>>0],outputPadding:nr?Array.from(s().subarray(nr>>>0,Fr>>>0)):[],outputShape:Rr?Array.from(s().subarray(Rr>>>0,We>>>0)):[],activation:wn(Pr)})},873179:(a,f,b,k,D,he,Ye,ht,Rt,Gt,nr,Fr,Rr,We)=>{l.jb("ConvTranspose",a,{format:ht?"NHWC":"NCHW",autoPad:f,dilations:Array.from(s().subarray(b>>>0,2+(b>>>0)>>>0)),group:k,kernelShape:Array.from(s().subarray(D>>>0,2+(D>>>0)>>>0)),pads:Array.from(s().subarray(he>>>0,4+(he>>>0)>>>0)),strides:Array.from(s().subarray(Ye>>>0,2+(Ye>>>0)>>>0)),wIsConst:()=>!!t()[Rt>>>0],outputPadding:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],outputShape:Fr?Array.from(s().subarray(Fr>>>0,Rr>>>0)):[],activation:wn(We)})},873744:(a,f,b,k,D,he,Ye,ht,Rt,Gt,nr,Fr,Rr,We,Pr)=>{l.jb("ConvTranspose",a,{format:Rt?"NHWC":"NCHW",autoPad:f,dilations:[b],group:k,kernelShape:[D],pads:[he,Ye],strides:[ht],wIsConst:()=>!!t()[Gt>>>0],outputPadding:nr?Array.from(s().subarray(nr>>>0,Fr>>>0)):[],outputShape:Rr?Array.from(s().subarray(Rr>>>0,We>>>0)):[],activation:wn(Pr)})},874145:(a,f,b,k,D,he,Ye,ht,Rt,Gt,nr,Fr,Rr,We)=>{l.jb("ConvTranspose",a,{format:ht?"NHWC":"NCHW",autoPad:f,dilations:Array.from(s().subarray(b>>>0,2+(b>>>0)>>>0)),group:k,kernelShape:Array.from(s().subarray(D>>>0,2+(D>>>0)>>>0)),pads:Array.from(s().subarray(he>>>0,4+(he>>>0)>>>0)),strides:Array.from(s().subarray(Ye>>>0,2+(Ye>>>0)>>>0)),wIsConst:()=>!!t()[Rt>>>0],outputPadding:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],outputShape:Fr?Array.from(s().subarray(Fr>>>0,Rr>>>0)):[],activation:wn(We)})},874710:(a,f)=>{l.jb("GlobalAveragePool",a,{format:f?"NHWC":"NCHW"})},874801:(a,f,b,k,D,he,Ye,ht,Rt,Gt,nr,Fr,Rr,We)=>{l.jb("AveragePool",a,{format:We?"NHWC":"NCHW",auto_pad:f,ceil_mode:b,count_include_pad:k,storage_order:D,dilations:he?Array.from(s().subarray(he>>>0,Ye>>>0)):[],kernel_shape:ht?Array.from(s().subarray(ht>>>0,Rt>>>0)):[],pads:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],strides:Fr?Array.from(s().subarray(Fr>>>0,Rr>>>0)):[]})},875216:(a,f)=>{l.jb("GlobalAveragePool",a,{format:f?"NHWC":"NCHW"})},875307:(a,f,b,k,D,he,Ye,ht,Rt,Gt,nr,Fr,Rr,We)=>{l.jb("AveragePool",a,{format:We?"NHWC":"NCHW",auto_pad:f,ceil_mode:b,count_include_pad:k,storage_order:D,dilations:he?Array.from(s().subarray(he>>>0,Ye>>>0)):[],kernel_shape:ht?Array.from(s().subarray(ht>>>0,Rt>>>0)):[],pads:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],strides:Fr?Array.from(s().subarray(Fr>>>0,Rr>>>0)):[]})},875722:(a,f)=>{l.jb("GlobalMaxPool",a,{format:f?"NHWC":"NCHW"})},875809:(a,f,b,k,D,he,Ye,ht,Rt,Gt,nr,Fr,Rr,We)=>{l.jb("MaxPool",a,{format:We?"NHWC":"NCHW",auto_pad:f,ceil_mode:b,count_include_pad:k,storage_order:D,dilations:he?Array.from(s().subarray(he>>>0,Ye>>>0)):[],kernel_shape:ht?Array.from(s().subarray(ht>>>0,Rt>>>0)):[],pads:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],strides:Fr?Array.from(s().subarray(Fr>>>0,Rr>>>0)):[]})},876220:(a,f)=>{l.jb("GlobalMaxPool",a,{format:f?"NHWC":"NCHW"})},876307:(a,f,b,k,D,he,Ye,ht,Rt,Gt,nr,Fr,Rr,We)=>{l.jb("MaxPool",a,{format:We?"NHWC":"NCHW",auto_pad:f,ceil_mode:b,count_include_pad:k,storage_order:D,dilations:he?Array.from(s().subarray(he>>>0,Ye>>>0)):[],kernel_shape:ht?Array.from(s().subarray(ht>>>0,Rt>>>0)):[],pads:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],strides:Fr?Array.from(s().subarray(Fr>>>0,Rr>>>0)):[]})},876718:(a,f,b,k,D)=>{l.jb("Gemm",a,{alpha:f,beta:b,transA:k,transB:D})},876822:a=>{l.jb("MatMul",a,void 0)},876876:(a,f,b,k)=>{l.jb("ArgMax",a,{keepDims:!!f,selectLastIndex:!!b,axis:k})},876984:(a,f,b,k)=>{l.jb("ArgMin",a,{keepDims:!!f,selectLastIndex:!!b,axis:k})},877092:(a,f)=>{l.jb("Softmax",a,{axis:f})},877155:(a,f)=>{l.jb("Concat",a,{axis:f})},877215:(a,f,b,k,D)=>{l.jb("Split",a,{axis:f,numOutputs:b,splitSizes:k?Array.from(s().subarray(k>>>0,D>>>0)):[]})},877355:a=>{l.jb("Expand",a,void 0)},877409:(a,f)=>{l.jb("Gather",a,{axis:Number(f)})},877480:(a,f)=>{l.jb("GatherElements",a,{axis:Number(f)})},877559:(a,f,b,k,D,he,Ye,ht,Rt,Gt,nr)=>{l.jb("Resize",a,{antialias:f,axes:b?Array.from(s().subarray(b>>>0,k>>>0)):[],coordinateTransformMode:wn(D),cubicCoeffA:he,excludeOutside:Ye,extrapolationValue:ht,keepAspectRatioPolicy:wn(Rt),mode:wn(Gt),nearestMode:wn(nr)})},877905:(a,f,b,k,D,he,Ye)=>{l.jb("Slice",a,{starts:f?Array.from(s().subarray(f>>>0,b>>>0)):[],ends:k?Array.from(s().subarray(k>>>0,D>>>0)):[],axes:he?Array.from(s().subarray(he>>>0,Ye>>>0)):[]})},878121:a=>{l.jb("Tile",a,void 0)},878173:(a,f,b)=>{l.jb("InstanceNormalization",a,{epsilon:f,format:b?"NHWC":"NCHW"})},878287:(a,f,b)=>{l.jb("InstanceNormalization",a,{epsilon:f,format:b?"NHWC":"NCHW"})},878401:a=>{l.jb("Range",a,void 0)},878454:(a,f)=>{l.jb("Einsum",a,{equation:wn(f)})},878535:(a,f,b,k,D)=>{l.jb("Pad",a,{mode:f,value:b,pads:k?Array.from(s().subarray(k>>>0,D>>>0)):[]})},878662:(a,f,b,k,D,he)=>{l.jb("BatchNormalization",a,{epsilon:f,momentum:b,spatial:!!D,trainingMode:!!k,format:he?"NHWC":"NCHW"})},878831:(a,f,b,k,D,he)=>{l.jb("BatchNormalization",a,{epsilon:f,momentum:b,spatial:!!D,trainingMode:!!k,format:he?"NHWC":"NCHW"})},879e3:(a,f,b)=>{l.jb("CumSum",a,{exclusive:Number(f),reverse:Number(b)})},879097:(a,f,b)=>{l.jb("DequantizeLinear",a,{axis:f,blockSize:b})},879187:(a,f,b,k,D,he,Ye,ht,Rt)=>{l.jb("Attention",a,{numHeads:f,isUnidirectional:b,maskFilterValue:k,scale:D,doRotary:he,qkvHiddenSizes:Ye?Array.from(s().subarray(Number(ht)>>>0,Number(ht)+Ye>>>0)):[],pastPresentShareBuffer:!!Rt})},879459:a=>{l.jb("BiasAdd",a,void 0)},879514:a=>{l.jb("BiasSplitGelu",a,void 0)},879575:a=>{l.jb("FastGelu",a,void 0)},879631:(a,f,b,k,D,he,Ye,ht,Rt,Gt,nr,Fr,Rr,We,Pr,tn)=>{l.jb("Conv",a,{format:Fr?"NHWC":"NCHW",auto_pad:f,dilations:b?Array.from(s().subarray(b>>>0,k>>>0)):[],group:D,kernel_shape:he?Array.from(s().subarray(he>>>0,Ye>>>0)):[],pads:ht?Array.from(s().subarray(ht>>>0,Rt>>>0)):[],strides:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],w_is_const:()=>!!t()[Rr>>>0],activation:wn(We),activation_params:Pr?Array.from(u().subarray(Pr>>>0,tn>>>0)):[]})},880127:a=>{l.jb("Gelu",a,void 0)},880179:(a,f,b,k,D,he,Ye,ht,Rt)=>{l.jb("GroupQueryAttention",a,{numHeads:f,kvNumHeads:b,scale:k,softcap:D,doRotary:he,rotaryInterleaved:Ye,smoothSoftmax:ht,localWindowSize:Rt})},880396:(a,f,b,k)=>{l.jb("LayerNormalization",a,{axis:f,epsilon:b,simplified:!!k})},880507:(a,f,b,k)=>{l.jb("LayerNormalization",a,{axis:f,epsilon:b,simplified:!!k})},880618:(a,f,b,k,D,he)=>{l.jb("MatMulNBits",a,{k:f,n:b,accuracyLevel:k,bits:D,blockSize:he})},880745:(a,f,b,k,D,he)=>{l.jb("MultiHeadAttention",a,{numHeads:f,isUnidirectional:b,maskFilterValue:k,scale:D,doRotary:he})},880904:(a,f)=>{l.jb("QuickGelu",a,{alpha:f})},880968:(a,f,b,k,D)=>{l.jb("RotaryEmbedding",a,{interleaved:!!f,numHeads:b,rotaryEmbeddingDim:k,scale:D})},881107:(a,f,b)=>{l.jb("SkipLayerNormalization",a,{epsilon:f,simplified:!!b})},881209:(a,f,b)=>{l.jb("SkipLayerNormalization",a,{epsilon:f,simplified:!!b})},881311:(a,f,b,k)=>{l.jb("GatherBlockQuantized",a,{gatherAxis:f,quantizeAxis:b,blockSize:k})},881432:a=>{l.Zb(a)},881466:(a,f)=>l.bc(a,f,l.Fb.fc,l.Fb.errors)};function Nm(a,f,b){return Ef(async()=>{await l.Xb(a,f,b)})}function jm(){return typeof wasmOffsetConverter<"u"}function fp(a){this.name="ExitStatus",this.message=`Program terminated with exit(${a})`,this.status=a}var mp=a=>{a.terminate(),a.onmessage=()=>{}},Gh=a=>{Ji.length==0&&(Yh(),Qh(Ji[0]));var f=Ji.pop();if(!f)return 6;xs.push(f),ai[a.Ab]=f,f.Ab=a.Ab;var b={cmd:"run",start_routine:a.hc,arg:a.Qb,pthread_ptr:a.Ab};return f.postMessage(b,a.mc),0},vs=0,Yr=(a,f,...b)=>{for(var k=2*b.length,D=Op(),he=Fp(8*k),Ye=he>>>3,ht=0;ht<b.length;ht++){var Rt=b[ht];typeof Rt=="bigint"?(qr[Ye+2*ht]=1n,qr[Ye+2*ht+1]=Rt):(qr[Ye+2*ht]=0n,d()[Ye+2*ht+1>>>0]=Rt)}return a=Xf(a,0,k,he,f),Lc(D),a};function _p(a){if(S)return Yr(0,1,a);if(Tr=a,!(0<vs)){for(var f of xs)mp(f);for(f of Ji)mp(f);Ji=[],xs=[],ai=[],Cn=!0}qe(a,new fp(a))}function qh(a){if(S)return Yr(1,0,a);gp(a)}var gp=a=>{if(Tr=a,S)throw qh(a),"unwind";_p(a)},Ji=[],xs=[],Hh=[],ai={},Kh=a=>{var f=a.Ab;delete ai[f],Ji.push(a),xs.splice(xs.indexOf(a),1),a.Ab=0,Ip(f)};function Xh(){Hh.forEach(a=>a())}var Qh=a=>new Promise(f=>{a.onmessage=D=>{var he=(D=D.data).cmd;if(D.targetThread&&D.targetThread!=ia()){var Ye=ai[D.targetThread];Ye?Ye.postMessage(D,D.transferList):Zt(`Internal error! Worker sent a message "${he}" to target pthread ${D.targetThread}, but that thread no longer exists!`)}else he==="checkMailbox"?Sc():he==="spawnThread"?Gh(D):he==="cleanupThread"?Kh(ai[D.thread]):he==="killThread"?(D=D.thread,he=ai[D],delete ai[D],mp(he),Ip(D),xs.splice(xs.indexOf(he),1),he.Ab=0):he==="cancelThread"?ai[D.thread].postMessage({cmd:"cancel"}):he==="loaded"?(a.loaded=!0,f(a)):he==="alert"?alert(`Thread ${D.threadId}: ${D.text}`):D.target==="setimmediate"?a.postMessage(D):he==="callHandler"?l[D.handler](...D.args):he&&Zt(`worker sent an unknown command ${he}`)},a.onerror=D=>{throw Zt(`worker sent an error! ${D.filename}:${D.lineno}: ${D.message}`),D};var b,k=[];for(b of[])l.hasOwnProperty(b)&&k.push(b);a.postMessage({cmd:"load",handlers:k,wasmMemory:or,wasmModule:Qt})});function Yh(){var a=new Worker(new URL(import.meta.url),{type:"module",workerData:"em-pthread",name:"em-pthread"});Ji.push(a)}var $c=a=>{for(;0<a.length;)a.shift()(l)},Um=()=>{var a=ia(),f=o()[a+52>>>2>>>0];a=o()[a+56>>>2>>>0],Yf(f,f-a),Lc(f)},Vm=(a,f)=>{vs=0,a=Zf(a,f),0<vs?Tr=a:Dc(a)};class Wm{constructor(f){this.Jb=f-24}}function Gm(a,f,b){var k=new Wm(a>>>=0);throw f>>>=0,b>>>=0,o()[k.Jb+16>>>2>>>0]=0,o()[k.Jb+4>>>2>>>0]=f,o()[k.Jb+8>>>2>>>0]=b,a}function Zh(a,f,b,k){return S?Yr(2,1,a,f,b,k):Jh(a,f,b,k)}function Jh(a,f,b,k){if(a>>>=0,f>>>=0,b>>>=0,k>>>=0,Q===void 0)return Zt("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var D=[];return S&&D.length===0?Zh(a,f,b,k):(a={hc:b,Ab:a,Qb:k,mc:D},S?(a.Mb="spawnThread",postMessage(a,D),0):Gh(a))}var ef=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,tf=(a,f,b)=>{var k=(f>>>=0)+b;for(b=f;a[b]&&!(b>=k);)++b;if(16<b-f&&a.buffer&&ef)return ef.decode(a.buffer instanceof Q?a.slice(f,b):a.subarray(f,b));for(k="";f<b;){var D=a[f++];if(128&D){var he=63&a[f++];if((224&D)==192)k+=String.fromCharCode((31&D)<<6|he);else{var Ye=63&a[f++];65536>(D=(240&D)==224?(15&D)<<12|he<<6|Ye:(7&D)<<18|he<<12|Ye<<6|63&a[f++])?k+=String.fromCharCode(D):(D-=65536,k+=String.fromCharCode(55296|D>>10,56320|1023&D))}}else k+=String.fromCharCode(D)}return k},wn=(a,f)=>(a>>>=0)?tf(r(),a,f):"";function rf(a,f,b){return S?Yr(3,1,a,f,b):0}function nf(a,f){if(S)return Yr(4,1,a,f)}var wp=a=>{for(var f=0,b=0;b<a.length;++b){var k=a.charCodeAt(b);127>=k?f++:2047>=k?f+=2:55296<=k&&57343>=k?(f+=4,++b):f+=3}return f},sf=(a,f,b,k)=>{if(!(0<k))return 0;var D=b>>>=0;k=b+k-1;for(var he=0;he<a.length;++he){var Ye=a.charCodeAt(he);if(55296<=Ye&&57343>=Ye&&(Ye=65536+((1023&Ye)<<10)|1023&a.charCodeAt(++he)),127>=Ye){if(b>=k)break;f[b++>>>0]=Ye}else{if(2047>=Ye){if(b+1>=k)break;f[b++>>>0]=192|Ye>>6}else{if(65535>=Ye){if(b+2>=k)break;f[b++>>>0]=224|Ye>>12}else{if(b+3>=k)break;f[b++>>>0]=240|Ye>>18,f[b++>>>0]=128|Ye>>12&63}f[b++>>>0]=128|Ye>>6&63}f[b++>>>0]=128|63&Ye}}return f[b>>>0]=0,b-D},ra=(a,f,b)=>sf(a,r(),f,b);function of(a,f){if(S)return Yr(5,1,a,f)}function af(a,f,b){if(S)return Yr(6,1,a,f,b)}function lf(a,f,b){return S?Yr(7,1,a,f,b):0}function uf(a,f){if(S)return Yr(8,1,a,f)}function df(a,f,b){if(S)return Yr(9,1,a,f,b)}function cf(a,f,b,k){if(S)return Yr(10,1,a,f,b,k)}function pf(a,f,b,k){if(S)return Yr(11,1,a,f,b,k)}function hf(a,f,b,k){if(S)return Yr(12,1,a,f,b,k)}function ff(a){if(S)return Yr(13,1,a)}function mf(a,f){if(S)return Yr(14,1,a,f)}function _f(a,f,b){if(S)return Yr(15,1,a,f,b)}var gf,es,qm=()=>{ta("")},li=a=>{for(var f="";r()[a>>>0];)f+=gf[r()[a++>>>0]];return f},yp={},bp={};function Ei(a,f,b={}){if(!("argPackAdvance"in f))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(k,D,he={}){var Ye=D.name;if(!k)throw new es(`type "${Ye}" must have a positive integer typeid pointer`);if(bp.hasOwnProperty(k)){if(he.Sb)return;throw new es(`Cannot register type '${Ye}' twice`)}bp[k]=D,yp.hasOwnProperty(k)&&(D=yp[k],delete yp[k],D.forEach(ht=>ht()))}(a,f,b)}var wf=(a,f,b)=>{switch(f){case 1:return b?k=>t()[k>>>0]:k=>r()[k>>>0];case 2:return b?k=>n()[k>>>1>>>0]:k=>i()[k>>>1>>>0];case 4:return b?k=>s()[k>>>2>>>0]:k=>o()[k>>>2>>>0];case 8:return b?k=>qr[k>>>3]:k=>Gn[k>>>3];default:throw new TypeError(`invalid integer width (${f}): ${a}`)}};function Hm(a,f,b){b>>>=0,Ei(a>>>=0,{name:f=li(f>>>0),fromWireType:k=>k,toWireType:function(k,D){if(typeof D!="bigint"&&typeof D!="number")throw D=D===null?"null":(k=typeof D)=="object"||k==="array"||k==="function"?D.toString():""+D,new TypeError(`Cannot convert "${D}" to ${this.name}`);return typeof D=="number"&&(D=BigInt(D)),D},argPackAdvance:ts,readValueFromPointer:wf(f,b,f.indexOf("u")==-1),Db:null})}var ts=8;function Km(a,f,b,k){Ei(a>>>=0,{name:f=li(f>>>0),fromWireType:function(D){return!!D},toWireType:function(D,he){return he?b:k},argPackAdvance:ts,readValueFromPointer:function(D){return this.fromWireType(r()[D>>>0])},Db:null})}var Mp=[],Ci=[];function vp(a){9<(a>>>=0)&&--Ci[a+1]==0&&(Ci[a]=void 0,Mp.push(a))}var qn=a=>{if(!a)throw new es("Cannot use deleted val. handle = "+a);return Ci[a]},Hn=a=>{switch(a){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let f=Mp.pop()||Ci.length;return Ci[f]=a,Ci[f+1]=1,f}};function xp(a){return this.fromWireType(o()[a>>>2>>>0])}var Xm={name:"emscripten::val",fromWireType:a=>{var f=qn(a);return vp(a),f},toWireType:(a,f)=>Hn(f),argPackAdvance:ts,readValueFromPointer:xp,Db:null};function Qm(a){return Ei(a>>>0,Xm)}var Ym=(a,f)=>{switch(f){case 4:return function(b){return this.fromWireType(u()[b>>>2>>>0])};case 8:return function(b){return this.fromWireType(d()[b>>>3>>>0])};default:throw new TypeError(`invalid float width (${f}): ${a}`)}};function Zm(a,f,b){b>>>=0,Ei(a>>>=0,{name:f=li(f>>>0),fromWireType:k=>k,toWireType:(k,D)=>D,argPackAdvance:ts,readValueFromPointer:Ym(f,b),Db:null})}function Jm(a,f,b,k,D){if(a>>>=0,b>>>=0,f=li(f>>>0),D===-1&&(D=4294967295),D=ht=>ht,k===0){var he=32-8*b;D=ht=>ht<<he>>>he}var Ye=f.includes("unsigned")?function(ht,Rt){return Rt>>>0}:function(ht,Rt){return Rt};Ei(a,{name:f,fromWireType:D,toWireType:Ye,argPackAdvance:ts,readValueFromPointer:wf(f,b,k!==0),Db:null})}function e_(a,f,b){function k(he){var Ye=o()[he>>>2>>>0];return he=o()[he+4>>>2>>>0],new D(t().buffer,he,Ye)}var D=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][f];Ei(a>>>=0,{name:b=li(b>>>0),fromWireType:k,argPackAdvance:ts,readValueFromPointer:k},{Sb:!0})}function t_(a,f){a>>>=0;var b=(f=li(f>>>0))==="std::string";Ei(a,{name:f,fromWireType:function(k){var D=o()[k>>>2>>>0],he=k+4;if(b)for(var Ye=he,ht=0;ht<=D;++ht){var Rt=he+ht;if(ht==D||r()[Rt>>>0]==0){if(Ye=wn(Ye,Rt-Ye),Gt===void 0)var Gt=Ye;else Gt+="\0",Gt+=Ye;Ye=Rt+1}}else{for(Gt=Array(D),ht=0;ht<D;++ht)Gt[ht]=String.fromCharCode(r()[he+ht>>>0]);Gt=Gt.join("")}return di(k),Gt},toWireType:function(k,D){D instanceof ArrayBuffer&&(D=new Uint8Array(D));var he=typeof D=="string";if(!(he||D instanceof Uint8Array||D instanceof Uint8ClampedArray||D instanceof Int8Array))throw new es("Cannot pass non-string to std::string");var Ye=b&&he?wp(D):D.length,ht=zc(4+Ye+1),Rt=ht+4;if(o()[ht>>>2>>>0]=Ye,b&&he)ra(D,Rt,Ye+1);else if(he)for(he=0;he<Ye;++he){var Gt=D.charCodeAt(he);if(255<Gt)throw di(Rt),new es("String has UTF-16 code units that do not fit in 8 bits");r()[Rt+he>>>0]=Gt}else for(he=0;he<Ye;++he)r()[Rt+he>>>0]=D[he];return k!==null&&k.push(di,ht),ht},argPackAdvance:ts,readValueFromPointer:xp,Db(k){di(k)}})}var yf=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,r_=(a,f)=>{for(var b=a>>1,k=b+f/2;!(b>=k)&&i()[b>>>0];)++b;if(32<(b<<=1)-a&&yf)return yf.decode(r().slice(a,b));for(b="",k=0;!(k>=f/2);++k){var D=n()[a+2*k>>>1>>>0];if(D==0)break;b+=String.fromCharCode(D)}return b},n_=(a,f,b)=>{if(b??=2147483647,2>b)return 0;var k=f;b=(b-=2)<2*a.length?b/2:a.length;for(var D=0;D<b;++D){var he=a.charCodeAt(D);n()[f>>>1>>>0]=he,f+=2}return n()[f>>>1>>>0]=0,f-k},i_=a=>2*a.length,s_=(a,f)=>{for(var b=0,k="";!(b>=f/4);){var D=s()[a+4*b>>>2>>>0];if(D==0)break;++b,65536<=D?(D-=65536,k+=String.fromCharCode(55296|D>>10,56320|1023&D)):k+=String.fromCharCode(D)}return k},o_=(a,f,b)=>{if(f>>>=0,b??=2147483647,4>b)return 0;var k=f;b=k+b-4;for(var D=0;D<a.length;++D){var he=a.charCodeAt(D);if(55296<=he&&57343>=he&&(he=65536+((1023&he)<<10)|1023&a.charCodeAt(++D)),s()[f>>>2>>>0]=he,(f+=4)+4>b)break}return s()[f>>>2>>>0]=0,f-k},a_=a=>{for(var f=0,b=0;b<a.length;++b){var k=a.charCodeAt(b);55296<=k&&57343>=k&&++b,f+=4}return f};function l_(a,f,b){if(a>>>=0,f>>>=0,b=li(b>>>=0),f===2)var k=r_,D=n_,he=i_,Ye=ht=>i()[ht>>>1>>>0];else f===4&&(k=s_,D=o_,he=a_,Ye=ht=>o()[ht>>>2>>>0]);Ei(a,{name:b,fromWireType:ht=>{for(var Rt,Gt=o()[ht>>>2>>>0],nr=ht+4,Fr=0;Fr<=Gt;++Fr){var Rr=ht+4+Fr*f;Fr!=Gt&&Ye(Rr)!=0||(nr=k(nr,Rr-nr),Rt===void 0?Rt=nr:(Rt+="\0",Rt+=nr),nr=Rr+f)}return di(ht),Rt},toWireType:(ht,Rt)=>{if(typeof Rt!="string")throw new es(`Cannot pass non-string to C++ string type ${b}`);var Gt=he(Rt),nr=zc(4+Gt+f);return o()[nr>>>2>>>0]=Gt/f,D(Rt,nr+4,Gt+f),ht!==null&&ht.push(di,nr),nr},argPackAdvance:ts,readValueFromPointer:xp,Db(ht){di(ht)}})}function u_(a,f){Ei(a>>>=0,{Tb:!0,name:f=li(f>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var d_=()=>1;function c_(a){Ap(a>>>0,!P,1,!A,131072,!1),Xh()}var bf=a=>{if(!Cn)try{if(a(),!(0<vs))try{S?Dc(Tr):gp(Tr)}catch(f){f instanceof fp||f=="unwind"||qe(1,f)}}catch(f){f instanceof fp||f=="unwind"||qe(1,f)}};function Tp(a){a>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(s(),a>>>2,a).value.then(Sc),a+=128,Atomics.store(s(),a>>>2,1))}var Sc=()=>{var a=ia();a&&(Tp(a),bf(Qf))};function p_(a,f){(a>>>=0)==f>>>0?setTimeout(Sc):S?postMessage({targetThread:a,cmd:"checkMailbox"}):(a=ai[a])&&a.postMessage({cmd:"checkMailbox"})}var Ep=[];function h_(a,f,b,k,D){for(f>>>=0,k/=2,Ep.length=k,b=D>>>0>>>3,D=0;D<k;D++)Ep[D]=qr[b+2*D]?qr[b+2*D+1]:d()[b+2*D+1>>>0];return(f?hp[f]:rg[a])(...Ep)}function f_(a){a>>>=0,S?postMessage({cmd:"cleanupThread",thread:a}):Kh(ai[a])}function m_(a){}var Cp=(a,f)=>{var b=bp[a];if(b===void 0)throw a=qf(a),b=li(a),di(a),new es(`${f} has unknown type ${b}`);return b},Mf=(a,f,b)=>{var k=[];return a=a.toWireType(k,b),k.length&&(o()[f>>>2>>>0]=Hn(k)),a};function __(a,f,b){return f>>>=0,b>>>=0,a=qn(a>>>0),f=Cp(f,"emval::as"),Mf(f,b,a)}var kc=a=>{try{a()}catch(f){ta(f)}},rs=0,ui=null,vf=0,Pc=[],xf={},Tf={},g_=0,$p=null,w_=[];function Ef(a){return function(f){if(!Cn){if(rs===0){var b=!1,k=!1;f((D=0)=>{if(!Cn&&(vf=D,b=!0,k)){rs=2,kc(()=>tm(ui)),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.resume(),D=!1;try{var he=function(){var Rt=s()[ui+8>>>2>>>0];return Rt=er[Tf[Rt]],--vs,Rt()}()}catch(Rt){he=Rt,D=!0}var Ye=!1;if(!ui){var ht=$p;ht&&($p=null,(D?ht.reject:ht.resolve)(he),Ye=!0)}if(D&&!Ye)throw he}}),k=!0,b||(rs=1,ui=function(){var D=zc(65548),he=D+12;o()[D>>>2>>>0]=he,o()[D+4>>>2>>>0]=he+65536,he=Pc[0];var Ye=xf[he];return Ye===void 0&&(Ye=g_++,xf[he]=Ye,Tf[Ye]=he),he=Ye,s()[D+8>>>2>>>0]=he,D}(),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.pause(),kc(()=>Jf(ui)))}else rs===2?(rs=0,kc(rm),di(ui),ui=null,w_.forEach(bf)):ta(`invalid state: ${rs}`);return vf}}(f=>{a().then(f)})}function y_(a){return a>>>=0,Ef(()=>(a=qn(a)).then(Hn))}var Ac=[];function b_(a,f,b,k){return b>>>=0,k>>>=0,(a=Ac[a>>>0])(null,f=qn(f>>>0),b,k)}var M_={},Ic=a=>{var f=M_[a];return f===void 0?li(a):f};function v_(a,f,b,k,D){return b>>>=0,k>>>=0,D>>>=0,(a=Ac[a>>>0])(f=qn(f>>>0),f[b=Ic(b)],k,D)}var Cf=()=>typeof globalThis=="object"?globalThis:Function("return this")();function x_(a){return(a>>>=0)==0?Hn(Cf()):(a=Ic(a),Hn(Cf()[a]))}var T_=a=>{var f=Ac.length;return Ac.push(a),f},E_=(a,f)=>{for(var b=Array(a),k=0;k<a;++k)b[k]=Cp(o()[f+4*k>>>2>>>0],"parameter "+k);return b},$f=(a,f)=>Object.defineProperty(f,"name",{value:a});function C_(a,f,b){var k=(f=E_(a,f>>>0)).shift();a--;var D=`return function (obj, func, destructorsRef, args) {
`,he=0,Ye=[];b===0&&Ye.push("obj");for(var ht=["retType"],Rt=[k],Gt=0;Gt<a;++Gt)Ye.push("arg"+Gt),ht.push("argType"+Gt),Rt.push(f[Gt]),D+=`  var arg${Gt} = argType${Gt}.readValueFromPointer(args${he?"+"+he:""});
`,he+=f[Gt].argPackAdvance;return D+=`  var rv = ${b===1?"new func":"func.call"}(${Ye.join(", ")});
`,k.Tb||(ht.push("emval_returnValue"),Rt.push(Mf),D+=`  return emval_returnValue(retType, destructorsRef, rv);
`),ht.push(D+`};
`),a=function(nr){var Fr=Function;if(!(Fr instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Fr} which is not a function`);var Rr=$f(Fr.name||"unknownFunctionName",function(){});return Rr.prototype=Fr.prototype,Rr=new Rr,(nr=Fr.apply(Rr,nr))instanceof Object?nr:Rr}(ht)(...Rt),b=`methodCaller<(${f.map(nr=>nr.name).join(", ")}) => ${k.name}>`,T_($f(b,a))}function $_(a){return a=Ic(a>>>0),Hn(l[a])}function S_(a,f){return f>>>=0,a=qn(a>>>0),f=qn(f),Hn(a[f])}function k_(a){9<(a>>>=0)&&(Ci[a+1]+=1)}function P_(){return Hn([])}function A_(a){a=qn(a>>>0);for(var f=Array(a.length),b=0;b<a.length;b++)f[b]=a[b];return Hn(f)}function I_(a){return Hn(Ic(a>>>0))}function F_(){return Hn({})}function O_(a){for(var f=qn(a>>>=0);f.length;){var b=f.pop();f.pop()(b)}vp(a)}function B_(a,f,b){f>>>=0,b>>>=0,a=qn(a>>>0),f=qn(f),b=qn(b),a[f]=b}function z_(a,f){return f>>>=0,a=(a=Cp(a>>>0,"_emval_take_value")).readValueFromPointer(f),Hn(a)}function D_(a,f){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),f>>>=0,a=new Date(1e3*a),s()[f>>>2>>>0]=a.getUTCSeconds(),s()[f+4>>>2>>>0]=a.getUTCMinutes(),s()[f+8>>>2>>>0]=a.getUTCHours(),s()[f+12>>>2>>>0]=a.getUTCDate(),s()[f+16>>>2>>>0]=a.getUTCMonth(),s()[f+20>>>2>>>0]=a.getUTCFullYear()-1900,s()[f+24>>>2>>>0]=a.getUTCDay(),a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,s()[f+28>>>2>>>0]=a}var na=a=>a%4==0&&(a%100!=0||a%400==0),Sf=[0,31,60,91,121,152,182,213,244,274,305,335],kf=[0,31,59,90,120,151,181,212,243,273,304,334];function L_(a,f){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),f>>>=0,a=new Date(1e3*a),s()[f>>>2>>>0]=a.getSeconds(),s()[f+4>>>2>>>0]=a.getMinutes(),s()[f+8>>>2>>>0]=a.getHours(),s()[f+12>>>2>>>0]=a.getDate(),s()[f+16>>>2>>>0]=a.getMonth(),s()[f+20>>>2>>>0]=a.getFullYear()-1900,s()[f+24>>>2>>>0]=a.getDay();var b=(na(a.getFullYear())?Sf:kf)[a.getMonth()]+a.getDate()-1|0;s()[f+28>>>2>>>0]=b,s()[f+36>>>2>>>0]=-60*a.getTimezoneOffset(),b=new Date(a.getFullYear(),6,1).getTimezoneOffset();var k=new Date(a.getFullYear(),0,1).getTimezoneOffset();a=0|(b!=k&&a.getTimezoneOffset()==Math.min(k,b)),s()[f+32>>>2>>>0]=a}function R_(a){a>>>=0;var f=new Date(s()[a+20>>>2>>>0]+1900,s()[a+16>>>2>>>0],s()[a+12>>>2>>>0],s()[a+8>>>2>>>0],s()[a+4>>>2>>>0],s()[a>>>2>>>0],0),b=s()[a+32>>>2>>>0],k=f.getTimezoneOffset(),D=new Date(f.getFullYear(),6,1).getTimezoneOffset(),he=new Date(f.getFullYear(),0,1).getTimezoneOffset(),Ye=Math.min(he,D);return 0>b?s()[a+32>>>2>>>0]=+(D!=he&&Ye==k):0<b!=(Ye==k)&&(D=Math.max(he,D),f.setTime(f.getTime()+6e4*((0<b?Ye:D)-k))),s()[a+24>>>2>>>0]=f.getDay(),b=(na(f.getFullYear())?Sf:kf)[f.getMonth()]+f.getDate()-1|0,s()[a+28>>>2>>>0]=b,s()[a>>>2>>>0]=f.getSeconds(),s()[a+4>>>2>>>0]=f.getMinutes(),s()[a+8>>>2>>>0]=f.getHours(),s()[a+12>>>2>>>0]=f.getDate(),s()[a+16>>>2>>>0]=f.getMonth(),s()[a+20>>>2>>>0]=f.getYear(),a=f.getTime(),BigInt(isNaN(a)?-1:a/1e3)}function Pf(a,f,b,k,D,he,Ye){return S?Yr(16,1,a,f,b,k,D,he,Ye):-52}function Af(a,f,b,k,D,he){if(S)return Yr(17,1,a,f,b,k,D,he)}function N_(a,f,b,k){a>>>=0,f>>>=0,b>>>=0,k>>>=0;var D=new Date().getFullYear(),he=new Date(D,0,1),Ye=new Date(D,6,1);D=he.getTimezoneOffset();var ht=Ye.getTimezoneOffset(),Rt=Math.max(D,ht);o()[a>>>2>>>0]=60*Rt,s()[f>>>2>>>0]=+(D!=ht),he=(a=Gt=>Gt.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(he),Ye=a(Ye),ht<D?(ra(he,b,17),ra(Ye,k,17)):(ra(he,k,17),ra(Ye,b,17))}var Sp=[],If=(a,f)=>{Sp.length=0;for(var b;b=r()[a++>>>0];){var k=b!=105;f+=(k&=b!=112)&&f%8?4:0,Sp.push(b==112?o()[f>>>2>>>0]:b==106?qr[f>>>3]:b==105?s()[f>>>2>>>0]:d()[f>>>3>>>0]),f+=k?8:4}return Sp};function j_(a,f,b){return a>>>=0,f=If(f>>>0,b>>>0),hp[a](...f)}function U_(a,f,b){return a>>>=0,f=If(f>>>0,b>>>0),hp[a](...f)}var V_=()=>{},W_=()=>Date.now();function G_(a,f){return Zt(wn(a>>>0,f>>>0))}var Ff,q_=()=>{throw vs+=1,"unwind"};function H_(){return 4294901760}Ff=()=>performance.timeOrigin+performance.now();var K_=()=>navigator.hardwareConcurrency;function X_(){return ta("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Q_(a){a>>>=0;var f=r().length;if(a<=f||4294901760<a)return!1;for(var b=1;4>=b;b*=2){var k=f*(1+.2/b);k=Math.min(k,a+100663296);var D=Math;k=Math.max(a,k);e:{D=(D.min.call(D,4294901760,k+(65536-k%65536)%65536)-or.buffer.byteLength+65535)/65536;try{or.grow(D),vn();var he=1;break e}catch{}he=void 0}if(he)return!0}return!1}var Fc=()=>(ta("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),yd={},Of=a=>{a.forEach(f=>{Fc()})};function Y_(){var a=Error().stack.toString().split(`
`);return a[0]=="Error"&&a.shift(),Of(a),yd.Pb=Fc(),yd.ec=a,yd.Pb}function Z_(a,f,b){if(a>>>=0,f>>>=0,yd.Pb==a)var k=yd.ec;else(k=Error().stack.toString().split(`
`))[0]=="Error"&&k.shift(),Of(k);for(var D=3;k[D]&&Fc()!=a;)++D;for(a=0;a<b&&k[a+D];++a)s()[f+4*a>>>2>>>0]=Fc();return a}var kp,Pp={},Bf=()=>{if(!kp){var a,f={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:ge};for(a in Pp)Pp[a]===void 0?delete f[a]:f[a]=Pp[a];var b=[];for(a in f)b.push(`${a}=${f[a]}`);kp=b}return kp};function zf(a,f){if(S)return Yr(18,1,a,f);a>>>=0,f>>>=0;var b=0;return Bf().forEach((k,D)=>{var he=f+b;for(D=o()[a+4*D>>>2>>>0]=he,he=0;he<k.length;++he)t()[D++>>>0]=k.charCodeAt(he);t()[D>>>0]=0,b+=k.length+1}),0}function Df(a,f){if(S)return Yr(19,1,a,f);a>>>=0,f>>>=0;var b=Bf();o()[a>>>2>>>0]=b.length;var k=0;return b.forEach(D=>k+=D.length+1),o()[f>>>2>>>0]=k,0}function Lf(a){return S?Yr(20,1,a):52}function Rf(a,f,b,k){return S?Yr(21,1,a,f,b,k):52}function Nf(a,f,b,k){return S?Yr(22,1,a,f,b,k):70}var J_=[null,[],[]];function jf(a,f,b,k){if(S)return Yr(23,1,a,f,b,k);f>>>=0,b>>>=0,k>>>=0;for(var D=0,he=0;he<b;he++){var Ye=o()[f>>>2>>>0],ht=o()[f+4>>>2>>>0];f+=8;for(var Rt=0;Rt<ht;Rt++){var Gt=r()[Ye+Rt>>>0],nr=J_[a];Gt===0||Gt===10?((a===1?lr:Zt)(tf(nr,0)),nr.length=0):nr.push(Gt)}D+=ht}return o()[k>>>2>>>0]=D,0}var Uf=[31,29,31,30,31,30,31,31,30,31,30,31],Vf=[31,28,31,30,31,30,31,31,30,31,30,31],eg=(a,f)=>{t().set(a,f>>>0)};function Wf(a,f,b,k){function D(We,Pr,tn){for(We=typeof We=="number"?We.toString():We||"";We.length<Pr;)We=tn[0]+We;return We}function he(We,Pr){return D(We,Pr,"0")}function Ye(We,Pr){function tn(im){return 0>im?-1:0<im?1:0}var Ts;return(Ts=tn(We.getFullYear()-Pr.getFullYear()))===0&&(Ts=tn(We.getMonth()-Pr.getMonth()))===0&&(Ts=tn(We.getDate()-Pr.getDate())),Ts}function ht(We){switch(We.getDay()){case 0:return new Date(We.getFullYear()-1,11,29);case 1:return We;case 2:return new Date(We.getFullYear(),0,3);case 3:return new Date(We.getFullYear(),0,2);case 4:return new Date(We.getFullYear(),0,1);case 5:return new Date(We.getFullYear()-1,11,31);case 6:return new Date(We.getFullYear()-1,11,30)}}function Rt(We){var Pr=We.Bb;for(We=new Date(new Date(We.Cb+1900,0,1).getTime());0<Pr;){var tn=We.getMonth(),Ts=(na(We.getFullYear())?Uf:Vf)[tn];if(!(Pr>Ts-We.getDate())){We.setDate(We.getDate()+Pr);break}Pr-=Ts-We.getDate()+1,We.setDate(1),11>tn?We.setMonth(tn+1):(We.setMonth(0),We.setFullYear(We.getFullYear()+1))}return tn=new Date(We.getFullYear()+1,0,4),Pr=ht(new Date(We.getFullYear(),0,4)),tn=ht(tn),0>=Ye(Pr,We)?0>=Ye(tn,We)?We.getFullYear()+1:We.getFullYear():We.getFullYear()-1}a>>>=0,f>>>=0,b>>>=0,k>>>=0;var Gt=o()[k+40>>>2>>>0];for(var nr in k={kc:s()[k>>>2>>>0],jc:s()[k+4>>>2>>>0],Hb:s()[k+8>>>2>>>0],Lb:s()[k+12>>>2>>>0],Ib:s()[k+16>>>2>>>0],Cb:s()[k+20>>>2>>>0],ub:s()[k+24>>>2>>>0],Bb:s()[k+28>>>2>>>0],sc:s()[k+32>>>2>>>0],ic:s()[k+36>>>2>>>0],lc:Gt?wn(Gt):""},b=wn(b),Gt={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})b=b.replace(new RegExp(nr,"g"),Gt[nr]);var Fr="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Rr="January February March April May June July August September October November December".split(" ");for(nr in Gt={"%a":We=>Fr[We.ub].substring(0,3),"%A":We=>Fr[We.ub],"%b":We=>Rr[We.Ib].substring(0,3),"%B":We=>Rr[We.Ib],"%C":We=>he((We.Cb+1900)/100|0,2),"%d":We=>he(We.Lb,2),"%e":We=>D(We.Lb,2," "),"%g":We=>Rt(We).toString().substring(2),"%G":Rt,"%H":We=>he(We.Hb,2),"%I":We=>((We=We.Hb)==0?We=12:12<We&&(We-=12),he(We,2)),"%j":We=>{for(var Pr=0,tn=0;tn<=We.Ib-1;Pr+=(na(We.Cb+1900)?Uf:Vf)[tn++]);return he(We.Lb+Pr,3)},"%m":We=>he(We.Ib+1,2),"%M":We=>he(We.jc,2),"%n":()=>`
`,"%p":We=>0<=We.Hb&&12>We.Hb?"AM":"PM","%S":We=>he(We.kc,2),"%t":()=>"	","%u":We=>We.ub||7,"%U":We=>he(Math.floor((We.Bb+7-We.ub)/7),2),"%V":We=>{var Pr=Math.floor((We.Bb+7-(We.ub+6)%7)/7);if(2>=(We.ub+371-We.Bb-2)%7&&Pr++,Pr)Pr==53&&((tn=(We.ub+371-We.Bb)%7)==4||tn==3&&na(We.Cb)||(Pr=1));else{Pr=52;var tn=(We.ub+7-We.Bb-1)%7;(tn==4||tn==5&&na(We.Cb%400-1))&&Pr++}return he(Pr,2)},"%w":We=>We.ub,"%W":We=>he(Math.floor((We.Bb+7-(We.ub+6)%7)/7),2),"%y":We=>(We.Cb+1900).toString().substring(2),"%Y":We=>We.Cb+1900,"%z":We=>{var Pr=0<=(We=We.ic);return We=Math.abs(We)/60,(Pr?"+":"-")+("0000"+(We/60*100+We%60)).slice(-4)},"%Z":We=>We.lc,"%%":()=>"%"},b=b.replace(/%%/g,"\0\0"),Gt)b.includes(nr)&&(b=b.replace(new RegExp(nr,"g"),Gt[nr](k)));return nr=function(We){var Pr=Array(wp(We)+1);return sf(We,Pr,0,Pr.length),Pr}(b=b.replace(/\0\0/g,"%")),nr.length>f?0:(eg(nr,a),nr.length-1)}function tg(a,f,b,k){return Wf(a>>>0,f>>>0,b>>>0,k>>>0)}S||function(){for(var a=l.numThreads-1;a--;)Yh();mn.unshift(()=>{Zi++,function(f){S?f():Promise.all(Ji.map(Qh)).then(f)}(()=>Rh())})}();for(var Gf=Array(256),Oc=0;256>Oc;++Oc)Gf[Oc]=String.fromCharCode(Oc);gf=Gf,es=l.BindingError=class extends Error{constructor(a){super(a),this.name="BindingError"}},l.InternalError=class extends Error{constructor(a){super(a),this.name="InternalError"}},Ci.push(0,1,void 0,1,null,1,!0,1,!1,1),l.count_emval_handles=()=>Ci.length/2-5-Mp.length;var rg=[_p,qh,Zh,rf,nf,of,af,lf,uf,df,cf,pf,hf,ff,mf,_f,Pf,Af,zf,Df,Lf,Rf,Nf,jf],er=function(){function a(b,k){return er=b.exports,er=function(){var D=er,he={};for(let[Ye,ht]of Object.entries(D))he[Ye]=typeof ht=="function"?(...Rt)=>{Pc.push(Ye);try{return ht(...Rt)}finally{Cn||(Pc.pop(),ui&&rs===1&&Pc.length===0&&(rs=0,vs+=1,kc(em),typeof Fibers<"u"&&Fibers.tc()))}}:ht;return he}(),er=function(){var D=er,he=ht=>Rt=>ht(Rt)>>>0,Ye=ht=>()=>ht()>>>0;return(D=Object.assign({},D)).Ca=he(D.Ca),D.fb=Ye(D.fb),D.hb=he(D.hb),D.emscripten_main_runtime_thread_id=Ye(D.emscripten_main_runtime_thread_id),D.sb=he(D.sb),D.tb=Ye(D.tb),D}(),Hh.push(er.ib),_n.unshift(er.Ba),Qt=k,Rh(),er}var f=Wh();if(Zi++,l.instantiateWasm)try{return l.instantiateWasm(f,a)}catch(b){Zt(`Module.instantiateWasm callback failed with error: ${b}`),y(b)}return pp||=l.locateFile?Nh("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":l.locateFile?l.locateFile("ort-wasm-simd-threaded.jsep.wasm",Fe):Fe+"ort-wasm-simd-threaded.jsep.wasm":new URL(T("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),T.b).href,function(b,k){var D=pp;return bt||typeof WebAssembly.instantiateStreaming!="function"||Nh(D)||jh(D)||typeof fetch!="function"?Vh(D,b,k):fetch(D,{credentials:"same-origin"}).then(he=>WebAssembly.instantiateStreaming(he,b).then(k,function(Ye){return Zt(`wasm streaming compile failed: ${Ye}`),Zt("falling back to ArrayBuffer instantiation"),Vh(D,b,k)}))}(f,function(b){a(b.instance,b.module)}).catch(y),{}}(),qf=a=>(qf=er.Ca)(a),Hf=()=>(Hf=er.Da)();l._OrtInit=(a,f)=>(l._OrtInit=er.Ea)(a,f),l._OrtGetLastError=(a,f)=>(l._OrtGetLastError=er.Fa)(a,f),l._OrtCreateSessionOptions=(a,f,b,k,D,he,Ye,ht,Rt,Gt)=>(l._OrtCreateSessionOptions=er.Ga)(a,f,b,k,D,he,Ye,ht,Rt,Gt),l._OrtAppendExecutionProvider=(a,f)=>(l._OrtAppendExecutionProvider=er.Ha)(a,f),l._OrtAddFreeDimensionOverride=(a,f,b)=>(l._OrtAddFreeDimensionOverride=er.Ia)(a,f,b),l._OrtAddSessionConfigEntry=(a,f,b)=>(l._OrtAddSessionConfigEntry=er.Ja)(a,f,b),l._OrtReleaseSessionOptions=a=>(l._OrtReleaseSessionOptions=er.Ka)(a),l._OrtCreateSession=(a,f,b)=>(l._OrtCreateSession=er.La)(a,f,b),l._OrtReleaseSession=a=>(l._OrtReleaseSession=er.Ma)(a),l._OrtGetInputOutputCount=(a,f,b)=>(l._OrtGetInputOutputCount=er.Na)(a,f,b),l._OrtGetInputName=(a,f)=>(l._OrtGetInputName=er.Oa)(a,f),l._OrtGetOutputName=(a,f)=>(l._OrtGetOutputName=er.Pa)(a,f),l._OrtFree=a=>(l._OrtFree=er.Qa)(a),l._OrtCreateTensor=(a,f,b,k,D,he)=>(l._OrtCreateTensor=er.Ra)(a,f,b,k,D,he),l._OrtGetTensorData=(a,f,b,k,D)=>(l._OrtGetTensorData=er.Sa)(a,f,b,k,D),l._OrtReleaseTensor=a=>(l._OrtReleaseTensor=er.Ta)(a),l._OrtCreateRunOptions=(a,f,b,k)=>(l._OrtCreateRunOptions=er.Ua)(a,f,b,k),l._OrtAddRunConfigEntry=(a,f,b)=>(l._OrtAddRunConfigEntry=er.Va)(a,f,b),l._OrtReleaseRunOptions=a=>(l._OrtReleaseRunOptions=er.Wa)(a),l._OrtCreateBinding=a=>(l._OrtCreateBinding=er.Xa)(a),l._OrtBindInput=(a,f,b)=>(l._OrtBindInput=er.Ya)(a,f,b),l._OrtBindOutput=(a,f,b,k)=>(l._OrtBindOutput=er.Za)(a,f,b,k),l._OrtClearBoundOutputs=a=>(l._OrtClearBoundOutputs=er._a)(a),l._OrtReleaseBinding=a=>(l._OrtReleaseBinding=er.$a)(a),l._OrtRunWithBinding=(a,f,b,k,D)=>(l._OrtRunWithBinding=er.ab)(a,f,b,k,D),l._OrtRun=(a,f,b,k,D,he,Ye,ht)=>(l._OrtRun=er.bb)(a,f,b,k,D,he,Ye,ht),l._OrtEndProfiling=a=>(l._OrtEndProfiling=er.cb)(a),l._JsepOutput=(a,f,b)=>(l._JsepOutput=er.db)(a,f,b),l._JsepGetNodeName=a=>(l._JsepGetNodeName=er.eb)(a);var Bc,ia=()=>(ia=er.fb)(),di=l._free=a=>(di=l._free=er.gb)(a),zc=l._malloc=a=>(zc=l._malloc=er.hb)(a),Ap=(a,f,b,k,D,he)=>(Ap=er.kb)(a,f,b,k,D,he),Kf=()=>(Kf=er.lb)(),Xf=(a,f,b,k,D)=>(Xf=er.mb)(a,f,b,k,D),Ip=a=>(Ip=er.nb)(a),Dc=a=>(Dc=er.ob)(a),Qf=()=>(Qf=er.pb)(),Yf=(a,f)=>(Yf=er.qb)(a,f),Lc=a=>(Lc=er.rb)(a),Fp=a=>(Fp=er.sb)(a),Op=()=>(Op=er.tb)(),Zf=l.dynCall_ii=(a,f)=>(Zf=l.dynCall_ii=er.vb)(a,f),Jf=a=>(Jf=er.wb)(a),em=()=>(em=er.xb)(),tm=a=>(tm=er.yb)(a),rm=()=>(rm=er.zb)();function nm(){0<Zi||(S?(h(l),S||$c(_n),startWorker(l)):($c(mn),0<Zi||Bc||(Bc=!0,l.calledRun=!0,Cn||(S||$c(_n),h(l),S||$c(Yi)))))}return l.___start_em_js=881578,l.___stop_em_js=881800,l.stackSave=()=>Op(),l.stackRestore=a=>Lc(a),l.stackAlloc=a=>Fp(a),l.UTF8ToString=wn,l.stringToUTF8=ra,l.lengthBytesUTF8=wp,Ms=function a(){Bc||nm(),Bc||(Ms=a)},nm(),x}),Se=ye,globalThis.self?.name==="em-pthread"&&ye()}),Ke,pt,Ct,Tt,Ft,xt,Ut,Wt,Nt=R(()=>{m(),Ke=import.meta.url??(typeof document<"u"?document.currentScript?.src:typeof self<"u"?self.location?.href:void 0),pt=typeof location>"u"?void 0:location.origin,Ct=(e,t)=>{try{let r=t??Ke;return(r?new URL(e,r):new URL(e)).origin===pt}catch{return!1}},Tt=async e=>{let t=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(t)},Ft=(sr(),U(V)).default,xt=async()=>{if(!Ke)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(Ct(Ke))return[void 0,Ft()];let e=await Tt(Ke);return[e,Ft(e)]},Ut=(Be(),U(Je)).default,Wt=async(e,t,r)=>[void 0,Ut]}),Le,Re,vt,Ht,ar,Or,jr,Er,Dr=R(()=>{Nt(),Re=!1,vt=!1,Ht=!1,ar=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Or=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},jr=async e=>{if(Re)return Promise.resolve();if(vt)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Ht)throw new Error("previous call to 'initializeWebAssembly()' failed.");vt=!0;let t=e.initTimeout,r=e.numThreads;if(!Or())throw new Error("WebAssembly SIMD is not supported in the current environment.");let n=ar();r>1&&!n&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=r=1);let i=e.wasmPaths,s=typeof i=="string"?i:void 0,o=i?.mjs,u=o?.href??o,d=i?.wasm,h=d?.href??d,y=e.wasmBinary,[l,x]=await Wt(u,s,r>1),A=!1,P=[];if(t>0&&P.push(new Promise(S=>{setTimeout(()=>{A=!0,S()},t)})),P.push(new Promise((S,Q)=>{let K={numThreads:r};y?K.wasmBinary=y:(h||s)&&(K.locateFile=(F,re)=>h??(s??re)+F),x(K).then(F=>{vt=!1,Re=!0,Le=F,S(),l&&URL.revokeObjectURL(l)},F=>{vt=!1,Ht=!0,Q(F)})})),await Promise.race(P),A)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Er=()=>{if(Re&&Le)return Le;throw new Error("WebAssembly is not initialized yet.")}}),Ar,Dn,Nr,mi=R(()=>{Dr(),Ar=(e,t)=>{let r=Er(),n=r.lengthBytesUTF8(e)+1,i=r._malloc(n);return r.stringToUTF8(e,i,n),t.push(i),i},Dn=(e,t,r,n)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,s])=>{let o=t?t+i:i;if(typeof s=="object")Dn(s,o+".",r,n);else if(typeof s=="string"||typeof s=="number")n(o,s.toString());else if(typeof s=="boolean")n(o,s?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof s}`)})},Nr=e=>{let t=Er(),r=t.stackSave();try{let n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);let i=t.HEAP32[n/4],s=t.HEAPU32[n/4+1],o=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${o}`)}finally{t.stackRestore(r)}}}),ki,Xn=R(()=>{Dr(),mi(),ki=e=>{let t=Er(),r=0,n=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let s=0;return e?.tag!==void 0&&(s=Ar(e.tag,n)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,s),r===0&&Nr("Can't create run options."),e?.extra!==void 0&&Dn(e.extra,"",new WeakSet,(o,u)=>{let d=Ar(o,n),h=Ar(u,n);t._OrtAddRunConfigEntry(r,d,h)!==0&&Nr(`Can't set a run config entry: ${o} - ${u}.`)}),[r,n]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),n.forEach(o=>t._free(o)),s}}}),Pi,Ai,Ii,Fi,Oi,ti=R(()=>{Dr(),mi(),Pi=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Ai=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Ii=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Fi=(e,t,r)=>{for(let n of t){let i=typeof n=="string"?n:n.name;switch(i){case"webnn":if(i="WEBNN",typeof n!="string"){let o=n?.deviceType;if(o){let u=Ar("deviceType",r),d=Ar(o,r);Er()._OrtAddSessionConfigEntry(e,u,d)!==0&&Nr(`Can't set a session config entry: 'deviceType' - ${o}.`)}}break;case"webgpu":if(i="JS",typeof n!="string"){let o=n;if(o?.preferredLayout){if(o.preferredLayout!=="NCHW"&&o.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${o.preferredLayout}`);let u=Ar("preferredLayout",r),d=Ar(o.preferredLayout,r);Er()._OrtAddSessionConfigEntry(e,u,d)!==0&&Nr(`Can't set a session config entry: 'preferredLayout' - ${o.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let s=Ar(i,r);Er()._OrtAppendExecutionProvider(e,s)!==0&&Nr(`Can't append execution provider: ${i}.`)}},Oi=e=>{let t=Er(),r=0,n=[],i=e||{};Ii(i);try{let s=Pi(i.graphOptimizationLevel??"all"),o=Ai(i.executionMode??"sequential"),u=typeof i.logId=="string"?Ar(i.logId,n):0,d=i.logSeverityLevel??2;if(!Number.isInteger(d)||d<0||d>4)throw new Error(`log serverity level is not valid: ${d}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let y=typeof i.optimizedModelFilePath=="string"?Ar(i.optimizedModelFilePath,n):0;if(r=t._OrtCreateSessionOptions(s,!!i.enableCpuMemArena,!!i.enableMemPattern,o,!!i.enableProfiling,0,u,d,h,y),r===0&&Nr("Can't create session options."),i.executionProviders&&Fi(r,i.executionProviders,n),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let l=Ar("enableGraphCapture",n),x=Ar(i.enableGraphCapture.toString(),n);t._OrtAddSessionConfigEntry(r,l,x)!==0&&Nr(`Can't set a session config entry: 'enableGraphCapture' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[l,x]of Object.entries(i.freeDimensionOverrides)){if(typeof l!="string")throw new Error(`free dimension override name must be a string: ${l}`);if(typeof x!="number"||!Number.isInteger(x)||x<0)throw new Error(`free dimension override value must be a non-negative integer: ${x}`);let A=Ar(l,n);t._OrtAddFreeDimensionOverride(r,A,x)!==0&&Nr(`Can't set a free dimension override: ${l} - ${x}.`)}return i.extra!==void 0&&Dn(i.extra,"",new WeakSet,(l,x)=>{let A=Ar(l,n),P=Ar(x,n);t._OrtAddSessionConfigEntry(r,A,P)!==0&&Nr(`Can't set a session config entry: ${l} - ${x}.`)}),[r,n]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),n.forEach(o=>t._free(o)),s}}}),Qn,$n,Ln,_i,On,gi,wi,yi,rr=R(()=>{Qn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},$n=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},Ln=(e,t)=>{let r=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],n=typeof t=="number"?t:t.reduce((i,s)=>i*s,1);return r>0?Math.ceil(n*r):void 0},_i=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},On=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},gi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",wi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool",yi=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),ri,Bi=R(()=>{m(),ri=async e=>{if(typeof e=="string"){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),n=r?parseInt(r,10):0;if(n<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),s;try{s=new ArrayBuffer(n)}catch(u){if(u instanceof RangeError){let d=Math.ceil(n/65536);s=new WebAssembly.Memory({initial:d,maximum:d}).buffer}else throw u}let o=0;for(;;){let{done:u,value:d}=await i.read();if(u)break;let h=d.byteLength;new Uint8Array(s,o,h).set(d),o+=h}return new Uint8Array(s,0,n)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),zi,bi,Di,Li,ni,ns,_e,_=R(()=>{rr(),zi=["V","I","W","E","F"],bi=(e,t)=>{console.log(`[${zi[e]},${new Date().toISOString()}]${t}`)},ni=(e,t)=>{Di=e,Li=t},ns=(e,t)=>{let r=On(e),n=On(Di);r>=n&&bi(r,typeof t=="function"?t():t)},_e=(...e)=>{Li&&ns(...e)}}),W,oe=R(()=>{rr(),W=(e,t)=>new(_i(t))(e)}),pe=R(()=>{}),Oe,st,Pt,zt,Dt,$t,_r,pr,Cr,Xr=R(()=>{_(),pe(),Oe=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),st=[],Pt=e=>Math.ceil(e/16)*16,zt=e=>{for(let t=0;t<st.length;t++){let r=st[t];if(e<=r)return r}return Math.ceil(e/16)*16},Dt=1,$t=()=>Dt++,_r=async(e,t,r,n)=>{let i=Pt(r),s=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(t,0,s,0,i),e.flush(),await s.mapAsync(GPUMapMode.READ);let u=s.getMappedRange();if(n){let d=n();return d.set(new Uint8Array(u,0,r)),d}else return new Uint8Array(u.slice(0,r))}finally{s.destroy()}},pr=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[t]of Oe)st.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[]);this.sessionCount=0}upload(e,t){let r=t.buffer,n=t.byteOffset,i=t.byteLength,s=Pt(i),o=this.storageCache.get(e);if(!o)throw new Error("gpu data for uploading does not exist");if(o.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),d=u.getMappedRange();new Uint8Array(d).set(new Uint8Array(r,n,i)),u.unmap();let h=this.backend.getCommandEncoder();this.backend.endComputePass(),h.copyBufferToBuffer(u,0,o.gpuData.buffer,0,s),_e("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(t);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(r.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=Pt(r.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(r.gpuData.buffer,0,n.gpuData.buffer,0,i)}registerExternalBuffer(e,t,r){let n;if(r){if(n=r[0],e===r[1])return _e("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else n=$t();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:e},originalSize:t}),_e("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, registered.`),n}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),_e("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r=zt(e),n,i=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||s){let u=(i?this.freeBuffers:this.freeUniformBuffers).get(r);u?u.length>0?n=u.pop():n=this.backend.device.createBuffer({size:r,usage:t}):n=this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let o={id:$t(),type:0,buffer:n};return this.storageCache.set(o.id,{gpuData:o,originalSize:e}),_e("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${o.id}`),o}get(e){return this.storageCache.get(e)?.gpuData}release(e){let t=this.storageCache.get(e);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return _e("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("data does not exist");await _r(this.backend,r.gpuData.buffer,r.originalSize,t)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let t=Oe.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(_e("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.storageCache=new Map)}},Cr=(...e)=>new pr(...e)}),bn,hr,kr=R(()=>{bn=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},hr=e=>new bn(e)}),xn,Sn,Ie,Jr,ln,kn,Rn,Jt=R(()=>{xn=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},Sn=class{static calcShape(e,t,r=!1){let n=e.length,i=t.length;if(n===0)return t;if(i===0)return e;let s=Math.max(e.length,t.length),o=new Array(s);if(r){if(n<2||i<2)return;let u=xn.calcMatMulShape([e[n-2],e[n-1]],[t[i-2],t[i-1]]);if(u===void 0)return;[o[s-2],o[s-1]]=u}for(let u=r?3:1;u<=s;u++){let d=n-u<0?1:e[n-u],h=i-u<0?1:t[i-u];if(d!==h&&d>1&&h>1)return;let y=Math.max(d,h);if(d&&h)o[s-u]=Math.max(d,h);else{if(y>1)return;o[s-u]=0}}return o}static isValidBroadcast(e,t){let r=e.length,n=t.length;if(r>n)return!1;for(let i=1;i<=r;i++)if(e[r-i]!==1&&e[r-i]!==t[n-i])return!1;return!0}},Ie=class jc{static size(t){return jc.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let n=t.length;if(n===0)return[];let i=new Array(n),s=n-1;for(;s>=0;){if(t[s]%r===0){i[s]=t[s]/r;break}if(r%t[s]!==0)throw new Error("cannot convert shape");i[s]=1,r/=t[s],s--}for(s--;s>=0;s--)i[s]=t[s];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return jc.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return jc.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,n){let i=1;for(let s=r;s<n;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[s]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let n=new Array(r);n[r-1]=1,n[r-2]=t[r-1];for(let i=r-3;i>=0;--i)n[i]=n[i+1]*t[i+1];return n}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(n=>this.normalizeAxis(n,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(n=>t[n]):t.slice().reverse()}static padShape(t,r){let n=t.length;return t.map((i,s)=>i+r[s]+r[s+n])}static areEqual(t,r){return t.length!==r.length?!1:t.every((n,i)=>n===r[i])}},Jr=class vd{static adjustPoolAttributes(t,r,n,i,s,o){if(!t&&n.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let u=0;u<r.length-2;u++)u>=n.length?n.push(r[u+2]):n[u]=r[u+2];for(let u=0;u<n.length;u++)if(u<i.length){if(i[u]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let u=0;u<n.length;u++)if(u<s.length){if(s[u]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let u=0;u<n.length*2;u++)if(u<o.length){if(o[u]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let u=0;u<n.length;u++){if(n[u]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[u]>=n[u]||o[u+n.length]>=n[u])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,n,i,s,o,u){if(u){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let d=0;d<t.length-2;d++)vd.adjustPadAndReturnShape(t[d+(o?1:2)],r[d],n[d],i[d],s,d,d+t.length-2,u)}}static computePoolOutputShape(t,r,n,i,s,o,u){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let d=[r[0],r[1]];return vd.computeShapeHelper(t,r,d,n,i,s,o,u),d}static computeConvOutputShape(t,r,n,i,s,o,u){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let d=[t[0],r[0]];return vd.computeShapeHelper(!1,t,d,n,i,s,o,u),d}static computeShapeHelper(t,r,n,i,s,o,u,d){if(t)for(let h=0;h<r.length-2;h++)n.push(1);else for(let h=0;h<r.length-2;h++)n.push(vd.adjustPadAndReturnShape(r[h+2],i[h],s[h],o[h],u,h,h+r.length-2,d))}static adjustPadAndReturnShape(t,r,n,i,s,o,u,d){let h=n*(i-1)+1;if(d&&d!=="NOTSET")switch(d){case"VALID":return s[o]=0,s[u]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(n!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return s[o]=Math.floor(d==="SAME_LOWER"?(y+1)/2:y/2),s[u]=y-s[o],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[o]+s[u]-h)/r+1)}},ln=class{static getShapeOfGemmResult(e,t,r,n,i){if(e.length!==2||r.length!==2)throw new Error("shape need to be of size 2");let s,o,u;t?(s=e[1],o=e[0]):(s=e[0],o=e[1]);let d=-1;if(n?(u=r[0],d=1):(u=r[1],d=0),r[d]!==o)throw new Error("dimension mismatch");if(s<=0||u<=0||o<=0)throw new Error("invalid shape specified");if(i&&!Sn.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,o]}},kn=-34028234663852886e22,Rn=34028234663852886e22}),pn,Qr,gr,Br,Ot,br,ii,Yn,Nn,qt,is,lt,Kt,$s,Ss,pa,Mi,fr=R(()=>{rr(),Jt(),pn=64,Qr=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},gr=(e,t=1)=>{let r=Qr(e,t);return typeof r=="string"?r:r[0]},Br=(e,t=1)=>{let r=Qr(e,t);return typeof r=="string"?r:r[1]},Ot=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:Ie.computeStrides(r)})}),t},br=e=>e%4===0?4:e%2===0?2:1,ii=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Yn=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,Nn=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,qt=(e,t,r,n)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?n==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:n==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,is=(e,t,r,n,i)=>{let s=typeof r=="number",o=s?r:r.length,u=[...new Array(o).keys()],d=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,h=Qr(t,i),y=typeof h=="string"?h:h[1],l=typeof h=="string"?h:h[0],x={indices:d,value:y,storage:l,tensor:t},A=rt=>typeof rt=="string"?rt:`${rt}u`,P={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},S=s?"uniforms.":"",Q=`${S}${e}_shape`,K=`${S}${e}_strides`,F="";for(let rt=0;rt<o-1;rt++)F+=`
    let dim${rt} = current / ${qt(K,rt,o)};
    let rest${rt} = current % ${qt(K,rt,o)};
    indices[${rt}] = dim${rt};
    current = rest${rt};
    `;F+=`indices[${o-1}] = current;`;let re=o<2?"":`
  fn o2i_${e}(offset: u32) -> ${x.indices} {
    var indices: ${x.indices};
    var current = offset;
    ${F}
    return indices;
  }`,de=rt=>(P.offsetToIndices=!0,o<2?rt:`o2i_${e}(${rt})`),ge=[];if(o>=2)for(let rt=o-1;rt>=0;rt--)ge.push(`${qt(K,rt,o)} * (indices[${rt}])`);let qe=o<2?"":`
  fn i2o_${e}(indices: ${x.indices}) -> u32 {
    return ${ge.join("+")};
  }`,Fe=rt=>(P.indicesToOffset=!0,o<2?rt:`i2o_${e}(${rt})`),bt=(...rt)=>o===0?"0u":`${x.indices}(${rt.map(A).join(",")})`,Vt=(rt,St)=>o<2?`${rt}`:`${qt(rt,St,o)}`,jt=(rt,St,mr)=>o<2?`${rt}=${mr};`:`${qt(rt,St,o)}=${mr};`,lr={},Zt=(rt,St)=>{P.broadcastedIndicesToOffset=!0;let mr=`${St.name}broadcastedIndicesTo${e}Offset`;if(mr in lr)return`${mr}(${rt})`;let Wr=[];for(let qr=o-1;qr>=0;qr--){let Gn=St.indicesGet("outputIndices",qr+St.rank-o);Wr.push(`${Vt(K,qr)} * (${Gn} % ${Vt(Q,qr)})`)}return lr[mr]=`fn ${mr}(outputIndices: ${St.type.indices}) -> u32 {
             return ${Wr.length>0?Wr.join("+"):"0u"};
           }`,`${mr}(${rt})`},ur=(rt,St)=>(()=>{if(x.storage===x.value)return`${e}[${rt}]=${St};`;if(x.storage==="vec2<u32>"&&x.value==="i32")return`${e}[${rt}]=vec2<u32>(u32(${St}), select(0u, 0xFFFFFFFFu, ${St} < 0));`;if(x.storage==="vec2<u32>"&&x.value==="u32")return`${e}[${rt}]=vec2<u32>(u32(${St}), 0u);`;if(x.storage==="u32"&&x.value==="vec4<bool>")return`${e}[${rt}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${St}));`;throw new Error(`not supported combination of storage type ${x.storage} and value type ${x.value} yet`)})(),Sr=rt=>(()=>{if(x.storage===x.value)return`${e}[${rt}]`;if(x.storage==="vec2<u32>"&&x.value==="i32")return`i32(${e}[${rt}].x)`;if(x.storage==="vec2<u32>"&&x.value==="u32")return`u32(${e}[${rt}].x)`;if(x.storage==="u32"&&x.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${rt}] & 0xFFu), bool(${e}[${rt}] & 0xFF00u), bool(${e}[${rt}] & 0xFF0000u), bool(${e}[${rt}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${x.storage} and value type ${x.value} yet`)})(),or=o<2?"":`
  fn get_${e}ByIndices(indices: ${x.indices}) -> ${y} {
    return ${Sr(`i2o_${e}(indices)`)};
  }`,Qt=o<2?"":(()=>{let rt=u.map(mr=>`d${mr}: u32`).join(", "),St=u.map(mr=>`d${mr}`).join(", ");return`
  fn get_${e}(${rt}) -> ${y} {
    return get_${e}ByIndices(${bt(St)});
  }`})(),Tr=(...rt)=>{if(rt.length!==o)throw new Error(`indices length must be ${o}`);let St=rt.map(A).join(",");return o===0?Sr("0u"):o===1?Sr(St[0]):(P.get=!0,P.getByIndices=!0,P.indicesToOffset=!0,`get_${e}(${St})`)},xr=rt=>o<2?Sr(rt):(P.getByIndices=!0,P.indicesToOffset=!0,`get_${e}ByIndices(${rt})`),Xt=o<2?"":`
  fn set_${e}ByIndices(indices: ${x.indices}, value: ${y}) {
    ${ur(`i2o_${e}(indices)`,"value")}
  }`,yr=o<2?"":(()=>{let rt=u.map(mr=>`d${mr}: u32`).join(", "),St=u.map(mr=>`d${mr}`).join(", ");return`
  fn set_${e}(${rt}, value: ${y}) {
    set_${e}ByIndices(${bt(St)}, value);
  }`})();return{impl:()=>{let rt=[],St=!1;return P.offsetToIndices&&(rt.push(re),St=!0),P.indicesToOffset&&(rt.push(qe),St=!0),P.broadcastedIndicesToOffset&&(Object.values(lr).forEach(mr=>rt.push(mr)),St=!0),P.set&&(rt.push(yr),St=!0),P.setByIndices&&(rt.push(Xt),St=!0),P.get&&(rt.push(Qt),St=!0),P.getByIndices&&(rt.push(or),St=!0),!s&&St&&rt.unshift(`const ${Q} = ${x.indices}(${r.join(",")});`,`const ${K} = ${x.indices}(${Ie.computeStrides(r).join(",")});`),rt.join(`
`)},type:x,offsetToIndices:de,indicesToOffset:Fe,broadcastedIndicesToOffset:Zt,indices:bt,indicesGet:Vt,indicesSet:jt,set:(...rt)=>{if(rt.length!==o+1)throw new Error(`indices length must be ${o}`);let St=rt[o];if(typeof St!="string")throw new Error("value must be string");let mr=rt.slice(0,o).map(A).join(",");return o===0?ur("0u",St):o===1?ur(mr[0],St):(P.set=!0,P.setByIndices=!0,P.indicesToOffset=!0,`set_${e}(${mr}, ${St})`)},setByOffset:ur,setByIndices:(rt,St)=>o<2?ur(rt,St):(P.setByIndices=!0,P.indicesToOffset=!0,`set_${e}ByIndices(${rt}, ${St});`),get:Tr,getByOffset:Sr,getByIndices:xr,usage:n,name:e,strides:K,shape:Q,rank:o}},lt=(e,t,r,n=1)=>is(e,t,r,"input",n),Kt=(e,t,r,n=1)=>is(e,t,r,"output",n),$s=(e,t,r,n=1)=>is(e,t,r,"internal",n),Ss=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=pn){let t=typeof e=="number"?e:e[0],r=typeof e=="number"?1:e[1],n=typeof e=="number"?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||n>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*r*n>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=i?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${t*r*n}u + local_idx;`;return`@compute @workgroup_size(${t}, ${r}, ${n})
  fn main(${s}) {
    ${o}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let r=e.usage==="input"?"read":"read_write",n=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${r}> ${e.name}: array<${n}>;`}declareVariables(...e){return e.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(e,t,r=1){return this.uniforms.push({name:e,type:t,length:r}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:t,type:r,length:n}of this.uniforms)if(n&&n>4)r==="f16"?e.push(`@align(16) ${t}:array<mat2x4<${r}>, ${Math.ceil(n/8)}>`):e.push(`${t}:array<vec4<${r}>, ${Math.ceil(n/4)}>`);else{let i=n==null||n===1?r:`vec${n}<${r}>`;e.push(`${t}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},pa=(e,t)=>new Ss(e,t),Mi=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;i++){let s=r-1-i,o=e[s]||1;(t[t.length-1-i]||1)>1&&o===1&&n.unshift(s)}return n}}),ha,ks,si,fa,$d,Mn,Sd,ma,jn=R(()=>{rr(),Jt(),kr(),fr(),ha=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},ks=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,si=(e,t)=>Ie.sortBasedOnPerm(e,ks(e.length,t)),fa=(e,t,r,n)=>{let i=`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`;for(let s=0;s<t;++s)i+=r.indicesSet("a",e[s],`i[${s}]`);return i+="return a;}"},$d=(e,t)=>{let r=[],n=[];for(let i=0;i<e.length;++i)e[i]!==1&&r.push(e[i]),e[t[i]]!==1&&n.push(t[i]);return{newShape:r,newPerm:n}},Mn=(e,t)=>{let r=e.dataType,n=e.dims.length,i=ks(n,t),s=si(e.dims,i),{newShape:o,newPerm:u}=$d(e.dims,i),d=Ie.areEqual(u,[2,3,1]),h=Ie.areEqual(u,[3,1,2]),y=o.length===2&&u[0]>u[1]||d||h,l=y?o:e.dims,x=s;y&&(l=d?[o[0],o[1]*o[2]]:h?[o[0]*o[1],o[2]]:o,x=[l[1],l[0]]);let A=lt("a",r,l.length),P=Kt("output",r,x.length),S=16,Q;return y?Q=K=>`
  ${K.registerUniform("output_size","u32").declareVariables(A,P)}
  var<workgroup> tile : array<array<${P.type.value}, ${S+1}>, ${S}>;
  ${K.mainStart([S,S,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${S} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${S}u + local_id.x;
    let input_row = workgroup_id_x * ${S}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${A.getByIndices(`${A.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${S}u + local_id.x;
    let output_row = workgroup_id_y * ${S}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${P.setByIndices(`${P.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`:Q=K=>`
  ${K.registerUniform("output_size","u32").declareVariables(A,P)}

  ${fa(i,n,A,P)}

  ${K.mainStart()}
    ${K.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${P.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${P.setByOffset("global_idx",A.getByIndices("aIndices"))}
  }`,{name:y?"TransposeShared":"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let K=Ie.size(s);return{outputs:[{dims:s,dataType:e.dataType}],dispatchGroup:y?{x:Math.ceil(x[1]/S),y:Math.ceil(x[0]/S)}:{x:Math.ceil(K/64)},programUniforms:[{type:12,data:K},...Ot(l,x)]}},getShaderSource:Q}},Sd=(e,t)=>{ha(e.inputs),e.compute(Mn(e.inputs[0],t.perm))},ma=e=>hr({perm:e.perm})}),_a,ga,wa,ya,ba,Ps,Ma,va,As,xa,Pn,Is,Ta,Ea,Fs,Ca,$a,Os,Sa,ka,Bs,kd=R(()=>{rr(),Jt(),fr(),Gs(),jn(),_a={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},ga={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},wa={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},ya={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ba=(e,t)=>{let r=[];for(let n=t-e;n<t;++n)r.push(n);return r},Ps=(e,t)=>{let r=[],n=e.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&r.push(e[s]);let i=t.map(s=>e[s]);return[r,i]},Ma=(e,t)=>{let r=e.length+t.length,n=[],i=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?n.push(e[i++]):n.push(1);return n},va=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},As=(e,t)=>{let r=[];if(!va(e,t)){for(let n=0;n<t;++n)e.indexOf(n)===-1&&r.push(n);e.forEach(n=>r.push(n))}return r},xa=(e,t,r,n,i,s,o)=>{let u=r[0].dims,d=Ie.size(s),h=Ie.size(o),y=lt("_A",r[0].dataType,u),l=Kt("output",i,s),x=32,A=`
          var<workgroup> aBestValues : array<f32, ${x}>;
       `;return{name:e,shaderCache:t,getShaderSource:P=>`
        ${P.registerUniform("reduceSize","u32").declareVariables(y,l)}
        ${A}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${P.mainStart(x)}

          let outputIndex = global_idx / ${x};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${wa[n]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${x}) {
           let candidate = f32(${y.getByOffset("offset + k")});
           bestValue = ${_a[n]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${x}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${ga[n]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${l.setByOffset("outputIndex",`${n==="mean"?`${l.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${l.type.storage}(${ya[n]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:d},programUniforms:[{type:12,data:h}]})}},Pn=(e,t,r,n)=>{let i=e.inputs.length===1?r:Ds(e.inputs,r),s=i.axes;s.length===0&&!i.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((A,P)=>P));let o=Ie.normalizeAxes(s,e.inputs[0].dims.length),u=o,d=e.inputs[0],h=As(u,e.inputs[0].dims.length);h.length>0&&(d=e.compute(Mn(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],u=ba(u.length,d.dims.length));let[y,l]=Ps(d.dims,u),x=y;i.keepDims&&(x=Ma(y,o)),e.compute(xa(t,{hint:i.cacheKey,inputDependencies:["type"]},[d],n,e.inputs[0].dataType,x,l),{inputs:[d]})},Is=(e,t)=>{Pn(e,"ReduceMeanShared",t,"mean")},Ta=(e,t)=>{Pn(e,"ReduceL1Shared",t,"l1")},Ea=(e,t)=>{Pn(e,"ReduceL2Shared",t,"l2")},Fs=(e,t)=>{Pn(e,"ReduceLogSumExpShared",t,"logSumExp")},Ca=(e,t)=>{Pn(e,"ReduceMaxShared",t,"max")},$a=(e,t)=>{Pn(e,"ReduceMinShared",t,"min")},Os=(e,t)=>{Pn(e,"ReduceProdShared",t,"prod")},Sa=(e,t)=>{Pn(e,"ReduceSumShared",t,"sum")},ka=(e,t)=>{Pn(e,"ReduceSumSquareShared",t,"sumSquare")},Bs=(e,t)=>{Pn(e,"ReduceLogSumShared",t,"logSum")}}),An,zs,ss,Ds,Tn,Pa,Aa,Ls,Ia,Fa,Rs,Oa,Ba,Ns,za,In,js,Da,La,Us,Ra,Na,Vs,ja,Ua,Ws,Gs=R(()=>{rr(),Jt(),kr(),fr(),kd(),An=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},zs=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],ss=(e,t,r,n,i,s,o=!1,u=!1)=>{let d=[],h=r[0].dims,y=h.length,l=Ie.normalizeAxes(i,y),x=!u&&l.length===0;h.forEach((S,Q)=>{x||l.indexOf(Q)>=0?o&&d.push(1):d.push(S)});let A=d.length,P=Ie.size(d);return{name:e,shaderCache:t,getShaderSource:S=>{let Q=[],K=lt("_A",r[0].dataType,y),F=Kt("output",s,A),re=n(K,F,l),de=re[2];for(let ge=0,qe=0;ge<y;ge++)x||l.indexOf(ge)>=0?(o&&qe++,de=`for(var j${ge}: u32 = 0; j${ge} < ${h[ge]}; j${ge}++) {
                  ${re[2].includes("last_index")?`let last_index = j${ge};`:""}
                  ${K.indicesSet("input_indices",ge,`j${ge}`)}
                  ${de}
                }`):(Q.push(`${K.indicesSet("input_indices",ge,F.indicesGet("output_indices",qe))};`),qe++);return`

        ${S.registerUniform("output_size","u32").declareVariables(K,F)}

        ${S.mainStart()}
          ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${K.type.indices};
          let output_indices = ${F.offsetToIndices("global_idx")};

          ${Q.join(`
`)}
          ${re[0]}       // init ops for reduce max/min
          ${re[1]}
          ${de}
          ${re[3]}
          ${re.length===4?F.setByOffset("global_idx","value"):re.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:d,dataType:s}],dispatchGroup:{x:Math.ceil(P/64)},programUniforms:[{type:12,data:P},...Ot(h,d)]})}},Ds=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),hr({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Tn=(e,t,r,n)=>{let i=e.inputs,s=i.length===1?r:Ds(i,r);e.compute(ss(t,{hint:s.cacheKey,inputDependencies:["rank"]},[i[0]],s.noopWithEmptyAxes&&s.axes.length===0?zs:n,s.axes,i[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},Pa=(e,t)=>{An(e.inputs),Tn(e,"ReduceLogSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,"value = log(value);"])},Aa=(e,t)=>{An(e.inputs),Tn(e,"ReduceL1",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${r.getByIndices("input_indices")});`,""])},Ls=(e,t)=>{An(e.inputs),Tn(e,"ReduceL2",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ia=(e,t)=>{An(e.inputs),Tn(e,"ReduceLogSumExp",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${r.getByIndices("input_indices")});`,"value = log(value);"])},Fa=(e,t)=>{An(e.inputs),Tn(e,"ReduceMax",t,(r,n,i)=>{let s=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&s.push(r.indicesSet("input_indices",o,0));return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = max(value, ${r.getByIndices("input_indices")});`,""]})},Rs=(e,t)=>{An(e.inputs),Tn(e,"ReduceMean",t,(r,n,i)=>{let s=1;for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&(s*=e.inputs[0].dims[o]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${s});`]})},Oa=(e,t)=>{An(e.inputs),Tn(e,"ReduceMin",t,(r,n,i)=>{let s=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&s.push(`input_indices[${o}] = 0;`);return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = min(value, ${r.getByIndices("input_indices")});`,""]})},Ba=(e,t)=>{An(e.inputs),Tn(e,"ReduceProd",t,(r,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${r.getByIndices("input_indices")};`,""])},Ns=(e,t)=>{An(e.inputs),Tn(e,"ReduceSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,""])},za=(e,t)=>{An(e.inputs),Tn(e,"ReduceSumSquare",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += t * t;`,""])},In=(e,t,r)=>{if(t.length===0)return r;let n=1,i=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?n*=e[s]:i*=e[s];return i<32&&n>1024},js=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Rs(e,t):Is(e,t)},Da=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Aa(e,t):Ta(e,t)},La=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ls(e,t):Ea(e,t)},Us=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ia(e,t):Fs(e,t)},Ra=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Fa(e,t):Ca(e,t)},Na=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Oa(e,t):$a(e,t)},Vs=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ba(e,t):Os(e,t)},ja=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ns(e,t):Sa(e,t)},Ua=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?za(e,t):ka(e,t)},Ws=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Pa(e,t):Bs(e,t)}}),qs,Hs,Va,Ks,Wa=R(()=>{rr(),kr(),Gs(),qs=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Hs=(e,t)=>{qs(e.inputs);let r=(n,i,s)=>{let o=[];for(let u=0;u<n.rank;u++)(s.indexOf(u)>=0||s.length===0)&&o.push(`input_indices[${u}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(ss("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Va=(e,t)=>{qs(e.inputs);let r=(n,i,s)=>{let o=[];for(let u=0;u<n.rank;u++)(s.indexOf(u)>=0||s.length===0)&&o.push(`input_indices[${u}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(ss("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Ks=e=>hr(e)}),Ga,os,Xs,qa,Ha,vi,Ka,Xa,as=R(()=>{rr(),Jt(),pe(),fr(),Ga=(e,t)=>{let r=e[0],n=e[1],i=e[2],s=e[3],o=e[4],u=e[5];if(o&&u)throw new Error("Attention cannot have both past and attention_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let d=r.dims[0],h=r.dims[1],y=r.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(n.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(n.dims[0]!==y)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==n.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let l=i.dims[0]/3,x=l,A=x;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let re of t.qkvHiddenSizes)if(re%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");l=t.qkvHiddenSizes[0],x=t.qkvHiddenSizes[1],A=t.qkvHiddenSizes[2]}let P=h;if(l!==x)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==l+x+A)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let S=0;if(o){if(x!==A)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(o.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(o.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==d)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==x/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(S=o.dims[3])}let Q=P+S,K=-1,F=0;if(s)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(u){if(u.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(u.dims[0]!==d||u.dims[1]!==t.numHeads||u.dims[2]!==h||u.dims[3]!==Q)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:d,sequenceLength:h,pastSequenceLength:S,kvSequenceLength:P,totalSequenceLength:Q,maxSequenceLength:K,inputHiddenSize:y,hiddenSize:l,vHiddenSize:A,headSize:Math.floor(l/t.numHeads),vHeadSize:Math.floor(A/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:F,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},os=(e,t,r)=>t&&e?`
      let total_sequence_length_input = u32(${t.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e?.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${r?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,Xs=(e,t,r,n,i,s,o,u)=>{let d=br(o?1:s),h=64,y=s/d;y<h&&(h=32);let l=Math.ceil(s/d/h),x=[{type:12,data:t},{type:12,data:r},{type:12,data:n},{type:12,data:i},{type:12,data:y},{type:12,data:l}],A=gr(e.dataType,d),P=Br(1,d),S=["type"];o&&S.push("type"),u&&S.push("type");let Q=K=>{let F=Kt("x",e.dataType,e.dims,d),re=[F],de=o?lt("seq_lens",o.dataType,o.dims):void 0;de&&re.push(de);let ge=u?lt("total_sequence_length_input",u.dataType,u.dims):void 0;ge&&re.push(ge);let qe=Br(e.dataType),Fe=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${h}>;
  var<workgroup> thread_sum: array<f32, ${h}>;
  ${K.registerUniforms(Fe).declareVariables(...re)}
  ${K.mainStart([h,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${os(de,ge,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${h}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${o?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${P}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${P}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(d){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${d}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${h}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${P}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${P}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(d){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${d}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${h}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${F.type.value}(${qe}(1.0) / ${qe}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${P}(x[offset + i]);
        x[offset + i] = ${F.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${o?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${F.type.value}(${qe}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${h};${A};${d}`,inputDependencies:S},getShaderSource:Q,getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(s/h),y:i,z:t*r},programUniforms:x})}},qa=(e,t,r,n,i,s,o,u,d)=>{let h=o+s.kvSequenceLength,y=[s.batchSize,s.numHeads,s.sequenceLength,h],l=e>1&&n,x=s.kvNumHeads?s.kvNumHeads:s.numHeads,A=l?[s.batchSize,x,h,s.headSize]:void 0,P=s.nReps?s.nReps:1,S=s.scale===0?1/Math.sqrt(s.headSize):s.scale,Q=br(s.headSize),K=s.headSize/Q,F=12,re={x:Math.ceil(h/F),y:Math.ceil(s.sequenceLength/F),z:s.batchSize*s.numHeads},de=[{type:12,data:s.sequenceLength},{type:12,data:K},{type:12,data:h},{type:12,data:s.numHeads},{type:12,data:s.headSize},{type:1,data:S},{type:12,data:o},{type:12,data:s.kvSequenceLength},{type:12,data:P}],ge=l&&n&&Ie.size(n.dims)>0,qe=["type","type"];ge&&qe.push("type"),i&&qe.push("type"),u&&qe.push("type"),d&&qe.push("type");let Fe=[{dims:y,dataType:t.dataType,gpuDataType:0}];l&&Fe.push({dims:A,dataType:t.dataType,gpuDataType:0});let bt=Vt=>{let jt=lt("q",t.dataType,t.dims,Q),lr=lt("key",r.dataType,r.dims,Q),Zt=[jt,lr];if(ge){let Xt=lt("past_key",n.dataType,n.dims,Q);Zt.push(Xt)}i&&Zt.push(lt("attention_bias",i.dataType,i.dims));let ur=u?lt("seq_lens",u.dataType,u.dims):void 0;ur&&Zt.push(ur);let Sr=d?lt("total_sequence_length_input",d.dataType,d.dims):void 0;Sr&&Zt.push(Sr);let or=Kt("output",t.dataType,y),Qt=[or];l&&Qt.push(Kt("present_key",t.dataType,A,Q));let Tr=Br(1,Q),xr=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${F}u;

  var<workgroup> tileQ: array<${jt.type.storage}, ${F*F}>;
  var<workgroup> tileK: array<${jt.type.storage}, ${F*F}>;
  ${Vt.registerUniforms(xr).declareVariables(...Zt,...Qt)}
  ${Vt.mainStart([F,F,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${P===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${P===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${os(ur,Sr,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${ge&&l?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${l?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${Tr}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${ge&&l?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${l?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${Tr}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(Q){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${Q}`)}})()};
        output[outputIdx] = ${or.type.value} (sum * uniforms.alpha) + ${i?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${Q};${i!==void 0};${n!==void 0};${e}`,inputDependencies:qe},getRunData:()=>({outputs:Fe,dispatchGroup:re,programUniforms:de}),getShaderSource:bt}},Ha=(e,t,r,n,i,s,o=void 0,u=void 0)=>{let d=s+i.kvSequenceLength,h=i.nReps?i.nReps:1,y=i.vHiddenSize*h,l=e>1&&n,x=i.kvNumHeads?i.kvNumHeads:i.numHeads,A=l?[i.batchSize,x,d,i.headSize]:void 0,P=[i.batchSize,i.sequenceLength,y],S=12,Q={x:Math.ceil(i.vHeadSize/S),y:Math.ceil(i.sequenceLength/S),z:i.batchSize*i.numHeads},K=[{type:12,data:i.sequenceLength},{type:12,data:d},{type:12,data:i.vHeadSize},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:12,data:y},{type:12,data:s},{type:12,data:i.kvSequenceLength},{type:12,data:h}],F=l&&n&&Ie.size(n.dims)>0,re=["type","type"];F&&re.push("type"),o&&re.push("type"),u&&re.push("type");let de=[{dims:P,dataType:t.dataType,gpuDataType:0}];l&&de.push({dims:A,dataType:t.dataType,gpuDataType:0});let ge=qe=>{let Fe=lt("probs",t.dataType,t.dims),bt=lt("v",r.dataType,r.dims),Vt=[Fe,bt];F&&Vt.push(lt("past_value",n.dataType,n.dims));let jt=o?lt("seq_lens",o.dataType,o.dims):void 0;o&&Vt.push(jt);let lr=u?lt("total_sequence_length_input",u.dataType,u.dims):void 0;u&&Vt.push(lr);let Zt=[Kt("output",t.dataType,P)];l&&Zt.push(Kt("present_value",t.dataType,A));let ur=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${S}u;
  var<workgroup> tileQ: array<${Fe.type.value}, ${S*S}>;
  var<workgroup> tileV: array<${Fe.type.value}, ${S*S}>;
  ${qe.registerUniforms(ur).declareVariables(...Vt,...Zt)}
  ${qe.mainStart([S,S,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${h===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${h===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${os(jt,lr,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${F&&l?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${l?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${Fe.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${F&&l?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${l?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${n!==void 0};${e}`,inputDependencies:re},getRunData:()=>({outputs:de,dispatchGroup:Q,programUniforms:K}),getShaderSource:ge}},vi=(e,t,r,n,i,s,o,u,d,h,y=void 0,l=void 0)=>{let x=Math.min(e.outputCount,1+(o?1:0)+(u?1:0)),A=x>1?h.pastSequenceLength:0,P=A+h.kvSequenceLength,S=d&&Ie.size(d.dims)>0?d:void 0,Q=[t,r];x>1&&o&&Ie.size(o.dims)>0&&Q.push(o),S&&Q.push(S),y&&Q.push(y),l&&Q.push(l);let K=e.compute(qa(x,t,r,o,S,h,A,y,l),{inputs:Q,outputs:x>1?[-1,1]:[-1]})[0];e.compute(Xs(K,h.batchSize,h.numHeads,A,h.sequenceLength,P,y,l),{inputs:y&&l?[K,y,l]:[K],outputs:[]});let F=[K,n];x>1&&u&&Ie.size(u.dims)>0&&F.push(u),y&&F.push(y),l&&F.push(l),e.compute(Ha(x,K,n,u,h,A,y,l),{inputs:F,outputs:x>1?[0,2]:[0]})},Ka=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],n=t.sequenceLength,i=t.inputHiddenSize,s=t.headSize,o=12,u={x:Math.ceil(t.headSize/o),y:Math.ceil(t.sequenceLength/o),z:t.batchSize*t.numHeads},d=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:n},{type:12,data:i},{type:12,data:s},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],y=l=>{let x=Kt("output_q",d[0].dataType,r),A=Kt("output_k",d[0].dataType,r),P=Kt("output_v",d[0].dataType,r),S=lt("input",d[0].dataType,d[0].dims),Q=lt("weight",d[1].dataType,d[1].dims),K=lt("bias",d[2].dataType,d[2].dims),F=S.type.storage,re=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileInput: array<${F}, ${o*o}>;
  var<workgroup> tileWeightQ: array<${F}, ${o*o}>;
  var<workgroup> tileWeightK: array<${F}, ${o*o}>;
  var<workgroup> tileWeightV: array<${F}, ${o*o}>;
  ${l.registerUniforms(re).declareVariables(S,Q,K,x,A,P)}
  ${l.mainStart([o,o,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${F}(0);
    var valueK = ${F}(0);
    var valueV = ${F}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:u,programUniforms:h}),getShaderSource:y},{inputs:d,outputs:[-1,-1,-1]})},Xa=(e,t)=>{let r=Ga(e.inputs,t),[n,i,s]=Ka(e,r);return vi(e,n,i,s,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r)}}),Qa,Ya,Qs,Za,Pd=R(()=>{c(),rr(),Jt(),kr(),fr(),Qa=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(n,i,s)=>{let o=i.length;if(o!==n.length)throw new Error(`${s}: num dimensions != ${o}`);i.forEach((u,d)=>{if(u!==n[d])throw new Error(`${s}: dim[${d}] do not match`)})};if(e[0].dims.length>1){let n=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,n,"Invalid input scale"),r(e[2].dims,n,"Invalid input B"),r(e[3].dims,n,"Invalid input mean"),r(e[4].dims,n,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Ya=(e,t)=>{let{epsilon:r,spatial:n,format:i}=t,s=e[0].dims,o=n?br(s[s.length-1]):1,u=i==="NHWC"&&s.length>1?o:1,d=Ie.size(s)/o,h=n,y=h?s.length:s,l=lt("x",e[0].dataType,e[0].dims,o),x=lt("scale",e[1].dataType,e[1].dims,u),A=lt("bias",e[2].dataType,e[2].dims,u),P=lt("inputMean",e[3].dataType,e[3].dims,u),S=lt("inputVar",e[4].dataType,e[4].dims,u),Q=Kt("y",e[0].dataType,y,o),K=()=>{let re="";if(n)re=`let cOffset = ${s.length===1?"0u":i==="NHWC"?`outputIndices[${s.length-1}] / ${o}`:"outputIndices[1]"};`;else if(i==="NCHW")re=`
            ${Q.indicesSet("outputIndices","0","0")}
            let cOffset = ${Q.indicesToOffset("outputIndices")};`;else{re=`var cIndices = ${x.type.indices}(0);
                       cIndices[0] = outputIndices[${s.length-1}];`;for(let de=1;de<x.rank;de++)re+=`cIndices[${de}] = outputIndices[${de}];`;re+=`let cOffset = ${x.indicesToOffset("cIndices")};`}return re},F=re=>`
  const epsilon = ${r};
  ${re.registerUniform("outputSize","u32").declareVariables(l,x,A,P,S,Q)}
  ${re.mainStart()}
  ${re.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${Q.offsetToIndices(`global_idx * ${o}`)};
    ${K()}
    let scale = ${x.getByOffset("cOffset")};
    let bias = ${A.getByOffset("cOffset")};
    let inputMean = ${P.getByOffset("cOffset")};
    let inputVar = ${S.getByOffset("cOffset")};
    let x = ${l.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${Q.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${n}_${o}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:F,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:h?[{type:12,data:d},...Ot(s)]:[{type:12,data:d}]})}},Qs=e=>hr(e),Za=(e,t)=>{let{inputs:r,outputCount:n}=e,i=Qs({...t,outputCount:n});if(I.webgpu.validateInputContent&&Qa(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Ya(r,i))}}),Ys,Ja,el,tl=R(()=>{Jt(),fr(),Ys=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Ja=e=>{let t=e[0].dims,r=e[0].dims[2],n=Ie.size(t)/4,i=e[0].dataType,s=lt("input",i,t,4),o=lt("bias",i,[r],4),u=lt("residual",i,t,4),d=Kt("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:h=>`
  const channels = ${r}u / 4;
  ${h.declareVariables(s,o,u,d)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let value = ${s.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${u.getByOffset("global_idx")};
    ${d.setByOffset("global_idx","value")}
  }`}},el=e=>{Ys(e.inputs),e.compute(Ja(e.inputs))}}),rl,Ir,Zs,nl,il,sl,ol,Js,al,ll,ul,dl,eo,cl,pl,hl,Ri,to,ls,fl,ro,ml,_l,no,gl,wl,io,yl,bl,so,Ml,vl,us,xl,Tl,ds,oo,ao,cs,El,Cl,$l,lo,Sl,kl,uo=R(()=>{rr(),Jt(),kr(),fr(),rl=(e,t,r,n,i,s,o)=>{let u=Math.ceil(t/4),d="";typeof i=="string"?d=`${i}(a)`:d=i("a");let h=lt("inputData",r,[u],4),y=Kt("outputData",n,[u],4),l=[{name:"vec_size",type:"u32"}];return o&&l.push(...o),`
      ${e.registerUniforms(l).declareVariables(h,y)}

  ${s??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${h.getByOffset("global_idx")};
    ${y.setByOffset("global_idx",d)}
  }`},Ir=(e,t,r,n,i,s=e.dataType,o,u)=>{let d=[{type:12,data:Math.ceil(Ie.size(e.dims)/4)}];return o&&d.push(...o),{name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:h=>rl(h,Ie.size(e.dims),e.dataType,s,r,n,u),getRunData:h=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(Ie.size(h[0].dims)/64/4)},programUniforms:d})}},Zs=e=>{e.compute(Ir(e.inputs[0],"Abs","abs"))},nl=e=>{e.compute(Ir(e.inputs[0],"Acos","acos"))},il=e=>{e.compute(Ir(e.inputs[0],"Acosh","acosh"))},sl=e=>{e.compute(Ir(e.inputs[0],"Asin","asin"))},ol=e=>{e.compute(Ir(e.inputs[0],"Asinh","asinh"))},Js=e=>{e.compute(Ir(e.inputs[0],"Atan","atan"))},al=e=>{e.compute(Ir(e.inputs[0],"Atanh","atanh"))},ll=e=>hr(e),ul=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(Ir(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},dl=e=>{let t,r,n=e.length>=2&&e[1].data!==0,i=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:t=n?e[1].getFloat32Array()[0]:-34028234663852886e22,r=i?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=n?e[1].getUint16Array()[0]:64511,r=i?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return hr({min:t,max:r})},eo=(e,t)=>{let r=t||dl(e.inputs),n=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"Clip",i=>`clamp(${i}, vec4<${n}>(uniforms.min), vec4<${n}>(uniforms.max))`,void 0,r.cacheKey,void 0,[{type:e.inputs[0].dataType,data:r.min},{type:e.inputs[0].dataType,data:r.max}],[{name:"min",type:n},{name:"max",type:n}]),{inputs:[0]})},cl=e=>{e.compute(Ir(e.inputs[0],"Ceil","ceil"))},pl=e=>{e.compute(Ir(e.inputs[0],"Cos","cos"))},hl=e=>{e.compute(Ir(e.inputs[0],"Cosh","cosh"))},Ri=e=>hr(e),to=(e,t)=>{let r=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},ls=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,fl=e=>{let t=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,ls(t)))},ro=e=>{e.compute(Ir(e.inputs[0],"Exp","exp"))},ml=e=>{e.compute(Ir(e.inputs[0],"Floor","floor"))},_l=e=>{let t=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,ls(t)))},no=(e,t)=>{let r=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},gl=e=>{e.compute(Ir(e.inputs[0],"Not",t=>`!${t}`))},wl=e=>{e.compute(Ir(e.inputs[0],"Neg",t=>`-${t}`))},io=e=>{e.compute(Ir(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},yl=e=>{let t=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},bl=e=>{e.compute(Ir(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},so=e=>hr(e),Ml=(e,t)=>{let r=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"HardSigmoid",n=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${n} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},vl=e=>{e.compute(Ir(e.inputs[0],"Sin","sin"))},us=e=>{e.compute(Ir(e.inputs[0],"Sinh","sinh"))},xl=e=>{e.compute(Ir(e.inputs[0],"Sqrt","sqrt"))},Tl=e=>{e.compute(Ir(e.inputs[0],"Tan","tan"))},ds=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,oo=e=>{e.compute(Ir(e.inputs[0],"Tanh",ds))},ao=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${ds("v")};
}
`,cs=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,El=e=>{let t=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"FastGelu",cs,ao(t),void 0,e.inputs[0].dataType))},Cl=(e,t)=>{let r=Br(e.inputs[0].dataType);return e.compute(Ir(e.inputs[0],"ThresholdedRelu",n=>`select(vec4<${r}>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},$l=e=>{e.compute(Ir(e.inputs[0],"Log","log"))},lo=(e,t)=>`
const alpha = vec4<${e}>(${t});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,Sl=e=>`quick_gelu_impl(${e})`,kl=(e,t)=>{let r=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"QuickGelu",Sl,lo(r,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),co,Pl,Al,Il=R(()=>{Jt(),fr(),uo(),co=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Pl=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=lt("input",e[0].dataType,e[0].dims,4),n=lt("bias",e[0].dataType,[e[0].dims[2]],4),i=Kt("output",e[0].dataType,t,4),s=Ie.size(t)/4,o=gr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${u.declareVariables(r,n,i)}

  ${ls(o)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Al=e=>{co(e.inputs),e.compute(Pl(e.inputs))}}),Fl,Ol,En,Bl,zl,po,Dl,Ll,ho,Rl,Nl,fo,jl,Ad=R(()=>{rr(),Jt(),fr(),Fl=(e,t,r,n,i,s,o,u,d,h,y,l)=>{let x,A;typeof u=="string"?x=A=(F,re)=>`${u}((${F}),(${re}))`:typeof u=="function"?x=A=u:(x=u.scalar,A=u.vector);let P=Kt("outputData",y,n.length,4),S=lt("aData",d,t.length,4),Q=lt("bData",h,r.length,4),K;if(i)if(s){let F=Ie.size(t)===1,re=Ie.size(r)===1,de=t.length>0&&t[t.length-1]%4===0,ge=r.length>0&&r[r.length-1]%4===0;F||re?K=P.setByOffset("global_idx",A(F?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"),re?`${Q.type.value}(${Q.getByOffset("0")}.x)`:Q.getByOffset("global_idx"))):K=`
            let outputIndices = ${P.offsetToIndices("global_idx * 4u")};
            let offsetA = ${S.broadcastedIndicesToOffset("outputIndices",P)};
            let offsetB = ${Q.broadcastedIndicesToOffset("outputIndices",P)};
            ${P.setByOffset("global_idx",A(o||de?S.getByOffset("offsetA / 4u"):`${S.type.value}(${S.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||ge?Q.getByOffset("offsetB / 4u"):`${Q.type.value}(${Q.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else K=P.setByOffset("global_idx",A(S.getByOffset("global_idx"),Q.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let F=(re,de,ge="")=>{let qe=`aData[indexA${de}][componentA${de}]`,Fe=`bData[indexB${de}][componentB${de}]`;return`
            let outputIndices${de} = ${P.offsetToIndices(`global_idx * 4u + ${de}u`)};
            let offsetA${de} = ${S.broadcastedIndicesToOffset(`outputIndices${de}`,P)};
            let offsetB${de} = ${Q.broadcastedIndicesToOffset(`outputIndices${de}`,P)};
            let indexA${de} = offsetA${de} / 4u;
            let indexB${de} = offsetB${de} / 4u;
            let componentA${de} = offsetA${de} % 4u;
            let componentB${de} = offsetB${de} % 4u;
            ${re}[${de}] = ${ge}(${x(qe,Fe)});
          `};y===9?K=`
            var data = vec4<u32>(0);
            ${F("data",0,"u32")}
            ${F("data",1,"u32")}
            ${F("data",2,"u32")}
            ${F("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:K=`
            ${F("outputData[global_idx]",0)}
            ${F("outputData[global_idx]",1)}
            ${F("outputData[global_idx]",2)}
            ${F("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(S,Q,P)}

        ${l??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${K}
      }`},Ol=(e,t,r,n,i,s,o=r.dataType)=>{let u=!Ie.areEqual(r.dims,n.dims),d=r.dims,h=Ie.size(r.dims),y=!1,l=!1,x=[u];if(u){let A=Sn.calcShape(r.dims,n.dims,!1);if(!A)throw new Error("Can't perform binary op on the given tensors");d=A,h=Ie.size(d);let P=Ie.size(r.dims)===1,S=Ie.size(n.dims)===1,Q=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,K=n.dims.length>0&&n.dims[n.dims.length-1]%4===0;x.push(P),x.push(S),x.push(Q),x.push(K);let F=1;for(let re=1;re<d.length;re++){let de=r.dims[r.dims.length-re]??1,ge=n.dims[n.dims.length-re]??1;if(de===ge)F*=de;else break}F%4===0?(l=!0,y=!0):(P||S||Q||K)&&(y=!0)}else y=!0;return x.push(y),{name:e,shaderCache:{hint:t+x.map(A=>A.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:A=>Fl(A,r.dims,n.dims,d,y,u,l,i,r.dataType,n.dataType,o,s),getRunData:()=>({outputs:[{dims:d,dataType:o}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(Ie.size(d)/4)},...Ot(r.dims,n.dims,d)]})}},En=(e,t,r,n,i,s)=>{e.compute(Ol(t,i??"",e.inputs[0],e.inputs[1],r,n,s))},Bl=e=>{En(e,"Add",(t,r)=>`${t}+${r}`)},zl=e=>{En(e,"Div",(t,r)=>`${t}/${r}`)},po=e=>{En(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Dl=e=>{En(e,"Mul",(t,r)=>`${t}*${r}`)},Ll=e=>{let t=lt("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;En(e,"Pow",{scalar:(r,n)=>`pow_custom(${r},${n})`,vector:(r,n)=>`pow_vector_custom(${r},${n})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},ho=e=>{En(e,"Sub",(t,r)=>`${t}-${r}`)},Rl=e=>{En(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Nl=e=>{En(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},fo=e=>{En(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},jl=e=>{En(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),Ul,Vl,ps,Wl,Gl,ql,Id=R(()=>{rr(),Jt(),kr(),fr(),Ul=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,n=e[r],i=n.dataType,s=n.dims.length;e.forEach((o,u)=>{if(u!==r){if(o.dataType!==i)throw new Error("input tensors should be one type");if(o.dims.length!==s)throw new Error("input tensors should have the same shape");o.dims.forEach((d,h)=>{if(h!==t&&d!==n.dims[h])throw new Error("non concat dimensions must match")})}})},Vl=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,ps=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;++i){let s=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?n.push(s):i===0?n.push(`if (inputIndex == ${i}u) { ${s} }`):i===r-1?n.push(`else { ${s} }`):n.push(`else if (inputIndex == ${i}) { ${s} }`)}return n.join(`
`)},Wl=(e,t,r,n)=>{let i=Ie.size(r),s=new Array(e.length),o=new Array(e.length),u=0,d=[],h=[],y=[{type:12,data:i}];for(let S=0;S<e.length;++S)u+=e[S].dims[t],s[S]=u,h.push(e[S].dims.length),o[S]=lt(`input${S}`,n,h[S]),d.push("rank"),y.push({type:12,data:s[S]});for(let S=0;S<e.length;++S)y.push(...Ot(e[S].dims));y.push(...Ot(r));let l=Kt("output",n,r.length),x=l.indicesGet("indices",t),A=Array.from(Array(s.length).keys()).map(S=>`uniforms.sizeInConcatAxis${S}`).join(","),P=S=>`

  ${(()=>{S.registerUniform("outputSize","u32");for(let Q=0;Q<e.length;Q++)S.registerUniform(`sizeInConcatAxis${Q}`,"u32");return S.declareVariables(...o,l)})()}

  ${Vl(s.length,A)}

  ${S.mainStart()}
    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${l.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${x});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${s.length}u>(${A});
      ${x} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${ps(o,l)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:r,dataType:n}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:y}),getShaderSource:P}},Gl=(e,t)=>{let r=e.inputs,n=r[0].dims,i=Ie.normalizeAxis(t.axis,n.length);Ul(r,i);let s=n.slice();s[i]=r.reduce((u,d)=>u+(d.dims.length>i?d.dims[i]:0),0);let o=r.filter(u=>Ie.size(u.dims)>0);e.compute(Wl(o,i,s,r[0].dataType),{inputs:o})},ql=e=>hr({axis:e.axis})}),Zn,Un,Jn,mo,Vn=R(()=>{rr(),Jt(),Zn=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Un=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Jn=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},mo=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,n]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:n}}else if(t==="Clip"){let[r,n]=e?.activation_params||[kn,Rn];return{activation:t,clipMax:n,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}}),hn,_o,hs=R(()=>{hn=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},_o=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),go,wo=R(()=>{go=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Hl,Kl,Ni,yo,Xl,ji,Ql,bo,Ui=R(()=>{rr(),Jt(),fr(),Vn(),hs(),Hl=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,Kl=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Ni=(e,t,r="f32",n,i=!1,s=32,o=!1,u=32)=>{let d=t[1]*e[1],h=t[0]*e[0],y=i?d:s,l=i?s:d,x=y/t[0],A=s/t[1];if(!((i&&x===4&&e[1]===4||!i&&(x===3||x===4))&&y%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${x} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${x} must be 3 or 4.
  tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${x}<${r}>, ${y/x}>, ${l}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${s}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${x};
const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${d};

  let num_tiles = ${o?`${Math.ceil(u/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${u}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${A};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Hl(i,n)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${A}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${x===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Kl(i,x)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},yo=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,Xl=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ji=(e,t,r="f32",n,i=!1,s=32,o=!1,u=32,d=!1)=>{let h=e[1]*t[1],y=e[0]*t[0],l=i?h:s,x=i?s:h;if(!(x%t[1]===0&&l%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${x} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let A=x/t[1],P=l/t[0],S=s/t[1],Q=d?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${h};
    let globalColStart = i32(workgroupId.x) * ${y};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${x}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {
          ${yo(i,n)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${n?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${h};

let tileRowA = i32(localId.y) * ${A};
let tileColA = i32(localId.x) * ${P};
let tileRowB = i32(localId.y) * ${S};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${A}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${P}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${yo(i,n)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${n?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Xl(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${l}>, ${x}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${y}>, ${s}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(u/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${u}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;
    ${Q}
  }
`},Ql=(e,t,r,n,i,s=!1)=>{let[o,u,d]=i,[h,y,l,x]=n,A=Mi(o,d),P=Mi(u,d),S=gr(n[0].type.tensor),Q=()=>{let F=y.rank,re=h.rank,de=`var aIndices: ${y.type.indices};`;for(let ge=F-2-1,qe=re-1;ge>=0;ge--,qe--)de+=`
aIndices[${ge}] = ${re>1?`batchIndices[${qe}]`:"batchIndices"};`;return A.forEach(ge=>{de+=`
aIndices[${ge}] = 0;`}),de+=`
aIndices[${F-2}] = u32(row);
                   aIndices[${F-1}] = u32(colIn);`,de},K=()=>{let F=l.rank,re=h.rank,de=`var bIndices: ${l.type.indices};`;for(let ge=F-2-1,qe=re-1;ge>=0;ge--,qe--)de+=`
bIndices[${ge}] = ${re>1?`batchIndices[${qe}]`:"batchIndices"};`;return P.forEach(ge=>{de+=`
bIndices[${ge}] = 0;`}),de+=`
bIndices[${F-2}] = u32(row);
                   bIndices[${F-1}] = u32(colIn);`,de};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${hn(e,S)} {
      var value = ${hn(e,S)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${Q()}
        value = ${y.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${hn(e,S)} {
      var value = ${hn(e,S)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${K()}
        value = ${l.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${hn(e,S)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${s?"bias[colIn]":`${hn(e,S)}(bias[row])`};`:""}
        ${r}
        ${x.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},bo=(e,t,r,n,i=!1,s)=>{let o=e[0].dims,u=e[1].dims,d=o.slice(0,-2),h=u.slice(0,-2),y=n?n.slice(0,-2):r.slice(0,-2),l=Ie.size(y),x=o[o.length-2],A=o[o.length-1],P=u[u.length-1],S=A%4===0&&P%4===0,Q=x<=8?[4,1,1]:[4,4,1],K=[8,8,1],F=[Math.ceil(P/K[0]/Q[0]),Math.ceil(x/K[1]/Q[1]),Math.ceil(l/K[2]/Q[2])],re=S?4:1,de=[...d,x,A/re],ge=de.length,qe=[...h,A,P/re],Fe=qe.length,bt=[l,x,P/re],Vt=[{type:6,data:x},{type:6,data:P},{type:6,data:A}];Un(t,Vt),Vt.push(...Ot(y,de,qe));let jt=["rank","rank"],lr=e.length>2;lr&&(Vt.push(...Ot(e[2].dims)),jt.push("rank")),Vt.push(...Ot(bt));let Zt=ur=>{let Sr=y.length,or=$s("batchDims",e[0].dataType,Sr,1),Qt=gr(e[0].dataType),Tr=lt("a",e[0].dataType,ge,re),xr=lt("b",e[1].dataType,Fe,re),Xt=Kt("result",e[0].dataType,bt.length,re),yr=[Tr,xr];if(lr){let qr=i?re:1;yr.push(lt("bias",e[2].dataType,e[2].dims.length,qr))}let rt=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Jn(t,rt);let St=gr(Xt.type.tensor),mr=Zn(t,Xt.type.value,St),Wr=Ql(re,lr,mr,[or,Tr,xr,Xt],[d,h,y],i);return`
  ${ur.registerUniforms(rt).registerInternalVariables(or).declareVariables(...yr,Xt)}
  ${Wr}
  ${S?Ni(Q,K,Qt,or):ji(Q,K,Qt,or)}
                   `};return{name:"MatMul",shaderCache:{hint:`${Q};${t.activation};${S};${i}`,inputDependencies:jt},getRunData:()=>({outputs:[{dims:s?s(r):r,dataType:e[0].dataType}],dispatchGroup:{x:F[0],y:F[1],z:F[2]},programUniforms:Vt}),getShaderSource:Zt}}}),Yl,Zl,Fd=R(()=>{rr(),_(),fr(),Vn(),hs(),wo(),Ui(),Yl=(e,t,r,n,i=!1,s,o=4,u=4,d=4,h="f32")=>{let y=Vt=>{switch(Vt){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Vt} is not supported.`)}},l=Vt=>{switch(Vt){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Vt} is not supported.`)}},x=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,A=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,P=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",S=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",Q=e?"row":"col",K=e?"col":"row",F=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${Q} / outWidth;
    let outCol = ${Q} % outWidth;

    let WRow = ${K} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${K} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${K} % inChannels;
    var resData = ${hn(o,h)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${P} && xCol >= 0 && xCol < ${S}) {
      ${x}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${y(o)}
    }
    return resData;`,re=e?t&&n?`
    let col = colIn * ${o};
    ${F}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${F}
    }
    return ${hn(o,h)}(0.0);`:n&&r?`
    let col = colIn * ${o};
    ${F}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${F}
    }
    return ${hn(o,h)}(0.0);`,de=`${l(u)}`,ge=hn(d,h),qe=hn(e?o:u,h),Fe=hn(e?u:o,h),bt=Zn(s,ge,h);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${qe} {
      ${e?re:de}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Fe} {
      ${e?de:re}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${ge}) {
      let col = colIn * ${d};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${A}
      ${_o(i)}
      ${bt}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Zl=(e,t,r,n,i,s,o,u,d)=>{let h=t.format==="NHWC",y=h?e[0].dims[3]:e[0].dims[1],l=r[0],x=h?r[2]:r[3],A=h?r[1]:r[2],P=h?r[3]:r[1],S=h&&(y%4===0||y%3===0)&&P%4===0,Q=h?P:x*A,K=h?x*A:P,F=[8,8,1],re=n<=8?[4,1,1]:[4,4,1],de=[Math.ceil(Q/F[0]/re[0]),Math.ceil(K/F[1]/re[1]),Math.ceil(l/F[2]/re[2])];_e("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${de}`);let ge=S?h&&y%4!==0?3:4:1,qe=F[1]*re[1],Fe=F[0]*re[0],bt=Math.max(F[0]*ge,F[1]),Vt=n%qe===0,jt=i%Fe===0,lr=s%bt===0,Zt=S?[ge,4,4]:[1,1,1],ur=[{type:6,data:n},{type:6,data:i},{type:6,data:s},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Un(t,ur),ur.push(...Ot(e[0].dims,e[1].dims));let Sr=["rank","rank"];o&&(ur.push(...Ot(e[2].dims)),Sr.push("rank")),ur.push(...Ot(r));let or=Qt=>{let Tr=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Jn(t,Tr);let xr=S?4:1,Xt=gr(e[0].dataType),yr=`
      fn setOutputAtIndex(flatIndex : i32, value : ${S?`vec4<${Xt}>`:Xt}) {
        result[flatIndex] = ${S?`vec4<${Xt}>`:Xt}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${S?`vec4<${Xt}>`:Xt}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${S?"/ 4":""}, value);
      }`,rt=lt("x",e[0].dataType,e[0].dims.length,ge===3?1:ge),St=lt("w",e[1].dataType,e[1].dims.length,xr),mr=[rt,St],Wr=Kt("result",e[0].dataType,r.length,xr);if(o){let qr=lt("bias",e[2].dataType,e[2].dims.length,xr);mr.push(qr),yr+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${S?`vec4<${Xt}>`:Xt} {
          return bias[coords.${h?"w":"y"}${S?"/ 4":""}];
        }`}return`
        ${go("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Qt.registerUniforms(Tr).declareVariables(...mr,Wr)}
        ${yr}
        ${Yl(h,Vt,jt,lr,o,t,Zt[0],Zt[1],Zt[2],Xt)}
        ${S?Ni(re,F,Xt,void 0,!h,bt):ji(re,F,Xt,void 0,!h,bt,!1,void 0,u)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${ge};${S};${Vt};${jt};${lr};${qe};${Fe};${bt}`,inputDependencies:Sr},getRunData:()=>({outputs:[{dims:d?d(r):r,dataType:e[0].dataType}],dispatchGroup:{x:de[0],y:de[1],z:de[2]},programUniforms:ur}),getShaderSource:or}}}),Jl,Mo,Vi,vo,xo,eu,To,tu,Od=R(()=>{rr(),_(),Jt(),fr(),Vn(),hs(),Jl=e=>{let t=1;for(let r=0;r<e.length;r++)t*=e[r];return t},Mo=e=>typeof e=="number"?[e,e,e]:e,Vi=(e,t)=>t<=1?e:e+(e-1)*(t-1),vo=(e,t,r,n=1)=>{let i=Vi(t,n);return Math.floor((e[0]*(r-1)-r+i)/2)},xo=(e,t,r,n,i)=>{i==null&&(i=vo(e,t[0],n[0]));let s=[0,0,0,r];for(let o=0;o<3;o++)e[o]+2*i>=t[o]&&(s[o]=Math.trunc((e[o]-t[o]+2*i)/n[o]+1));return s},eu=(e,t,r,n,i,s,o,u,d,h)=>{let y,l,x,A;if(e==="VALID"&&(e=0),typeof e=="number"){y={top:e,bottom:e,left:e,right:e,front:e,back:e};let P=xo([t,r,n,1],[u,d,h],1,[i,s,o],e);l=P[0],x=P[1],A=P[2]}else if(Array.isArray(e)){if(!e.every((S,Q,K)=>S===K[0]))throw Error(`Unsupported padding parameter: ${e}`);y={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let P=xo([t,r,n,1],[u,d,h],1,[i,s,o],e[0]);l=P[0],x=P[1],A=P[2]}else if(e==="SAME_UPPER"){l=Math.ceil(t/i),x=Math.ceil(r/s),A=Math.ceil(n/o);let P=(l-1)*i+u-t,S=(x-1)*s+d-r,Q=(A-1)*o+h-n,K=Math.floor(P/2),F=P-K,re=Math.floor(S/2),de=S-re,ge=Math.floor(Q/2),qe=Q-ge;y={top:re,bottom:de,left:ge,right:qe,front:K,back:F}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:y,outDepth:l,outHeight:x,outWidth:A}},To=(e,t,r,n,i,s=!1,o="channelsLast")=>{let u,d,h,y,l;if(o==="channelsLast")[u,d,h,y,l]=e;else if(o==="channelsFirst")[u,l,d,h,y]=e;else throw new Error(`Unknown dataFormat ${o}`);let[x,,A,P,S]=t,[Q,K,F]=Mo(r),[re,de,ge]=Mo(n),qe=Vi(A,re),Fe=Vi(P,de),bt=Vi(S,ge),{padInfo:Vt,outDepth:jt,outHeight:lr,outWidth:Zt}=eu(i,d,h,y,Q,K,F,qe,Fe,bt),ur=s?x*l:x,Sr=[0,0,0,0,0];return o==="channelsFirst"?Sr=[u,ur,jt,lr,Zt]:o==="channelsLast"&&(Sr=[u,jt,lr,Zt,ur]),{batchSize:u,dataFormat:o,inDepth:d,inHeight:h,inWidth:y,inChannels:l,outDepth:jt,outHeight:lr,outWidth:Zt,outChannels:ur,padInfo:Vt,strideDepth:Q,strideHeight:K,strideWidth:F,filterDepth:A,filterHeight:P,filterWidth:S,effectiveFilterDepth:qe,effectiveFilterHeight:Fe,effectiveFilterWidth:bt,dilationDepth:re,dilationHeight:de,dilationWidth:ge,inShape:e,outShape:Sr,filterShape:t}},tu=(e,t,r,n,i,s)=>{let o=s==="channelsLast";o?e[0].dims[3]:e[0].dims[1];let u=[64,1,1],d={x:r.map((Q,K)=>K)},h=[Math.ceil(Jl(d.x.map(Q=>r[Q]))/u[0]),1,1];_e("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${h}`);let y=1,l=Ie.size(r),x=[{type:12,data:l},{type:12,data:n},{type:12,data:i},{type:12,data:t.strides},{type:12,data:t.dilations}];Un(t,x),x.push(...Ot(e[0].dims,e[1].dims));let A=["rank","rank"],P=e.length===3;P&&(x.push(...Ot(e[2].dims)),A.push("rank")),x.push(...Ot(r));let S=Q=>{let K=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:n.length},{name:"pads",type:"u32",length:i.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];Jn(t,K);let F=1,re=gr(e[0].dataType),de=lt("x",e[0].dataType,e[0].dims.length,y),ge=lt("W",e[1].dataType,e[1].dims.length,F),qe=[de,ge],Fe=Kt("result",e[0].dataType,r.length,F),bt="";if(P){let lr=lt("bias",e[2].dataType,e[2].dims.length,F);qe.push(lr),bt+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${re} {
          return bias[${o?qt("coords",4,5):qt("coords",1,5)}];
        }`}let Vt=hn(y,re),jt=Zn(t,Vt,re);return`
            ${bt}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${de.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${ge.getByIndices("aIndices")};
            }
          ${Q.registerUniforms(K).declareVariables(...qe,Fe)}
          ${Q.mainStart()}
          ${Q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${Fe.offsetToIndices("global_idx")};
              let batch = ${qt("coords",0,de.rank)};
              let d2 = ${o?qt("coords",de.rank-1,de.rank):qt("coords",1,de.rank)};
              let xFRCCorner = vec3<u32>(${o?qt("coords",1,de.rank):qt("coords",2,de.rank)},
              ${o?qt("coords",2,de.rank):qt("coords",3,de.rank)},
              ${o?qt("coords",3,de.rank):qt("coords",4,de.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?qt("uniforms.x_shape",1,de.rank):qt("uniforms.x_shape",2,de.rank)};
              let xShapeZ = ${o?qt("uniforms.x_shape",2,de.rank):qt("uniforms.x_shape",3,de.rank)};
              let xShapeW = ${o?qt("uniforms.x_shape",3,de.rank):qt("uniforms.x_shape",4,de.rank)};
              let xShapeU = ${o?qt("uniforms.x_shape",4,de.rank):qt("uniforms.x_shape",1,de.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${P?"value = value + getBiasByOutputCoords(coords)":""};
              ${jt}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${o};${y};${P}`,inputDependencies:A},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:h[0],y:h[1],z:h[2]},programUniforms:x}),getShaderSource:S}}}),ei,ru,Bd=R(()=>{rr(),Jt(),fr(),Vn(),ei=(e,t,r,n)=>{let i=e.length>2,s=i?"value += b[output_channel];":"",o=e[0].dims,u=e[1].dims,d=t.format==="NHWC",h=d?r[3]:r[1],y=h/t.group,l=d&&y>=4?br(h):1,x=Ie.size(r)/l,A=[{type:12,data:x},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:y}];Un(t,A),A.push(...Ot(o,[u[0],u[1],u[2],u[3]/l]));let P=i?["rank","rank","rank"]:["rank","rank"];A.push(...Ot([r[0],r[1],r[2],r[3]/l]));let S=Q=>{let K=Kt("output",e[0].dataType,r.length,l),F=gr(K.type.tensor),re=Zn(t,K.type.value,F),de=lt("x",e[0].dataType,o.length),ge=lt("w",e[1].dataType,u.length,l),qe=[de,ge];i&&qe.push(lt("b",e[2].dataType,e[2].dims,l));let Fe=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Jn(t,Fe);let bt=d?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${de.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${ge.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${de.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${ge.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${Q.registerUniforms(Fe).declareVariables(...qe,K)}

  ${Q.mainStart()}
    ${Q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${K.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${d?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${d?1:2}], outputIndices[${d?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${l} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${d?2:1}];

    var value: ${K.type.value} = ${K.type.value}(0);
    ${bt}
    ${s}
    ${re}
    ${K.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${l}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(x/64)},programUniforms:A}),getShaderSource:S}},ru=(e,t,r,n)=>{let i=e.length>2,s=br(r[3]),o=br(r[2]),u=Ie.size(r)/s/o,d=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/s],h=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/s],y=[r[0],r[1],r[2],r[3]/s],l=[{type:12,data:u},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];Un(t,l),l.push(...Ot(d,h,y));let x=(o-1)*t.strides[1]+h[1],A=P=>{let S=Kt("output",e[0].dataType,y.length,s),Q=gr(S.type.tensor),K=Zn(t,S.type.value,Q),F=lt("x",e[0].dataType,d.length,s),re=lt("w",e[1].dataType,h.length,s),de=[F,re];i&&de.push(lt("b",e[2].dataType,e[2].dims,s));let ge=i?"value += b[output_channel];":"",qe=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Jn(t,qe),`
  ${P.registerUniforms(qe).declareVariables(...de,S)}
  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${F.type.value}, ${x}>;
    var values: array<${S.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${h[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${x}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${F.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${F.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${h[1]}; w_width++) {
          let w_val = ${re.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${ge}
      ${K}
      ${S.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${s};${o};${x};${h[0]};${h[1]}`,inputDependencies:i?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:A}}}),Eo,nu,Co,iu=R(()=>{rr(),Jt(),Ui(),fr(),Vn(),Eo=(e,t,r,n,i=!1,s)=>{let o=e[0].dims,u=e[1].dims,d=o[o.length-2],h=u[u.length-1],y=o[o.length-1],l=br(h),x=br(y),A=br(d),P=Ie.size(r)/l/A,S=e.length>2,Q=n?n.slice(0,-2):r.slice(0,-2),K=[Ie.size(Q),d,h],F=[{type:12,data:P},{type:12,data:d},{type:12,data:h},{type:12,data:y}];Un(t,F),F.push(...Ot(Q,o,u)),S&&F.push(...Ot(e[2].dims)),F.push(...Ot(K));let re=de=>{let ge=$s("batch_dims",e[0].dataType,Q.length),qe=lt("a",e[0].dataType,o.length,x),Fe=lt("b",e[1].dataType,u.length,l),bt=Kt("output",e[0].dataType,K.length,l),Vt=gr(bt.type.tensor),jt=Zn(t,bt.type.value,Vt),lr=[qe,Fe],Zt="";if(S){let yr=i?l:1;lr.push(lt("bias",e[2].dataType,e[2].dims.length,yr)),Zt=`${i?`value += bias[col / ${yr}];`:`value += ${bt.type.value}(bias[row + i]);`}`}let ur=o.slice(0,-2),Sr=u.slice(0,-2),or=Mi(ur,Q),Qt=Mi(Sr,Q),Tr=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Jn(t,Tr);let xr=(yr,rt)=>{let St=yr.rank,mr=yr.name;if(St===2)return`var ${mr}_indices = ${yr.type.indices}(0u, 0u);`;let Wr=ge.rank,qr=`var ${mr}_indices: ${yr.type.indices};`;for(let Gn=St-2-1,zn=Wr-1;Gn>=0;Gn--,zn--)qr+=`
${mr}_indices[${Gn}] = ${Wr>1?`batch_indices[${zn}]`:"batch_indices"};`;return rt.forEach(Gn=>{qr+=`
${mr}_indices[${Gn}] = 0;`}),qr+=`${mr}_indices[${St-2}] = 0u;
                     ${mr}_indices[${St-1}] = 0u;`,qr},Xt=()=>{let yr=`var a_data: ${qe.type.value};`;for(let rt=0;rt<x;rt++)yr+=`
              let b_data${rt} = b[(b_offset + (k + ${rt}) * uniforms.N + col) / ${l}];`;for(let rt=0;rt<A;rt++){yr+=`a_data = a[(a_offset + (row + ${rt}) * uniforms.K + k) / ${x}];`;for(let St=0;St<x;St++)yr+=`
            values[${rt}] = fma(${Fe.type.value}(a_data${x===1?"":`[${St}]`}), b_data${St}, values[${rt}]);
`}return yr};return`
  ${de.registerUniforms(Tr).registerInternalVariables(ge).declareVariables(...lr,bt)}
  ${de.mainStart()}
    ${de.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${l})) * ${l};
    var index1 = global_idx / (uniforms.N / ${l});
    let stride1 = uniforms.M / ${A};
    let row = (index1 % stride1) * ${A};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${ge.offsetToIndices("batch")};`}
    ${xr(qe,or)}
    let a_offset = ${qe.indicesToOffset("a_indices")};
    ${xr(Fe,Qt)}
    let b_offset = ${Fe.indicesToOffset("b_indices")};
    var values: array<${bt.type.value}, ${A}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${x}) {
      ${Xt()}
    }
    for (var i = 0u; i < ${A}u; i++) {
      var value = values[i];
      ${Zt}
      ${jt}
      let cur_indices = ${bt.type.indices}(batch, row + i, col);
      let offset = ${bt.indicesToOffset("cur_indices")};
      ${bt.setByOffset(`offset / ${l}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${l};${x};${A};${i}`,inputDependencies:S?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(P/64)},programUniforms:F}),getShaderSource:re}},nu=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Co=e=>{nu(e.inputs);let t=Sn.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],n=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&n<8?e.compute(Eo(e.inputs,{activation:""},t)):e.compute(bo(e.inputs,{activation:""},t))}}),su,fs,ou,xi,$o,So,au,Wi,ko,zd=R(()=>{Jt(),Fd(),Od(),Ui(),Bd(),Vn(),iu(),jn(),su=(e,t,r,n,i,s)=>{let o=e[0],u=e.slice(s?1:2,s?3:4),d=u.length,h=t[0],y=t.slice(2).map((x,A)=>x+(x-1)*(r[A]-1)),l=u.map((x,A)=>x+n[A]+n[A+d]).map((x,A)=>Math.floor((x-y[A]+i[A])/i[A]));return l.splice(0,0,o),l.splice(s?3:1,0,h),l},fs=[2,3,1,0],ou=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[1]*t.group;if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},xi=(e,t)=>{let r=e.kernelShape.slice();r.length<t[1].dims.length-2&&r.push(...Array(t[1].dims.length-2-r.length).fill(0));for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let n=e.pads.slice();Jr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,n,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:n}),i},$o=e=>{let t=mo(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,s=e.group,o=e.kernel_shape,u=e.pads,d=e.strides,h=e.w_is_const();return{autoPad:n,format:r,dilations:i,group:s,kernelShape:o,pads:u,strides:d,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},So=(e,t,r,n)=>{let i=r.format==="NHWC",s=su(t[0].dims,t[1].dims,r.dilations,r.pads,r.strides,i);if(r.group!==1){let qe=[t[0]];if(i){let Fe=e.kernelCustomData.wT??e.compute(Mn(t[1],fs),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Fe),qe.push(Fe)}else qe.push(t[1]);t.length===3&&qe.push(t[2]),!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1?e.compute(ru(qe,r,s,n),{inputs:qe}):e.compute(ei(qe,r,s,n),{inputs:qe});return}let o=t.length===3,u=t[0].dims[i?1:2],d=t[0].dims[i?2:3],h=t[0].dims[i?3:1],y=t[1].dims[2],l=t[1].dims[3],x=s[i?1:2],A=s[i?2:3],P=s[i?3:1],S=i&&y===u&&l===d&&r.pads[0]===0&&r.pads[1]===0;if(S||y===1&&l===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let qe=s[0],Fe,bt,Vt,jt=[];if(i){let ur=e.kernelCustomData.wT??e.compute(Mn(t[1],fs),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=ur),S){let Sr=u*d*h;Fe=t[0].reshape([1,qe,Sr]),bt=ur.reshape([1,Sr,P]),Vt=[1,qe,P]}else Fe=t[0].reshape([qe,u*d,h]),bt=ur.reshape([1,h,P]),Vt=[qe,x*A,P];jt.push(Fe),jt.push(bt)}else Fe=t[0].reshape([qe,h,u*d]),bt=t[1].reshape([1,P,h]),Vt=[qe,P,x*A],jt.push(bt),jt.push(Fe);o&&jt.push(t[2]);let lr=Vt[2],Zt=jt[0].dims[jt[0].dims.length-1];lr<8&&Zt<8?e.compute(Eo(jt,r,s,Vt,i,n),{inputs:jt}):e.compute(bo(jt,r,s,Vt,i,n),{inputs:jt});return}let Q=!0,K=e.kernelCustomData.wT??e.compute(Mn(t[1],fs),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=K);let F=[t[0],K];o&&F.push(t[2]);let re=i?x*A:P,de=i?P:x*A,ge=y*l*h;e.compute(Zl(F,r,s,re,de,ge,o,Q,n),{inputs:F})},au=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),o=[1].concat(t.dilations),u=[1].concat(t.kernelShape),d=xi({...t,pads:i,strides:s,dilations:o,kernelShape:u},n);So(e,n,d,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]])},Wi=(e,t,r)=>{let n=r.format==="NHWC"?"channelsLast":"channelsFirst",i=xi(r,t),s=r.autoPad==="NOTSET"?r.pads:r.autoPad,o=To(t[0].dims,t[1].dims,r.strides,r.dilations,s,!1,n);e.compute(tu(t,i,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],n))},ko=(e,t)=>{if(ou(e.inputs,t),e.inputs[0].dims.length===3)au(e,t);else if(e.inputs[0].dims.length===5)Wi(e,e.inputs,t);else{let r=xi(t,e.inputs);So(e,e.inputs,r)}}}),lu,uu,Po=R(()=>{rr(),_(),fr(),Vn(),hs(),wo(),Ui(),lu=(e,t=!1,r,n,i=4)=>{let s=Q=>{switch(Q){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${n}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${Q} is not supported.`)}},o=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,u=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,d=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",y=e?"row":"col",l=e?"col":"row",x=`
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${y} / outWidth;
      let outCol = ${y} % outWidth;

      let WRow = ${l} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${l} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${d}) || fract(xR) > 0.0) {
        return ${n}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {
        return ${n}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${l} % inChannels;
      ${o}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${i}];`,A=e?`
      let col = colIn * ${i};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${x}
      }
      return ${n}(0.0);`:`
      let col = colIn * ${i};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${x}
      }
      return ${n}(0.0);`,P=`
      let col = colIn * ${i};
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${s(i)}
      }
      return ${n}(0.0);
      `,S=Zn(r,n);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${e?A:P}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${e?P:A}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${n}) {
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${u}
      ${_o(t)}
      ${S}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${i}] = value;
    }
  }`},uu=(e,t,r,n,i,s,o,u)=>{let d=t.format==="NHWC",h=d?e[0].dims[3]:e[0].dims[1],y=r[0],l=d?r[2]:r[3],x=d?r[1]:r[2],A=d?r[3]:r[1],P=d&&h%4===0&&h%3&&A%4===0,S=d?A:l*x,Q=d?l*x:A,K=[8,8,1],F=n<=8?[4,1,1]:[4,4,1],re=[Math.ceil(S/K[0]/F[0]),Math.ceil(Q/K[1]/F[1]),Math.ceil(y/K[2]/F[2])];_e("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${re}`);let de=P?4:1,ge=Math.max(K[0]*de,K[1]),qe=P?4:1,Fe=[t.kernelShape[d?1:2],t.kernelShape[d?2:3]],bt=[Fe[0]+(t.dilations[0]<=1?0:(Fe[0]-1)*(t.dilations[0]-1)),Fe[1]+(t.dilations[1]<=1?0:(Fe[1]-1)*(t.dilations[1]-1))],Vt=[bt[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),bt[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],jt=[{type:6,data:n},{type:6,data:i},{type:6,data:s},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:Fe},{type:6,data:Vt}];Un(t,jt),jt.push(...Ot(e[0].dims,e[1].dims));let lr=["rank","rank"];o&&(jt.push(...Ot(e[2].dims)),lr.push("rank")),jt.push(...Ot(r));let Zt=ur=>{let Sr=lt("x",e[0].dataType,e[0].dims.length,qe),or=lt("w",e[1].dataType,e[1].dims.length,1),Qt=Kt("result",e[0].dataType,r.length,qe),Tr=[Sr,or],xr="";if(o){let rt=lt("bias",e[2].dataType,e[2].dims.length,qe);Tr.push(rt),xr+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${rt.type.value} {
            return bias[coords.${d?"w":"y"}${P?"/ 4":""}];
          }`}let Xt=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:Fe.length},{name:"pads",type:"i32",length:Vt.length}];Jn(t,Xt);let yr=gr(e[0].dataType,1);if(yr!=="f16"&&yr!=="f32")throw new Error(`elemType ${yr} is not supported.`);return`
        ${go("uniforms.result_strides")}
        ${ur.registerUniforms(Xt).declareVariables(...Tr,Qt)};
        ${xr}
        ${lu(d,o,t,Sr.type.value,de)}
        ${P?Ni(F,K,yr,void 0,!d,ge):ji(F,K,yr,void 0,!d,ge,!1,void 0,u)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${F};${K};${P}`,inputDependencies:lr},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:re[0],y:re[1],z:re[2]},programUniforms:jt}),getShaderSource:Zt}}}),du,Ao,Dd=R(()=>{rr(),_(),Jt(),fr(),du=(e,t,r,n,i,s=!1,o,u,d=!1)=>{let h=d?1:2,y=d?2:3,l=d?3:1,x=s?2:1,A=`
  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${o}>`:o}) {
    result[flatIndex] = ${s?`vec4<${o}>`:o}(value);
  }`;n&&(A+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${o}>`:o} {
      return bias[coords.${d?"w":"y"}${s?"/ 4":""}];
    }`);let P=s?4:1,S=lt("W",t[1].dataType,t[1].dims.length,P),Q=lt("Dy",t[0].dataType,t[0].dims.length,P),K=[Q,S];n&&K.push(lt("bias",t[2].dataType,[r[l]].length,P));let F=Kt("result",t[0].dataType,r.length,P),re=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${x};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${o}>, ${x}>;
        for (var i = 0; i < ${x}; i++) {
          dotProd[i] = vec4<${o}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${o}(dyCorner.x) + ${o}(wR)) / ${o}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${o}(dyCorner.y) + ${o}(wC)) / ${o}(uniforms.strides.y);
            let dyC2 = (${o}(dyCorner.y) + 1.0 + ${o}(wC)) / ${o}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${Q.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${Q.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${o}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${l}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${Q.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${Q.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${x}; i = i + 1) {
          let value = dotProd[i] + ${n?"bias[c+i]":`vec4<${o}>(0.0)`};
          ${F.set("batch","r","c + i","d1","value")};
        }
      }`,de=`
          let outputIndices = ${F.offsetToIndices("global_idx")};
          let batch = ${F.indicesGet("outputIndices",0)};
          let d1 = ${F.indicesGet("outputIndices",l)};
          let r = ${F.indicesGet("outputIndices",h)};
          let c = ${F.indicesGet("outputIndices",y)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${o}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${o}(dyRCorner) + ${o}(wR)) / ${o}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${o}(dyCCorner) + ${o}(wC)) / ${o}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[${y}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${d?Q.get("batch","idyR","idyC","inputChannel"):Q.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${S.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${n?"bias[d1]":`${o}(0.0)`};
          ${F.setByOffset("global_idx","value")};
        `;return`
  ${e.registerUniforms(u).declareVariables(...K,F)}
  ${A}

    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${s?re:de}}`},Ao=(e,t,r)=>{let n=e.length>2,i=t.outputShape,s=Ie.size(i),o=[Math.ceil(s/64),1,1];_e("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${o}`);let u=t.format==="NHWC",d=["rank","rank"],h=[t.strides[0],t.strides[1]],y=[t.kernelShape[u?1:2],t.kernelShape[u?2:3]],l=[t.dilations[0],t.dilations[1]],x=[y[0]+(t.dilations[0]<=1?0:(t.kernelShape[u?1:2]-1)*(t.dilations[0]-1)),y[1]+(t.dilations[1]<=1?0:(t.kernelShape[u?2:3]-1)*(t.dilations[1]-1))],A=[x[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),x[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],P=!1,S=t.group,Q=e[1].dims,K=Q[0]/S,F=Q[1],re=[{type:12,data:s},{type:12,data:h},{type:12,data:y},{type:12,data:l},{type:12,data:x},{type:6,data:A},{type:12,data:K},{type:12,data:F},...Ot(e[0].dims,e[1].dims)];n&&(re.push(...Ot(e[2].dims)),d.push("rank")),re.push(...Ot(i));let de=o[1]===1&&o[2]===1,ge=qe=>{let Fe=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:y.length},{name:"dilations",type:"u32",length:y.length},{name:"effective_filter_dims",type:"u32",length:x.length},{name:"pads",type:"i32",length:A.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],bt=gr(e[0].dataType);return`${du(qe,e,i,n,de,P,bt,Fe,u)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:d},getRunData:()=>({dispatchGroup:{x:o[0],y:o[1],z:o[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:re}),getShaderSource:ge}}}),Ld,cu,pu,Io,Ti,hu,fu,mu,_u,gu,Fo=R(()=>{Po(),Dd(),Vn(),jn(),Ld=(e,t,r,n,i,s)=>(e-1)*t+r+(n-1)*i+1-s,cu=(e,t,r,n,i)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[n]=s,r[i]=e-s):t==="SAME_LOWER"&&(r[n]=e-s,r[i]=s)},pu=(e,t,r,n,i,s,o,u,d,h)=>{let y=e.length-2,l=h.length===0;d.length<y&&d.push(...Array(y-d.length).fill(0));let x=e[0],A=t[u?3:1]*i;for(let P=0,S=e.length-y-(u?1:0);P<y;++P,++S){let Q=e[S],K=l?Q*o[P]:h[P],F=Ld(Q,o[P],s[P],t[S],r[P],K);cu(F,n,s,P,P+y),l&&h.push(o[P]*(Q-1)+d[P]+(t[S]-1)*r[P]+1-s[P]-s[P+y])}h.splice(0,0,x),h.splice(u?3:1,0,A)},Io=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((l,x)=>l*x,1)===0){r.length=0;for(let l=2;l<t[1].dims.length;++l)r.push(t[1].dims[l])}let n=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(n?3:1,0,t[1].dims[1]);let i=e.pads.slice(),s=e.outputShape.slice(),o=e.outputPadding.slice(),u=t[0].dims,d=e.dilations.slice();if(d.reduce((l,x)=>l+x,0)===0){let l=t[0].dims.length-2;d=new Array(l).fill(1)}let h=e.strides.slice();if(h.reduce((l,x)=>l+x,0)===0){let l=t[0].dims.length-2;h=new Array(l).fill(1)}pu(u,r,d,e.autoPad,e.group,i,h,n,o,s);let y=Object.assign({},e);return Object.assign(y,{kernelShape:r,pads:i,outputPadding:o,outputShape:s,dilations:d,strides:h}),y},Ti=e=>{let t=mo(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,s=e.group,o=e.kernelShape,u=e.pads,d=e.strides,h=e.wIsConst(),y=e.outputPadding,l=e.outputShape;return{autoPad:n,format:r,dilations:i,group:s,kernelShape:o,outputPadding:y,outputShape:l,pads:u,strides:d,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},hu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[0];if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((o,u)=>o+u,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((o,u)=>o+u,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((o,u)=>o+u,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((o,u)=>o+u,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},fu=[2,3,1,0],mu=(e,t,r)=>{let n=Io(r,t),i=r.format==="NHWC",s=n.outputShape,o=s[i?3:1],u=t[0].dims[i?3:1];if(n.group!==1||o===1&&u===1){e.compute(Ao(t,n));return}let d=s[i?1:2],h=s[i?2:3],y=t[1].dims[2],l=t[1].dims[3],x=i?d*h:o,A=i?o:d*h,P=y*l*u,S=!0,Q=e.kernelCustomData.wT??e.compute(Mn(t[1],fu),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Q);let K=[t[0],Q],F=t.length===3;F&&(!i&&t[2].dims.length===1?K.push(t[2].reshape([t[2].dims[0],1,1])):K.push(t[2])),e.compute(uu(K,n,s,x,A,P,F,S),{inputs:K})},_u=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let o=t.strides;(o.length===0||o[0]===0)&&(o=[1]);let u=t.pads;u.length===0&&(u=[0,0]),u=[0,u[0],0,u[1]],o=[1].concat(o),s=[1].concat(s),i=[1].concat(i);let d=Io({...t,pads:u,strides:o,dilations:s,kernelShape:i},n);e.compute(Ao(n,d,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},gu=(e,t)=>{hu(e.inputs,t),e.inputs[0].dims.length===3?_u(e,t):mu(e,e.inputs,t)}}),Rd,wu,yu,Nd=R(()=>{rr(),Jt(),kr(),fr(),Rd=(e,t,r,n)=>{let i=Ie.size(t),s=t.length,o=lt("input",e,s),u=Kt("output",e,s),d=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=Ie.normalizeAxis(d,s),y=l=>{let x=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,A=qt("uniforms.input_shape","uniforms.axis",s),P=n.reverse?x+(n.exclusive?" + 1":""):"0",S=n.reverse?A:x+(n.exclusive?"":" + 1");return`
                ${l.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,u)}
                ${l.mainStart()}
                  ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${u.offsetToIndices("global_idx")};
                  var sum = ${u.type.value}(0);
                  let first : i32 = ${P};
                  let last : i32 = ${S};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${u.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:h},...Ot(t,t)]}),getShaderSource:y}},wu=(e,t)=>{let r=e.inputs[0].dims,n=e.inputs[0].dataType,i=e.inputs[1];e.compute(Rd(n,r,i,t),{inputs:[0]})},yu=e=>{let t=e.exclusive===1,r=e.reverse===1;return hr({exclusive:t,reverse:r})}}),bu,Mu,Oo,vu,xu,Tu=R(()=>{rr(),Jt(),kr(),fr(),bu=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Mu=(e,t,r,n)=>{let i=[];i.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let s=0;s<t;++s)i.push(r.indicesSet("a",e[s],`i[${s}]`));return i.push("return a;}"),i.join(`
`)},Oo=(e,t)=>{let r,n,i,s,o,u,d=t.format==="NHWC",h=t.blocksize,y=t.mode==="DCR";d?([r,n,i,s]=e.dims,o=y?[r,n,i,h,h,s/h**2]:[r,n,i,s/h**2,h,h],u=y?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,n,i,s]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],o=y?[r,h,h,s/h**2,n,i]:[r,s/h**2,h,h,n,i],u=y?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let l=e.reshape(o),x=l.dims.length,A=e.dataType,P=lt("a",A,x),S=Kt("output",A,x),Q=K=>`
  ${K.registerUniform("output_size","u32").declareVariables(P,S)}

  ${Mu(u,x,P,S)}

  ${K.mainStart()}
    ${K.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${S.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${S.setByOffset("global_idx",P.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:K=>{let F=d?[r,n*h,i*h,s/h**2]:[r,s/h**2,n*h,i*h],re=Ie.size(F),de=l.dims,ge=Ie.sortBasedOnPerm(de,u);return{outputs:[{dims:F,dataType:K[0].dataType}],dispatchGroup:{x:Math.ceil(re/64)},programUniforms:[{type:12,data:re},...Ot(de,ge)]}},getShaderSource:Q}},vu=(e,t)=>{bu(e.inputs),e.compute(Oo(e.inputs[0],t))},xu=e=>hr({blocksize:e.blocksize,mode:e.mode,format:e.format})}),ms,Gi,_s,Eu,Cu,gs,$u,Bo,Su,ku,zo,Do=R(()=>{rr(),Jt(),kr(),fr(),ms="[a-zA-Z]|\\.\\.\\.",Gi="("+ms+")+",_s="^"+Gi+"$",Eu="("+Gi+",)*"+Gi,Cu="^"+Eu+"$",gs=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let r=this.symbolToIndices.get(e);r===void 0?r=[t]:r.push(t),this.symbolToIndices.set(e,r)}},$u=class{constructor(e,t){this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,n]=t.includes("->")?t.split("->",2):[t,""];if(!r.match(RegExp(Cu)))throw new Error("Invalid LHS term");if(r.split(",").forEach((i,s)=>{let o=e[s].dims.slice();if(!i.match(RegExp(_s)))throw new Error("Invalid LHS term");let u=this.processTerm(i,!0,o,s);this.lhs.push(u)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([i,s])=>s.count===1||i==="...").map(([i])=>i).join("");else if(!n.match(RegExp(Gi)))throw new Error("Invalid RHS");n.match(RegExp(ms,"g"))?.forEach(i=>{if(i==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let s=this.symbolToInfo.get(i);if(s===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(s.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(e,t,r){let n=this.symbolToInfo.get(e);if(n!==void 0){if(n.dimValue!==t&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(r)}else n={count:1,dimValue:t,inputIndices:[r]};this.symbolToInfo.set(e,n)}processTerm(e,t,r,n=-1){let i=r.length,s=!1,o=[],u=0;if(!e.match(RegExp(_s))&&!t&&e!=="")throw new Error("Invalid LHS term");let d=e.match(RegExp(ms,"g")),h=new gs(n);return d?.forEach((y,l)=>{if(y==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let x=i-d.length+1;if(x<0)throw new Error("Ellipsis out of bounds");if(o=r.slice(u,u+x),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=o;else throw new Error("Ellipsis must be specified in the LHS");for(let A=0;A<o.length;A++){let P=String.fromCharCode(48+A);h.addSymbol(P,l+A),this.addSymbol(P,r[u++],n)}}else h.addSymbol(y,l+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,r[u++],n)}),h}},Bo=e=>e+"_max",Su=(e,t,r,n)=>{let i=e.map(h=>h.length).map((h,y)=>lt(`input${y}`,t,h)),s=Ie.size(n),o=Kt("output",t,n.length),u=[...r.symbolToInfo.keys()].filter(h=>!r.rhs.symbolToIndices.has(h)),d=h=>{let y=[],l="var prod = 1.0;",x="var sum = 0.0;",A="sum += prod;",P=[],S=[],Q=[],K=[],F=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((de,ge)=>{if(r.rhs.symbolToIndices.has(ge)){let qe=r.rhs.symbolToIndices.get(ge)?.[0];qe!==void 0&&r.lhs.forEach((Fe,bt)=>{if(de.inputIndices.includes(bt)){let Vt=Fe.symbolToIndices.get(ge);if(Vt===void 0)throw new Error("Invalid symbol error");Vt.forEach(jt=>{y.push(`${i[bt].indicesSet(`input${bt}Indices`,jt,o.indicesGet("outputIndices",qe))}`)})}})}else r.lhs.forEach((qe,Fe)=>{if(de.inputIndices.includes(Fe)){let bt=qe.symbolToIndices.get(ge);if(bt===void 0)throw new Error("Invalid symbol error");bt.forEach(Vt=>{P.push(`${i[Fe].indicesSet(`input${Fe}Indices`,Vt,`${ge}`)}`)}),K.push(`prod *= ${i[Fe].getByIndices(`input${Fe}Indices`)};`)}}),S.push(`for(var ${ge}: u32 = 0; ${ge} < uniforms.${Bo(ge)}; ${ge}++) {`),Q.push("}")});let re=F?[...y,`let sum = ${i.map((de,ge)=>de.getByIndices(`input${ge}Indices`)).join(" * ")};`]:[...y,x,...S,...P,l,...K,A,...Q];return`
            ${h.registerUniforms(u.map(de=>({name:`${Bo(de)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,o)}

            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${i.map((de,ge)=>`var input${ge}Indices: ${i[ge].type.indices};`).join(`
`)}
            ${re.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let h=u.filter(l=>r.symbolToInfo.has(l)).map(l=>({type:12,data:r.symbolToInfo.get(l)?.dimValue||0}));h.push({type:12,data:s});let y=e.map((l,x)=>[...Ot(l)]).reduce((l,x)=>l.concat(x),h);return y.push(...Ot(n)),{outputs:[{dims:n,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:y}},getShaderSource:d}},ku=(e,t)=>{let r=new $u(e.inputs,t.equation),n=r.outputDims,i=e.inputs.map((s,o)=>s.dims);e.compute(Su(i,e.inputs[0].dataType,r,n))},zo=e=>{let t=e.equation.replace(/\s+/g,"");return hr({equation:t})}}),jd,Lo,Pu,Ro,Au,Ud=R(()=>{rr(),Jt(),fr(),jd=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;n<r.length&&i<t.length;++n,++i)if(r[n]!==t[i]&&r[n]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Lo=(e,t)=>{let r=e.length-t.length,n=[];for(let i=0;i<r;++i)n.push(e[i]);for(let i=0;i<t.length;++i)n.push(t[i]===1?e[i+r]:t[i]);return n},Pu=(e,t)=>e.length>t.length?Lo(e,t):Lo(t,e),Ro=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=Pu(t,r),i=e[0].dataType,s=i===9?4:1,o=Math.ceil(Ie.size(n)/s),u=h=>{let y=lt("input",i,t.length,s),l=Kt("output",i,n.length,s),x;if(i===9){let A=(P,S,Q="")=>`
          let outputIndices${S} = ${l.offsetToIndices(`outputOffset + ${S}u`)};
          let offset${S} = ${y.broadcastedIndicesToOffset(`outputIndices${S}`,l)};
          let index${S} = offset${S} / 4u;
          let component${S} = offset${S} % 4u;
          ${P}[${S}] = ${Q}(${y.getByOffset(`index${S}`)}[component${S}]);
        `;x=`
        let outputOffset = global_idx * ${s};
        var data = vec4<u32>(0);
        ${A("data",0,"u32")}
        ${A("data",1,"u32")}
        ${A("data",2,"u32")}
        ${A("data",3,"u32")}
        ${l.setByOffset("global_idx","data")}
      }`}else x=`
        let outputIndices = ${l.offsetToIndices("global_idx")};
        let inputOffset = ${y.broadcastedIndicesToOffset("outputIndices",l)};
        ${l.setByOffset("global_idx",y.getByOffset("inputOffset"))}
      }`;return`
    ${h.registerUniform("vec_size","u32").declareVariables(y,l)}
    ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${x}`},d=[{type:12,data:o},...Ot(t,n)];return{name:"Expand",shaderCache:{hint:`${n.length}`,inputDependencies:["rank"]},getShaderSource:u,getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:d})}},Au=e=>{jd(e.inputs),e.compute(Ro(e.inputs),{inputs:[0]})}}),No,Iu,Vd=R(()=>{rr(),Jt(),fr(),uo(),No=e=>{let t=e[0].dataType,r=Ie.size(e[0].dims),n=Ie.size(e[1].dims),i=n%4===0,s=o=>{let u=lt("x",t,[1],4),d=lt("bias",t,[1],4),h=Kt("y",t,[1],4),y=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],l=A=>`
      let bias${A}_offset: u32 = (global_idx * 4 + ${A}) % uniforms.bias_size;
      let bias${A} = ${d.getByOffset(`bias${A}_offset / 4`)}[bias${A}_offset % 4];`,x=i?`
      let bias = ${d.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${l(0)}${l(1)}${l(2)}${l(3)}
      let bias = ${u.type.value}(bias0, bias1, bias2, bias3);`;return`${o.registerUniforms(y).declareVariables(u,d,h)}

    ${ao(Br(t))}

    ${o.mainStart(pn)}
      ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${u.getByOffset("global_idx")};
      ${x}
      let x_in = x + bias;
      ${h.setByOffset("global_idx",cs("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:s,getRunData:o=>({outputs:[{dims:o[0].dims,dataType:o[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:n}],dispatchGroup:{x:Math.ceil(r/pn/4)}})}},Iu=e=>{e.inputs.length<2||Ie.size(e.inputs[1].dims)===0?El(e):e.compute(No(e.inputs))}}),jo,Wd,Gd,Uo,Fu=R(()=>{rr(),Jt(),kr(),fr(),jo=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Wd=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,s=Ie.normalizeAxis(t.axis,i),o=r.slice(0);o.splice(s,1,...n);let u=r[s],d=e[0].dataType===9?4:1,h=Math.ceil(Ie.size(o)/d),y=[{type:12,data:h},{type:6,data:u},{type:12,data:s},...Ot(e[0].dims,e[1].dims,o)],l=x=>{let A=lt("data",e[0].dataType,e[0].dims.length,d),P=lt("inputIndices",e[1].dataType,e[1].dims.length),S=Kt("output",e[0].dataType,o.length,d),Q=F=>{let re=n.length,de=`var indicesIndices${F}  = ${P.type.indices}(0);`;for(let ge=0;ge<re;ge++)de+=`${re>1?`indicesIndices${F}[${ge}]`:`indicesIndices${F}`} = ${o.length>1?`outputIndices${F}[uniforms.axis + ${ge}]`:`outputIndices${F}`};`;de+=`
          var idx${F} = ${P.getByIndices(`indicesIndices${F}`)};
          if (idx${F} < 0) {
            idx${F} = idx${F} + uniforms.axisDimLimit;
          }
          var dataIndices${F} : ${A.type.indices};
        `;for(let ge=0,qe=0;ge<i;ge++)ge===s?(de+=`${i>1?`dataIndices${F}[${ge}]`:`dataIndices${F}`} = u32(idx${F});`,qe+=re):(de+=`${i>1?`dataIndices${F}[${ge}]`:`dataIndices${F}`} = ${o.length>1?`outputIndices${F}[${qe}]`:`outputIndices${F}`};`,qe++);return de},K;if(e[0].dataType===9){let F=(re,de,ge="")=>`
          let outputIndices${de} = ${S.offsetToIndices(`outputOffset + ${de}u`)};
          ${Q(de)};
          let offset${de} = ${A.indicesToOffset(`dataIndices${de}`)};
          let index${de} = offset${de} / 4u;
          let component${de} = offset${de} % 4u;
          ${re}[${de}] = ${ge}(${A.getByOffset(`index${de}`)}[component${de}]);
        `;K=`
        let outputOffset = global_idx * ${d};
        var value = vec4<u32>(0);
        ${F("value",0,"u32")}
        ${F("value",1,"u32")}
        ${F("value",2,"u32")}
        ${F("value",3,"u32")}
        ${S.setByOffset("global_idx","value")}
      `}else K=`
      let outputIndices = ${S.offsetToIndices("global_idx")};
      ${Q("")};
      let value = ${A.getByIndices("dataIndices")};
      ${S.setByOffset("global_idx","value")};
      `;return`
      ${x.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(A,P,S)}
      ${x.mainStart()}
        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${K}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:y}),getShaderSource:l}},Gd=e=>hr({axis:e.axis}),Uo=(e,t)=>{let r=e.inputs;jo(r),e.compute(Wd(e.inputs,t))}}),Ou,Bu,Vo,zu,qd=R(()=>{rr(),Jt(),kr(),fr(),Ou=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let r=Ie.normalizeAxis(t.quantizeAxis,e[0].dims.length),n=t.blockSize,i=e[0],s=e[2],o=e.length===4?e[3]:void 0;if(s.dims.length!==i.dims.length||!i.dims.map((u,d)=>d===r?Math.ceil(u/n)===s.dims[d]:u===s.dims[d]).reduce((u,d)=>u&&d,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==i.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==s.dims.length||!o.dims.map((u,d)=>u===s.dims[d]).reduce((u,d)=>u&&d,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Bu=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,s=Ie.normalizeAxis(t.gatherAxis,i),o=Ie.normalizeAxis(t.quantizeAxis,i),u=r.slice(0);u.splice(s,1,...n);let d=Ie.size(u),h=e[2].dataType,y=e[0].dataType===22,l=[{type:12,data:d},{type:12,data:o},{type:12,data:s},{type:12,data:t.blockSize},...Ot(...e.map((A,P)=>A.dims),u)],x=A=>{let P=lt("data",e[0].dataType,e[0].dims.length),S=lt("inputIndices",e[1].dataType,e[1].dims.length),Q=lt("scales",e[2].dataType,e[2].dims.length),K=e.length>3?lt("zeroPoint",e[3].dataType,e[3].dims.length):void 0,F=Kt("output",h,u.length),re=[P,S,Q];K&&re.push(K);let de=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${A.registerUniforms(de).declareVariables(...re,F)}
        ${A.mainStart()}
        let output_indices = ${F.offsetToIndices("global_idx")};
        var indices_indices = ${S.type.indices}(0);
        ${n.length>1?`
          for (var i: u32 = 0; i < ${n.length}; i++) {
            let index = ${F.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${S.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${F.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${P.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${F.indicesGet("output_indices","i")};
          ${P.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${S.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${r[s]};
        }
        ${P.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${u.length}; i++) {
          let index = ${F.indicesGet("output_indices",`i + ${n.length} - 1`)};
          ${P.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${P.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${P.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${y?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${Q.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${Q.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${Q.getByIndices("scale_indices")};
        ${K?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${K.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${K.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${y?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Br(h)}(quantized_data - zero_point) * scale;
        ${F.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter((A,P)=>P!==1).map(A=>A.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(A,P)=>"rank")},getRunData:()=>({outputs:[{dims:u,dataType:h}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:l}),getShaderSource:x}},Vo=(e,t)=>{let r=e.inputs;Ou(r,t),e.compute(Bu(e.inputs,t))},zu=e=>hr({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),Wo,Du,Lu,Go,Hd=R(()=>{rr(),Jt(),kr(),fr(),Wo=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Du=(e,t)=>{let r=e[0].dims,n=e[0].dataType,i=r.length,s=e[1].dims,o=e[1].dataType,u=Ie.normalizeAxis(t.axis,i),d=r[u],h=s.slice(0),y=Ie.size(h),l=lt("input",n,i),x=lt("indicesInput",o,s.length),A=Kt("output",n,h.length),P=[{type:12,data:y},{type:6,data:d},{type:12,data:u}];return P.push(...Ot(r,s,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:P}),getShaderSource:S=>`
      ${S.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(l,x,A)}
      ${S.mainStart()}
      ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${A.offsetToIndices("global_idx")};

      var idx = ${x.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${l.type.indices}(outputIndices);
      ${l.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${l.getByIndices("inputIndices")};

      ${A.setByOffset("global_idx","value")};
  }`}},Lu=e=>hr({axis:e.axis}),Go=(e,t)=>{let r=e.inputs;Wo(r),e.compute(Du(e.inputs,t))}}),Ru,Nu,ju,Lr,Wc=R(()=>{rr(),Jt(),fr(),Ru=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Nu=(e,t)=>{let r=e[0].dims.slice(),n=e[1].dims.slice(),[i,s,o]=ln.getShapeOfGemmResult(r,t.transA,n,t.transB,e.length===3?e[2].dims:void 0),u=[i,s];if(!u)throw new Error("Can't use gemm on the given tensors");let d=Ie.size(u),h=[{type:12,data:d},{type:12,data:i},{type:12,data:s},{type:12,data:o},{type:1,data:t.alpha},{type:1,data:t.beta}],y=["type","type"];e.length===3&&(h.push(...Ot(e[2].dims)),y.push("rank")),h.push(...Ot(u));let l=x=>{let A="";t.transA&&t.transB?A="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?A="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?A="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(A="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let P=t.alpha===1?"":"value *= uniforms.alpha;",S=lt("a",e[0].dataType,e[0].dims),Q=lt("b",e[1].dataType,e[1].dims),K=S.type.value,F=null,re=[S,Q];e.length===3&&(F=lt("c",e[2].dataType,e[2].dims.length),re.push(F));let de=Kt("output",e[0].dataType,u.length);re.push(de);let ge=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${x.registerUniforms(ge).declareVariables(...re)}

  ${x.mainStart()}
    ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${K}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${A}
    }

    ${P}
    ${F!=null?`let cOffset = ${F.broadcastedIndicesToOffset("vec2(m, n)",de)}; value += ${K}(uniforms.beta) * ${F.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:h}),getShaderSource:l}},ju=e=>{let t=e.transA,r=e.transB,n=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:n,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Lr=(e,t)=>{Ru(e.inputs),e.compute(Nu(e.inputs,t))}}),yn,Kd,qo,Ho,Uu,qi,Vu,Ko=R(()=>{rr(),Jt(),kr(),pe(),as(),fr(),jn(),yn=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,Kd=(e,t)=>{let r=e[0],n=yn(e,1),i=yn(e,2),s=yn(e,3),o=yn(e,4),u=yn(e,5),d=yn(e,6),h=yn(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let y=r.dims[0],l=r.dims[1],x=r.dims.length===3?r.dims[2]:t.numHeads*r.dims[4],A=l,P=0,S=0,Q=Math.floor(x/t.numHeads);if(d&&h&&Ie.size(d.dims)&&Ie.size(h.dims)){if(d.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(d.dims[0]!==y||d.dims[1]!==t.numHeads||d.dims[3]!==Q)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(h.dims[0]!==y||h.dims[1]!==t.numHeads||h.dims[3]!==Q)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(d.dims[2]!==h.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(h.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');P=d.dims[2],S=d.dims[2]}else if(d&&Ie.size(d.dims)||h&&Ie.size(h.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let K;if(n&&Ie.size(n.dims)>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(n.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');K=2,A=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==Q)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');K=5,A=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==Q)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');K=0,A=n.dims[2]}}else{if(r.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(r.dims[2]!==t.numHeads||r.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');K=3}if(s&&Ie.size(s.dims)>0){if(s.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(n&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let F=P+A,re=0;if(o&&Ie.size(o.dims)>0){re=8;let Fe=o.dims;throw Fe.length===1?Fe[0]===y?re=1:Fe[0]===3*y+2&&(re=3):Fe.length===2&&Fe[0]===y&&Fe[1]===F&&(re=5),re===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let de=!1,ge=x;if(i&&Ie.size(i.dims)>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(A!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');ge=i.dims[2]}else{if(A!==i.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');ge=i.dims[1]*i.dims[3],de=!0}}let qe=!1;if(o&&Ie.size(o.dims)>0)throw new Error("Key padding mask is not supported");if(u&&Ie.size(u.dims)>0){if(u.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(u.dims[0]!==y||u.dims[1]!==t.numHeads||u.dims[2]!==l||u.dims[3]!==F)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:y,sequenceLength:l,pastSequenceLength:P,kvSequenceLength:A,totalSequenceLength:F,maxSequenceLength:S,inputHiddenSize:0,hiddenSize:x,vHiddenSize:ge,headSize:Q,vHeadSize:Math.floor(ge/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:re,scale:t.scale,broadcastResPosBias:qe,passPastInKv:de,qkvFormat:K}},qo=e=>hr({...e}),Ho=hr({perm:[0,2,1,3]}),Uu=(e,t,r,n,i,s,o)=>{let u=[n,i,s],d=Ie.size(u),h=[{type:12,data:d},{type:12,data:o},{type:12,data:s}],y=l=>{let x=Kt("qkv_with_bias",t.dataType,u),A=lt("qkv",t.dataType,u),P=lt("bias",r.dataType,u),S=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${l.registerUniforms(S).declareVariables(A,P,x)}
  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:h}),getShaderSource:y},{inputs:[t,r],outputs:[-1]})[0]},qi=(e,t,r,n,i,s,o,u)=>{let d=s;if(o&&Ie.size(o.dims)>0){if(n===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return d=Uu(e,s,o,t,n,r*i,u),d=d.reshape([t,n,r,i]),r===1||n===1?d:e.compute(Mn(d,Ho.perm),{inputs:[d],outputs:[-1]})[0]}else return s.dims.length===3&&(d=s.reshape([t,n,r,i])),r===1||n===1?d:e.compute(Mn(d,Ho.perm),{inputs:[d],outputs:[-1]})[0]},Vu=(e,t)=>{let r=Kd(e.inputs,t),n=e.inputs[0],i=yn(e.inputs,1),s=yn(e.inputs,2),o=yn(e.inputs,3),u=yn(e.inputs,4),d=yn(e.inputs,5),h=yn(e.inputs,6),y=yn(e.inputs,7);if(n.dims.length===5)throw new Error("Packed QKV is not implemented");if(i?.dims.length===5)throw new Error("Packed KV is not implemented");let l=i&&s&&i.dims.length===4&&s.dims.length===4,x=qi(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,n,o,0);if(l)return vi(e,x,i,s,u,void 0,h,y,d,r);if(!i||!s)throw new Error("key and value must be provided");let A=qi(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,o,r.hiddenSize),P=qi(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,s,o,2*r.hiddenSize);vi(e,x,A,P,u,void 0,h,y,d,r)}}),Xo,Wu,Gu,Qo,qu,Xd,Hu,Ku=R(()=>{rr(),Jt(),kr(),fr(),Xo=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Wu=(e,t)=>{let r=[],n=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),n=r.length),hr({numOutputs:n,axis:t.axis,splitSizes:r})},Gu=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${qt("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,Qo=e=>{let t=e.length,r=[];for(let n=0;n<t;++n){let i=e[n].setByIndices("indices","input[global_idx]");t===1?r.push(i):n===0?r.push(`if (output_number == ${n}u) { ${i} }`):n===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${n}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},qu=(e,t)=>{let r=e[0].dims,n=Ie.size(r),i=e[0].dataType,s=Ie.normalizeAxis(t.axis,r.length),o=new Array(t.numOutputs),u=lt("input",i,r.length),d=new Array(t.numOutputs),h=[],y=[],l=0,x=[{type:12,data:n}];for(let P=0;P<t.numOutputs;P++){l+=t.splitSizes[P],d[P]=l;let S=r.slice();S[s]=t.splitSizes[P],y.push(S),o[P]=Kt(`output${P}`,i,S.length),h.push({dims:y[P],dataType:e[0].dataType})}x.push({type:12,data:d},...Ot(r,...y));let A=P=>`
  ${P.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",d.length).declareVariables(u,...o)}
  ${Gu(d.length)}
  ${Qo(o)}

  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${u.offsetToIndices("global_idx")};
    var index = ${u.indicesGet("indices",s)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${qt("uniforms.size_in_split_axis","output_number - 1u",d.length)};
      ${u.indicesSet("indices",s,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(n/64)},programUniforms:x})}},Xd=(e,t)=>{Xo(e.inputs);let r=e.inputs.length===1?t:Wu(e.inputs,t);e.compute(qu(e.inputs,r),{inputs:[0]})},Hu=e=>{let t=e.axis,r=e.splitSizes,n=e.numOutputs<0?r.length:e.numOutputs;if(n!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return hr({axis:t,numOutputs:n,splitSizes:r})}}),Xu,Qu,Yo,Yu,Qd=R(()=>{kr(),as(),Ko(),Ku(),jn(),Xu=(e,t)=>{if(t.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let r=e[0],n=e[1],i=e[2],s=e[3],o=e[4];if(t.localWindowSize!==-1)throw new Error("Local attention is not supported");if(t.softcap!==0)throw new Error("Softcap is not supported");if(t.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(t.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let u=!1,d=r.dims[0],h=r.dims[1],y=r.dims.length===3?u?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],l=h,x=0,A=!n||n.dims.length===0,P=Math.floor(A?y/(t.numHeads+2*t.kvNumHeads):y/t.numHeads);A&&(y=P*t.numHeads);let S=s&&s.dims.length!==0,Q=o&&o.dims.length!==0;if(S&&s.dims.length===4&&s.dims[0]===d&&s.dims[1]!==t.kvNumHeads&&s.dims[2]===t.kvNumHeads&&s.dims[3]===P)throw new Error("BSNH pastKey/pastValue is not supported");if(S&&Q){if(s.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(o.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');x=s.dims[2]}else if(S||Q)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let K=1;if(n&&n.dims.length>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(r.dims[2]%n.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');l=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==P)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');l=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==P)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');l=n.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');K=3}let F=0,re=!1,de=t.kvNumHeads?P*t.kvNumHeads:y;if(i&&i.dims.length>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(l!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');de=i.dims[2]}else{if(l!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');de=i.dims[1]*i.dims[3],re=!0}}let ge=e.length>4?e[5]:void 0;if(ge&&ge.dims.length!==1&&ge.dims[0]!==d)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:d,sequenceLength:h,pastSequenceLength:x,kvSequenceLength:l,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:y,vHiddenSize:de,headSize:P,vHeadSize:Math.floor(de/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:F,scale:t.scale,broadcastResPosBias:!1,passPastInKv:re,qkvFormat:K}},Qu=hr({perm:[0,2,1,3]}),Yo=(e,t,r)=>{let n=t,i=r.kvNumHeads;return t.dims.length===3&&r.kvSequenceLength!==0&&(n=t.reshape([r.batchSize,r.kvSequenceLength,i,r.headSize]),n=e.compute(Mn(n,Qu.perm),{inputs:[n],outputs:[-1]})[0]),n},Yu=(e,t)=>{let r=Xu(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let n=e.inputs[0],i=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,s=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,o=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,u=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,d=e.inputs.length>4?e.inputs[5]:void 0,h=e.inputs.length>5?e.inputs[6]:void 0,y=r.kvNumHeads?r.kvNumHeads:r.numHeads,l=hr({axis:2,numOutputs:3,splitSizes:[r.numHeads*r.headSize,y*r.headSize,y*r.headSize]}),[x,A,P]=!i&&!s?e.compute(qu([n],l),{inputs:[n],outputs:[-1,-1,-1]}):[n,i,s],S=qi(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,x,void 0,0);vi(e,S,Yo(e,A,r),Yo(e,P,r),void 0,void 0,o,u,void 0,r,d,h)}}),Zo,Zu,Ju,ed,Yd=R(()=>{rr(),Jt(),jn(),fr(),Zo=(e,t,r,n,i,s,o,u)=>{let d=br(s),h=d===1?"f32":`vec${d}f`,y=d===1?"vec2f":`mat2x${d}f`,l=i*o,x=[i,o,s/d],A=[i,o,2],P=["rank","type","type"],S=[];S.push(...Ot(x,A));let Q=K=>{let F=lt("x",t.dataType,3,d),re=lt("scale",r.dataType,r.dims),de=lt("bias",n.dataType,n.dims),ge=Kt("output",1,3,2),qe=[F,re,de,ge],Fe=64;return`
  var<workgroup> workgroup_shared : array<${y}, ${Fe}>;
  const workgroup_size = ${Fe}u;
  ${K.declareVariables(...qe)}
  ${K.mainStart(Fe)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${h}(0);
    var squared_sum = ${h}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${h}(${F.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${y}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Nn("workgroup_shared[0][0]",d)} / f32(hight * ${d});
      let squared_sum_final = ${Nn("workgroup_shared[0][1]",d)} / f32(hight * ${d});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${u}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${d};${u}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:A,dataType:1}],dispatchGroup:{x:l},programUniforms:S}),getShaderSource:Q},{inputs:[t,r,n],outputs:[-1]})[0]},Zu=(e,t,r)=>{let n=t[0].dims,i=n,s=2,o=n[0],u=n[1],d=Ie.sizeFromDimension(n,s),h=br(d),y=Ie.size(i)/h,l=Zo(e,t[0],t[1],t[2],o,d,u,r.epsilon),x=[o,u,d/h],A=[o,u],P=["type","none"],S=Q=>{let K=lt("x",t[0].dataType,x.length,h),F=lt("scale_shift",1,A.length,2),re=Kt("output",t[0].dataType,x.length,h),de=[K,F,re];return`
  ${Q.registerUniform("output_size","u32").declareVariables(...de)}
  ${Q.mainStart()}
  ${Q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${re.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${F.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${K.getByOffset("global_idx")} * ${re.type.value}(scale_shift.x) + ${re.type.value}(scale_shift.y);
      ${re.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${h}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:[{type:12,data:y},...Ot(x,A,x)]}),getShaderSource:S},{inputs:[t[0],l]})},Ju=(e,t,r)=>{let n=t[0].dims,i=n,s=n[0],o=n[n.length-1],u=Ie.sizeFromDimension(n,1)/o,d=br(o),h=Ie.size(i)/d,y=[{type:12,data:u},{type:12,data:Math.floor(o/d)}],l=["type","type"],x=[0,n.length-1];for(let Q=0;Q<n.length-2;Q++)x.push(Q+1);let A=e.compute(Mn(e.inputs[0],x),{inputs:[e.inputs[0]],outputs:[-1]})[0],P=Zo(e,A,t[1],t[2],s,u,o,r.epsilon),S=Q=>{let K=gr(t[0].dataType),F=d===1?"vec2f":`mat${d}x2f`,re=qe=>{let Fe=qe===0?"x":"y",bt=d===1?"f32":`vec${d}f`;switch(d){case 1:return`${K}(${bt}(scale.${Fe}))`;case 2:return`vec2<${K}>(${bt}(scale[0].${Fe}, scale[1].${Fe}))`;case 4:return`vec4<${K}>(${bt}(scale[0].${Fe}, scale[1].${Fe}, scale[2].${Fe}, scale[3].${Fe}))`;default:throw new Error(`Not supported compoents ${d}`)}},de=lt("input",t[0].dataType,t[0].dims,d),ge=Kt("output",t[0].dataType,i,d);return`
  @group(0) @binding(0) var<storage, read> input : array<${de.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${F}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${ge.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${Q.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${re(0)}, ${re(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${d}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:y}),getShaderSource:S},{inputs:[t[0],P]})},ed=(e,t)=>{t.format==="NHWC"?Ju(e,e.inputs,t):Zu(e,e.inputs,t)}}),td,rd,nd,Zd=R(()=>{rr(),Jt(),fr(),td=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},rd=(e,t,r)=>{let n=t.simplified,i=e[0].dims,s=e[1],o=!n&&e[2],u=i,d=Ie.normalizeAxis(t.axis,i.length),h=Ie.sizeToDimension(i,d),y=Ie.sizeFromDimension(i,d),l=Ie.size(s.dims),x=o?Ie.size(o.dims):0;if(l!==y||o&&x!==y)throw new Error(`Size of X.shape()[axis:] == ${y}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${l} and bias size of ${x}`);let A=[];for(let ge=0;ge<i.length;++ge)ge<d?A.push(i[ge]):A.push(1);let P=br(y),S=["type","type"],Q=[{type:12,data:h},{type:1,data:y},{type:12,data:Math.floor(y/P)},{type:1,data:t.epsilon}];o&&S.push("type");let K=r>1,F=r>2,re=ge=>{let qe=gr(e[0].dataType),Fe=[lt("x",e[0].dataType,e[0].dims,P),lt("scale",s.dataType,s.dims,P)];o&&Fe.push(lt("bias",o.dataType,o.dims,P)),Fe.push(Kt("output",e[0].dataType,u,P)),K&&Fe.push(Kt("mean_data_output",1,A)),F&&Fe.push(Kt("inv_std_output",1,A));let bt=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${ge.registerUniforms(bt).declareVariables(...Fe)}
  ${ge.mainStart()}
    ${ge.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${ii("f32",P)};
    var mean_square_vector = ${ii("f32",P)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Yn(qe,P,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Nn("mean_vector",P)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Nn("mean_square_vector",P)} / uniforms.norm_size ${n?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Yn(qe,P,"x[j + offset]")};
      let f32scale = ${Yn(qe,P,"scale[j]")};
      output[j + offset] = ${Fe[0].type.value}((f32input ${n?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${Yn(qe,P,"bias[j]")}`:""}
      );
    }

    ${K?"mean_data_output[global_idx] = mean":""};
    ${F?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},de=[{dims:u,dataType:e[0].dataType}];return K&&de.push({dims:A,dataType:1}),F&&de.push({dims:A,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${P};${r};${n}`,inputDependencies:S},getRunData:()=>({outputs:de,dispatchGroup:{x:Math.ceil(h/64)},programUniforms:Q}),getShaderSource:re}},nd=(e,t)=>{td(e.inputs),e.compute(rd(e.inputs,t,e.outputCount))}}),id,Jd,ec,tc,rc,Gc=R(()=>{rr(),Jt(),kr(),fr(),id=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],n=r.dims.length;if(r.dims[n-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),s=t.blockSize/8*t.bits,o=e[1];if(!Ie.areEqual(o.dims,[t.n,i,s]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let u=e[2].dims;if(Ie.size(u)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let d=e[3].dims,h=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(Ie.size(d)!==h)throw new Error("zeroPoints input size error.")}},Jd=(e,t)=>{let r=e[0].dims,n=r.length,i=r[n-2],s=t.k,o=t.n,u=r.slice(0,n-2),d=Ie.size(u),h=e[1].dims[2]/4,y=e[0].dataType,l=br(t.k),x=br(h),A=br(o),P=u.concat([i,o]),S=i>1&&o/A%2===0?2:1,Q=Ie.size(P)/A/S,K=64,F=[],re=[d,i,s/l],de=Ie.convertShape(e[1].dims).slice();de.splice(-1,1,h/x),F.push(...Ot(re)),F.push(...Ot(de)),F.push(...Ot(e[2].dims)),e.length===4&&F.push(...Ot(Ie.convertShape(e[3].dims)));let ge=[d,i,o/A];F.push(...Ot(ge));let qe=Fe=>{let bt=re.length,Vt=lt("a",e[0].dataType,bt,l),jt=lt("b",12,de.length,x),lr=lt("scales",e[2].dataType,e[2].dims.length),Zt=[Vt,jt,lr],ur=e.length===4?lt("zero_points",12,e[3].dims.length):void 0;ur&&Zt.push(ur);let Sr=ge.length,or=Kt("output",e[0].dataType,Sr,A),Qt=gr(e[0].dataType),Tr=(()=>{switch(l){case 1:return`array<${Qt}, 8>`;case 2:return`mat4x2<${Qt}>`;case 4:return`mat2x4<${Qt}>`;default:throw new Error(`${l}-component is not supported.`)}})(),xr=()=>{let rt=`
          // reuse a data
            var input_offset = ${Vt.indicesToOffset(`${Vt.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Tr};
            for (var j: u32 = 0; j < ${8/l}; j++) {
              a_data[j] = ${Vt.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let St=0;St<A*S;St++)rt+=`
            b_value = ${x===1?`b${St}_data`:`b${St}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Tr}(${Array.from({length:4},(mr,Wr)=>`${Qt}(b_value_lower[${Wr}]), ${Qt}(b_value_upper[${Wr}])`).join(", ")});
            b_dequantized_values = ${l===1?`${Tr}(${Array.from({length:8},(mr,Wr)=>`(b_quantized_values[${Wr}] - ${ur?`zero_point${St}`:"zero_point"}) * scale${St}`).join(", ")});`:`(b_quantized_values - ${Tr}(${Array(8).fill(`${ur?`zero_point${St}`:"zero_point"}`).join(",")})) * scale${St};`};
            workgroup_shared[local_id.x * ${S} + ${Math.floor(St/A)}]${A>1?`[${St%A}]`:""} += ${Array.from({length:8/l},(mr,Wr)=>`${l===1?`a_data[${Wr}] * b_dequantized_values[${Wr}]`:`dot(a_data[${Wr}], b_dequantized_values[${Wr}])`}`).join(" + ")};
          `;return rt},Xt=()=>{let rt=`
            var col_index = col * ${A};
            ${ur?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Qt}(8);`}
            `;for(let St=0;St<A*S;St++)rt+=`
            let scale${St} = ${lr.getByOffset("col_index * nBlocksPerCol + block")};
            ${ur?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${ur.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${St} = ${Qt}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return rt},yr=()=>{let rt=`col_index = col * ${A};`;for(let St=0;St<A*S;St++)rt+=`
            let b${St}_data = ${jt.getByIndices(`${jt.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return rt+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Tr};
            var b_dequantized_values: ${Tr};`,rt};return`
        var<workgroup> workgroup_shared: array<${or.type.value}, ${S*K}>;
        ${Fe.declareVariables(...Zt,or)}
        ${Fe.mainStart([K,1,1])}
          let output_indices = ${or.offsetToIndices(`(global_idx / ${K}) * ${S}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${K}) {
            //process one block
            var word_offset: u32 = block * ${t.blockSize/l};
            ${Xt()}
            for (var word: u32 = 0; word < ${h}; word += ${x}) {
              ${yr()}
              for (var i: u32 = 0; i < ${x}; i++) {
                ${xr()}
                word_offset += ${8/l};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${S}) {
            var output_value: ${or.type.value} = ${or.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${K}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${S};
            }
            ${or.setByIndices(`${or.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${l};${x};${A};${S};${K}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:P,dataType:y}],dispatchGroup:{x:Q},programUniforms:F}),getShaderSource:qe}},ec=(e,t)=>{let r=e[0].dims,n=r.length,i=r[n-2],s=t.k,o=t.n,u=r.slice(0,n-2),d=Ie.size(u),h=e[1].dims[2]/4,y=e[0].dataType,l=br(t.k),x=br(h),A=u.concat([i,o]),P=128,S=o%8===0?8:o%4===0?4:1,Q=P/S,K=Q*x*8,F=K/l,re=K/t.blockSize,de=Ie.size(A)/S,ge=[],qe=[d,i,s/l],Fe=Ie.convertShape(e[1].dims).slice();Fe.splice(-1,1,h/x),ge.push(...Ot(qe)),ge.push(...Ot(Fe)),ge.push(...Ot(e[2].dims)),e.length===4&&ge.push(...Ot(Ie.convertShape(e[3].dims)));let bt=[d,i,o];ge.push(...Ot(bt));let Vt=jt=>{let lr=qe.length,Zt=lt("a",e[0].dataType,lr,l),ur=lt("b",12,Fe.length,x),Sr=lt("scales",e[2].dataType,e[2].dims.length),or=[Zt,ur,Sr],Qt=e.length===4?lt("zero_points",12,e[3].dims.length):void 0;Qt&&or.push(Qt);let Tr=bt.length,xr=Kt("output",e[0].dataType,Tr),Xt=gr(e[0].dataType),yr=()=>{switch(l){case 1:return`
          let a_data0 = vec4<${Xt}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${Xt}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${Xt}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${Xt}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${l}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${Zt.type.value}, ${F}>;
        var<workgroup> inter_results: array<array<${xr.type.value}, ${Q}>, ${S}>;
        ${jt.declareVariables(...or,xr)}
        ${jt.mainStart([Q,S,1])}
          let output_indices = ${xr.offsetToIndices(`workgroup_index * ${S}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${re} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${F};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${F}; a_offset += ${P})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${Zt.getByIndices(`${Zt.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${Zt.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${re} + local_id.x;
            ${Qt?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${Qt.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${Xt}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Xt}(8);`}
            let scale = ${Sr.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${ur.getByIndices(`${ur.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${t.blockSize/l};
            for (var i: u32 = 0; i < ${x}; i++) {
              ${yr()}
              let b_value = ${x===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${Xt}>(${Array.from({length:4},(rt,St)=>`${Xt}(b_value_lower[${St}]), ${Xt}(b_value_upper[${St}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${Xt}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(rt,St)=>`${`dot(a_data${St}, b_dequantized_values[${St}])`}`).join(" + ")};
              word_offset += ${8/l};
            }
            workgroupBarrier();
          }

          if (local_idx < ${S}) {
            var output_value: ${xr.type.value} = ${xr.type.value}(0);
            for (var b = 0u; b < ${Q}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${xr.setByIndices(`${xr.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${l};${x};${Q};${S}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:A,dataType:y}],dispatchGroup:{x:de},programUniforms:ge}),getShaderSource:Vt}},tc=(e,t)=>{id(e.inputs,t),t.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(ec(e.inputs,t)):e.compute(Jd(e.inputs,t))},rc=e=>hr(e)}),nc,ic,sc,oc,ac,lc,uc,dc,cc,qc=R(()=>{rr(),Jt(),fr(),nc=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},ic=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
            k = i32(${e.indicesGet("indices",i)}) - ${qt("uniforms.pads",i,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${qt("uniforms.x_shape",i,t)})) {
              break;
            }
            offset += k * i32(${qt("uniforms.x_strides",i,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${n}
            value = x[offset];
          }
      `},sc=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${qt("uniforms.pads",i,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${qt("uniforms.x_shape",i,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${qt("uniforms.x_shape",i,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${qt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},oc=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${qt("uniforms.pads",i,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${qt("uniforms.x_shape",i,t)})) {
                  k = i32(${qt("uniforms.x_shape",i,t)}) - 1;
                }
                offset += k * i32(${qt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},ac=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${qt("uniforms.pads",i,r)};
                if (k < 0)  {
                  k += i32(${qt("uniforms.x_shape",i,t)}]);
                }
                if (k >= i32(${qt("uniforms.x_shape",i,t)})) {
                  k -= i32(${qt("uniforms.x_shape",i,t)});
                }
                offset += k * i32(${qt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},lc=(e,t,r)=>{switch(r.mode){case 0:return ic(e,t,r.pads.length);case 1:return sc(e,t,r.pads.length);case 2:return oc(e,t,r.pads.length);case 3:return ac(e,t,r.pads.length);default:throw new Error("Invalid mode")}},uc=(e,t)=>{let r=Ie.padShape(e[0].dims.slice(),t.pads),n=e[0].dims,i=Ie.size(r),s=[{type:12,data:i},{type:6,data:t.pads}],o=e.length>=3&&e[2].data;t.mode===0&&s.push({type:o?e[2].dataType:1,data:t.value}),s.push(...Ot(e[0].dims,r));let u=["rank"],d=h=>{let y=Kt("output",e[0].dataType,r.length),l=lt("x",e[0].dataType,n.length),x=l.type.value,A=lc(y,n.length,t),P=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&P.push({name:"constant_value",type:o?x:"f32"}),`
            ${h.registerUniforms(P).declareVariables(l,y)}
            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${y.offsetToIndices("global_idx")};

            var value = ${x}(0);
            ${A}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}${o}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Ie.size(r)/64)},programUniforms:s}),getShaderSource:d}},dc=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),n=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,i=e[0].dims.length,s=new Int32Array(2*i).fill(0);if(e.length>=4){let u=e[3].getBigInt64Array();for(let d=0;d<u.length;d++)s[Number(u[d])]=Number(r[d]),s[Number(u[d])+i]=Number(r[d+u.length])}else r.forEach((u,d)=>s[Number(d)]=Number(u));let o=[];return s.forEach(u=>o.push(u)),{mode:t.mode,value:n,pads:o}}else return t},cc=(e,t)=>{nc(e.inputs);let r=dc(e.inputs,t);e.compute(uc(e.inputs,r),{inputs:[0]})}}),ws,sd,od,ad,ld,pc,hc,ud,dd,fc,mc,cd,_c,gc,pd,cr,hd,nn,un,gn=R(()=>{c(),rr(),Jt(),fr(),ws=e=>{if(I.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},sd=(e,t,r)=>{let n=t.format==="NHWC",i=e.dims.slice();n&&i.splice(1,0,i.pop());let s=Object.hasOwnProperty.call(t,"dilations"),o=t.kernelShape.slice(),u=t.strides.slice(),d=s?t.dilations.slice():[],h=t.pads.slice();Jr.adjustPoolAttributes(r,i,o,u,d,h);let y=Jr.computePoolOutputShape(r,i,u,d,o,h,t.autoPad),l=Object.assign({},t);s?Object.assign(l,{kernelShape:o,strides:u,pads:h,dilations:d,cacheKey:t.cacheKey}):Object.assign(l,{kernelShape:o,strides:u,pads:h,cacheKey:t.cacheKey});let x=y.slice();return x.push(x.splice(1,1)[0]),[l,n?x:y]},od=(e,t)=>{let r=t.format==="NHWC",n=Ie.size(e),i=Ie.size(t.kernelShape),s=[{type:12,data:n},{type:12,data:i}],o=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let u=t.kernelShape[t.kernelShape.length-1],d=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],y=t.pads[t.pads.length-1],l=!!(h+y);s.push({type:12,data:u},{type:12,data:d},{type:12,data:h},{type:12,data:y}),o.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let x=!1;if(t.kernelShape.length===2){let A=t.kernelShape[t.kernelShape.length-2],P=t.strides[t.strides.length-2],S=t.pads[t.pads.length/2-2],Q=t.pads[t.pads.length-2];x=!!(S+Q),s.push({type:12,data:A},{type:12,data:P},{type:12,data:S},{type:12,data:Q}),o.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,o,!0,l,x]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let u=Ie.computeStrides(t.kernelShape);s.push({type:12,data:u},{type:12,data:t.pads},{type:12,data:t.strides}),o.push({name:"kernelStrides",type:"u32",length:u.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let d=t.pads.reduce((h,y)=>h+y);return[s,o,!!d,!1,!1]}},ad=(e,t,r,n,i,s,o,u,d,h,y,l)=>{let x=i.format==="NHWC",A=t.type.value,P=Kt("output",t.type.tensor,n);if(i.kernelShape.length<=2){let S="",Q="",K="",F=r-(x?2:1);if(y?S=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${F}] = indices[${F}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${F}] < 0 || xIndices[${F}]
                      >= uniforms.x_shape[${F}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`:S=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${F}] = indices[${F}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`,i.kernelShape.length===2){let re=r-(x?3:2);l?Q=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${re}] = indices[${re}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${re}] < 0 || xIndices[${re}] >= uniforms.x_shape[${re}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:Q=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${re}] = indices[${re}] * uniforms.sh - uniforms.phStart + j;
                `,K=`
              }
            `}return`
            ${e.registerUniforms(d).declareVariables(t,P)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${P.offsetToIndices("global_idx")};
              var xIndices = ${P.offsetToIndices("global_idx")};

              var value = ${A}(${u});
              var pad = 0;
              ${Q}
              ${S}
              ${K}
              ${o}

              output[global_idx] = value;
            }`}else{if(x)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let S=i.kernelShape.length,Q=i.pads.length,K="";return h?K=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${s}
              }`:K=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${s}
            `,`
            ${e.registerUniforms(d).declareVariables(t,P)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${P.offsetToIndices("global_idx")};
              var xIndices = ${P.offsetToIndices("global_idx")};

              var offsets: array<u32, ${S}>;

              var value = ${A}(${u});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${S-1}u; j++) {
                  offsets[j] = offset / ${qt("uniforms.kernelStrides","j",S)};
                  offset -= offsets[j] * ${qt("uniforms.kernelStrides","j",S)};
                }
                offsets[${S-1}] = offset;

                isPad = false;
                for (var j = ${r-S}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${qt("uniforms.strides",`j - ${r-S}u`,S)}
                    + offsets[j - ${r-S}u] - ${qt("uniforms.pads","j - 2u",Q)};
                  ${K}
              }
              ${o}

              output[global_idx] = value;
            }`}},ld=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,pc=e=>`${ld(e)};${e.countIncludePad}`,hc=e=>`${ld(e)};${e.storageOrder};${e.dilations}`,ud=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),dd=(e,t,r,n)=>{let[i,s]=sd(t,n,r),o=lt("x",t.dataType,t.dims.length),u=o.type.value,d="value += x_val;",h="";i.countIncludePad?h+=`value /= ${u}(uniforms.kernelSize);`:h+=`value /= ${u}(i32(uniforms.kernelSize) - pad);`;let[y,l,x,A,P]=od(s,i);y.push(...Ot(t.dims,s));let S=["rank"];return{name:e,shaderCache:{hint:`${n.cacheKey};${x};${A};${P}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Ie.size(s)/64)},programUniforms:y}),getShaderSource:Q=>ad(Q,o,t.dims.length,s.length,i,d,h,0,l,x,A,P)}},fc=e=>{let t=e.count_include_pad!==0,r=ud(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let n={countIncludePad:t,...r,cacheKey:""};return{...n,cacheKey:pc(n)}},mc=(e,t)=>{ws(e.inputs),e.compute(dd("AveragePool",e.inputs[0],!1,t))},cd={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},_c=e=>{let t=e.format;return{format:t,...cd,cacheKey:t}},gc=(e,t)=>{ws(e.inputs),e.compute(dd("GlobalAveragePool",e.inputs[0],!0,t))},pd=(e,t,r,n)=>{let[i,s]=sd(t,n,r),o=`
      value = max(x_val, value);
    `,u="",d=lt("x",t.dataType,t.dims.length),h=["rank"],[y,l,x,A,P]=od(s,i);return y.push(...Ot(t.dims,s)),{name:e,shaderCache:{hint:`${n.cacheKey};${x};${A};${P}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Ie.size(s)/64)},programUniforms:y}),getShaderSource:S=>ad(S,d,t.dims.length,s.length,i,o,u,t.dataType===10?-65504:-1e5,l,x,A,P)}},cr=(e,t)=>{ws(e.inputs),e.compute(pd("MaxPool",e.inputs[0],!1,t))},hd=e=>{let t=e.storage_order,r=e.dilations,n=ud(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...n,cacheKey:""};return{...i,cacheKey:hc(i)}},nn=e=>{let t=e.format;return{format:t,...cd,cacheKey:t}},un=(e,t)=>{ws(e.inputs),e.compute(pd("GlobalMaxPool",e.inputs[0],!0,t))}}),oi,wc,fd,md,g=R(()=>{rr(),Jt(),kr(),fr(),oi=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((r,n)=>r===e[2].dims[n]).reduce((r,n)=>r&&n,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((i,s)=>s===t.axis||i===e[0].dims[s]).reduce((i,s)=>i&&s,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let r=e[0].dims[t.axis],n=e[1].dims[t.axis];if(t.blockSize<Math.ceil(r/n)||t.blockSize>Math.ceil(r/(n-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},wc=(e,t)=>{let r=Ie.normalizeAxis(t.axis,e[0].dims.length),n=e[0].dataType,i=n===3,s=e[0].dims,o=e[1].dataType,u=Ie.size(s),d=n===3||n===2,h=d?[Math.ceil(Ie.size(e[0].dims)/4)]:e[0].dims,y=e[1].dims,l=e.length>2?e[2]:void 0,x=l?d?[Math.ceil(Ie.size(l.dims)/4)]:l.dims:void 0,A=y.length===0||y.length===1&&y[0]===1,P=A===!1&&y.length===1,S=br(u),Q=A&&(!d||S===4),K=Q?S:1,F=Q&&!d?S:1,re=lt("input",d?12:n,h.length,F),de=lt("scale",o,y.length),ge=l?lt("zero_point",d?12:n,x.length):void 0,qe=Kt("output",o,s.length,K),Fe=[re,de];ge&&Fe.push(ge);let bt=[h,y];l&&bt.push(x);let Vt=[{type:12,data:u/K},{type:12,data:r},{type:12,data:t.blockSize},...Ot(...bt,s)],jt=lr=>{let Zt=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${lr.registerUniforms(Zt).declareVariables(...Fe,qe)}
      ${lr.mainStart()}
          ${lr.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${qe.offsetToIndices("global_idx")};

          // Set input x
          ${d?`
            let input = ${re.getByOffset("global_idx / 4")};
            let x_vec = ${i?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${K===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${re.getByOffset("global_idx")};`};

          // Set scale input
          ${A?`let scale_value= ${de.getByOffset("0")}`:P?`
            let scale_index = ${qe.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${de.getByOffset("scale_index")};`:`
            var scale_indices: ${de.type.indices} = output_indices;
            let index = ${de.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${de.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${de.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${ge?A?d?`
                let zero_point_input = ${ge.getByOffset("0")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${ge.getByOffset("0")}`:P?d?`
                let zero_point_index = ${qe.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${ge.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${qe.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${ge.getByOffset("zero_point_index")};`:d?`
                let zero_point_offset = ${de.indicesToOffset("scale_indices")};
                let zero_point_input = ${ge.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${ge.getByIndices("scale_indices")};`:`let zero_point_value = ${d?i?"i32":"u32":re.type.value}(0);`};
      // Compute and write output
      ${qe.setByOffset("global_idx",`${qe.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:ge?["rank","rank","rank"]:["rank","rank"]},getShaderSource:jt,getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(u/K/64),y:1,z:1},programUniforms:Vt})}},fd=(e,t)=>{oi(e.inputs,t),e.compute(wc(e.inputs,t))},md=e=>hr({axis:e.axis,blockSize:e.blockSize})}),w,ie,Ne,Xe=R(()=>{c(),rr(),fr(),w=(e,t,r)=>{let n=e===t,i=e<t&&r<0,s=e>t&&r>0;if(n||i||s)throw new Error("Range these inputs' contents are invalid.")},ie=(e,t,r,n)=>{let i=Math.abs(Math.ceil((t-e)/r)),s=[i],o=i,u=[{type:12,data:o},{type:n,data:e},{type:n,data:r},...Ot(s)],d=h=>{let y=Kt("output",n,s.length),l=y.type.value,x=[{name:"outputSize",type:"u32"},{name:"start",type:l},{name:"delta",type:l}];return`
        ${h.registerUniforms(x).declareVariables(y)}
        ${h.mainStart()}
        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${l}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${n}`},getShaderSource:d,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:u})}},Ne=e=>{let t=0,r=0,n=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],n=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],n=e.inputs[2].getFloat32Array()[0]),I.webgpu.validateInputContent&&w(t,r,n),e.compute(ie(t,r,n,e.inputs[0].dataType),{inputs:[]})}}),ut,Bt,It,Yt,wr,Ur,zr,$r,tr,rn,Mr,vr,Vr,dn,Gr,sn,fn,en,on,Jo=R(()=>{rr(),Jt(),kr(),fr(),ut=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Bt=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let n=new Array(r).fill(1);return t.forEach((i,s)=>n[i]=e[s]),n},It=(e,t,r,n,i,s)=>{let[o,u,d]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach(y=>s.push(y));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(u>0&&e.length>u&&e[u].dims.length===1&&e[u].dims[0]>0){if(e[u].getFloat32Array().forEach(y=>n.push(y)),n.length!==0&&n.length!==h&&r>=18&&n.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");ut(n,t),t.axes.length>0&&Bt(n,t.axes,h).forEach((y,l)=>n[l]=y)}if(d>0&&e.length>d&&e[d].dims.length===1&&e[d].dims[0]>0&&(e[d].getBigInt64Array().forEach(y=>i.push(Number(y))),i.length!==0&&i.length!==h&&r>=18&&i.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(n.length!==0&&n.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==0&&i.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof n<"u"&&typeof i<"u"&&n.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Yt=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",wr=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Ur=(e,t,r)=>{let n=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?n:e.slice();return t.length>0?(t.forEach((s,o)=>{n[s]=i[o],n[o+r]=i[t.length+o]}),n):i},zr=(e,t,r,n)=>{let i=[];if(r.length>0)if(n.length>0){if(e.forEach(s=>i.push(s)),Math.max(...n)>e.length)throw new Error("axes is out of bound");n.forEach((s,o)=>i[s]=r[o])}else r.forEach(s=>i.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((s,o)=>Math.round(s*t[o]))}return i},$r=(e,t,r)=>{let n=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(s=>t[s]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(s=>t[s]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(s=>t[s]=n),r.axes.forEach(s=>i[s]=Math.round(e[s]*t[s]))):(t.fill(n,0,t.length),i.forEach((s,o)=>i[o]=Math.round(s*t[o]))),i},tr=(e,t,r,n,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${qt("uniforms.scales","i",n)};
        var roi_low = ${qt("uniforms.roi","i",i)};
        var roi_hi = ${qt("uniforms.roi",`i + ${t.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${qt("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${qt("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,rn=(e,t,r,n,i,s,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${qt("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${qt("uniforms.roi","i",s)};
          var roi_hi = ${qt("uniforms.roi",`i + ${r.length}`,s)};
          var input_shape_i = ${qt("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${qt("uniforms.output_shape","i",n.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,Mr=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${qt("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,vr=(e,t,r,n)=>e.rank>n?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",Vr=(e,t,r,n,i)=>{let[s,o,u,d]=r.length===2?[-1,0,1,-1]:[0,2,3,1],h=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${h} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(row, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(col, ${r[u]} - 1))`)};
      ${vr(e,d,s,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${h} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${h} = originalIndices[${o}];
      var col:${h} = originalIndices[${u}];
      ${n?`if (row < 0 || row > (${r[o]} - 1) || col < 0 || col > (${r[u]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${r[o]} - 1));
      col = max(0, min(col, ${r[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${h} = getInputValue(batch, channel, row1, col1);
      var x12: ${h} = getInputValue(batch, channel, row1, col2);
      var x21: ${h} = getInputValue(batch, channel, row2, col1);
      var x22: ${h} = getInputValue(batch, channel, row2, col2);
      var dx1: ${h} = abs(row - ${h}(row1));
      var dx2: ${h} = abs(${h}(row2) - row);
      var dy1: ${h} = abs(col - ${h}(col1));
      var dy2: ${h} = abs(${h}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},dn=(e,t,r,n,i,s,o,u,d,h)=>{let y=r.length===2,[l,x]=y?[0,1]:[2,3],A=e.type.value,P=S=>{let Q=S===l?"row":"col";return`
      fn ${Q}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${A} {
        var output_index = ${t.indicesGet("output_indices",S)};
        var originalIdx: ${A} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[S]},
        ${n[S]}, ${r[S]}, ${s[S]}, ${s[S]} + ${r.length});
        var fractOriginalIdx: ${A} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${u} && (originalIdx < 0 || originalIdx > (${r[S]} - 1))) {
          return ${d};
        }
        var data: array<${A}, 4> = array<${A}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${Q}: ${A} = originalIdx + ${A}(i);
          if (${Q} < 0 || ${Q} >= ${r[S]}) {
            ${h?`coefs[i + 1] = 0.0;
                        continue;`:u?`return ${d};`:`${Q} = max(0, min(${Q}, ${r[S]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",S,`u32(${Q})`)};
          data[i + 1] = ${S===l?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${P(l)};
    ${P(x)};
  fn getCubicInterpolationCoefs(s: ${A}) -> array<${A}, 4> {
    var absS = abs(s);
    var coeffs: array<${A}, 4> = array<${A}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${A} = 1.0 - absS;
    var twoMinusAbsS: ${A} = 2.0 - absS;
    var onePlusAbsS: ${A} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${A}, 4>, coefs: array<${A}, 4>) -> ${A} {
    var coefsSum: ${A} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${A} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Gr=(e,t,r,n,i)=>{let[s,o,u,d,h]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(depth, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(height, ${r[u]} - 1))`)};
      ${e.indicesSet("input_indices",d,`max(0, min(width, ${r[d]} - 1))`)};
      ${vr(e,h,s,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${y} = originalIndices[${o}];
      var height:${y} = originalIndices[${u}];
      var width:${y} = originalIndices[${d}];
      ${n?`if (depth < 0 || depth > (${r[o]} - 1) || height < 0 || height > (${r[u]} - 1) || width < 0 || (width > ${r[d]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${r[o]} - 1));
      height = max(0, min(height, ${r[u]} - 1));
      width = max(0, min(width, ${r[d]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${h}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${y} = abs(depth - ${y}(depth1));
      var dx2: ${y} = abs(${y}(depth2) - depth);
      var dy1: ${y} = abs(height - ${y}(height1));
      var dy2: ${y} = abs(${y}(height2) - height);
      var dz1: ${y} = abs(width - ${y}(width1));
      var dz2: ${y} = abs(${y}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},sn=(e,t,r,n,i,s)=>{let o=e.dims,u=Ur(s,t.axes,o.length),d=zr(o,n,i,t.axes),h=n.slice();n.length===0&&(h=o.map((F,re)=>F===0?1:d[re]/F),t.keepAspectRatioPolicy!=="stretch"&&(d=$r(o,h,t)));let y=Kt("output",e.dataType,d.length),l=lt("input",e.dataType,o.length),x=Ie.size(d),A=o.length===d.length&&o.every((F,re)=>F===d[re]),P=t.coordinateTransformMode==="tf_crop_and_resize",S=t.extrapolationValue,Q=l.type.value,K=F=>`
      ${A?"":`
      ${Yt(t.coordinateTransformMode,Q)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${Mr(l,o)};
              ${wr(t.nearestMode,r,Q)};
              ${rn(l,y,o,d,h.length,u.length,P)};
              `;case"linear":return`
              ${tr(y,o,d,h.length,u.length)};
              ${(()=>{if(o.length===2||o.length===4)return`${Vr(l,y,o,P,S)}`;if(o.length===3||o.length===5)return`${Gr(l,y,o,P,S)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(o.length===2||o.length===4)return`${dn(l,y,o,d,h,u,t.cubicCoeffA,P,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${F.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",u.length).declareVariables(l,y)}
      ${F.mainStart()}
        ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${A?"output[global_idx] = input[global_idx];":`
        let output_indices = ${y.offsetToIndices("global_idx")};
        var input_indices: ${l.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${l.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${o.length===2||o.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${u.length>0?u:""}|${A}|${o}`,inputDependencies:["rank"]},getShaderSource:K,getRunData:()=>({outputs:[{dims:d,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(x/64)},programUniforms:[{type:12,data:x},{type:1,data:h},{type:1,data:u},...Ot(o,d)]})}},fn=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},en=(e,t)=>{let r=[],n=[],i=[],s=fn(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");It(e.inputs,t,s,r,n,i),e.compute(sn(e.inputs[0],t,s,r,n,i),{inputs:[0]})},on=e=>{let t=e.antialias,r=e.axes,n=e.coordinateTransformMode,i=e.cubicCoeffA,s=e.excludeOutside!==0,o=e.extrapolationValue,u=e.keepAspectRatioPolicy,d=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return hr({antialias:t,axes:r,coordinateTransformMode:n,cubicCoeffA:i,excludeOutside:s,extrapolationValue:o,keepAspectRatioPolicy:u,mode:d,nearestMode:h})}}),Hi,Hc,Bn,Ki=R(()=>{rr(),Jt(),kr(),fr(),Hi=(e,t)=>{let[r,n,i,s]=e,{numHeads:o,rotaryEmbeddingDim:u}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!Ie.areEqual(n.dims,[])&&!Ie.areEqual(n.dims,[1])&&n.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${n.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(s.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(!Ie.areEqual(i.dims,s.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(u>0&&o===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let d=r.dims[0],h=r.dims[r.dims.length-2],y=i.dims[0],l=Ie.sizeFromDimension(r.dims,1)/h,x=u===0?i.dims[1]*2:l/o;if(u>x)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(n.dims.length===2){if(d!==n.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${n.dims[0]}`);if(h!==n.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${n.dims[1]}`)}if(x/2!==i.dims[1]&&u/2!==i.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(h>y)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Hc=(e,t)=>{let{interleaved:r,numHeads:n,rotaryEmbeddingDim:i,scale:s}=t,o=e[0].dims[0],u=Ie.sizeFromDimension(e[0].dims,1),d=e[0].dims[e[0].dims.length-2],h=u/d,y=e[2].dims[1],l=i===0?y*2:h/n,x=new Array(o,d,h/l,l-y),A=Ie.computeStrides(x),P=[{type:1,data:s},{type:12,data:x},{type:12,data:A},...e[0].dims.length===3?new Array({type:12,data:[u,h,l,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[u,l,d*l,1]}):[],...Ot(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],S=Q=>{let K=lt("input",e[0].dataType,e[0].dims.length),F=lt("position_ids",e[1].dataType,e[1].dims.length),re=lt("cos_cache",e[2].dataType,e[2].dims.length),de=lt("sin_cache",e[3].dataType,e[3].dims.length),ge=Kt("output",e[0].dataType,e[0].dims.length);return Q.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:x.length},{name:"global_strides",type:"u32",length:A.length},{name:"input_output_strides",type:"u32",length:A.length}]),`
        ${Q.declareVariables(K,F,re,de,ge)}

        ${Q.mainStart(pn)}
          let half_rotary_emb_dim = uniforms.${re.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${Q.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${F.broadcastedIndicesToOffset("bsnh.xy",Kt("",F.type.tensor,2))};
            let position_id =
                u32(${F.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});
            let j = i + select(half_rotary_emb_dim, 1, ${r});
            let re = ${K.getByOffset("i")} * ${re.get("position_id","bsnh[3]")} -
                ${K.getByOffset("j")} * ${de.get("position_id","bsnh[3]")};
            ${ge.setByOffset("i","re")}
            let im = ${K.getByOffset("i")} * ${de.get("position_id","bsnh[3]")} +
                ${K.getByOffset("j")} * ${re.get("position_id","bsnh[3]")};
            ${ge.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${ge.setByOffset("k",K.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:hr({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Ie.size(x)/pn)},programUniforms:P})}},Bn=(e,t)=>{Hi(e.inputs,t),e.compute(Hc(e.inputs,t))}}),yc,bc,Mc,vc=R(()=>{rr(),Jt(),fr(),yc=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],n=e[2];if(t.dataType!==r.dataType||t.dataType!==n.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(n.dims.length!==1)throw new Error("Gamma must be 1D");if(n.dims[n.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let o=e[3];if(o.dims.length!==1)throw new Error("Beta must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let o=e[4];if(o.dims.length!==1)throw new Error("Bias must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},bc=(e,t,r,n)=>{let i=t.simplified,s=e[0].dims,o=Ie.size(s),u=s,d=o,h=s.slice(-1)[0],y=n?s.slice(0,-1).concat(1):[],l=!i&&e.length>3,x=e.length>4,A=n&&r>1,P=n&&r>2,S=r>3,Q=64,K=br(h),F=[{type:12,data:d},{type:12,data:K},{type:12,data:h},{type:1,data:t.epsilon}],re=ge=>{let qe=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],Fe=[lt("x",e[0].dataType,e[0].dims,K),lt("skip",e[1].dataType,e[1].dims,K),lt("gamma",e[2].dataType,e[2].dims,K)];l&&Fe.push(lt("beta",e[3].dataType,e[3].dims,K)),x&&Fe.push(lt("bias",e[4].dataType,e[4].dims,K)),Fe.push(Kt("output",e[0].dataType,u,K)),A&&Fe.push(Kt("mean_output",1,y)),P&&Fe.push(Kt("inv_std_output",1,y)),S&&Fe.push(Kt("input_skip_bias_sum",e[0].dataType,u,K));let bt=gr(e[0].dataType),Vt=gr(1,K);return`

      ${ge.registerUniforms(qe).declareVariables(...Fe)}
      var<workgroup> sum_shared : array<${Vt}, ${Q}>;
      var<workgroup> sum_squared_shared : array<${Vt}, ${Q}>;

      ${ge.mainStart([Q,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${Q};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${Q};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${Q-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${x?"bias[offset1d + i]":bt+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${S?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Yn(bt,K,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${Q};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Nn("sum",K)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Nn("square_sum",K)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);
        ${A?"mean_output[global_idx] = mean;":""}
        ${P?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${i?"":`- ${bt}(mean)`}) *
            ${bt}(inv_std_dev) * gamma[offset1d + i]
            ${l?"+ beta[offset1d + i]":""};
        }
      }`},de=[{dims:u,dataType:e[0].dataType}];return r>1&&de.push({dims:y,dataType:1}),r>2&&de.push({dims:y,dataType:1}),r>3&&de.push({dims:s,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${K};${A};${P};${S}`,inputDependencies:e.map((ge,qe)=>"type")},getShaderSource:re,getRunData:()=>({outputs:de,dispatchGroup:{x:Math.ceil(d/h)},programUniforms:F})}},Mc=(e,t)=>{yc(e.inputs);let r=[0];e.outputCount>1&&r.push(-3),e.outputCount>2&&r.push(-3),e.outputCount>3&&r.push(3),e.compute(bc(e.inputs,t,e.outputCount,!1),{outputs:r})}}),Hp,_d,Kp,Kc,Xp,Qp,Yp,Zp,Cm=R(()=>{rr(),Jt(),kr(),fr(),Hp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,n)=>{if(e[n+1].dataType!==6&&e[n+1].dataType!==7)throw new Error(`Input ${n} must be an array of int32 or int64`)})},_d=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(n=>r.push(Number(n)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(n=>r.push(Number(n)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Kp=(e,t)=>{if(e.length>1){let r=_d(e,1),n=_d(e,2),i=_d(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),hr({starts:r,ends:n,axes:i})}else return t},Kc=(e,t,r,n,i)=>{let s=e;return e<0&&(s+=r[n[t]]),i[t]<0?Math.max(0,Math.min(s,r[n[t]]-1)):Math.max(0,Math.min(s,r[n[t]]))},Xp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${qt("uniforms.input_shape","i",r.length)};
            let steps_i = ${qt("uniforms.steps","i",r.length)};
            let signs_i = ${qt("uniforms.signs","i",r.length)};
            let starts_i = ${qt("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,Qp=(e,t)=>{let r=e[0].dims,n=Ie.size(r),i=t.axes.length>0?Ie.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=_d(e,4);s.forEach(K=>K!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(i.length).fill(1));let o=t.starts.map((K,F)=>Kc(K,F,r,i,s)),u=t.ends.map((K,F)=>Kc(K,F,r,i,s));if(i.length!==o.length||i.length!==u.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let K=0;K<r.length;++K)i.includes(K)||(o.splice(K,0,0),u.splice(K,0,r[K]),s.splice(K,0,1));let d=s.map(K=>Math.sign(K));s.forEach((K,F,re)=>{if(K<0){let de=(u[F]-o[F])/K,ge=o[F],qe=ge+de*s[F];o[F]=qe,u[F]=ge,re[F]=-K}});let h=r.slice(0);i.forEach((K,F)=>{h[K]=Math.ceil((u[K]-o[K])/s[K])});let y={dims:h,dataType:e[0].dataType},l=Kt("output",e[0].dataType,h.length),x=lt("input",e[0].dataType,e[0].dims.length),A=Ie.size(h),P=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:d.length},{name:"steps",type:"u32",length:s.length}],S=[{type:12,data:A},{type:12,data:o},{type:6,data:d},{type:12,data:s},...Ot(e[0].dims,h)],Q=K=>`
      ${K.registerUniforms(P).declareVariables(x,l)}
        ${Xp(x,l,r)}
        ${K.mainStart()}
          ${K.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${l.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${l.setByOffset("global_idx",x.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${d.length}_${o.length}_${s.length}`,inputDependencies:["rank"]},getShaderSource:Q,getRunData:()=>({outputs:[y],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:S})}},Yp=(e,t)=>{Hp(e.inputs,t);let r=Kp(e.inputs,t);e.compute(Qp(e.inputs,r),{inputs:[0]})},Zp=e=>{let t=e.starts,r=e.ends,n=e.axes;return hr({starts:t,ends:r,axes:n})}}),Jp,eh,th,rh,$m=R(()=>{rr(),Jt(),kr(),jn(),fr(),Jp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},eh=(e,t)=>{let r=e.inputs[0],n=r.dims,i=Ie.size(n),s=64,o=n.length,u=Ie.normalizeAxis(t.axis,o),d=u<n.length-1,h,y=[];d?(y=Array.from({length:o},(Fe,bt)=>bt),y[u]=o-1,y[o-1]=u,h=e.compute(Mn(r,y),{inputs:[r],outputs:[-1]})[0]):h=r;let l=h.dims,x=l[o-1],A=i/x,P=br(x),S=x/P,Q=(Fe,bt)=>bt===4?`max(max(${Fe}.x, ${Fe}.y), max(${Fe}.z, ${Fe}.w))`:bt===2?`max(${Fe}.x, ${Fe}.y)`:bt===3?`max(max(${Fe}.x, ${Fe}.y), ${Fe}.z)`:Fe,K=lt("x",h.dataType,h.dims,P),F=Kt("result",h.dataType,h.dims,P),re=K.type.value,de=gr(h.dataType)==="f32"?`var threadMax = ${re}(-3.402823e+38f);`:`var threadMax = ${re}(-65504.0h);`,ge=Fe=>`
      var<workgroup> rowMaxShared : ${re};
      var<workgroup> rowSumShared : ${re};
      var<workgroup> threadShared : array<${re}, ${s}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${re} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${re}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${Fe.registerUniform("packedCols","i32").declareVariables(K,F)}
      ${Fe.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${s};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${de}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${re}(${Q("threadShared[0]",P)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${re}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${re}(${Nn("threadShared[0]",P)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,qe=e.compute({name:"Softmax",shaderCache:{hint:`${P}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:l,dataType:h.dataType}],dispatchGroup:{x:A},programUniforms:[{type:6,data:S}]}),getShaderSource:ge},{inputs:[h],outputs:[d?-1:0]})[0];d&&e.compute(Mn(qe,y),{inputs:[qe]})},th=(e,t)=>{Jp(e.inputs),eh(e,t)},rh=e=>hr({axis:e.axis})}),Xc,nh,ih,sh,oh,Sm=R(()=>{rr(),Jt(),fr(),Xc=e=>Array.from(e.getBigInt64Array(),Number),nh=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Xc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},ih=(e,t)=>{let r=[];for(let n=0;n<e.length;++n)r.push(e[n]*t[n]);return r},sh=(e,t)=>{let r=e[0].dims,n=t??Xc(e[1]),i=ih(r,n),s=Ie.size(i),o=e[0].dataType,u=lt("input",o,r.length),d=Kt("output",o,i.length),h=y=>`
      const inputShape = ${u.indices(...r)};
      ${y.registerUniform("output_size","u32").declareVariables(u,d)}
      ${y.mainStart()}
      ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${d.offsetToIndices("global_idx")};
      var input_indices: ${u.type.indices};
      for (var i = 0; i < ${r.length}; i++) {
        let input_dim_i = ${u.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${d.indicesGet("output_indices","i")}  % input_dim_i;

        ${u.indicesSet("input_indices","i","input_dim_value")}
      }
      ${d.setByOffset("global_idx",u.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},...Ot(e[0].dims,i)]}),getShaderSource:h}},oh=e=>{nh(e.inputs),e.compute(sh(e.inputs),{inputs:[0]})}}),ah,lh,uh,km=R(()=>{rr(),Jt(),fr(),ah=(e,t,r,n,i)=>{let s=Kt("output_data",i,r.length,4),o=lt("a_data",t[1].dataType,t[1].dims.length,4),u=lt("b_data",t[2].dataType,t[2].dims.length,4),d=lt("c_data",t[0].dataType,t[0].dims.length,4),h,y=(l,x,A)=>`select(${x}, ${l}, ${A})`;if(!n)h=s.setByOffset("global_idx",y(o.getByOffset("global_idx"),u.getByOffset("global_idx"),d.getByOffset("global_idx")));else{let l=(x,A,P="")=>{let S=`a_data[index_a${A}][component_a${A}]`,Q=`b_data[index_b${A}][component_b${A}]`,K=`bool(c_data[index_c${A}] & (0xffu << (component_c${A} * 8)))`;return`
            let output_indices${A} = ${s.offsetToIndices(`global_idx * 4u + ${A}u`)};
            let offset_a${A} = ${o.broadcastedIndicesToOffset(`output_indices${A}`,s)};
            let offset_b${A} = ${u.broadcastedIndicesToOffset(`output_indices${A}`,s)};
            let offset_c${A} = ${d.broadcastedIndicesToOffset(`output_indices${A}`,s)};
            let index_a${A} = offset_a${A} / 4u;
            let index_b${A} = offset_b${A} / 4u;
            let index_c${A} = offset_c${A} / 4u;
            let component_a${A} = offset_a${A} % 4u;
            let component_b${A} = offset_b${A} % 4u;
            let component_c${A} = offset_c${A} % 4u;
            ${x}[${A}] = ${P}(${y(S,Q,K)});
          `};i===9?h=`
            var data = vec4<u32>(0);
            ${l("data",0,"u32")}
            ${l("data",1,"u32")}
            ${l("data",2,"u32")}
            ${l("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`
            ${l("output_data[global_idx]",0)}
            ${l("output_data[global_idx]",1)}
            ${l("output_data[global_idx]",2)}
            ${l("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(d,o,u,s)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${h}
      }`},lh=e=>{let t=e[1].dims,r=e[2].dims,n=e[0].dims,i=e[1].dataType,s=!(Ie.areEqual(t,r)&&Ie.areEqual(r,n)),o=t,u=Ie.size(t);if(s){let h=Sn.calcShape(Sn.calcShape(t,r,!1),n,!1);if(!h)throw new Error("Can't perform where op on the given tensors");o=h,u=Ie.size(o)}let d=Math.ceil(u/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>ah(h,e,o,s,i),getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:d},...Ot(n,t,r,o)]})}},uh=e=>{e.compute(lh(e.inputs))}}),dh,Pm=R(()=>{Wa(),as(),Pd(),tl(),Il(),Ad(),Id(),zd(),Fo(),Nd(),Tu(),Do(),Ud(),Vd(),Fu(),qd(),Hd(),Wc(),Qd(),Yd(),Zd(),iu(),Gc(),Ko(),qc(),gn(),g(),Xe(),Gs(),Jo(),Ki(),vc(),Cm(),$m(),Ku(),Sm(),jn(),uo(),km(),dh=new Map([["Abs",[Zs]],["Acos",[nl]],["Acosh",[il]],["Add",[Bl]],["ArgMax",[Va,Ks]],["ArgMin",[Hs,Ks]],["Asin",[sl]],["Asinh",[ol]],["Atan",[Js]],["Atanh",[al]],["Attention",[Xa]],["AveragePool",[mc,fc]],["BatchNormalization",[Za]],["BiasAdd",[el]],["BiasSplitGelu",[Al]],["Cast",[ul,ll]],["Ceil",[cl]],["Clip",[eo]],["Concat",[Gl,ql]],["Conv",[ko,$o]],["ConvTranspose",[gu,Ti]],["Cos",[pl]],["Cosh",[hl]],["CumSum",[wu,yu]],["DepthToSpace",[vu,xu]],["DequantizeLinear",[fd,md]],["Div",[zl]],["Einsum",[ku,zo]],["Elu",[to,Ri]],["Equal",[po]],["Erf",[fl]],["Exp",[ro]],["Expand",[Au]],["FastGelu",[Iu]],["Floor",[ml]],["FusedConv",[ko,$o]],["Gather",[Uo,Gd]],["GatherElements",[Go,Lu]],["GatherBlockQuantized",[Vo,zu]],["Gelu",[_l]],["Gemm",[Lr,ju]],["GlobalAveragePool",[gc,_c]],["GlobalMaxPool",[un,nn]],["Greater",[Rl]],["GreaterOrEqual",[fo]],["GroupQueryAttention",[Yu]],["HardSigmoid",[Ml,so]],["InstanceNormalization",[ed]],["LayerNormalization",[nd]],["LeakyRelu",[no,Ri]],["Less",[Nl]],["LessOrEqual",[jl]],["Log",[$l]],["MatMul",[Co]],["MatMulNBits",[tc,rc]],["MaxPool",[cr,hd]],["Mul",[Dl]],["MultiHeadAttention",[Vu,qo]],["Neg",[wl]],["Not",[gl]],["Pad",[cc]],["Pow",[Ll]],["QuickGelu",[kl,Ri]],["Range",[Ne]],["Reciprocal",[io]],["ReduceMin",[Na]],["ReduceMean",[js]],["ReduceMax",[Ra]],["ReduceSum",[ja]],["ReduceProd",[Vs]],["ReduceL1",[Da]],["ReduceL2",[La]],["ReduceLogSum",[Ws]],["ReduceLogSumExp",[Us]],["ReduceSumSquare",[Ua]],["Relu",[yl]],["Resize",[en,on]],["RotaryEmbedding",[Bn]],["Sigmoid",[bl]],["Sin",[vl]],["Sinh",[us]],["Slice",[Yp,Zp]],["SkipLayerNormalization",[Mc]],["Split",[Xd,Hu]],["Sqrt",[xl]],["Softmax",[th,rh]],["Sub",[ho]],["Tan",[Tl]],["Tanh",[oo]],["ThresholdedRelu",[Cl,Ri]],["Tile",[oh]],["Transpose",[Sd,ma]],["Where",[uh]]])}),ch,Am=R(()=>{c(),_(),fr(),ch=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,r,n,i){Ze(e.programInfo.name);let s=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let u=[];for(let h of t)u.push({binding:u.length,resource:{buffer:h.buffer}});for(let h of r)u.push({binding:u.length,resource:{buffer:h.buffer}});i&&u.push({binding:u.length,resource:i});let d=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let h={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:d,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(h)}o.setPipeline(e.computePipeline),o.setBindGroup(0,d),o.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),He(e.programInfo.name)}dispose(){}build(e,t){Ze(e.name);let r=this.backend.device,n=[];r.features.has("shader-f16")&&n.push("enable f16;");let i=pa(t,this.backend.device.limits),s=e.getShaderSource(i),o=`${n.join(`
`)}
${i.additionalImplementations}
${s}`,u=r.createShaderModule({code:o,label:e.name});_e("verbose",()=>`[WebGPU] ${e.name} shader code: ${o}`);let d=r.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return He(e.name),{programInfo:e,computePipeline:d,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let t=typeof e=="number"?e:e.x,r=typeof e=="number"?1:e.y||1,n=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=i&&r<=i&&n<=i)return[t,r,n];let s=t*r*n,o=Math.ceil(Math.sqrt(s));if(o>i){if(o=Math.ceil(Math.cbrt(s)),o>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}else return[o,o,1]}}}),ph,hh,fh,mh,Im=R(()=>{c(),rr(),_(),oe(),Xr(),Pm(),Am(),ph=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let n=0;n<e.length;++n){let i=e[n].dataType;switch(t[n]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let s=e[n].dims.length;r.push(`${i};${s}`);break}case"dims":{let s=e[n].dims.join(",");r.push(`${i};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[n]}`)}}return r.join("|")},hh=(e,t,r)=>{let n=e.name;return e.shaderCache?.hint&&(n+="["+e.shaderCache.hint+"]"),n+=":"+r+`:${ph(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,n},fh=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},mh=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let r=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r};t.features.has("chromium-experimental-timestamp-query-inside-passes")?r.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&r.push("timestamp-query"),t.features.has("shader-f16")&&r.push("shader-f16"),this.device=await t.requestDevice(n),this.adapterInfo=new fh(t.info||await t.requestAdapterInfo()),this.gpuDataManager=Cr(this),this.programManager=new ch(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ni(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Ze(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let t=new BigUint64Array(e.getMappedRange()),r=this.pendingQueries.get(e);for(let n=0;n<t.length/2;n++){let i=r[n],s=i.kernelId,o=this.kernels.get(s),u=o.kernelType,d=o.kernelName,h=i.programName,y=i.inputTensorViews,l=i.outputTensorViews,x=t[n*2],A=t[n*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=x);let P=Number(x-this.queryTimeBase),S=Number(A-this.queryTimeBase);if(!Number.isSafeInteger(P)||!Number.isSafeInteger(S))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(Q=>({dims:Q.dims,dataType:$n(Q.dataType)})),outputsMetadata:l.map(Q=>({dims:Q.dims,dataType:$n(Q.dataType)})),kernelId:s,kernelType:u,kernelName:d,programName:h,startTime:P,endTime:S});else{let Q="";y.forEach((F,re)=>{Q+=`input[${re}]: [${F.dims}] | ${$n(F.dataType)}, `});let K="";l.forEach((F,re)=>{K+=`output[${re}]: [${F.dims}] | ${$n(F.dataType)}, `}),console.log(`[profiling] kernel "${s}|${u}|${d}|${h}" ${Q}${K}execution time: ${S-P} ns`)}nt("GPU",`${h}::${x}::${A}`)}e.unmap(),this.pendingQueries.delete(e)}),He()}run(e,t,r,n,i,s){Ze(e.name);let o=[];for(let F=0;F<t.length;++F){let re=t[F].data;if(re===0)continue;let de=this.gpuDataManager.get(re);if(!de)throw new Error(`no GPU data for input: ${re}`);o.push(de)}let{outputs:u,dispatchGroup:d,programUniforms:h}=e.getRunData(t),y=r.length===0?u.map((F,re)=>re):r;if(y.length!==u.length)throw new Error(`Output size ${y.length} must be equal to ${u.length}.`);let l=[],x=[];for(let F=0;F<u.length;++F){if(!Number.isInteger(y[F])||y[F]<-3||y[F]>=s)throw new Error(`Invalid output index: ${y[F]}`);if(y[F]===-3)continue;let re=y[F]===-1,de=y[F]===-2,ge=re||de?i(u[F].dataType,u[F].dims):n(y[F],u[F].dataType,u[F].dims);if(l.push(ge),ge.data===0)continue;let qe=this.gpuDataManager.get(ge.data);if(!qe)throw new Error(`no GPU data for output: ${ge.data}`);if(re&&this.temporaryData.push(qe),de){let Fe=this.kernelPersistentData.get(this.currentKernelId);Fe||(Fe=[],this.kernelPersistentData.set(this.currentKernelId,Fe)),Fe.push(qe)}x.push(qe)}if(o.length!==t.length||x.length!==l.length){if(x.length===0)return He(e.name),l;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let A;if(h){let F=0,re=[];h.forEach(Fe=>{let bt=typeof Fe.data=="number"?[Fe.data]:Fe.data;if(bt.length===0)return;let Vt=Fe.type===10?2:4,jt,lr;Fe.type===10?(lr=bt.length>4?16:bt.length>2?8:bt.length*Vt,jt=bt.length>4?16:Vt*bt.length):(lr=bt.length<=2?bt.length*Vt:16,jt=16),F=Math.ceil(F/lr)*lr,re.push(F);let Zt=Fe.type===10?8:4;F+=bt.length>4?Math.ceil(bt.length/Zt)*jt:bt.length*Vt});let de=16;F=Math.ceil(F/de)*de;let ge=new ArrayBuffer(F);h.forEach((Fe,bt)=>{let Vt=re[bt],jt=typeof Fe.data=="number"?[Fe.data]:Fe.data;if(Fe.type===6)new Int32Array(ge,Vt,jt.length).set(jt);else if(Fe.type===12)new Uint32Array(ge,Vt,jt.length).set(jt);else if(Fe.type===10)new Uint16Array(ge,Vt,jt.length).set(jt);else if(Fe.type===1)new Float32Array(ge,Vt,jt.length).set(jt);else throw new Error(`Unsupported uniform type: ${$n(Fe.type)}`)});let qe=this.gpuDataManager.create(F,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(qe.buffer,0,ge,0,F),this.gpuDataManager.release(qe.id),A={offset:0,size:F,buffer:qe.buffer}}let P=this.programManager.normalizeDispatchGroupSize(d),S=P[1]===1&&P[2]===1,Q=hh(e,t,S),K=this.programManager.getArtifact(Q);if(K||(K=this.programManager.build(e,P),this.programManager.setArtifact(Q,K),_e("info",()=>`[artifact] key: ${Q}, programName: ${e.name}`)),h&&K.uniformVariablesInfo){if(h.length!==K.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${K.uniformVariablesInfo.length}, got ${h.length} in program "${K.programInfo.name}".`);for(let F=0;F<h.length;F++){let re=h[F],de=re.type,ge=typeof re.data=="number"?1:re.data.length,[qe,Fe]=K.uniformVariablesInfo[F];if(de!==qe||ge!==Fe)throw new Error(`Uniform variable ${F} mismatch: expect type ${qe} with size ${Fe}, got type ${de} with size ${ge} in program "${K.programInfo.name}".`)}}if(_e("info",()=>`[ProgramManager] run "${e.name}" (key=${Q}) with ${P[0]}x${P[1]}x${P[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let F={kernelId:this.currentKernelId,programName:K.programInfo.name,inputTensorViews:t,outputTensorViews:l};this.pendingKernels.push(F),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(F)}return this.programManager.run(K,o,x,P,A),He(e.name),l}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,r,n){let i=dh.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let s={kernelType:e,kernelName:n,kernelEntry:i[0],attributes:[i[1],r]};this.kernels.set(t,s)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let r of t)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,r){let n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);let i=n.kernelType,s=n.kernelName,o=n.kernelEntry,u=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${s}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),_e("info",()=>`[WebGPU] Start to run kernel "[${i}] ${s}"...`);let d=this.env.debug;this.temporaryData=[];try{return d&&this.device.pushErrorScope("validation"),o(t,u[1]),0}catch(h){return r.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${s}" failed. ${h}`)),1}finally{d&&r.push(this.device.popErrorScope().then(h=>h?`GPU validation error for kernel "[${i}] ${s}": ${h.message}`:null));for(let h of this.temporaryData)this.gpuDataManager.release(h.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,r,n){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let s=i.get(t),o=this.gpuDataManager.registerExternalBuffer(r,n,s);return i.set(t,[o,r]),o}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,r){return async()=>{let n=await _r(this,e,t);return W(n.buffer,r)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){_e("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){_e("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){_e("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),r=e.length;this.pendingKernels=[];for(let n=0;n<r;n++){let i=this.getComputePassEncoder(),s=e[n];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(s.computePipeline),i.setBindGroup(0,s.bindGroup),i.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),_h,Qc,Yc,Zc,gh,wh,Fm=R(()=>{_(),_h=1,Qc=()=>_h++,Yc=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}destroy(){_e("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}sameTypeAndShape(e,t){return this.dataType===e&&this.tensorShape.every((r,n)=>r===t[n])}},Zc=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&this.tensorManager.releaseTensor(this.tensorWrapper)}async ensureTensor(e,t,r){if(this.wrapper){if(this.wrapper.sameTypeAndShape(e,t))return this.wrapper.tensor;r&&(this.activeUpload=new Uint8Array(await this.wrapper.read())),this.tensorManager.releaseTensor(this.wrapper)}let n=MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,t,n,!0,!0),r&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){if(this.wrapper){this.wrapper.write(e);return}this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(e):this.wrapper.read()}},gh=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let e=Qc();return this.tensorTrackersById.set(e,new Zc(this)),e}releaseTensorId(e){let t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,r,n){_e("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${r}, copyOld: ${n}}`);let i=this.tensorTrackersById.get(e);if(!i)throw new Error("Tensor not found.");return i.ensureTensor(t,r,n)}upload(e,t){let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");r.upload(t)}async download(e,t){_e("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t?.byteLength}}`);let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");return r.download(t)}releaseTensorsForSession(e){for(let t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter(t=>t.sessionId!==e)}registerTensor(e,t,r,n){let i=Qc(),s=new Yc({sessionId:this.backend.currentSessionId,context:e,tensor:t,dataType:r,shape:n});return this.tensorTrackersById.set(i,new Zc(this,s)),this.externalTensors.add(s),i}async getCachedTensor(e,t,r,n,i){let s=this.backend.currentSessionId;for(let[d,h]of this.freeTensors.entries())if(h.sameTypeAndShape(e,t)){let y=this.freeTensors.splice(d,1)[0];return y.sessionId=s,y}let o=this.backend.currentContext;_e("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`);let u=await o.createTensor({dataType:e,shape:t,dimensions:t,usage:r,writable:n,readable:i});return new Yc({sessionId:s,context:o,tensor:u,dataType:e,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},wh=(...e)=>new gh(...e)}),Jc,yh,Om=R(()=>{rr(),Dr(),oe(),Fm(),_(),Jc=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),yh=class{constructor(e){this.tensorManager=wh(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,ni(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let r=this.sessionIdsByMLContext.get(t);r||(r=new Set,this.sessionIdsByMLContext.set(t,r)),r.add(e)}onReleaseSession(e){let t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let r=this.sessionIdsByMLContext.get(t);r.delete(e),r.size===0&&this.sessionIdsByMLContext.delete(t)}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){_e("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,r,n){let i=Jc.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,i,r,n)}uploadTensor(e,t){if(!Er().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");_e("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let r=await this.tensorManager.download(e);return W(r,t)}}registerMLTensor(e,t,r){let n=Jc.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);let i=this.tensorManager.registerTensor(this.currentContext,e,n,r);return _e("verbose",()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${n}, dimensions: ${r}} -> {tensorId: ${i}}`),i}registerMLConstant(e,t,r,n,i,s){if(!s)throw new Error("External mounted files are not available.");let o=e;e.startsWith("./")&&(o=e.substring(2));let u=s.get(o);if(!u)throw new Error(`File with name ${o} not found in preloaded files.`);if(t+r>u.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let d=u.slice(t,t+r).buffer,h;switch(i.dataType){case"float32":h=new Float32Array(d);break;case"float16":h=new Uint16Array(d);break;case"int32":h=new Int32Array(d);break;case"uint32":h=new Uint32Array(d);break;case"int64":h=new BigInt64Array(d);break;case"uint64":h=new BigUint64Array(d);break;case"int8":h=new Int8Array(d);break;case"uint8":h=new Uint8Array(d);break;default:throw new Error(`Unsupported data type: ${i.dataType} in creating WebNN Constant from external data.`)}return _e("verbose",()=>`[WebNN] registerMLConstant {dataType: ${i.dataType}, shape: ${i.shape}}}`),n.constant(i,h)}flush(){}}}),bh={};O(bh,{init:()=>vh});var xc,Mh,vh,Bm=R(()=>{rr(),Im(),_(),Jt(),Om(),xc=class vm{constructor(t,r,n,i){this.module=t,this.dataType=r,this.data=n,this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=Ie.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=Ie.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=Ie.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let t=Ie.size(this.dims);return t===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(Ie.size(t)!==Ie.size(this.dims))throw new Error("Invalid new shape");return new vm(this.module,this.dataType,this.data,t)}},Mh=class{constructor(e,t,r){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let n=e.HEAPU32,i=r>>>2;this.opKernelContext=n[i++];let s=n[i++];this.outputCount=n[i++],this.customDataOffset=n[i++],this.customDataSize=n[i++];let o=[];for(let u=0;u<s;u++){let d=n[i++],h=n[i++],y=n[i++],l=[];for(let x=0;x<y;x++)l.push(n[i++]);o.push(new xc(e,d,h,l))}this.inputs=o}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,t){let r=t?.inputs?.map(o=>typeof o=="number"?this.inputs[o]:o)??this.inputs,n=t?.outputs??[],i=(o,u,d)=>new xc(this.module,u,this.output(o,d),d),s=(o,u)=>{let d=Ln(o,u);if(!d)throw new Error(`Unsupported data type: ${o}`);let h=d>0?this.backend.gpuDataManager.create(d).id:0;return new xc(this.module,o,h,u)};return this.backend.run(e,r,n,i,s,this.outputCount)}output(e,t){let r=this.module.stackSave();try{let n=this.module.stackAlloc((1+t.length)*4),i=n>>2;this.module.HEAPU32[i++]=t.length;for(let s=0;s<t.length;s++)this.module.HEAPU32[i++]=t[s];return this.module._JsepOutput(this.opKernelContext,e,n)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(r)}}},vh=async(e,t,r,n)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let s=new mh;await s.initialize(r,n),i("webgpu",[s,o=>s.alloc(o),o=>s.free(o),(o,u,d,h=!1)=>{if(h)_e("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${o}, dst=${u}, size=${d}`),s.memcpy(o,u);else{_e("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${o}, gpuDataId=${u}, size=${d}`);let y=t.HEAPU8.subarray(o>>>0,(o>>>0)+d);s.upload(u,y)}},async(o,u,d)=>{_e("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${u}, size=${d}`),await s.download(o,()=>t.HEAPU8.subarray(u>>>0,(u>>>0)+d))},(o,u,d)=>s.createKernel(o,u,d,t.UTF8ToString(t._JsepGetNodeName(u))),o=>s.releaseKernel(o),(o,u,d,h)=>{_e("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${d}, kernel=${o}, contextDataOffset=${u}`);let y=new Mh(t,s,u);return s.computeKernel(o,y,h)},()=>s.captureBegin(),()=>s.captureEnd(),()=>s.replay()])}else{let s=new yh(r);i("webnn",[s,()=>s.reserveTensorId(),o=>s.releaseTensorId(o),async(o,u,d,h)=>s.ensureTensor(o,u,d,h),(o,u)=>{s.uploadTensor(o,u)},async(o,u)=>s.downloadTensor(o,u)])}}}),xh,ep,tp,Xi,Th,Tc,rp,np,ip,sp,op,ap,Eh=R(()=>{Xn(),ti(),rr(),Dr(),mi(),Bi(),xh=(e,t)=>{Er()._OrtInit(e,t)!==0&&Nr("Can't initialize onnxruntime.")},ep=async e=>{xh(e.wasm.numThreads,On(e.logLevel))},tp=async(e,t)=>{{let r=(Bm(),U(bh)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=e.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let s=e.webgpu.forceFallbackAdapter;if(s!==void 0&&typeof s!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${s}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:s}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await r("webgpu",Er(),e,n)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Er(),e)}}},Xi=new Map,Th=e=>{let t=Er(),r=t.stackSave();try{let n=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,n,n+4)!==0&&Nr("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(r)}},Tc=e=>{let t=Er(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},rp=async(e,t)=>{let r,n,i=Er();Array.isArray(e)?[r,n]=e:e.buffer===i.HEAPU8.buffer?[r,n]=[e.byteOffset,e.byteLength]:[r,n]=Tc(e);let s=0,o=0,u=0,d=[],h=[],y=[];try{if([o,d]=Oi(t),t?.externalData&&i.mountExternalData){let F=[];for(let re of t.externalData){let de=typeof re=="string"?re:re.path;F.push(ri(typeof re=="string"?re:re.data).then(ge=>{i.mountExternalData(de,ge)}))}await Promise.all(F)}for(let F of t?.executionProviders??[])if((typeof F=="string"?F:F.name)==="webnn"){if(i.shouldTransferToMLTensor=!1,i.currentContext)throw new Error("WebNN execution provider is already set.");if(typeof F!="string"){let re=F,de=re?.context,ge=re?.gpuDevice,qe=re?.deviceType,Fe=re?.powerPreference;de?i.currentContext=de:ge?i.currentContext=await navigator.ml.createContext(ge):i.currentContext=await navigator.ml.createContext({deviceType:qe,powerPreference:Fe})}else i.currentContext=await navigator.ml.createContext();break}s=await i._OrtCreateSession(r,n,o),s===0&&Nr("Can't create a session."),i.jsepOnCreateSession?.(),i.currentContext&&(i.jsepRegisterMLContext(s,i.currentContext),i.currentContext=void 0,i.shouldTransferToMLTensor=!0);let[l,x]=Th(s),A=!!t?.enableGraphCapture,P=[],S=[],Q=[];for(let F=0;F<l;F++){let re=i._OrtGetInputName(s,F);re===0&&Nr("Can't get an input name."),h.push(re),P.push(i.UTF8ToString(re))}for(let F=0;F<x;F++){let re=i._OrtGetOutputName(s,F);re===0&&Nr("Can't get an output name."),y.push(re);let de=i.UTF8ToString(re);S.push(de);{if(A&&t?.preferredOutputLocation===void 0){Q.push("gpu-buffer");continue}let ge=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[de]??"cpu";if(ge!=="cpu"&&ge!=="cpu-pinned"&&ge!=="gpu-buffer"&&ge!=="ml-tensor")throw new Error(`Not supported preferred output location: ${ge}.`);if(A&&ge!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${ge}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);Q.push(ge)}}let K=null;return Q.some(F=>F==="gpu-buffer"||F==="ml-tensor")&&(u=i._OrtCreateBinding(s),u===0&&Nr("Can't create IO binding."),K={handle:u,outputPreferredLocations:Q,outputPreferredLocationsEncoded:Q.map(F=>yi(F))}),Xi.set(s,[s,h,y,K,A,!1]),[s,P,S]}catch(l){throw h.forEach(x=>i._OrtFree(x)),y.forEach(x=>i._OrtFree(x)),u!==0&&i._OrtReleaseBinding(u),s!==0&&i._OrtReleaseSession(s),l}finally{i._free(r),o!==0&&i._OrtReleaseSessionOptions(o),d.forEach(l=>i._free(l)),i.unmountExternalData?.()}},np=e=>{let t=Er(),r=Xi.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[n,i,s,o,u]=r;o&&(u&&t._OrtClearBoundOutputs(o.handle),t._OrtReleaseBinding(o.handle)),t.jsepOnReleaseSession?.(e),i.forEach(d=>t._OrtFree(d)),s.forEach(d=>t._OrtFree(d)),t._OrtReleaseSession(n),Xi.delete(e)},ip=(e,t,r,n,i,s=!1)=>{if(!e){t.push(0);return}let o=Er(),u=e[0],d=e[1],h=e[3],y,l;if(u==="string"&&(h==="gpu-buffer"||h==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(s&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let P=e[2].gpuBuffer;l=Ln(Qn(u),d);let S=o.jsepRegisterBuffer;if(!S)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');y=S(n,i,P,l)}else if(h==="ml-tensor"){let P=e[2].mlTensor;l=Ln(Qn(u),d);let S=o.jsepRegisterMLTensor;if(!S)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');y=S(P,Qn(u),d)}else{let P=e[2];if(Array.isArray(P)){l=4*P.length,y=o._malloc(l),r.push(y);let S=y/4;for(let Q=0;Q<P.length;Q++){if(typeof P[Q]!="string")throw new TypeError(`tensor data at index ${Q} is not a string`);o.HEAPU32[S++]=Ar(P[Q],r)}}else l=P.byteLength,y=o._malloc(l),r.push(y),o.HEAPU8.set(new Uint8Array(P.buffer,P.byteOffset,l),y)}let x=o.stackSave(),A=o.stackAlloc(4*d.length);try{let P=A/4;d.forEach(Q=>o.HEAP32[P++]=Q);let S=o._OrtCreateTensor(Qn(u),y,l,A,d.length,yi(h));S===0&&Nr(`Can't create tensor for input/output. session=${n}, index=${i}.`),t.push(S)}finally{o.stackRestore(x)}},sp=async(e,t,r,n,i,s)=>{let o=Er(),u=Xi.get(e);if(!u)throw new Error(`cannot run inference. invalid session id: ${e}`);let d=u[0],h=u[1],y=u[2],l=u[3],x=u[4],A=u[5],P=t.length,S=n.length,Q=0,K=[],F=[],re=[],de=[],ge=o.stackSave(),qe=o.stackAlloc(P*4),Fe=o.stackAlloc(P*4),bt=o.stackAlloc(S*4),Vt=o.stackAlloc(S*4);try{o.jsepOnRunStart?.(d),[Q,K]=ki(s);for(let Qt=0;Qt<P;Qt++)ip(r[Qt],F,de,e,t[Qt],x);for(let Qt=0;Qt<S;Qt++)ip(i[Qt],re,de,e,P+n[Qt],x);let jt=qe/4,lr=Fe/4,Zt=bt/4,ur=Vt/4;for(let Qt=0;Qt<P;Qt++)o.HEAPU32[jt++]=F[Qt],o.HEAPU32[lr++]=h[t[Qt]];for(let Qt=0;Qt<S;Qt++)o.HEAPU32[Zt++]=re[Qt],o.HEAPU32[ur++]=y[n[Qt]];if(l&&!A){let{handle:Qt,outputPreferredLocations:Tr,outputPreferredLocationsEncoded:xr}=l;if(h.length!==P)throw new Error(`input count from feeds (${P}) is expected to be always equal to model's input count (${h.length}).`);for(let Xt=0;Xt<P;Xt++){let yr=t[Xt];await o._OrtBindInput(Qt,h[yr],F[Xt])!==0&&Nr(`Can't bind input[${Xt}] for session=${e}.`)}for(let Xt=0;Xt<S;Xt++){let yr=n[Xt];i[Xt]?.[3]?o._OrtBindOutput(Qt,y[yr],re[Xt],0)!==0&&Nr(`Can't bind pre-allocated output[${Xt}] for session=${e}.`):o._OrtBindOutput(Qt,y[yr],0,xr[yr])!==0&&Nr(`Can't bind output[${Xt}] to ${Tr[Xt]} for session=${e}.`)}Xi.set(e,[d,h,y,l,x,!0])}let Sr;l?Sr=await o._OrtRunWithBinding(d,l.handle,S,bt,Q):Sr=await o._OrtRun(d,Fe,qe,P,Vt,S,bt,Q),Sr!==0&&Nr("failed to call OrtRun().");let or=[];for(let Qt=0;Qt<S;Qt++){let Tr=o.HEAPU32[bt/4+Qt];if(Tr===re[Qt]){or.push(i[Qt]);continue}let xr=o.stackSave(),Xt=o.stackAlloc(4*4),yr=!1,rt,St=0;try{o._OrtGetTensorData(Tr,Xt,Xt+4,Xt+8,Xt+12)!==0&&Nr(`Can't access output tensor data on index ${Qt}.`);let mr=Xt/4,Wr=o.HEAPU32[mr++];St=o.HEAPU32[mr++];let qr=o.HEAPU32[mr++],Gn=o.HEAPU32[mr++],zn=[];for(let mn=0;mn<Gn;mn++)zn.push(o.HEAPU32[qr/4+mn]);o._OrtFree(qr);let Cn=zn.reduce((mn,_n)=>mn*_n,1);rt=$n(Wr);let vn=l?.outputPreferredLocations[n[Qt]];if(rt==="string"){if(vn==="gpu-buffer"||vn==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let mn=[],_n=St/4;for(let Yi=0;Yi<Cn;Yi++){let Zi=o.HEAPU32[_n++],Ms=Yi===Cn-1?void 0:o.HEAPU32[_n]-Zi;mn.push(o.UTF8ToString(Zi,Ms))}or.push([rt,zn,mn,"cpu"])}else if(vn==="gpu-buffer"&&Cn>0){let mn=o.jsepGetBuffer;if(!mn)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let _n=mn(St),Yi=Ln(Wr,Cn);if(Yi===void 0||!gi(rt))throw new Error(`Unsupported data type: ${rt}`);yr=!0,or.push([rt,zn,{gpuBuffer:_n,download:o.jsepCreateDownloader(_n,Yi,rt),dispose:()=>{o._OrtReleaseTensor(Tr)}},"gpu-buffer"])}else if(vn==="ml-tensor"&&Cn>0){let mn=o.jsepEnsureTensor;if(!mn)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(Ln(Wr,Cn)===void 0||!wi(rt))throw new Error(`Unsupported data type: ${rt}`);let _n=await mn(St,Wr,zn,!1);yr=!0,or.push([rt,zn,{mlTensor:_n,download:o.jsepCreateMLTensorDownloader(St,rt),dispose:()=>{o.jsepReleaseTensorId(St),o._OrtReleaseTensor(Tr)}},"ml-tensor"])}else{let mn=_i(rt),_n=new mn(Cn);new Uint8Array(_n.buffer,_n.byteOffset,_n.byteLength).set(o.HEAPU8.subarray(St,St+_n.byteLength)),or.push([rt,zn,_n,"cpu"])}}finally{o.stackRestore(xr),rt==="string"&&St&&o._free(St),yr||o._OrtReleaseTensor(Tr)}}return l&&!x&&(o._OrtClearBoundOutputs(l.handle),Xi.set(e,[d,h,y,l,x,!1])),or}finally{o.stackRestore(ge),F.forEach(jt=>o._OrtReleaseTensor(jt)),re.forEach(jt=>o._OrtReleaseTensor(jt)),de.forEach(jt=>o._free(jt)),Q!==0&&o._OrtReleaseRunOptions(Q),K.forEach(jt=>o._free(jt))}},op=e=>{let t=Er(),r=Xi.get(e);if(!r)throw new Error("invalid session id");let n=r[0],i=t._OrtEndProfiling(n);i===0&&Nr("Can't get an profile file name."),t._OrtFree(i)},ap=e=>{let t=[];for(let r of e){let n=r[2];!Array.isArray(n)&&"buffer"in n&&t.push(n.buffer)}return t}}),Qi,Wn,ea,gd,wd,Ec,lp,Cc,ys,bs,Ch,$h,Sh,kh,Ph,Ah,Ih,Fh,Oh=R(()=>{c(),Eh(),Dr(),Nt(),Qi=()=>!!I.wasm.proxy&&typeof document<"u",ea=!1,gd=!1,wd=!1,Cc=new Map,ys=(e,t)=>{let r=Cc.get(e);r?r.push(t):Cc.set(e,[t])},bs=()=>{if(ea||!gd||wd||!Wn)throw new Error("worker not ready")},Ch=e=>{switch(e.data.type){case"init-wasm":ea=!1,e.data.err?(wd=!0,lp[1](e.data.err)):(gd=!0,lp[0]()),Ec&&(URL.revokeObjectURL(Ec),Ec=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=Cc.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},$h=async()=>{if(!gd){if(ea)throw new Error("multiple calls to 'initWasm()' detected.");if(wd)throw new Error("previous call to 'initWasm()' failed.");if(ea=!0,Qi())return new Promise((e,t)=>{Wn?.terminate(),xt().then(([r,n])=>{try{Wn=n,Wn.onerror=s=>t(s),Wn.onmessage=Ch,lp=[e,t];let i={type:"init-wasm",in:I};Wn.postMessage(i),Ec=r}catch(i){t(i)}},t)});try{await jr(I.wasm),await ep(I),gd=!0}catch(e){throw wd=!0,e}finally{ea=!1}}},Sh=async e=>{if(Qi())return bs(),new Promise((t,r)=>{ys("init-ep",[t,r]);let n={type:"init-ep",in:{epName:e,env:I}};Wn.postMessage(n)});await tp(I,e)},kh=async e=>Qi()?(bs(),new Promise((t,r)=>{ys("copy-from",[t,r]);let n={type:"copy-from",in:{buffer:e}};Wn.postMessage(n,[e.buffer])})):Tc(e),Ph=async(e,t)=>{if(Qi()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return bs(),new Promise((r,n)=>{ys("create",[r,n]);let i={type:"create",in:{model:e,options:{...t}}},s=[];e instanceof Uint8Array&&s.push(e.buffer),Wn.postMessage(i,s)})}else return rp(e,t)},Ah=async e=>{if(Qi())return bs(),new Promise((t,r)=>{ys("release",[t,r]);let n={type:"release",in:e};Wn.postMessage(n)});np(e)},Ih=async(e,t,r,n,i,s)=>{if(Qi()){if(r.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return bs(),new Promise((o,u)=>{ys("run",[o,u]);let d=r,h={type:"run",in:{sessionId:e,inputIndices:t,inputs:d,outputIndices:n,options:s}};Wn.postMessage(h,ap(d))})}else return sp(e,t,r,n,i,s)},Fh=async e=>{if(Qi())return bs(),new Promise((t,r)=>{ys("end-profiling",[t,r]);let n={type:"end-profiling",in:e};Wn.postMessage(n)});op(e)}}),up,Bh,zh,zm=R(()=>{c(),Oh(),rr(),m(),Bi(),up=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Bh=e=>{switch(e[3]){case"cpu":return new Y(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!gi(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:n,dispose:i}=e[2];return Y.fromGpuBuffer(r,{dataType:t,dims:e[1],download:n,dispose:i})}case"ml-tensor":{let t=e[0];if(!wi(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:r,download:n,dispose:i}=e[2];return Y.fromMLTensor(r,{dataType:t,dims:e[1],download:n,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},zh=class{async fetchModelAndCopyToWasmMemory(e){return kh(await ri(e))}async loadModel(e,t){Ze();let r;typeof e=="string"?r=await this.fetchModelAndCopyToWasmMemory(e):r=e,[this.sessionId,this.inputNames,this.outputNames]=await Ph(r,t),He()}async dispose(){return Ah(this.sessionId)}async run(e,t,r){Ze();let n=[],i=[];Object.entries(e).forEach(l=>{let x=l[0],A=l[1],P=this.inputNames.indexOf(x);if(P===-1)throw new Error(`invalid input '${x}'`);n.push(A),i.push(P)});let s=[],o=[];Object.entries(t).forEach(l=>{let x=l[0],A=l[1],P=this.outputNames.indexOf(x);if(P===-1)throw new Error(`invalid output '${x}'`);s.push(A),o.push(P)});let u=n.map((l,x)=>up(l,()=>`input "${this.inputNames[i[x]]}"`)),d=s.map((l,x)=>l?up(l,()=>`output "${this.outputNames[o[x]]}"`):null),h=await Ih(this.sessionId,i,u,o,d,r),y={};for(let l=0;l<h.length;l++)y[this.outputNames[o[l]]]=s[l]??Bh(h[l]);return He(),y}startProfiling(){}endProfiling(){Fh(this.sessionId)}}}),Dh={};O(Dh,{OnnxruntimeWebAssemblyBackend:()=>cp,initializeFlags:()=>dp,wasmBackend:()=>Lh});var dp,cp,Lh,Dm=R(()=>{c(),Oh(),zm(),Nt(),dp=()=>{if((typeof I.wasm.initTimeout!="number"||I.wasm.initTimeout<0)&&(I.wasm.initTimeout=0),I.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof I.wasm.proxy!="boolean"&&(I.wasm.proxy=!1),typeof I.wasm.trace!="boolean"&&(I.wasm.trace=!1),typeof I.wasm.numThreads!="number"||!Number.isInteger(I.wasm.numThreads)||I.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)I.wasm.numThreads=1;else{let e=typeof navigator>"u"?Te("node:os").cpus().length:navigator.hardwareConcurrency;I.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},cp=class{async init(e){dp(),await $h(),await Sh(e)}async createInferenceSessionHandler(e,t){let r=new zh;return await r.loadModel(e,t),Promise.resolve(r)}},Lh=new cp});c(),c(),c();var Lm="1.21.0-dev.20241024-d9ca84ef96",Rm=E;{let e=(Dm(),U(Dh)).wasmBackend;Ce("webgpu",e,5),Ce("webnn",e,5),Ce("cpu",e,10),Ce("wasm",e,10)}Object.defineProperty(I.versions,"web",{value:Lm,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"./src/backends/onnx.js":(ae,L,T)=>{var C;T.r(L),T.d(L,{Tensor:()=>Te.Tensor,createInferenceSession:()=>j,deviceToExecutionProviders:()=>Ce,isONNXProxy:()=>te,isONNXTensor:()=>se});var J=T("./src/env.js"),ne=T("?2ce3"),fe=T("./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs"),Te=T("./node_modules/onnxruntime-common/dist/esm/index.js");const R=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),O=[];let M,U;const X=Symbol.for("onnxruntime");if(X in globalThis)U=globalThis[X];else if(J.apis.IS_NODE_ENV){switch(U=ne??(C||(C=T.t(ne,2))),Es.platform){case"win32":O.push("dml");break;case"linux":Es.arch==="x64"&&O.push("cuda");break}O.push("cpu"),M=["cpu"]}else U=fe,J.apis.IS_WEBNN_AVAILABLE&&O.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),J.apis.IS_WEBGPU_AVAILABLE&&O.push("webgpu"),O.push("wasm"),M=["wasm"];const le=U.InferenceSession;function Ce(ee=null){if(!ee)return M;switch(ee){case"auto":return O;case"gpu":return O.filter(G=>["webgpu","cuda","dml","webnn-gpu"].includes(G))}if(O.includes(ee))return[R[ee]??ee];throw new Error(`Unsupported device: "${ee}". Should be one of: ${O.join(", ")}.`)}let ve=null;async function j(ee,G,B){ve&&await ve;const q=le.create(ee,G);ve??=q;const I=await q;return I.config=B,I}function se(ee){return ee instanceof U.Tensor}const xe=U?.env;xe?.wasm&&(xe.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${J.env.version}/dist/`,xe.wasm.proxy=!1,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(xe.wasm.numThreads=1)),xe?.webgpu&&(xe.webgpu.powerPreference="high-performance");function te(){return xe?.wasm?.proxy}J.env.backends.onnx=xe},"./src/configs.js":(ae,L,T)=>{T.r(L),T.d(L,{AutoConfig:()=>O,PretrainedConfig:()=>R,getKeyValueShapes:()=>Te});var C=T("./src/utils/core.js"),J=T("./src/utils/hub.js");async function ne(M,U){return await(0,J.getModelJSON)(M,"config.json",!0,U)}function fe(M){const U={};let X={};switch(M.model_type){case"llava":case"paligemma":case"florence2":X=fe(M.text_config);break;case"moondream1":X=fe(M.phi_config);break;case"musicgen":X=fe(M.decoder);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":U.num_heads="n_head",U.num_layers="n_layer",U.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":U.num_heads="num_attention_heads",U.num_layers="num_hidden_layers",U.hidden_size="hidden_size";break;case"llama":case"olmo":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":U.num_heads="num_key_value_heads",U.num_layers="num_hidden_layers",U.hidden_size="hidden_size",U.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":U.num_heads="num_key_value_heads",U.num_layers="num_hidden_layers",U.dim_kv="head_dim";break;case"openelm":U.num_heads="num_kv_heads",U.num_layers="num_transformer_layers",U.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":U.num_heads="num_heads",U.num_layers="num_layers",U.hidden_size="hidden_size";break;case"bloom":U.num_heads="n_head",U.num_layers="n_layer",U.hidden_size="hidden_size";break;case"mpt":U.num_heads="n_heads",U.num_layers="n_layers",U.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":U.num_decoder_layers="num_decoder_layers",U.num_decoder_heads="num_heads",U.decoder_dim_kv="d_kv",U.num_encoder_layers="num_layers",U.num_encoder_heads="num_heads",U.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":U.num_decoder_layers="decoder_layers",U.num_decoder_heads="decoder_attention_heads",U.decoder_hidden_size="d_model",U.num_encoder_layers="encoder_layers",U.num_encoder_heads="encoder_attention_heads",U.encoder_hidden_size="d_model";break;case"speecht5":U.num_decoder_layers="decoder_layers",U.num_decoder_heads="decoder_attention_heads",U.decoder_hidden_size="hidden_size",U.num_encoder_layers="encoder_layers",U.num_encoder_heads="encoder_attention_heads",U.encoder_hidden_size="hidden_size";break;case"trocr":U.num_encoder_layers=U.num_decoder_layers="decoder_layers",U.num_encoder_heads=U.num_decoder_heads="decoder_attention_heads",U.encoder_hidden_size=U.decoder_hidden_size="d_model";break;case"musicgen_decoder":U.num_encoder_layers=U.num_decoder_layers="num_hidden_layers",U.num_encoder_heads=U.num_decoder_heads="num_attention_heads",U.encoder_hidden_size=U.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const Ce=fe(M.decoder),ve="num_decoder_layers"in Ce,j=(0,C.pick)(M,["model_type","is_encoder_decoder"]);return ve?(j.num_decoder_layers=Ce.num_decoder_layers,j.num_decoder_heads=Ce.num_decoder_heads,j.decoder_hidden_size=Ce.decoder_hidden_size,j.num_encoder_layers=Ce.num_encoder_layers,j.num_encoder_heads=Ce.num_encoder_heads,j.encoder_hidden_size=Ce.encoder_hidden_size):(j.num_layers=Ce.num_layers,j.num_heads=Ce.num_heads,j.hidden_size=Ce.hidden_size),j}const le={...X,...(0,C.pick)(M,["model_type","multi_query","is_encoder_decoder"])};for(const Ce in U)le[Ce]=M[U[Ce]];return le}function Te(M,{prefix:U="past_key_values"}={}){const X={},le=M.normalized_config,Ce=1;if(le.is_encoder_decoder&&"num_encoder_heads"in le&&"num_decoder_heads"in le){const ve=le.encoder_dim_kv??le.encoder_hidden_size/le.num_encoder_heads,j=le.decoder_dim_kv??le.decoder_hidden_size/le.num_decoder_heads,se=[Ce,le.num_encoder_heads,0,ve],xe=[Ce,le.num_decoder_heads,0,j];for(let te=0;te<le.num_decoder_layers;++te)X[`${U}.${te}.encoder.key`]=se,X[`${U}.${te}.encoder.value`]=se,X[`${U}.${te}.decoder.key`]=xe,X[`${U}.${te}.decoder.value`]=xe}else{const ve=le.num_heads,j=le.num_layers,se=le.dim_kv??le.hidden_size/(le.num_attention_heads??ve);if(le.model_type==="falcon"){const xe=[Ce*ve,0,se];for(let te=0;te<j;++te)X[`${U}.${te}.key`]=xe,X[`${U}.${te}.value`]=xe}else if(le.multi_query){const xe=[Ce*ve,0,2*se];for(let te=0;te<j;++te)X[`${U}.${te}.key_value`]=xe}else if(le.model_type==="bloom"){const xe=[Ce*ve,se,0],te=[Ce*ve,0,se];for(let ee=0;ee<j;++ee)X[`${U}.${ee}.key`]=xe,X[`${U}.${ee}.value`]=te}else if(le.model_type==="openelm")for(let xe=0;xe<j;++xe){const te=[Ce,ve[xe],0,se];X[`${U}.${xe}.key`]=te,X[`${U}.${xe}.value`]=te}else{const xe=[Ce,ve,0,se];for(let te=0;te<j;++te)X[`${U}.${te}.key`]=xe,X[`${U}.${te}.value`]=xe}}return X}class R{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(U){Object.assign(this,U),this.normalized_config=fe(this)}static async from_pretrained(U,{progress_callback:X=null,config:le=null,cache_dir:Ce=null,local_files_only:ve=!1,revision:j="main"}={}){le&&!(le instanceof R)&&(le=new R(le));const se=le??await ne(U,{progress_callback:X,config:le,cache_dir:Ce,local_files_only:ve,revision:j});return new this(se)}}class O{static async from_pretrained(...U){return R.from_pretrained(...U)}}},"./src/env.js":(ae,L,T)=>{T.r(L),T.d(L,{apis:()=>j,env:()=>B});var C=T("?569f"),J=T("?3f59"),ne=T("?154a");const fe="3.0.2",Te=typeof self<"u",R=Te&&self.constructor.name==="DedicatedWorkerGlobalScope",O=Te&&"caches"in self,M=typeof navigator<"u"&&"gpu"in navigator,U=typeof navigator<"u"&&"ml"in navigator,X=typeof Es<"u",le=X&&Es?.release?.name==="node",Ce=!q(C),ve=!q(J),j=Object.freeze({IS_BROWSER_ENV:Te,IS_WEBWORKER_ENV:R,IS_WEB_CACHE_AVAILABLE:O,IS_WEBGPU_AVAILABLE:M,IS_WEBNN_AVAILABLE:U,IS_PROCESS_AVAILABLE:X,IS_NODE_ENV:le,IS_FS_AVAILABLE:Ce,IS_PATH_AVAILABLE:ve}),se=Ce&&ve;let xe="./";if(se){const I=Object(import.meta).url;I?xe=J.dirname(J.dirname(ne.fileURLToPath(I))):typeof __dirname<"u"&&(xe=J.dirname(__dirname))}const te=se?J.join(xe,"/.cache/"):null,ee="/models/",G=se?J.join(xe,ee):ee,B={version:fe,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!Te,localModelPath:G,useFS:Ce,useBrowserCache:O,useFSCache:Ce,cacheDir:te,useCustomCache:!1,customCache:null};function q(I){return Object.keys(I).length===0}},"./src/generation/configuration_utils.js":(ae,L,T)=>{T.r(L),T.d(L,{GenerationConfig:()=>J});var C=T("./src/utils/core.js");class J{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(fe){Object.assign(this,(0,C.pick)(fe,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(ae,L,T)=>{T.r(L),T.d(L,{ClassifierFreeGuidanceLogitsProcessor:()=>se,ForcedBOSTokenLogitsProcessor:()=>R,ForcedEOSTokenLogitsProcessor:()=>O,LogitsProcessor:()=>ne,LogitsProcessorList:()=>Te,LogitsWarper:()=>fe,MinLengthLogitsProcessor:()=>Ce,MinNewTokensLengthLogitsProcessor:()=>ve,NoBadWordsLogitsProcessor:()=>j,NoRepeatNGramLogitsProcessor:()=>X,RepetitionPenaltyLogitsProcessor:()=>le,SuppressTokensAtBeginLogitsProcessor:()=>M,TemperatureLogitsWarper:()=>xe,TopKLogitsWarper:()=>ee,TopPLogitsWarper:()=>te,WhisperTimeStampLogitsProcessor:()=>U});var C=T("./src/utils/generic.js");T("./src/utils/tensor.js");var J=T("./src/utils/maths.js");class ne extends C.Callable{_call(B,q){throw Error("`_call` should be implemented in a subclass")}}class fe extends C.Callable{_call(B,q){throw Error("`_call` should be implemented in a subclass")}}class Te extends C.Callable{constructor(){super(),this.processors=[]}push(B){this.processors.push(B)}extend(B){this.processors.push(...B)}_call(B,q){let I=q;for(const be of this.processors)I=be(B,I);return I}[Symbol.iterator](){return this.processors.values()}}class R extends ne{constructor(B){super(),this.bos_token_id=B}_call(B,q){for(let I=0;I<B.length;++I)if(B[I].length===1){const be=q[I].data;be.fill(-1/0),be[this.bos_token_id]=0}return q}}class O extends ne{constructor(B,q){super(),this.max_length=B,this.eos_token_id=Array.isArray(q)?q:[q]}_call(B,q){for(let I=0;I<B.length;++I)if(B[I].length===this.max_length-1){const be=q[I].data;be.fill(-1/0);for(const $e of this.eos_token_id)be[$e]=0}return q}}class M extends ne{constructor(B,q){super(),this.begin_suppress_tokens=B,this.begin_index=q}_call(B,q){for(let I=0;I<B.length;++I)if(B[I].length===this.begin_index){const be=q[I].data;for(const $e of this.begin_suppress_tokens)be[$e]=-1/0}return q}}class U extends ne{constructor(B,q){super(),this.eos_token_id=Array.isArray(B.eos_token_id)?B.eos_token_id[0]:B.eos_token_id,this.no_timestamps_token_id=B.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=q.length,q.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=B.max_initial_timestamp_index}_call(B,q){for(let I=0;I<B.length;++I){const be=q[I].data;if(be[this.no_timestamps_token_id]=-1/0,B[I].length===this.begin_index-1){be.fill(-1/0),be[this.timestamp_begin]=0;continue}const $e=B[I].slice(this.begin_index),Ae=$e.length>=1&&$e[$e.length-1]>=this.timestamp_begin,je=$e.length<2||$e[$e.length-2]>=this.timestamp_begin;if(Ae&&(je?be.subarray(this.timestamp_begin).fill(-1/0):be.subarray(0,this.eos_token_id).fill(-1/0)),B[I].length===this.begin_index&&this.max_initial_timestamp_index!==null){const gt=this.timestamp_begin+this.max_initial_timestamp_index;be.subarray(gt+1).fill(-1/0)}const De=(0,J.log_softmax)(be),ft=Math.log(De.subarray(this.timestamp_begin).map(Math.exp).reduce((gt,Ee)=>gt+Ee)),dt=(0,J.max)(De.subarray(0,this.timestamp_begin))[0];ft>dt&&be.subarray(0,this.timestamp_begin).fill(-1/0)}return q}}class X extends ne{constructor(B){super(),this.no_repeat_ngram_size=B}getNgrams(B){const q=B.length,I=[];for(let $e=0;$e<q+1-this.no_repeat_ngram_size;++$e){const Ae=[];for(let je=0;je<this.no_repeat_ngram_size;++je)Ae.push(B[$e+je]);I.push(Ae.map(Number))}const be=new Map;for(const $e of I){const Ae=$e.slice(0,$e.length-1),je=JSON.stringify(Ae),De=be.get(je)??[];De.push($e[$e.length-1]),be.set(je,De)}return be}getGeneratedNgrams(B,q){const I=q.slice(q.length+1-this.no_repeat_ngram_size,q.length);return B.get(JSON.stringify(I.map(Number)))??[]}calcBannedNgramTokens(B){const q=[];if(B.length+1<this.no_repeat_ngram_size)return q;{const I=this.getNgrams(B);return this.getGeneratedNgrams(I,B)}}_call(B,q){for(let I=0;I<B.length;++I){const be=q[I].data,$e=this.calcBannedNgramTokens(B[I]);for(const Ae of $e)be[Ae]=-1/0}return q}}class le extends ne{constructor(B){super(),this.penalty=B}_call(B,q){for(let I=0;I<B.length;++I){const be=q[I].data;for(const $e of B[I]){const Ae=Number($e);be[Ae]<0?be[Ae]*=this.penalty:be[Ae]/=this.penalty}}return q}}class Ce extends ne{constructor(B,q){super(),this.min_length=B,this.eos_token_id=Array.isArray(q)?q:[q]}_call(B,q){for(let I=0;I<B.length;++I)if(B[I].length<this.min_length){const be=q[I].data;for(const $e of this.eos_token_id)be[$e]=-1/0}return q}}class ve extends ne{constructor(B,q,I){super(),this.prompt_length_to_skip=B,this.min_new_tokens=q,this.eos_token_id=Array.isArray(I)?I:[I]}_call(B,q){for(let I=0;I<B.length;++I)if(B[I].length-this.prompt_length_to_skip<this.min_new_tokens){const $e=q[I].data;for(const Ae of this.eos_token_id)$e[Ae]=-1/0}return q}}class j extends ne{constructor(B,q){super(),this.bad_words_ids=B,this.eos_token_id=Array.isArray(q)?q:[q]}_call(B,q){for(let I=0;I<B.length;++I){const be=q[I].data,$e=B[I];for(const Ae of this.bad_words_ids){let je=!0;for(let De=1;De<=Ae.length-1&&Ae.length<$e.length;++De)if(Ae.at(-De-1)!=$e.at(-De)){je=!1;break}je&&(be[Ae.at(-1)]=-1/0)}}return q}}class se extends ne{constructor(B){if(super(),B<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${B}.`);this.guidance_scale=B}_call(B,q){if(q.dims[0]!==2*B.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${q.dims[0]} for the logits and ${B.length} for the input ids.`);const I=B.length,be=q.slice([0,I],null),$e=q.slice([I,q.dims[0]],null);for(let Ae=0;Ae<$e.data.length;++Ae)$e.data[Ae]+=(be.data[Ae]-$e.data[Ae])*this.guidance_scale;return $e}}class xe extends fe{constructor(B){super(),this.temperature=B}_call(B,q){const I=q.data;for(let be=0;be<I.length;++be)I[be]/=this.temperature;return q}}class te extends fe{constructor(B,{filter_value:q=-1/0,min_tokens_to_keep:I=1}={}){if(super(),B<0||B>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${B}`);if(!Number.isInteger(I)||I<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${I}`);this.top_p=B,this.filter_value=q,this.min_tokens_to_keep=I}}class ee extends fe{constructor(B,{filter_value:q=-1/0,min_tokens_to_keep:I=1}={}){if(super(),!Number.isInteger(B)||B<0)throw new Error(`\`top_k\` must be a positive integer, but is ${B}`);this.top_k=Math.max(B,I),this.filter_value=q}}},"./src/generation/logits_sampler.js":(ae,L,T)=>{T.r(L),T.d(L,{LogitsSampler:()=>fe});var C=T("./src/utils/generic.js"),J=T("./src/utils/tensor.js"),ne=T("./src/utils/maths.js");T("./src/generation/configuration_utils.js");class fe extends C.Callable{constructor(U){super(),this.generation_config=U}async _call(U){return this.sample(U)}async sample(U){throw Error("sample should be implemented in subclasses.")}getLogits(U,X){let le=U.dims.at(-1),Ce=U.data;if(X===-1)Ce=Ce.slice(-le);else{let ve=X*le;Ce=Ce.slice(ve,ve+le)}return Ce}randomSelect(U){let X=0;for(let Ce=0;Ce<U.length;++Ce)X+=U[Ce];let le=Math.random()*X;for(let Ce=0;Ce<U.length;++Ce)if(le-=U[Ce],le<=0)return Ce;return 0}static getSampler(U){if(U.do_sample)return new R(U);if(U.num_beams>1)return new O(U);if(U.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${U.num_return_sequences}.`);return new Te(U)}}class Te extends fe{async sample(U){const X=(0,ne.max)(U.data)[1];return[[BigInt(X),0]]}}class R extends fe{async sample(U){let X=U.dims.at(-1);this.generation_config.top_k>0&&(X=Math.min(this.generation_config.top_k,X));const[le,Ce]=await(0,J.topk)(U,X),ve=(0,ne.softmax)(le.data);return Array.from({length:this.generation_config.num_beams},()=>{const j=this.randomSelect(ve);return[Ce.data[j],Math.log(ve[j])]})}}class O extends fe{async sample(U){let X=U.dims.at(-1);this.generation_config.top_k>0&&(X=Math.min(this.generation_config.top_k,X));const[le,Ce]=await(0,J.topk)(U,X),ve=(0,ne.softmax)(le.data);return Array.from({length:this.generation_config.num_beams},(j,se)=>[Ce.data[se],Math.log(ve[se])])}}},"./src/generation/stopping_criteria.js":(ae,L,T)=>{T.r(L),T.d(L,{EosTokenCriteria:()=>Te,InterruptableStoppingCriteria:()=>R,MaxLengthCriteria:()=>fe,StoppingCriteria:()=>J,StoppingCriteriaList:()=>ne});var C=T("./src/utils/generic.js");class J extends C.Callable{_call(M,U){throw Error("StoppingCriteria needs to be subclassed")}}class ne extends C.Callable{constructor(){super(),this.criteria=[]}push(M){this.criteria.push(M)}extend(M){M instanceof ne?M=M.criteria:M instanceof J&&(M=[M]),this.criteria.push(...M)}_call(M,U){const X=new Array(M.length).fill(!1);for(const le of this.criteria){const Ce=le(M,U);for(let ve=0;ve<X.length;++ve)X[ve]||=Ce[ve]}return X}[Symbol.iterator](){return this.criteria.values()}}class fe extends J{constructor(M,U=null){super(),this.max_length=M,this.max_position_embeddings=U}_call(M){return M.map(U=>U.length>=this.max_length)}}class Te extends J{constructor(M){super(),Array.isArray(M)||(M=[M]),this.eos_token_id=M}_call(M,U){return M.map(X=>{const le=X.at(-1);return this.eos_token_id.some(Ce=>le==Ce)})}}class R extends J{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(M,U){return new Array(M.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(ae,L,T)=>{T.r(L),T.d(L,{BaseStreamer:()=>fe,TextStreamer:()=>R,WhisperTextStreamer:()=>O});var C=T("./src/utils/core.js"),J=T("./src/tokenizers.js"),ne=T("./src/env.js");class fe{put(U){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const Te=ne.apis.IS_PROCESS_AVAILABLE?M=>Es.stdout.write(M):M=>console.log(M);class R extends fe{constructor(U,{skip_prompt:X=!1,callback_function:le=null,token_callback_function:Ce=null,decode_kwargs:ve={},...j}={}){super(),this.tokenizer=U,this.skip_prompt=X,this.callback_function=le??Te,this.token_callback_function=Ce,this.decode_kwargs={...ve,...j},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(U){if(U.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}const X=U[0];this.token_callback_function?.(X),this.token_cache=(0,C.mergeArrays)(this.token_cache,X);const le=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let Ce;le.endsWith(`
`)?(Ce=le.slice(this.print_len),this.token_cache=[],this.print_len=0):le.length>0&&(0,J.is_chinese_char)(le.charCodeAt(le.length-1))?(Ce=le.slice(this.print_len),this.print_len+=Ce.length):(Ce=le.slice(this.print_len,le.lastIndexOf(" ")+1),this.print_len+=Ce.length),this.on_finalized_text(Ce,!1)}end(){let U;this.token_cache.length>0?(U=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):U="",this.next_tokens_are_prompt=!0,this.on_finalized_text(U,!0)}on_finalized_text(U,X){U.length>0&&this.callback_function?.(U),X&&this.callback_function===Te&&ne.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.(`
`)}}class O extends R{constructor(U,{skip_prompt:X=!1,callback_function:le=null,token_callback_function:Ce=null,on_chunk_start:ve=null,on_chunk_end:j=null,on_finalize:se=null,time_precision:xe=.02,skip_special_tokens:te=!0,decode_kwargs:ee={}}={}){super(U,{skip_prompt:X,callback_function:le,token_callback_function:Ce,decode_kwargs:{skip_special_tokens:te,...ee}}),this.timestamp_begin=U.timestamp_begin,this.on_chunk_start=ve,this.on_chunk_end=j,this.on_finalize=se,this.time_precision=xe,this.waiting_for_timestamp=!1}put(U){if(U.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const X=U[0];if(X.length===1){const le=Number(X[0])-this.timestamp_begin;if(le>=0){const Ce=le*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(Ce):this.on_chunk_start?.(Ce),this.waiting_for_timestamp=!this.waiting_for_timestamp,U=[[]]}}return super.put(U)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(ae,L,T)=>{T.r(L),T.d(L,{ASTForAudioClassification:()=>is,ASTModel:()=>qt,ASTPreTrainedModel:()=>Nn,AlbertForMaskedLM:()=>rr,AlbertForQuestionAnswering:()=>yi,AlbertForSequenceClassification:()=>wi,AlbertModel:()=>gi,AlbertPreTrainedModel:()=>On,AutoModel:()=>ec,AutoModelForAudioClassification:()=>pc,AutoModelForAudioFrameClassification:()=>ud,AutoModelForCTC:()=>ld,AutoModelForCausalLM:()=>oc,AutoModelForDepthEstimation:()=>cd,AutoModelForDocumentQuestionAnswering:()=>dd,AutoModelForImageClassification:()=>dc,AutoModelForImageFeatureExtraction:()=>gc,AutoModelForImageMatting:()=>fc,AutoModelForImageSegmentation:()=>cc,AutoModelForImageToImage:()=>mc,AutoModelForMaskGeneration:()=>ad,AutoModelForMaskedLM:()=>ac,AutoModelForNormalEstimation:()=>_c,AutoModelForObjectDetection:()=>sd,AutoModelForQuestionAnswering:()=>lc,AutoModelForSemanticSegmentation:()=>qc,AutoModelForSeq2SeqLM:()=>Gc,AutoModelForSequenceClassification:()=>tc,AutoModelForSpeechSeq2Seq:()=>nc,AutoModelForTextToSpectrogram:()=>ic,AutoModelForTextToWaveform:()=>sc,AutoModelForTokenClassification:()=>rc,AutoModelForUniversalSegmentation:()=>ws,AutoModelForVision2Seq:()=>uc,AutoModelForXVector:()=>hc,AutoModelForZeroShotObjectDetection:()=>od,BartForConditionalGeneration:()=>oe,BartForSequenceClassification:()=>pe,BartModel:()=>W,BartPretrainedModel:()=>_,BaseModelOutput:()=>ct,BeitForImageClassification:()=>vl,BeitModel:()=>Ml,BeitPreTrainedModel:()=>so,BertForMaskedLM:()=>Et,BertForQuestionAnswering:()=>ze,BertForSequenceClassification:()=>tt,BertForTokenClassification:()=>Y,BertModel:()=>Mt,BertPreTrainedModel:()=>Ve,BlenderbotForConditionalGeneration:()=>pr,BlenderbotModel:()=>_r,BlenderbotPreTrainedModel:()=>$t,BlenderbotSmallForConditionalGeneration:()=>bn,BlenderbotSmallModel:()=>Xr,BlenderbotSmallPreTrainedModel:()=>Cr,BloomForCausalLM:()=>Ya,BloomModel:()=>Qa,BloomPreTrainedModel:()=>as,CLIPModel:()=>fa,CLIPPreTrainedModel:()=>si,CLIPSegForImageSegmentation:()=>va,CLIPSegModel:()=>Ma,CLIPSegPreTrainedModel:()=>Ps,CLIPTextModel:()=>$d,CLIPTextModelWithProjection:()=>Mn,CLIPVisionModel:()=>Sd,CLIPVisionModelWithProjection:()=>ma,CamembertForMaskedLM:()=>me,CamembertForQuestionAnswering:()=>sr,CamembertForSequenceClassification:()=>ke,CamembertForTokenClassification:()=>Ge,CamembertModel:()=>V,CamembertPreTrainedModel:()=>m,CausalLMOutput:()=>oi,CausalLMOutputWithPast:()=>wc,ChineseCLIPModel:()=>ba,ChineseCLIPPreTrainedModel:()=>ya,ClapAudioModelWithProjection:()=>Su,ClapModel:()=>$u,ClapPreTrainedModel:()=>gs,ClapTextModelWithProjection:()=>Bo,CodeGenForCausalLM:()=>Aa,CodeGenModel:()=>Pa,CodeGenPreTrainedModel:()=>Tn,CohereForCausalLM:()=>Na,CohereModel:()=>Ra,CoherePreTrainedModel:()=>Us,ConvBertForMaskedLM:()=>z,ConvBertForQuestionAnswering:()=>it,ConvBertForSequenceClassification:()=>ue,ConvBertForTokenClassification:()=>Me,ConvBertModel:()=>Z,ConvBertPreTrainedModel:()=>$,ConvNextForImageClassification:()=>Kl,ConvNextModel:()=>Hl,ConvNextPreTrainedModel:()=>wo,ConvNextV2ForImageClassification:()=>Xl,ConvNextV2Model:()=>yo,ConvNextV2PreTrainedModel:()=>Ni,DPTForDepthEstimation:()=>Ad,DPTModel:()=>jl,DPTPreTrainedModel:()=>fo,DebertaForMaskedLM:()=>ye,DebertaForQuestionAnswering:()=>Ke,DebertaForSequenceClassification:()=>Se,DebertaForTokenClassification:()=>Be,DebertaModel:()=>N,DebertaPreTrainedModel:()=>Je,DebertaV2ForMaskedLM:()=>Tt,DebertaV2ForQuestionAnswering:()=>Ut,DebertaV2ForSequenceClassification:()=>Ft,DebertaV2ForTokenClassification:()=>xt,DebertaV2Model:()=>Ct,DebertaV2PreTrainedModel:()=>pt,DecisionTransformerModel:()=>ju,DecisionTransformerPreTrainedModel:()=>Nu,DeiTForImageClassification:()=>Al,DeiTModel:()=>Pl,DeiTPreTrainedModel:()=>co,DepthAnythingForDepthEstimation:()=>Vl,DepthAnythingPreTrainedModel:()=>Ul,DepthProForDepthEstimation:()=>Zn,DepthProPreTrainedModel:()=>Id,DetrForObjectDetection:()=>Tl,DetrForSegmentation:()=>ds,DetrModel:()=>xl,DetrObjectDetectionOutput:()=>oo,DetrPreTrainedModel:()=>us,DetrSegmentationOutput:()=>ao,Dinov2ForImageClassification:()=>bo,Dinov2Model:()=>Ql,Dinov2PreTrainedModel:()=>ji,DistilBertForMaskedLM:()=>Ht,DistilBertForQuestionAnswering:()=>vt,DistilBertForSequenceClassification:()=>Le,DistilBertForTokenClassification:()=>Re,DistilBertModel:()=>Nt,DistilBertPreTrainedModel:()=>Wt,DonutSwinModel:()=>go,DonutSwinPreTrainedModel:()=>hs,EfficientNetForImageClassification:()=>Vd,EfficientNetModel:()=>Iu,EfficientNetPreTrainedModel:()=>No,ElectraForMaskedLM:()=>ot,ElectraForQuestionAnswering:()=>c,ElectraForSequenceClassification:()=>yt,ElectraForTokenClassification:()=>E,ElectraModel:()=>At,ElectraPreTrainedModel:()=>et,EsmForMaskedLM:()=>jr,EsmForSequenceClassification:()=>Er,EsmForTokenClassification:()=>Dr,EsmModel:()=>Or,EsmPreTrainedModel:()=>ar,FalconForCausalLM:()=>Cu,FalconModel:()=>Eu,FalconPreTrainedModel:()=>_s,FastViTForImageClassification:()=>pl,FastViTModel:()=>cl,FastViTPreTrainedModel:()=>eo,Florence2ForConditionalGeneration:()=>ks,Florence2PreTrainedModel:()=>ha,GLPNForDepthEstimation:()=>_o,GLPNModel:()=>hn,GLPNPreTrainedModel:()=>Vn,GPT2LMHeadModel:()=>Pn,GPT2Model:()=>xa,GPT2PreTrainedModel:()=>As,GPTBigCodeForCausalLM:()=>Ds,GPTBigCodeModel:()=>ss,GPTBigCodePreTrainedModel:()=>zs,GPTJForCausalLM:()=>An,GPTJModel:()=>kd,GPTJPreTrainedModel:()=>Bs,GPTNeoForCausalLM:()=>$a,GPTNeoModel:()=>Ca,GPTNeoPreTrainedModel:()=>Fs,GPTNeoXForCausalLM:()=>ka,GPTNeoXModel:()=>Sa,GPTNeoXPreTrainedModel:()=>Os,Gemma2ForCausalLM:()=>qs,Gemma2Model:()=>Gs,Gemma2PreTrainedModel:()=>Ws,GemmaForCausalLM:()=>Ua,GemmaModel:()=>ja,GemmaPreTrainedModel:()=>Vs,GraniteForCausalLM:()=>La,GraniteModel:()=>Da,GranitePreTrainedModel:()=>js,GroupViTModel:()=>dl,GroupViTPreTrainedModel:()=>ul,HieraForImageClassification:()=>Ol,HieraModel:()=>Fl,HieraPreTrainedModel:()=>Il,HubertForCTC:()=>pu,HubertForSequenceClassification:()=>Io,HubertModel:()=>cu,HubertPreTrainedModel:()=>Ld,ImageMattingOutput:()=>fd,JAISLMHeadModel:()=>Ea,JAISModel:()=>Ta,JAISPreTrainedModel:()=>Is,LlamaForCausalLM:()=>Fa,LlamaModel:()=>Ia,LlamaPreTrainedModel:()=>Ls,LlavaForConditionalGeneration:()=>Mi,LlavaPreTrainedModel:()=>pa,LongT5ForConditionalGeneration:()=>Li,LongT5Model:()=>Di,LongT5PreTrainedModel:()=>bi,M2M100ForConditionalGeneration:()=>Od,M2M100Model:()=>tu,M2M100PreTrainedModel:()=>To,MBartForCausalLM:()=>Dt,MBartForConditionalGeneration:()=>Pt,MBartForSequenceClassification:()=>zt,MBartModel:()=>st,MBartPreTrainedModel:()=>Oe,MPNetForMaskedLM:()=>Ai,MPNetForQuestionAnswering:()=>Oi,MPNetForSequenceClassification:()=>Ii,MPNetForTokenClassification:()=>Fi,MPNetModel:()=>Pi,MPNetPreTrainedModel:()=>Xn,MT5ForConditionalGeneration:()=>_e,MT5Model:()=>ns,MT5PreTrainedModel:()=>ni,MarianMTModel:()=>eu,MarianModel:()=>xo,MarianPreTrainedModel:()=>vo,MaskFormerForInstanceSegmentation:()=>mo,MaskFormerModel:()=>Jn,MaskFormerPreTrainedModel:()=>Un,MaskedLMOutput:()=>un,MistralForCausalLM:()=>xu,MistralModel:()=>vu,MistralPreTrainedModel:()=>Oo,MobileBertForMaskedLM:()=>Nr,MobileBertForQuestionAnswering:()=>ki,MobileBertForSequenceClassification:()=>mi,MobileBertModel:()=>Dn,MobileBertPreTrainedModel:()=>Ar,MobileLLMForCausalLM:()=>Ba,MobileLLMModel:()=>Oa,MobileLLMPreTrainedModel:()=>Rs,MobileNetV1ForImageClassification:()=>Bu,MobileNetV1Model:()=>Ou,MobileNetV1PreTrainedModel:()=>Fu,MobileNetV2ForImageClassification:()=>qd,MobileNetV2Model:()=>zu,MobileNetV2PreTrainedModel:()=>Vo,MobileNetV3ForImageClassification:()=>Lu,MobileNetV3Model:()=>Du,MobileNetV3PreTrainedModel:()=>Wo,MobileNetV4ForImageClassification:()=>Ru,MobileNetV4Model:()=>Hd,MobileNetV4PreTrainedModel:()=>Go,MobileViTForImageClassification:()=>fl,MobileViTModel:()=>ls,MobileViTPreTrainedModel:()=>to,MobileViTV2ForImageClassification:()=>_l,MobileViTV2Model:()=>ml,MobileViTV2PreTrainedModel:()=>ro,ModelOutput:()=>Ue,Moondream1ForConditionalGeneration:()=>fr,MptForCausalLM:()=>Pd,MptModel:()=>Za,MptPreTrainedModel:()=>Qs,MusicgenForCausalLM:()=>Gd,MusicgenForConditionalGeneration:()=>Uo,MusicgenModel:()=>Wd,MusicgenPreTrainedModel:()=>jo,NomicBertModel:()=>at,NomicBertPreTrainedModel:()=>nt,OPTForCausalLM:()=>el,OPTModel:()=>Ja,OPTPreTrainedModel:()=>Ys,OlmoForCausalLM:()=>In,OlmoModel:()=>za,OlmoPreTrainedModel:()=>Ns,OpenELMForCausalLM:()=>Ks,OpenELMModel:()=>Va,OpenELMPreTrainedModel:()=>Hs,OwlViTForObjectDetection:()=>wl,OwlViTModel:()=>gl,OwlViTPreTrainedModel:()=>no,Owlv2ForObjectDetection:()=>bl,Owlv2Model:()=>yl,Owlv2PreTrainedModel:()=>io,Phi3ForCausalLM:()=>Xa,Phi3Model:()=>Ka,Phi3PreTrainedModel:()=>vi,PhiForCausalLM:()=>Ha,PhiModel:()=>qa,PhiPreTrainedModel:()=>Xs,PreTrainedModel:()=>ce,PretrainedMixin:()=>Lr,PvtForImageClassification:()=>il,PvtModel:()=>nl,PvtPreTrainedModel:()=>Zs,PyAnnoteForAudioFrameClassification:()=>su,PyAnnoteModel:()=>iu,PyAnnotePreTrainedModel:()=>Co,QuestionAnsweringModelOutput:()=>gn,Qwen2ForCausalLM:()=>os,Qwen2Model:()=>Ga,Qwen2PreTrainedModel:()=>Wa,RTDetrForObjectDetection:()=>Cl,RTDetrModel:()=>El,RTDetrObjectDetectionOutput:()=>$l,RTDetrPreTrainedModel:()=>cs,ResNetForImageClassification:()=>zl,ResNetModel:()=>Bl,ResNetPreTrainedModel:()=>En,RoFormerForMaskedLM:()=>mt,RoFormerForQuestionAnswering:()=>kt,RoFormerForSequenceClassification:()=>wt,RoFormerForTokenClassification:()=>Lt,RoFormerModel:()=>He,RoFormerPreTrainedModel:()=>Ze,RobertaForMaskedLM:()=>xn,RobertaForQuestionAnswering:()=>Jr,RobertaForSequenceClassification:()=>Sn,RobertaForTokenClassification:()=>Ie,RobertaModel:()=>kr,RobertaPreTrainedModel:()=>hr,SamImageSegmentationOutput:()=>Vi,SamModel:()=>Mo,SamPreTrainedModel:()=>Jl,SapiensForDepthEstimation:()=>Gl,SapiensForNormalEstimation:()=>ql,SapiensForSemanticSegmentation:()=>Wl,SapiensPreTrainedModel:()=>ps,SegformerForImageClassification:()=>Lo,SegformerForSemanticSegmentation:()=>Pu,SegformerModel:()=>jd,SegformerPreTrainedModel:()=>Do,Seq2SeqLMOutput:()=>pd,SequenceClassifierOutput:()=>cr,SiglipModel:()=>_a,SiglipPreTrainedModel:()=>jn,SiglipTextModel:()=>ga,SiglipVisionModel:()=>wa,SpeechT5ForSpeechToText:()=>wu,SpeechT5ForTextToSpeech:()=>yu,SpeechT5HifiGan:()=>Nd,SpeechT5Model:()=>Rd,SpeechT5PreTrainedModel:()=>Fo,SqueezeBertForMaskedLM:()=>$n,SqueezeBertForQuestionAnswering:()=>_i,SqueezeBertForSequenceClassification:()=>Ln,SqueezeBertModel:()=>Qn,SqueezeBertPreTrainedModel:()=>ti,StableLmForCausalLM:()=>Ud,StableLmModel:()=>Au,StableLmPreTrainedModel:()=>Ro,Starcoder2ForCausalLM:()=>Gi,Starcoder2Model:()=>ms,Starcoder2PreTrainedModel:()=>Tu,Swin2SRForImageSuperResolution:()=>Nl,Swin2SRModel:()=>Rl,Swin2SRPreTrainedModel:()=>ho,SwinForImageClassification:()=>Ll,SwinModel:()=>Dl,SwinPreTrainedModel:()=>po,T5ForConditionalGeneration:()=>zi,T5Model:()=>Bi,T5PreTrainedModel:()=>ri,TableTransformerForObjectDetection:()=>kl,TableTransformerModel:()=>Sl,TableTransformerObjectDetectionOutput:()=>uo,TableTransformerPreTrainedModel:()=>lo,TokenClassifierOutput:()=>nn,TrOCRForCausalLM:()=>Mu,TrOCRPreTrainedModel:()=>bu,UniSpeechForCTC:()=>So,UniSpeechForSequenceClassification:()=>au,UniSpeechModel:()=>$o,UniSpeechPreTrainedModel:()=>xi,UniSpeechSatForAudioFrameClassification:()=>uu,UniSpeechSatForCTC:()=>zd,UniSpeechSatForSequenceClassification:()=>lu,UniSpeechSatModel:()=>ko,UniSpeechSatPreTrainedModel:()=>Wi,ViTForImageClassification:()=>Ir,ViTMAEModel:()=>ol,ViTMAEPreTrainedModel:()=>sl,ViTMSNForImageClassification:()=>ll,ViTMSNModel:()=>al,ViTMSNPreTrainedModel:()=>Js,ViTModel:()=>rl,ViTPreTrainedModel:()=>tl,VisionEncoderDecoderModel:()=>Ss,VitMatteForImageMatting:()=>Ri,VitMattePreTrainedModel:()=>hl,VitsModel:()=>zo,VitsModelOutput:()=>md,VitsPreTrainedModel:()=>ku,Wav2Vec2BertForCTC:()=>Ao,Wav2Vec2BertForSequenceClassification:()=>Dd,Wav2Vec2BertModel:()=>du,Wav2Vec2BertPreTrainedModel:()=>Po,Wav2Vec2ForAudioFrameClassification:()=>nu,Wav2Vec2ForCTC:()=>Bd,Wav2Vec2ForSequenceClassification:()=>Eo,Wav2Vec2Model:()=>ru,Wav2Vec2PreTrainedModel:()=>ei,WavLMForAudioFrameClassification:()=>gu,WavLMForCTC:()=>fu,WavLMForSequenceClassification:()=>mu,WavLMForXVector:()=>_u,WavLMModel:()=>hu,WavLMPreTrainedModel:()=>Ti,WeSpeakerResNetModel:()=>ou,WeSpeakerResNetPreTrainedModel:()=>fs,WhisperForConditionalGeneration:()=>$s,WhisperModel:()=>Kt,WhisperPreTrainedModel:()=>lt,XLMForQuestionAnswering:()=>Qr,XLMForSequenceClassification:()=>Jt,XLMForTokenClassification:()=>pn,XLMModel:()=>kn,XLMPreTrainedModel:()=>ln,XLMRobertaForMaskedLM:()=>Ot,XLMRobertaForQuestionAnswering:()=>Yn,XLMRobertaForSequenceClassification:()=>br,XLMRobertaForTokenClassification:()=>ii,XLMRobertaModel:()=>Br,XLMRobertaPreTrainedModel:()=>gr,XLMWithLMHeadModel:()=>Rn,XVectorOutput:()=>hd,YolosForObjectDetection:()=>Zl,YolosModel:()=>Yl,YolosObjectDetectionOutput:()=>Fd,YolosPreTrainedModel:()=>Ui});var C=T("./src/configs.js"),J=T("./src/backends/onnx.js"),ne=T("./src/utils/dtypes.js"),fe=T("./src/utils/generic.js"),Te=T("./src/utils/core.js"),R=T("./src/utils/hub.js"),O=T("./src/utils/constants.js"),M=T("./src/generation/logits_process.js"),U=T("./src/generation/configuration_utils.js"),X=T("./src/utils/tensor.js"),le=T("./src/utils/maths.js"),Ce=T("./src/generation/stopping_criteria.js"),ve=T("./src/generation/logits_sampler.js"),j=T("./src/env.js"),se=T("./src/models/whisper/generation_whisper.js"),xe=T("./src/models/whisper/common_whisper.js");const te={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7},ee=new Map,G=new Map,B=new Map;async function q(g,w,ie){const Ne=ie.config?.["transformers.js_config"]??{};let Xe=ie.device??Ne.device;Xe&&typeof Xe!="string"&&(Xe.hasOwnProperty(w)?Xe=Xe[w]:(console.warn(`device not specified for "${w}". Using the default device.`),Xe=null));const ut=Xe??(j.apis.IS_NODE_ENV?"cpu":"wasm"),Bt=(0,J.deviceToExecutionProviders)(ut);let It=ie.dtype??Ne.dtype;typeof It!="string"&&(It&&It.hasOwnProperty(w)?It=It[w]:(It=ne.DEFAULT_DEVICE_DTYPE_MAPPING[ut]??ne.DATA_TYPES.fp32,console.warn(`dtype not specified for "${w}". Using the default dtype (${It}) for this device (${ut}).`)));const Yt=It;if(ne.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Yt)){if(Yt===ne.DATA_TYPES.fp16&&ut==="webgpu"&&!await(0,ne.isWebGpuFp16Supported)())throw new Error(`The device (${ut}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Yt}. Should be one of: ${Object.keys(ne.DATA_TYPES).join(", ")}`);const wr=Ne.kv_cache_dtype?typeof Ne.kv_cache_dtype=="string"?Ne.kv_cache_dtype:Ne.kv_cache_dtype[Yt]??"float32":void 0;if(wr&&!["float32","float16"].includes(wr))throw new Error(`Invalid kv_cache_dtype: ${wr}. Should be one of: float32, float16`);const Ur={dtype:Yt,kv_cache_dtype:wr},zr=ne.DEFAULT_DTYPE_SUFFIX_MAPPING[Yt],$r=`${ie.subfolder??""}/${w}${zr}.onnx`,tr={...ie.session_options};tr.executionProviders??=Bt;const rn=Ne.free_dimension_overrides;rn?tr.freeDimensionOverrides??=rn:ut.startsWith("webnn")&&!tr.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const Mr=(0,R.getModelFile)(g,$r,!0,ie),vr=ie.use_external_data_format??Ne.use_external_data_format;let Vr=[];if(vr&&(vr===!0||typeof vr=="object"&&vr.hasOwnProperty(w)&&vr[w]===!0)){if(j.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const Gr=`${w}${zr}.onnx_data`,sn=`${ie.subfolder??""}/${Gr}`;Vr.push(new Promise(async(fn,en)=>{const on=await(0,R.getModelFile)(g,sn,!0,ie);fn({path:Gr,data:on})}))}else tr.externalData!==void 0&&(Vr=tr.externalData.map(async Gr=>{if(typeof Gr.data=="string"){const sn=await(0,R.getModelFile)(g,Gr.data,!0,ie);return{...Gr,data:sn}}return Gr}));if(Vr.length>0&&(tr.externalData=await Promise.all(Vr)),ut==="webgpu"){const Gr=(0,C.getKeyValueShapes)(ie.config,{prefix:"present"});if(Object.keys(Gr).length>0&&!(0,J.isONNXProxy)()){const sn={};for(const fn in Gr)sn[fn]="gpu-buffer";tr.preferredOutputLocation=sn}}return{buffer:await Mr,session_options:tr,session_config:Ur}}async function I(g,w,ie){return Object.fromEntries(await Promise.all(Object.keys(w).map(async Ne=>{const{buffer:Xe,session_options:ut,session_config:Bt}=await q(g,w[Ne],ie),It=await(0,J.createInferenceSession)(Xe,ut,Bt);return[Ne,It]})))}async function be(g,w,ie){return Object.fromEntries(await Promise.all(Object.keys(w).map(async Ne=>{const Xe=await(0,R.getModelJSON)(g,w[Ne],!1,ie);return[Ne,Xe]})))}function $e(g,w){const ie=Object.create(null),Ne=[];for(const Bt of g.inputNames){const It=w[Bt];if(!(It instanceof X.Tensor)){Ne.push(Bt);continue}ie[Bt]=(0,J.isONNXProxy)()?It.clone():It}if(Ne.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${Ne.join(", ")}.`);const Xe=Object.keys(w).length,ut=g.inputNames.length;if(Xe>ut){let Bt=Object.keys(w).filter(It=>!g.inputNames.includes(It));console.warn(`WARNING: Too many inputs were provided (${Xe} > ${ut}). The following inputs will be ignored: "${Bt.join(", ")}".`)}return ie}async function Ae(g,w){const ie=$e(g,w);try{const Ne=Object.fromEntries(Object.entries(ie).map(([ut,Bt])=>[ut,Bt.ort_tensor]));let Xe=await g.run(Ne);return Xe=je(Xe),Xe}catch(Ne){throw console.error(`An error occurred during model execution: "${Ne}".`),console.error("Inputs given to model:",ie),Ne}}function je(g){for(let w in g)(0,J.isONNXTensor)(g[w])?g[w]=new X.Tensor(g[w]):typeof g[w]=="object"&&je(g[w]);return g}function De(g){if(g instanceof X.Tensor)return g;if(g.length===0)throw Error("items must be non-empty");if(Array.isArray(g[0])){if(g.some(w=>w.length!==g[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new X.Tensor("int64",BigInt64Array.from(g.flat().map(w=>BigInt(w))),[g.length,g[0].length])}else return new X.Tensor("int64",BigInt64Array.from(g.map(w=>BigInt(w))),[1,g.length])}function ft(g){return new X.Tensor("bool",[g],[1])}async function dt(g,w){let{encoder_outputs:ie,input_ids:Ne,decoder_input_ids:Xe,...ut}=w;if(!ie){const It=(0,Te.pick)(w,g.sessions.model.inputNames);ie=(await gt(g,It)).last_hidden_state}return ut.input_ids=Xe,ut.encoder_hidden_states=ie,g.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(ut.encoder_attention_mask=w.attention_mask),await Ee(g,ut,!0)}async function gt(g,w){const ie=g.sessions.model,Ne=(0,Te.pick)(w,ie.inputNames);if(ie.inputNames.includes("inputs_embeds")&&!Ne.inputs_embeds){if(!w.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");Ne.inputs_embeds=await g.encode_text({input_ids:w.input_ids})}return ie.inputNames.includes("token_type_ids")&&!Ne.token_type_ids&&(Ne.token_type_ids=new X.Tensor("int64",new BigInt64Array(Ne.input_ids.data.length),Ne.input_ids.dims)),await Ae(ie,Ne)}async function Ee(g,w,ie=!1){const Ne=g.sessions[ie?"decoder_model_merged":"model"],{past_key_values:Xe,...ut}=w;Ne.inputNames.includes("use_cache_branch")&&(ut.use_cache_branch=ft(!!Xe)),Ne.inputNames.includes("position_ids")&&ut.attention_mask&&!ut.position_ids&&(ut.position_ids=we(ut,Xe)),g.addPastKeyValues(ut,Xe);const Bt=(0,Te.pick)(ut,Ne.inputNames);return await Ae(Ne,Bt)}async function H(g,{input_ids:w=null,attention_mask:ie=null,pixel_values:Ne=null,position_ids:Xe=null,inputs_embeds:ut=null,past_key_values:Bt=null,generation_config:It=null,logits_processor:Yt=null,...wr}){if(!ut){if(ut=await g.encode_text({input_ids:w}),Ne&&w.dims[1]!==1){const zr=await g.encode_image({pixel_values:Ne});({inputs_embeds:ut,attention_mask:ie}=g._merge_input_ids_with_image_features({image_features:zr,inputs_embeds:ut,input_ids:w,attention_mask:ie}))}else if(Bt&&Ne&&w.dims[1]===1){const zr=w.dims[1],$r=Object.values(Bt)[0].dims.at(-2);ie=(0,X.cat)([(0,X.ones)([w.dims[0],$r]),ie.slice(null,[ie.dims[1]-zr,ie.dims[1]])],1)}}return await Ee(g,{inputs_embeds:ut,past_key_values:Bt,attention_mask:ie,position_ids:Xe,generation_config:It,logits_processor:Yt},!0)}function we(g,w=null){const{input_ids:ie,inputs_embeds:Ne,attention_mask:Xe}=g,[ut,Bt]=Xe.dims,It=new BigInt64Array(Xe.data.length);for(let wr=0;wr<ut;++wr){const Ur=wr*Bt;let zr=BigInt(0);for(let $r=0;$r<Bt;++$r){const tr=Ur+$r;Xe.data[tr]===0n?It[tr]=BigInt(1):(It[tr]=zr,zr+=Xe.data[tr])}}let Yt=new X.Tensor("int64",It,Xe.dims);if(w){const wr=-(ie??Ne).dims.at(1);Yt=Yt.slice(null,[wr,null])}return Yt}function Pe(g,w,ie,Ne){if(ie.past_key_values){const Xe=Object.values(ie.past_key_values)[0].dims.at(-2),{input_ids:ut,attention_mask:Bt}=ie;if(!(Bt&&Bt.dims[1]>ut.dims[1])){if(Xe<ut.dims[1])ie.input_ids=ut.slice(null,[Xe,null]);else if(g.config.image_token_index!=null&&ut.data.some(It=>It==g.config.image_token_index)){const It=g.config.num_image_tokens;if(!It)throw new Error("`num_image_tokens` is missing in the model configuration.");const Yt=ut.dims[1]-(Xe-It);ie.input_ids=ut.slice(null,[-Yt,null]),ie.attention_mask=(0,X.ones)([1,Xe+Yt])}}}return ie}function Qe(g,w,ie,Ne){return ie.past_key_values&&(w=w.map(Xe=>[Xe.at(-1)])),{...ie,decoder_input_ids:De(w)}}function _t(g,...w){return g.config.is_encoder_decoder?Qe(g,...w):Pe(g,...w)}class ce extends fe.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(w,ie,Ne){super(),this.config=w,this.sessions=ie,this.configs=Ne;const Xe=B.get(this.constructor),ut=ee.get(Xe);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,ut){case te.DecoderOnly:this.can_generate=!0,this._forward=Ee,this._prepare_inputs_for_generation=Pe;break;case te.Seq2Seq:case te.Vision2Seq:case te.Musicgen:this.can_generate=!0,this._forward=dt,this._prepare_inputs_for_generation=Qe;break;case te.EncoderDecoder:this._forward=dt;break;case te.ImageTextToText:this.can_generate=!0,this._forward=H,this._prepare_inputs_for_generation=_t;break;default:this._forward=gt;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const w=[];for(const ie of Object.values(this.sessions))ie?.handler?.dispose&&w.push(ie.handler.dispose());return await Promise.all(w)}static async from_pretrained(w,{progress_callback:ie=null,config:Ne=null,cache_dir:Xe=null,local_files_only:ut=!1,revision:Bt="main",model_file_name:It=null,subfolder:Yt="onnx",device:wr=null,dtype:Ur=null,use_external_data_format:zr=null,session_options:$r={}}={}){let tr={progress_callback:ie,config:Ne,cache_dir:Xe,local_files_only:ut,revision:Bt,model_file_name:It,subfolder:Yt,device:wr,dtype:Ur,use_external_data_format:zr,session_options:$r};const rn=B.get(this),Mr=ee.get(rn);Ne=tr.config=await C.AutoConfig.from_pretrained(w,tr);let vr;if(Mr===te.DecoderOnly)vr=await Promise.all([I(w,{model:tr.model_file_name??"model"},tr),be(w,{generation_config:"generation_config.json"},tr)]);else if(Mr===te.Seq2Seq||Mr===te.Vision2Seq)vr=await Promise.all([I(w,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},tr),be(w,{generation_config:"generation_config.json"},tr)]);else if(Mr===te.MaskGeneration)vr=await Promise.all([I(w,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},tr)]);else if(Mr===te.EncoderDecoder)vr=await Promise.all([I(w,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},tr)]);else if(Mr===te.ImageTextToText){const Vr={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Ne.is_encoder_decoder&&(Vr.model="encoder_model"),vr=await Promise.all([I(w,Vr,tr),be(w,{generation_config:"generation_config.json"},tr)])}else Mr===te.Musicgen?vr=await Promise.all([I(w,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},tr),be(w,{generation_config:"generation_config.json"},tr)]):(Mr!==te.EncoderOnly&&console.warn(`Model type for '${rn??Ne?.model_type}' not found, assuming encoder-only architecture. Please report this at ${O.GITHUB_ISSUE_URL}.`),vr=await Promise.all([I(w,{model:tr.model_file_name??"model"},tr)]));return new this(Ne,...vr)}async _call(w){return await this.forward(w)}async forward(w){return await this._forward(this,w)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(w){const ie=new M.LogitsProcessorList;return w.temperature!==null&&w.temperature!==1&&ie.push(new M.TemperatureLogitsWarper(w.temperature)),w.top_k!==null&&w.top_k!==0&&ie.push(new M.TopKLogitsWarper(w.top_k)),w.top_p!==null&&w.top_p<1&&ie.push(new M.TopPLogitsWarper(w.top_p)),ie}_get_logits_processor(w,ie,Ne=null){const Xe=new M.LogitsProcessorList;if(w.repetition_penalty!==null&&w.repetition_penalty!==1&&Xe.push(new M.RepetitionPenaltyLogitsProcessor(w.repetition_penalty)),w.no_repeat_ngram_size!==null&&w.no_repeat_ngram_size>0&&Xe.push(new M.NoRepeatNGramLogitsProcessor(w.no_repeat_ngram_size)),w.bad_words_ids!==null&&Xe.push(new M.NoBadWordsLogitsProcessor(w.bad_words_ids,w.eos_token_id)),w.min_length!==null&&w.eos_token_id!==null&&w.min_length>0&&Xe.push(new M.MinLengthLogitsProcessor(w.min_length,w.eos_token_id)),w.min_new_tokens!==null&&w.eos_token_id!==null&&w.min_new_tokens>0&&Xe.push(new M.MinNewTokensLengthLogitsProcessor(ie,w.min_new_tokens,w.eos_token_id)),w.forced_bos_token_id!==null&&Xe.push(new M.ForcedBOSTokenLogitsProcessor(w.forced_bos_token_id)),w.forced_eos_token_id!==null&&Xe.push(new M.ForcedEOSTokenLogitsProcessor(w.max_length,w.forced_eos_token_id)),w.begin_suppress_tokens!==null){const ut=ie>1||w.forced_bos_token_id===null?ie:ie+1;Xe.push(new M.SuppressTokensAtBeginLogitsProcessor(w.begin_suppress_tokens,ut))}return w.guidance_scale!==null&&w.guidance_scale>1&&Xe.push(new M.ClassifierFreeGuidanceLogitsProcessor(w.guidance_scale)),Ne!==null&&Xe.extend(Ne),Xe}_prepare_generation_config(w,ie,Ne=U.GenerationConfig){const Xe={...this.config};for(const Bt of["decoder","generator","text_config"])Bt in Xe&&Object.assign(Xe,Xe[Bt]);const ut=new Ne(Xe);return Object.assign(ut,this.generation_config??{}),w&&Object.assign(ut,w),ie&&Object.assign(ut,(0,Te.pick)(ie,Object.getOwnPropertyNames(ut))),ut}_get_stopping_criteria(w,ie=null){const Ne=new Ce.StoppingCriteriaList;return w.max_length!==null&&Ne.push(new Ce.MaxLengthCriteria(w.max_length,this.config.max_position_embeddings??null)),w.eos_token_id!==null&&Ne.push(new Ce.EosTokenCriteria(w.eos_token_id)),ie&&Ne.extend(ie),Ne}_validate_model_class(){if(!this.can_generate){const w=[Xo,Qo,Ko,qo],ie=B.get(this.constructor),Ne=new Set,Xe=this.config.model_type;for(const Bt of w){const It=Bt.get(Xe);It&&Ne.add(It[0])}let ut=`The current model class (${ie}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw Ne.size>0&&(ut+=` Please use the following class instead: ${[...Ne].join(", ")}`),Error(ut)}}prepare_inputs_for_generation(...w){return this._prepare_inputs_for_generation(this,...w)}_update_model_kwargs_for_generation({generated_input_ids:w,outputs:ie,model_inputs:Ne,is_encoder_decoder:Xe}){return Ne.past_key_values=this.getPastKeyValues(ie,Ne.past_key_values),Ne.input_ids=new X.Tensor("int64",w.flat(),[w.length,1]),Xe||(Ne.attention_mask=(0,X.cat)([Ne.attention_mask,(0,X.ones)([Ne.attention_mask.dims[0],1])],1)),Ne.position_ids=null,Ne}_prepare_model_inputs({inputs:w,bos_token_id:ie,model_kwargs:Ne}){const Xe=(0,Te.pick)(Ne,this.forward_params),ut=this.main_input_name;if(ut in Xe){if(w)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else Xe[ut]=w;return{inputs_tensor:Xe[ut],model_inputs:Xe,model_input_name:ut}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:w,model_inputs:ie,model_input_name:Ne,generation_config:Xe}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!ie.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:Bt,pixel_values:It,attention_mask:Yt,...wr}=ie,Ur=await this._prepare_inputs_embeds(ie);ie={...wr,...(0,Te.pick)(Ur,["inputs_embeds","attention_mask"])}}let{last_hidden_state:ut}=await gt(this,ie);if(Xe.guidance_scale!==null&&Xe.guidance_scale>1)ut=(0,X.cat)([ut,(0,X.full_like)(ut,0)],0),"attention_mask"in ie&&(ie.attention_mask=(0,X.cat)([ie.attention_mask,(0,X.zeros_like)(ie.attention_mask)],0));else if(ie.decoder_input_ids){const Bt=De(ie.decoder_input_ids).dims[0];if(Bt!==ut.dims[0]){if(ut.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${ut.dims[0]}) than the decoder inputs (${Bt}).`);ut=(0,X.cat)(Array.from({length:Bt},()=>ut),0)}}return ie.encoder_outputs=ut,ie}_prepare_decoder_input_ids_for_generation({batch_size:w,model_input_name:ie,model_kwargs:Ne,decoder_start_token_id:Xe,bos_token_id:ut,generation_config:Bt}){let{decoder_input_ids:It,...Yt}=Ne;if(!(It instanceof X.Tensor)){if(It)Array.isArray(It[0])||(It=Array.from({length:w},()=>It));else if(Xe??=ut,this.config.model_type==="musicgen")It=Array.from({length:w*this.config.decoder.num_codebooks},()=>[Xe]);else if(Array.isArray(Xe)){if(Xe.length!==w)throw new Error(`\`decoder_start_token_id\` expcted to have length ${w} but got ${Xe.length}`);It=Xe}else It=Array.from({length:w},()=>[Xe]);It=De(It)}return Ne.decoder_attention_mask=(0,X.ones_like)(It),{input_ids:It,model_inputs:Yt}}async generate({inputs:w=null,generation_config:ie=null,logits_processor:Ne=null,stopping_criteria:Xe=null,streamer:ut=null,...Bt}){this._validate_model_class(),ie=this._prepare_generation_config(ie,Bt);let{inputs_tensor:It,model_inputs:Yt,model_input_name:wr}=this._prepare_model_inputs({inputs:w,model_kwargs:Bt});const Ur=this.config.is_encoder_decoder;Ur&&("encoder_outputs"in Yt||(Yt=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:It,model_inputs:Yt,model_input_name:wr,generation_config:ie})));let zr;Ur?{input_ids:zr,model_inputs:Yt}=this._prepare_decoder_input_ids_for_generation({batch_size:Yt[wr].dims.at(0),model_input_name:wr,model_kwargs:Yt,decoder_start_token_id:ie.decoder_start_token_id,bos_token_id:ie.bos_token_id,generation_config:ie}):zr=Yt[wr];let $r=zr.dims.at(-1);ie.max_new_tokens!==null&&(ie.max_length=$r+ie.max_new_tokens);const tr=this._get_logits_processor(ie,$r,Ne),rn=this._get_stopping_criteria(ie,Xe),Mr=Yt[wr].dims.at(0),vr=ve.LogitsSampler.getSampler(ie),Vr=new Array(Mr).fill(0),dn=zr.tolist();ut&&ut.put(dn);let Gr,sn={};for(;;){if(Yt=this.prepare_inputs_for_generation(dn,Yt,ie),Gr=await this.forward(Yt),ie.output_attentions&&ie.return_dict_in_generate){const Bn=this.getAttentions(Gr);for(const Ki in Bn)Ki in sn||(sn[Ki]=[]),sn[Ki].push(Bn[Ki])}const on=Gr.logits.slice(null,-1,null),Jo=tr(dn,on),Hi=[];for(let Bn=0;Bn<Jo.dims.at(0);++Bn){const Ki=Jo[Bn],yc=await vr(Ki);for(const[bc,Mc]of yc){const vc=BigInt(bc);Vr[Bn]+=Mc,dn[Bn].push(vc),Hi.push([vc]);break}}if(ut&&ut.put(Hi),rn(dn).every(Bn=>Bn))break;Yt=this._update_model_kwargs_for_generation({generated_input_ids:Hi,outputs:Gr,model_inputs:Yt,is_encoder_decoder:Ur})}ut&&ut.end();const fn=this.getPastKeyValues(Gr,Yt.past_key_values,!0),en=new X.Tensor("int64",dn.flat(),[dn.length,dn[0].length]);if(ie.return_dict_in_generate)return{sequences:en,past_key_values:fn,...sn};for(const on of Object.values(Gr))on.location==="gpu-buffer"&&on.dispose();return en}getPastKeyValues(w,ie,Ne=!1){const Xe=Object.create(null);for(const ut in w)if(ut.startsWith("present")){const Bt=ut.replace("present","past_key_values"),It=ut.includes("encoder");if(It&&ie?Xe[Bt]=ie[Bt]:Xe[Bt]=w[ut],ie&&(!It||Ne)){const Yt=ie[Bt];Yt.location==="gpu-buffer"&&Yt.dispose()}}return Xe}getAttentions(w){const ie={};for(const Ne of["cross_attentions","encoder_attentions","decoder_attentions"])for(const Xe in w)Xe.startsWith(Ne)&&(Ne in ie||(ie[Ne]=[]),ie[Ne].push(w[Xe]));return ie}addPastKeyValues(w,ie){if(ie)Object.assign(w,ie);else{const Xe=(this.sessions.decoder_model_merged??this.sessions.model)?.config?.kv_cache_dtype??"float32",ut=Xe==="float16"?new Uint16Array:[],Bt=(0,C.getKeyValueShapes)(this.config);for(const It in Bt)w[It]=new X.Tensor(Xe,ut,Bt[It])}}async encode_image({pixel_values:w}){const ie=(await Ae(this.sessions.vision_encoder,{pixel_values:w})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${ie.dims[1]}).`),this.config.num_image_tokens=ie.dims[1]),ie}async encode_text({input_ids:w}){return(await Ae(this.sessions.embed_tokens,{input_ids:w})).inputs_embeds}}class Ue{}class ct extends Ue{constructor({last_hidden_state:w,hidden_states:ie=null,attentions:Ne=null}){super(),this.last_hidden_state=w,this.hidden_states=ie,this.attentions=Ne}}class Ve extends ce{}class Mt extends Ve{}class Et extends Ve{async _call(w){return new un(await super._call(w))}}class tt extends Ve{async _call(w){return new cr(await super._call(w))}}class Y extends Ve{async _call(w){return new nn(await super._call(w))}}class ze extends Ve{async _call(w){return new gn(await super._call(w))}}class nt extends ce{}class at extends nt{}class Ze extends ce{}class He extends Ze{}class mt extends Ze{async _call(w){return new un(await super._call(w))}}class wt extends Ze{async _call(w){return new cr(await super._call(w))}}class Lt extends Ze{async _call(w){return new nn(await super._call(w))}}class kt extends Ze{async _call(w){return new gn(await super._call(w))}}class $ extends ce{}class Z extends ${}class z extends ${async _call(w){return new un(await super._call(w))}}class ue extends ${async _call(w){return new cr(await super._call(w))}}class Me extends ${async _call(w){return new nn(await super._call(w))}}class it extends ${async _call(w){return new gn(await super._call(w))}}class et extends ce{}class At extends et{}class ot extends et{async _call(w){return new un(await super._call(w))}}class yt extends et{async _call(w){return new cr(await super._call(w))}}class E extends et{async _call(w){return new nn(await super._call(w))}}class c extends et{async _call(w){return new gn(await super._call(w))}}class m extends ce{}class V extends m{}class me extends m{async _call(w){return new un(await super._call(w))}}class ke extends m{async _call(w){return new cr(await super._call(w))}}class Ge extends m{async _call(w){return new nn(await super._call(w))}}class sr extends m{async _call(w){return new gn(await super._call(w))}}class Je extends ce{}class N extends Je{}class ye extends Je{async _call(w){return new un(await super._call(w))}}class Se extends Je{async _call(w){return new cr(await super._call(w))}}class Be extends Je{async _call(w){return new nn(await super._call(w))}}class Ke extends Je{async _call(w){return new gn(await super._call(w))}}class pt extends ce{}class Ct extends pt{}class Tt extends pt{async _call(w){return new un(await super._call(w))}}class Ft extends pt{async _call(w){return new cr(await super._call(w))}}class xt extends pt{async _call(w){return new nn(await super._call(w))}}class Ut extends pt{async _call(w){return new gn(await super._call(w))}}class Wt extends ce{}class Nt extends Wt{}class Le extends Wt{async _call(w){return new cr(await super._call(w))}}class Re extends Wt{async _call(w){return new nn(await super._call(w))}}class vt extends Wt{async _call(w){return new gn(await super._call(w))}}class Ht extends Wt{async _call(w){return new un(await super._call(w))}}class ar extends ce{}class Or extends ar{}class jr extends ar{async _call(w){return new un(await super._call(w))}}class Er extends ar{async _call(w){return new cr(await super._call(w))}}class Dr extends ar{async _call(w){return new nn(await super._call(w))}}class Ar extends ce{}class Dn extends Ar{}class Nr extends Ar{async _call(w){return new un(await super._call(w))}}class mi extends Ar{async _call(w){return new cr(await super._call(w))}}class ki extends Ar{async _call(w){return new gn(await super._call(w))}}class Xn extends ce{}class Pi extends Xn{}class Ai extends Xn{async _call(w){return new un(await super._call(w))}}class Ii extends Xn{async _call(w){return new cr(await super._call(w))}}class Fi extends Xn{async _call(w){return new nn(await super._call(w))}}class Oi extends Xn{async _call(w){return new gn(await super._call(w))}}class ti extends ce{}class Qn extends ti{}class $n extends ti{async _call(w){return new un(await super._call(w))}}class Ln extends ti{async _call(w){return new cr(await super._call(w))}}class _i extends ti{async _call(w){return new gn(await super._call(w))}}class On extends ce{}class gi extends On{}class wi extends On{async _call(w){return new cr(await super._call(w))}}class yi extends On{async _call(w){return new gn(await super._call(w))}}class rr extends On{async _call(w){return new un(await super._call(w))}}class ri extends ce{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Bi extends ri{}class zi extends ri{}class bi extends ce{}class Di extends bi{}class Li extends bi{}class ni extends ce{}class ns extends ni{}class _e extends ni{}class _ extends ce{}class W extends _{}class oe extends _{}class pe extends _{async _call(w){return new cr(await super._call(w))}}class Oe extends ce{}class st extends Oe{}class Pt extends Oe{}class zt extends Oe{async _call(w){return new cr(await super._call(w))}}class Dt extends Oe{}class $t extends ce{}class _r extends $t{}class pr extends $t{}class Cr extends ce{}class Xr extends Cr{}class bn extends Cr{}class hr extends ce{}class kr extends hr{}class xn extends hr{async _call(w){return new un(await super._call(w))}}class Sn extends hr{async _call(w){return new cr(await super._call(w))}}class Ie extends hr{async _call(w){return new nn(await super._call(w))}}class Jr extends hr{async _call(w){return new gn(await super._call(w))}}class ln extends ce{}class kn extends ln{}class Rn extends ln{async _call(w){return new un(await super._call(w))}}class Jt extends ln{async _call(w){return new cr(await super._call(w))}}class pn extends ln{async _call(w){return new nn(await super._call(w))}}class Qr extends ln{async _call(w){return new gn(await super._call(w))}}class gr extends ce{}class Br extends gr{}class Ot extends gr{async _call(w){return new un(await super._call(w))}}class br extends gr{async _call(w){return new cr(await super._call(w))}}class ii extends gr{async _call(w){return new nn(await super._call(w))}}class Yn extends gr{async _call(w){return new gn(await super._call(w))}}class Nn extends ce{}class qt extends Nn{}class is extends Nn{}class lt extends ce{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Kt extends lt{}class $s extends lt{_prepare_generation_config(w,ie){return super._prepare_generation_config(w,ie,se.WhisperGenerationConfig)}_retrieve_init_tokens(w){const ie=[w.decoder_start_token_id];let Ne=w.language;const Xe=w.task;if(w.is_multilingual){Ne||(console.warn("No language specified - defaulting to English (en)."),Ne="en");const Bt=`<|${(0,xe.whisper_language_to_code)(Ne)}|>`;ie.push(w.lang_to_id[Bt]),ie.push(w.task_to_id[Xe??"transcribe"])}else if(Ne||Xe)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!w.return_timestamps&&w.no_timestamps_token_id&&ie.at(-1)!==w.no_timestamps_token_id?ie.push(w.no_timestamps_token_id):w.return_timestamps&&ie.at(-1)===w.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),ie.pop()),ie.filter(ut=>ut!=null)}async generate({inputs:w=null,generation_config:ie=null,logits_processor:Ne=null,stopping_criteria:Xe=null,...ut}){ie=this._prepare_generation_config(ie,ut);const Bt=ut.decoder_input_ids??this._retrieve_init_tokens(ie);if(ie.return_timestamps&&(Ne??=new M.LogitsProcessorList,Ne.push(new M.WhisperTimeStampLogitsProcessor(ie,Bt))),ie.begin_suppress_tokens&&(Ne??=new M.LogitsProcessorList,Ne.push(new M.SuppressTokensAtBeginLogitsProcessor(ie.begin_suppress_tokens,Bt.length))),ie.return_token_timestamps){if(!ie.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");ie.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),ie.output_attentions=!0,ie.return_dict_in_generate=!0}const It=await super.generate({inputs:w,generation_config:ie,logits_processor:Ne,decoder_input_ids:Bt,...ut});return ie.return_token_timestamps&&(It.token_timestamps=this._extract_token_timestamps(It,ie.alignment_heads,ie.num_frames)),It}_extract_token_timestamps(w,ie,Ne=null,Xe=.02){if(!w.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");Ne==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let ut=this.config.median_filter_width;ut===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),ut=7);const Bt=w.cross_attentions,It=Array.from({length:this.config.decoder_layers},(Mr,vr)=>(0,X.cat)(Bt.map(Vr=>Vr[vr]),2)),Yt=(0,X.stack)(ie.map(([Mr,vr])=>{if(Mr>=It.length)throw new Error(`Layer index ${Mr} is out of bounds for cross attentions (length ${It.length}).`);return Ne?It[Mr].slice(null,vr,null,[0,Ne]):It[Mr].slice(null,vr)})).transpose(1,0,2,3),[wr,Ur]=(0,X.std_mean)(Yt,-2,0,!0),zr=Yt.clone();for(let Mr=0;Mr<zr.dims[0];++Mr){const vr=zr[Mr];for(let Vr=0;Vr<vr.dims[0];++Vr){const dn=vr[Vr],Gr=wr[Mr][Vr][0].data,sn=Ur[Mr][Vr][0].data;for(let fn=0;fn<dn.dims[0];++fn){let en=dn[fn].data;for(let on=0;on<en.length;++on)en[on]=(en[on]-sn[on])/Gr[on];en.set((0,le.medianFilter)(en,ut))}}}const $r=[(0,X.mean)(zr,1)],tr=w.sequences.dims,rn=new X.Tensor("float32",new Float32Array(tr[0]*tr[1]),tr);for(let Mr=0;Mr<tr[0];++Mr){const vr=$r[Mr].neg().squeeze_(0),[Vr,dn]=(0,le.dynamic_time_warping)(vr.tolist()),Gr=Array.from({length:Vr.length-1},(en,on)=>Vr[on+1]-Vr[on]),sn=(0,Te.mergeArrays)([1],Gr).map(en=>!!en),fn=[];for(let en=0;en<sn.length;++en)sn[en]&&fn.push(dn[en]*Xe);rn[Mr].data.set(fn,1)}return rn}}class Ss extends ce{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class pa extends ce{forward_params=["input_ids","pixel_values","attention_mask","position_ids","past_key_values"]}class Mi extends pa{_merge_input_ids_with_image_features({inputs_embeds:w,image_features:ie,input_ids:Ne,attention_mask:Xe}){const ut=this.config.image_token_index,It=Ne.tolist().map($r=>$r.findIndex(tr=>tr==ut)),Yt=It.every($r=>$r===-1),wr=It.every($r=>$r!==-1);if(!Yt&&!wr)throw new Error("Every input should contain either 0 or 1 image token.");if(Yt)return{inputs_embeds:w,attention_mask:Xe};const Ur=[],zr=[];for(let $r=0;$r<It.length;++$r){const tr=It[$r],rn=w[$r],Mr=ie[$r],vr=Xe[$r];Ur.push((0,X.cat)([rn.slice([0,tr]),Mr,rn.slice([tr+1,rn.dims[0]])],0)),zr.push((0,X.cat)([vr.slice([0,tr]),(0,X.ones)([Mr.dims[0]]),vr.slice([tr+1,vr.dims[0]])],0))}return{inputs_embeds:(0,X.stack)(Ur,0),attention_mask:(0,X.stack)(zr,0)}}}class fr extends Mi{}class ha extends ce{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class ks extends ha{_merge_input_ids_with_image_features({inputs_embeds:w,image_features:ie,input_ids:Ne,attention_mask:Xe}){return{inputs_embeds:(0,X.cat)([ie,w],1),attention_mask:(0,X.cat)([(0,X.ones)(ie.dims.slice(0,2)),Xe],1)}}async _prepare_inputs_embeds({input_ids:w,pixel_values:ie,inputs_embeds:Ne,attention_mask:Xe}){if(!w&&!ie)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let ut,Bt;return w&&(ut=await this.encode_text({input_ids:w})),ie&&(Bt=await this.encode_image({pixel_values:ie})),ut&&Bt?{inputs_embeds:Ne,attention_mask:Xe}=this._merge_input_ids_with_image_features({inputs_embeds:ut,image_features:Bt,input_ids:w,attention_mask:Xe}):Ne=ut||Bt,{inputs_embeds:Ne,attention_mask:Xe}}async forward({input_ids:w,pixel_values:ie,attention_mask:Ne,decoder_input_ids:Xe,decoder_attention_mask:ut,encoder_outputs:Bt,past_key_values:It,inputs_embeds:Yt,decoder_inputs_embeds:wr}){if(Yt||({inputs_embeds:Yt,attention_mask:Ne}=await this._prepare_inputs_embeds({input_ids:w,pixel_values:ie,inputs_embeds:Yt,attention_mask:Ne})),!Bt){let{last_hidden_state:$r}=await gt(this,{inputs_embeds:Yt,attention_mask:Ne});Bt=$r}if(!wr){if(!Xe)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");wr=await this.encode_text({input_ids:Xe})}return await Ee(this,{inputs_embeds:wr,attention_mask:ut,encoder_attention_mask:Ne,encoder_hidden_states:Bt,past_key_values:It},!0)}}class si extends ce{}class fa extends si{}class $d extends si{static async from_pretrained(w,ie={}){return ie.model_file_name??="text_model",super.from_pretrained(w,ie)}}class Mn extends si{static async from_pretrained(w,ie={}){return ie.model_file_name??="text_model",super.from_pretrained(w,ie)}}class Sd extends si{static async from_pretrained(w,ie={}){return ie.model_file_name??="vision_model",super.from_pretrained(w,ie)}}class ma extends si{static async from_pretrained(w,ie={}){return ie.model_file_name??="vision_model",super.from_pretrained(w,ie)}}class jn extends ce{}class _a extends jn{}class ga extends jn{static async from_pretrained(w,ie={}){return ie.model_file_name??="text_model",super.from_pretrained(w,ie)}}class wa extends si{static async from_pretrained(w,ie={}){return ie.model_file_name??="vision_model",super.from_pretrained(w,ie)}}class ya extends ce{}class ba extends ya{}class Ps extends ce{}class Ma extends Ps{}class va extends Ps{}class As extends ce{}class xa extends As{}class Pn extends As{}class Is extends ce{}class Ta extends Is{}class Ea extends Is{}class Fs extends ce{}class Ca extends Fs{}class $a extends Fs{}class Os extends ce{}class Sa extends Os{}class ka extends Os{}class Bs extends ce{}class kd extends Bs{}class An extends Bs{}class zs extends ce{}class ss extends zs{}class Ds extends zs{}class Tn extends ce{}class Pa extends Tn{}class Aa extends Tn{}class Ls extends ce{}class Ia extends Ls{}class Fa extends Ls{}class Rs extends ce{}class Oa extends Rs{}class Ba extends Rs{}class Ns extends ce{}class za extends Ns{}class In extends Ns{}class js extends ce{}class Da extends js{}class La extends js{}class Us extends ce{}class Ra extends Us{}class Na extends Us{}class Vs extends ce{}class ja extends Vs{}class Ua extends Vs{}class Ws extends ce{}class Gs extends Ws{}class qs extends Ws{}class Hs extends ce{}class Va extends Hs{}class Ks extends Hs{}class Wa extends ce{}class Ga extends Wa{}class os extends Wa{}class Xs extends ce{}class qa extends Xs{}class Ha extends Xs{}class vi extends ce{}class Ka extends vi{}class Xa extends vi{}class as extends ce{}class Qa extends as{}class Ya extends as{}class Qs extends ce{}class Za extends Qs{}class Pd extends Qs{}class Ys extends ce{}class Ja extends Ys{}class el extends Ys{}class tl extends ce{}class rl extends tl{}class Ir extends tl{async _call(w){return new cr(await super._call(w))}}class Zs extends ce{}class nl extends Zs{}class il extends Zs{async _call(w){return new cr(await super._call(w))}}class sl extends ce{}class ol extends sl{}class Js extends ce{}class al extends Js{}class ll extends Js{async _call(w){return new cr(await super._call(w))}}class ul extends ce{}class dl extends ul{}class eo extends ce{}class cl extends eo{}class pl extends eo{async _call(w){return new cr(await super._call(w))}}class hl extends ce{}class Ri extends hl{async _call(w){return new fd(await super._call(w))}}class to extends ce{}class ls extends to{}class fl extends to{async _call(w){return new cr(await super._call(w))}}class ro extends ce{}class ml extends ro{}class _l extends ro{async _call(w){return new cr(await super._call(w))}}class no extends ce{}class gl extends no{}class wl extends no{}class io extends ce{}class yl extends io{}class bl extends io{}class so extends ce{}class Ml extends so{}class vl extends so{async _call(w){return new cr(await super._call(w))}}class us extends ce{}class xl extends us{}class Tl extends us{async _call(w){return new oo(await super._call(w))}}class ds extends us{async _call(w){return new ao(await super._call(w))}}class oo extends Ue{constructor({logits:w,pred_boxes:ie}){super(),this.logits=w,this.pred_boxes=ie}}class ao extends Ue{constructor({logits:w,pred_boxes:ie,pred_masks:Ne}){super(),this.logits=w,this.pred_boxes=ie,this.pred_masks=Ne}}class cs extends ce{}class El extends cs{}class Cl extends cs{async _call(w){return new $l(await super._call(w))}}class $l extends Ue{constructor({logits:w,pred_boxes:ie}){super(),this.logits=w,this.pred_boxes=ie}}class lo extends ce{}class Sl extends lo{}class kl extends lo{async _call(w){return new uo(await super._call(w))}}class uo extends oo{}class co extends ce{}class Pl extends co{}class Al extends co{async _call(w){return new cr(await super._call(w))}}class Il extends ce{}class Fl extends Il{}class Ol extends Il{async _call(w){return new cr(await super._call(w))}}class En extends ce{}class Bl extends En{}class zl extends En{async _call(w){return new cr(await super._call(w))}}class po extends ce{}class Dl extends po{}class Ll extends po{async _call(w){return new cr(await super._call(w))}}class ho extends ce{}class Rl extends ho{}class Nl extends ho{}class fo extends ce{}class jl extends fo{}class Ad extends fo{}class Ul extends ce{}class Vl extends Ul{}class ps extends ce{}class Wl extends ps{}class Gl extends ps{}class ql extends ps{}class Id extends ce{}class Zn extends Id{}class Un extends ce{}class Jn extends Un{}class mo extends Un{}class Vn extends ce{}class hn extends Vn{}class _o extends Vn{}class hs extends ce{}class go extends hs{}class wo extends ce{}class Hl extends wo{}class Kl extends wo{async _call(w){return new cr(await super._call(w))}}class Ni extends ce{}class yo extends Ni{}class Xl extends Ni{async _call(w){return new cr(await super._call(w))}}class ji extends ce{}class Ql extends ji{}class bo extends ji{async _call(w){return new cr(await super._call(w))}}class Ui extends ce{}class Yl extends Ui{}class Zl extends Ui{async _call(w){return new Fd(await super._call(w))}}class Fd extends Ue{constructor({logits:w,pred_boxes:ie}){super(),this.logits=w,this.pred_boxes=ie}}class Jl extends ce{}class Mo extends Jl{async get_image_embeddings({pixel_values:w}){return await gt(this,{pixel_values:w})}async forward(w){if((!w.image_embeddings||!w.image_positional_embeddings)&&(w={...w,...await this.get_image_embeddings(w)}),!w.input_labels&&w.input_points){const Ne=w.input_points.dims.slice(0,-1),Xe=Ne.reduce((ut,Bt)=>ut*Bt,1);w.input_labels=new X.Tensor("int64",new BigInt64Array(Xe).fill(1n),Ne)}const ie={image_embeddings:w.image_embeddings,image_positional_embeddings:w.image_positional_embeddings};return w.input_points&&(ie.input_points=w.input_points),w.input_labels&&(ie.input_labels=w.input_labels),w.input_boxes&&(ie.input_boxes=w.input_boxes),await Ae(this.sessions.prompt_encoder_mask_decoder,ie)}async _call(w){return new Vi(await super._call(w))}}class Vi extends Ue{constructor({iou_scores:w,pred_masks:ie}){super(),this.iou_scores=w,this.pred_masks=ie}}class vo extends ce{}class xo extends vo{}class eu extends vo{}class To extends ce{}class tu extends To{}class Od extends To{}class ei extends ce{}class ru extends ei{}class Bd extends ei{async _call(w){return new oi(await super._call(w))}}class Eo extends ei{async _call(w){return new cr(await super._call(w))}}class nu extends ei{async _call(w){return new nn(await super._call(w))}}class Co extends ce{}class iu extends Co{}class su extends Co{async _call(w){return new nn(await super._call(w))}}class fs extends ce{}class ou extends fs{}class xi extends ce{}class $o extends xi{}class So extends xi{async _call(w){return new oi(await super._call(w))}}class au extends xi{async _call(w){return new cr(await super._call(w))}}class Wi extends ce{}class ko extends Wi{}class zd extends Wi{async _call(w){return new oi(await super._call(w))}}class lu extends Wi{async _call(w){return new cr(await super._call(w))}}class uu extends Wi{async _call(w){return new nn(await super._call(w))}}class Po extends ce{}class du extends Po{}class Ao extends Po{async _call(w){return new oi(await super._call(w))}}class Dd extends Po{async _call(w){return new cr(await super._call(w))}}class Ld extends ce{}class cu extends ei{}class pu extends ei{async _call(w){return new oi(await super._call(w))}}class Io extends ei{async _call(w){return new cr(await super._call(w))}}class Ti extends ce{}class hu extends Ti{}class fu extends Ti{async _call(w){return new oi(await super._call(w))}}class mu extends Ti{async _call(w){return new cr(await super._call(w))}}class _u extends Ti{async _call(w){return new hd(await super._call(w))}}class gu extends Ti{async _call(w){return new nn(await super._call(w))}}class Fo extends ce{}class Rd extends Fo{}class wu extends Fo{}class yu extends Fo{async generate_speech(w,ie,{threshold:Ne=.5,minlenratio:Xe=0,maxlenratio:ut=20,vocoder:Bt=null}={}){const It={input_ids:w},{encoder_outputs:Yt,encoder_attention_mask:wr}=await gt(this,It),Ur=Yt.dims[1]/this.config.reduction_factor,zr=Math.floor(Ur*ut),$r=Math.floor(Ur*Xe),tr=this.config.num_mel_bins;let rn=[],Mr=null,vr=null,Vr=0;for(;;){++Vr;const sn=ft(!!vr);let fn;vr?fn=vr.output_sequence_out:fn=new X.Tensor("float32",new Float32Array(tr),[1,1,tr]);let en={use_cache_branch:sn,output_sequence:fn,encoder_attention_mask:wr,speaker_embeddings:ie,encoder_hidden_states:Yt};this.addPastKeyValues(en,Mr),vr=await Ae(this.sessions.decoder_model_merged,en),Mr=this.getPastKeyValues(vr,Mr);const{prob:on,spectrum:Jo}=vr;if(rn.push(Jo),Vr>=$r&&(Array.from(on.data).filter(Hi=>Hi>=Ne).length>0||Vr>=zr))break}const dn=(0,X.cat)(rn),{waveform:Gr}=await Ae(Bt.sessions.model,{spectrogram:dn});return{spectrogram:dn,waveform:Gr}}}class Nd extends ce{main_input_name="spectrogram"}class bu extends ce{}class Mu extends bu{}class Oo extends ce{}class vu extends Oo{}class xu extends Oo{}class Tu extends ce{}class ms extends Tu{}class Gi extends Tu{}class _s extends ce{}class Eu extends _s{}class Cu extends _s{}class gs extends ce{}class $u extends gs{}class Bo extends gs{static async from_pretrained(w,ie={}){return ie.model_file_name??="text_model",super.from_pretrained(w,ie)}}class Su extends gs{static async from_pretrained(w,ie={}){return ie.model_file_name??="audio_model",super.from_pretrained(w,ie)}}class ku extends ce{}class zo extends ku{async _call(w){return new md(await super._call(w))}}class Do extends ce{}class jd extends Do{}class Lo extends Do{}class Pu extends Do{}class Ro extends ce{}class Au extends Ro{}class Ud extends Ro{}class No extends ce{}class Iu extends No{}class Vd extends No{async _call(w){return new cr(await super._call(w))}}class jo extends ce{}class Wd extends jo{}class Gd extends jo{}class Uo extends ce{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(w){const[ie,Ne]=w.dims,Xe=this.config.decoder.num_codebooks,ut=Ne-Xe;let Bt=0;for(let wr=0;wr<w.size;++wr){if(w.data[wr]===this.config.decoder.pad_token_id)continue;const Ur=wr%Ne,zr=Math.floor(wr/Ne)%Xe,$r=Ur-zr;$r>0&&$r<=ut&&(w.data[Bt++]=w.data[wr])}const It=Math.floor(ie/Xe),Yt=Bt/(It*Xe);return new X.Tensor(w.type,w.data.slice(0,Bt),[It,Xe,Yt])}prepare_inputs_for_generation(w,ie,Ne){let Xe=structuredClone(w);for(let Bt=0;Bt<Xe.length;++Bt)for(let It=0;It<Xe[Bt].length;++It)Bt%this.config.decoder.num_codebooks>=It&&(Xe[Bt][It]=BigInt(this.config.decoder.pad_token_id));return Ne.guidance_scale!==null&&Ne.guidance_scale>1&&(Xe=Xe.concat(Xe)),super.prepare_inputs_for_generation(Xe,ie,Ne)}async generate(w){const ie=await super.generate(w),Ne=this._apply_and_filter_by_delay_pattern_mask(ie).unsqueeze_(0),{audio_values:Xe}=await Ae(this.sessions.encodec_decode,{audio_codes:Ne});return Xe}}class Fu extends ce{}class Ou extends Fu{}class Bu extends Fu{async _call(w){return new cr(await super._call(w))}}class Vo extends ce{}class zu extends Vo{}class qd extends Vo{async _call(w){return new cr(await super._call(w))}}class Wo extends ce{}class Du extends Wo{}class Lu extends Wo{async _call(w){return new cr(await super._call(w))}}class Go extends ce{}class Hd extends Go{}class Ru extends Go{async _call(w){return new cr(await super._call(w))}}class Nu extends ce{}class ju extends Nu{}class Lr{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(w,{progress_callback:ie=null,config:Ne=null,cache_dir:Xe=null,local_files_only:ut=!1,revision:Bt="main",model_file_name:It=null,subfolder:Yt="onnx",device:wr=null,dtype:Ur=null,use_external_data_format:zr=null,session_options:$r={}}={}){const tr={progress_callback:ie,config:Ne,cache_dir:Xe,local_files_only:ut,revision:Bt,model_file_name:It,subfolder:Yt,device:wr,dtype:Ur,use_external_data_format:zr,session_options:$r};if(tr.config=await C.AutoConfig.from_pretrained(w,tr),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const rn of this.MODEL_CLASS_MAPPINGS){const Mr=rn.get(tr.config.model_type);if(Mr)return await Mr[1].from_pretrained(w,tr)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${tr.config.model_type}", attempting to construct from base class.`),await ce.from_pretrained(w,tr);throw Error(`Unsupported model type: ${tr.config.model_type}`)}}const Wc=new Map([["bert",["BertModel",Mt]],["nomic_bert",["NomicBertModel",at]],["roformer",["RoFormerModel",He]],["electra",["ElectraModel",At]],["esm",["EsmModel",Or]],["convbert",["ConvBertModel",Z]],["camembert",["CamembertModel",V]],["deberta",["DebertaModel",N]],["deberta-v2",["DebertaV2Model",Ct]],["mpnet",["MPNetModel",Pi]],["albert",["AlbertModel",gi]],["distilbert",["DistilBertModel",Nt]],["roberta",["RobertaModel",kr]],["xlm",["XLMModel",kn]],["xlm-roberta",["XLMRobertaModel",Br]],["clap",["ClapModel",$u]],["clip",["CLIPModel",fa]],["clipseg",["CLIPSegModel",Ma]],["chinese_clip",["ChineseCLIPModel",ba]],["siglip",["SiglipModel",_a]],["mobilebert",["MobileBertModel",Dn]],["squeezebert",["SqueezeBertModel",Qn]],["wav2vec2",["Wav2Vec2Model",ru]],["wav2vec2-bert",["Wav2Vec2BertModel",du]],["unispeech",["UniSpeechModel",$o]],["unispeech-sat",["UniSpeechSatModel",ko]],["hubert",["HubertModel",cu]],["wavlm",["WavLMModel",hu]],["audio-spectrogram-transformer",["ASTModel",qt]],["vits",["VitsModel",zo]],["pyannote",["PyAnnoteModel",iu]],["wespeaker-resnet",["WeSpeakerResNetModel",ou]],["detr",["DetrModel",xl]],["rt_detr",["RTDetrModel",El]],["table-transformer",["TableTransformerModel",Sl]],["vit",["ViTModel",rl]],["pvt",["PvtModel",nl]],["vit_msn",["ViTMSNModel",al]],["vit_mae",["ViTMAEModel",ol]],["groupvit",["GroupViTModel",dl]],["fastvit",["FastViTModel",cl]],["mobilevit",["MobileViTModel",ls]],["mobilevitv2",["MobileViTV2Model",ml]],["owlvit",["OwlViTModel",gl]],["owlv2",["Owlv2Model",yl]],["beit",["BeitModel",Ml]],["deit",["DeiTModel",Pl]],["hiera",["HieraModel",Fl]],["convnext",["ConvNextModel",Hl]],["convnextv2",["ConvNextV2Model",yo]],["dinov2",["Dinov2Model",Ql]],["resnet",["ResNetModel",Bl]],["swin",["SwinModel",Dl]],["swin2sr",["Swin2SRModel",Rl]],["donut-swin",["DonutSwinModel",go]],["yolos",["YolosModel",Yl]],["dpt",["DPTModel",jl]],["glpn",["GLPNModel",hn]],["hifigan",["SpeechT5HifiGan",Nd]],["efficientnet",["EfficientNetModel",Iu]],["decision_transformer",["DecisionTransformerModel",ju]],["mobilenet_v1",["MobileNetV1Model",Ou]],["mobilenet_v2",["MobileNetV2Model",zu]],["mobilenet_v3",["MobileNetV3Model",Du]],["mobilenet_v4",["MobileNetV4Model",Hd]],["maskformer",["MaskFormerModel",Jn]]]),yn=new Map([["t5",["T5Model",Bi]],["longt5",["LongT5Model",Di]],["mt5",["MT5Model",ns]],["bart",["BartModel",W]],["mbart",["MBartModel",st]],["marian",["MarianModel",xo]],["whisper",["WhisperModel",Kt]],["m2m_100",["M2M100Model",tu]],["blenderbot",["BlenderbotModel",_r]],["blenderbot-small",["BlenderbotSmallModel",Xr]]]),Kd=new Map([["bloom",["BloomModel",Qa]],["jais",["JAISModel",Ta]],["gpt2",["GPT2Model",xa]],["gptj",["GPTJModel",kd]],["gpt_bigcode",["GPTBigCodeModel",ss]],["gpt_neo",["GPTNeoModel",Ca]],["gpt_neox",["GPTNeoXModel",Sa]],["codegen",["CodeGenModel",Pa]],["llama",["LlamaModel",Ia]],["olmo",["OlmoModel",za]],["mobilellm",["MobileLLMModel",Oa]],["granite",["GraniteModel",Da]],["cohere",["CohereModel",Ra]],["gemma",["GemmaModel",ja]],["gemma2",["Gemma2Model",Gs]],["openelm",["OpenELMModel",Va]],["qwen2",["Qwen2Model",Ga]],["phi",["PhiModel",qa]],["phi3",["Phi3Model",Ka]],["mpt",["MptModel",Za]],["opt",["OPTModel",Ja]],["mistral",["MistralModel",vu]],["starcoder2",["Starcoder2Model",ms]],["falcon",["FalconModel",Eu]],["stablelm",["StableLmModel",Au]]]),qo=new Map([["speecht5",["SpeechT5ForSpeechToText",wu]],["whisper",["WhisperForConditionalGeneration",$s]]]),Ho=new Map([["speecht5",["SpeechT5ForTextToSpeech",yu]]]),Uu=new Map([["vits",["VitsModel",zo]],["musicgen",["MusicgenForConditionalGeneration",Uo]]]),qi=new Map([["bert",["BertForSequenceClassification",tt]],["roformer",["RoFormerForSequenceClassification",wt]],["electra",["ElectraForSequenceClassification",yt]],["esm",["EsmForSequenceClassification",Er]],["convbert",["ConvBertForSequenceClassification",ue]],["camembert",["CamembertForSequenceClassification",ke]],["deberta",["DebertaForSequenceClassification",Se]],["deberta-v2",["DebertaV2ForSequenceClassification",Ft]],["mpnet",["MPNetForSequenceClassification",Ii]],["albert",["AlbertForSequenceClassification",wi]],["distilbert",["DistilBertForSequenceClassification",Le]],["roberta",["RobertaForSequenceClassification",Sn]],["xlm",["XLMForSequenceClassification",Jt]],["xlm-roberta",["XLMRobertaForSequenceClassification",br]],["bart",["BartForSequenceClassification",pe]],["mbart",["MBartForSequenceClassification",zt]],["mobilebert",["MobileBertForSequenceClassification",mi]],["squeezebert",["SqueezeBertForSequenceClassification",Ln]]]),Vu=new Map([["bert",["BertForTokenClassification",Y]],["roformer",["RoFormerForTokenClassification",Lt]],["electra",["ElectraForTokenClassification",E]],["esm",["EsmForTokenClassification",Dr]],["convbert",["ConvBertForTokenClassification",Me]],["camembert",["CamembertForTokenClassification",Ge]],["deberta",["DebertaForTokenClassification",Be]],["deberta-v2",["DebertaV2ForTokenClassification",xt]],["mpnet",["MPNetForTokenClassification",Fi]],["distilbert",["DistilBertForTokenClassification",Re]],["roberta",["RobertaForTokenClassification",Ie]],["xlm",["XLMForTokenClassification",pn]],["xlm-roberta",["XLMRobertaForTokenClassification",ii]]]),Ko=new Map([["t5",["T5ForConditionalGeneration",zi]],["longt5",["LongT5ForConditionalGeneration",Li]],["mt5",["MT5ForConditionalGeneration",_e]],["bart",["BartForConditionalGeneration",oe]],["mbart",["MBartForConditionalGeneration",Pt]],["marian",["MarianMTModel",eu]],["m2m_100",["M2M100ForConditionalGeneration",Od]],["blenderbot",["BlenderbotForConditionalGeneration",pr]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",bn]]]),Xo=new Map([["bloom",["BloomForCausalLM",Ya]],["gpt2",["GPT2LMHeadModel",Pn]],["jais",["JAISLMHeadModel",Ea]],["gptj",["GPTJForCausalLM",An]],["gpt_bigcode",["GPTBigCodeForCausalLM",Ds]],["gpt_neo",["GPTNeoForCausalLM",$a]],["gpt_neox",["GPTNeoXForCausalLM",ka]],["codegen",["CodeGenForCausalLM",Aa]],["llama",["LlamaForCausalLM",Fa]],["olmo",["OlmoForCausalLM",In]],["mobilellm",["MobileLLMForCausalLM",Ba]],["granite",["GraniteForCausalLM",La]],["cohere",["CohereForCausalLM",Na]],["gemma",["GemmaForCausalLM",Ua]],["gemma2",["Gemma2ForCausalLM",qs]],["openelm",["OpenELMForCausalLM",Ks]],["qwen2",["Qwen2ForCausalLM",os]],["phi",["PhiForCausalLM",Ha]],["phi3",["Phi3ForCausalLM",Xa]],["mpt",["MptForCausalLM",Pd]],["opt",["OPTForCausalLM",el]],["mbart",["MBartForCausalLM",Dt]],["mistral",["MistralForCausalLM",xu]],["starcoder2",["Starcoder2ForCausalLM",Gi]],["falcon",["FalconForCausalLM",Cu]],["trocr",["TrOCRForCausalLM",Mu]],["stablelm",["StableLmForCausalLM",Ud]]]),Wu=new Map([["bert",["BertForMaskedLM",Et]],["roformer",["RoFormerForMaskedLM",mt]],["electra",["ElectraForMaskedLM",ot]],["esm",["EsmForMaskedLM",jr]],["convbert",["ConvBertForMaskedLM",z]],["camembert",["CamembertForMaskedLM",me]],["deberta",["DebertaForMaskedLM",ye]],["deberta-v2",["DebertaV2ForMaskedLM",Tt]],["mpnet",["MPNetForMaskedLM",Ai]],["albert",["AlbertForMaskedLM",rr]],["distilbert",["DistilBertForMaskedLM",Ht]],["roberta",["RobertaForMaskedLM",xn]],["xlm",["XLMWithLMHeadModel",Rn]],["xlm-roberta",["XLMRobertaForMaskedLM",Ot]],["mobilebert",["MobileBertForMaskedLM",Nr]],["squeezebert",["SqueezeBertForMaskedLM",$n]]]),Gu=new Map([["bert",["BertForQuestionAnswering",ze]],["roformer",["RoFormerForQuestionAnswering",kt]],["electra",["ElectraForQuestionAnswering",c]],["convbert",["ConvBertForQuestionAnswering",it]],["camembert",["CamembertForQuestionAnswering",sr]],["deberta",["DebertaForQuestionAnswering",Ke]],["deberta-v2",["DebertaV2ForQuestionAnswering",Ut]],["mpnet",["MPNetForQuestionAnswering",Oi]],["albert",["AlbertForQuestionAnswering",yi]],["distilbert",["DistilBertForQuestionAnswering",vt]],["roberta",["RobertaForQuestionAnswering",Jr]],["xlm",["XLMForQuestionAnswering",Qr]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Yn]],["mobilebert",["MobileBertForQuestionAnswering",ki]],["squeezebert",["SqueezeBertForQuestionAnswering",_i]]]),Qo=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Ss]]]),qu=new Map([["llava",["LlavaForConditionalGeneration",Mi]],["moondream1",["Moondream1ForConditionalGeneration",fr]],["florence2",["Florence2ForConditionalGeneration",ks]]]),Xd=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Ss]]]),Hu=new Map([["vit",["ViTForImageClassification",Ir]],["pvt",["PvtForImageClassification",il]],["vit_msn",["ViTMSNForImageClassification",ll]],["fastvit",["FastViTForImageClassification",pl]],["mobilevit",["MobileViTForImageClassification",fl]],["mobilevitv2",["MobileViTV2ForImageClassification",_l]],["beit",["BeitForImageClassification",vl]],["deit",["DeiTForImageClassification",Al]],["hiera",["HieraForImageClassification",Ol]],["convnext",["ConvNextForImageClassification",Kl]],["convnextv2",["ConvNextV2ForImageClassification",Xl]],["dinov2",["Dinov2ForImageClassification",bo]],["resnet",["ResNetForImageClassification",zl]],["swin",["SwinForImageClassification",Ll]],["segformer",["SegformerForImageClassification",Lo]],["efficientnet",["EfficientNetForImageClassification",Vd]],["mobilenet_v1",["MobileNetV1ForImageClassification",Bu]],["mobilenet_v2",["MobileNetV2ForImageClassification",qd]],["mobilenet_v3",["MobileNetV3ForImageClassification",Lu]],["mobilenet_v4",["MobileNetV4ForImageClassification",Ru]]]),Ku=new Map([["detr",["DetrForObjectDetection",Tl]],["rt_detr",["RTDetrForObjectDetection",Cl]],["table-transformer",["TableTransformerForObjectDetection",kl]],["yolos",["YolosForObjectDetection",Zl]]]),Xu=new Map([["owlvit",["OwlViTForObjectDetection",wl]],["owlv2",["Owlv2ForObjectDetection",bl]]]),Qu=new Map([["detr",["DetrForSegmentation",ds]],["clipseg",["CLIPSegForImageSegmentation",va]]]),Yo=new Map([["segformer",["SegformerForSemanticSegmentation",Pu]],["sapiens",["SapiensForSemanticSegmentation",Wl]]]),Yu=new Map([["detr",["DetrForSegmentation",ds]],["maskformer",["MaskFormerForInstanceSegmentation",mo]]]),Qd=new Map([["sam",["SamModel",Mo]]]),Zo=new Map([["wav2vec2",["Wav2Vec2ForCTC",Bd]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Ao]],["unispeech",["UniSpeechForCTC",So]],["unispeech-sat",["UniSpeechSatForCTC",zd]],["wavlm",["WavLMForCTC",fu]],["hubert",["HubertForCTC",pu]]]),Zu=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Eo]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Dd]],["unispeech",["UniSpeechForSequenceClassification",au]],["unispeech-sat",["UniSpeechSatForSequenceClassification",lu]],["wavlm",["WavLMForSequenceClassification",mu]],["hubert",["HubertForSequenceClassification",Io]],["audio-spectrogram-transformer",["ASTForAudioClassification",is]]]),Ju=new Map([["wavlm",["WavLMForXVector",_u]]]),ed=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",uu]],["wavlm",["WavLMForAudioFrameClassification",gu]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",nu]],["pyannote",["PyAnnoteForAudioFrameClassification",su]]]),Yd=new Map([["vitmatte",["VitMatteForImageMatting",Ri]]]),td=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Nl]]]),rd=new Map([["dpt",["DPTForDepthEstimation",Ad]],["depth_anything",["DepthAnythingForDepthEstimation",Vl]],["glpn",["GLPNForDepthEstimation",_o]],["sapiens",["SapiensForDepthEstimation",Gl]],["depth_pro",["DepthProForDepthEstimation",Zn]]]),nd=new Map([["sapiens",["SapiensForNormalEstimation",ql]]]),Zd=new Map([["clip",["CLIPVisionModelWithProjection",ma]],["siglip",["SiglipVisionModel",wa]]]),id=[[Wc,te.EncoderOnly],[yn,te.EncoderDecoder],[Kd,te.DecoderOnly],[qi,te.EncoderOnly],[Vu,te.EncoderOnly],[Ko,te.Seq2Seq],[qo,te.Seq2Seq],[Xo,te.DecoderOnly],[Wu,te.EncoderOnly],[Gu,te.EncoderOnly],[Qo,te.Vision2Seq],[qu,te.ImageTextToText],[Hu,te.EncoderOnly],[Qu,te.EncoderOnly],[Yu,te.EncoderOnly],[Yo,te.EncoderOnly],[Yd,te.EncoderOnly],[td,te.EncoderOnly],[rd,te.EncoderOnly],[nd,te.EncoderOnly],[Ku,te.EncoderOnly],[Xu,te.EncoderOnly],[Qd,te.MaskGeneration],[Zo,te.EncoderOnly],[Zu,te.EncoderOnly],[Ho,te.Seq2Seq],[Uu,te.EncoderOnly],[Ju,te.EncoderOnly],[ed,te.EncoderOnly],[Zd,te.EncoderOnly]];for(const[g,w]of id)for(const[ie,Ne]of g.values())ee.set(ie,w),B.set(Ne,ie),G.set(ie,Ne);const Jd=[["MusicgenForConditionalGeneration",Uo,te.Musicgen],["CLIPTextModelWithProjection",Mn,te.EncoderOnly],["SiglipTextModel",ga,te.EncoderOnly],["ClapTextModelWithProjection",Bo,te.EncoderOnly],["ClapAudioModelWithProjection",Su,te.EncoderOnly]];for(const[g,w,ie]of Jd)ee.set(g,ie),B.set(w,g),G.set(g,w);class ec extends Lr{static MODEL_CLASS_MAPPINGS=id.map(w=>w[0]);static BASE_IF_FAIL=!0}class tc extends Lr{static MODEL_CLASS_MAPPINGS=[qi]}class rc extends Lr{static MODEL_CLASS_MAPPINGS=[Vu]}class Gc extends Lr{static MODEL_CLASS_MAPPINGS=[Ko]}class nc extends Lr{static MODEL_CLASS_MAPPINGS=[qo]}class ic extends Lr{static MODEL_CLASS_MAPPINGS=[Ho]}class sc extends Lr{static MODEL_CLASS_MAPPINGS=[Uu]}class oc extends Lr{static MODEL_CLASS_MAPPINGS=[Xo]}class ac extends Lr{static MODEL_CLASS_MAPPINGS=[Wu]}class lc extends Lr{static MODEL_CLASS_MAPPINGS=[Gu]}class uc extends Lr{static MODEL_CLASS_MAPPINGS=[Qo]}class dc extends Lr{static MODEL_CLASS_MAPPINGS=[Hu]}class cc extends Lr{static MODEL_CLASS_MAPPINGS=[Qu]}class qc extends Lr{static MODEL_CLASS_MAPPINGS=[Yo]}class ws extends Lr{static MODEL_CLASS_MAPPINGS=[Yu]}class sd extends Lr{static MODEL_CLASS_MAPPINGS=[Ku]}class od extends Lr{static MODEL_CLASS_MAPPINGS=[Xu]}class ad extends Lr{static MODEL_CLASS_MAPPINGS=[Qd]}class ld extends Lr{static MODEL_CLASS_MAPPINGS=[Zo]}class pc extends Lr{static MODEL_CLASS_MAPPINGS=[Zu]}class hc extends Lr{static MODEL_CLASS_MAPPINGS=[Ju]}class ud extends Lr{static MODEL_CLASS_MAPPINGS=[ed]}class dd extends Lr{static MODEL_CLASS_MAPPINGS=[Xd]}class fc extends Lr{static MODEL_CLASS_MAPPINGS=[Yd]}class mc extends Lr{static MODEL_CLASS_MAPPINGS=[td]}class cd extends Lr{static MODEL_CLASS_MAPPINGS=[rd]}class _c extends Lr{static MODEL_CLASS_MAPPINGS=[nd]}class gc extends Lr{static MODEL_CLASS_MAPPINGS=[Zd]}class pd extends Ue{constructor({logits:w,past_key_values:ie,encoder_outputs:Ne,decoder_attentions:Xe=null,cross_attentions:ut=null}){super(),this.logits=w,this.past_key_values=ie,this.encoder_outputs=Ne,this.decoder_attentions=Xe,this.cross_attentions=ut}}class cr extends Ue{constructor({logits:w}){super(),this.logits=w}}class hd extends Ue{constructor({logits:w,embeddings:ie}){super(),this.logits=w,this.embeddings=ie}}class nn extends Ue{constructor({logits:w}){super(),this.logits=w}}class un extends Ue{constructor({logits:w}){super(),this.logits=w}}class gn extends Ue{constructor({start_logits:w,end_logits:ie}){super(),this.start_logits=w,this.end_logits=ie}}class oi extends Ue{constructor({logits:w}){super(),this.logits=w}}class wc extends Ue{constructor({logits:w,past_key_values:ie}){super(),this.logits=w,this.past_key_values=ie}}class fd extends Ue{constructor({alphas:w}){super(),this.alphas=w}}class md extends Ue{constructor({waveform:w,spectrogram:ie}){super(),this.waveform=w,this.spectrogram=ie}}},"./src/models/whisper/common_whisper.js":(ae,L,T)=>{T.r(L),T.d(L,{WHISPER_LANGUAGE_MAPPING:()=>J,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>ne,whisper_language_to_code:()=>fe});const C=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],J=new Map(C),ne=new Map([...C.map(([Te,R])=>[R,Te]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function fe(Te){Te=Te.toLowerCase();let R=ne.get(Te);if(R===void 0)if(J.has(Te))R=Te;else{const M=Te.length===2?J.keys():J.values();throw new Error(`Language "${Te}" is not supported. Must be one of: ${JSON.stringify(M)}`)}return R}},"./src/models/whisper/generation_whisper.js":(ae,L,T)=>{T.r(L),T.d(L,{WhisperGenerationConfig:()=>J});var C=T("./src/generation/configuration_utils.js");class J extends C.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/ops/registry.js":(ae,L,T)=>{T.r(L),T.d(L,{TensorOpRegistry:()=>fe});var C=T("./src/backends/onnx.js"),J=T("./src/utils/tensor.js");const ne=async(Te,R,O)=>{const M=await(0,C.createInferenceSession)(new Uint8Array(Te),R);return async U=>{const X=Object.fromEntries(Object.entries(U).map(([Ce,ve])=>[Ce,ve.ort_tensor])),le=await M.run(X);return Array.isArray(O)?O.map(Ce=>new J.Tensor(le[Ce])):new J.Tensor(le[O])}};class fe{static session_options={};static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=ne([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=ne([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=ne([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=ne([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=ne([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=ne([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}},"./src/pipelines.js":(ae,L,T)=>{T.r(L),T.d(L,{AudioClassificationPipeline:()=>je,AutomaticSpeechRecognitionPipeline:()=>ft,DepthEstimationPipeline:()=>Ue,DocumentQuestionAnsweringPipeline:()=>Qe,FeatureExtractionPipeline:()=>$e,FillMaskPipeline:()=>te,ImageClassificationPipeline:()=>gt,ImageFeatureExtractionPipeline:()=>Ae,ImageSegmentationPipeline:()=>Ee,ImageToImagePipeline:()=>ce,ImageToTextPipeline:()=>dt,ObjectDetectionPipeline:()=>we,Pipeline:()=>ve,QuestionAnsweringPipeline:()=>xe,SummarizationPipeline:()=>G,Text2TextGenerationPipeline:()=>ee,TextClassificationPipeline:()=>j,TextGenerationPipeline:()=>I,TextToAudioPipeline:()=>_t,TokenClassificationPipeline:()=>se,TranslationPipeline:()=>B,ZeroShotAudioClassificationPipeline:()=>De,ZeroShotClassificationPipeline:()=>be,ZeroShotImageClassificationPipeline:()=>H,ZeroShotObjectDetectionPipeline:()=>Pe,pipeline:()=>Mt});var C=T("./src/tokenizers.js"),J=T("./src/models.js"),ne=T("./src/processors.js"),fe=T("./src/utils/generic.js"),Te=T("./src/utils/core.js"),R=T("./src/utils/maths.js"),O=T("./src/utils/audio.js"),M=T("./src/utils/tensor.js"),U=T("./src/utils/image.js");async function X(tt){return Array.isArray(tt)||(tt=[tt]),await Promise.all(tt.map(Y=>U.RawImage.read(Y)))}async function le(tt,Y){return Array.isArray(tt)||(tt=[tt]),await Promise.all(tt.map(ze=>typeof ze=="string"||ze instanceof URL?(0,O.read_audio)(ze,Y):ze instanceof Float64Array?new Float32Array(ze):ze))}function Ce(tt,Y){Y&&(tt=tt.map(He=>He|0));const[ze,nt,at,Ze]=tt;return{xmin:ze,ymin:nt,xmax:at,ymax:Ze}}class ve extends fe.Callable{constructor({task:Y,model:ze,tokenizer:nt=null,processor:at=null}){super(),this.task=Y,this.model=ze,this.tokenizer=nt,this.processor=at}async dispose(){await this.model.dispose()}}class j extends ve{constructor(Y){super(Y)}async _call(Y,{top_k:ze=1}={}){const nt=this.tokenizer(Y,{padding:!0,truncation:!0}),at=await this.model(nt),Ze=this.model.config.problem_type==="multi_label_classification"?wt=>wt.sigmoid():wt=>new M.Tensor("float32",(0,R.softmax)(wt.data),wt.dims),He=this.model.config.id2label,mt=[];for(const wt of at.logits){const Lt=Ze(wt),kt=await(0,M.topk)(Lt,ze),$=kt[0].tolist(),z=kt[1].tolist().map((ue,Me)=>({label:He?He[ue]:`LABEL_${ue}`,score:$[Me]}));ze===1?mt.push(...z):mt.push(z)}return Array.isArray(Y)||ze===1?mt:mt[0]}}class se extends ve{constructor(Y){super(Y)}async _call(Y,{ignore_labels:ze=["O"]}={}){const nt=Array.isArray(Y),at=this.tokenizer(nt?Y:[Y],{padding:!0,truncation:!0}),He=(await this.model(at)).logits,mt=this.model.config.id2label,wt=[];for(let Lt=0;Lt<He.dims[0];++Lt){const kt=at.input_ids[Lt],$=He[Lt],Z=[];for(let z=0;z<$.dims[0];++z){const ue=$[z],Me=(0,R.max)(ue.data)[1],it=mt?mt[Me]:`LABEL_${Me}`;if(ze.includes(it))continue;const et=this.tokenizer.decode([kt[z].item()],{skip_special_tokens:!0});if(et==="")continue;const At=(0,R.softmax)(ue.data);Z.push({entity:it,score:At[Me],index:z,word:et})}wt.push(Z)}return nt?wt:wt[0]}}class xe extends ve{constructor(Y){super(Y)}async _call(Y,ze,{top_k:nt=1}={}){const at=this.tokenizer(Y,{text_pair:ze,padding:!0,truncation:!0}),{start_logits:Ze,end_logits:He}=await this.model(at),mt=at.input_ids.tolist(),wt=at.attention_mask.tolist(),Lt=this.tokenizer.all_special_ids,kt=[];for(let $=0;$<Ze.dims[0];++$){const Z=mt[$],z=Z.findIndex(ot=>ot==this.tokenizer.sep_token_id);wt[$].map((ot,yt)=>ot==1&&(yt===0||yt>z&&Lt.findIndex(E=>E==Z[yt])===-1));const ue=Ze[$].tolist(),Me=He[$].tolist();for(let ot=1;ot<ue.length;++ot)(wt[$]==0||ot<=z||Lt.findIndex(yt=>yt==Z[ot])!==-1)&&(ue[ot]=-1/0,Me[ot]=-1/0);const it=(0,R.softmax)(ue).map((ot,yt)=>[ot,yt]),et=(0,R.softmax)(Me).map((ot,yt)=>[ot,yt]);it[0][0]=0,et[0][0]=0;const At=(0,Te.product)(it,et).filter(ot=>ot[0][1]<=ot[1][1]).map(ot=>[ot[0][1],ot[1][1],ot[0][0]*ot[1][0]]).sort((ot,yt)=>yt[2]-ot[2]);for(let ot=0;ot<Math.min(At.length,nt);++ot){const[yt,E,c]=At[ot],m=Z.slice(yt,E+1),V=this.tokenizer.decode(m,{skip_special_tokens:!0});kt.push({answer:V,score:c})}}return nt===1?kt[0]:kt}}class te extends ve{constructor(Y){super(Y)}async _call(Y,{top_k:ze=5}={}){const nt=this.tokenizer(Y,{padding:!0,truncation:!0}),{logits:at}=await this.model(nt),Ze=[],He=nt.input_ids.tolist();for(let mt=0;mt<He.length;++mt){const wt=He[mt],Lt=wt.findIndex(ue=>ue==this.tokenizer.mask_token_id);if(Lt===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const kt=at[mt][Lt],$=await(0,M.topk)(new M.Tensor("float32",(0,R.softmax)(kt.data),kt.dims),ze),Z=$[0].tolist(),z=$[1].tolist();Ze.push(z.map((ue,Me)=>{const it=wt.slice();return it[Lt]=ue,{score:Z[Me],token:Number(ue),token_str:this.tokenizer.model.vocab[ue],sequence:this.tokenizer.decode(it,{skip_special_tokens:!0})}}))}return Array.isArray(Y)?Ze:Ze[0]}}class ee extends ve{_key="generated_text";constructor(Y){super(Y)}async _call(Y,ze={}){Array.isArray(Y)||(Y=[Y]),this.model.config.prefix&&(Y=Y.map(wt=>this.model.config.prefix+wt));const nt=this.model.config.task_specific_params;nt&&nt[this.task]&&nt[this.task].prefix&&(Y=Y.map(wt=>nt[this.task].prefix+wt));const at=this.tokenizer,Ze={padding:!0,truncation:!0};let He;this instanceof B&&"_build_translation_inputs"in at?He=at._build_translation_inputs(Y,Ze,ze):He=at(Y,Ze);const mt=await this.model.generate({...He,...ze});return at.batch_decode(mt,{skip_special_tokens:!0}).map(wt=>({[this._key]:wt}))}}class G extends ee{_key="summary_text";constructor(Y){super(Y)}}class B extends ee{_key="translation_text";constructor(Y){super(Y)}}function q(tt){return Array.isArray(tt)&&tt.every(Y=>"role"in Y&&"content"in Y)}class I extends ve{constructor(Y){super(Y)}async _call(Y,ze={}){let nt=!1,at=!1,Ze;if(typeof Y=="string")Ze=Y=[Y];else if(Array.isArray(Y)&&Y.every(z=>typeof z=="string"))nt=!0,Ze=Y;else{if(q(Y))Y=[Y];else if(Array.isArray(Y)&&Y.every(q))nt=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");at=!0,Ze=Y.map(z=>this.tokenizer.apply_chat_template(z,{tokenize:!1,add_generation_prompt:!0}))}const He=ze.add_special_tokens??!1,mt=at?!1:ze.return_full_text??!0;this.tokenizer.padding_side="left";const wt=this.tokenizer(Ze,{add_special_tokens:He,padding:!0,truncation:!0}),Lt=await this.model.generate({...wt,...ze}),kt=this.tokenizer.batch_decode(Lt,{skip_special_tokens:!0});let $;!mt&&wt.input_ids.dims.at(-1)>0&&($=this.tokenizer.batch_decode(wt.input_ids,{skip_special_tokens:!0}).map(z=>z.length));const Z=Array.from({length:Y.length},z=>[]);for(let z=0;z<kt.length;++z){const ue=Math.floor(z/Lt.dims[0]*Y.length);$&&(kt[z]=kt[z].slice($[ue])),Z[ue].push({generated_text:at?[...Y[ue],{role:"assistant",content:kt[z]}]:kt[z]})}return!nt&&Z.length===1?Z[0]:Z}}class be extends ve{constructor(Y){super(Y),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([ze,nt])=>[ze.toLowerCase(),nt])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(Y,ze,{hypothesis_template:nt="This example is {}.",multi_label:at=!1}={}){const Ze=Array.isArray(Y);Ze||(Y=[Y]),Array.isArray(ze)||(ze=[ze]);const He=ze.map(Lt=>nt.replace("{}",Lt)),mt=at||ze.length===1,wt=[];for(const Lt of Y){const kt=[];for(const z of He){const ue=this.tokenizer(Lt,{text_pair:z,padding:!0,truncation:!0}),Me=await this.model(ue);mt?kt.push([Me.logits.data[this.contradiction_id],Me.logits.data[this.entailment_id]]):kt.push(Me.logits.data[this.entailment_id])}const Z=(mt?kt.map(z=>(0,R.softmax)(z)[1]):(0,R.softmax)(kt)).map((z,ue)=>[z,ue]).sort((z,ue)=>ue[0]-z[0]);wt.push({sequence:Lt,labels:Z.map(z=>ze[z[1]]),scores:Z.map(z=>z[0])})}return Ze?wt:wt[0]}}class $e extends ve{constructor(Y){super(Y)}async _call(Y,{pooling:ze="none",normalize:nt=!1,quantize:at=!1,precision:Ze="binary"}={}){const He=this.tokenizer(Y,{padding:!0,truncation:!0}),mt=await this.model(He);let wt=mt.last_hidden_state??mt.logits??mt.token_embeddings;if(ze!=="none")if(ze==="mean")wt=(0,M.mean_pooling)(wt,He.attention_mask);else if(ze==="cls")wt=wt.slice(null,0);else throw Error(`Pooling method '${ze}' not supported.`);return nt&&(wt=wt.normalize(2,-1)),at&&(wt=(0,M.quantize_embeddings)(wt,Ze)),wt}}class Ae extends ve{constructor(Y){super(Y)}async _call(Y,{pool:ze=null}={}){const nt=await X(Y),{pixel_values:at}=await this.processor(nt),Ze=await this.model({pixel_values:at});let He;if(ze){if(!("pooler_output"in Ze))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");He=Ze.pooler_output}else He=Ze.last_hidden_state??Ze.logits??Ze.image_embeds;return He}}class je extends ve{constructor(Y){super(Y)}async _call(Y,{top_k:ze=5}={}){const nt=this.processor.feature_extractor.config.sampling_rate,at=await le(Y,nt),Ze=this.model.config.id2label,He=[];for(const mt of at){const wt=await this.processor(mt),kt=(await this.model(wt)).logits[0],$=await(0,M.topk)(new M.Tensor("float32",(0,R.softmax)(kt.data),kt.dims),ze),Z=$[0].tolist(),ue=$[1].tolist().map((Me,it)=>({label:Ze?Ze[Me]:`LABEL_${Me}`,score:Z[it]}));He.push(ue)}return Array.isArray(Y)?He:He[0]}}class De extends ve{constructor(Y){super(Y)}async _call(Y,ze,{hypothesis_template:nt="This is a sound of {}."}={}){const at=!Array.isArray(Y);at&&(Y=[Y]);const Ze=ze.map(kt=>nt.replace("{}",kt)),He=this.tokenizer(Ze,{padding:!0,truncation:!0}),mt=this.processor.feature_extractor.config.sampling_rate,wt=await le(Y,mt),Lt=[];for(const kt of wt){const $=await this.processor(kt),Z=await this.model({...He,...$}),z=(0,R.softmax)(Z.logits_per_audio.data);Lt.push([...z].map((ue,Me)=>({score:ue,label:ze[Me]})))}return at?Lt[0]:Lt}}class ft extends ve{constructor(Y){super(Y)}async _call(Y,ze={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(Y,ze);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(Y,ze);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(Y,ze){ze.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),ze.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const nt=!Array.isArray(Y);nt&&(Y=[Y]);const at=this.processor.feature_extractor.config.sampling_rate,Ze=await le(Y,at),He=[];for(const mt of Ze){const wt=await this.processor(mt),kt=(await this.model(wt)).logits[0],$=[];for(const z of kt)$.push((0,R.max)(z.data)[1]);const Z=this.tokenizer.decode($);He.push({text:Z})}return nt?He[0]:He}async _call_whisper(Y,ze){const nt=ze.return_timestamps??!1,at=ze.chunk_length_s??0,Ze=ze.force_full_sequences??!1;let He=ze.stride_length_s??null;const mt={...ze};nt==="word"&&(mt.return_token_timestamps=!0,mt.return_timestamps=!1);const wt=!Array.isArray(Y);wt&&(Y=[Y]);const Lt=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,kt=this.processor.feature_extractor.config.hop_length,$=this.processor.feature_extractor.config.sampling_rate,Z=await le(Y,$),z=[];for(const ue of Z){let Me=[];if(at>0){if(He===null)He=at/6;else if(at<=He)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const At=$*at,ot=$*He,yt=At-2*ot;let E=0;for(;;){const c=E+At,m=ue.subarray(E,c),V=await this.processor(m),me=E===0,ke=c>=ue.length;if(Me.push({stride:[m.length,me?0:ot,ke?0:ot],input_features:V.input_features,is_last:ke}),ke)break;E+=yt}}else Me=[{stride:[ue.length,0,0],input_features:(await this.processor(ue)).input_features,is_last:!0}];for(const At of Me){mt.num_frames=Math.floor(At.stride[0]/kt);const ot=await this.model.generate({inputs:At.input_features,...mt});nt==="word"?(At.tokens=ot.sequences.tolist()[0],At.token_timestamps=ot.token_timestamps.tolist()[0].map(yt=>(0,R.round)(yt,2))):At.tokens=ot[0].tolist(),At.stride=At.stride.map(yt=>yt/$)}const[it,et]=this.tokenizer._decode_asr(Me,{time_precision:Lt,return_timestamps:nt,force_full_sequences:Ze});z.push({text:it,...et})}return wt?z[0]:z}}class dt extends ve{constructor(Y){super(Y)}async _call(Y,ze={}){const nt=Array.isArray(Y),at=await X(Y),{pixel_values:Ze}=await this.processor(at),He=[];for(const mt of Ze){mt.dims=[1,...mt.dims];const wt=await this.model.generate({inputs:mt,...ze}),Lt=this.tokenizer.batch_decode(wt,{skip_special_tokens:!0}).map(kt=>({generated_text:kt.trim()}));He.push(Lt)}return nt?He:He[0]}}class gt extends ve{constructor(Y){super(Y)}async _call(Y,{top_k:ze=5}={}){const nt=await X(Y),{pixel_values:at}=await this.processor(nt),Ze=await this.model({pixel_values:at}),He=this.model.config.id2label,mt=[];for(const wt of Ze.logits){const Lt=await(0,M.topk)(new M.Tensor("float32",(0,R.softmax)(wt.data),wt.dims),ze),kt=Lt[0].tolist(),Z=Lt[1].tolist().map((z,ue)=>({label:He?He[z]:`LABEL_${z}`,score:kt[ue]}));mt.push(Z)}return Array.isArray(Y)?mt:mt[0]}}class Ee extends ve{constructor(Y){super(Y),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(Y,{threshold:ze=.5,mask_threshold:nt=.5,overlap_mask_area_threshold:at=.8,label_ids_to_fuse:Ze=null,target_sizes:He=null,subtask:mt=null}={}){if(Array.isArray(Y)&&Y.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const Lt=await X(Y),kt=Lt.map(et=>[et.height,et.width]),{pixel_values:$,pixel_mask:Z}=await this.processor(Lt),z=await this.model({pixel_values:$,pixel_mask:Z});let ue=null;if(mt!==null)ue=this.subtasks_mapping[mt];else for(let[et,At]of Object.entries(this.subtasks_mapping))if(At in this.processor.feature_extractor){ue=this.processor.feature_extractor[At].bind(this.processor.feature_extractor),mt=et;break}const Me=this.model.config.id2label,it=[];if(mt==="panoptic"||mt==="instance"){const et=ue(z,ze,nt,at,Ze,He??kt)[0],At=et.segmentation;for(const ot of et.segments_info){const yt=new Uint8ClampedArray(At.data.length);for(let c=0;c<At.data.length;++c)At.data[c]===ot.id&&(yt[c]=255);const E=new U.RawImage(yt,At.dims[1],At.dims[0],1);it.push({score:ot.score,label:Me[ot.label_id],mask:E})}}else if(mt==="semantic"){const{segmentation:et,labels:At}=ue(z,He??kt)[0];for(const ot of At){const yt=new Uint8ClampedArray(et.data.length);for(let c=0;c<et.data.length;++c)et.data[c]===ot&&(yt[c]=255);const E=new U.RawImage(yt,et.dims[1],et.dims[0],1);it.push({score:null,label:Me[ot],mask:E})}}else throw Error(`Subtask ${mt} not supported.`);return it}}class H extends ve{constructor(Y){super(Y)}async _call(Y,ze,{hypothesis_template:nt="This is a photo of {}"}={}){const at=Array.isArray(Y),Ze=await X(Y),He=ze.map(Z=>nt.replace("{}",Z)),mt=this.tokenizer(He,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:wt}=await this.processor(Ze),Lt=await this.model({...mt,pixel_values:wt}),kt=this.model.config.model_type==="siglip"?Z=>Z.sigmoid().data:Z=>(0,R.softmax)(Z.data),$=[];for(const Z of Lt.logits_per_image){const ue=[...kt(Z)].map((Me,it)=>({score:Me,label:ze[it]}));ue.sort((Me,it)=>it.score-Me.score),$.push(ue)}return at?$:$[0]}}class we extends ve{constructor(Y){super(Y)}async _call(Y,{threshold:ze=.9,percentage:nt=!1}={}){const at=Array.isArray(Y);if(at&&Y.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Ze=await X(Y),He=nt?null:Ze.map(z=>[z.height,z.width]),{pixel_values:mt,pixel_mask:wt}=await this.processor(Ze),Lt=await this.model({pixel_values:mt,pixel_mask:wt}),kt=this.processor.feature_extractor.post_process_object_detection(Lt,ze,He),$=this.model.config.id2label,Z=kt.map(z=>z.boxes.map((ue,Me)=>({score:z.scores[Me],label:$[z.classes[Me]],box:Ce(ue,!nt)})));return at?Z:Z[0]}}class Pe extends ve{constructor(Y){super(Y)}async _call(Y,ze,{threshold:nt=.1,top_k:at=null,percentage:Ze=!1}={}){const He=Array.isArray(Y),mt=await X(Y),wt=this.tokenizer(ze,{padding:!0,truncation:!0}),Lt=await this.processor(mt),kt=[];for(let $=0;$<mt.length;++$){const Z=mt[$],z=Ze?null:[[Z.height,Z.width]],ue=Lt.pixel_values[$].unsqueeze_(0),Me=await this.model({...wt,pixel_values:ue}),it=this.processor.feature_extractor.post_process_object_detection(Me,nt,z,!0)[0];let et=it.boxes.map((At,ot)=>({score:it.scores[ot],label:ze[it.classes[ot]],box:Ce(At,!Ze)})).sort((At,ot)=>ot.score-At.score);at!==null&&(et=et.slice(0,at)),kt.push(et)}return He?kt:kt[0]}}class Qe extends ve{constructor(Y){super(Y)}async _call(Y,ze,nt={}){const at=(await X(Y))[0],{pixel_values:Ze}=await this.processor(at),He=`<s_docvqa><s_question>${ze}</s_question><s_answer>`,mt=this.tokenizer(He,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,wt=await this.model.generate({inputs:Ze,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:mt,...nt}),kt=this.tokenizer.batch_decode(wt)[0].match(/<s_answer>(.*?)<\/s_answer>/);let $=null;return kt&&kt.length>=2&&($=kt[1].trim()),[{answer:$}]}}class _t extends ve{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(Y){super(Y),this.vocoder=Y.vocoder??null}async _call(Y,{speaker_embeddings:ze=null}={}){return this.processor?this._call_text_to_spectrogram(Y,{speaker_embeddings:ze}):this._call_text_to_waveform(Y)}async _call_text_to_waveform(Y){const ze=this.tokenizer(Y,{padding:!0,truncation:!0}),{waveform:nt}=await this.model(ze),at=this.model.config.sampling_rate;return{audio:nt.data,sampling_rate:at}}async _call_text_to_spectrogram(Y,{speaker_embeddings:ze}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await J.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof ze=="string"||ze instanceof URL)&&(ze=new Float32Array(await(await fetch(ze)).arrayBuffer())),ze instanceof Float32Array)ze=new M.Tensor("float32",ze,[1,ze.length]);else if(!(ze instanceof M.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:nt}=this.tokenizer(Y,{padding:!0,truncation:!0}),{waveform:at}=await this.model.generate_speech(nt,ze,{vocoder:this.vocoder}),Ze=this.processor.feature_extractor.config.sampling_rate;return{audio:at.data,sampling_rate:Ze}}}class ce extends ve{constructor(Y){super(Y)}async _call(Y){const ze=await X(Y),nt=await this.processor(ze),at=await this.model(nt),Ze=[];for(const He of at.reconstruction){const mt=He.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Ze.push(U.RawImage.fromTensor(mt))}return Ze.length>1?Ze:Ze[0]}}class Ue extends ve{constructor(Y){super(Y)}async _call(Y){const ze=await X(Y),nt=await this.processor(ze),{predicted_depth:at}=await this.model(nt),Ze=[];for(let He=0;He<ze.length;++He){const mt=(0,M.interpolate)(at[He],ze[He].size.reverse(),"bilinear",!1),wt=mt.mul_(255/(0,R.max)(mt.data)[0]).to("uint8");Ze.push({predicted_depth:at[He],depth:U.RawImage.fromTensor(wt)})}return Ze.length>1?Ze:Ze[0]}}const ct=Object.freeze({"text-classification":{tokenizer:C.AutoTokenizer,pipeline:j,model:J.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:C.AutoTokenizer,pipeline:se,model:J.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:C.AutoTokenizer,pipeline:xe,model:J.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:C.AutoTokenizer,pipeline:te,model:J.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:C.AutoTokenizer,pipeline:G,model:J.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:C.AutoTokenizer,pipeline:B,model:J.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:C.AutoTokenizer,pipeline:ee,model:J.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:C.AutoTokenizer,pipeline:I,model:J.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:C.AutoTokenizer,pipeline:be,model:J.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:je,model:J.AutoModelForAudioClassification,processor:ne.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:C.AutoTokenizer,pipeline:De,model:J.AutoModel,processor:ne.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:C.AutoTokenizer,pipeline:ft,model:[J.AutoModelForSpeechSeq2Seq,J.AutoModelForCTC],processor:ne.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:C.AutoTokenizer,pipeline:_t,model:[J.AutoModelForTextToWaveform,J.AutoModelForTextToSpectrogram],processor:[ne.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:C.AutoTokenizer,pipeline:dt,model:J.AutoModelForVision2Seq,processor:ne.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:gt,model:J.AutoModelForImageClassification,processor:ne.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Ee,model:[J.AutoModelForImageSegmentation,J.AutoModelForSemanticSegmentation,J.AutoModelForUniversalSegmentation],processor:ne.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:C.AutoTokenizer,pipeline:H,model:J.AutoModel,processor:ne.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:we,model:J.AutoModelForObjectDetection,processor:ne.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:C.AutoTokenizer,pipeline:Pe,model:J.AutoModelForZeroShotObjectDetection,processor:ne.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:C.AutoTokenizer,pipeline:Qe,model:J.AutoModelForDocumentQuestionAnswering,processor:ne.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:ce,model:J.AutoModelForImageToImage,processor:ne.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:Ue,model:J.AutoModelForDepthEstimation,processor:ne.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:C.AutoTokenizer,pipeline:$e,model:J.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:ne.AutoProcessor,pipeline:Ae,model:[J.AutoModelForImageFeatureExtraction,J.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Ve=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function Mt(tt,Y=null,{progress_callback:ze=null,config:nt=null,cache_dir:at=null,local_files_only:Ze=!1,revision:He="main",device:mt=null,dtype:wt=null,model_file_name:Lt=null,session_options:kt={}}={}){tt=Ve[tt]??tt;const $=ct[tt.split("_",1)[0]];if(!$)throw Error(`Unsupported pipeline: ${tt}. Must be one of [${Object.keys(ct)}]`);Y||(Y=$.default.model,console.log(`No model specified. Using default model: "${Y}".`));const Z={progress_callback:ze,config:nt,cache_dir:at,local_files_only:Ze,revision:He,device:mt,dtype:wt,model_file_name:Lt,session_options:kt},z=new Map([["tokenizer",$.tokenizer],["model",$.model],["processor",$.processor]]),ue=await Et(z,Y,Z);ue.task=tt,(0,Te.dispatchCallback)(ze,{status:"ready",task:tt,model:Y});const Me=$.pipeline;return new Me(ue)}async function Et(tt,Y,ze){const nt=Object.create(null),at=[];for(const[Ze,He]of tt.entries()){if(!He)continue;let mt;Array.isArray(He)?mt=new Promise(async(wt,Lt)=>{let kt;for(const $ of He){if($===null){wt(null);return}try{wt(await $.from_pretrained(Y,ze));return}catch(Z){if(Z.message?.includes("Unsupported model type"))kt=Z;else if(Z.message?.includes("Could not locate file"))kt=Z;else{Lt(Z);return}}}Lt(kt)}):mt=He.from_pretrained(Y,ze),nt[Ze]=mt,at.push(mt)}await Promise.all(at);for(const[Ze,He]of Object.entries(nt))nt[Ze]=await He;return nt}},"./src/processors.js":(ae,L,T)=>{T.r(L),T.d(L,{ASTFeatureExtractor:()=>Me,AutoProcessor:()=>sr,BeitFeatureExtractor:()=>ze,BitImageProcessor:()=>$e,CLIPFeatureExtractor:()=>je,CLIPImageProcessor:()=>De,ChineseCLIPFeatureExtractor:()=>ft,ClapFeatureExtractor:()=>it,ConvNextFeatureExtractor:()=>gt,ConvNextImageProcessor:()=>Ee,DPTFeatureExtractor:()=>I,DPTImageProcessor:()=>be,DeiTFeatureExtractor:()=>Y,DetrFeatureExtractor:()=>He,DonutFeatureExtractor:()=>nt,DonutImageProcessor:()=>at,EfficientNetImageProcessor:()=>Pe,FeatureExtractor:()=>te,Florence2Processor:()=>Ge,GLPNFeatureExtractor:()=>Ae,ImageFeatureExtractor:()=>ee,MaskFormerFeatureExtractor:()=>mt,MobileNetV1FeatureExtractor:()=>Qe,MobileNetV2FeatureExtractor:()=>_t,MobileNetV3FeatureExtractor:()=>ce,MobileNetV4FeatureExtractor:()=>Ue,MobileViTFeatureExtractor:()=>ct,MobileViTImageProcessor:()=>Ve,NougatImageProcessor:()=>Ze,OwlViTFeatureExtractor:()=>Mt,OwlViTProcessor:()=>ke,Owlv2ImageProcessor:()=>Et,Processor:()=>yt,PvtImageProcessor:()=>q,PyAnnoteFeatureExtractor:()=>et,PyAnnoteProcessor:()=>V,RTDetrImageProcessor:()=>tt,SamImageProcessor:()=>Lt,SamProcessor:()=>E,SapiensFeatureExtractor:()=>G,SeamlessM4TFeatureExtractor:()=>ue,SegformerFeatureExtractor:()=>B,SiglipImageProcessor:()=>dt,SpeechT5FeatureExtractor:()=>ot,SpeechT5Processor:()=>me,Swin2SRImageProcessor:()=>kt,ViTFeatureExtractor:()=>H,ViTImageProcessor:()=>we,VitMatteImageProcessor:()=>$,Wav2Vec2FeatureExtractor:()=>z,Wav2Vec2ProcessorWithLM:()=>m,WeSpeakerFeatureExtractor:()=>At,WhisperFeatureExtractor:()=>Z,WhisperProcessor:()=>c,YolosFeatureExtractor:()=>wt});var C=T("./src/utils/generic.js"),J=T("./src/utils/core.js"),ne=T("./src/utils/hub.js"),fe=T("./src/utils/maths.js"),Te=T("./src/utils/tensor.js");T("./src/utils/image.js");var R=T("./src/utils/audio.js");function O([Je,N,ye,Se]){return[Je-ye/2,N-Se/2,Je+ye/2,N+Se/2]}function M(Je,N=.5,ye=null,Se=!1){const Be=Je.logits,Ke=Je.pred_boxes,[pt,Ct,Tt]=Be.dims;if(ye!==null&&ye.length!==pt)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Ft=[];for(let xt=0;xt<pt;++xt){let Ut=ye!==null?ye[xt]:null,Wt={boxes:[],classes:[],scores:[]},Nt=Be[xt],Le=Ke[xt];for(let Re=0;Re<Ct;++Re){let vt=Nt[Re],Ht=[],ar;if(Se){ar=vt.sigmoid().data;for(let Or=0;Or<ar.length;++Or)ar[Or]>N&&Ht.push(Or)}else{let Or=(0,fe.max)(vt.data)[1];if(Or===Tt-1||(ar=(0,fe.softmax)(vt.data),ar[Or]<N))continue;Ht.push(Or)}for(const Or of Ht){let jr=Le[Re].data;jr=O(jr),Ut!==null&&(jr=jr.map((Er,Dr)=>Er*Ut[(Dr+1)%2])),Wt.boxes.push(jr),Wt.classes.push(Or),Wt.scores.push(ar[Or])}}Ft.push(Wt)}return Ft}function U(Je,N=null){const ye=Je.logits,Se=ye.dims[0];if(N!==null&&N.length!==Se)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const Be=[];for(let Ke=0;Ke<Se;++Ke){const pt=N!==null?N[Ke]:null;let Ct=ye[Ke];pt!==null&&(Ct=(0,Te.interpolate)(Ct,pt,"bilinear",!1));const[Tt,Ft]=pt??Ct.dims.slice(-2),xt=new Te.Tensor("int32",new Int32Array(Tt*Ft),[Tt,Ft]),Ut=Ct[0].data,Wt=xt.data;for(let Re=1;Re<Ct.dims[0];++Re){const vt=Ct[Re].data;for(let Ht=0;Ht<vt.length;++Ht)vt[Ht]>Ut[Ht]&&(Ut[Ht]=vt[Ht],Wt[Ht]=Re)}const Nt=new Array(Ct.dims[0]);for(let Re=0;Re<Wt.length;++Re){const vt=Wt[Re];Nt[vt]=vt}const Le=Nt.filter(Re=>Re!==void 0);Be.push({segmentation:xt,labels:Le})}return Be}function X(Je,N,ye,Se){const Be=[],Ke=[],pt=[];for(let Ct=0;Ct<Je.dims[0];++Ct){const Tt=Je[Ct],Ft=N[Ct],xt=(0,fe.max)(Tt.data)[1];if(xt===Se)continue;const Wt=(0,fe.softmax)(Tt.data)[xt];Wt>ye&&(Be.push(Ft),Ke.push(Wt),pt.push(xt))}return[Be,Ke,pt]}function le(Je,N,ye,Se=.5,Be=.8){const Ke=[];let pt=0,Ct=0;const Tt=N[ye].data;for(let xt=0;xt<Je.length;++xt)Je[xt]===ye&&(Ke.push(xt),++pt),Tt[xt]>=Se&&++Ct;let Ft=pt>0&&Ct>0;return Ft&&(Ft=pt/Ct>Be),[Ft,Ke]}function Ce(Je,N,ye,Se,Be,Ke=null,pt=null){const[Ct,Tt]=pt??Je[0].dims,Ft=new Te.Tensor("int32",new Int32Array(Ct*Tt),[Ct,Tt]),xt=[];if(pt!==null)for(let Re=0;Re<Je.length;++Re)Je[Re]=(0,Te.interpolate)(Je[Re],pt,"bilinear",!1);const Ut=new Int32Array(Je[0].data.length),Wt=new Float32Array(Je[0].data.length);for(let Re=0;Re<Je.length;++Re){let vt=N[Re];const Ht=Je[Re].data;for(let ar=0;ar<Ht.length;++ar)Ht[ar]*=vt,Ht[ar]>Wt[ar]&&(Ut[ar]=Re,Wt[ar]=Ht[ar])}let Nt=0;const Le=Ft.data;for(let Re=0;Re<ye.length;++Re){const vt=ye[Re],[Ht,ar]=le(Ut,Je,Re,Se,Be);if(Ht){++Nt;for(const Or of ar)Le[Or]=Nt;xt.push({id:Nt,label_id:vt,score:N[Re]})}}return[Ft,xt]}function ve(Je,N=.5,ye=.5,Se=.8,Be=null,Ke=null){Be===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),Be=new Set);const pt=Je.class_queries_logits??Je.logits,Tt=(Je.masks_queries_logits??Je.pred_masks).sigmoid();let[Ft,xt,Ut]=pt.dims;if(Ut-=1,Ke!==null&&Ke.length!==Ft)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Wt=[];for(let Nt=0;Nt<Ft;++Nt){let Le=Ke!==null?Ke[Nt]:null,Re=pt[Nt],vt=Tt[Nt],[Ht,ar,Or]=X(Re,vt,N,Ut);if(Or.length===0){let[Dr,Ar]=Le??vt.dims.slice(-2),Dn=new Te.Tensor("int32",new Int32Array(Dr*Ar).fill(-1),[Dr,Ar]);Wt.push({segmentation:Dn,segments_info:[]});continue}let[jr,Er]=Ce(Ht,ar,Or,ye,Se,Be,Le);Wt.push({segmentation:jr,segments_info:Er})}return Wt}function j(Je,N){if(!(Je instanceof Float32Array||Je instanceof Float64Array))throw new Error(`${N} expects input to be a Float32Array or a Float64Array, but got ${Je?.constructor?.name??typeof Je} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}function se(Je,N,ye=0,Se=null){const Be=Je/N;let Ke=(0,fe.bankers_round)(Be)*N;return Se!==null&&Ke>Se&&(Ke=Math.floor(Be)*N),Ke<ye&&(Ke=Math.ceil(Be)*N),Ke}function xe([Je,N],ye){return[Math.max(Math.floor(Je/ye),1)*ye,Math.max(Math.floor(N/ye),1)*ye]}class te extends C.Callable{constructor(N){super(),this.config=N}}class ee extends te{constructor(N){super(N),this.image_mean=this.config.image_mean??this.config.mean,this.image_std=this.config.image_std??this.config.std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.do_thumbnail=this.config.do_thumbnail,this.size=this.config.size,this.size_divisibility=this.config.size_divisibility??this.config.size_divisor,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.do_crop_margin=this.config.do_crop_margin,this.pad_size=this.config.pad_size,this.do_pad=this.config.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=this.config.do_flip_channel_order??!1}async thumbnail(N,ye,Se=2){const Be=N.height,Ke=N.width,pt=ye.height,Ct=ye.width;let Tt=Math.min(Be,pt),Ft=Math.min(Ke,Ct);return Tt===Be&&Ft===Ke?N:(Be>Ke?Ft=Math.floor(Ke*Tt/Be):Ke>Be&&(Tt=Math.floor(Be*Ft/Ke)),await N.resize(Ft,Tt,{resample:Se}))}async crop_margin(N,ye=200){const Se=N.clone().grayscale(),Be=(0,fe.min)(Se.data)[0],pt=(0,fe.max)(Se.data)[0]-Be;if(pt===0)return N;const Ct=ye/255;let Tt=Se.width,Ft=Se.height,xt=0,Ut=0;const Wt=Se.data;for(let Nt=0;Nt<Se.height;++Nt){const Le=Nt*Se.width;for(let Re=0;Re<Se.width;++Re)(Wt[Le+Re]-Be)/pt<Ct&&(Tt=Math.min(Tt,Re),Ft=Math.min(Ft,Nt),xt=Math.max(xt,Re),Ut=Math.max(Ut,Nt))}return N=await N.crop([Tt,Ft,xt,Ut]),N}pad_image(N,ye,Se,{mode:Be="constant",center:Ke=!1,constant_values:pt=0}={}){const[Ct,Tt,Ft]=ye;let xt,Ut;if(typeof Se=="number"?(xt=Se,Ut=Se):(xt=Se.width,Ut=Se.height),xt!==Tt||Ut!==Ct){const Wt=new Float32Array(xt*Ut*Ft);if(Array.isArray(pt))for(let Re=0;Re<Wt.length;++Re)Wt[Re]=pt[Re%Ft];else pt!==0&&Wt.fill(pt);const[Nt,Le]=Ke?[Math.floor((xt-Tt)/2),Math.floor((Ut-Ct)/2)]:[0,0];for(let Re=0;Re<Ct;++Re){const vt=(Re+Le)*xt,Ht=Re*Tt;for(let ar=0;ar<Tt;++ar){const Or=(vt+ar+Nt)*Ft,jr=(Ht+ar)*Ft;for(let Er=0;Er<Ft;++Er)Wt[Or+Er]=N[jr+Er]}}if(Be==="symmetric"){if(Ke)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const Re=Ct-1,vt=Tt-1;for(let Ht=0;Ht<Ut;++Ht){const ar=Ht*xt,Or=(0,J.calculateReflectOffset)(Ht,Re)*Tt;for(let jr=0;jr<xt;++jr){if(Ht<Ct&&jr<Tt)continue;const Er=(ar+jr)*Ft,Dr=(Or+(0,J.calculateReflectOffset)(jr,vt))*Ft;for(let Ar=0;Ar<Ft;++Ar)Wt[Er+Ar]=N[Dr+Ar]}}}N=Wt,ye=[Ut,xt,Ft]}return[N,ye]}rescale(N){for(let ye=0;ye<N.length;++ye)N[ye]=this.rescale_factor*N[ye]}get_resize_output_image_size(N,ye){const[Se,Be]=N.size;let Ke,pt;if(this.do_thumbnail){const{height:Ct,width:Tt}=ye;Ke=Math.min(Ct,Tt)}else Number.isInteger(ye)?(Ke=ye,pt=this.config.max_size??Ke):ye!==void 0&&(Ke=ye.shortest_edge,pt=ye.longest_edge);if(Ke!==void 0||pt!==void 0){const Ct=Ke===void 0?1:Math.max(Ke/Se,Ke/Be),Tt=Se*Ct,Ft=Be*Ct,xt=pt===void 0?1:Math.min(pt/Tt,pt/Ft);let Ut=Math.floor(Number((Tt*xt).toFixed(2))),Wt=Math.floor(Number((Ft*xt).toFixed(2)));return this.size_divisibility!==void 0&&([Ut,Wt]=xe([Ut,Wt],this.size_divisibility)),[Ut,Wt]}else if(ye!==void 0&&ye.width!==void 0&&ye.height!==void 0){let Ct=ye.width,Tt=ye.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Ft=Tt/Be,xt=Ct/Se;Math.abs(1-xt)<Math.abs(1-Ft)?Ft=xt:xt=Ft,Tt=se(Ft*Be,this.config.ensure_multiple_of),Ct=se(xt*Se,this.config.ensure_multiple_of)}return[Ct,Tt]}else{if(this.size_divisibility!==void 0)return xe([Se,Be],this.size_divisibility);throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(ye)}`)}}async resize(N){const[ye,Se]=this.get_resize_output_image_size(N,this.size);return await N.resize(ye,Se,{resample:this.resample})}async preprocess(N,{do_normalize:ye=null,do_pad:Se=null,do_convert_rgb:Be=null,do_convert_grayscale:Ke=null,do_flip_channel_order:pt=null}={}){this.do_crop_margin&&(N=await this.crop_margin(N));const[Ct,Tt]=N.size;if(Be??this.do_convert_rgb?N=N.rgb():Ke&&(N=N.grayscale()),this.do_resize&&(N=await this.resize(N)),this.do_thumbnail&&(N=await this.thumbnail(N,this.size,this.resample)),this.do_center_crop){let Nt,Le;Number.isInteger(this.crop_size)?(Nt=this.crop_size,Le=this.crop_size):(Nt=this.crop_size.width,Le=this.crop_size.height),N=await N.center_crop(Nt,Le)}const Ft=[N.height,N.width];let xt=Float32Array.from(N.data),Ut=[N.height,N.width,N.channels];if(this.do_rescale&&this.rescale(xt),ye??this.do_normalize){let Nt=this.image_mean;Array.isArray(this.image_mean)||(Nt=new Array(N.channels).fill(Nt));let Le=this.image_std;if(Array.isArray(this.image_std)||(Le=new Array(N.channels).fill(Nt)),Nt.length!==N.channels||Le.length!==N.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${Nt.length}) and \`image_std\` (${Le.length}) must match the number of channels in the image (${N.channels}).`);for(let Re=0;Re<xt.length;Re+=N.channels)for(let vt=0;vt<N.channels;++vt)xt[Re+vt]=(xt[Re+vt]-Nt[vt])/Le[vt]}if(Se??this.do_pad){if(this.pad_size)[xt,Ut]=this.pad_image(xt,[N.height,N.width,N.channels],this.pad_size);else if(this.size_divisibility){const[Nt,Le]=xe([Ut[1],Ut[0]],this.size_divisibility);[xt,Ut]=this.pad_image(xt,Ut,{width:Nt,height:Le})}}if(pt??this.do_flip_channel_order){if(Ut[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let Nt=0;Nt<xt.length;Nt+=3){const Le=xt[Nt];xt[Nt]=xt[Nt+2],xt[Nt+2]=Le}}const Wt=new Te.Tensor("float32",xt,Ut).permute(2,0,1);return{original_size:[Tt,Ct],reshaped_input_size:Ft,pixel_values:Wt}}async _call(N,...ye){Array.isArray(N)||(N=[N]);const Se=await Promise.all(N.map(Ke=>this.preprocess(Ke)));return{pixel_values:(0,Te.stack)(Se.map(Ke=>Ke.pixel_values),0),original_sizes:Se.map(Ke=>Ke.original_size),reshaped_input_sizes:Se.map(Ke=>Ke.reshaped_input_size)}}}class G extends ee{post_process_semantic_segmentation(...N){return U(...N)}}class B extends ee{post_process_semantic_segmentation(...N){return U(...N)}}class q extends ee{}class I extends ee{}class be extends I{}class $e extends ee{}class Ae extends ee{}class je extends ee{}class De extends je{}class ft extends ee{}class dt extends ee{}class gt extends ee{constructor(N){super(N),this.crop_pct=this.config.crop_pct??224/256}async resize(N){const ye=this.size?.shortest_edge;if(ye===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(ye<384){const Se=Math.floor(ye/this.crop_pct),[Be,Ke]=this.get_resize_output_image_size(N,{shortest_edge:Se});N=await N.resize(Be,Ke,{resample:this.resample}),N=await N.center_crop(ye,ye)}else N=await N.resize(ye,ye,{resample:this.resample});return N}}class Ee extends gt{}class H extends ee{}class we extends ee{}class Pe extends ee{constructor(N){super(N),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(ye=>ye*ye))}}class Qe extends ee{}class _t extends ee{}class ce extends ee{}class Ue extends ee{}class ct extends ee{}class Ve extends ct{}class Mt extends ee{post_process_object_detection(...N){return M(...N)}}class Et extends Mt{}class tt extends ee{post_process_object_detection(...N){return M(...N)}}class Y extends ee{}class ze extends ee{}class nt extends ee{pad_image(N,ye,Se,Be={}){const[Ke,pt,Ct]=ye;let Tt=this.image_mean;Array.isArray(this.image_mean)||(Tt=new Array(Ct).fill(Tt));let Ft=this.image_std;Array.isArray(Ft)||(Ft=new Array(Ct).fill(Tt));const xt=Tt.map((Ut,Wt)=>-Ut/Ft[Wt]);return super.pad_image(N,ye,Se,{center:!0,constant_values:xt,...Be})}}class at extends nt{}class Ze extends nt{}class He extends ee{async _call(N){const ye=await super._call(N),Se=[ye.pixel_values.dims[0],64,64],Be=(0,Te.full)(Se,1n);return{...ye,pixel_mask:Be}}post_process_object_detection(...N){return M(...N)}post_process_panoptic_segmentation(...N){return ve(...N)}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class mt extends ee{post_process_panoptic_segmentation(...N){return ve(...N)}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class wt extends ee{post_process_object_detection(...N){return M(...N)}}class Lt extends ee{reshape_input_points(N,ye,Se,Be=!1){N=structuredClone(N);let Ke=(0,J.calculateDimensions)(N);if(Ke.length===3)Be||(Ke=[1,...Ke]),N=[N];else if(Ke.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let pt=0;pt<N.length;++pt){let Ct=ye[pt],Tt=Se[pt],Ft=[Tt[0]/Ct[0],Tt[1]/Ct[1]];for(let xt=0;xt<N[pt].length;++xt)for(let Ut=0;Ut<N[pt][xt].length;++Ut)for(let Wt=0;Wt<N[pt][xt][Ut].length;++Wt)N[pt][xt][Ut][Wt]*=Ft[Wt%2]}return new Te.Tensor("float32",Float32Array.from(N.flat(1/0)),Ke)}add_input_labels(N,ye){let Se=(0,J.calculateDimensions)(N);if(Se.length===2)Se=[1,...Se],N=[N];else if(Se.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(Se.some((Be,Ke)=>Be!==ye.dims[Ke]))throw Error(`The first ${Se.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new Te.Tensor("int64",N.flat(1/0).map(BigInt),Se)}async _call(N,{input_points:ye=null,input_labels:Se=null,input_boxes:Be=null}={}){const Ke=await super._call(N);if(ye&&(Ke.input_points=this.reshape_input_points(ye,Ke.original_sizes,Ke.reshaped_input_sizes)),Se){if(!Ke.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");Ke.input_labels=this.add_input_labels(Se,Ke.input_points)}return Be&&(Ke.input_boxes=this.reshape_input_points(Be,Ke.original_sizes,Ke.reshaped_input_sizes,!0)),Ke}async post_process_masks(N,ye,Se,{mask_threshold:Be=0,binarize:Ke=!0,pad_size:pt=null}={}){const Ct=[];pt=pt??this.pad_size;const Tt=[pt.height,pt.width];for(let Ft=0;Ft<ye.length;++Ft){const xt=ye[Ft],Ut=Se[Ft];let Wt=await(0,Te.interpolate_4d)(N[Ft],{mode:"bilinear",size:Tt});if(Wt=Wt.slice(null,null,[0,Ut[0]],[0,Ut[1]]),Wt=await(0,Te.interpolate_4d)(Wt,{mode:"bilinear",size:xt}),Ke){const Nt=Wt.data,Le=new Uint8Array(Nt.length);for(let Re=0;Re<Nt.length;++Re)Nt[Re]>Be&&(Le[Re]=1);Wt=new Te.Tensor("bool",Le,Wt.dims)}Ct.push(Wt)}return Ct}generate_crop_boxes(N,ye,{crop_n_layers:Se=0,overlap_ratio:Be=512/1500,points_per_crop:Ke=32,crop_n_points_downscale_factor:pt=1}={}){}}class kt extends ee{pad_image(N,ye,Se,Be={}){const[Ke,pt,Ct]=ye;return super.pad_image(N,ye,{width:pt+(Se-pt%Se)%Se,height:Ke+(Se-Ke%Se)%Se},{mode:"symmetric",center:!1,constant_values:-1,...Be})}}class $ extends ee{async _call(N,ye){Array.isArray(N)||(N=[N]),Array.isArray(ye)||(ye=[ye]);const Se=await Promise.all(N.map(pt=>this.preprocess(pt))),Be=await Promise.all(ye.map(pt=>this.preprocess(pt,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,Te.stack)(Se.map((pt,Ct)=>(0,Te.cat)([pt.pixel_values,Be[Ct].pixel_values],0)),0),original_sizes:Se.map(pt=>pt.original_size),reshaped_input_sizes:Se.map(pt=>pt.reshaped_input_size)}}}class Z extends te{constructor(N){super(N),this.config.mel_filters??=(0,R.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,R.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(N){const ye=await(0,R.spectrogram)(N,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),Se=ye.data,Be=(0,fe.max)(Se)[0];for(let Ke=0;Ke<Se.length;++Ke)Se[Ke]=(Math.max(Se[Ke],Be-8)+4)/4;return ye}async _call(N){j(N,"WhisperFeatureExtractor");let ye;return N.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),ye=N.slice(0,this.config.n_samples)):(ye=new Float32Array(this.config.n_samples),ye.set(N)),{input_features:(await this._extract_fbank_features(ye)).unsqueeze_(0)}}}class z extends te{_zero_mean_unit_var_norm(N){const Se=N.reduce((Ke,pt)=>Ke+pt,0)/N.length,Be=N.reduce((Ke,pt)=>Ke+(pt-Se)**2,0)/N.length;return N.map(Ke=>(Ke-Se)/Math.sqrt(Be+1e-7))}async _call(N){j(N,"Wav2Vec2FeatureExtractor"),N instanceof Float64Array&&(N=new Float32Array(N));let ye=N;this.config.do_normalize&&(ye=this._zero_mean_unit_var_norm(ye));const Se=[1,ye.length];return{input_values:new Te.Tensor("float32",ye,Se),attention_mask:new Te.Tensor("int64",new BigInt64Array(ye.length).fill(1n),Se)}}}class ue extends te{constructor(N){super(N);const ye=this.config.sampling_rate,Se=(0,R.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(ye/2),ye,null,"kaldi",!0);for(let Be=0;Be<Se.length;++Be)Se[Be].push(0);this.mel_filters=Se,this.window=(0,R.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(N,ye){return N=N.map(Se=>Se*32768),(0,R.spectrogram)(N,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:ye,transpose:!0})}async _call(N,{padding:ye=!0,pad_to_multiple_of:Se=2,do_normalize_per_mel_bins:Be=!0,return_attention_mask:Ke=!0}={}){j(N,"SeamlessM4TFeatureExtractor");let pt=await this._extract_fbank_features(N,this.config.max_length);if(Be){const[Le,Re]=pt.dims,vt=pt.data;for(let Ht=0;Ht<Re;++Ht){let ar=0;for(let Dr=0;Dr<Le;++Dr)ar+=vt[Dr*Re+Ht];const Or=ar/Le;let jr=0;for(let Dr=0;Dr<Le;++Dr)jr+=(vt[Dr*Re+Ht]-Or)**2;jr/=Le-1;const Er=Math.sqrt(jr+1e-7);for(let Dr=0;Dr<Le;++Dr){const Ar=Dr*Re+Ht;vt[Ar]=(vt[Ar]-Or)/Er}}}let Ct;if(ye){const[Le,Re]=pt.dims,vt=pt.data,Ht=Le%Se;if(Ht>0){const ar=new Float32Array(Re*(Le+Ht));ar.set(vt),ar.fill(this.config.padding_value,vt.length);const Or=Le+Ht;pt=new Te.Tensor(pt.type,ar,[Or,Re]),Ke&&(Ct=new Te.Tensor("int64",new BigInt64Array(Or),[1,Or]),Ct.data.fill(1n,0,Le))}}const[Tt,Ft]=pt.dims,xt=this.config.stride;if(Tt%xt!==0)throw new Error(`The number of frames (${Tt}) must be a multiple of the stride (${xt}).`);const Wt=pt.view(1,Math.floor(Tt/xt),Ft*xt),Nt={input_features:Wt};if(Ke){const Le=Wt.dims[1],Re=new BigInt64Array(Le);if(Ct){const vt=Ct.data;for(let Ht=1,ar=0;Ht<Tt;Ht+=xt,++ar)Re[ar]=vt[Ht]}else Re.fill(1n);Nt.attention_mask=new Te.Tensor("int64",Re,[1,Le])}return Nt}}class Me extends te{constructor(N){super(N);const ye=this.config.sampling_rate,Se=(0,R.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(ye/2),ye,null,"kaldi",!0);for(let Be=0;Be<Se.length;++Be)Se[Be].push(0);this.mel_filters=Se,this.window=(0,R.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(N,ye){return(0,R.spectrogram)(N,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:ye,transpose:!0})}async _call(N){j(N,"ASTFeatureExtractor");const ye=await this._extract_fbank_features(N,this.config.max_length);if(this.config.do_normalize){const Se=this.std*2,Be=ye.data;for(let Ke=0;Ke<Be.length;++Ke)Be[Ke]=(Be[Ke]-this.mean)/Se}return{input_values:ye.unsqueeze_(0)}}}class it extends te{constructor(N){super(N),this.mel_filters=(0,R.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,R.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,R.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(N,ye,Se,Be){let Ke;const pt=N.length-ye;if(pt>0)if(Se==="rand_trunc"){const Ct=Math.floor(Math.random()*(pt+1));N=N.subarray(Ct,Ct+ye),Ke=await this._extract_fbank_features(N,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${Se}" not implemented`);else{if(pt<0){let Ct=new Float64Array(ye);if(Ct.set(N),Be==="repeat")for(let Tt=N.length;Tt<ye;Tt+=N.length)Ct.set(N.subarray(0,Math.min(N.length,ye-Tt)),Tt);else if(Be==="repeatpad")for(let Tt=N.length;Tt<-pt;Tt+=N.length)Ct.set(N,Tt);N=Ct}if(Se==="fusion")throw new Error(`Truncation strategy "${Se}" not implemented`);Ke=await this._extract_fbank_features(N,this.mel_filters_slaney,this.config.nb_max_samples)}return Ke.unsqueeze_(0)}async _extract_fbank_features(N,ye,Se=null){return(0,R.spectrogram)(N,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:ye,log_mel:"dB",max_num_frames:Se,do_pad:!1,transpose:!0})}async _call(N,{max_length:ye=null}={}){return j(N,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(N,ye??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}class et extends te{async _call(N){j(N,"PyAnnoteFeatureExtractor"),N instanceof Float64Array&&(N=new Float32Array(N));const ye=[1,1,N.length];return{input_values:new Te.Tensor("float32",N,ye)}}samples_to_frames(N){return(N-this.config.offset)/this.config.step}post_process_speaker_diarization(N,ye){const Se=ye/this.samples_to_frames(ye)/this.config.sampling_rate,Be=[];for(const Ke of N.tolist()){const pt=[];let Ct=-1;for(let Tt=0;Tt<Ke.length;++Tt){const Ft=(0,fe.softmax)(Ke[Tt]),[xt,Ut]=(0,fe.max)(Ft),[Wt,Nt]=[Tt,Tt+1];Ut!==Ct?(Ct=Ut,pt.push({id:Ut,start:Wt,end:Nt,score:xt})):(pt.at(-1).end=Nt,pt.at(-1).score+=xt)}Be.push(pt.map(({id:Tt,start:Ft,end:xt,score:Ut})=>({id:Tt,start:Ft*Se,end:xt*Se,confidence:Ut/(xt-Ft)})))}return Be}}class At extends te{constructor(N){super(N);const ye=this.config.sampling_rate,Se=(0,R.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(ye/2),ye,null,"kaldi",!0);for(let Be=0;Be<Se.length;++Be)Se[Be].push(0);this.mel_filters=Se,this.window=(0,R.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(N){return N=N.map(ye=>ye*32768),(0,R.spectrogram)(N,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(N){j(N,"WeSpeakerFeatureExtractor");const ye=(await this._extract_fbank_features(N)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const Se=ye.mean(1).data,Be=ye.data,[Ke,pt,Ct]=ye.dims;for(let Tt=0;Tt<Ke;++Tt){const Ft=Tt*pt*Ct,xt=Tt*Ct;for(let Ut=0;Ut<pt;++Ut){const Wt=Ft+Ut*Ct;for(let Nt=0;Nt<Ct;++Nt)Be[Wt+Nt]-=Se[xt+Nt]}}}return{input_features:ye}}}class ot extends te{}class yt extends C.Callable{constructor(N){super(),this.feature_extractor=N}async _call(N,...ye){return await this.feature_extractor(N,...ye)}}class E extends yt{async _call(...N){return await this.feature_extractor(...N)}post_process_masks(...N){return this.feature_extractor.post_process_masks(...N)}reshape_input_points(...N){return this.feature_extractor.reshape_input_points(...N)}}class c extends yt{async _call(N){return await this.feature_extractor(N)}}class m extends yt{async _call(N){return await this.feature_extractor(N)}}class V extends yt{async _call(N){return await this.feature_extractor(N)}post_process_speaker_diarization(...N){return this.feature_extractor.post_process_speaker_diarization(...N)}}class me extends yt{async _call(N){return await this.feature_extractor(N)}}class ke extends yt{}class Ge extends yt{constructor(N){super(N);const{tasks_answer_post_processing_type:ye,task_prompts_without_inputs:Se,task_prompts_with_input:Be}=N.config;this.tasks_answer_post_processing_type=new Map(Object.entries(ye??{})),this.task_prompts_without_inputs=new Map(Object.entries(Se??{})),this.task_prompts_with_input=new Map(Object.entries(Be??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(N){typeof N=="string"&&(N=[N]);const ye=[];for(const Se of N)if(this.task_prompts_without_inputs.has(Se))ye.push(this.task_prompts_without_inputs.get(Se));else{for(const[Be,Ke]of this.task_prompts_with_input)if(Se.includes(Be)){ye.push(Ke.replaceAll("{input}",Se).replaceAll(Be,""));break}ye.length!==N.length&&ye.push(Se)}return ye}post_process_generation(N,ye,Se){const Be=this.tasks_answer_post_processing_type.get(ye)??"pure_text";N=N.replaceAll("<s>","").replaceAll("</s>","");let Ke;switch(Be){case"pure_text":Ke=N;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const pt=Be==="ocr"?"quad_boxes":"bboxes",Ct=N.matchAll(this.regexes[pt]),Tt=[],Ft=[];for(const[xt,Ut,...Wt]of Ct)Tt.push(Ut?Ut.trim():Tt.at(-1)??""),Ft.push(Wt.map((Nt,Le)=>(Number(Nt)+.5)/this.size_per_bin*Se[Le%2]));Ke={labels:Tt,[pt]:Ft};break;default:throw new Error(`Task "${ye}" (of type "${Be}") not yet implemented.`)}return{[ye]:Ke}}}class sr{static FEATURE_EXTRACTOR_CLASS_MAPPING={ImageFeatureExtractor:ee,WhisperFeatureExtractor:Z,ViTFeatureExtractor:H,MobileViTFeatureExtractor:ct,MobileViTImageProcessor:Ve,MobileNetV1FeatureExtractor:Qe,MobileNetV2FeatureExtractor:_t,MobileNetV3FeatureExtractor:ce,MobileNetV4FeatureExtractor:Ue,OwlViTFeatureExtractor:Mt,Owlv2ImageProcessor:Et,CLIPFeatureExtractor:je,CLIPImageProcessor:De,Florence2Processor:Ge,ChineseCLIPFeatureExtractor:ft,SiglipImageProcessor:dt,ConvNextFeatureExtractor:gt,ConvNextImageProcessor:Ee,SegformerFeatureExtractor:B,SapiensFeatureExtractor:G,BitImageProcessor:$e,DPTImageProcessor:be,DPTFeatureExtractor:I,PvtImageProcessor:q,GLPNFeatureExtractor:Ae,BeitFeatureExtractor:ze,DeiTFeatureExtractor:Y,DetrFeatureExtractor:He,RTDetrImageProcessor:tt,MaskFormerFeatureExtractor:mt,YolosFeatureExtractor:wt,DonutFeatureExtractor:nt,DonutImageProcessor:at,NougatImageProcessor:Ze,EfficientNetImageProcessor:Pe,ViTImageProcessor:we,VitMatteImageProcessor:$,SamImageProcessor:Lt,Swin2SRImageProcessor:kt,Wav2Vec2FeatureExtractor:z,SeamlessM4TFeatureExtractor:ue,SpeechT5FeatureExtractor:ot,ASTFeatureExtractor:Me,ClapFeatureExtractor:it,PyAnnoteFeatureExtractor:et,WeSpeakerFeatureExtractor:At};static PROCESSOR_CLASS_MAPPING={WhisperProcessor:c,Wav2Vec2ProcessorWithLM:m,PyAnnoteProcessor:V,SamProcessor:E,SpeechT5Processor:me,OwlViTProcessor:ke,Florence2Processor:Ge};static async from_pretrained(N,{progress_callback:ye=null,config:Se=null,cache_dir:Be=null,local_files_only:Ke=!1,revision:pt="main"}={}){let Ct=Se??await(0,ne.getModelJSON)(N,"preprocessor_config.json",!0,{progress_callback:ye,config:Se,cache_dir:Be,local_files_only:Ke,revision:pt}),Tt=Ct.feature_extractor_type??Ct.image_processor_type,Ft=this.FEATURE_EXTRACTOR_CLASS_MAPPING[Tt];if(!Ft)if(Ct.size!==void 0)console.warn(`Feature extractor type "${Tt}" not found, assuming ImageFeatureExtractor due to size parameter in config.`),Ft=ee;else throw new Error(`Unknown Feature Extractor type: ${Tt}`);let xt=this.PROCESSOR_CLASS_MAPPING[Ct.processor_class]??yt,Ut=new Ft(Ct);return new xt(Ut)}}},"./src/tokenizers.js":(ae,L,T)=>{T.r(L),T.d(L,{AlbertTokenizer:()=>pt,AutoTokenizer:()=>ns,BartTokenizer:()=>jr,BertTokenizer:()=>Ke,BlenderbotSmallTokenizer:()=>zi,BlenderbotTokenizer:()=>Bi,BloomTokenizer:()=>Dn,CLIPTokenizer:()=>wi,CamembertTokenizer:()=>Re,CodeGenTokenizer:()=>gi,CodeLlamaTokenizer:()=>ki,CohereTokenizer:()=>ni,ConvBertTokenizer:()=>Wt,DebertaTokenizer:()=>Ft,DebertaV2Tokenizer:()=>xt,DistilBertTokenizer:()=>Le,ElectraTokenizer:()=>Ht,EsmTokenizer:()=>Fi,FalconTokenizer:()=>Ai,GPT2Tokenizer:()=>Or,GPTNeoXTokenizer:()=>Ii,GemmaTokenizer:()=>ti,Grok1Tokenizer:()=>Qn,HerbertTokenizer:()=>Ut,LlamaTokenizer:()=>mi,M2M100Tokenizer:()=>_i,MBart50Tokenizer:()=>Dr,MBartTokenizer:()=>Er,MPNetTokenizer:()=>Pi,MarianTokenizer:()=>rr,MobileBertTokenizer:()=>Ct,NllbTokenizer:()=>Ln,NougatTokenizer:()=>Di,PreTrainedTokenizer:()=>Be,Qwen2Tokenizer:()=>Oi,RoFormerTokenizer:()=>Nt,RobertaTokenizer:()=>Ar,SiglipTokenizer:()=>yi,SpeechT5Tokenizer:()=>bi,SqueezeBertTokenizer:()=>Tt,T5Tokenizer:()=>ar,TokenizerModel:()=>Ae,VitsTokenizer:()=>Li,Wav2Vec2CTCTokenizer:()=>ri,WhisperTokenizer:()=>On,XLMRobertaTokenizer:()=>Xn,XLMTokenizer:()=>vt,is_chinese_char:()=>te});var C=T("./src/utils/generic.js"),J=T("./src/utils/core.js"),ne=T("./src/utils/hub.js"),fe=T("./src/utils/maths.js"),Te=T("./src/utils/tensor.js"),R=T("./src/utils/data-structures.js"),O=T("./node_modules/@huggingface/jinja/dist/index.js"),M=T("./src/models/whisper/common_whisper.js");T("./src/utils/constants.js");async function U(_e,_){const W=await Promise.all([(0,ne.getModelJSON)(_e,"tokenizer.json",!0,_),(0,ne.getModelJSON)(_e,"tokenizer_config.json",!0,_)]);return _.legacy!==null&&(W[1].legacy=_.legacy),W}function X(_e,_){const W=[];let oe=0;for(const pe of _e.matchAll(_)){const Oe=pe[0];oe<pe.index&&W.push(_e.slice(oe,pe.index)),Oe.length>0&&W.push(Oe),oe=pe.index+Oe.length}return oe<_e.length&&W.push(_e.slice(oe)),W}function le(_e,_=!0){if(_e.Regex!==void 0){let W=_e.Regex.replace(/\\([#&~])/g,"$1");for(const[oe,pe]of be)W=W.replaceAll(oe,pe);return new RegExp(W,"gu")}else if(_e.String!==void 0){const W=(0,J.escapeRegExp)(_e.String);return new RegExp(_?W:`(${W})`,"gu")}else return console.warn("Unknown pattern type:",_e),null}function Ce(_e){return new Map(Object.entries(_e))}function ve(_e){const _=_e.dims;switch(_.length){case 1:return _e.tolist();case 2:if(_[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return _e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${_.length}.`)}}function j(_e){return _e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function se(_e){return _e.replace(/\p{M}/gu,"")}function xe(_e){return se(_e.toLowerCase())}function te(_e){return _e>=19968&&_e<=40959||_e>=13312&&_e<=19903||_e>=131072&&_e<=173791||_e>=173824&&_e<=177983||_e>=177984&&_e<=178207||_e>=178208&&_e<=183983||_e>=63744&&_e<=64255||_e>=194560&&_e<=195103}function ee(_e,_,W){const oe=[];let pe=0;for(;pe<_e.length;){if(oe.push(_e[pe]),(_.get(_e[pe])??W)!==W){++pe;continue}for(;++pe<_e.length&&(_.get(_e[pe])??W)===W;)_.get(oe.at(-1))!==W&&(oe[oe.length-1]+=_e[pe])}return oe}function G(_e){return _e.match(/\S+/g)||[]}const B="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",q=new RegExp(`^[${B}]+$`,"gu"),I=".,!?…。，、।۔،",be=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${I}])]+`,` ?[^\\s${I}]+`]]);class $e{constructor(_){this.content=_.content,this.id=_.id,this.single_word=_.single_word??!1,this.lstrip=_.lstrip??!1,this.rstrip=_.rstrip??!1,this.special=_.special??!1,this.normalized=_.normalized??null}}class Ae extends C.Callable{constructor(_){super(),this.config=_,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(_,...W){switch(_.type){case"WordPiece":return new je(_);case"Unigram":return new De(_,...W);case"BPE":return new gt(_);default:if(_.vocab)return Array.isArray(_.vocab)?new De(_,...W):new Ee(_,...W);throw new Error(`Unknown TokenizerModel type: ${_.type}`)}}_call(_){return _=this.encode(_),this.fuse_unk&&(_=ee(_,this.tokens_to_ids,this.unk_token_id)),_}encode(_){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(_){return _.map(W=>this.tokens_to_ids.get(W)??this.unk_token_id)}convert_ids_to_tokens(_){return _.map(W=>this.vocab[W]??this.unk_token)}}class je extends Ae{constructor(_){super(_),this.tokens_to_ids=Ce(_.vocab),this.unk_token_id=this.tokens_to_ids.get(_.unk_token),this.unk_token=_.unk_token,this.max_input_chars_per_word=_.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[W,oe]of this.tokens_to_ids)this.vocab[oe]=W}encode(_){const W=[];for(const oe of _){const pe=[...oe];if(pe.length>this.max_input_chars_per_word){W.push(this.unk_token);continue}let Oe=!1,st=0;const Pt=[];for(;st<pe.length;){let zt=pe.length,Dt=null;for(;st<zt;){let $t=pe.slice(st,zt).join("");if(st>0&&($t=this.config.continuing_subword_prefix+$t),this.tokens_to_ids.has($t)){Dt=$t;break}--zt}if(Dt===null){Oe=!0;break}Pt.push(Dt),st=zt}Oe?W.push(this.unk_token):W.push(...Pt)}return W}}class De extends Ae{constructor(_,W){super(_);const oe=_.vocab.length;this.vocab=new Array(oe),this.scores=new Array(oe);for(let pe=0;pe<oe;++pe){const Oe=_.vocab[pe];this.vocab[pe]=Oe[0],this.scores[pe]=Oe[1]}this.unk_token_id=_.unk_id,this.unk_token=this.vocab[_.unk_id],this.tokens_to_ids=new Map(this.vocab.map((pe,Oe)=>[pe,Oe])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=W.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,fe.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new R.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(_){const W=_.chars,oe=1;let pe=0;for(;pe<W.length;){let Oe=!1;const st=W.slice(pe).join(""),Pt=this.trie.commonPrefixSearch(st);for(const zt of Pt){const Dt=this.tokens_to_ids.get(zt),$t=this.scores[Dt],_r=(0,J.len)(zt);_.insert(pe,_r,$t,Dt),!Oe&&_r===oe&&(Oe=!0)}Oe||_.insert(pe,oe,this.unk_score,this.unk_token_id),pe+=oe}}tokenize(_){const W=new R.TokenLattice(_,this.bos_token_id,this.eos_token_id);return this.populateNodes(W),W.tokens()}encode(_){const W=[];for(const oe of _){const pe=this.tokenize(oe);W.push(...pe)}return W}}const ft=(()=>{const _e=[...Array.from({length:94},(pe,Oe)=>Oe+33),...Array.from({length:12},(pe,Oe)=>Oe+161),...Array.from({length:82},(pe,Oe)=>Oe+174)],_=_e.slice();let W=0;for(let pe=0;pe<256;++pe)_e.includes(pe)||(_e.push(pe),_.push(256+W),W+=1);const oe=_.map(pe=>String.fromCharCode(pe));return Object.fromEntries(_e.map((pe,Oe)=>[pe,oe[Oe]]))})(),dt=(0,J.reverseDictionary)(ft);class gt extends Ae{constructor(_){super(_),this.tokens_to_ids=Ce(_.vocab),this.unk_token_id=this.tokens_to_ids.get(_.unk_token),this.unk_token=_.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[oe,pe]of this.tokens_to_ids)this.vocab[pe]=oe;const W=Array.isArray(_.merges[0]);this.merges=W?_.merges:_.merges.map(oe=>oe.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((oe,pe)=>[JSON.stringify(oe),pe])),this.end_of_word_suffix=_.end_of_word_suffix,this.continuing_subword_suffix=_.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(_){if(_.length===0)return[];const W=this.cache.get(_);if(W!==void 0)return W;const oe=Array.from(_);this.end_of_word_suffix&&(oe[oe.length-1]+=this.end_of_word_suffix);let pe=[];if(oe.length>1){const Oe=new R.PriorityQueue((zt,Dt)=>zt.score<Dt.score);let st={token:oe[0],bias:0,prev:null,next:null},Pt=st;for(let zt=1;zt<oe.length;++zt){const Dt={bias:zt/oe.length,token:oe[zt],prev:Pt,next:null};Pt.next=Dt,this._add_node(Oe,Pt),Pt=Dt}for(;!Oe.isEmpty();){const zt=Oe.pop();if(zt.deleted||!zt.next||zt.next.deleted)continue;if(zt.deleted=!0,zt.next.deleted=!0,zt.prev){const $t={...zt.prev};zt.prev.deleted=!0,zt.prev=$t,$t.prev?$t.prev.next=$t:st=$t}const Dt={token:zt.token+zt.next.token,bias:zt.bias,prev:zt.prev,next:zt.next.next};Dt.prev?(Dt.prev.next=Dt,this._add_node(Oe,Dt.prev)):st=Dt,Dt.next&&(Dt.next.prev=Dt,this._add_node(Oe,Dt))}for(let zt=st;zt!==null;zt=zt.next)pe.push(zt.token)}else pe=oe;if(this.continuing_subword_suffix)for(let Oe=0;Oe<pe.length-1;++Oe)pe[Oe]+=this.continuing_subword_suffix;return this.cache.set(_,pe),pe}_add_node(_,W){const oe=this.bpe_ranks.get(JSON.stringify([W.token,W.next.token]));oe!==void 0&&(W.score=oe+W.bias,_.push(W))}encode(_){const W=[];for(const oe of _){if(this.ignore_merges&&this.tokens_to_ids.has(oe)){W.push(oe);continue}const pe=this.bpe(oe);for(const Oe of pe)if(this.tokens_to_ids.has(Oe))W.push(Oe);else if(this.byte_fallback){const st=Array.from(this.text_encoder.encode(Oe)).map(Pt=>`<0x${Pt.toString(16).toUpperCase().padStart(2,"0")}>`);st.every(Pt=>this.tokens_to_ids.has(Pt))?W.push(...st):W.push(this.unk_token)}else W.push(this.unk_token)}return W}}class Ee extends Ae{constructor(_,W){super(_),this.tokens_to_ids=Ce(W.target_lang?_.vocab[W.target_lang]:_.vocab),this.bos_token=W.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=W.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=W.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=W.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[oe,pe]of this.tokens_to_ids)this.vocab[pe]=oe}encode(_){return _}}class H extends C.Callable{constructor(_){super(),this.config=_}static fromConfig(_){if(_===null)return null;switch(_.type){case"BertNormalizer":return new Et(_);case"Precompiled":return new me(_);case"Sequence":return new Mt(_);case"Replace":return new we(_);case"NFC":return new Pe(_);case"NFKC":return new Qe(_);case"NFKD":return new _t(_);case"Strip":return new ce(_);case"StripAccents":return new Ue(_);case"Lowercase":return new ct(_);case"Prepend":return new Ve(_);default:throw new Error(`Unknown Normalizer type: ${_.type}`)}}normalize(_){throw Error("normalize should be implemented in subclass.")}_call(_){return this.normalize(_)}}class we extends H{normalize(_){const W=le(this.config.pattern);return W===null?_:_.replaceAll(W,this.config.content)}}class Pe extends H{normalize(_){return _=_.normalize("NFC"),_}}class Qe extends H{normalize(_){return _=_.normalize("NFKC"),_}}class _t extends H{normalize(_){return _=_.normalize("NFKD"),_}}class ce extends H{normalize(_){return this.config.strip_left&&this.config.strip_right?_=_.trim():(this.config.strip_left&&(_=_.trimStart()),this.config.strip_right&&(_=_.trimEnd())),_}}class Ue extends H{normalize(_){return _=se(_),_}}class ct extends H{normalize(_){return _=_.toLowerCase(),_}}class Ve extends H{normalize(_){return _=this.config.prepend+_,_}}class Mt extends H{constructor(_){super(_),this.normalizers=_.normalizers.map(W=>H.fromConfig(W))}normalize(_){return this.normalizers.reduce((W,oe)=>oe.normalize(W),_)}}class Et extends H{_tokenize_chinese_chars(_){const W=[];for(let oe=0;oe<_.length;++oe){const pe=_[oe],Oe=pe.charCodeAt(0);te(Oe)?(W.push(" "),W.push(pe),W.push(" ")):W.push(pe)}return W.join("")}stripAccents(_){return _.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(_){switch(_){case"	":case`
`:case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(_)}}_clean_text(_){const W=[];for(const oe of _){const pe=oe.charCodeAt(0);pe===0||pe===65533||this._is_control(oe)||(/^\s$/.test(oe)?W.push(" "):W.push(oe))}return W.join("")}normalize(_){return this.config.clean_text&&(_=this._clean_text(_)),this.config.handle_chinese_chars&&(_=this._tokenize_chinese_chars(_)),this.config.lowercase?(_=_.toLowerCase(),this.config.strip_accents!==!1&&(_=this.stripAccents(_))):this.config.strip_accents&&(_=this.stripAccents(_)),_}}class tt extends C.Callable{static fromConfig(_){if(_===null)return null;switch(_.type){case"BertPreTokenizer":return new Y(_);case"Sequence":return new ke(_);case"Whitespace":return new Ge(_);case"WhitespaceSplit":return new sr(_);case"Metaspace":return new m(_);case"ByteLevel":return new ze(_);case"Split":return new nt(_);case"Punctuation":return new at(_);case"Digits":return new Ze(_);case"Replace":return new Je(_);default:throw new Error(`Unknown PreTokenizer type: ${_.type}`)}}pre_tokenize_text(_,W){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(_,W){return(Array.isArray(_)?_.map(oe=>this.pre_tokenize_text(oe,W)):this.pre_tokenize_text(_,W)).flat()}_call(_,W){return this.pre_tokenize(_,W)}}class Y extends tt{constructor(_){super(),this.pattern=new RegExp(`[^\\s${B}]+|[${B}]`,"gu")}pre_tokenize_text(_,W){return _.trim().match(this.pattern)||[]}}class ze extends tt{constructor(_){super(),this.config=_,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=ft,this.text_encoder=new TextEncoder}pre_tokenize_text(_,W){return this.add_prefix_space&&!_.startsWith(" ")&&(_=" "+_),(this.use_regex?_.match(this.pattern)||[]:[_]).map(pe=>Array.from(this.text_encoder.encode(pe),Oe=>this.byte_encoder[Oe]).join(""))}}class nt extends tt{constructor(_){super(),this.config=_,this.pattern=le(this.config.pattern,this.config.invert)}pre_tokenize_text(_,W){return this.pattern===null?[]:this.config.invert?_.match(this.pattern)||[]:X(_,this.pattern)}}class at extends tt{constructor(_){super(),this.config=_,this.pattern=new RegExp(`[^${B}]+|[${B}]+`,"gu")}pre_tokenize_text(_,W){return _.match(this.pattern)||[]}}class Ze extends tt{constructor(_){super(),this.config=_;const W=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(W,"gu")}pre_tokenize_text(_,W){return _.match(this.pattern)||[]}}class He extends C.Callable{constructor(_){super(),this.config=_}static fromConfig(_){if(_===null)return null;switch(_.type){case"TemplateProcessing":return new Lt(_);case"ByteLevel":return new kt(_);case"RobertaProcessing":return new wt(_);case"BertProcessing":return new mt(_);case"Sequence":return new $(_);default:throw new Error(`Unknown PostProcessor type: ${_.type}`)}}post_process(_,...W){throw Error("post_process should be implemented in subclass.")}_call(_,...W){return this.post_process(_,...W)}}class mt extends He{constructor(_){super(_),this.cls=_.cls[0],this.sep=_.sep[0]}post_process(_,W=null,{add_special_tokens:oe=!0}={}){oe&&(_=(0,J.mergeArrays)([this.cls],_,[this.sep]));let pe=new Array(_.length).fill(0);if(W!==null){const Oe=oe&&this instanceof wt?[this.sep]:[],st=oe?[this.sep]:[];_=(0,J.mergeArrays)(_,Oe,W,st),pe=(0,J.mergeArrays)(pe,new Array(W.length+Oe.length+st.length).fill(1))}return{tokens:_,token_type_ids:pe}}}class wt extends mt{}class Lt extends He{constructor(_){super(_),this.single=_.single,this.pair=_.pair}post_process(_,W=null,{add_special_tokens:oe=!0}={}){const pe=W===null?this.single:this.pair;let Oe=[],st=[];for(const Pt of pe)"SpecialToken"in Pt?oe&&(Oe.push(Pt.SpecialToken.id),st.push(Pt.SpecialToken.type_id)):"Sequence"in Pt&&(Pt.Sequence.id==="A"?(Oe=(0,J.mergeArrays)(Oe,_),st=(0,J.mergeArrays)(st,new Array(_.length).fill(Pt.Sequence.type_id))):Pt.Sequence.id==="B"&&(Oe=(0,J.mergeArrays)(Oe,W),st=(0,J.mergeArrays)(st,new Array(W.length).fill(Pt.Sequence.type_id))));return{tokens:Oe,token_type_ids:st}}}class kt extends He{post_process(_,W=null){return W&&(_=(0,J.mergeArrays)(_,W)),{tokens:_}}}class $ extends He{constructor(_){super(_),this.processors=_.processors.map(W=>He.fromConfig(W))}post_process(_,W=null,oe={}){let pe;for(const Oe of this.processors)if(Oe instanceof kt)_=Oe.post_process(_).tokens,W&&(W=Oe.post_process(W).tokens);else{const st=Oe.post_process(_,W,oe);_=st.tokens,pe=st.token_type_ids}return{tokens:_,token_type_ids:pe}}}class Z extends C.Callable{constructor(_){super(),this.config=_,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=_.trim_offsets}static fromConfig(_){if(_===null)return null;switch(_.type){case"WordPiece":return new et(_);case"Metaspace":return new V(_);case"ByteLevel":return new At(_);case"Replace":return new z(_);case"ByteFallback":return new ue(_);case"Fuse":return new Me(_);case"Strip":return new it(_);case"Sequence":return new yt(_);case"CTC":return new ot(_);case"BPEDecoder":return new E(_);default:throw new Error(`Unknown Decoder type: ${_.type}`)}}_call(_){return this.decode(_)}decode(_){return this.decode_chain(_).join("")}decode_chain(_){throw Error("`decode_chain` should be implemented in subclass.")}}class z extends Z{decode_chain(_){const W=le(this.config.pattern);return W===null?_:_.map(oe=>oe.replaceAll(W,this.config.content))}}class ue extends Z{constructor(_){super(_),this.text_decoder=new TextDecoder}decode_chain(_){const W=[];let oe=[];for(const pe of _){let Oe=null;if(pe.length===6&&pe.startsWith("<0x")&&pe.endsWith(">")){const st=parseInt(pe.slice(3,5),16);isNaN(st)||(Oe=st)}if(Oe!==null)oe.push(Oe);else{if(oe.length>0){const st=this.text_decoder.decode(Uint8Array.from(oe));W.push(st),oe=[]}W.push(pe)}}if(oe.length>0){const pe=this.text_decoder.decode(Uint8Array.from(oe));W.push(pe),oe=[]}return W}}class Me extends Z{decode_chain(_){return[_.join("")]}}class it extends Z{constructor(_){super(_),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(_){return _.map(W=>{let oe=0;for(let Oe=0;Oe<this.start&&W[Oe]===this.content;++Oe){oe=Oe+1;continue}let pe=W.length;for(let Oe=0;Oe<this.stop;++Oe){const st=W.length-Oe-1;if(W[st]===this.content){pe=st;continue}else break}return W.slice(oe,pe)})}}class et extends Z{constructor(_){super(_),this.cleanup=_.cleanup}decode_chain(_){return _.map((W,oe)=>(oe!==0&&(W.startsWith(this.config.prefix)?W=W.replace(this.config.prefix,""):W=" "+W),this.cleanup&&(W=j(W)),W))}}class At extends Z{constructor(_){super(_),this.byte_decoder=dt,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(_){const W=_.join(""),oe=new Uint8Array([...W].map(Oe=>this.byte_decoder[Oe]));return this.text_decoder.decode(oe)}decode_chain(_){const W=[];let oe=[];for(const pe of _)this.added_tokens.find(Oe=>Oe.content===pe)!==void 0?(oe.length>0&&(W.push(this.convert_tokens_to_string(oe)),oe=[]),W.push(pe)):oe.push(pe);return oe.length>0&&W.push(this.convert_tokens_to_string(oe)),W}}class ot extends Z{constructor(_){super(_),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(_){if(_.length===0)return"";const W=[_[0]];for(let Oe=1;Oe<_.length;++Oe)_[Oe]!==W.at(-1)&&W.push(_[Oe]);let pe=W.filter(Oe=>Oe!==this.pad_token).join("");return this.cleanup&&(pe=j(pe).replaceAll(this.word_delimiter_token," ").trim()),pe}decode_chain(_){return[this.convert_tokens_to_string(_)]}}class yt extends Z{constructor(_){super(_),this.decoders=_.decoders.map(W=>Z.fromConfig(W))}decode_chain(_){return this.decoders.reduce((W,oe)=>oe.decode_chain(W),_)}}class E extends Z{constructor(_){super(_),this.suffix=this.config.suffix}decode_chain(_){return _.map((W,oe)=>W.replaceAll(this.suffix,oe===_.length-1?"":" "))}}class c extends Z{decode_chain(_){let W="";for(let oe=1;oe<_.length;oe+=2)W+=_[oe];return[W]}}class m extends tt{constructor(_){super(),this.addPrefixSpace=_.add_prefix_space,this.replacement=_.replacement,this.strRep=_.str_rep||this.replacement,this.prepend_scheme=_.prepend_scheme??"always"}pre_tokenize_text(_,{section_index:W=void 0}={}){let oe=_.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!oe.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&W===0)&&(oe=this.strRep+oe),[oe]}}class V extends Z{constructor(_){super(_),this.addPrefixSpace=_.add_prefix_space,this.replacement=_.replacement}decode_chain(_){const W=[];for(let oe=0;oe<_.length;++oe){let pe=_[oe].replaceAll(this.replacement," ");this.addPrefixSpace&&oe==0&&pe.startsWith(" ")&&(pe=pe.substring(1)),W.push(pe)}return W}}class me extends H{constructor(_){super(_),this.charsmap=_.precompiled_charsmap}normalize(_){return _=_.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),_=_.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),_.includes("～")?_=_.split("～").map(oe=>oe.normalize("NFKC")).join("～"):_=_.normalize("NFKC"),_}}class ke extends tt{constructor(_){super(),this.tokenizers=_.pretokenizers.map(W=>tt.fromConfig(W))}pre_tokenize_text(_,W){return this.tokenizers.reduce((oe,pe)=>pe.pre_tokenize(oe,W),[_])}}class Ge extends tt{constructor(_){super()}pre_tokenize_text(_,W){return _.match(/\w+|[^\w\s]+/g)||[]}}class sr extends tt{constructor(_){super()}pre_tokenize_text(_,W){return G(_)}}class Je extends tt{constructor(_){super(),this.config=_,this.pattern=le(this.config.pattern),this.content=this.config.content}pre_tokenize_text(_,W){return this.pattern===null?[_]:[_.replaceAll(this.pattern,this.config.content)]}}const N=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function ye(_e,_,W,oe){for(const pe of Object.keys(_e)){const Oe=_-_e[pe].length,st=W(pe),Pt=new Array(Oe).fill(st);_e[pe]=oe==="right"?(0,J.mergeArrays)(_e[pe],Pt):(0,J.mergeArrays)(Pt,_e[pe])}}function Se(_e,_){for(const W of Object.keys(_e))_e[W].length=_}class Be extends C.Callable{return_token_type_ids=!1;padding_side="right";constructor(_,W){super(),this._tokenizer_config=W,this.normalizer=H.fromConfig(_.normalizer),this.pre_tokenizer=tt.fromConfig(_.pre_tokenizer),this.model=Ae.fromConfig(_.model,W),this.post_processor=He.fromConfig(_.post_processor),this.decoder=Z.fromConfig(_.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const oe of _.added_tokens){const pe=new $e(oe);this.added_tokens.push(pe),this.model.tokens_to_ids.set(pe.content,pe.id),this.model.vocab[pe.id]=pe.content,pe.special&&(this.special_tokens.push(pe.content),this.all_special_ids.push(pe.id))}if(this.additional_special_tokens=W.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((oe,pe)=>pe.content.length-oe.content.length).map(oe=>`${oe.lstrip?"\\s*":""}(${(0,J.escapeRegExp)(oe.content)})${oe.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=W.model_max_length,this.remove_space=W.remove_space,this.clean_up_tokenization_spaces=W.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=W.do_lowercase_and_remove_accent??!1,W.padding_side&&(this.padding_side=W.padding_side),this.legacy=!1,this.chat_template=W.chat_template??null,Array.isArray(this.chat_template)){const oe=Object.create(null);for(const{name:pe,template:Oe}of this.chat_template){if(typeof pe!="string"||typeof Oe!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');oe[pe]=Oe}this.chat_template=oe}this._compiled_template_cache=new Map}getToken(..._){for(const W of _){const oe=this._tokenizer_config[W];if(oe)if(typeof oe=="object"){if(oe.__type==="AddedToken")return oe.content;throw Error(`Unknown token: ${oe}`)}else return oe}return null}static async from_pretrained(_,{progress_callback:W=null,config:oe=null,cache_dir:pe=null,local_files_only:Oe=!1,revision:st="main",legacy:Pt=null}={}){const zt=await U(_,{progress_callback:W,config:oe,cache_dir:pe,local_files_only:Oe,revision:st,legacy:Pt});return new this(...zt)}_call(_,{text_pair:W=null,add_special_tokens:oe=!0,padding:pe=!1,truncation:Oe=null,max_length:st=null,return_tensor:Pt=!0,return_token_type_ids:zt=null}={}){const Dt=Array.isArray(_);let $t;if(Dt){if(_.length===0)throw Error("text array must be non-empty");if(W!==null){if(Array.isArray(W)){if(_.length!==W.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");$t=_.map((pr,Cr)=>this._encode_plus(pr,{text_pair:W[Cr],add_special_tokens:oe,return_token_type_ids:zt}))}else $t=_.map(pr=>this._encode_plus(pr,{add_special_tokens:oe,return_token_type_ids:zt}))}else{if(_==null)throw Error("text may not be null or undefined");if(Array.isArray(W))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");$t=[this._encode_plus(_,{text_pair:W,add_special_tokens:oe,return_token_type_ids:zt})]}if(st===null?pe==="max_length"?st=this.model_max_length:st=(0,fe.max)($t.map(pr=>pr.input_ids.length))[0]:Oe||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),st=Math.min(st,this.model_max_length??1/0),pe||Oe)for(let pr=0;pr<$t.length;++pr)$t[pr].input_ids.length!==st&&($t[pr].input_ids.length>st?Oe&&Se($t[pr],st):pe&&ye($t[pr],st,Cr=>Cr==="input_ids"?this.pad_token_id:0,this.padding_side));const _r={};if(Pt){if(!(pe&&Oe)&&$t.some(Cr=>{for(const Xr of Object.keys(Cr))if(Cr[Xr].length!==$t[0][Xr]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const pr=[$t.length,$t[0].input_ids.length];for(const Cr of Object.keys($t[0]))_r[Cr]=new Te.Tensor("int64",BigInt64Array.from($t.flatMap(Xr=>Xr[Cr]).map(BigInt)),pr)}else{for(const pr of Object.keys($t[0]))_r[pr]=$t.map(Cr=>Cr[pr]);if(!Dt)for(const pr of Object.keys(_r))_r[pr]=_r[pr][0]}return _r}_encode_text(_){return _===null?null:(this.added_tokens_regex?_.split(this.added_tokens_regex).filter(pe=>pe):[_]).map((pe,Oe)=>{if(this.added_tokens.find(Pt=>Pt.content===pe)!==void 0)return pe;{if(this.remove_space===!0&&(pe=pe.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(pe=xe(pe)),this.normalizer!==null&&(pe=this.normalizer(pe)),pe.length===0)return[];const Pt=this.pre_tokenizer!==null?this.pre_tokenizer(pe,{section_index:Oe}):[pe];return this.model(Pt)}}).flat()}_encode_plus(_,{text_pair:W=null,add_special_tokens:oe=!0,return_token_type_ids:pe=null}={}){const{tokens:Oe,token_type_ids:st}=this._tokenize_helper(_,{pair:W,add_special_tokens:oe}),Pt=this.model.convert_tokens_to_ids(Oe),zt={input_ids:Pt,attention_mask:new Array(Pt.length).fill(1)};return(pe??this.return_token_type_ids)&&st&&(zt.token_type_ids=st),zt}_tokenize_helper(_,{pair:W=null,add_special_tokens:oe=!1}={}){const pe=this._encode_text(_),Oe=this._encode_text(W);return this.post_processor?this.post_processor(pe,Oe,{add_special_tokens:oe}):{tokens:(0,J.mergeArrays)(pe??[],Oe??[])}}tokenize(_,{pair:W=null,add_special_tokens:oe=!1}={}){return this._tokenize_helper(_,{pair:W,add_special_tokens:oe}).tokens}encode(_,{text_pair:W=null,add_special_tokens:oe=!0,return_token_type_ids:pe=null}={}){return this._encode_plus(_,{text_pair:W,add_special_tokens:oe,return_token_type_ids:pe}).input_ids}batch_decode(_,W={}){return _ instanceof Te.Tensor&&(_=_.tolist()),_.map(oe=>this.decode(oe,W))}decode(_,W={}){if(_ instanceof Te.Tensor&&(_=ve(_)),!Array.isArray(_)||_.length===0||!(0,J.isIntegralNumber)(_[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(_,W)}decode_single(_,{skip_special_tokens:W=!1,clean_up_tokenization_spaces:oe=null}){let pe=this.model.convert_ids_to_tokens(_);W&&(pe=pe.filter(st=>!this.special_tokens.includes(st)));let Oe=this.decoder?this.decoder(pe):pe.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Oe=Oe.replaceAll(this.decoder.end_of_word_suffix," "),W&&(Oe=Oe.trim())),(oe??this.clean_up_tokenization_spaces)&&(Oe=j(Oe)),Oe}get_chat_template({chat_template:_=null,tools:W=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const oe=this.chat_template;if(_!==null&&Object.hasOwn(oe,_))_=oe[_];else if(_===null)if(W!==null&&"tool_use"in oe)_=oe.tool_use;else if("default"in oe)_=oe.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(oe).sort()}.`)}else if(_===null)if(this.chat_template)_=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return _}apply_chat_template(_,{tools:W=null,documents:oe=null,chat_template:pe=null,add_generation_prompt:Oe=!1,tokenize:st=!0,padding:Pt=!1,truncation:zt=!1,max_length:Dt=null,return_tensor:$t=!0,return_dict:_r=!1,tokenizer_kwargs:pr={},...Cr}={}){if(pe=this.get_chat_template({chat_template:pe,tools:W}),typeof pe!="string")throw Error(`chat_template must be a string, but got ${typeof pe}`);let Xr=this._compiled_template_cache.get(pe);Xr===void 0&&(Xr=new O.Template(pe),this._compiled_template_cache.set(pe,Xr));const bn=Object.create(null);for(const kr of N){const xn=this.getToken(kr);xn&&(bn[kr]=xn)}const hr=Xr.render({messages:_,add_generation_prompt:Oe,tools:W,documents:oe,...bn,...Cr});if(st){const kr=this._call(hr,{add_special_tokens:!1,padding:Pt,truncation:zt,max_length:Dt,return_tensor:$t,...pr});return _r?kr:kr.input_ids}return hr}}class Ke extends Be{return_token_type_ids=!0}class pt extends Be{return_token_type_ids=!0}class Ct extends Be{return_token_type_ids=!0}class Tt extends Be{return_token_type_ids=!0}class Ft extends Be{return_token_type_ids=!0}class xt extends Be{return_token_type_ids=!0}class Ut extends Be{return_token_type_ids=!0}class Wt extends Be{return_token_type_ids=!0}class Nt extends Be{return_token_type_ids=!0}class Le extends Be{}class Re extends Be{}class vt extends Be{return_token_type_ids=!0;constructor(_,W){super(_,W),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Ht extends Be{return_token_type_ids=!0}class ar extends Be{}class Or extends Be{}class jr extends Be{}class Er extends Be{constructor(_,W){super(_,W),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(oe=>this.languageRegex.test(oe)),this.lang_to_token=oe=>oe}_build_translation_inputs(_,W,oe){return $n(this,_,W,oe)}}class Dr extends Er{}class Ar extends Be{}class Dn extends Be{}const Nr="▁";class mi extends Be{padding_side="left";constructor(_,W){super(_,W),this.legacy=W.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new m({replacement:Nr,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(_){if(_===null)return null;if(this.legacy||_.length===0)return super._encode_text(_);let W=super._encode_text(Nr+_.replaceAll(Nr," "));return W.length>1&&W[0]===Nr&&this.special_tokens.includes(W[1])&&(W=W.slice(1)),W}}class ki extends Be{}class Xn extends Be{}class Pi extends Be{}class Ai extends Be{}class Ii extends Be{}class Fi extends Be{}class Oi extends Be{}class ti extends Be{}class Qn extends Be{}function $n(_e,_,W,oe){if(!("language_codes"in _e)||!Array.isArray(_e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in _e)||!(_e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in _e)||typeof _e.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const pe=oe.src_lang,Oe=oe.tgt_lang;if(!_e.language_codes.includes(Oe))throw new Error(`Target language code "${Oe}" is not valid. Must be one of: {${_e.language_codes.join(", ")}}`);if(pe!==void 0){if(!_e.language_codes.includes(pe))throw new Error(`Source language code "${pe}" is not valid. Must be one of: {${_e.language_codes.join(", ")}}`);for(const st of _e.post_processor.config.single)if("SpecialToken"in st&&_e.languageRegex.test(st.SpecialToken.id)){st.SpecialToken.id=_e.lang_to_token(pe);break}}return oe.forced_bos_token_id=_e.model.convert_tokens_to_ids([_e.lang_to_token(Oe)])[0],_e._call(_,W)}class Ln extends Be{constructor(_,W){super(_,W),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(oe=>this.languageRegex.test(oe)),this.lang_to_token=oe=>oe}_build_translation_inputs(_,W,oe){return $n(this,_,W,oe)}}class _i extends Be{constructor(_,W){super(_,W),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(oe=>this.languageRegex.test(oe)).map(oe=>oe.slice(2,-2)),this.lang_to_token=oe=>`__${oe}__`}_build_translation_inputs(_,W,oe){return $n(this,_,W,oe)}}class On extends Be{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(_,{return_timestamps:W=!1,return_language:oe=!1,time_precision:pe=null,force_full_sequences:Oe=!0}={}){if(pe===null)throw Error("Must specify time_precision");let st=null;const Pt=W==="word";function zt(){return{language:st,timestamp:[null,null],text:""}}const Dt=[];let $t=zt(),_r=0;const pr=this.timestamp_begin;let Cr=[],Xr=[],bn=!1,hr=null;const kr=new Set(this.all_special_ids);for(const Ie of _){const Jr=Ie.tokens,ln=Pt?Ie.token_timestamps:null;let kn=null,Rn=pr;if("stride"in Ie){const[Qr,gr,Br]=Ie.stride;if(_r-=gr,hr=Qr-Br,gr&&(Rn=gr/pe+pr),Br)for(let Ot=Jr.length-1;Ot>=0;--Ot){const br=Number(Jr[Ot]);if(br>=pr){if(kn!==null&&(br-pr)*pe<hr)break;kn=br}}}let Jt=[],pn=[];for(let Qr=0;Qr<Jr.length;++Qr){const gr=Number(Jr[Qr]);if(kr.has(gr)){const Br=this.decode([gr]),Ot=M.WHISPER_LANGUAGE_MAPPING.get(Br.slice(2,-2));if(Ot!==void 0){if(st!==null&&Ot!==st&&!W){Cr.push(Jt);const br=this.findLongestCommonSequence(Cr)[0],ii=this.decode(br);$t.text=ii,Dt.push($t),Cr=[],Jt=[],$t=zt()}st=$t.language=Ot}}else if(gr>=pr){const Br=(gr-pr)*pe+_r,Ot=(0,fe.round)(Br,2);if(kn!==null&&gr>=kn)bn=!0;else if(bn||Cr.length>0&&gr<Rn)bn=!1;else if($t.timestamp[0]===null)$t.timestamp[0]=Ot;else if(Ot!==$t.timestamp[0]){$t.timestamp[1]=Ot,Cr.push(Jt),Pt&&Xr.push(pn);const[br,ii]=this.findLongestCommonSequence(Cr,Xr),Yn=this.decode(br);$t.text=Yn,Pt&&($t.words=this.collateWordTimestamps(br,ii,st)),Dt.push($t),Cr=[],Jt=[],Xr=[],pn=[],$t=zt()}}else if(Jt.push(gr),Pt){let Br=(0,fe.round)(ln[Qr]+_r,2),Ot;if(Qr+1<ln.length){Ot=(0,fe.round)(ln[Qr+1]+_r,2);const br=this.decode([gr]);q.test(br)&&(Ot=(0,fe.round)(Math.min(Br+pe,Ot),2))}else Ot=null;pn.push([Br,Ot])}}if("stride"in Ie){const[Qr,gr,Br]=Ie.stride;_r+=Qr-Br}Jt.length>0?(Cr.push(Jt),Pt&&Xr.push(pn)):Cr.every(Qr=>Qr.length===0)&&($t=zt(),Cr=[],Jt=[],Xr=[],pn=[])}if(Cr.length>0){if(Oe&&W)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Ie,Jr]=this.findLongestCommonSequence(Cr,Xr),ln=this.decode(Ie);$t.text=ln,Pt&&($t.words=this.collateWordTimestamps(Ie,Jr,st)),Dt.push($t)}let xn=Object.create(null);const Sn=Dt.map(Ie=>Ie.text).join("");if(W||oe){for(let Ie=0;Ie<Dt.length;++Ie){const Jr=Dt[Ie];W||delete Jr.timestamp,oe||delete Jr.language}if(Pt){const Ie=[];for(const Jr of Dt)for(const ln of Jr.words)Ie.push(ln);xn={chunks:Ie}}else xn={chunks:Dt}}return[Sn,xn]}findLongestCommonSequence(_,W=null){let oe=_[0],pe=oe.length,Oe=[];const st=Array.isArray(W)&&W.length>0;let Pt=st?[]:null,zt=st?W[0]:null;for(let Dt=1;Dt<_.length;++Dt){const $t=_[Dt];let _r=0,pr=[pe,pe,0,0];const Cr=$t.length;for(let Ie=1;Ie<pe+Cr;++Ie){const Jr=Math.max(0,pe-Ie),ln=Math.min(pe,pe+Cr-Ie),kn=oe.slice(Jr,ln),Rn=Math.max(0,Ie-pe),Jt=Math.min(Cr,Ie),pn=$t.slice(Rn,Jt);if(kn.length!==pn.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Qr;st?Qr=kn.filter((Ot,br)=>Ot===pn[br]&&zt[Jr+br]<=W[Dt][Rn+br]).length:Qr=kn.filter((Ot,br)=>Ot===pn[br]).length;const gr=Ie/1e4,Br=Qr/Ie+gr;Qr>1&&Br>_r&&(_r=Br,pr=[Jr,ln,Rn,Jt])}const[Xr,bn,hr,kr]=pr,xn=Math.floor((bn+Xr)/2),Sn=Math.floor((kr+hr)/2);Oe.push(...oe.slice(0,xn)),oe=$t.slice(Sn),pe=oe.length,st&&(Pt.push(...zt.slice(0,xn)),zt=W[Dt].slice(Sn))}return Oe.push(...oe),st?(Pt.push(...zt),[Oe,Pt]):[Oe,[]]}collateWordTimestamps(_,W,oe){const[pe,Oe,st]=this.combineTokensIntoWords(_,oe),Pt=[];for(let zt=0;zt<pe.length;++zt){const Dt=st[zt];Pt.push({text:pe[zt],timestamp:[W[Dt.at(0)][0],W[Dt.at(-1)][1]]})}return Pt}combineTokensIntoWords(_,W,oe=`"'“¡¿([{-`,pe=`"'.。,，!！?？:：”)]}、`){W=W??"english";let Oe,st,Pt;return["chinese","japanese","thai","lao","myanmar"].includes(W)?[Oe,st,Pt]=this.splitTokensOnUnicode(_):[Oe,st,Pt]=this.splitTokensOnSpaces(_),this.mergePunctuations(Oe,st,Pt,oe,pe)}decode(_,W){let oe;return W?.decode_with_timestamps?(_ instanceof Te.Tensor&&(_=ve(_)),oe=this.decodeWithTimestamps(_,W)):oe=super.decode(_,W),oe}decodeWithTimestamps(_,W){const oe=W?.time_precision??.02,pe=Array.from(this.all_special_ids).at(-1)+1;let Oe=[[]];for(let st of _)if(st=Number(st),st>=pe){const Pt=((st-pe)*oe).toFixed(2);Oe.push(`<|${Pt}|>`),Oe.push([])}else Oe[Oe.length-1].push(st);return Oe=Oe.map(st=>typeof st=="string"?st:super.decode(st,W)),Oe.join("")}splitTokensOnUnicode(_){const W=this.decode(_,{decode_with_timestamps:!0}),oe="�",pe=[],Oe=[],st=[];let Pt=[],zt=[],Dt=0;for(let $t=0;$t<_.length;++$t){const _r=_[$t];Pt.push(_r),zt.push($t);const pr=this.decode(Pt,{decode_with_timestamps:!0});(!pr.includes(oe)||W[Dt+pr.indexOf(oe)]===oe)&&(pe.push(pr),Oe.push(Pt),st.push(zt),Pt=[],zt=[],Dt+=pr.length)}return[pe,Oe,st]}splitTokensOnSpaces(_){const[W,oe,pe]=this.splitTokensOnUnicode(_),Oe=[],st=[],Pt=[],zt=new RegExp(`^[${B}]$`,"gu");for(let Dt=0;Dt<W.length;++Dt){const $t=W[Dt],_r=oe[Dt],pr=pe[Dt],Cr=_r[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Xr=$t.startsWith(" "),bn=$t.trim(),hr=zt.test(bn);if(Cr||Xr||hr||Oe.length===0)Oe.push($t),st.push(_r),Pt.push(pr);else{const kr=Oe.length-1;Oe[kr]+=$t,st[kr].push(..._r),Pt[kr].push(...pr)}}return[Oe,st,Pt]}mergePunctuations(_,W,oe,pe,Oe){const st=structuredClone(_),Pt=structuredClone(W),zt=structuredClone(oe);let Dt=st.length-2,$t=st.length-1;for(;Dt>=0;)st[Dt].startsWith(" ")&&pe.includes(st[Dt].trim())?(st[$t]=st[Dt]+st[$t],Pt[$t]=(0,J.mergeArrays)(Pt[Dt],Pt[$t]),zt[$t]=(0,J.mergeArrays)(zt[Dt],zt[$t]),st[Dt]="",Pt[Dt]=[],zt[Dt]=[]):$t=Dt,--Dt;for(Dt=0,$t=1;$t<st.length;)!st[Dt].endsWith(" ")&&Oe.includes(st[$t])?(st[Dt]+=st[$t],Pt[Dt]=(0,J.mergeArrays)(Pt[Dt],Pt[$t]),zt[Dt]=(0,J.mergeArrays)(zt[Dt],zt[$t]),st[$t]="",Pt[$t]=[],zt[$t]=[]):Dt=$t,++$t;return[st.filter(_r=>_r),Pt.filter(_r=>_r.length>0),zt.filter(_r=>_r.length>0)]}}class gi extends Be{}class wi extends Be{}class yi extends Be{}class rr extends Be{constructor(_,W){super(_,W),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(oe=>this.languageRegex.test(oe)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(_){if(_===null)return null;const[W,...oe]=_.trim().split(this.languageRegex);if(oe.length===0)return super._encode_text(W);if(oe.length===2){const[pe,Oe]=oe;return this.supported_language_codes.includes(pe)||console.warn(`Unsupported language code "${pe}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,J.mergeArrays)([pe],super._encode_text(Oe))}}}class ri extends Be{}class Bi extends Be{}class zi extends Be{}class bi extends Be{}class Di extends Be{}class Li extends Be{constructor(_,W){super(_,W),this.decoder=new c({})}}class ni extends Be{}class ns{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:ar,DistilBertTokenizer:Le,CamembertTokenizer:Re,DebertaTokenizer:Ft,DebertaV2Tokenizer:xt,BertTokenizer:Ke,HerbertTokenizer:Ut,ConvBertTokenizer:Wt,RoFormerTokenizer:Nt,XLMTokenizer:vt,ElectraTokenizer:Ht,MobileBertTokenizer:Ct,SqueezeBertTokenizer:Tt,AlbertTokenizer:pt,GPT2Tokenizer:Or,BartTokenizer:jr,MBartTokenizer:Er,MBart50Tokenizer:Dr,RobertaTokenizer:Ar,WhisperTokenizer:On,CodeGenTokenizer:gi,CLIPTokenizer:wi,SiglipTokenizer:yi,MarianTokenizer:rr,BloomTokenizer:Dn,NllbTokenizer:Ln,M2M100Tokenizer:_i,LlamaTokenizer:mi,CodeLlamaTokenizer:ki,XLMRobertaTokenizer:Xn,MPNetTokenizer:Pi,FalconTokenizer:Ai,GPTNeoXTokenizer:Ii,EsmTokenizer:Fi,Wav2Vec2CTCTokenizer:ri,BlenderbotTokenizer:Bi,BlenderbotSmallTokenizer:zi,SpeechT5Tokenizer:bi,NougatTokenizer:Di,VitsTokenizer:Li,Qwen2Tokenizer:Oi,GemmaTokenizer:ti,Grok1Tokenizer:Qn,CohereTokenizer:ni,PreTrainedTokenizer:Be};static async from_pretrained(_,{progress_callback:W=null,config:oe=null,cache_dir:pe=null,local_files_only:Oe=!1,revision:st="main",legacy:Pt=null}={}){const[zt,Dt]=await U(_,{progress_callback:W,config:oe,cache_dir:pe,local_files_only:Oe,revision:st,legacy:Pt}),$t=Dt.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let _r=this.TOKENIZER_CLASS_MAPPING[$t];return _r||(console.warn(`Unknown tokenizer class "${$t}", attempting to construct from base class.`),_r=Be),new _r(zt,Dt)}}},"./src/utils/audio.js":(ae,L,T)=>{T.r(L),T.d(L,{hamming:()=>M,hanning:()=>O,mel_filter_bank:()=>se,read_audio:()=>Te,spectrogram:()=>B,window_function:()=>q});var C=T("./src/utils/hub.js"),J=T("./src/utils/maths.js"),ne=T("./src/utils/core.js"),fe=T("./src/utils/tensor.js");async function Te(I,be){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const $e=await(await(0,C.getFile)(I)).arrayBuffer(),Ae=new AudioContext({sampleRate:be});typeof be>"u"&&console.warn(`No sampling rate provided, using default of ${Ae.sampleRate}Hz.`);const je=await Ae.decodeAudioData($e);let De;if(je.numberOfChannels===2){const ft=Math.sqrt(2),dt=je.getChannelData(0),gt=je.getChannelData(1);De=new Float32Array(dt.length);for(let Ee=0;Ee<je.length;++Ee)De[Ee]=ft*(dt[Ee]+gt[Ee])/2}else De=je.getChannelData(0);return De}function R(I,be){if(I<1)return new Float64Array;if(I===1)return new Float64Array([1]);const $e=1-be,Ae=2*Math.PI/(I-1),je=new Float64Array(I);for(let De=0;De<I;++De)je[De]=be-$e*Math.cos(De*Ae);return je}function O(I){return R(I,.5)}function M(I){return R(I,.54)}const U={htk:I=>2595*Math.log10(1+I/700),kaldi:I=>1127*Math.log(1+I/700),slaney:(I,be=1e3,$e=15,Ae=27/Math.log(6.4))=>I>=be?$e+Math.log(I/be)*Ae:3*I/200};function X(I,be="htk"){const $e=U[be];if(!$e)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof I=="number"?$e(I):I.map(Ae=>$e(Ae))}const le={htk:I=>700*(10**(I/2595)-1),kaldi:I=>700*(Math.exp(I/1127)-1),slaney:(I,be=1e3,$e=15,Ae=Math.log(6.4)/27)=>I>=$e?be*Math.exp(Ae*(I-$e)):200*I/3};function Ce(I,be="htk"){const $e=le[be];if(!$e)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof I=="number"?$e(I):I.map(Ae=>$e(Ae))}function ve(I,be){const $e=Float64Array.from({length:be.length-1},(ft,dt)=>be[dt+1]-be[dt]),Ae=Array.from({length:I.length},()=>new Array(be.length));for(let ft=0;ft<I.length;++ft){const dt=Ae[ft];for(let gt=0;gt<be.length;++gt)dt[gt]=be[gt]-I[ft]}const je=be.length-2,De=Array.from({length:je},()=>new Array(I.length));for(let ft=0;ft<I.length;++ft){const dt=Ae[ft];for(let gt=0;gt<je;++gt){const Ee=-dt[gt]/$e[gt],H=dt[gt+2]/$e[gt+1];De[gt][ft]=Math.max(0,Math.min(Ee,H))}}return De}function j(I,be,$e){const Ae=(be-I)/($e-1);return Float64Array.from({length:$e},(je,De)=>I+Ae*De)}function se(I,be,$e,Ae,je,De=null,ft="htk",dt=!1){if(De!==null&&De!=="slaney")throw new Error('norm must be one of null or "slaney"');const gt=X($e,ft),Ee=X(Ae,ft),H=j(gt,Ee,be+2);let we=Ce(H,ft),Pe;if(dt){const _t=je/(I*2);Pe=X(Float64Array.from({length:I},(ce,Ue)=>Ue*_t),ft),we=H}else Pe=j(0,Math.floor(je/2),I);const Qe=ve(Pe,we);if(De!==null&&De==="slaney")for(let _t=0;_t<be;++_t){const ce=Qe[_t],Ue=2/(we[_t+2]-we[_t]);for(let ct=0;ct<I;++ct)ce[ct]*=Ue}return Qe}function xe(I,be,$e){const Ae=new I.constructor(I.length+be+$e),je=I.length-1;for(let De=0;De<I.length;++De)Ae[be+De]=I[De];for(let De=1;De<=be;++De)Ae[be-De]=I[(0,ne.calculateReflectOffset)(De,je)];for(let De=1;De<=$e;++De)Ae[je+be+De]=I[(0,ne.calculateReflectOffset)(je-De,je)];return Ae}function te(I,be,$e,Ae,je){if($e<=0)throw new Error("reference must be greater than zero");if(Ae<=0)throw new Error("min_value must be greater than zero");$e=Math.max(Ae,$e);const De=Math.log10($e);for(let ft=0;ft<I.length;++ft)I[ft]=be*Math.log10(Math.max(Ae,I[ft])-De);if(je!==null){if(je<=0)throw new Error("db_range must be greater than zero");const ft=(0,J.max)(I)[0]-je;for(let dt=0;dt<I.length;++dt)I[dt]=Math.max(I[dt],ft)}return I}function ee(I,be=1,$e=1e-5,Ae=null){return te(I,20,be,$e,Ae)}function G(I,be=1,$e=1e-10,Ae=null){return te(I,10,be,$e,Ae)}async function B(I,be,$e,Ae,{fft_length:je=null,power:De=1,center:ft=!0,pad_mode:dt="reflect",onesided:gt=!0,preemphasis:Ee=null,mel_filters:H=null,mel_floor:we=1e-10,log_mel:Pe=null,reference:Qe=1,min_value:_t=1e-10,db_range:ce=null,remove_dc_offset:Ue=null,min_num_frames:ct=null,max_num_frames:Ve=null,do_pad:Mt=!0,transpose:Et=!1}={}){const tt=be.length;if(je===null&&(je=$e),$e>je)throw Error(`frame_length (${$e}) may not be larger than fft_length (${je})`);if(tt!==$e)throw new Error(`Length of the window (${tt}) must equal frame_length (${$e})`);if(Ae<=0)throw new Error("hop_length must be greater than zero");if(De===null&&H!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(ft){if(dt!=="reflect")throw new Error(`pad_mode="${dt}" not implemented yet.`);const Z=Math.floor((je-1)/2)+1;I=xe(I,Z,Z)}let Y=Math.floor(1+Math.floor((I.length-$e)/Ae));ct!==null&&Y<ct&&(Y=ct);const ze=gt?Math.floor(je/2)+1:je;let nt=Y,at=Y;Ve!==null&&(Ve>Y?Mt&&(at=Ve):at=nt=Ve);const Ze=new J.FFT(je),He=new Float64Array(je),mt=new Float64Array(Ze.outputBufferSize),wt=new Float32Array(ze*at);for(let Z=0;Z<nt;++Z){const z=Z*Ae,ue=Math.min(I.length-z,$e);ue!==$e&&He.fill(0,0,$e);for(let Me=0;Me<ue;++Me)He[Me]=I[z+Me];if(Ue){let Me=0;for(let et=0;et<ue;++et)Me+=He[et];const it=Me/ue;for(let et=0;et<ue;++et)He[et]-=it}if(Ee!==null){for(let Me=ue-1;Me>=1;--Me)He[Me]-=Ee*He[Me-1];He[0]*=1-Ee}for(let Me=0;Me<be.length;++Me)He[Me]*=be[Me];Ze.realTransform(mt,He);for(let Me=0;Me<ze;++Me){const it=Me<<1;wt[Me*at+Z]=mt[it]**2+mt[it+1]**2}}if(De!==null&&De!==2){const Z=2/De;for(let z=0;z<wt.length;++z)wt[z]**=Z}const Lt=H.length;let kt=await(0,fe.matmul)(new fe.Tensor("float32",H.flat(),[Lt,ze]),new fe.Tensor("float32",wt,[ze,at]));Et&&(kt=kt.transpose(1,0));const $=kt.data;for(let Z=0;Z<$.length;++Z)$[Z]=Math.max(we,$[Z]);if(De!==null&&Pe!==null){const Z=Math.min($.length,nt*Lt);switch(Pe){case"log":for(let z=0;z<Z;++z)$[z]=Math.log($[z]);break;case"log10":for(let z=0;z<Z;++z)$[z]=Math.log10($[z]);break;case"dB":if(De===1)ee($,Qe,_t,ce);else if(De===2)G($,Qe,_t,ce);else throw new Error(`Cannot use log_mel option '${Pe}' with power ${De}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${Pe}'`)}}return kt}function q(I,be,{periodic:$e=!0,frame_length:Ae=null,center:je=!0}={}){const De=$e?I+1:I;let ft;switch(be){case"boxcar":ft=new Float64Array(De).fill(1);break;case"hann":case"hann_window":ft=O(De);break;case"hamming":ft=M(De);break;case"povey":ft=O(De).map(dt=>Math.pow(dt,.85));break;default:throw new Error(`Unknown window type ${be}.`)}if($e&&(ft=ft.subarray(0,I)),Ae===null)return ft;if(I>Ae)throw new Error(`Length of the window (${I}) may not be larger than frame_length (${Ae})`);return ft}},"./src/utils/constants.js":(ae,L,T)=>{T.r(L),T.d(L,{GITHUB_ISSUE_URL:()=>C});const C="https://github.com/huggingface/transformers.js/issues/new/choose"},"./src/utils/core.js":(ae,L,T)=>{T.r(L),T.d(L,{calculateDimensions:()=>R,calculateReflectOffset:()=>X,dispatchCallback:()=>C,escapeRegExp:()=>ne,isIntegralNumber:()=>Te,isTypedArray:()=>fe,len:()=>Ce,mergeArrays:()=>M,pick:()=>le,pop:()=>O,product:()=>U,reverseDictionary:()=>J});function C(ve,j){ve&&ve(j)}function J(ve){return Object.fromEntries(Object.entries(ve).map(([j,se])=>[se,j]))}function ne(ve){return ve.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function fe(ve){return ve?.prototype?.__proto__?.constructor?.name==="TypedArray"}function Te(ve){return Number.isInteger(ve)||typeof ve=="bigint"}function R(ve){const j=[];let se=ve;for(;Array.isArray(se);)j.push(se.length),se=se[0];return j}function O(ve,j,se=void 0){const xe=ve[j];if(xe!==void 0)return delete ve[j],xe;if(se===void 0)throw Error(`Key ${j} does not exist in object.`);return se}function M(...ve){return Array.prototype.concat.apply([],ve)}function U(...ve){return ve.reduce((j,se)=>j.flatMap(xe=>se.map(te=>[xe,te])))}function X(ve,j){return Math.abs((ve+j)%(2*j)-j)}function le(ve,j){return Object.assign({},...j.map(se=>{if(ve[se]!==void 0)return{[se]:ve[se]}}))}function Ce(ve){let j=0;for(const se of ve)++j;return j}},"./src/utils/data-structures.js":(ae,L,T)=>{T.r(L),T.d(L,{CharTrie:()=>J,PriorityQueue:()=>C,TokenLattice:()=>fe});class C{constructor(O=(U,X)=>U>X,M=1/0){this._heap=[],this._comparator=O,this._maxSize=M}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...O){return this.extend(O)}extend(O){for(const M of O)if(this.size<this._maxSize)this._heap.push(M),this._siftUp();else{const U=this._smallest();this._comparator(M,this._heap[U])&&(this._heap[U]=M,this._siftUpFrom(U))}return this.size}pop(){const O=this.peek(),M=this.size-1;return M>0&&this._swap(0,M),this._heap.pop(),this._siftDown(),O}replace(O){const M=this.peek();return this._heap[0]=O,this._siftDown(),M}_parent(O){return(O+1>>>1)-1}_left(O){return(O<<1)+1}_right(O){return O+1<<1}_greater(O,M){return this._comparator(this._heap[O],this._heap[M])}_swap(O,M){const U=this._heap[O];this._heap[O]=this._heap[M],this._heap[M]=U}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(O){for(;O>0&&this._greater(O,this._parent(O));)this._swap(O,this._parent(O)),O=this._parent(O)}_siftDown(){let O=0;for(;this._left(O)<this.size&&this._greater(this._left(O),O)||this._right(O)<this.size&&this._greater(this._right(O),O);){const M=this._right(O)<this.size&&this._greater(this._right(O),this._left(O))?this._right(O):this._left(O);this._swap(O,M),O=M}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class J{constructor(){this.root=ne.default()}extend(O){for(const M of O)this.push(M)}push(O){let M=this.root;for(const U of O){let X=M.children.get(U);X===void 0&&(X=ne.default(),M.children.set(U,X)),M=X}M.isLeaf=!0}*commonPrefixSearch(O){let M=this.root;if(M===void 0)return;let U="";for(const X of O){if(U+=X,M=M.children.get(X),M===void 0)return;M.isLeaf&&(yield U)}}}class ne{constructor(O,M){this.isLeaf=O,this.children=M}static default(){return new ne(!1,new Map)}}class fe{constructor(O,M,U){this.chars=Array.from(O),this.len=this.chars.length,this.bosTokenId=M,this.eosTokenId=U,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const X=new Te(this.bosTokenId,0,0,0,0),le=new Te(this.eosTokenId,1,this.len,0,0);this.nodes.push(X.clone()),this.nodes.push(le.clone()),this.beginNodes[this.len].push(le),this.endNodes[0].push(X)}insert(O,M,U,X){const le=this.nodes.length,Ce=new Te(X,le,O,M,U);this.beginNodes[O].push(Ce),this.endNodes[O+M].push(Ce),this.nodes.push(Ce)}viterbi(){const O=this.len;let M=0;for(;M<=O;){if(this.beginNodes[M].length==0)return[];for(let ve of this.beginNodes[M]){ve.prev=null;let j=0,se=null;for(let xe of this.endNodes[M]){const te=xe.backtraceScore+ve.score;(se===null||te>j)&&(se=xe.clone(),j=te)}if(se!==null)ve.prev=se,ve.backtraceScore=j;else return[]}++M}const U=[],le=this.beginNodes[O][0].prev;if(le===null)return[];let Ce=le.clone();for(;Ce.prev!==null;)U.push(Ce.clone()),Ce=Ce.clone().prev.clone();return U.reverse(),U}piece(O){return this.chars.slice(O.pos,O.pos+O.length).join("")}tokens(){return this.viterbi().map(M=>this.piece(M))}tokenIds(){return this.viterbi().map(M=>M.tokenId)}}class Te{constructor(O,M,U,X,le){this.tokenId=O,this.nodeId=M,this.pos=U,this.length=X,this.score=le,this.prev=null,this.backtraceScore=0}clone(){const O=new Te(this.tokenId,this.nodeId,this.pos,this.length,this.score);return O.prev=this.prev,O.backtraceScore=this.backtraceScore,O}}},"./src/utils/devices.js":(ae,L,T)=>{T.r(L),T.d(L,{DEVICE_TYPES:()=>C});const C=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(ae,L,T)=>{T.r(L),T.d(L,{DATA_TYPES:()=>fe,DEFAULT_DEVICE_DTYPE_MAPPING:()=>Te,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>R,isWebGpuFp16Supported:()=>ne});var C=T("./src/env.js"),J=T("./src/utils/devices.js");const ne=function(){let O;return async function(){if(O===void 0)if(!C.apis.IS_WEBGPU_AVAILABLE)O=!1;else try{O=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{O=!1}return O}}(),fe=Object.freeze({fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),Te=Object.freeze({[J.DEVICE_TYPES.wasm]:fe.q8}),R=Object.freeze({[fe.fp32]:"",[fe.fp16]:"_fp16",[fe.int8]:"_int8",[fe.uint8]:"_uint8",[fe.q8]:"_quantized",[fe.q4]:"_q4",[fe.q4f16]:"_q4f16",[fe.bnb4]:"_bnb4"})},"./src/utils/generic.js":(ae,L,T)=>{T.r(L),T.d(L,{Callable:()=>C});const C=class{constructor(){let J=function(...ne){return J._call(...ne)};return Object.setPrototypeOf(J,new.target.prototype)}_call(...J){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(ae,L,T)=>{T.r(L),T.d(L,{getFile:()=>M,getModelFile:()=>ve,getModelJSON:()=>j});var C=T("?7a2c"),J=T("?a42a"),ne=T("./src/env.js"),fe=T("./src/utils/core.js");const Te={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class R{constructor(ee){if(this.filePath=ee,this.headers=new Headers,this.exists=C.existsSync(ee),this.exists){this.status=200,this.statusText="OK";let G=C.statSync(ee);this.headers.set("content-length",G.size.toString()),this.updateContentType();let B=this;this.body=new ReadableStream({start(q){B.arrayBuffer().then(I=>{q.enqueue(new Uint8Array(I)),q.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const ee=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",Te[ee]??"application/octet-stream")}clone(){let ee=new R(this.filePath);return ee.exists=this.exists,ee.status=this.status,ee.statusText=this.statusText,ee.headers=new Headers(this.headers),ee}async arrayBuffer(){return(await C.promises.readFile(this.filePath)).buffer}async blob(){const ee=await C.promises.readFile(this.filePath);return new Blob([ee],{type:this.headers.get("content-type")})}async text(){return await C.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function O(te,ee=null,G=null){let B;try{B=new URL(te)}catch{return!1}return!(ee&&!ee.includes(B.protocol)||G&&!G.includes(B.hostname))}async function M(te){if(ne.env.useFS&&!O(te,["http:","https:","blob:"]))return new R(te);if(typeof Es<"u"&&Es?.release?.name==="node"){const ee=!!zp?.TESTING_REMOTELY,G=ne.env.version,B=new Headers;if(B.set("User-Agent",`transformers.js/${G}; is_ci/${ee};`),O(te,["http:","https:"],["huggingface.co","hf.co"])){const I=zp?.HF_TOKEN??zp?.HF_ACCESS_TOKEN;I&&B.set("Authorization",`Bearer ${I}`)}return fetch(te,{headers:B})}else return fetch(te)}const U={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function X(te,ee,G){if(!G)return null;const B=U[te]??`Error (${te}) occurred while trying to load file`;throw Error(`${B}: "${ee}".`)}class le{constructor(ee){this.path=ee}async match(ee){let G=J.join(this.path,ee),B=new R(G);if(B.exists)return B}async put(ee,G){const B=mg.from(await G.arrayBuffer());let q=J.join(this.path,ee);try{await C.promises.mkdir(J.dirname(q),{recursive:!0}),await C.promises.writeFile(q,B)}catch(I){console.warn("An error occurred while writing the file to cache:",I)}}}async function Ce(te,...ee){for(let G of ee)try{let B=await te.match(G);if(B)return B}catch{continue}}async function ve(te,ee,G=!0,B={}){if(!ne.env.allowLocalModels){if(B.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!ne.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,fe.dispatchCallback)(B.progress_callback,{status:"initiate",name:te,file:ee});let q;if(!q&&ne.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{q=await caches.open("transformers-cache")}catch(Pe){console.warn("An error occurred while opening the browser cache:",Pe)}}if(!q&&ne.env.useFSCache&&(q=new le(B.cache_dir??ne.env.cacheDir)),!q&&ne.env.useCustomCache){if(!ne.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!ne.env.customCache.match||!ne.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");q=ne.env.customCache}const I=B.revision??"main";let be=xe(te,ee),$e=xe(ne.env.localModelPath,be),Ae=xe(ne.env.remoteHost,ne.env.remotePathTemplate.replaceAll("{model}",te).replaceAll("{revision}",encodeURIComponent(I)),ee),je=I==="main"?be:xe(te,I,ee),De,ft=q instanceof le?je:Ae,dt=!1,gt;q&&(gt=await Ce(q,$e,ft));const Ee=gt!==void 0;if(gt===void 0){if(ne.env.allowLocalModels)if(O(be,["http:","https:"])){if(B.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${be}.`);if(!ne.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${be}.`)}else try{gt=await M($e),De=$e}catch(Qe){console.warn(`Unable to load from local path "${$e}": "${Qe}"`)}if(gt===void 0||gt.status===404){if(B.local_files_only||!ne.env.allowRemoteModels){if(G)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${$e}".`);return null}if(gt=await M(Ae),gt.status!==200)return X(gt.status,Ae,G);De=ft}dt=q&&typeof Response<"u"&&gt instanceof Response&&gt.status===200}(0,fe.dispatchCallback)(B.progress_callback,{status:"download",name:te,file:ee});const H={status:"progress",name:te,file:ee};let we;return B.progress_callback?Ee&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(we=new Uint8Array(await gt.arrayBuffer()),(0,fe.dispatchCallback)(B.progress_callback,{...H,progress:100,loaded:we.length,total:we.length})):we=await se(gt,Pe=>{(0,fe.dispatchCallback)(B.progress_callback,{...H,...Pe})}):we=new Uint8Array(await gt.arrayBuffer()),dt&&De&&await q.match(De)===void 0&&await q.put(De,new Response(we,{headers:gt.headers})).catch(Pe=>{console.warn(`Unable to add response to browser cache: ${Pe}.`)}),(0,fe.dispatchCallback)(B.progress_callback,{status:"done",name:te,file:ee}),we}async function j(te,ee,G=!0,B={}){let q=await ve(te,ee,G,B);if(q===null)return{};let be=new TextDecoder("utf-8").decode(q);return JSON.parse(be)}async function se(te,ee){const G=te.headers.get("Content-Length");G===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let B=parseInt(G??"0"),q=new Uint8Array(B),I=0;const be=te.body.getReader();async function $e(){const{done:Ae,value:je}=await be.read();if(Ae)return;let De=I+je.length;if(De>B){B=De;let dt=new Uint8Array(B);dt.set(q),q=dt}q.set(je,I),I=De;const ft=I/B*100;return ee({progress:ft,loaded:I,total:B}),$e()}return await $e(),q}function xe(...te){return te=te.map((ee,G)=>(G&&(ee=ee.replace(new RegExp("^/"),"")),G!==te.length-1&&(ee=ee.replace(new RegExp("/$"),"")),ee)),te.join("/")}},"./src/utils/image.js":(ae,L,T)=>{T.r(L),T.d(L,{RawImage:()=>Ce});var C=T("./src/utils/hub.js"),J=T("./src/env.js"),ne=T("./src/utils/tensor.js"),fe=T("?2b25");const Te=typeof self<"u",R=Te&&self.constructor.name==="DedicatedWorkerGlobalScope";let O,M,U;if(Te)O=(ve,j)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(ve,j)},U=self.createImageBitmap,M=self.ImageData;else if(fe)U=async ve=>{const se=(await ve.metadata()).channels,{data:xe,info:te}=await ve.rotate().raw().toBuffer({resolveWithObject:!0}),ee=new Ce(new Uint8ClampedArray(xe),te.width,te.height,te.channels);return se!==void 0&&se!==te.channels&&ee.convert(se),ee};else throw new Error("Unable to load image processing library.");const X={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},le=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class Ce{constructor(j,se,xe,te){this.data=j,this.width=se,this.height=xe,this.channels=te}get size(){return[this.width,this.height]}static async read(j){if(j instanceof Ce)return j;if(typeof j=="string"||j instanceof URL)return await this.fromURL(j);throw new Error(`Unsupported input type: ${typeof j}`)}static fromCanvas(j){if(!Te)throw new Error("fromCanvas() is only supported in browser environments.");const xe=j.getContext("2d").getImageData(0,0,j.width,j.height).data;return new Ce(xe,j.width,j.height,4)}static async fromURL(j){const se=await(0,C.getFile)(j);if(se.status!==200)throw new Error(`Unable to read image from "${j}" (${se.status} ${se.statusText})`);const xe=await se.blob();return this.fromBlob(xe)}static async fromBlob(j){if(Te){const se=await U(j),xe=O(se.width,se.height).getContext("2d");return xe.drawImage(se,0,0),new this(xe.getImageData(0,0,se.width,se.height).data,se.width,se.height,4)}else{const se=fe(await j.arrayBuffer());return await U(se)}}static fromTensor(j,se="CHW"){if(j.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${j.dims.length} dimensions.`);if(se==="CHW")j=j.transpose(1,2,0);else if(se!=="HWC")throw new Error(`Unsupported channel format: ${se}`);if(!(j.data instanceof Uint8ClampedArray||j.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${j.type}`);switch(j.dims[2]){case 1:case 2:case 3:case 4:return new Ce(j.data,j.dims[1],j.dims[0],j.dims[2]);default:throw new Error(`Unsupported number of channels: ${j.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const j=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let se=0,xe=0;se<this.data.length;se+=this.channels){const te=this.data[se],ee=this.data[se+1],G=this.data[se+2];j[xe++]=Math.round(.2989*te+.587*ee+.114*G)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(j,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const j=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let se=0,xe=0;se<this.data.length;++se)j[xe++]=this.data[se],j[xe++]=this.data[se],j[xe++]=this.data[se];break;case 4:for(let se=0,xe=0;se<this.data.length;se+=4)j[xe++]=this.data[se],j[xe++]=this.data[se+1],j[xe++]=this.data[se+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(j,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const j=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let se=0,xe=0;se<this.data.length;++se)j[xe++]=this.data[se],j[xe++]=this.data[se],j[xe++]=this.data[se],j[xe++]=255;break;case 3:for(let se=0,xe=0;se<this.data.length;se+=3)j[xe++]=this.data[se],j[xe++]=this.data[se+1],j[xe++]=this.data[se+2],j[xe++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(j,this.width,this.height,4)}async resize(j,se,{resample:xe=2}={}){let te=X[xe]??xe;if(Te){const ee=this.channels,G=this.toCanvas(),B=O(j,se).getContext("2d");return B.drawImage(G,0,0,j,se),new Ce(B.getImageData(0,0,j,se).data,j,se,4).convert(ee)}else{let ee=this.toSharp();switch(te){case"box":case"hamming":(te==="box"||te==="hamming")&&(console.warn(`Resampling method ${te} is not yet supported. Using bilinear instead.`),te="bilinear");case"nearest":case"bilinear":case"bicubic":ee=ee.affine([j/this.width,0,0,se/this.height],{interpolator:te});break;case"lanczos":ee=ee.resize({width:j,height:se,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${te} is not supported.`)}return await U(ee)}}async pad([j,se,xe,te]){if(j=Math.max(j,0),se=Math.max(se,0),xe=Math.max(xe,0),te=Math.max(te,0),j===0&&se===0&&xe===0&&te===0)return this;if(Te){const ee=this.channels,G=this.toCanvas(),B=this.width+j+se,q=this.height+xe+te,I=O(B,q).getContext("2d");return I.drawImage(G,0,0,this.width,this.height,j,xe,B,q),new Ce(I.getImageData(0,0,B,q).data,B,q,4).convert(ee)}else{const ee=this.toSharp().extend({left:j,right:se,top:xe,bottom:te});return await U(ee)}}async crop([j,se,xe,te]){if(j=Math.max(j,0),se=Math.max(se,0),xe=Math.min(xe,this.width-1),te=Math.min(te,this.height-1),j===0&&se===0&&xe===this.width-1&&te===this.height-1)return this;const ee=xe-j+1,G=te-se+1;if(Te){const B=this.channels,q=this.toCanvas(),I=O(ee,G).getContext("2d");return I.drawImage(q,j,se,ee,G,0,0,ee,G),new Ce(I.getImageData(0,0,ee,G).data,ee,G,4).convert(B)}else{const B=this.toSharp().extract({left:j,top:se,width:ee,height:G});return await U(B)}}async center_crop(j,se){if(this.width===j&&this.height===se)return this;const xe=(this.width-j)/2,te=(this.height-se)/2;if(Te){const ee=this.channels,G=this.toCanvas(),B=O(j,se).getContext("2d");let q=0,I=0,be=0,$e=0;return xe>=0?q=xe:be=-xe,te>=0?I=te:$e=-te,B.drawImage(G,q,I,j,se,be,$e,j,se),new Ce(B.getImageData(0,0,j,se).data,j,se,4).convert(ee)}else{let ee=this.toSharp();if(xe>=0&&te>=0)ee=ee.extract({left:Math.floor(xe),top:Math.floor(te),width:j,height:se});else if(xe<=0&&te<=0){const G=Math.floor(-te),B=Math.floor(-xe);ee=ee.extend({top:G,left:B,right:j-this.width-B,bottom:se-this.height-G})}else{let G=[0,0],B=0;te<0?(G[0]=Math.floor(-te),G[1]=se-this.height-G[0]):B=Math.floor(te);let q=[0,0],I=0;xe<0?(q[0]=Math.floor(-xe),q[1]=j-this.width-q[0]):I=Math.floor(xe),ee=ee.extend({top:G[0],bottom:G[1],left:q[0],right:q[1]}).extract({left:I,top:B,width:j,height:se})}return await U(ee)}}async toBlob(j="image/png",se=1){if(!Te)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:j,quality:se})}toTensor(j="CHW"){let se=new ne.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(j!=="HWC")if(j==="CHW")se=se.permute(2,0,1);else throw new Error(`Unsupported channel format: ${j}`);return se}toCanvas(){if(!Te)throw new Error("toCanvas() is only supported in browser environments.");const j=this.clone().rgba(),se=O(j.width,j.height),xe=new M(j.data,j.width,j.height);return se.getContext("2d").putImageData(xe,0,0),se}_update(j,se,xe,te=null){return this.data=j,this.width=se,this.height=xe,te!==null&&(this.channels=te),this}clone(){return new Ce(this.data.slice(),this.width,this.height,this.channels)}convert(j){if(this.channels===j)return this;switch(j){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(j){if(Te){if(R)throw new Error("Unable to save an image from a Web Worker.");const se=j.split(".").pop().toLowerCase(),xe=le.get(se)??"image/png",te=await this.toBlob(xe),ee=URL.createObjectURL(te),G=document.createElement("a");G.href=ee,G.download=j,G.click(),G.remove()}else{if(J.env.useFS)return await this.toSharp().toFile(j);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(Te)throw new Error("toSharp() is only supported in server-side environments.");return fe(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}},"./src/utils/maths.js":(ae,L,T)=>{T.r(L),T.d(L,{FFT:()=>ve,bankers_round:()=>xe,cos_sim:()=>R,dot:()=>Te,dynamic_time_warping:()=>te,interpolate_data:()=>C,log_softmax:()=>fe,magnitude:()=>O,max:()=>U,medianFilter:()=>j,min:()=>M,permute_data:()=>J,round:()=>se,softmax:()=>ne});function C(ee,[G,B,q],[I,be],$e="bilinear",Ae=!1){const je=be/q,De=I/B,ft=new ee.constructor(I*be*G),dt=B*q,gt=I*be;for(let Ee=0;Ee<I;++Ee)for(let H=0;H<be;++H){const we=Ee*be+H,Pe=(H+.5)/je-.5,Qe=(Ee+.5)/De-.5;let _t=Math.floor(Pe),ce=Math.floor(Qe);const Ue=Math.min(_t+1,q-1),ct=Math.min(ce+1,B-1);_t=Math.max(_t,0),ce=Math.max(ce,0);const Ve=Pe-_t,Mt=Qe-ce,Et=(1-Ve)*(1-Mt),tt=Ve*(1-Mt),Y=(1-Ve)*Mt,ze=Ve*Mt,nt=ce*q,at=ct*q,Ze=nt+_t,He=nt+Ue,mt=at+_t,wt=at+Ue;for(let Lt=0;Lt<G;++Lt){const kt=Lt*dt;ft[Lt*gt+we]=Et*ee[kt+Ze]+tt*ee[kt+He]+Y*ee[kt+mt]+ze*ee[kt+wt]}}return ft}function J(ee,G,B){const q=new Array(B.length),I=new Array(B.length);for(let Ae=B.length-1,je=1;Ae>=0;--Ae)I[Ae]=je,q[Ae]=G[B[Ae]],je*=q[Ae];const be=B.map((Ae,je)=>I[B.indexOf(je)]),$e=new ee.constructor(ee.length);for(let Ae=0;Ae<ee.length;++Ae){let je=0;for(let De=G.length-1,ft=Ae;De>=0;--De)je+=ft%G[De]*be[De],ft=Math.floor(ft/G[De]);$e[je]=ee[Ae]}return[$e,q]}function ne(ee){const G=U(ee)[0],B=ee.map(be=>Math.exp(be-G)),q=B.reduce((be,$e)=>be+$e,0);return B.map(be=>be/q)}function fe(ee){const G=U(ee)[0];let B=0;for(let be=0;be<ee.length;++be)B+=Math.exp(ee[be]-G);const q=Math.log(B);return ee.map(be=>be-G-q)}function Te(ee,G){let B=0;for(let q=0;q<ee.length;++q)B+=ee[q]*G[q];return B}function R(ee,G){const B=Te(ee,G),q=O(ee),I=O(G);return B/(q*I)}function O(ee){return Math.sqrt(ee.reduce((G,B)=>G+B*B,0))}function M(ee){if(ee.length===0)throw Error("Array must not be empty");let G=ee[0],B=0;for(let q=1;q<ee.length;++q)ee[q]<G&&(G=ee[q],B=q);return[G,B]}function U(ee){if(ee.length===0)throw Error("Array must not be empty");let G=ee[0],B=0;for(let q=1;q<ee.length;++q)ee[q]>G&&(G=ee[q],B=q);return[Number(G),B]}function X(ee){return ee>0&&(ee&ee-1)===0}class le{constructor(G){if(this.size=G|0,this.size<=1||!X(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=G<<1,this.table=new Float64Array(this.size*2);for(let q=0;q<this.table.length;q+=2){const I=Math.PI*q/this.size;this.table[q]=Math.cos(I),this.table[q+1]=-Math.sin(I)}let B=0;for(let q=1;this.size>q;q<<=1)++B;this._width=B%2===0?B-1:B,this._bitrev=new Int32Array(1<<this._width);for(let q=0;q<this._bitrev.length;++q){this._bitrev[q]=0;for(let I=0;I<this._width;I+=2){const be=this._width-I-2;this._bitrev[q]|=(q>>>I&3)<<be}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(G,B){const q=B||new Array(G.length>>>1);for(let I=0;I<G.length;I+=2)q[I>>>1]=G[I];return q}toComplexArray(G,B){const q=B||this.createComplexArray();for(let I=0;I<q.length;I+=2)q[I]=G[I>>>1],q[I+1]=0;return q}transform(G,B){if(G===B)throw new Error("Input and output buffers must be different");this._transform4(G,B,1)}realTransform(G,B){if(G===B)throw new Error("Input and output buffers must be different");this._realTransform4(G,B,1)}inverseTransform(G,B){if(G===B)throw new Error("Input and output buffers must be different");this._transform4(G,B,-1);for(let q=0;q<G.length;++q)G[q]/=this.size}_transform4(G,B,q){const I=this._csize;let $e=1<<this._width,Ae=I/$e<<1,je,De;const ft=this._bitrev;if(Ae===4)for(je=0,De=0;je<I;je+=Ae,++De){const gt=ft[De];this._singleTransform2(B,G,je,gt,$e)}else for(je=0,De=0;je<I;je+=Ae,++De){const gt=ft[De];this._singleTransform4(B,G,je,gt,$e,q)}const dt=this.table;for($e>>=2;$e>=2;$e>>=2){Ae=I/$e<<1;const gt=Ae>>>2;for(je=0;je<I;je+=Ae){const Ee=je+gt-1;for(let H=je,we=0;H<Ee;H+=2,we+=$e){const Pe=H,Qe=Pe+gt,_t=Qe+gt,ce=_t+gt,Ue=G[Pe],ct=G[Pe+1],Ve=G[Qe],Mt=G[Qe+1],Et=G[_t],tt=G[_t+1],Y=G[ce],ze=G[ce+1],nt=dt[we],at=q*dt[we+1],Ze=Ve*nt-Mt*at,He=Ve*at+Mt*nt,mt=dt[2*we],wt=q*dt[2*we+1],Lt=Et*mt-tt*wt,kt=Et*wt+tt*mt,$=dt[3*we],Z=q*dt[3*we+1],z=Y*$-ze*Z,ue=Y*Z+ze*$,Me=Ue+Lt,it=ct+kt,et=Ue-Lt,At=ct-kt,ot=Ze+z,yt=He+ue,E=q*(Ze-z),c=q*(He-ue);G[Pe]=Me+ot,G[Pe+1]=it+yt,G[Qe]=et+c,G[Qe+1]=At-E,G[_t]=Me-ot,G[_t+1]=it-yt,G[ce]=et-c,G[ce+1]=At+E}}}}_singleTransform2(G,B,q,I,be){const $e=G[I],Ae=G[I+1],je=G[I+be],De=G[I+be+1];B[q]=$e+je,B[q+1]=Ae+De,B[q+2]=$e-je,B[q+3]=Ae-De}_singleTransform4(G,B,q,I,be,$e){const Ae=be*2,je=be*3,De=G[I],ft=G[I+1],dt=G[I+be],gt=G[I+be+1],Ee=G[I+Ae],H=G[I+Ae+1],we=G[I+je],Pe=G[I+je+1],Qe=De+Ee,_t=ft+H,ce=De-Ee,Ue=ft-H,ct=dt+we,Ve=gt+Pe,Mt=$e*(dt-we),Et=$e*(gt-Pe);B[q]=Qe+ct,B[q+1]=_t+Ve,B[q+2]=ce+Et,B[q+3]=Ue-Mt,B[q+4]=Qe-ct,B[q+5]=_t-Ve,B[q+6]=ce-Et,B[q+7]=Ue+Mt}_realTransform4(G,B,q){const I=this._csize;let $e=1<<this._width,Ae=I/$e<<1,je,De;const ft=this._bitrev;if(Ae===4)for(je=0,De=0;je<I;je+=Ae,++De){const Ee=ft[De];this._singleRealTransform2(B,G,je,Ee>>>1,$e>>>1)}else for(je=0,De=0;je<I;je+=Ae,++De){const Ee=ft[De];this._singleRealTransform4(B,G,je,Ee>>>1,$e>>>1,q)}const dt=this.table;for($e>>=2;$e>=2;$e>>=2){Ae=I/$e<<1;const Ee=Ae>>>1,H=Ee>>>1,we=H>>>1;for(je=0;je<I;je+=Ae)for(let Pe=0,Qe=0;Pe<=we;Pe+=2,Qe+=$e){const _t=je+Pe,ce=_t+H,Ue=ce+H,ct=Ue+H,Ve=G[_t],Mt=G[_t+1],Et=G[ce],tt=G[ce+1],Y=G[Ue],ze=G[Ue+1],nt=G[ct],at=G[ct+1],Ze=Ve,He=Mt,mt=dt[Qe],wt=q*dt[Qe+1],Lt=Et*mt-tt*wt,kt=Et*wt+tt*mt,$=dt[2*Qe],Z=q*dt[2*Qe+1],z=Y*$-ze*Z,ue=Y*Z+ze*$,Me=dt[3*Qe],it=q*dt[3*Qe+1],et=nt*Me-at*it,At=nt*it+at*Me,ot=Ze+z,yt=He+ue,E=Ze-z,c=He-ue,m=Lt+et,V=kt+At,me=q*(Lt-et),ke=q*(kt-At);if(G[_t]=ot+m,G[_t+1]=yt+V,G[ce]=E+ke,G[ce+1]=c-me,Pe===0){G[Ue]=ot-m,G[Ue+1]=yt-V;continue}if(Pe===we)continue;const Ge=je+H-Pe,sr=je+Ee-Pe;G[Ge]=E-q*ke,G[Ge+1]=-c-q*me,G[sr]=ot-q*m,G[sr+1]=-yt+q*V}}const gt=I>>>1;for(let Ee=2;Ee<gt;Ee+=2)G[I-Ee]=G[Ee],G[I-Ee+1]=-G[Ee+1]}_singleRealTransform2(G,B,q,I,be){const $e=G[I],Ae=G[I+be];B[q]=$e+Ae,B[q+1]=0,B[q+2]=$e-Ae,B[q+3]=0}_singleRealTransform4(G,B,q,I,be,$e){const Ae=be*2,je=be*3,De=G[I],ft=G[I+be],dt=G[I+Ae],gt=G[I+je],Ee=De+dt,H=De-dt,we=ft+gt,Pe=$e*(ft-gt);B[q]=Ee+we,B[q+1]=0,B[q+2]=H,B[q+3]=-Pe,B[q+4]=Ee-we,B[q+5]=0,B[q+6]=H,B[q+7]=Pe}}class Ce{constructor(G){const B=2*(G-1),q=2*(2*G-1),I=2**Math.ceil(Math.log2(q));this.bufferSize=I,this._a=B;const be=new Float64Array(q),$e=new Float64Array(I);this._chirpBuffer=new Float64Array(I),this._buffer1=new Float64Array(I),this._buffer2=new Float64Array(I),this._outBuffer1=new Float64Array(I),this._outBuffer2=new Float64Array(I);const Ae=-2*Math.PI/G,je=Math.cos(Ae),De=Math.sin(Ae);for(let ft=0;ft<q>>1;++ft){const dt=(ft+1-G)**2/2,gt=Math.sqrt(je**2+De**2)**dt,Ee=dt*Math.atan2(De,je),H=2*ft;be[H]=gt*Math.cos(Ee),be[H+1]=gt*Math.sin(Ee),$e[H]=be[H],$e[H+1]=-be[H+1]}this._slicedChirpBuffer=be.subarray(B,q),this._f=new le(I>>1),this._f.transform(this._chirpBuffer,$e)}_transform(G,B,q){const I=this._buffer1,be=this._buffer2,$e=this._outBuffer1,Ae=this._outBuffer2,je=this._chirpBuffer,De=this._slicedChirpBuffer,ft=this._a;if(q)for(let dt=0;dt<De.length;dt+=2){const gt=dt+1,Ee=dt>>1,H=B[Ee];I[dt]=H*De[dt],I[gt]=H*De[gt]}else for(let dt=0;dt<De.length;dt+=2){const gt=dt+1;I[dt]=B[dt]*De[dt]-B[gt]*De[gt],I[gt]=B[dt]*De[gt]+B[gt]*De[dt]}this._f.transform($e,I);for(let dt=0;dt<je.length;dt+=2){const gt=dt+1;be[dt]=$e[dt]*je[dt]-$e[gt]*je[gt],be[gt]=$e[dt]*je[gt]+$e[gt]*je[dt]}this._f.inverseTransform(Ae,be);for(let dt=0;dt<Ae.length;dt+=2){const gt=Ae[dt+ft],Ee=Ae[dt+ft+1],H=De[dt],we=De[dt+1];G[dt]=gt*H-Ee*we,G[dt+1]=gt*we+Ee*H}}transform(G,B){this._transform(G,B,!1)}realTransform(G,B){this._transform(G,B,!0)}}class ve{constructor(G){this.fft_length=G,this.isPowerOfTwo=X(G),this.isPowerOfTwo?(this.fft=new le(G),this.outputBufferSize=2*G):(this.fft=new Ce(G),this.outputBufferSize=this.fft.bufferSize)}realTransform(G,B){this.fft.realTransform(G,B)}transform(G,B){this.fft.transform(G,B)}}function j(ee,G){if(G%2===0||G<=0)throw new Error("Window size must be a positive odd number");const B=new ee.constructor(ee.length),q=new ee.constructor(G),I=Math.floor(G/2);for(let be=0;be<ee.length;++be){let $e=0;for(let Ae=-I;Ae<=I;++Ae){let je=be+Ae;je<0?je=Math.abs(je):je>=ee.length&&(je=2*(ee.length-1)-je),q[$e++]=ee[je]}q.sort(),B[be]=q[I]}return B}function se(ee,G){const B=Math.pow(10,G);return Math.round(ee*B)/B}function xe(ee){const G=Math.round(ee);return Math.abs(ee)%1===.5?G%2===0?G:G-1:G}function te(ee){const G=ee.length,B=ee[0].length,q=[G+1,B+1],I=Array.from({length:q[0]},()=>Array(q[1]).fill(1/0));I[0][0]=0;const be=Array.from({length:q[0]},()=>Array(q[1]).fill(-1));for(let ft=1;ft<q[1];++ft)for(let dt=1;dt<q[0];++dt){const gt=I[dt-1][ft-1],Ee=I[dt-1][ft],H=I[dt][ft-1];let we,Pe;gt<Ee&&gt<H?(we=gt,Pe=0):Ee<gt&&Ee<H?(we=Ee,Pe=1):(we=H,Pe=2),I[dt][ft]=ee[dt-1][ft-1]+we,be[dt][ft]=Pe}for(let ft=0;ft<q[1];++ft)be[0][ft]=2;for(let ft=0;ft<q[0];++ft)be[ft][0]=1;let $e=G,Ae=B,je=[],De=[];for(;$e>0||Ae>0;)switch(je.push($e-1),De.push(Ae-1),be[$e][Ae]){case 0:--$e,--Ae;break;case 1:--$e;break;case 2:--Ae;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${$e}, ${Ae}]. Please file a bug report.`)}return je.reverse(),De.reverse(),[je,De]}},"./src/utils/tensor.js":(ae,L,T)=>{T.r(L),T.d(L,{Tensor:()=>Te,cat:()=>ee,full:()=>$e,full_like:()=>Ae,interpolate:()=>M,interpolate_4d:()=>U,layer_norm:()=>j,matmul:()=>X,mean:()=>q,mean_pooling:()=>ve,ones:()=>je,ones_like:()=>De,permute:()=>O,quantize_embeddings:()=>gt,rfft:()=>le,stack:()=>G,std_mean:()=>B,topk:()=>Ce,zeros:()=>ft,zeros_like:()=>dt});var C=T("./src/utils/maths.js"),J=T("./src/backends/onnx.js"),ne=T("./src/ops/registry.js");const fe=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array});class Te{get dims(){return this.ort_tensor.dims}set dims(H){this.ort_tensor.dims=H}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...H){return(0,J.isONNXTensor)(H[0])?this.ort_tensor=H[0]:this.ort_tensor=new J.Tensor(H[0],H[1],H[2]),new Proxy(this,{get:(we,Pe)=>{if(typeof Pe=="string"){let Qe=Number(Pe);if(Number.isInteger(Qe))return we._getitem(Qe)}return we[Pe]},set:(we,Pe,Qe)=>we[Pe]=Qe})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[H,...we]=this.dims;if(we.length>0){const Pe=we.reduce((Qe,_t)=>Qe*_t);for(let Qe=0;Qe<H;++Qe)yield this._subarray(Qe,Pe,we)}else yield*this.data}_getitem(H){const[we,...Pe]=this.dims;if(H=te(H,we),Pe.length>0){const Qe=Pe.reduce((_t,ce)=>_t*ce);return this._subarray(H,Qe,Pe)}else return new Te(this.type,[this.data[H]],Pe)}indexOf(H){const we=this.data;for(let Pe=0;Pe<we.length;++Pe)if(we[Pe]==H)return Pe;return-1}_subarray(H,we,Pe){const Qe=H*we,_t=(H+1)*we,ce="subarray"in this.data?this.data.subarray(Qe,_t):this.data.slice(Qe,_t);return new Te(this.type,ce,Pe)}item(){const H=this.data;if(H.length!==1)throw new Error(`a Tensor with ${H.length} elements cannot be converted to Scalar`);return H[0]}tolist(){return R(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const H=this.data;for(let we=0;we<H.length;++we)H[we]=1/(1+Math.exp(-H[we]));return this}map(H){return this.clone().map_(H)}map_(H){const we=this.data;for(let Pe=0;Pe<we.length;++Pe)we[Pe]=H(we[Pe],Pe,we);return this}mul(H){return this.clone().mul_(H)}mul_(H){const we=this.data;for(let Pe=0;Pe<we.length;++Pe)we[Pe]*=H;return this}div(H){return this.clone().div_(H)}div_(H){const we=this.data;for(let Pe=0;Pe<we.length;++Pe)we[Pe]/=H;return this}add(H){return this.clone().add_(H)}add_(H){const we=this.data;for(let Pe=0;Pe<we.length;++Pe)we[Pe]+=H;return this}sub(H){return this.clone().sub_(H)}sub_(H){const we=this.data;for(let Pe=0;Pe<we.length;++Pe)we[Pe]-=H;return this}clone(){return new Te(this.type,this.data.slice(),this.dims.slice())}slice(...H){const we=[],Pe=[];for(let Ve=0;Ve<this.dims.length;++Ve){let Mt=H[Ve];if(Mt==null)Pe.push([0,this.dims[Ve]]),we.push(this.dims[Ve]);else if(typeof Mt=="number")Mt=te(Mt,this.dims[Ve],Ve),Pe.push([Mt,Mt+1]);else if(Array.isArray(Mt)&&Mt.length===2){let[Et,tt]=Mt;if(Et=Et===null?0:te(Et,this.dims[Ve],Ve,!1),tt=tt===null?this.dims[Ve]:te(tt,this.dims[Ve],Ve,!1),Et>tt)throw new Error(`Invalid slice: ${Mt}`);const Y=[Math.max(Et,0),Math.min(tt,this.dims[Ve])];Pe.push(Y),we.push(Y[1]-Y[0])}else throw new Error(`Invalid slice: ${Mt}`)}const Qe=Pe.map(([Ve,Mt])=>Mt-Ve),_t=Qe.reduce((Ve,Mt)=>Ve*Mt),ce=this.data,Ue=new ce.constructor(_t),ct=this.stride();for(let Ve=0;Ve<_t;++Ve){let Mt=0;for(let Et=Qe.length-1,tt=Ve;Et>=0;--Et){const Y=Qe[Et];Mt+=(tt%Y+Pe[Et][0])*ct[Et],tt=Math.floor(tt/Y)}Ue[Ve]=ce[Mt]}return new Te(this.type,Ue,we)}permute(...H){return O(this,H)}transpose(...H){return this.permute(...H)}sum(H=null,we=!1){return this.norm(1,H,we)}norm(H="fro",we=null,Pe=!1){if(H==="fro")H=2;else if(typeof H=="string")throw Error(`Unsupported norm: ${H}`);const Qe=this.data;if(we===null){let Ue=Qe.reduce((ct,Ve)=>ct+Ve**H,0)**(1/H);return new Te(this.type,[Ue],[])}we=te(we,this.dims.length);const _t=this.dims.slice();_t[we]=1;const ce=new Qe.constructor(Qe.length/this.dims[we]);for(let Ue=0;Ue<Qe.length;++Ue){let ct=0;for(let Ve=this.dims.length-1,Mt=Ue,Et=1;Ve>=0;--Ve){const tt=this.dims[Ve];if(Ve!==we){const Y=Mt%tt;ct+=Y*Et,Et*=_t[Ve]}Mt=Math.floor(Mt/tt)}ce[ct]+=Qe[Ue]**H}if(H!==1)for(let Ue=0;Ue<ce.length;++Ue)ce[Ue]=ce[Ue]**(1/H);return Pe||_t.splice(we,1),new Te(this.type,ce,_t)}normalize_(H=2,we=1){we=te(we,this.dims.length);const Pe=this.norm(H,we,!0),Qe=this.data,_t=Pe.data;for(let ce=0;ce<Qe.length;++ce){let Ue=0;for(let ct=this.dims.length-1,Ve=ce,Mt=1;ct>=0;--ct){const Et=this.dims[ct];if(ct!==we){const tt=Ve%Et;Ue+=tt*Mt,Mt*=this.dims[ct]}Ve=Math.floor(Ve/Et)}Qe[ce]/=_t[Ue]}return this}normalize(H=2,we=1){return this.clone().normalize_(H,we)}stride(){return I(this.dims)}squeeze(H=null){return new Te(this.type,this.data,se(this.dims,H))}squeeze_(H=null){return this.dims=se(this.dims,H),this}unsqueeze(H=null){return new Te(this.type,this.data,xe(this.dims,H))}unsqueeze_(H=null){return this.dims=xe(this.dims,H),this}flatten_(H=0,we=-1){we=(we+this.dims.length)%this.dims.length;let Pe=this.dims.slice(0,H),Qe=this.dims.slice(H,we+1),_t=this.dims.slice(we+1);return this.dims=[...Pe,Qe.reduce((ce,Ue)=>ce*Ue,1),..._t],this}flatten(H=0,we=-1){return this.clone().flatten_(H,we)}view(...H){let we=-1;for(let Qe=0;Qe<H.length;++Qe)if(H[Qe]===-1){if(we!==-1)throw new Error("Only one dimension can be inferred");we=Qe}const Pe=this.data;if(we!==-1){const Qe=H.reduce((_t,ce,Ue)=>Ue!==we?_t*ce:_t,1);H[we]=Pe.length/Qe}return new Te(this.type,Pe,H)}neg_(){const H=this.data;for(let we=0;we<H.length;++we)H[we]=-H[we];return this}neg(){return this.clone().neg_()}clamp_(H,we){const Pe=this.data;for(let Qe=0;Qe<Pe.length;++Qe)Pe[Qe]=Math.min(Math.max(Pe[Qe],H),we);return this}clamp(H,we){return this.clone().clamp_(H,we)}round_(){const H=this.data;for(let we=0;we<H.length;++we)H[we]=Math.round(H[we]);return this}round(){return this.clone().round_()}mean(H=null,we=!1){return q(this,H,we)}to(H){if(this.type===H)return this;if(!fe.hasOwnProperty(H))throw new Error(`Unsupported type: ${H}`);return new Te(H,fe[H].from(this.data),this.dims)}}function R(Ee,H){const we=Ee.length,Pe=H.reduce((_t,ce)=>_t*ce);if(we!==Pe)throw Error(`cannot reshape array of size ${we} into shape (${H})`);let Qe=Ee;for(let _t=H.length-1;_t>=0;_t--)Qe=Qe.reduce((ce,Ue)=>{let ct=ce[ce.length-1];return ct.length<H[_t]?ct.push(Ue):ce.push([Ue]),ce},[[]]);return Qe[0]}function O(Ee,H){const[we,Pe]=(0,C.permute_data)(Ee.data,Ee.dims,H);return new Te(Ee.type,we,Pe)}function M(Ee,[H,we],Pe="bilinear",Qe=!1){const _t=Ee.dims.at(-3)??1,ce=Ee.dims.at(-2),Ue=Ee.dims.at(-1);let ct=(0,C.interpolate_data)(Ee.data,[_t,ce,Ue],[H,we],Pe,Qe);return new Te(Ee.type,ct,[_t,H,we])}async function U(Ee,{size:H=null,mode:we="bilinear"}={}){if(Ee.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!H)throw new Error("`interpolate_4d` requires a `size` argument.");let Pe;if(H.length===2)Pe=[...Ee.dims.slice(0,2),...H];else if(H.length===3)Pe=[Ee.dims[0],...H];else if(H.length===4)Pe=H;else throw new Error("`size` must be of length 2, 3, or 4.");let Qe;if(we==="bilinear")Qe=await ne.TensorOpRegistry.bilinear_interpolate_4d;else if(we==="bicubic")Qe=await ne.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${we}`);const _t=new Te("int64",new BigInt64Array(Pe.map(BigInt)),[Pe.length]);return await Qe({x:Ee,s:_t})}async function X(Ee,H){return await(await ne.TensorOpRegistry.matmul)({a:Ee,b:H})}async function le(Ee,H){return await(await ne.TensorOpRegistry.rfft)({x:Ee,a:H})}async function Ce(Ee,H){const we=await ne.TensorOpRegistry.top_k;return H===null?H=Ee.dims.at(-1):H=Math.min(H,Ee.dims.at(-1)),await we({x:Ee,k:new Te("int64",[BigInt(H)],[1])})}function ve(Ee,H){const we=Ee.data,Pe=H.data,Qe=[Ee.dims[0],Ee.dims[2]],_t=new we.constructor(Qe[0]*Qe[1]),[ce,Ue,ct]=Ee.dims;let Ve=0;for(let Mt=0;Mt<ce;++Mt){const Et=Mt*ct*Ue;for(let tt=0;tt<ct;++tt){let Y=0,ze=0;const nt=Mt*Ue,at=Et+tt;for(let He=0;He<Ue;++He){const mt=Number(Pe[nt+He]);ze+=mt,Y+=we[at+He*ct]*mt}const Ze=Y/ze;_t[Ve++]=Ze}}return new Te(Ee.type,_t,Qe)}function j(Ee,H,{eps:we=1e-5}={}){if(Ee.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[Pe,Qe]=Ee.dims;if(H.length!==1&&H[0]!==Qe)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[_t,ce]=B(Ee,1,0,!0),Ue=_t.data,ct=ce.data,Ve=Ee.data,Mt=new Ve.constructor(Ve.length);for(let Et=0;Et<Pe;++Et){const tt=Et*Qe;for(let Y=0;Y<Qe;++Y){const ze=tt+Y;Mt[ze]=(Ve[ze]-ct[Et])/(Ue[Et]+we)}}return new Te(Ee.type,Mt,Ee.dims)}function se(Ee,H){return Ee=Ee.slice(),H===null?Ee=Ee.filter(we=>we!==1):typeof H=="number"?Ee[H]===1&&Ee.splice(H,1):Array.isArray(H)&&(Ee=Ee.filter((we,Pe)=>we!==1||!H.includes(Pe))),Ee}function xe(Ee,H){return H=te(H,Ee.length+1),Ee=Ee.slice(),Ee.splice(H,0,1),Ee}function te(Ee,H,we=null,Pe=!0){if(Pe&&(Ee<-H||Ee>=H))throw new Error(`IndexError: index ${Ee} is out of bounds for dimension${we===null?"":" "+we} with size ${H}`);return Ee<0&&(Ee=(Ee%H+H)%H),Ee}function ee(Ee,H=0){H=te(H,Ee[0].dims.length);const we=Ee[0].dims.slice();we[H]=Ee.reduce((ce,Ue)=>ce+Ue.dims[H],0);const Pe=we.reduce((ce,Ue)=>ce*Ue,1),Qe=new Ee[0].data.constructor(Pe),_t=Ee[0].type;if(H===0){let ce=0;for(const Ue of Ee){const ct=Ue.data;Qe.set(ct,ce),ce+=ct.length}}else{let ce=0;for(let Ue=0;Ue<Ee.length;++Ue){const{data:ct,dims:Ve}=Ee[Ue];for(let Mt=0;Mt<ct.length;++Mt){let Et=0;for(let tt=Ve.length-1,Y=Mt,ze=1;tt>=0;--tt){const nt=Ve[tt];let at=Y%nt;tt===H&&(at+=ce),Et+=at*ze,ze*=we[tt],Y=Math.floor(Y/nt)}Qe[Et]=ct[Mt]}ce+=Ve[H]}}return new Te(_t,Qe,we)}function G(Ee,H=0){return ee(Ee.map(we=>we.unsqueeze(H)),H)}function B(Ee,H=null,we=1,Pe=!1){const Qe=Ee.data,_t=Ee.dims;if(H===null){const tt=Qe.reduce((at,Ze)=>at+Ze,0)/Qe.length,Y=Math.sqrt(Qe.reduce((at,Ze)=>at+(Ze-tt)**2,0)/(Qe.length-we)),ze=new Te(Ee.type,[tt],[]);return[new Te(Ee.type,[Y],[]),ze]}H=te(H,_t.length);const ce=q(Ee,H,Pe),Ue=ce.data,ct=_t.slice();ct[H]=1;const Ve=new Qe.constructor(Qe.length/_t[H]);for(let Et=0;Et<Qe.length;++Et){let tt=0;for(let Y=_t.length-1,ze=Et,nt=1;Y>=0;--Y){const at=_t[Y];if(Y!==H){const Ze=ze%at;tt+=Ze*nt,nt*=ct[Y]}ze=Math.floor(ze/at)}Ve[tt]+=(Qe[Et]-Ue[tt])**2}for(let Et=0;Et<Ve.length;++Et)Ve[Et]=Math.sqrt(Ve[Et]/(_t[H]-we));return Pe||ct.splice(H,1),[new Te(Ee.type,Ve,ct),ce]}function q(Ee,H=null,we=!1){const Pe=Ee.data;if(H===null){const Ue=Pe.reduce((ct,Ve)=>ct+Ve,0);return new Te(Ee.type,[Ue/Pe.length],[])}const Qe=Ee.dims;H=te(H,Qe.length);const _t=Qe.slice();_t[H]=1;const ce=new Pe.constructor(Pe.length/Qe[H]);for(let Ue=0;Ue<Pe.length;++Ue){let ct=0;for(let Ve=Qe.length-1,Mt=Ue,Et=1;Ve>=0;--Ve){const tt=Qe[Ve];if(Ve!==H){const Y=Mt%tt;ct+=Y*Et,Et*=_t[Ve]}Mt=Math.floor(Mt/tt)}ce[ct]+=Pe[Ue]}if(Qe[H]!==1)for(let Ue=0;Ue<ce.length;++Ue)ce[Ue]=ce[Ue]/Qe[H];return we||_t.splice(H,1),new Te(Ee.type,ce,_t)}function I(Ee){const H=new Array(Ee.length);for(let we=Ee.length-1,Pe=1;we>=0;--we)H[we]=Pe,Pe*=Ee[we];return H}function be(Ee,H,we,Pe){const Qe=Ee.reduce((_t,ce)=>_t*ce,1);return new Te(we,new Pe(Qe).fill(H),Ee)}function $e(Ee,H){let we,Pe;if(typeof H=="number")we="float32",Pe=Float32Array;else if(typeof H=="bigint")we="int64",Pe=BigInt64Array;else throw new Error(`Unsupported data type: ${typeof H}`);return be(Ee,H,we,Pe)}function Ae(Ee,H){return $e(Ee.dims,H)}function je(Ee){return be(Ee,1n,"int64",BigInt64Array)}function De(Ee){return je(Ee.dims)}function ft(Ee){return be(Ee,0n,"int64",BigInt64Array)}function dt(Ee){return ft(Ee.dims)}function gt(Ee,H){if(Ee.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(Ee.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(H))throw new Error("The precision must be either 'binary' or 'ubinary'");const we=H==="binary",Pe=we?"int8":"uint8",Qe=we?Int8Array:Uint8Array,_t=Ee.data,ce=new Qe(_t.length/8);for(let Ue=0;Ue<_t.length;++Ue){const ct=_t[Ue]>0?1:0,Ve=Math.floor(Ue/8),Mt=Ue%8;ce[Ve]|=ct<<7-Mt,we&&Mt===0&&(ce[Ve]-=128)}return new Te(Pe,ce,[Ee.dims[0],Ee.dims[1]/8])}}},sm={};function Kr(ae){var L=sm[ae];if(L!==void 0)return L.exports;var T=sm[ae]={exports:{}};return ym[ae](T,T.exports,Kr),T.exports}Kr.m=ym;(()=>{var ae=Object.getPrototypeOf?T=>Object.getPrototypeOf(T):T=>T.__proto__,L;Kr.t=function(T,C){if(C&1&&(T=this(T)),C&8||typeof T=="object"&&T&&(C&4&&T.__esModule||C&16&&typeof T.then=="function"))return T;var J=Object.create(null);Kr.r(J);var ne={};L=L||[null,ae({}),ae([]),ae(ae)];for(var fe=C&2&&T;typeof fe=="object"&&!~L.indexOf(fe);fe=ae(fe))Object.getOwnPropertyNames(fe).forEach(Te=>ne[Te]=()=>T[Te]);return ne.default=()=>T,Kr.d(J,ne),J}})();Kr.d=(ae,L)=>{for(var T in L)Kr.o(L,T)&&!Kr.o(ae,T)&&Object.defineProperty(ae,T,{enumerable:!0,get:L[T]})};Kr.o=(ae,L)=>Object.prototype.hasOwnProperty.call(ae,L);Kr.r=ae=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(ae,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(ae,"__esModule",{value:!0})};(()=>{var ae;if(typeof import.meta.url=="string"&&(ae=import.meta.url),!ae)throw new Error("Automatic publicPath is not supported in this browser");ae=ae.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),Kr.p=ae})();Kr.b=new URL("./",import.meta.url);var p={};/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Kr.r(p);Kr.d(p,{ASTFeatureExtractor:()=>ir.ASTFeatureExtractor,ASTForAudioClassification:()=>v.ASTForAudioClassification,ASTModel:()=>v.ASTModel,ASTPreTrainedModel:()=>v.ASTPreTrainedModel,AlbertForMaskedLM:()=>v.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>v.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>v.AlbertForSequenceClassification,AlbertModel:()=>v.AlbertModel,AlbertPreTrainedModel:()=>v.AlbertPreTrainedModel,AlbertTokenizer:()=>dr.AlbertTokenizer,AudioClassificationPipeline:()=>Hr.AudioClassificationPipeline,AutoConfig:()=>Dp.AutoConfig,AutoModel:()=>v.AutoModel,AutoModelForAudioClassification:()=>v.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>v.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>v.AutoModelForCTC,AutoModelForCausalLM:()=>v.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>v.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>v.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>v.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>v.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>v.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>v.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>v.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>v.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>v.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>v.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>v.AutoModelForObjectDetection,AutoModelForQuestionAnswering:()=>v.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>v.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>v.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>v.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>v.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>v.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>v.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>v.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>v.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>v.AutoModelForVision2Seq,AutoModelForXVector:()=>v.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>v.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>ir.AutoProcessor,AutoTokenizer:()=>dr.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>Hr.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>v.BartForConditionalGeneration,BartForSequenceClassification:()=>v.BartForSequenceClassification,BartModel:()=>v.BartModel,BartPretrainedModel:()=>v.BartPretrainedModel,BartTokenizer:()=>dr.BartTokenizer,BaseModelOutput:()=>v.BaseModelOutput,BaseStreamer:()=>Lp.BaseStreamer,BeitFeatureExtractor:()=>ir.BeitFeatureExtractor,BeitForImageClassification:()=>v.BeitForImageClassification,BeitModel:()=>v.BeitModel,BeitPreTrainedModel:()=>v.BeitPreTrainedModel,BertForMaskedLM:()=>v.BertForMaskedLM,BertForQuestionAnswering:()=>v.BertForQuestionAnswering,BertForSequenceClassification:()=>v.BertForSequenceClassification,BertForTokenClassification:()=>v.BertForTokenClassification,BertModel:()=>v.BertModel,BertPreTrainedModel:()=>v.BertPreTrainedModel,BertTokenizer:()=>dr.BertTokenizer,BitImageProcessor:()=>ir.BitImageProcessor,BlenderbotForConditionalGeneration:()=>v.BlenderbotForConditionalGeneration,BlenderbotModel:()=>v.BlenderbotModel,BlenderbotPreTrainedModel:()=>v.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>v.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>v.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>v.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>dr.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>dr.BlenderbotTokenizer,BloomForCausalLM:()=>v.BloomForCausalLM,BloomModel:()=>v.BloomModel,BloomPreTrainedModel:()=>v.BloomPreTrainedModel,BloomTokenizer:()=>dr.BloomTokenizer,CLIPFeatureExtractor:()=>ir.CLIPFeatureExtractor,CLIPImageProcessor:()=>ir.CLIPImageProcessor,CLIPModel:()=>v.CLIPModel,CLIPPreTrainedModel:()=>v.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>v.CLIPSegForImageSegmentation,CLIPSegModel:()=>v.CLIPSegModel,CLIPSegPreTrainedModel:()=>v.CLIPSegPreTrainedModel,CLIPTextModel:()=>v.CLIPTextModel,CLIPTextModelWithProjection:()=>v.CLIPTextModelWithProjection,CLIPTokenizer:()=>dr.CLIPTokenizer,CLIPVisionModel:()=>v.CLIPVisionModel,CLIPVisionModelWithProjection:()=>v.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>v.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>v.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>v.CamembertForSequenceClassification,CamembertForTokenClassification:()=>v.CamembertForTokenClassification,CamembertModel:()=>v.CamembertModel,CamembertPreTrainedModel:()=>v.CamembertPreTrainedModel,CamembertTokenizer:()=>dr.CamembertTokenizer,CausalLMOutput:()=>v.CausalLMOutput,CausalLMOutputWithPast:()=>v.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>ir.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>v.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>v.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>v.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>ir.ClapFeatureExtractor,ClapModel:()=>v.ClapModel,ClapPreTrainedModel:()=>v.ClapPreTrainedModel,ClapTextModelWithProjection:()=>v.ClapTextModelWithProjection,CodeGenForCausalLM:()=>v.CodeGenForCausalLM,CodeGenModel:()=>v.CodeGenModel,CodeGenPreTrainedModel:()=>v.CodeGenPreTrainedModel,CodeGenTokenizer:()=>dr.CodeGenTokenizer,CodeLlamaTokenizer:()=>dr.CodeLlamaTokenizer,CohereForCausalLM:()=>v.CohereForCausalLM,CohereModel:()=>v.CohereModel,CoherePreTrainedModel:()=>v.CoherePreTrainedModel,CohereTokenizer:()=>dr.CohereTokenizer,ConvBertForMaskedLM:()=>v.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>v.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>v.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>v.ConvBertForTokenClassification,ConvBertModel:()=>v.ConvBertModel,ConvBertPreTrainedModel:()=>v.ConvBertPreTrainedModel,ConvBertTokenizer:()=>dr.ConvBertTokenizer,ConvNextFeatureExtractor:()=>ir.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>v.ConvNextForImageClassification,ConvNextImageProcessor:()=>ir.ConvNextImageProcessor,ConvNextModel:()=>v.ConvNextModel,ConvNextPreTrainedModel:()=>v.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>v.ConvNextV2ForImageClassification,ConvNextV2Model:()=>v.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>v.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>ir.DPTFeatureExtractor,DPTForDepthEstimation:()=>v.DPTForDepthEstimation,DPTImageProcessor:()=>ir.DPTImageProcessor,DPTModel:()=>v.DPTModel,DPTPreTrainedModel:()=>v.DPTPreTrainedModel,DebertaForMaskedLM:()=>v.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>v.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>v.DebertaForSequenceClassification,DebertaForTokenClassification:()=>v.DebertaForTokenClassification,DebertaModel:()=>v.DebertaModel,DebertaPreTrainedModel:()=>v.DebertaPreTrainedModel,DebertaTokenizer:()=>dr.DebertaTokenizer,DebertaV2ForMaskedLM:()=>v.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>v.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>v.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>v.DebertaV2ForTokenClassification,DebertaV2Model:()=>v.DebertaV2Model,DebertaV2PreTrainedModel:()=>v.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>dr.DebertaV2Tokenizer,DecisionTransformerModel:()=>v.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>v.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>ir.DeiTFeatureExtractor,DeiTForImageClassification:()=>v.DeiTForImageClassification,DeiTModel:()=>v.DeiTModel,DeiTPreTrainedModel:()=>v.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>v.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>v.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>Hr.DepthEstimationPipeline,DepthProForDepthEstimation:()=>v.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>v.DepthProPreTrainedModel,DetrFeatureExtractor:()=>ir.DetrFeatureExtractor,DetrForObjectDetection:()=>v.DetrForObjectDetection,DetrForSegmentation:()=>v.DetrForSegmentation,DetrModel:()=>v.DetrModel,DetrObjectDetectionOutput:()=>v.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>v.DetrPreTrainedModel,DetrSegmentationOutput:()=>v.DetrSegmentationOutput,Dinov2ForImageClassification:()=>v.Dinov2ForImageClassification,Dinov2Model:()=>v.Dinov2Model,Dinov2PreTrainedModel:()=>v.Dinov2PreTrainedModel,DistilBertForMaskedLM:()=>v.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>v.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>v.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>v.DistilBertForTokenClassification,DistilBertModel:()=>v.DistilBertModel,DistilBertPreTrainedModel:()=>v.DistilBertPreTrainedModel,DistilBertTokenizer:()=>dr.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>Hr.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>ir.DonutFeatureExtractor,DonutImageProcessor:()=>ir.DonutImageProcessor,DonutSwinModel:()=>v.DonutSwinModel,DonutSwinPreTrainedModel:()=>v.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>v.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>ir.EfficientNetImageProcessor,EfficientNetModel:()=>v.EfficientNetModel,EfficientNetPreTrainedModel:()=>v.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>v.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>v.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>v.ElectraForSequenceClassification,ElectraForTokenClassification:()=>v.ElectraForTokenClassification,ElectraModel:()=>v.ElectraModel,ElectraPreTrainedModel:()=>v.ElectraPreTrainedModel,ElectraTokenizer:()=>dr.ElectraTokenizer,EosTokenCriteria:()=>bd.EosTokenCriteria,EsmForMaskedLM:()=>v.EsmForMaskedLM,EsmForSequenceClassification:()=>v.EsmForSequenceClassification,EsmForTokenClassification:()=>v.EsmForTokenClassification,EsmModel:()=>v.EsmModel,EsmPreTrainedModel:()=>v.EsmPreTrainedModel,EsmTokenizer:()=>dr.EsmTokenizer,FFT:()=>Fn.FFT,FalconForCausalLM:()=>v.FalconForCausalLM,FalconModel:()=>v.FalconModel,FalconPreTrainedModel:()=>v.FalconPreTrainedModel,FalconTokenizer:()=>dr.FalconTokenizer,FastViTForImageClassification:()=>v.FastViTForImageClassification,FastViTModel:()=>v.FastViTModel,FastViTPreTrainedModel:()=>v.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>Hr.FeatureExtractionPipeline,FeatureExtractor:()=>ir.FeatureExtractor,FillMaskPipeline:()=>Hr.FillMaskPipeline,Florence2ForConditionalGeneration:()=>v.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>v.Florence2PreTrainedModel,Florence2Processor:()=>ir.Florence2Processor,GLPNFeatureExtractor:()=>ir.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>v.GLPNForDepthEstimation,GLPNModel:()=>v.GLPNModel,GLPNPreTrainedModel:()=>v.GLPNPreTrainedModel,GPT2LMHeadModel:()=>v.GPT2LMHeadModel,GPT2Model:()=>v.GPT2Model,GPT2PreTrainedModel:()=>v.GPT2PreTrainedModel,GPT2Tokenizer:()=>dr.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>v.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>v.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>v.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>v.GPTJForCausalLM,GPTJModel:()=>v.GPTJModel,GPTJPreTrainedModel:()=>v.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>v.GPTNeoForCausalLM,GPTNeoModel:()=>v.GPTNeoModel,GPTNeoPreTrainedModel:()=>v.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>v.GPTNeoXForCausalLM,GPTNeoXModel:()=>v.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>v.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>dr.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>v.Gemma2ForCausalLM,Gemma2Model:()=>v.Gemma2Model,Gemma2PreTrainedModel:()=>v.Gemma2PreTrainedModel,GemmaForCausalLM:()=>v.GemmaForCausalLM,GemmaModel:()=>v.GemmaModel,GemmaPreTrainedModel:()=>v.GemmaPreTrainedModel,GemmaTokenizer:()=>dr.GemmaTokenizer,GraniteForCausalLM:()=>v.GraniteForCausalLM,GraniteModel:()=>v.GraniteModel,GranitePreTrainedModel:()=>v.GranitePreTrainedModel,Grok1Tokenizer:()=>dr.Grok1Tokenizer,GroupViTModel:()=>v.GroupViTModel,GroupViTPreTrainedModel:()=>v.GroupViTPreTrainedModel,HerbertTokenizer:()=>dr.HerbertTokenizer,HieraForImageClassification:()=>v.HieraForImageClassification,HieraModel:()=>v.HieraModel,HieraPreTrainedModel:()=>v.HieraPreTrainedModel,HubertForCTC:()=>v.HubertForCTC,HubertForSequenceClassification:()=>v.HubertForSequenceClassification,HubertModel:()=>v.HubertModel,HubertPreTrainedModel:()=>v.HubertPreTrainedModel,ImageClassificationPipeline:()=>Hr.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>Hr.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>ir.ImageFeatureExtractor,ImageMattingOutput:()=>v.ImageMattingOutput,ImageSegmentationPipeline:()=>Hr.ImageSegmentationPipeline,ImageToImagePipeline:()=>Hr.ImageToImagePipeline,ImageToTextPipeline:()=>Hr.ImageToTextPipeline,InterruptableStoppingCriteria:()=>bd.InterruptableStoppingCriteria,JAISLMHeadModel:()=>v.JAISLMHeadModel,JAISModel:()=>v.JAISModel,JAISPreTrainedModel:()=>v.JAISPreTrainedModel,LlamaForCausalLM:()=>v.LlamaForCausalLM,LlamaModel:()=>v.LlamaModel,LlamaPreTrainedModel:()=>v.LlamaPreTrainedModel,LlamaTokenizer:()=>dr.LlamaTokenizer,LlavaForConditionalGeneration:()=>v.LlavaForConditionalGeneration,LlavaPreTrainedModel:()=>v.LlavaPreTrainedModel,LongT5ForConditionalGeneration:()=>v.LongT5ForConditionalGeneration,LongT5Model:()=>v.LongT5Model,LongT5PreTrainedModel:()=>v.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>v.M2M100ForConditionalGeneration,M2M100Model:()=>v.M2M100Model,M2M100PreTrainedModel:()=>v.M2M100PreTrainedModel,M2M100Tokenizer:()=>dr.M2M100Tokenizer,MBart50Tokenizer:()=>dr.MBart50Tokenizer,MBartForCausalLM:()=>v.MBartForCausalLM,MBartForConditionalGeneration:()=>v.MBartForConditionalGeneration,MBartForSequenceClassification:()=>v.MBartForSequenceClassification,MBartModel:()=>v.MBartModel,MBartPreTrainedModel:()=>v.MBartPreTrainedModel,MBartTokenizer:()=>dr.MBartTokenizer,MPNetForMaskedLM:()=>v.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>v.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>v.MPNetForSequenceClassification,MPNetForTokenClassification:()=>v.MPNetForTokenClassification,MPNetModel:()=>v.MPNetModel,MPNetPreTrainedModel:()=>v.MPNetPreTrainedModel,MPNetTokenizer:()=>dr.MPNetTokenizer,MT5ForConditionalGeneration:()=>v.MT5ForConditionalGeneration,MT5Model:()=>v.MT5Model,MT5PreTrainedModel:()=>v.MT5PreTrainedModel,MarianMTModel:()=>v.MarianMTModel,MarianModel:()=>v.MarianModel,MarianPreTrainedModel:()=>v.MarianPreTrainedModel,MarianTokenizer:()=>dr.MarianTokenizer,MaskFormerFeatureExtractor:()=>ir.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>v.MaskFormerForInstanceSegmentation,MaskFormerModel:()=>v.MaskFormerModel,MaskFormerPreTrainedModel:()=>v.MaskFormerPreTrainedModel,MaskedLMOutput:()=>v.MaskedLMOutput,MaxLengthCriteria:()=>bd.MaxLengthCriteria,MistralForCausalLM:()=>v.MistralForCausalLM,MistralModel:()=>v.MistralModel,MistralPreTrainedModel:()=>v.MistralPreTrainedModel,MobileBertForMaskedLM:()=>v.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>v.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>v.MobileBertForSequenceClassification,MobileBertModel:()=>v.MobileBertModel,MobileBertPreTrainedModel:()=>v.MobileBertPreTrainedModel,MobileBertTokenizer:()=>dr.MobileBertTokenizer,MobileLLMForCausalLM:()=>v.MobileLLMForCausalLM,MobileLLMModel:()=>v.MobileLLMModel,MobileLLMPreTrainedModel:()=>v.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>ir.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>v.MobileNetV1ForImageClassification,MobileNetV1Model:()=>v.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>v.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>ir.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>v.MobileNetV2ForImageClassification,MobileNetV2Model:()=>v.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>v.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>ir.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>v.MobileNetV3ForImageClassification,MobileNetV3Model:()=>v.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>v.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>ir.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>v.MobileNetV4ForImageClassification,MobileNetV4Model:()=>v.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>v.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>ir.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>v.MobileViTForImageClassification,MobileViTImageProcessor:()=>ir.MobileViTImageProcessor,MobileViTModel:()=>v.MobileViTModel,MobileViTPreTrainedModel:()=>v.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>v.MobileViTV2ForImageClassification,MobileViTV2Model:()=>v.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>v.MobileViTV2PreTrainedModel,ModelOutput:()=>v.ModelOutput,Moondream1ForConditionalGeneration:()=>v.Moondream1ForConditionalGeneration,MptForCausalLM:()=>v.MptForCausalLM,MptModel:()=>v.MptModel,MptPreTrainedModel:()=>v.MptPreTrainedModel,MusicgenForCausalLM:()=>v.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>v.MusicgenForConditionalGeneration,MusicgenModel:()=>v.MusicgenModel,MusicgenPreTrainedModel:()=>v.MusicgenPreTrainedModel,NllbTokenizer:()=>dr.NllbTokenizer,NomicBertModel:()=>v.NomicBertModel,NomicBertPreTrainedModel:()=>v.NomicBertPreTrainedModel,NougatImageProcessor:()=>ir.NougatImageProcessor,NougatTokenizer:()=>dr.NougatTokenizer,OPTForCausalLM:()=>v.OPTForCausalLM,OPTModel:()=>v.OPTModel,OPTPreTrainedModel:()=>v.OPTPreTrainedModel,ObjectDetectionPipeline:()=>Hr.ObjectDetectionPipeline,OlmoForCausalLM:()=>v.OlmoForCausalLM,OlmoModel:()=>v.OlmoModel,OlmoPreTrainedModel:()=>v.OlmoPreTrainedModel,OpenELMForCausalLM:()=>v.OpenELMForCausalLM,OpenELMModel:()=>v.OpenELMModel,OpenELMPreTrainedModel:()=>v.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>ir.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>v.OwlViTForObjectDetection,OwlViTModel:()=>v.OwlViTModel,OwlViTPreTrainedModel:()=>v.OwlViTPreTrainedModel,OwlViTProcessor:()=>ir.OwlViTProcessor,Owlv2ForObjectDetection:()=>v.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>ir.Owlv2ImageProcessor,Owlv2Model:()=>v.Owlv2Model,Owlv2PreTrainedModel:()=>v.Owlv2PreTrainedModel,Phi3ForCausalLM:()=>v.Phi3ForCausalLM,Phi3Model:()=>v.Phi3Model,Phi3PreTrainedModel:()=>v.Phi3PreTrainedModel,PhiForCausalLM:()=>v.PhiForCausalLM,PhiModel:()=>v.PhiModel,PhiPreTrainedModel:()=>v.PhiPreTrainedModel,Pipeline:()=>Hr.Pipeline,PreTrainedModel:()=>v.PreTrainedModel,PreTrainedTokenizer:()=>dr.PreTrainedTokenizer,PretrainedConfig:()=>Dp.PretrainedConfig,PretrainedMixin:()=>v.PretrainedMixin,Processor:()=>ir.Processor,PvtForImageClassification:()=>v.PvtForImageClassification,PvtImageProcessor:()=>ir.PvtImageProcessor,PvtModel:()=>v.PvtModel,PvtPreTrainedModel:()=>v.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>ir.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>v.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>v.PyAnnoteModel,PyAnnotePreTrainedModel:()=>v.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>ir.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>v.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>Hr.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>v.Qwen2ForCausalLM,Qwen2Model:()=>v.Qwen2Model,Qwen2PreTrainedModel:()=>v.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>dr.Qwen2Tokenizer,RTDetrForObjectDetection:()=>v.RTDetrForObjectDetection,RTDetrImageProcessor:()=>ir.RTDetrImageProcessor,RTDetrModel:()=>v.RTDetrModel,RTDetrObjectDetectionOutput:()=>v.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>v.RTDetrPreTrainedModel,RawImage:()=>gg.RawImage,ResNetForImageClassification:()=>v.ResNetForImageClassification,ResNetModel:()=>v.ResNetModel,ResNetPreTrainedModel:()=>v.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>v.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>v.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>v.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>v.RoFormerForTokenClassification,RoFormerModel:()=>v.RoFormerModel,RoFormerPreTrainedModel:()=>v.RoFormerPreTrainedModel,RoFormerTokenizer:()=>dr.RoFormerTokenizer,RobertaForMaskedLM:()=>v.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>v.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>v.RobertaForSequenceClassification,RobertaForTokenClassification:()=>v.RobertaForTokenClassification,RobertaModel:()=>v.RobertaModel,RobertaPreTrainedModel:()=>v.RobertaPreTrainedModel,RobertaTokenizer:()=>dr.RobertaTokenizer,SamImageProcessor:()=>ir.SamImageProcessor,SamImageSegmentationOutput:()=>v.SamImageSegmentationOutput,SamModel:()=>v.SamModel,SamPreTrainedModel:()=>v.SamPreTrainedModel,SamProcessor:()=>ir.SamProcessor,SapiensFeatureExtractor:()=>ir.SapiensFeatureExtractor,SapiensForDepthEstimation:()=>v.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>v.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>v.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>v.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>ir.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>ir.SegformerFeatureExtractor,SegformerForImageClassification:()=>v.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>v.SegformerForSemanticSegmentation,SegformerModel:()=>v.SegformerModel,SegformerPreTrainedModel:()=>v.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>v.Seq2SeqLMOutput,SequenceClassifierOutput:()=>v.SequenceClassifierOutput,SiglipImageProcessor:()=>ir.SiglipImageProcessor,SiglipModel:()=>v.SiglipModel,SiglipPreTrainedModel:()=>v.SiglipPreTrainedModel,SiglipTextModel:()=>v.SiglipTextModel,SiglipTokenizer:()=>dr.SiglipTokenizer,SiglipVisionModel:()=>v.SiglipVisionModel,SpeechT5FeatureExtractor:()=>ir.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>v.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>v.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>v.SpeechT5HifiGan,SpeechT5Model:()=>v.SpeechT5Model,SpeechT5PreTrainedModel:()=>v.SpeechT5PreTrainedModel,SpeechT5Processor:()=>ir.SpeechT5Processor,SpeechT5Tokenizer:()=>dr.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>v.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>v.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>v.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>v.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>v.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>dr.SqueezeBertTokenizer,StableLmForCausalLM:()=>v.StableLmForCausalLM,StableLmModel:()=>v.StableLmModel,StableLmPreTrainedModel:()=>v.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>v.Starcoder2ForCausalLM,Starcoder2Model:()=>v.Starcoder2Model,Starcoder2PreTrainedModel:()=>v.Starcoder2PreTrainedModel,StoppingCriteria:()=>bd.StoppingCriteria,StoppingCriteriaList:()=>bd.StoppingCriteriaList,SummarizationPipeline:()=>Hr.SummarizationPipeline,Swin2SRForImageSuperResolution:()=>v.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>ir.Swin2SRImageProcessor,Swin2SRModel:()=>v.Swin2SRModel,Swin2SRPreTrainedModel:()=>v.Swin2SRPreTrainedModel,SwinForImageClassification:()=>v.SwinForImageClassification,SwinModel:()=>v.SwinModel,SwinPreTrainedModel:()=>v.SwinPreTrainedModel,T5ForConditionalGeneration:()=>v.T5ForConditionalGeneration,T5Model:()=>v.T5Model,T5PreTrainedModel:()=>v.T5PreTrainedModel,T5Tokenizer:()=>dr.T5Tokenizer,TableTransformerForObjectDetection:()=>v.TableTransformerForObjectDetection,TableTransformerModel:()=>v.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>v.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>v.TableTransformerPreTrainedModel,Tensor:()=>cn.Tensor,Text2TextGenerationPipeline:()=>Hr.Text2TextGenerationPipeline,TextClassificationPipeline:()=>Hr.TextClassificationPipeline,TextGenerationPipeline:()=>Hr.TextGenerationPipeline,TextStreamer:()=>Lp.TextStreamer,TextToAudioPipeline:()=>Hr.TextToAudioPipeline,TokenClassificationPipeline:()=>Hr.TokenClassificationPipeline,TokenClassifierOutput:()=>v.TokenClassifierOutput,TokenizerModel:()=>dr.TokenizerModel,TrOCRForCausalLM:()=>v.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>v.TrOCRPreTrainedModel,TranslationPipeline:()=>Hr.TranslationPipeline,UniSpeechForCTC:()=>v.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>v.UniSpeechForSequenceClassification,UniSpeechModel:()=>v.UniSpeechModel,UniSpeechPreTrainedModel:()=>v.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>v.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>v.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>v.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>v.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>v.UniSpeechSatPreTrainedModel,ViTFeatureExtractor:()=>ir.ViTFeatureExtractor,ViTForImageClassification:()=>v.ViTForImageClassification,ViTImageProcessor:()=>ir.ViTImageProcessor,ViTMAEModel:()=>v.ViTMAEModel,ViTMAEPreTrainedModel:()=>v.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>v.ViTMSNForImageClassification,ViTMSNModel:()=>v.ViTMSNModel,ViTMSNPreTrainedModel:()=>v.ViTMSNPreTrainedModel,ViTModel:()=>v.ViTModel,ViTPreTrainedModel:()=>v.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>v.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>v.VitMatteForImageMatting,VitMatteImageProcessor:()=>ir.VitMatteImageProcessor,VitMattePreTrainedModel:()=>v.VitMattePreTrainedModel,VitsModel:()=>v.VitsModel,VitsModelOutput:()=>v.VitsModelOutput,VitsPreTrainedModel:()=>v.VitsPreTrainedModel,VitsTokenizer:()=>dr.VitsTokenizer,Wav2Vec2BertForCTC:()=>v.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>v.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>v.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>v.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>dr.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>ir.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>v.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>v.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>v.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>v.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>v.Wav2Vec2PreTrainedModel,Wav2Vec2ProcessorWithLM:()=>ir.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>v.WavLMForAudioFrameClassification,WavLMForCTC:()=>v.WavLMForCTC,WavLMForSequenceClassification:()=>v.WavLMForSequenceClassification,WavLMForXVector:()=>v.WavLMForXVector,WavLMModel:()=>v.WavLMModel,WavLMPreTrainedModel:()=>v.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>ir.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>v.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>v.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>ir.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>v.WhisperForConditionalGeneration,WhisperModel:()=>v.WhisperModel,WhisperPreTrainedModel:()=>v.WhisperPreTrainedModel,WhisperProcessor:()=>ir.WhisperProcessor,WhisperTextStreamer:()=>Lp.WhisperTextStreamer,WhisperTokenizer:()=>dr.WhisperTokenizer,XLMForQuestionAnswering:()=>v.XLMForQuestionAnswering,XLMForSequenceClassification:()=>v.XLMForSequenceClassification,XLMForTokenClassification:()=>v.XLMForTokenClassification,XLMModel:()=>v.XLMModel,XLMPreTrainedModel:()=>v.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>v.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>v.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>v.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>v.XLMRobertaForTokenClassification,XLMRobertaModel:()=>v.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>v.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>dr.XLMRobertaTokenizer,XLMTokenizer:()=>dr.XLMTokenizer,XLMWithLMHeadModel:()=>v.XLMWithLMHeadModel,XVectorOutput:()=>v.XVectorOutput,YolosFeatureExtractor:()=>ir.YolosFeatureExtractor,YolosForObjectDetection:()=>v.YolosForObjectDetection,YolosModel:()=>v.YolosModel,YolosObjectDetectionOutput:()=>v.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>v.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>Hr.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>Hr.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>Hr.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>Hr.ZeroShotObjectDetectionPipeline,bankers_round:()=>Fn.bankers_round,cat:()=>cn.cat,cos_sim:()=>Fn.cos_sim,dot:()=>Fn.dot,dynamic_time_warping:()=>Fn.dynamic_time_warping,env:()=>_g.env,full:()=>cn.full,full_like:()=>cn.full_like,getKeyValueShapes:()=>Dp.getKeyValueShapes,hamming:()=>oa.hamming,hanning:()=>oa.hanning,interpolate:()=>cn.interpolate,interpolate_4d:()=>cn.interpolate_4d,interpolate_data:()=>Fn.interpolate_data,is_chinese_char:()=>dr.is_chinese_char,layer_norm:()=>cn.layer_norm,log_softmax:()=>Fn.log_softmax,magnitude:()=>Fn.magnitude,matmul:()=>cn.matmul,max:()=>Fn.max,mean:()=>cn.mean,mean_pooling:()=>cn.mean_pooling,medianFilter:()=>Fn.medianFilter,mel_filter_bank:()=>oa.mel_filter_bank,min:()=>Fn.min,ones:()=>cn.ones,ones_like:()=>cn.ones_like,permute:()=>cn.permute,permute_data:()=>Fn.permute_data,pipeline:()=>Hr.pipeline,quantize_embeddings:()=>cn.quantize_embeddings,read_audio:()=>oa.read_audio,rfft:()=>cn.rfft,round:()=>Fn.round,softmax:()=>Fn.softmax,spectrogram:()=>oa.spectrogram,stack:()=>cn.stack,std_mean:()=>cn.std_mean,topk:()=>cn.topk,window_function:()=>oa.window_function,zeros:()=>cn.zeros,zeros_like:()=>cn.zeros_like});var _g=Kr("./src/env.js"),Hr=Kr("./src/pipelines.js"),v=Kr("./src/models.js"),dr=Kr("./src/tokenizers.js"),ir=Kr("./src/processors.js"),Dp=Kr("./src/configs.js"),oa=Kr("./src/utils/audio.js"),gg=Kr("./src/utils/image.js"),cn=Kr("./src/utils/tensor.js"),Fn=Kr("./src/utils/maths.js"),Lp=Kr("./src/generation/streamers.js"),bd=Kr("./src/generation/stopping_criteria.js");p.ASTFeatureExtractor;p.ASTForAudioClassification;p.ASTModel;p.ASTPreTrainedModel;p.AlbertForMaskedLM;p.AlbertForQuestionAnswering;p.AlbertForSequenceClassification;p.AlbertModel;p.AlbertPreTrainedModel;p.AlbertTokenizer;p.AudioClassificationPipeline;p.AutoConfig;p.AutoModel;p.AutoModelForAudioClassification;p.AutoModelForAudioFrameClassification;p.AutoModelForCTC;p.AutoModelForCausalLM;p.AutoModelForDepthEstimation;p.AutoModelForDocumentQuestionAnswering;p.AutoModelForImageClassification;p.AutoModelForImageFeatureExtraction;p.AutoModelForImageMatting;p.AutoModelForImageSegmentation;p.AutoModelForImageToImage;p.AutoModelForMaskGeneration;p.AutoModelForMaskedLM;p.AutoModelForNormalEstimation;p.AutoModelForObjectDetection;p.AutoModelForQuestionAnswering;p.AutoModelForSemanticSegmentation;p.AutoModelForSeq2SeqLM;p.AutoModelForSequenceClassification;p.AutoModelForSpeechSeq2Seq;p.AutoModelForTextToSpectrogram;p.AutoModelForTextToWaveform;p.AutoModelForTokenClassification;p.AutoModelForUniversalSegmentation;p.AutoModelForVision2Seq;p.AutoModelForXVector;p.AutoModelForZeroShotObjectDetection;p.AutoProcessor;p.AutoTokenizer;p.AutomaticSpeechRecognitionPipeline;p.BartForConditionalGeneration;p.BartForSequenceClassification;p.BartModel;p.BartPretrainedModel;p.BartTokenizer;p.BaseModelOutput;p.BaseStreamer;p.BeitFeatureExtractor;p.BeitForImageClassification;p.BeitModel;p.BeitPreTrainedModel;p.BertForMaskedLM;p.BertForQuestionAnswering;p.BertForSequenceClassification;p.BertForTokenClassification;p.BertModel;p.BertPreTrainedModel;p.BertTokenizer;p.BitImageProcessor;p.BlenderbotForConditionalGeneration;p.BlenderbotModel;p.BlenderbotPreTrainedModel;p.BlenderbotSmallForConditionalGeneration;p.BlenderbotSmallModel;p.BlenderbotSmallPreTrainedModel;p.BlenderbotSmallTokenizer;p.BlenderbotTokenizer;p.BloomForCausalLM;p.BloomModel;p.BloomPreTrainedModel;p.BloomTokenizer;p.CLIPFeatureExtractor;p.CLIPImageProcessor;p.CLIPModel;p.CLIPPreTrainedModel;p.CLIPSegForImageSegmentation;p.CLIPSegModel;p.CLIPSegPreTrainedModel;p.CLIPTextModel;p.CLIPTextModelWithProjection;p.CLIPTokenizer;p.CLIPVisionModel;p.CLIPVisionModelWithProjection;p.CamembertForMaskedLM;p.CamembertForQuestionAnswering;p.CamembertForSequenceClassification;p.CamembertForTokenClassification;p.CamembertModel;p.CamembertPreTrainedModel;p.CamembertTokenizer;p.CausalLMOutput;p.CausalLMOutputWithPast;p.ChineseCLIPFeatureExtractor;p.ChineseCLIPModel;p.ChineseCLIPPreTrainedModel;p.ClapAudioModelWithProjection;p.ClapFeatureExtractor;p.ClapModel;p.ClapPreTrainedModel;p.ClapTextModelWithProjection;p.CodeGenForCausalLM;p.CodeGenModel;p.CodeGenPreTrainedModel;p.CodeGenTokenizer;p.CodeLlamaTokenizer;p.CohereForCausalLM;p.CohereModel;p.CoherePreTrainedModel;p.CohereTokenizer;p.ConvBertForMaskedLM;p.ConvBertForQuestionAnswering;p.ConvBertForSequenceClassification;p.ConvBertForTokenClassification;p.ConvBertModel;p.ConvBertPreTrainedModel;p.ConvBertTokenizer;p.ConvNextFeatureExtractor;p.ConvNextForImageClassification;p.ConvNextImageProcessor;p.ConvNextModel;p.ConvNextPreTrainedModel;p.ConvNextV2ForImageClassification;p.ConvNextV2Model;p.ConvNextV2PreTrainedModel;p.DPTFeatureExtractor;p.DPTForDepthEstimation;p.DPTImageProcessor;p.DPTModel;p.DPTPreTrainedModel;p.DebertaForMaskedLM;p.DebertaForQuestionAnswering;p.DebertaForSequenceClassification;p.DebertaForTokenClassification;p.DebertaModel;p.DebertaPreTrainedModel;p.DebertaTokenizer;p.DebertaV2ForMaskedLM;p.DebertaV2ForQuestionAnswering;p.DebertaV2ForSequenceClassification;p.DebertaV2ForTokenClassification;p.DebertaV2Model;p.DebertaV2PreTrainedModel;p.DebertaV2Tokenizer;p.DecisionTransformerModel;p.DecisionTransformerPreTrainedModel;p.DeiTFeatureExtractor;p.DeiTForImageClassification;p.DeiTModel;p.DeiTPreTrainedModel;p.DepthAnythingForDepthEstimation;p.DepthAnythingPreTrainedModel;p.DepthEstimationPipeline;p.DepthProForDepthEstimation;p.DepthProPreTrainedModel;p.DetrFeatureExtractor;p.DetrForObjectDetection;p.DetrForSegmentation;p.DetrModel;p.DetrObjectDetectionOutput;p.DetrPreTrainedModel;p.DetrSegmentationOutput;p.Dinov2ForImageClassification;p.Dinov2Model;p.Dinov2PreTrainedModel;p.DistilBertForMaskedLM;p.DistilBertForQuestionAnswering;p.DistilBertForSequenceClassification;p.DistilBertForTokenClassification;p.DistilBertModel;p.DistilBertPreTrainedModel;p.DistilBertTokenizer;p.DocumentQuestionAnsweringPipeline;p.DonutFeatureExtractor;p.DonutImageProcessor;p.DonutSwinModel;p.DonutSwinPreTrainedModel;p.EfficientNetForImageClassification;p.EfficientNetImageProcessor;p.EfficientNetModel;p.EfficientNetPreTrainedModel;p.ElectraForMaskedLM;p.ElectraForQuestionAnswering;p.ElectraForSequenceClassification;p.ElectraForTokenClassification;p.ElectraModel;p.ElectraPreTrainedModel;p.ElectraTokenizer;p.EosTokenCriteria;p.EsmForMaskedLM;p.EsmForSequenceClassification;p.EsmForTokenClassification;p.EsmModel;p.EsmPreTrainedModel;p.EsmTokenizer;p.FFT;p.FalconForCausalLM;p.FalconModel;p.FalconPreTrainedModel;p.FalconTokenizer;p.FastViTForImageClassification;p.FastViTModel;p.FastViTPreTrainedModel;p.FeatureExtractionPipeline;p.FeatureExtractor;p.FillMaskPipeline;p.Florence2ForConditionalGeneration;p.Florence2PreTrainedModel;p.Florence2Processor;p.GLPNFeatureExtractor;p.GLPNForDepthEstimation;p.GLPNModel;p.GLPNPreTrainedModel;p.GPT2LMHeadModel;p.GPT2Model;p.GPT2PreTrainedModel;p.GPT2Tokenizer;p.GPTBigCodeForCausalLM;p.GPTBigCodeModel;p.GPTBigCodePreTrainedModel;p.GPTJForCausalLM;p.GPTJModel;p.GPTJPreTrainedModel;p.GPTNeoForCausalLM;p.GPTNeoModel;p.GPTNeoPreTrainedModel;p.GPTNeoXForCausalLM;p.GPTNeoXModel;p.GPTNeoXPreTrainedModel;p.GPTNeoXTokenizer;p.Gemma2ForCausalLM;p.Gemma2Model;p.Gemma2PreTrainedModel;p.GemmaForCausalLM;p.GemmaModel;p.GemmaPreTrainedModel;p.GemmaTokenizer;p.GraniteForCausalLM;p.GraniteModel;p.GranitePreTrainedModel;p.Grok1Tokenizer;p.GroupViTModel;p.GroupViTPreTrainedModel;p.HerbertTokenizer;p.HieraForImageClassification;p.HieraModel;p.HieraPreTrainedModel;p.HubertForCTC;p.HubertForSequenceClassification;p.HubertModel;p.HubertPreTrainedModel;p.ImageClassificationPipeline;p.ImageFeatureExtractionPipeline;p.ImageFeatureExtractor;p.ImageMattingOutput;p.ImageSegmentationPipeline;p.ImageToImagePipeline;p.ImageToTextPipeline;p.InterruptableStoppingCriteria;p.JAISLMHeadModel;p.JAISModel;p.JAISPreTrainedModel;p.LlamaForCausalLM;p.LlamaModel;p.LlamaPreTrainedModel;p.LlamaTokenizer;p.LlavaForConditionalGeneration;p.LlavaPreTrainedModel;p.LongT5ForConditionalGeneration;p.LongT5Model;p.LongT5PreTrainedModel;p.M2M100ForConditionalGeneration;p.M2M100Model;p.M2M100PreTrainedModel;p.M2M100Tokenizer;p.MBart50Tokenizer;p.MBartForCausalLM;p.MBartForConditionalGeneration;p.MBartForSequenceClassification;p.MBartModel;p.MBartPreTrainedModel;p.MBartTokenizer;p.MPNetForMaskedLM;p.MPNetForQuestionAnswering;p.MPNetForSequenceClassification;p.MPNetForTokenClassification;p.MPNetModel;p.MPNetPreTrainedModel;p.MPNetTokenizer;p.MT5ForConditionalGeneration;p.MT5Model;p.MT5PreTrainedModel;p.MarianMTModel;p.MarianModel;p.MarianPreTrainedModel;p.MarianTokenizer;p.MaskFormerFeatureExtractor;p.MaskFormerForInstanceSegmentation;p.MaskFormerModel;p.MaskFormerPreTrainedModel;p.MaskedLMOutput;p.MaxLengthCriteria;p.MistralForCausalLM;p.MistralModel;p.MistralPreTrainedModel;p.MobileBertForMaskedLM;p.MobileBertForQuestionAnswering;p.MobileBertForSequenceClassification;p.MobileBertModel;p.MobileBertPreTrainedModel;p.MobileBertTokenizer;p.MobileLLMForCausalLM;p.MobileLLMModel;p.MobileLLMPreTrainedModel;p.MobileNetV1FeatureExtractor;p.MobileNetV1ForImageClassification;p.MobileNetV1Model;p.MobileNetV1PreTrainedModel;p.MobileNetV2FeatureExtractor;p.MobileNetV2ForImageClassification;p.MobileNetV2Model;p.MobileNetV2PreTrainedModel;p.MobileNetV3FeatureExtractor;p.MobileNetV3ForImageClassification;p.MobileNetV3Model;p.MobileNetV3PreTrainedModel;p.MobileNetV4FeatureExtractor;p.MobileNetV4ForImageClassification;p.MobileNetV4Model;p.MobileNetV4PreTrainedModel;p.MobileViTFeatureExtractor;p.MobileViTForImageClassification;p.MobileViTImageProcessor;p.MobileViTModel;p.MobileViTPreTrainedModel;p.MobileViTV2ForImageClassification;p.MobileViTV2Model;p.MobileViTV2PreTrainedModel;p.ModelOutput;p.Moondream1ForConditionalGeneration;p.MptForCausalLM;p.MptModel;p.MptPreTrainedModel;p.MusicgenForCausalLM;p.MusicgenForConditionalGeneration;p.MusicgenModel;p.MusicgenPreTrainedModel;p.NllbTokenizer;p.NomicBertModel;p.NomicBertPreTrainedModel;p.NougatImageProcessor;p.NougatTokenizer;p.OPTForCausalLM;p.OPTModel;p.OPTPreTrainedModel;p.ObjectDetectionPipeline;p.OlmoForCausalLM;p.OlmoModel;p.OlmoPreTrainedModel;p.OpenELMForCausalLM;p.OpenELMModel;p.OpenELMPreTrainedModel;p.OwlViTFeatureExtractor;p.OwlViTForObjectDetection;p.OwlViTModel;p.OwlViTPreTrainedModel;p.OwlViTProcessor;p.Owlv2ForObjectDetection;p.Owlv2ImageProcessor;p.Owlv2Model;p.Owlv2PreTrainedModel;p.Phi3ForCausalLM;p.Phi3Model;p.Phi3PreTrainedModel;p.PhiForCausalLM;p.PhiModel;p.PhiPreTrainedModel;p.Pipeline;p.PreTrainedModel;p.PreTrainedTokenizer;p.PretrainedConfig;p.PretrainedMixin;p.Processor;p.PvtForImageClassification;p.PvtImageProcessor;p.PvtModel;p.PvtPreTrainedModel;p.PyAnnoteFeatureExtractor;p.PyAnnoteForAudioFrameClassification;p.PyAnnoteModel;p.PyAnnotePreTrainedModel;p.PyAnnoteProcessor;p.QuestionAnsweringModelOutput;p.QuestionAnsweringPipeline;p.Qwen2ForCausalLM;p.Qwen2Model;p.Qwen2PreTrainedModel;p.Qwen2Tokenizer;p.RTDetrForObjectDetection;p.RTDetrImageProcessor;p.RTDetrModel;p.RTDetrObjectDetectionOutput;p.RTDetrPreTrainedModel;p.RawImage;p.ResNetForImageClassification;p.ResNetModel;p.ResNetPreTrainedModel;p.RoFormerForMaskedLM;p.RoFormerForQuestionAnswering;p.RoFormerForSequenceClassification;p.RoFormerForTokenClassification;p.RoFormerModel;p.RoFormerPreTrainedModel;p.RoFormerTokenizer;p.RobertaForMaskedLM;p.RobertaForQuestionAnswering;p.RobertaForSequenceClassification;p.RobertaForTokenClassification;p.RobertaModel;p.RobertaPreTrainedModel;p.RobertaTokenizer;p.SamImageProcessor;p.SamImageSegmentationOutput;p.SamModel;p.SamPreTrainedModel;p.SamProcessor;p.SapiensFeatureExtractor;p.SapiensForDepthEstimation;p.SapiensForNormalEstimation;p.SapiensForSemanticSegmentation;p.SapiensPreTrainedModel;p.SeamlessM4TFeatureExtractor;p.SegformerFeatureExtractor;p.SegformerForImageClassification;p.SegformerForSemanticSegmentation;p.SegformerModel;p.SegformerPreTrainedModel;p.Seq2SeqLMOutput;p.SequenceClassifierOutput;p.SiglipImageProcessor;p.SiglipModel;p.SiglipPreTrainedModel;p.SiglipTextModel;p.SiglipTokenizer;p.SiglipVisionModel;p.SpeechT5FeatureExtractor;p.SpeechT5ForSpeechToText;p.SpeechT5ForTextToSpeech;p.SpeechT5HifiGan;p.SpeechT5Model;p.SpeechT5PreTrainedModel;p.SpeechT5Processor;p.SpeechT5Tokenizer;p.SqueezeBertForMaskedLM;p.SqueezeBertForQuestionAnswering;p.SqueezeBertForSequenceClassification;p.SqueezeBertModel;p.SqueezeBertPreTrainedModel;p.SqueezeBertTokenizer;p.StableLmForCausalLM;p.StableLmModel;p.StableLmPreTrainedModel;p.Starcoder2ForCausalLM;p.Starcoder2Model;p.Starcoder2PreTrainedModel;p.StoppingCriteria;p.StoppingCriteriaList;p.SummarizationPipeline;p.Swin2SRForImageSuperResolution;p.Swin2SRImageProcessor;p.Swin2SRModel;p.Swin2SRPreTrainedModel;p.SwinForImageClassification;p.SwinModel;p.SwinPreTrainedModel;p.T5ForConditionalGeneration;p.T5Model;p.T5PreTrainedModel;p.T5Tokenizer;p.TableTransformerForObjectDetection;p.TableTransformerModel;p.TableTransformerObjectDetectionOutput;p.TableTransformerPreTrainedModel;p.Tensor;p.Text2TextGenerationPipeline;p.TextClassificationPipeline;p.TextGenerationPipeline;p.TextStreamer;p.TextToAudioPipeline;p.TokenClassificationPipeline;p.TokenClassifierOutput;p.TokenizerModel;p.TrOCRForCausalLM;p.TrOCRPreTrainedModel;p.TranslationPipeline;p.UniSpeechForCTC;p.UniSpeechForSequenceClassification;p.UniSpeechModel;p.UniSpeechPreTrainedModel;p.UniSpeechSatForAudioFrameClassification;p.UniSpeechSatForCTC;p.UniSpeechSatForSequenceClassification;p.UniSpeechSatModel;p.UniSpeechSatPreTrainedModel;p.ViTFeatureExtractor;p.ViTForImageClassification;p.ViTImageProcessor;p.ViTMAEModel;p.ViTMAEPreTrainedModel;p.ViTMSNForImageClassification;p.ViTMSNModel;p.ViTMSNPreTrainedModel;p.ViTModel;p.ViTPreTrainedModel;p.VisionEncoderDecoderModel;p.VitMatteForImageMatting;p.VitMatteImageProcessor;p.VitMattePreTrainedModel;p.VitsModel;p.VitsModelOutput;p.VitsPreTrainedModel;p.VitsTokenizer;p.Wav2Vec2BertForCTC;p.Wav2Vec2BertForSequenceClassification;p.Wav2Vec2BertModel;p.Wav2Vec2BertPreTrainedModel;p.Wav2Vec2CTCTokenizer;p.Wav2Vec2FeatureExtractor;p.Wav2Vec2ForAudioFrameClassification;p.Wav2Vec2ForCTC;p.Wav2Vec2ForSequenceClassification;p.Wav2Vec2Model;p.Wav2Vec2PreTrainedModel;p.Wav2Vec2ProcessorWithLM;p.WavLMForAudioFrameClassification;p.WavLMForCTC;p.WavLMForSequenceClassification;p.WavLMForXVector;p.WavLMModel;p.WavLMPreTrainedModel;p.WeSpeakerFeatureExtractor;p.WeSpeakerResNetModel;p.WeSpeakerResNetPreTrainedModel;p.WhisperFeatureExtractor;p.WhisperForConditionalGeneration;p.WhisperModel;p.WhisperPreTrainedModel;p.WhisperProcessor;p.WhisperTextStreamer;p.WhisperTokenizer;p.XLMForQuestionAnswering;p.XLMForSequenceClassification;p.XLMForTokenClassification;p.XLMModel;p.XLMPreTrainedModel;p.XLMRobertaForMaskedLM;p.XLMRobertaForQuestionAnswering;p.XLMRobertaForSequenceClassification;p.XLMRobertaForTokenClassification;p.XLMRobertaModel;p.XLMRobertaPreTrainedModel;p.XLMRobertaTokenizer;p.XLMTokenizer;p.XLMWithLMHeadModel;p.XVectorOutput;p.YolosFeatureExtractor;p.YolosForObjectDetection;p.YolosModel;p.YolosObjectDetectionOutput;p.YolosPreTrainedModel;p.ZeroShotAudioClassificationPipeline;p.ZeroShotClassificationPipeline;p.ZeroShotImageClassificationPipeline;p.ZeroShotObjectDetectionPipeline;p.bankers_round;p.cat;p.cos_sim;p.dot;p.dynamic_time_warping;p.env;p.full;p.full_like;p.getKeyValueShapes;p.hamming;p.hanning;p.interpolate;p.interpolate_4d;p.interpolate_data;p.is_chinese_char;p.layer_norm;p.log_softmax;p.magnitude;p.matmul;p.max;p.mean;p.mean_pooling;p.medianFilter;p.mel_filter_bank;p.min;p.ones;p.ones_like;p.permute;p.permute_data;var wg=p.pipeline;p.quantize_embeddings;p.read_audio;p.rfft;p.round;p.softmax;p.spectrogram;p.stack;p.std_mean;p.topk;p.window_function;p.zeros;p.zeros_like;const Rp=10,om=(ae=0)=>L=>`\x1B[${L+ae}m`,am=(ae=0)=>L=>`\x1B[${38+ae};5;${L}m`,lm=(ae=0)=>(L,T,C)=>`\x1B[${38+ae};2;${L};${T};${C}m`,Zr={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],overline:[53,55],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],gray:[90,39],grey:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgGray:[100,49],bgGrey:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};Object.keys(Zr.modifier);const yg=Object.keys(Zr.color),bg=Object.keys(Zr.bgColor);[...yg,...bg];function Mg(){const ae=new Map;for(const[L,T]of Object.entries(Zr)){for(const[C,J]of Object.entries(T))Zr[C]={open:`\x1B[${J[0]}m`,close:`\x1B[${J[1]}m`},T[C]=Zr[C],ae.set(J[0],J[1]);Object.defineProperty(Zr,L,{value:T,enumerable:!1})}return Object.defineProperty(Zr,"codes",{value:ae,enumerable:!1}),Zr.color.close="\x1B[39m",Zr.bgColor.close="\x1B[49m",Zr.color.ansi=om(),Zr.color.ansi256=am(),Zr.color.ansi16m=lm(),Zr.bgColor.ansi=om(Rp),Zr.bgColor.ansi256=am(Rp),Zr.bgColor.ansi16m=lm(Rp),Object.defineProperties(Zr,{rgbToAnsi256:{value(L,T,C){return L===T&&T===C?L<8?16:L>248?231:Math.round((L-8)/247*24)+232:16+36*Math.round(L/255*5)+6*Math.round(T/255*5)+Math.round(C/255*5)},enumerable:!1},hexToRgb:{value(L){const T=/[a-f\d]{6}|[a-f\d]{3}/i.exec(L.toString(16));if(!T)return[0,0,0];let[C]=T;C.length===3&&(C=[...C].map(ne=>ne+ne).join(""));const J=Number.parseInt(C,16);return[J>>16&255,J>>8&255,J&255]},enumerable:!1},hexToAnsi256:{value:L=>Zr.rgbToAnsi256(...Zr.hexToRgb(L)),enumerable:!1},ansi256ToAnsi:{value(L){if(L<8)return 30+L;if(L<16)return 90+(L-8);let T,C,J;if(L>=232)T=((L-232)*10+8)/255,C=T,J=T;else{L-=16;const Te=L%36;T=Math.floor(L/36)/5,C=Math.floor(Te/6)/5,J=Te%6/5}const ne=Math.max(T,C,J)*2;if(ne===0)return 30;let fe=30+(Math.round(J)<<2|Math.round(C)<<1|Math.round(T));return ne===2&&(fe+=60),fe},enumerable:!1},rgbToAnsi:{value:(L,T,C)=>Zr.ansi256ToAnsi(Zr.rgbToAnsi256(L,T,C)),enumerable:!1},hexToAnsi:{value:L=>Zr.ansi256ToAnsi(Zr.hexToAnsi256(L)),enumerable:!1}}),Zr}const hi=Mg(),Rc=(()=>{if(navigator.userAgentData){const ae=navigator.userAgentData.brands.find(({brand:L})=>L==="Chromium");if(ae&&ae.version>93)return 3}return/\b(Chrome|Chromium)\//.test(navigator.userAgent)?1:0})(),um=Rc!==0&&{level:Rc,hasBasic:!0,has256:Rc>=2,has16m:Rc>=3},vg={stdout:um,stderr:um};function xg(ae,L,T){let C=ae.indexOf(L);if(C===-1)return ae;const J=L.length;let ne=0,fe="";do fe+=ae.slice(ne,C)+L+T,ne=C+J,C=ae.indexOf(L,ne);while(C!==-1);return fe+=ae.slice(ne),fe}function Tg(ae,L,T,C){let J=0,ne="";do{const fe=ae[C-1]==="\r";ne+=ae.slice(J,fe?C-1:C)+L+(fe?`\r
`:`
`)+T,J=C+1,C=ae.indexOf(`
`,J)}while(C!==-1);return ne+=ae.slice(J),ne}const{stdout:dm,stderr:cm}=vg,Up=Symbol("GENERATOR"),la=Symbol("STYLER"),Td=Symbol("IS_EMPTY"),pm=["ansi","ansi","ansi256","ansi16m"],ua=Object.create(null),Eg=(ae,L={})=>{if(L.level&&!(Number.isInteger(L.level)&&L.level>=0&&L.level<=3))throw new Error("The `level` option should be an integer from 0 to 3");const T=dm?dm.level:0;ae.level=L.level===void 0?T:L.level},Cg=ae=>{const L=(...T)=>T.join(" ");return Eg(L,ae),Object.setPrototypeOf(L,Cd.prototype),L};function Cd(ae){return Cg(ae)}Object.setPrototypeOf(Cd.prototype,Function.prototype);for(const[ae,L]of Object.entries(hi))ua[ae]={get(){const T=Uc(this,Wp(L.open,L.close,this[la]),this[Td]);return Object.defineProperty(this,ae,{value:T}),T}};ua.visible={get(){const ae=Uc(this,this[la],!0);return Object.defineProperty(this,"visible",{value:ae}),ae}};const Vp=(ae,L,T,...C)=>ae==="rgb"?L==="ansi16m"?hi[T].ansi16m(...C):L==="ansi256"?hi[T].ansi256(hi.rgbToAnsi256(...C)):hi[T].ansi(hi.rgbToAnsi(...C)):ae==="hex"?Vp("rgb",L,T,...hi.hexToRgb(...C)):hi[T][ae](...C),$g=["rgb","hex","ansi256"];for(const ae of $g){ua[ae]={get(){const{level:T}=this;return function(...C){const J=Wp(Vp(ae,pm[T],"color",...C),hi.color.close,this[la]);return Uc(this,J,this[Td])}}};const L="bg"+ae[0].toUpperCase()+ae.slice(1);ua[L]={get(){const{level:T}=this;return function(...C){const J=Wp(Vp(ae,pm[T],"bgColor",...C),hi.bgColor.close,this[la]);return Uc(this,J,this[Td])}}}}const Sg=Object.defineProperties(()=>{},{...ua,level:{enumerable:!0,get(){return this[Up].level},set(ae){this[Up].level=ae}}}),Wp=(ae,L,T)=>{let C,J;return T===void 0?(C=ae,J=L):(C=T.openAll+ae,J=L+T.closeAll),{open:ae,close:L,openAll:C,closeAll:J,parent:T}},Uc=(ae,L,T)=>{const C=(...J)=>kg(C,J.length===1?""+J[0]:J.join(" "));return Object.setPrototypeOf(C,Sg),C[Up]=ae,C[la]=L,C[Td]=T,C},kg=(ae,L)=>{if(ae.level<=0||!L)return ae[Td]?"":L;let T=ae[la];if(T===void 0)return L;const{openAll:C,closeAll:J}=T;if(L.includes("\x1B"))for(;T!==void 0;)L=xg(L,T.close,T.open),T=T.parent;const ne=L.indexOf(`
`);return ne!==-1&&(L=Tg(L,J,C,ne)),C+L+J};Object.defineProperties(Cd.prototype,ua);const da=Cd();Cd({level:cm?cm.level:0});const Pg={BASE_URL:"/NoLLMChat/",DEV:!1,MODE:"production",PROD:!0,SSR:!1,VITE_BASE_URL:"/NoLLMChat/",VITE_ROUTE_MODE:"hash"},xm=(typeof Pg<"u",typeof window<"u"&&typeof window.localStorage<"u"?window.localStorage.getItem("__DEBUG__")==="true":!1),ca=console.log,Tm=(...ae)=>ae.map(L=>typeof L=="object"?JSON.stringify(L):L).join(`
`),Ag=(...ae)=>xm?ca(da.blueBright(Tm(...ae))):void 0,Ig=(...ae)=>{ca(da.redBright("ERROR:")),console.error(...ae),ca(da.redBright("-".repeat(10)))},Fg=(...ae)=>{ca(da.yellowBright("WARN:")),console.warn(...ae),ca(da.yellowBright("-".repeat(10)))},Gp=(...ae)=>xm?ca(da.greenBright(Tm(...ae))):void 0,xd=new Map,Em="_WORKER_INIT_";function Ed(ae,L,T){if(!xd.get(ae)&&ae!==Em){Fg("[No process found for message]",ae);return}self.postMessage({messageId:ae,type:L,payload:T}),Gp("[Message sent to main thread]",{id:ae,type:L,payload:T})}function Og(ae){return async L=>{try{const T=await ae(L);Ed(L.messageId,"complete",T)}catch(T){Ig(T),Ed(L.messageId,"error",{error:T instanceof Error?T.message:"An error occurred",error_code:"UNKNOWN_ERROR"})}finally{xd.delete(L.messageId)}}}function Bg(ae,L){self.addEventListener("message",async T=>{xd.set(T.data.messageId,Promise.race([Og(ae)(T.data),new Promise(C=>setTimeout(()=>C(!0),12e4)).then(()=>{xd.has(T.data.messageId)&&(Ed(T.data.messageId,"error",{error:"Operation timed out",error_code:"TIMEOUT_ERROR"}),xd.delete(T.data.messageId))})])),Ed(T.data.messageId,"started","Started processing")})}async function zg(ae){Ed(Em,"complete","Worker initialized")}let Md;async function Dg(ae){switch(ae.type){case"load":{const[L,T]=ae.payload;return Gp("Loading model:",L,T),(!Md||Md.model.name!==L)&&(Md=await wg("feature-extraction",L,T)),!0}case"embedding":{if(!Md)throw new Error("Pipe is not ready yet.");Gp("Embedding:",ae.payload);const[L,T]=ae.payload;return(await Md(L,T)).tolist()}default:throw new Error("Invalid operation")}}Bg(Dg);Ag("Embedding worker initialized");zg();
