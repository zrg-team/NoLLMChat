function Q_(we){return we&&we.__esModule&&Object.prototype.hasOwnProperty.call(we,"default")?we.default:we}var lm={exports:{}},on=lm.exports={},di,ci;function zp(){throw new Error("setTimeout has not been defined")}function Dp(){throw new Error("clearTimeout has not been defined")}(function(){try{typeof setTimeout=="function"?di=setTimeout:di=zp}catch{di=zp}try{typeof clearTimeout=="function"?ci=clearTimeout:ci=Dp}catch{ci=Dp}})();function um(we){if(di===setTimeout)return setTimeout(we,0);if((di===zp||!di)&&setTimeout)return di=setTimeout,setTimeout(we,0);try{return di(we,0)}catch{try{return di.call(null,we,0)}catch{return di.call(this,we,0)}}}function Y_(we){if(ci===clearTimeout)return clearTimeout(we);if((ci===Dp||!ci)&&clearTimeout)return ci=clearTimeout,clearTimeout(we);try{return ci(we)}catch{try{return ci.call(null,we)}catch{return ci.call(this,we)}}}var Ei=[],ia=!1,Ts,Dc=-1;function Z_(){!ia||!Ts||(ia=!1,Ts.length?Ei=Ts.concat(Ei):Dc=-1,Ei.length&&dm())}function dm(){if(!ia){var we=um(Z_);ia=!0;for(var Y=Ei.length;Y;){for(Ts=Ei,Ei=[];++Dc<Y;)Ts&&Ts[Dc].run();Dc=-1,Y=Ei.length}Ts=null,ia=!1,Y_(we)}}on.nextTick=function(we){var Y=new Array(arguments.length-1);if(arguments.length>1)for(var P=1;P<arguments.length;P++)Y[P-1]=arguments[P];Ei.push(new cm(we,Y)),Ei.length===1&&!ia&&um(dm)};function cm(we,Y){this.fun=we,this.array=Y}cm.prototype.run=function(){this.fun.apply(null,this.array)};on.title="browser";on.browser=!0;on.env={};on.argv=[];on.version="";on.versions={};function Ci(){}on.on=Ci;on.addListener=Ci;on.once=Ci;on.off=Ci;on.removeListener=Ci;on.removeAllListeners=Ci;on.emit=Ci;on.prependListener=Ci;on.prependOnceListener=Ci;on.listeners=function(we){return[]};on.binding=function(we){throw new Error("process.binding is not supported")};on.cwd=function(){return"/"};on.chdir=function(we){throw new Error("process.chdir is not supported")};on.umask=function(){return 0};var J_=lm.exports;const xs=Q_(J_);function eg(we){return we&&we.__esModule&&Object.prototype.hasOwnProperty.call(we,"default")?we.default:we}var pm={};(function(we){Object.defineProperties(we,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});var Y={},P={};P.byteLength=W,P.toByteArray=te,P.fromByteArray=Ee;for(var $=[],se=[],xe=typeof Uint8Array<"u"?Uint8Array:Array,Ie="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Pe=0,Q=Ie.length;Pe<Q;++Pe)$[Pe]=Ie[Pe],se[Ie.charCodeAt(Pe)]=Pe;se[45]=62,se[95]=63;function R(de){var U=de.length;if(U%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var H=de.indexOf("=");H===-1&&(H=U);var N=H===U?0:4-H%4;return[H,N]}function W(de){var U=R(de),H=U[0],N=U[1];return(H+N)*3/4-N}function q(de,U,H){return(U+H)*3/4-H}function te(de){var U,H=R(de),N=H[0],I=H[1],z=new xe(q(de,N,I)),T=0,_e=I>0?N-4:N,Me;for(Me=0;Me<_e;Me+=4)U=se[de.charCodeAt(Me)]<<18|se[de.charCodeAt(Me+1)]<<12|se[de.charCodeAt(Me+2)]<<6|se[de.charCodeAt(Me+3)],z[T++]=U>>16&255,z[T++]=U>>8&255,z[T++]=U&255;return I===2&&(U=se[de.charCodeAt(Me)]<<2|se[de.charCodeAt(Me+1)]>>4,z[T++]=U&255),I===1&&(U=se[de.charCodeAt(Me)]<<10|se[de.charCodeAt(Me+1)]<<4|se[de.charCodeAt(Me+2)]>>2,z[T++]=U>>8&255,z[T++]=U&255),z}function pe(de){return $[de>>18&63]+$[de>>12&63]+$[de>>6&63]+$[de&63]}function Se(de,U,H){for(var N,I=[],z=U;z<H;z+=3)N=(de[z]<<16&16711680)+(de[z+1]<<8&65280)+(de[z+2]&255),I.push(pe(N));return I.join("")}function Ee(de){for(var U,H=de.length,N=H%3,I=[],z=16383,T=0,_e=H-N;T<_e;T+=z)I.push(Se(de,T,T+z>_e?_e:T+z));return N===1?(U=de[H-1],I.push($[U>>2]+$[U<<4&63]+"==")):N===2&&(U=(de[H-2]<<8)+de[H-1],I.push($[U>>10]+$[U>>4&63]+$[U<<2&63]+"=")),I.join("")}var j={};/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */j.read=function(de,U,H,N,I){var z,T,_e=I*8-N-1,Me=(1<<_e)-1,$e=Me>>1,K=-7,Fe=H?I-1:0,ot=H?-1:1,Qe=de[U+Fe];for(Fe+=ot,z=Qe&(1<<-K)-1,Qe>>=-K,K+=_e;K>0;z=z*256+de[U+Fe],Fe+=ot,K-=8);for(T=z&(1<<-K)-1,z>>=-K,K+=N;K>0;T=T*256+de[U+Fe],Fe+=ot,K-=8);if(z===0)z=1-$e;else{if(z===Me)return T?NaN:(Qe?-1:1)*(1/0);T=T+Math.pow(2,N),z=z-$e}return(Qe?-1:1)*T*Math.pow(2,z-N)},j.write=function(de,U,H,N,I,z){var T,_e,Me,$e=z*8-I-1,K=(1<<$e)-1,Fe=K>>1,ot=I===23?Math.pow(2,-24)-Math.pow(2,-77):0,Qe=N?0:z-1,ct=N?1:-1,Ce=U<0||U===0&&1/U<0?1:0;for(U=Math.abs(U),isNaN(U)||U===1/0?(_e=isNaN(U)?1:0,T=K):(T=Math.floor(Math.log(U)/Math.LN2),U*(Me=Math.pow(2,-T))<1&&(T--,Me*=2),T+Fe>=1?U+=ot/Me:U+=ot*Math.pow(2,1-Fe),U*Me>=2&&(T++,Me/=2),T+Fe>=K?(_e=0,T=K):T+Fe>=1?(_e=(U*Me-1)*Math.pow(2,I),T=T+Fe):(_e=U*Math.pow(2,Fe-1)*Math.pow(2,I),T=0));I>=8;de[H+Qe]=_e&255,Qe+=ct,_e/=256,I-=8);for(T=T<<I|_e,$e+=I;$e>0;de[H+Qe]=T&255,Qe+=ct,T/=256,$e-=8);de[H+Qe-ct]|=Ce*128};/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */(function(de){const U=P,H=j,N=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;de.Buffer=K,de.SlowBuffer=he,de.INSPECT_MAX_BYTES=50;const I=2147483647;de.kMaxLength=I;const{Uint8Array:z,ArrayBuffer:T,SharedArrayBuffer:_e}=globalThis;K.TYPED_ARRAY_SUPPORT=Me(),!K.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function Me(){try{const M=new z(1),d={foo:function(){return 42}};return Object.setPrototypeOf(d,z.prototype),Object.setPrototypeOf(M,d),M.foo()===42}catch{return!1}}Object.defineProperty(K.prototype,"parent",{enumerable:!0,get:function(){if(K.isBuffer(this))return this.buffer}}),Object.defineProperty(K.prototype,"offset",{enumerable:!0,get:function(){if(K.isBuffer(this))return this.byteOffset}});function $e(M){if(M>I)throw new RangeError('The value "'+M+'" is invalid for option "size"');const d=new z(M);return Object.setPrototypeOf(d,K.prototype),d}function K(M,d,f){if(typeof M=="number"){if(typeof d=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return ct(M)}return Fe(M,d,f)}K.poolSize=8192;function Fe(M,d,f){if(typeof M=="string")return Ce(M,d);if(T.isView(M))return ve(M);if(M==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof M);if(je(M,T)||M&&je(M.buffer,T)||typeof _e<"u"&&(je(M,_e)||M&&je(M.buffer,_e)))return Ae(M,d,f);if(typeof M=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');const O=M.valueOf&&M.valueOf();if(O!=null&&O!==M)return K.from(O,d,f);const D=He(M);if(D)return D;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof M[Symbol.toPrimitive]=="function")return K.from(M[Symbol.toPrimitive]("string"),d,f);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof M)}K.from=function(M,d,f){return Fe(M,d,f)},Object.setPrototypeOf(K.prototype,z.prototype),Object.setPrototypeOf(K,z);function ot(M){if(typeof M!="number")throw new TypeError('"size" argument must be of type number');if(M<0)throw new RangeError('The value "'+M+'" is invalid for option "size"')}function Qe(M,d,f){return ot(M),M<=0?$e(M):d!==void 0?typeof f=="string"?$e(M).fill(d,f):$e(M).fill(d):$e(M)}K.alloc=function(M,d,f){return Qe(M,d,f)};function ct(M){return ot(M),$e(M<0?0:pt(M)|0)}K.allocUnsafe=function(M){return ct(M)},K.allocUnsafeSlow=function(M){return ct(M)};function Ce(M,d){if((typeof d!="string"||d==="")&&(d="utf8"),!K.isEncoding(d))throw new TypeError("Unknown encoding: "+d);const f=tt(M,d)|0;let O=$e(f);const D=O.write(M,d);return D!==f&&(O=O.slice(0,D)),O}function X(M){const d=M.length<0?0:pt(M.length)|0,f=$e(d);for(let O=0;O<d;O+=1)f[O]=M[O]&255;return f}function ve(M){if(je(M,z)){const d=new z(M);return Ae(d.buffer,d.byteOffset,d.byteLength)}return X(M)}function Ae(M,d,f){if(d<0||M.byteLength<d)throw new RangeError('"offset" is outside of buffer bounds');if(M.byteLength<d+(f||0))throw new RangeError('"length" is outside of buffer bounds');let O;return d===void 0&&f===void 0?O=new z(M):f===void 0?O=new z(M,d):O=new z(M,d,f),Object.setPrototypeOf(O,K.prototype),O}function He(M){if(K.isBuffer(M)){const d=pt(M.length)|0,f=$e(d);return f.length===0||M.copy(f,0,0,d),f}if(M.length!==void 0)return typeof M.length!="number"||at(M.length)?$e(0):X(M);if(M.type==="Buffer"&&Array.isArray(M.data))return X(M.data)}function pt(M){if(M>=I)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+I.toString(16)+" bytes");return M|0}function he(M){return+M!=M&&(M=0),K.alloc(+M)}K.isBuffer=function(d){return d!=null&&d._isBuffer===!0&&d!==K.prototype},K.compare=function(d,f){if(je(d,z)&&(d=K.from(d,d.offset,d.byteLength)),je(f,z)&&(f=K.from(f,f.offset,f.byteLength)),!K.isBuffer(d)||!K.isBuffer(f))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(d===f)return 0;let O=d.length,D=f.length;for(let G=0,fe=Math.min(O,D);G<fe;++G)if(d[G]!==f[G]){O=d[G],D=f[G];break}return O<D?-1:D<O?1:0},K.isEncoding=function(d){switch(String(d).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},K.concat=function(d,f){if(!Array.isArray(d))throw new TypeError('"list" argument must be an Array of Buffers');if(d.length===0)return K.alloc(0);let O;if(f===void 0)for(f=0,O=0;O<d.length;++O)f+=d[O].length;const D=K.allocUnsafe(f);let G=0;for(O=0;O<d.length;++O){let fe=d[O];if(je(fe,z))G+fe.length>D.length?(K.isBuffer(fe)||(fe=K.from(fe)),fe.copy(D,G)):z.prototype.set.call(D,fe,G);else if(K.isBuffer(fe))fe.copy(D,G);else throw new TypeError('"list" argument must be an Array of Buffers');G+=fe.length}return D};function tt(M,d){if(K.isBuffer(M))return M.length;if(T.isView(M)||je(M,T))return M.byteLength;if(typeof M!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof M);const f=M.length,O=arguments.length>2&&arguments[2]===!0;if(!O&&f===0)return 0;let D=!1;for(;;)switch(d){case"ascii":case"latin1":case"binary":return f;case"utf8":case"utf-8":return ht(M).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return f*2;case"hex":return f>>>1;case"base64":return Le(M).length;default:if(D)return O?-1:ht(M).length;d=(""+d).toLowerCase(),D=!0}}K.byteLength=tt;function gt(M,d,f){let O=!1;if((d===void 0||d<0)&&(d=0),d>this.length||((f===void 0||f>this.length)&&(f=this.length),f<=0)||(f>>>=0,d>>>=0,f<=d))return"";for(M||(M="utf8");;)switch(M){case"hex":return E(this,d,f);case"utf8":case"utf-8":return Ge(this,d,f);case"ascii":return Bt(this,d,f);case"latin1":case"binary":return Ct(this,d,f);case"base64":return Xe(this,d,f);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ne(this,d,f);default:if(O)throw new TypeError("Unknown encoding: "+M);M=(M+"").toLowerCase(),O=!0}}K.prototype._isBuffer=!0;function Ue(M,d,f){const O=M[d];M[d]=M[f],M[f]=O}K.prototype.swap16=function(){const d=this.length;if(d%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let f=0;f<d;f+=2)Ue(this,f,f+1);return this},K.prototype.swap32=function(){const d=this.length;if(d%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let f=0;f<d;f+=4)Ue(this,f,f+3),Ue(this,f+1,f+2);return this},K.prototype.swap64=function(){const d=this.length;if(d%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let f=0;f<d;f+=8)Ue(this,f,f+7),Ue(this,f+1,f+6),Ue(this,f+2,f+5),Ue(this,f+3,f+4);return this},K.prototype.toString=function(){const d=this.length;return d===0?"":arguments.length===0?Ge(this,0,d):gt.apply(this,arguments)},K.prototype.toLocaleString=K.prototype.toString,K.prototype.equals=function(d){if(!K.isBuffer(d))throw new TypeError("Argument must be a Buffer");return this===d?!0:K.compare(this,d)===0},K.prototype.inspect=function(){let d="";const f=de.INSPECT_MAX_BYTES;return d=this.toString("hex",0,f).replace(/(.{2})/g,"$1 ").trim(),this.length>f&&(d+=" ... "),"<Buffer "+d+">"},N&&(K.prototype[N]=K.prototype.inspect),K.prototype.compare=function(d,f,O,D,G){if(je(d,z)&&(d=K.from(d,d.offset,d.byteLength)),!K.isBuffer(d))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof d);if(f===void 0&&(f=0),O===void 0&&(O=d?d.length:0),D===void 0&&(D=0),G===void 0&&(G=this.length),f<0||O>d.length||D<0||G>this.length)throw new RangeError("out of range index");if(D>=G&&f>=O)return 0;if(D>=G)return-1;if(f>=O)return 1;if(f>>>=0,O>>>=0,D>>>=0,G>>>=0,this===d)return 0;let fe=G-D,Mt=O-f;const Nt=Math.min(fe,Mt),qt=this.slice(D,G),nr=d.slice(f,O);for(let jt=0;jt<Nt;++jt)if(qt[jt]!==nr[jt]){fe=qt[jt],Mt=nr[jt];break}return fe<Mt?-1:Mt<fe?1:0};function yt(M,d,f,O,D){if(M.length===0)return-1;if(typeof f=="string"?(O=f,f=0):f>2147483647?f=2147483647:f<-2147483648&&(f=-2147483648),f=+f,at(f)&&(f=D?0:M.length-1),f<0&&(f=M.length+f),f>=M.length){if(D)return-1;f=M.length-1}else if(f<0)if(D)f=0;else return-1;if(typeof d=="string"&&(d=K.from(d,O)),K.isBuffer(d))return d.length===0?-1:xt(M,d,f,O,D);if(typeof d=="number")return d=d&255,typeof z.prototype.indexOf=="function"?D?z.prototype.indexOf.call(M,d,f):z.prototype.lastIndexOf.call(M,d,f):xt(M,[d],f,O,D);throw new TypeError("val must be string, number or Buffer")}function xt(M,d,f,O,D){let G=1,fe=M.length,Mt=d.length;if(O!==void 0&&(O=String(O).toLowerCase(),O==="ucs2"||O==="ucs-2"||O==="utf16le"||O==="utf-16le")){if(M.length<2||d.length<2)return-1;G=2,fe/=2,Mt/=2,f/=2}function Nt(nr,jt){return G===1?nr[jt]:nr.readUInt16BE(jt*G)}let qt;if(D){let nr=-1;for(qt=f;qt<fe;qt++)if(Nt(M,qt)===Nt(d,nr===-1?0:qt-nr)){if(nr===-1&&(nr=qt),qt-nr+1===Mt)return nr*G}else nr!==-1&&(qt-=qt-nr),nr=-1}else for(f+Mt>fe&&(f=fe-Mt),qt=f;qt>=0;qt--){let nr=!0;for(let jt=0;jt<Mt;jt++)if(Nt(M,qt+jt)!==Nt(d,jt)){nr=!1;break}if(nr)return qt}return-1}K.prototype.includes=function(d,f,O){return this.indexOf(d,f,O)!==-1},K.prototype.indexOf=function(d,f,O){return yt(this,d,f,O,!0)},K.prototype.lastIndexOf=function(d,f,O){return yt(this,d,f,O,!1)};function Ze(M,d,f,O){f=Number(f)||0;const D=M.length-f;O?(O=Number(O),O>D&&(O=D)):O=D;const G=d.length;O>G/2&&(O=G/2);let fe;for(fe=0;fe<O;++fe){const Mt=parseInt(d.substr(fe*2,2),16);if(at(Mt))return fe;M[f+fe]=Mt}return fe}function re(M,d,f,O){return Oe(ht(d,M.length-f),M,f,O)}function Ne(M,d,f,O){return Oe(Z(d),M,f,O)}function rt(M,d,f,O){return Oe(Le(d),M,f,O)}function st(M,d,f,O){return Oe(ke(d,M.length-f),M,f,O)}K.prototype.write=function(d,f,O,D){if(f===void 0)D="utf8",O=this.length,f=0;else if(O===void 0&&typeof f=="string")D=f,O=this.length,f=0;else if(isFinite(f))f=f>>>0,isFinite(O)?(O=O>>>0,D===void 0&&(D="utf8")):(D=O,O=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");const G=this.length-f;if((O===void 0||O>G)&&(O=G),d.length>0&&(O<0||f<0)||f>this.length)throw new RangeError("Attempt to write outside buffer bounds");D||(D="utf8");let fe=!1;for(;;)switch(D){case"hex":return Ze(this,d,f,O);case"utf8":case"utf-8":return re(this,d,f,O);case"ascii":case"latin1":case"binary":return Ne(this,d,f,O);case"base64":return rt(this,d,f,O);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return st(this,d,f,O);default:if(fe)throw new TypeError("Unknown encoding: "+D);D=(""+D).toLowerCase(),fe=!0}},K.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function Xe(M,d,f){return d===0&&f===M.length?U.fromByteArray(M):U.fromByteArray(M.slice(d,f))}function Ge(M,d,f){f=Math.min(M.length,f);const O=[];let D=d;for(;D<f;){const G=M[D];let fe=null,Mt=G>239?4:G>223?3:G>191?2:1;if(D+Mt<=f){let Nt,qt,nr,jt;switch(Mt){case 1:G<128&&(fe=G);break;case 2:Nt=M[D+1],(Nt&192)===128&&(jt=(G&31)<<6|Nt&63,jt>127&&(fe=jt));break;case 3:Nt=M[D+1],qt=M[D+2],(Nt&192)===128&&(qt&192)===128&&(jt=(G&15)<<12|(Nt&63)<<6|qt&63,jt>2047&&(jt<55296||jt>57343)&&(fe=jt));break;case 4:Nt=M[D+1],qt=M[D+2],nr=M[D+3],(Nt&192)===128&&(qt&192)===128&&(nr&192)===128&&(jt=(G&15)<<18|(Nt&63)<<12|(qt&63)<<6|nr&63,jt>65535&&jt<1114112&&(fe=jt))}}fe===null?(fe=65533,Mt=1):fe>65535&&(fe-=65536,O.push(fe>>>10&1023|55296),fe=56320|fe&1023),O.push(fe),D+=Mt}return bt(O)}const mt=4096;function bt(M){const d=M.length;if(d<=mt)return String.fromCharCode.apply(String,M);let f="",O=0;for(;O<d;)f+=String.fromCharCode.apply(String,M.slice(O,O+=mt));return f}function Bt(M,d,f){let O="";f=Math.min(M.length,f);for(let D=d;D<f;++D)O+=String.fromCharCode(M[D]&127);return O}function Ct(M,d,f){let O="";f=Math.min(M.length,f);for(let D=d;D<f;++D)O+=String.fromCharCode(M[D]);return O}function E(M,d,f){const O=M.length;(!d||d<0)&&(d=0),(!f||f<0||f>O)&&(f=O);let D="";for(let G=d;G<f;++G)D+=vt[M[G]];return D}function ne(M,d,f){const O=M.slice(d,f);let D="";for(let G=0;G<O.length-1;G+=2)D+=String.fromCharCode(O[G]+O[G+1]*256);return D}K.prototype.slice=function(d,f){const O=this.length;d=~~d,f=f===void 0?O:~~f,d<0?(d+=O,d<0&&(d=0)):d>O&&(d=O),f<0?(f+=O,f<0&&(f=0)):f>O&&(f=O),f<d&&(f=d);const D=this.subarray(d,f);return Object.setPrototypeOf(D,K.prototype),D};function F(M,d,f){if(M%1!==0||M<0)throw new RangeError("offset is not uint");if(M+d>f)throw new RangeError("Trying to access beyond buffer length")}K.prototype.readUintLE=K.prototype.readUIntLE=function(d,f,O){d=d>>>0,f=f>>>0,O||F(d,f,this.length);let D=this[d],G=1,fe=0;for(;++fe<f&&(G*=256);)D+=this[d+fe]*G;return D},K.prototype.readUintBE=K.prototype.readUIntBE=function(d,f,O){d=d>>>0,f=f>>>0,O||F(d,f,this.length);let D=this[d+--f],G=1;for(;f>0&&(G*=256);)D+=this[d+--f]*G;return D},K.prototype.readUint8=K.prototype.readUInt8=function(d,f){return d=d>>>0,f||F(d,1,this.length),this[d]},K.prototype.readUint16LE=K.prototype.readUInt16LE=function(d,f){return d=d>>>0,f||F(d,2,this.length),this[d]|this[d+1]<<8},K.prototype.readUint16BE=K.prototype.readUInt16BE=function(d,f){return d=d>>>0,f||F(d,2,this.length),this[d]<<8|this[d+1]},K.prototype.readUint32LE=K.prototype.readUInt32LE=function(d,f){return d=d>>>0,f||F(d,4,this.length),(this[d]|this[d+1]<<8|this[d+2]<<16)+this[d+3]*16777216},K.prototype.readUint32BE=K.prototype.readUInt32BE=function(d,f){return d=d>>>0,f||F(d,4,this.length),this[d]*16777216+(this[d+1]<<16|this[d+2]<<8|this[d+3])},K.prototype.readBigUInt64LE=_t(function(d){d=d>>>0,Lr(d,"offset");const f=this[d],O=this[d+7];(f===void 0||O===void 0)&&Cr(d,this.length-8);const D=f+this[++d]*2**8+this[++d]*2**16+this[++d]*2**24,G=this[++d]+this[++d]*2**8+this[++d]*2**16+O*2**24;return BigInt(D)+(BigInt(G)<<BigInt(32))}),K.prototype.readBigUInt64BE=_t(function(d){d=d>>>0,Lr(d,"offset");const f=this[d],O=this[d+7];(f===void 0||O===void 0)&&Cr(d,this.length-8);const D=f*2**24+this[++d]*2**16+this[++d]*2**8+this[++d],G=this[++d]*2**24+this[++d]*2**16+this[++d]*2**8+O;return(BigInt(D)<<BigInt(32))+BigInt(G)}),K.prototype.readIntLE=function(d,f,O){d=d>>>0,f=f>>>0,O||F(d,f,this.length);let D=this[d],G=1,fe=0;for(;++fe<f&&(G*=256);)D+=this[d+fe]*G;return G*=128,D>=G&&(D-=Math.pow(2,8*f)),D},K.prototype.readIntBE=function(d,f,O){d=d>>>0,f=f>>>0,O||F(d,f,this.length);let D=f,G=1,fe=this[d+--D];for(;D>0&&(G*=256);)fe+=this[d+--D]*G;return G*=128,fe>=G&&(fe-=Math.pow(2,8*f)),fe},K.prototype.readInt8=function(d,f){return d=d>>>0,f||F(d,1,this.length),this[d]&128?(255-this[d]+1)*-1:this[d]},K.prototype.readInt16LE=function(d,f){d=d>>>0,f||F(d,2,this.length);const O=this[d]|this[d+1]<<8;return O&32768?O|4294901760:O},K.prototype.readInt16BE=function(d,f){d=d>>>0,f||F(d,2,this.length);const O=this[d+1]|this[d]<<8;return O&32768?O|4294901760:O},K.prototype.readInt32LE=function(d,f){return d=d>>>0,f||F(d,4,this.length),this[d]|this[d+1]<<8|this[d+2]<<16|this[d+3]<<24},K.prototype.readInt32BE=function(d,f){return d=d>>>0,f||F(d,4,this.length),this[d]<<24|this[d+1]<<16|this[d+2]<<8|this[d+3]},K.prototype.readBigInt64LE=_t(function(d){d=d>>>0,Lr(d,"offset");const f=this[d],O=this[d+7];(f===void 0||O===void 0)&&Cr(d,this.length-8);const D=this[d+4]+this[d+5]*2**8+this[d+6]*2**16+(O<<24);return(BigInt(D)<<BigInt(32))+BigInt(f+this[++d]*2**8+this[++d]*2**16+this[++d]*2**24)}),K.prototype.readBigInt64BE=_t(function(d){d=d>>>0,Lr(d,"offset");const f=this[d],O=this[d+7];(f===void 0||O===void 0)&&Cr(d,this.length-8);const D=(f<<24)+this[++d]*2**16+this[++d]*2**8+this[++d];return(BigInt(D)<<BigInt(32))+BigInt(this[++d]*2**24+this[++d]*2**16+this[++d]*2**8+O)}),K.prototype.readFloatLE=function(d,f){return d=d>>>0,f||F(d,4,this.length),H.read(this,d,!0,23,4)},K.prototype.readFloatBE=function(d,f){return d=d>>>0,f||F(d,4,this.length),H.read(this,d,!1,23,4)},K.prototype.readDoubleLE=function(d,f){return d=d>>>0,f||F(d,8,this.length),H.read(this,d,!0,52,8)},K.prototype.readDoubleBE=function(d,f){return d=d>>>0,f||F(d,8,this.length),H.read(this,d,!1,52,8)};function oe(M,d,f,O,D,G){if(!K.isBuffer(M))throw new TypeError('"buffer" argument must be a Buffer instance');if(d>D||d<G)throw new RangeError('"value" argument is out of bounds');if(f+O>M.length)throw new RangeError("Index out of range")}K.prototype.writeUintLE=K.prototype.writeUIntLE=function(d,f,O,D){if(d=+d,f=f>>>0,O=O>>>0,!D){const Mt=Math.pow(2,8*O)-1;oe(this,d,f,O,Mt,0)}let G=1,fe=0;for(this[f]=d&255;++fe<O&&(G*=256);)this[f+fe]=d/G&255;return f+O},K.prototype.writeUintBE=K.prototype.writeUIntBE=function(d,f,O,D){if(d=+d,f=f>>>0,O=O>>>0,!D){const Mt=Math.pow(2,8*O)-1;oe(this,d,f,O,Mt,0)}let G=O-1,fe=1;for(this[f+G]=d&255;--G>=0&&(fe*=256);)this[f+G]=d/fe&255;return f+O},K.prototype.writeUint8=K.prototype.writeUInt8=function(d,f,O){return d=+d,f=f>>>0,O||oe(this,d,f,1,255,0),this[f]=d&255,f+1},K.prototype.writeUint16LE=K.prototype.writeUInt16LE=function(d,f,O){return d=+d,f=f>>>0,O||oe(this,d,f,2,65535,0),this[f]=d&255,this[f+1]=d>>>8,f+2},K.prototype.writeUint16BE=K.prototype.writeUInt16BE=function(d,f,O){return d=+d,f=f>>>0,O||oe(this,d,f,2,65535,0),this[f]=d>>>8,this[f+1]=d&255,f+2},K.prototype.writeUint32LE=K.prototype.writeUInt32LE=function(d,f,O){return d=+d,f=f>>>0,O||oe(this,d,f,4,4294967295,0),this[f+3]=d>>>24,this[f+2]=d>>>16,this[f+1]=d>>>8,this[f]=d&255,f+4},K.prototype.writeUint32BE=K.prototype.writeUInt32BE=function(d,f,O){return d=+d,f=f>>>0,O||oe(this,d,f,4,4294967295,0),this[f]=d>>>24,this[f+1]=d>>>16,this[f+2]=d>>>8,this[f+3]=d&255,f+4};function Te(M,d,f,O,D){Er(d,O,D,M,f,7);let G=Number(d&BigInt(4294967295));M[f++]=G,G=G>>8,M[f++]=G,G=G>>8,M[f++]=G,G=G>>8,M[f++]=G;let fe=Number(d>>BigInt(32)&BigInt(4294967295));return M[f++]=fe,fe=fe>>8,M[f++]=fe,fe=fe>>8,M[f++]=fe,fe=fe>>8,M[f++]=fe,f}function lt(M,d,f,O,D){Er(d,O,D,M,f,7);let G=Number(d&BigInt(4294967295));M[f+7]=G,G=G>>8,M[f+6]=G,G=G>>8,M[f+5]=G,G=G>>8,M[f+4]=G;let fe=Number(d>>BigInt(32)&BigInt(4294967295));return M[f+3]=fe,fe=fe>>8,M[f+2]=fe,fe=fe>>8,M[f+1]=fe,fe=fe>>8,M[f]=fe,f+8}K.prototype.writeBigUInt64LE=_t(function(d,f=0){return Te(this,d,f,BigInt(0),BigInt("0xffffffffffffffff"))}),K.prototype.writeBigUInt64BE=_t(function(d,f=0){return lt(this,d,f,BigInt(0),BigInt("0xffffffffffffffff"))}),K.prototype.writeIntLE=function(d,f,O,D){if(d=+d,f=f>>>0,!D){const Nt=Math.pow(2,8*O-1);oe(this,d,f,O,Nt-1,-Nt)}let G=0,fe=1,Mt=0;for(this[f]=d&255;++G<O&&(fe*=256);)d<0&&Mt===0&&this[f+G-1]!==0&&(Mt=1),this[f+G]=(d/fe>>0)-Mt&255;return f+O},K.prototype.writeIntBE=function(d,f,O,D){if(d=+d,f=f>>>0,!D){const Nt=Math.pow(2,8*O-1);oe(this,d,f,O,Nt-1,-Nt)}let G=O-1,fe=1,Mt=0;for(this[f+G]=d&255;--G>=0&&(fe*=256);)d<0&&Mt===0&&this[f+G+1]!==0&&(Mt=1),this[f+G]=(d/fe>>0)-Mt&255;return f+O},K.prototype.writeInt8=function(d,f,O){return d=+d,f=f>>>0,O||oe(this,d,f,1,127,-128),d<0&&(d=255+d+1),this[f]=d&255,f+1},K.prototype.writeInt16LE=function(d,f,O){return d=+d,f=f>>>0,O||oe(this,d,f,2,32767,-32768),this[f]=d&255,this[f+1]=d>>>8,f+2},K.prototype.writeInt16BE=function(d,f,O){return d=+d,f=f>>>0,O||oe(this,d,f,2,32767,-32768),this[f]=d>>>8,this[f+1]=d&255,f+2},K.prototype.writeInt32LE=function(d,f,O){return d=+d,f=f>>>0,O||oe(this,d,f,4,2147483647,-2147483648),this[f]=d&255,this[f+1]=d>>>8,this[f+2]=d>>>16,this[f+3]=d>>>24,f+4},K.prototype.writeInt32BE=function(d,f,O){return d=+d,f=f>>>0,O||oe(this,d,f,4,2147483647,-2147483648),d<0&&(d=4294967295+d+1),this[f]=d>>>24,this[f+1]=d>>>16,this[f+2]=d>>>8,this[f+3]=d&255,f+4},K.prototype.writeBigInt64LE=_t(function(d,f=0){return Te(this,d,f,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),K.prototype.writeBigInt64BE=_t(function(d,f=0){return lt(this,d,f,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function Ye(M,d,f,O,D,G){if(f+O>M.length)throw new RangeError("Index out of range");if(f<0)throw new RangeError("Index out of range")}function $t(M,d,f,O,D){return d=+d,f=f>>>0,D||Ye(M,d,f,4),H.write(M,d,f,O,23,4),f+4}K.prototype.writeFloatLE=function(d,f,O){return $t(this,d,f,!0,O)},K.prototype.writeFloatBE=function(d,f,O){return $t(this,d,f,!1,O)};function ut(M,d,f,O,D){return d=+d,f=f>>>0,D||Ye(M,d,f,8),H.write(M,d,f,O,52,8),f+8}K.prototype.writeDoubleLE=function(d,f,O){return ut(this,d,f,!0,O)},K.prototype.writeDoubleBE=function(d,f,O){return ut(this,d,f,!1,O)},K.prototype.copy=function(d,f,O,D){if(!K.isBuffer(d))throw new TypeError("argument should be a Buffer");if(O||(O=0),!D&&D!==0&&(D=this.length),f>=d.length&&(f=d.length),f||(f=0),D>0&&D<O&&(D=O),D===O||d.length===0||this.length===0)return 0;if(f<0)throw new RangeError("targetStart out of bounds");if(O<0||O>=this.length)throw new RangeError("Index out of range");if(D<0)throw new RangeError("sourceEnd out of bounds");D>this.length&&(D=this.length),d.length-f<D-O&&(D=d.length-f+O);const G=D-O;return this===d&&typeof z.prototype.copyWithin=="function"?this.copyWithin(f,O,D):z.prototype.set.call(d,this.subarray(O,D),f),G},K.prototype.fill=function(d,f,O,D){if(typeof d=="string"){if(typeof f=="string"?(D=f,f=0,O=this.length):typeof O=="string"&&(D=O,O=this.length),D!==void 0&&typeof D!="string")throw new TypeError("encoding must be a string");if(typeof D=="string"&&!K.isEncoding(D))throw new TypeError("Unknown encoding: "+D);if(d.length===1){const fe=d.charCodeAt(0);(D==="utf8"&&fe<128||D==="latin1")&&(d=fe)}}else typeof d=="number"?d=d&255:typeof d=="boolean"&&(d=Number(d));if(f<0||this.length<f||this.length<O)throw new RangeError("Out of range index");if(O<=f)return this;f=f>>>0,O=O===void 0?this.length:O>>>0,d||(d=0);let G;if(typeof d=="number")for(G=f;G<O;++G)this[G]=d;else{const fe=K.isBuffer(d)?d:K.from(d,D),Mt=fe.length;if(Mt===0)throw new TypeError('The value "'+d+'" is invalid for argument "value"');for(G=0;G<O-f;++G)this[G+f]=fe[G%Mt]}return this};const ft={};function Wt(M,d,f){ft[M]=class extends f{constructor(){super(),Object.defineProperty(this,"message",{value:d.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${M}]`,this.stack,delete this.name}get code(){return M}set code(D){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:D,writable:!0})}toString(){return`${this.name} [${M}]: ${this.message}`}}}Wt("ERR_BUFFER_OUT_OF_BOUNDS",function(M){return M?`${M} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),Wt("ERR_INVALID_ARG_TYPE",function(M,d){return`The "${M}" argument must be of type number. Received type ${typeof d}`},TypeError),Wt("ERR_OUT_OF_RANGE",function(M,d,f){let O=`The value of "${M}" is out of range.`,D=f;return Number.isInteger(f)&&Math.abs(f)>2**32?D=Kt(String(f)):typeof f=="bigint"&&(D=String(f),(f>BigInt(2)**BigInt(32)||f<-(BigInt(2)**BigInt(32)))&&(D=Kt(D)),D+="n"),O+=` It must be ${d}. Received ${D}`,O},RangeError);function Kt(M){let d="",f=M.length;const O=M[0]==="-"?1:0;for(;f>=O+4;f-=3)d=`_${M.slice(f-3,f)}${d}`;return`${M.slice(0,f)}${d}`}function Ir(M,d,f){Lr(d,"offset"),(M[d]===void 0||M[d+f]===void 0)&&Cr(d,M.length-(f+1))}function Er(M,d,f,O,D,G){if(M>f||M<d){const fe=typeof d=="bigint"?"n":"";let Mt;throw d===0||d===BigInt(0)?Mt=`>= 0${fe} and < 2${fe} ** ${(G+1)*8}${fe}`:Mt=`>= -(2${fe} ** ${(G+1)*8-1}${fe}) and < 2 ** ${(G+1)*8-1}${fe}`,new ft.ERR_OUT_OF_RANGE("value",Mt,M)}Ir(O,D,G)}function Lr(M,d){if(typeof M!="number")throw new ft.ERR_INVALID_ARG_TYPE(d,"number",M)}function Cr(M,d,f){throw Math.floor(M)!==M?(Lr(M,f),new ft.ERR_OUT_OF_RANGE("offset","an integer",M)):d<0?new ft.ERR_BUFFER_OUT_OF_BOUNDS:new ft.ERR_OUT_OF_RANGE("offset",`>= 0 and <= ${d}`,M)}const Hr=/[^+/0-9A-Za-z-_]/g;function wn(M){if(M=M.split("=")[0],M=M.trim().replace(Hr,""),M.length<2)return"";for(;M.length%4!==0;)M=M+"=";return M}function ht(M,d){d=d||1/0;let f;const O=M.length;let D=null;const G=[];for(let fe=0;fe<O;++fe){if(f=M.charCodeAt(fe),f>55295&&f<57344){if(!D){if(f>56319){(d-=3)>-1&&G.push(239,191,189);continue}else if(fe+1===O){(d-=3)>-1&&G.push(239,191,189);continue}D=f;continue}if(f<56320){(d-=3)>-1&&G.push(239,191,189),D=f;continue}f=(D-55296<<10|f-56320)+65536}else D&&(d-=3)>-1&&G.push(239,191,189);if(D=null,f<128){if((d-=1)<0)break;G.push(f)}else if(f<2048){if((d-=2)<0)break;G.push(f>>6|192,f&63|128)}else if(f<65536){if((d-=3)<0)break;G.push(f>>12|224,f>>6&63|128,f&63|128)}else if(f<1114112){if((d-=4)<0)break;G.push(f>>18|240,f>>12&63|128,f>>6&63|128,f&63|128)}else throw new Error("Invalid code point")}return G}function Z(M){const d=[];for(let f=0;f<M.length;++f)d.push(M.charCodeAt(f)&255);return d}function ke(M,d){let f,O,D;const G=[];for(let fe=0;fe<M.length&&!((d-=2)<0);++fe)f=M.charCodeAt(fe),O=f>>8,D=f%256,G.push(D),G.push(O);return G}function Le(M){return U.toByteArray(wn(M))}function Oe(M,d,f,O){let D;for(D=0;D<O&&!(D+f>=d.length||D>=M.length);++D)d[D+f]=M[D];return D}function je(M,d){return M instanceof d||M!=null&&M.constructor!=null&&M.constructor.name!=null&&M.constructor.name===d.name}function at(M){return M!==M}const vt=function(){const M="0123456789abcdef",d=new Array(256);for(let f=0;f<16;++f){const O=f*16;for(let D=0;D<16;++D)d[O+D]=M[f]+M[D]}return d}();function _t(M){return typeof BigInt>"u"?kt:M}function kt(){throw new Error("BigInt not supported")}})(Y);const le=Y.Buffer;we.Blob=Y.Blob,we.BlobOptions=Y.BlobOptions,we.Buffer=Y.Buffer,we.File=Y.File,we.FileOptions=Y.FileOptions,we.INSPECT_MAX_BYTES=Y.INSPECT_MAX_BYTES,we.SlowBuffer=Y.SlowBuffer,we.TranscodeEncoding=Y.TranscodeEncoding,we.atob=Y.atob,we.btoa=Y.btoa,we.constants=Y.constants,we.default=le,we.isAscii=Y.isAscii,we.isUtf8=Y.isUtf8,we.kMaxLength=Y.kMaxLength,we.kStringMaxLength=Y.kStringMaxLength,we.resolveObjectURL=Y.resolveObjectURL,we.transcode=Y.transcode})(pm);var tg=eg(pm),Ip={},hm={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(we,Y,P)=>{we.exports=P.p+"ort-wasm-simd-threaded.jsep.wasm"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(we,Y,P)=>{P.r(Y),P.d(Y,{Environment:()=>Ge,Interpreter:()=>mt,Template:()=>Ct,parse:()=>Ae,tokenize:()=>q});var $=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),se=Object.freeze({set:$.Set,for:$.For,in:$.In,is:$.Is,if:$.If,else:$.Else,endif:$.EndIf,elif:$.ElseIf,endfor:$.EndFor,and:$.And,or:$.Or,not:$.Not,"not in":$.NotIn,macro:$.Macro,endmacro:$.EndMacro,true:$.BooleanLiteral,false:$.BooleanLiteral,True:$.BooleanLiteral,False:$.BooleanLiteral}),xe=class{constructor(E,ne){this.value=E,this.type=ne}};function Ie(E){return/\w/.test(E)}function Pe(E){return/[0-9]/.test(E)}var Q=[["{%",$.OpenStatement],["%}",$.CloseStatement],["{{",$.OpenExpression],["}}",$.CloseExpression],["(",$.OpenParen],[")",$.CloseParen],["{",$.OpenCurlyBracket],["}",$.CloseCurlyBracket],["[",$.OpenSquareBracket],["]",$.CloseSquareBracket],[",",$.Comma],[".",$.Dot],[":",$.Colon],["|",$.Pipe],["<=",$.ComparisonBinaryOperator],[">=",$.ComparisonBinaryOperator],["==",$.ComparisonBinaryOperator],["!=",$.ComparisonBinaryOperator],["<",$.ComparisonBinaryOperator],[">",$.ComparisonBinaryOperator],["+",$.AdditiveBinaryOperator],["-",$.AdditiveBinaryOperator],["*",$.MultiplicativeBinaryOperator],["/",$.MultiplicativeBinaryOperator],["%",$.MultiplicativeBinaryOperator],["=",$.Equals]],R=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function W(E,ne={}){return E.endsWith(`
`)&&(E=E.slice(0,-1)),E=E.replace(/{#.*?#}/gs,"{##}"),ne.lstrip_blocks&&(E=E.replace(/^[ \t]*({[#%])/gm,"$1")),ne.trim_blocks&&(E=E.replace(/([#%]})\n/g,"$1")),E.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function q(E,ne={}){const F=[],oe=W(E,ne);let Te=0;const lt=Ye=>{let $t="";for(;Ye(oe[Te]);){if(oe[Te]==="\\"){if(++Te,Te>=oe.length)throw new SyntaxError("Unexpected end of input");const ut=oe[Te++],ft=R.get(ut);if(ft===void 0)throw new SyntaxError(`Unexpected escaped character: ${ut}`);$t+=ft;continue}if($t+=oe[Te++],Te>=oe.length)throw new SyntaxError("Unexpected end of input")}return $t};e:for(;Te<oe.length;){const Ye=F.at(-1)?.type;if(Ye===void 0||Ye===$.CloseStatement||Ye===$.CloseExpression){let ut="";for(;Te<oe.length&&!(oe[Te]==="{"&&(oe[Te+1]==="%"||oe[Te+1]==="{"));)ut+=oe[Te++];if(ut.length>0){F.push(new xe(ut,$.Text));continue}}lt(ut=>/\s/.test(ut));const $t=oe[Te];if($t==="-"||$t==="+"){const ut=F.at(-1)?.type;if(ut===$.Text||ut===void 0)throw new SyntaxError(`Unexpected character: ${$t}`);switch(ut){case $.Identifier:case $.NumericLiteral:case $.BooleanLiteral:case $.StringLiteral:case $.CloseParen:case $.CloseSquareBracket:break;default:{++Te;const ft=lt(Pe);F.push(new xe(`${$t}${ft}`,ft.length>0?$.NumericLiteral:$.UnaryOperator));continue}}}for(const[ut,ft]of Q)if(oe.slice(Te,Te+ut.length)===ut){F.push(new xe(ut,ft)),Te+=ut.length;continue e}if($t==="'"||$t==='"'){++Te;const ut=lt(ft=>ft!==$t);F.push(new xe(ut,$.StringLiteral)),++Te;continue}if(Pe($t)){const ut=lt(Pe);F.push(new xe(ut,$.NumericLiteral));continue}if(Ie($t)){const ut=lt(Ie),ft=Object.hasOwn(se,ut)?se[ut]:$.Identifier;ft===$.In&&F.at(-1)?.type===$.Not?(F.pop(),F.push(new xe("not in",$.NotIn))):F.push(new xe(ut,ft));continue}throw new SyntaxError(`Unexpected character: ${$t}`)}return F}var te=class{type="Statement"},pe=class extends te{constructor(E){super(),this.body=E}type="Program"},Se=class extends te{constructor(E,ne,F){super(),this.test=E,this.body=ne,this.alternate=F}type="If"},Ee=class extends te{constructor(E,ne,F,oe){super(),this.loopvar=E,this.iterable=ne,this.body=F,this.defaultBlock=oe}type="For"},j=class extends te{constructor(E,ne){super(),this.assignee=E,this.value=ne}type="Set"},le=class extends te{constructor(E,ne,F){super(),this.name=E,this.args=ne,this.body=F}type="Macro"},de=class extends te{type="Expression"},U=class extends de{constructor(E,ne,F){super(),this.object=E,this.property=ne,this.computed=F}type="MemberExpression"},H=class extends de{constructor(E,ne){super(),this.callee=E,this.args=ne}type="CallExpression"},N=class extends de{constructor(E){super(),this.value=E}type="Identifier"},I=class extends de{constructor(E){super(),this.value=E}type="Literal"},z=class extends I{type="NumericLiteral"},T=class extends I{type="StringLiteral"},_e=class extends I{type="BooleanLiteral"},Me=class extends I{type="ArrayLiteral"},$e=class extends I{type="TupleLiteral"},K=class extends I{type="ObjectLiteral"},Fe=class extends de{constructor(E,ne,F){super(),this.operator=E,this.left=ne,this.right=F}type="BinaryExpression"},ot=class extends de{constructor(E,ne){super(),this.operand=E,this.filter=ne}type="FilterExpression"},Qe=class extends de{constructor(E,ne){super(),this.iterable=E,this.test=ne}type="SelectExpression"},ct=class extends de{constructor(E,ne,F){super(),this.operand=E,this.negate=ne,this.test=F}type="TestExpression"},Ce=class extends de{constructor(E,ne){super(),this.operator=E,this.argument=ne}type="UnaryExpression"},X=class extends de{constructor(E=void 0,ne=void 0,F=void 0){super(),this.start=E,this.stop=ne,this.step=F}type="SliceExpression"},ve=class extends de{constructor(E,ne){super(),this.key=E,this.value=ne}type="KeywordArgumentExpression"};function Ae(E){const ne=new pe([]);let F=0;function oe(D,G){const fe=E[F++];if(!fe||fe.type!==D)throw new Error(`Parser Error: ${G}. ${fe.type} !== ${D}.`);return fe}function Te(){switch(E[F].type){case $.Text:return $t();case $.OpenStatement:return ut();case $.OpenExpression:return ft();default:throw new SyntaxError(`Unexpected token type: ${E[F].type}`)}}function lt(...D){return F+D.length<=E.length&&D.some((G,fe)=>G!==E[F+fe].type)}function Ye(...D){return F+D.length<=E.length&&D.every((G,fe)=>G===E[F+fe].type)}function $t(){return new T(oe($.Text,"Expected text token").value)}function ut(){oe($.OpenStatement,"Expected opening statement token");let D;switch(E[F].type){case $.Set:++F,D=Wt(),oe($.CloseStatement,"Expected closing statement token");break;case $.If:++F,D=Kt(),oe($.OpenStatement,"Expected {% token"),oe($.EndIf,"Expected endif token"),oe($.CloseStatement,"Expected %} token");break;case $.Macro:++F,D=Ir(),oe($.OpenStatement,"Expected {% token"),oe($.EndMacro,"Expected endmacro token"),oe($.CloseStatement,"Expected %} token");break;case $.For:++F,D=Lr(),oe($.OpenStatement,"Expected {% token"),oe($.EndFor,"Expected endfor token"),oe($.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${E[F].type}`)}return D}function ft(){oe($.OpenExpression,"Expected opening expression token");const D=Cr();return oe($.CloseExpression,"Expected closing expression token"),D}function Wt(){const D=Cr();if(Ye($.Equals)){++F;const G=Wt();return new j(D,G)}return D}function Kt(){const D=Cr();oe($.CloseStatement,"Expected closing statement token");const G=[],fe=[];for(;!(E[F]?.type===$.OpenStatement&&(E[F+1]?.type===$.ElseIf||E[F+1]?.type===$.Else||E[F+1]?.type===$.EndIf));)G.push(Te());if(E[F]?.type===$.OpenStatement&&E[F+1]?.type!==$.EndIf)if(++F,Ye($.ElseIf))oe($.ElseIf,"Expected elseif token"),fe.push(Kt());else for(oe($.Else,"Expected else token"),oe($.CloseStatement,"Expected closing statement token");!(E[F]?.type===$.OpenStatement&&E[F+1]?.type===$.EndIf);)fe.push(Te());return new Se(D,G,fe)}function Ir(){const D=O();if(D.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const G=at();oe($.CloseStatement,"Expected closing statement token");const fe=[];for(;lt($.OpenStatement,$.EndMacro);)fe.push(Te());return new le(D,G,fe)}function Er(D=!1){const G=D?O:Cr,fe=[G()],Mt=Ye($.Comma);for(;Mt&&(++F,fe.push(G()),!!Ye($.Comma)););return Mt?new $e(fe):fe[0]}function Lr(){const D=Er(!0);if(!(D instanceof N||D instanceof $e))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${D.type} instead`);oe($.In,"Expected `in` keyword following loop variable");const G=Cr();oe($.CloseStatement,"Expected closing statement token");const fe=[];for(;lt($.OpenStatement,$.EndFor)&&lt($.OpenStatement,$.Else);)fe.push(Te());const Mt=[];if(Ye($.OpenStatement,$.Else))for(++F,++F,oe($.CloseStatement,"Expected closing statement token");lt($.OpenStatement,$.EndFor);)Mt.push(Te());return new Ee(D,G,fe,Mt)}function Cr(){return Hr()}function Hr(){const D=wn();if(Ye($.If)){++F;const G=wn();if(Ye($.Else)){++F;const fe=wn();return new Se(G,[D],[fe])}else return new Qe(D,G)}return D}function wn(){let D=ht();for(;Ye($.Or);){const G=E[F];++F;const fe=ht();D=new Fe(G,D,fe)}return D}function ht(){let D=Z();for(;Ye($.And);){const G=E[F];++F;const fe=Z();D=new Fe(G,D,fe)}return D}function Z(){let D;for(;Ye($.Not);){const G=E[F];++F;const fe=Z();D=new Ce(G,fe)}return D??ke()}function ke(){let D=Le();for(;Ye($.ComparisonBinaryOperator)||Ye($.In)||Ye($.NotIn);){const G=E[F];++F;const fe=Le();D=new Fe(G,D,fe)}return D}function Le(){let D=M();for(;Ye($.AdditiveBinaryOperator);){const G=E[F];++F;const fe=M();D=new Fe(G,D,fe)}return D}function Oe(){const D=kt();return Ye($.OpenParen)?je(D):D}function je(D){let G=new H(D,at());return Ye($.OpenParen)&&(G=je(G)),G}function at(){oe($.OpenParen,"Expected opening parenthesis for arguments list");const D=vt();return oe($.CloseParen,"Expected closing parenthesis for arguments list"),D}function vt(){const D=[];for(;!Ye($.CloseParen);){let G=Cr();if(Ye($.Equals)){if(++F,!(G instanceof N))throw new SyntaxError("Expected identifier for keyword argument");const fe=Cr();G=new ve(G,fe)}D.push(G),Ye($.Comma)&&++F}return D}function _t(){const D=[];let G=!1;for(;!Ye($.CloseSquareBracket);)Ye($.Colon)?(D.push(void 0),++F,G=!0):(D.push(Cr()),Ye($.Colon)&&(++F,G=!0));if(D.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(G){if(D.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new X(...D)}return D[0]}function kt(){let D=O();for(;Ye($.Dot)||Ye($.OpenSquareBracket);){const G=E[F];++F;let fe;const Mt=G.type!==$.Dot;if(Mt)fe=_t(),oe($.CloseSquareBracket,"Expected closing square bracket");else if(fe=O(),fe.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");D=new U(D,fe,Mt)}return D}function M(){let D=d();for(;Ye($.MultiplicativeBinaryOperator);){const G=E[F];++F;const fe=d();D=new Fe(G,D,fe)}return D}function d(){let D=f();for(;Ye($.Is);){++F;const G=Ye($.Not);G&&++F;let fe=O();if(fe instanceof _e&&(fe=new N(fe.value.toString())),!(fe instanceof N))throw new SyntaxError("Expected identifier for the test");D=new ct(D,G,fe)}return D}function f(){let D=Oe();for(;Ye($.Pipe);){++F;let G=O();if(!(G instanceof N))throw new SyntaxError("Expected identifier for the filter");Ye($.OpenParen)&&(G=je(G)),D=new ot(D,G)}return D}function O(){const D=E[F];switch(D.type){case $.NumericLiteral:return++F,new z(Number(D.value));case $.StringLiteral:return++F,new T(D.value);case $.BooleanLiteral:return++F,new _e(D.value.toLowerCase()==="true");case $.Identifier:return++F,new N(D.value);case $.OpenParen:{++F;const G=Er();if(E[F].type!==$.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${E[F].type} instead`);return++F,G}case $.OpenSquareBracket:{++F;const G=[];for(;!Ye($.CloseSquareBracket);)G.push(Cr()),Ye($.Comma)&&++F;return++F,new Me(G)}case $.OpenCurlyBracket:{++F;const G=new Map;for(;!Ye($.CloseCurlyBracket);){const fe=Cr();oe($.Colon,"Expected colon between key and value in object literal");const Mt=Cr();G.set(fe,Mt),Ye($.Comma)&&++F}return++F,new K(G)}default:throw new SyntaxError(`Unexpected token: ${D.type}`)}}for(;F<E.length;)ne.body.push(Te());return ne}function He(E,ne,F=1){ne===void 0&&(ne=E,E=0);const oe=[];for(let Te=E;Te<ne;Te+=F)oe.push(Te);return oe}function pt(E,ne,F,oe=1){const Te=Math.sign(oe);Te>=0?(ne=(ne??=0)<0?Math.max(E.length+ne,0):Math.min(ne,E.length),F=(F??=E.length)<0?Math.max(E.length+F,0):Math.min(F,E.length)):(ne=(ne??=E.length-1)<0?Math.max(E.length+ne,-1):Math.min(ne,E.length-1),F=(F??=-1)<-1?Math.max(E.length+F,-1):Math.min(F,E.length-1));const lt=[];for(let Ye=ne;Te*Ye<Te*F;Ye+=oe)lt.push(E[Ye]);return lt}function he(E){return E.replace(/\b\w/g,ne=>ne.toUpperCase())}var tt=class{type="RuntimeValue";value;builtins=new Map;constructor(E=void 0){this.value=E}__bool__(){return new yt(!!this.value)}},gt=class extends tt{type="NumericValue"},Ue=class extends tt{type="StringValue";builtins=new Map([["upper",new rt(()=>new Ue(this.value.toUpperCase()))],["lower",new rt(()=>new Ue(this.value.toLowerCase()))],["strip",new rt(()=>new Ue(this.value.trim()))],["title",new rt(()=>new Ue(he(this.value)))],["length",new gt(this.value.length)]])},yt=class extends tt{type="BooleanValue"},xt=class extends tt{type="ObjectValue";__bool__(){return new yt(this.value.size>0)}builtins=new Map([["get",new rt(([E,ne])=>{if(!(E instanceof Ue))throw new Error(`Object key must be a string: got ${E.type}`);return this.value.get(E.value)??ne??new st})],["items",new rt(()=>new re(Array.from(this.value.entries()).map(([E,ne])=>new re([new Ue(E),ne]))))]])},Ze=class extends xt{type="KeywordArgumentsValue"},re=class extends tt{type="ArrayValue";builtins=new Map([["length",new gt(this.value.length)]]);__bool__(){return new yt(this.value.length>0)}},Ne=class extends re{type="TupleValue"},rt=class extends tt{type="FunctionValue"},st=class extends tt{type="NullValue"},Xe=class extends tt{type="UndefinedValue"},Ge=class{constructor(E){this.parent=E}variables=new Map([["namespace",new rt(E=>{if(E.length===0)return new xt(new Map);if(E.length!==1||!(E[0]instanceof xt))throw new Error("`namespace` expects either zero arguments or a single object argument");return E[0]})]]);tests=new Map([["boolean",E=>E.type==="BooleanValue"],["callable",E=>E instanceof rt],["odd",E=>{if(E.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${E.type}`);return E.value%2!==0}],["even",E=>{if(E.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${E.type}`);return E.value%2===0}],["false",E=>E.type==="BooleanValue"&&!E.value],["true",E=>E.type==="BooleanValue"&&E.value],["string",E=>E.type==="StringValue"],["number",E=>E.type==="NumericValue"],["integer",E=>E.type==="NumericValue"&&Number.isInteger(E.value)],["iterable",E=>E instanceof re||E instanceof Ue],["lower",E=>{const ne=E.value;return E.type==="StringValue"&&ne===ne.toLowerCase()}],["upper",E=>{const ne=E.value;return E.type==="StringValue"&&ne===ne.toUpperCase()}],["none",E=>E.type==="NullValue"],["defined",E=>E.type!=="UndefinedValue"],["undefined",E=>E.type==="UndefinedValue"],["equalto",(E,ne)=>E.value===ne.value],["eq",(E,ne)=>E.value===ne.value]]);set(E,ne){return this.declareVariable(E,bt(ne))}declareVariable(E,ne){if(this.variables.has(E))throw new SyntaxError(`Variable already declared: ${E}`);return this.variables.set(E,ne),ne}setVariable(E,ne){return this.variables.set(E,ne),ne}resolve(E){if(this.variables.has(E))return this;if(this.parent)return this.parent.resolve(E);throw new Error(`Unknown variable: ${E}`)}lookupVariable(E){try{return this.resolve(E).variables.get(E)??new Xe}catch{return new Xe}}},mt=class{global;constructor(E){this.global=E??new Ge}run(E){return this.evaluate(E,this.global)}evaluateBinaryExpression(E,ne){const F=this.evaluate(E.left,ne);switch(E.operator.value){case"and":return F.__bool__().value?this.evaluate(E.right,ne):F;case"or":return F.__bool__().value?F:this.evaluate(E.right,ne)}const oe=this.evaluate(E.right,ne);switch(E.operator.value){case"==":return new yt(F.value==oe.value);case"!=":return new yt(F.value!=oe.value)}if(F instanceof Xe||oe instanceof Xe)throw new Error("Cannot perform operation on undefined values");if(F instanceof st||oe instanceof st)throw new Error("Cannot perform operation on null values");if(F instanceof gt&&oe instanceof gt)switch(E.operator.value){case"+":return new gt(F.value+oe.value);case"-":return new gt(F.value-oe.value);case"*":return new gt(F.value*oe.value);case"/":return new gt(F.value/oe.value);case"%":return new gt(F.value%oe.value);case"<":return new yt(F.value<oe.value);case">":return new yt(F.value>oe.value);case">=":return new yt(F.value>=oe.value);case"<=":return new yt(F.value<=oe.value)}else if(F instanceof re&&oe instanceof re)switch(E.operator.value){case"+":return new re(F.value.concat(oe.value))}else if(oe instanceof re){const Te=oe.value.find(lt=>lt.value===F.value)!==void 0;switch(E.operator.value){case"in":return new yt(Te);case"not in":return new yt(!Te)}}if(F instanceof Ue||oe instanceof Ue)switch(E.operator.value){case"+":return new Ue(F.value.toString()+oe.value.toString())}if(F instanceof Ue&&oe instanceof Ue)switch(E.operator.value){case"in":return new yt(oe.value.includes(F.value));case"not in":return new yt(!oe.value.includes(F.value))}if(F instanceof Ue&&oe instanceof xt)switch(E.operator.value){case"in":return new yt(oe.value.has(F.value));case"not in":return new yt(!oe.value.has(F.value))}throw new SyntaxError(`Unknown operator "${E.operator.value}" between ${F.type} and ${oe.type}`)}evaluateArguments(E,ne){const F=[],oe=new Map;for(const Te of E)if(Te.type==="KeywordArgumentExpression"){const lt=Te;oe.set(lt.key.value,this.evaluate(lt.value,ne))}else{if(oe.size>0)throw new Error("Positional arguments must come before keyword arguments");F.push(this.evaluate(Te,ne))}return[F,oe]}evaluateFilterExpression(E,ne){const F=this.evaluate(E.operand,ne);if(E.filter.type==="Identifier"){const oe=E.filter;if(oe.value==="tojson")return new Ue(Bt(F));if(F instanceof re)switch(oe.value){case"list":return F;case"first":return F.value[0];case"last":return F.value[F.value.length-1];case"length":return new gt(F.value.length);case"reverse":return new re(F.value.reverse());case"sort":return new re(F.value.sort((Te,lt)=>{if(Te.type!==lt.type)throw new Error(`Cannot compare different types: ${Te.type} and ${lt.type}`);switch(Te.type){case"NumericValue":return Te.value-lt.value;case"StringValue":return Te.value.localeCompare(lt.value);default:throw new Error(`Cannot compare type: ${Te.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${oe.value}`)}else if(F instanceof Ue)switch(oe.value){case"length":return new gt(F.value.length);case"upper":return new Ue(F.value.toUpperCase());case"lower":return new Ue(F.value.toLowerCase());case"title":return new Ue(he(F.value));case"capitalize":return new Ue(F.value.charAt(0).toUpperCase()+F.value.slice(1));case"trim":return new Ue(F.value.trim());case"indent":return new Ue(F.value.split(`
`).map((Te,lt)=>lt===0||Te.length===0?Te:"    "+Te).join(`
`));case"string":return F;default:throw new Error(`Unknown StringValue filter: ${oe.value}`)}else if(F instanceof gt)switch(oe.value){case"abs":return new gt(Math.abs(F.value));default:throw new Error(`Unknown NumericValue filter: ${oe.value}`)}else if(F instanceof xt)switch(oe.value){case"items":return new re(Array.from(F.value.entries()).map(([Te,lt])=>new re([new Ue(Te),lt])));case"length":return new gt(F.value.size);default:throw new Error(`Unknown ObjectValue filter: ${oe.value}`)}throw new Error(`Cannot apply filter "${oe.value}" to type: ${F.type}`)}else if(E.filter.type==="CallExpression"){const oe=E.filter;if(oe.callee.type!=="Identifier")throw new Error(`Unknown filter: ${oe.callee.type}`);const Te=oe.callee.value;if(Te==="tojson"){const[,lt]=this.evaluateArguments(oe.args,ne),Ye=lt.get("indent")??new st;if(!(Ye instanceof gt||Ye instanceof st))throw new Error("If set, indent must be a number");return new Ue(Bt(F,Ye.value))}if(F instanceof re){switch(Te){case"selectattr":{if(F.value.some(Wt=>!(Wt instanceof xt)))throw new Error("`selectattr` can only be applied to array of objects");if(oe.args.some(Wt=>Wt.type!=="StringLiteral"))throw new Error("arguments of `selectattr` must be strings");const[lt,Ye,$t]=oe.args.map(Wt=>this.evaluate(Wt,ne));let ut;if(Ye){const Wt=ne.tests.get(Ye.value);if(!Wt)throw new Error(`Unknown test: ${Ye.value}`);ut=Wt}else ut=(...Wt)=>Wt[0].__bool__().value;const ft=F.value.filter(Wt=>{const Kt=Wt.value.get(lt.value);return Kt?ut(Kt,$t):!1});return new re(ft)}case"map":{const[,lt]=this.evaluateArguments(oe.args,ne);if(lt.has("attribute")){const Ye=lt.get("attribute");if(!(Ye instanceof Ue))throw new Error("attribute must be a string");const $t=lt.get("default"),ut=F.value.map(ft=>{if(!(ft instanceof xt))throw new Error("items in map must be an object");return ft.value.get(Ye.value)??$t??new Xe});return new re(ut)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${Te}`)}else if(F instanceof Ue){switch(Te){case"indent":{const[lt,Ye]=this.evaluateArguments(oe.args,ne),$t=lt.at(0)??Ye.get("width")??new gt(4);if(!($t instanceof gt))throw new Error("width must be a number");const ut=lt.at(1)??Ye.get("first")??new yt(!1),ft=lt.at(2)??Ye.get("blank")??new yt(!1),Wt=F.value.split(`
`),Kt=" ".repeat($t.value),Ir=Wt.map((Er,Lr)=>!ut.value&&Lr===0||!ft.value&&Er.length===0?Er:Kt+Er);return new Ue(Ir.join(`
`))}}throw new Error(`Unknown StringValue filter: ${Te}`)}else throw new Error(`Cannot apply filter "${Te}" to type: ${F.type}`)}throw new Error(`Unknown filter: ${E.filter.type}`)}evaluateTestExpression(E,ne){const F=this.evaluate(E.operand,ne),oe=ne.tests.get(E.test.value);if(!oe)throw new Error(`Unknown test: ${E.test.value}`);const Te=oe(F);return new yt(E.negate?!Te:Te)}evaluateUnaryExpression(E,ne){const F=this.evaluate(E.argument,ne);switch(E.operator.value){case"not":return new yt(!F.value);default:throw new SyntaxError(`Unknown operator: ${E.operator.value}`)}}evalProgram(E,ne){return this.evaluateBlock(E.body,ne)}evaluateBlock(E,ne){let F="";for(const oe of E){const Te=this.evaluate(oe,ne);Te.type!=="NullValue"&&Te.type!=="UndefinedValue"&&(F+=Te.value)}return new Ue(F)}evaluateIdentifier(E,ne){return ne.lookupVariable(E.value)}evaluateCallExpression(E,ne){const[F,oe]=this.evaluateArguments(E.args,ne);oe.size>0&&F.push(new Ze(oe));const Te=this.evaluate(E.callee,ne);if(Te.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${Te.type}`);return Te.value(F,ne)}evaluateSliceExpression(E,ne,F){if(!(E instanceof re||E instanceof Ue))throw new Error("Slice object must be an array or string");const oe=this.evaluate(ne.start,F),Te=this.evaluate(ne.stop,F),lt=this.evaluate(ne.step,F);if(!(oe instanceof gt||oe instanceof Xe))throw new Error("Slice start must be numeric or undefined");if(!(Te instanceof gt||Te instanceof Xe))throw new Error("Slice stop must be numeric or undefined");if(!(lt instanceof gt||lt instanceof Xe))throw new Error("Slice step must be numeric or undefined");return E instanceof re?new re(pt(E.value,oe.value,Te.value,lt.value)):new Ue(pt(Array.from(E.value),oe.value,Te.value,lt.value).join(""))}evaluateMemberExpression(E,ne){const F=this.evaluate(E.object,ne);let oe;if(E.computed){if(E.property.type==="SliceExpression")return this.evaluateSliceExpression(F,E.property,ne);oe=this.evaluate(E.property,ne)}else oe=new Ue(E.property.value);let Te;if(F instanceof xt){if(!(oe instanceof Ue))throw new Error(`Cannot access property with non-string: got ${oe.type}`);Te=F.value.get(oe.value)??F.builtins.get(oe.value)}else if(F instanceof re||F instanceof Ue)if(oe instanceof gt)Te=F.value.at(oe.value),F instanceof Ue&&(Te=new Ue(F.value.at(oe.value)));else if(oe instanceof Ue)Te=F.builtins.get(oe.value);else throw new Error(`Cannot access property with non-string/non-number: got ${oe.type}`);else{if(!(oe instanceof Ue))throw new Error(`Cannot access property with non-string: got ${oe.type}`);Te=F.builtins.get(oe.value)}return Te instanceof tt?Te:new Xe}evaluateSet(E,ne){const F=this.evaluate(E.value,ne);if(E.assignee.type==="Identifier"){const oe=E.assignee.value;ne.setVariable(oe,F)}else if(E.assignee.type==="MemberExpression"){const oe=E.assignee,Te=this.evaluate(oe.object,ne);if(!(Te instanceof xt))throw new Error("Cannot assign to member of non-object");if(oe.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");Te.value.set(oe.property.value,F)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(E.assignee)}`);return new st}evaluateIf(E,ne){const F=this.evaluate(E.test,ne);return this.evaluateBlock(F.__bool__().value?E.body:E.alternate,ne)}evaluateFor(E,ne){const F=new Ge(ne);let oe,Te;if(E.iterable.type==="SelectExpression"){const ft=E.iterable;Te=this.evaluate(ft.iterable,F),oe=ft.test}else Te=this.evaluate(E.iterable,F);if(!(Te instanceof re))throw new Error(`Expected iterable type in for loop: got ${Te.type}`);const lt=[],Ye=[];for(let ft=0;ft<Te.value.length;++ft){const Wt=new Ge(F),Kt=Te.value[ft];let Ir;if(E.loopvar.type==="Identifier")Ir=Er=>Er.setVariable(E.loopvar.value,Kt);else if(E.loopvar.type==="TupleLiteral"){const Er=E.loopvar;if(Kt.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${Kt.type}`);const Lr=Kt;if(Er.value.length!==Lr.value.length)throw new Error(`Too ${Er.value.length>Lr.value.length?"few":"many"} items to unpack`);Ir=Cr=>{for(let Hr=0;Hr<Er.value.length;++Hr){if(Er.value[Hr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Er.value[Hr].type}`);Cr.setVariable(Er.value[Hr].value,Lr.value[Hr])}}}else throw new Error(`Invalid loop variable(s): ${E.loopvar.type}`);oe&&(Ir(Wt),!this.evaluate(oe,Wt).__bool__().value)||(lt.push(Kt),Ye.push(Ir))}let $t="",ut=!0;for(let ft=0;ft<lt.length;++ft){const Wt=new Map([["index",new gt(ft+1)],["index0",new gt(ft)],["revindex",new gt(lt.length-ft)],["revindex0",new gt(lt.length-ft-1)],["first",new yt(ft===0)],["last",new yt(ft===lt.length-1)],["length",new gt(lt.length)],["previtem",ft>0?lt[ft-1]:new Xe],["nextitem",ft<lt.length-1?lt[ft+1]:new Xe]]);F.setVariable("loop",new xt(Wt)),Ye[ft](F);const Kt=this.evaluateBlock(E.body,F);$t+=Kt.value,ut=!1}if(ut){const ft=this.evaluateBlock(E.defaultBlock,F);$t+=ft.value}return new Ue($t)}evaluateMacro(E,ne){return ne.setVariable(E.name.value,new rt((F,oe)=>{const Te=new Ge(oe);F=F.slice();let lt;F.at(-1)?.type==="KeywordArgumentsValue"&&(lt=F.pop());for(let Ye=0;Ye<E.args.length;++Ye){const $t=E.args[Ye],ut=F[Ye];if($t.type==="Identifier"){const ft=$t;if(!ut)throw new Error(`Missing positional argument: ${ft.value}`);Te.setVariable(ft.value,ut)}else if($t.type==="KeywordArgumentExpression"){const ft=$t,Wt=ut??lt?.value.get(ft.key.value)??this.evaluate(ft.value,Te);Te.setVariable(ft.key.value,Wt)}else throw new Error(`Unknown argument type: ${$t.type}`)}return this.evaluateBlock(E.body,Te)})),new st}evaluate(E,ne){if(E===void 0)return new Xe;switch(E.type){case"Program":return this.evalProgram(E,ne);case"Set":return this.evaluateSet(E,ne);case"If":return this.evaluateIf(E,ne);case"For":return this.evaluateFor(E,ne);case"Macro":return this.evaluateMacro(E,ne);case"NumericLiteral":return new gt(Number(E.value));case"StringLiteral":return new Ue(E.value);case"BooleanLiteral":return new yt(E.value);case"ArrayLiteral":return new re(E.value.map(F=>this.evaluate(F,ne)));case"TupleLiteral":return new Ne(E.value.map(F=>this.evaluate(F,ne)));case"ObjectLiteral":{const F=new Map;for(const[oe,Te]of E.value){const lt=this.evaluate(oe,ne);if(!(lt instanceof Ue))throw new Error(`Object keys must be strings: got ${lt.type}`);F.set(lt.value,this.evaluate(Te,ne))}return new xt(F)}case"Identifier":return this.evaluateIdentifier(E,ne);case"CallExpression":return this.evaluateCallExpression(E,ne);case"MemberExpression":return this.evaluateMemberExpression(E,ne);case"UnaryExpression":return this.evaluateUnaryExpression(E,ne);case"BinaryExpression":return this.evaluateBinaryExpression(E,ne);case"FilterExpression":return this.evaluateFilterExpression(E,ne);case"TestExpression":return this.evaluateTestExpression(E,ne);default:throw new SyntaxError(`Unknown node type: ${E.type}`)}}};function bt(E){switch(typeof E){case"number":return new gt(E);case"string":return new Ue(E);case"boolean":return new yt(E);case"undefined":return new Xe;case"object":return E===null?new st:Array.isArray(E)?new re(E.map(bt)):new xt(new Map(Object.entries(E).map(([ne,F])=>[ne,bt(F)])));case"function":return new rt((ne,F)=>{const oe=E(...ne.map(Te=>Te.value))??null;return bt(oe)});default:throw new Error(`Cannot convert to runtime value: ${E}`)}}function Bt(E,ne,F){const oe=F??0;switch(E.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(E.value);case"ArrayValue":case"ObjectValue":{const Te=ne?" ".repeat(ne):"",lt=`
`+Te.repeat(oe),Ye=lt+Te;if(E.type==="ArrayValue"){const $t=E.value.map(ut=>Bt(ut,ne,oe+1));return ne?`[${Ye}${$t.join(`,${Ye}`)}${lt}]`:`[${$t.join(", ")}]`}else{const $t=Array.from(E.value.entries()).map(([ut,ft])=>{const Wt=`"${ut}": ${Bt(ft,ne,oe+1)}`;return ne?`${Ye}${Wt}`:Wt});return ne?`{${$t.join(",")}${lt}}`:`{${$t.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${E.type}`)}}var Ct=class{parsed;constructor(E){const ne=q(E,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=Ae(ne)}render(E){const ne=new Ge;ne.set("false",!1),ne.set("true",!0),ne.set("raise_exception",Te=>{throw new Error(Te)}),ne.set("range",He);for(const[Te,lt]of Object.entries(E))ne.set(Te,lt);return new mt(ne).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(we,Y,P)=>{P.r(Y),P.d(Y,{registerBackend:()=>xe,resolveBackendAndExecutionProviders:()=>Pe});const $=new Map,se=[],xe=(Q,R,W)=>{if(R&&typeof R.init=="function"&&typeof R.createInferenceSessionHandler=="function"){const q=$.get(Q);if(q===void 0)$.set(Q,{backend:R,priority:W});else{if(q.priority>W)return;if(q.priority===W&&q.backend!==R)throw new Error(`cannot register backend "${Q}" using priority ${W}`)}if(W>=0){const te=se.indexOf(Q);te!==-1&&se.splice(te,1);for(let pe=0;pe<se.length;pe++)if($.get(se[pe]).priority<=W){se.splice(pe,0,Q);return}se.push(Q)}return}throw new TypeError("not a valid backend")},Ie=async Q=>{const R=$.get(Q);if(!R)return"backend not found.";if(R.initialized)return R.backend;if(R.aborted)return R.error;{const W=!!R.initPromise;try{return W||(R.initPromise=R.backend.init(Q)),await R.initPromise,R.initialized=!0,R.backend}catch(q){return W||(R.error=`${q}`,R.aborted=!0),R.error}finally{delete R.initPromise}}},Pe=async Q=>{const R=Q.executionProviders||[],W=R.map(j=>typeof j=="string"?j:j.name),q=W.length===0?se:W;let te;const pe=[],Se=new Set;for(const j of q){const le=await Ie(j);typeof le=="string"?pe.push({name:j,err:le}):(te||(te=le),te===le&&Se.add(j))}if(!te)throw new Error(`no available backend found. ERR: ${pe.map(j=>`[${j.name}] ${j.err}`).join(", ")}`);for(const{name:j,err:le}of pe)W.includes(j)&&console.warn(`removing requested execution provider "${j}" from session options because it is not available: ${le}`);const Ee=R.filter(j=>Se.has(typeof j=="string"?j:j.name));return[te,new Proxy(Q,{get:(j,le)=>le==="executionProviders"?Ee:Reflect.get(j,le)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(we,Y,P)=>{P.r(Y),P.d(Y,{registerBackend:()=>$.registerBackend});var $=P("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(we,Y,P)=>{P.r(Y),P.d(Y,{env:()=>xe});var $=P("./node_modules/onnxruntime-common/dist/esm/version.js");let se="warning";const xe={wasm:{},webgl:{},webgpu:{},versions:{common:$.version},set logLevel(Ie){if(Ie!==void 0){if(typeof Ie!="string"||["verbose","info","warning","error","fatal"].indexOf(Ie)===-1)throw new Error(`Unsupported logging level: ${Ie}`);se=Ie}},get logLevel(){return se}};Object.defineProperty(xe,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(we,Y,P)=>{P.r(Y),P.d(Y,{env:()=>se});var $=P("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const se=$.env},"./node_modules/onnxruntime-common/dist/esm/index.js":(we,Y,P)=>{P.r(Y),P.d(Y,{InferenceSession:()=>xe.InferenceSession,TRACE:()=>Pe.TRACE,TRACE_FUNC_BEGIN:()=>Pe.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>Pe.TRACE_FUNC_END,Tensor:()=>Ie.Tensor,TrainingSession:()=>Q.TrainingSession,env:()=>se.env,registerBackend:()=>$.registerBackend});var $=P("./node_modules/onnxruntime-common/dist/esm/backend.js"),se=P("./node_modules/onnxruntime-common/dist/esm/env.js"),xe=P("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),Ie=P("./node_modules/onnxruntime-common/dist/esm/tensor.js");P("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),P("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var Pe=P("./node_modules/onnxruntime-common/dist/esm/trace.js");P("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),P("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var Q=P("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(we,Y,P)=>{P.r(Y),P.d(Y,{InferenceSession:()=>Ie});var $=P("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),se=P("./node_modules/onnxruntime-common/dist/esm/tensor.js"),xe=P("./node_modules/onnxruntime-common/dist/esm/trace.js");class Ie{constructor(Q){this.handler=Q}async run(Q,R,W){(0,xe.TRACE_FUNC_BEGIN)();const q={};let te={};if(typeof Q!="object"||Q===null||Q instanceof se.Tensor||Array.isArray(Q))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let pe=!0;if(typeof R=="object"){if(R===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(R instanceof se.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(R)){if(R.length===0)throw new TypeError("'fetches' cannot be an empty array.");pe=!1;for(const j of R){if(typeof j!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(j)===-1)throw new RangeError(`'fetches' contains invalid output name: ${j}.`);q[j]=null}if(typeof W=="object"&&W!==null)te=W;else if(typeof W<"u")throw new TypeError("'options' must be an object.")}else{let j=!1;const le=Object.getOwnPropertyNames(R);for(const de of this.outputNames)if(le.indexOf(de)!==-1){const U=R[de];(U===null||U instanceof se.Tensor)&&(j=!0,pe=!1,q[de]=U)}if(j){if(typeof W=="object"&&W!==null)te=W;else if(typeof W<"u")throw new TypeError("'options' must be an object.")}else te=R}}else if(typeof R<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const j of this.inputNames)if(typeof Q[j]>"u")throw new Error(`input '${j}' is missing in 'feeds'.`);if(pe)for(const j of this.outputNames)q[j]=null;const Se=await this.handler.run(Q,q,te),Ee={};for(const j in Se)if(Object.hasOwnProperty.call(Se,j)){const le=Se[j];le instanceof se.Tensor?Ee[j]=le:Ee[j]=new se.Tensor(le.type,le.data,le.dims)}return(0,xe.TRACE_FUNC_END)(),Ee}async release(){return this.handler.dispose()}static async create(Q,R,W,q){(0,xe.TRACE_FUNC_BEGIN)();let te,pe={};if(typeof Q=="string"){if(te=Q,typeof R=="object"&&R!==null)pe=R;else if(typeof R<"u")throw new TypeError("'options' must be an object.")}else if(Q instanceof Uint8Array){if(te=Q,typeof R=="object"&&R!==null)pe=R;else if(typeof R<"u")throw new TypeError("'options' must be an object.")}else if(Q instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&Q instanceof SharedArrayBuffer){const le=Q;let de=0,U=Q.byteLength;if(typeof R=="object"&&R!==null)pe=R;else if(typeof R=="number"){if(de=R,!Number.isSafeInteger(de))throw new RangeError("'byteOffset' must be an integer.");if(de<0||de>=le.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${le.byteLength}).`);if(U=Q.byteLength-de,typeof W=="number"){if(U=W,!Number.isSafeInteger(U))throw new RangeError("'byteLength' must be an integer.");if(U<=0||de+U>le.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${le.byteLength-de}].`);if(typeof q=="object"&&q!==null)pe=q;else if(typeof q<"u")throw new TypeError("'options' must be an object.")}else if(typeof W<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof R<"u")throw new TypeError("'options' must be an object.");te=new Uint8Array(le,de,U)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[Se,Ee]=await(0,$.resolveBackendAndExecutionProviders)(pe),j=await Se.createInferenceSessionHandler(te,Ee);return(0,xe.TRACE_FUNC_END)(),new Ie(j)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(we,Y,P)=>{P.r(Y),P.d(Y,{InferenceSession:()=>se});var $=P("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js");const se=$.InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(we,Y,P)=>{P.r(Y)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(we,Y,P)=>{P.r(Y)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(we,Y,P)=>{P.r(Y),P.d(Y,{tensorToDataURL:()=>$,tensorToImageData:()=>se});const $=(xe,Ie)=>{const Pe=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);Pe.width=xe.dims[3],Pe.height=xe.dims[2];const Q=Pe.getContext("2d");if(Q!=null){let R,W;Ie?.tensorLayout!==void 0&&Ie.tensorLayout==="NHWC"?(R=xe.dims[2],W=xe.dims[3]):(R=xe.dims[3],W=xe.dims[2]);const q=Ie?.format!==void 0?Ie.format:"RGB",te=Ie?.norm;let pe,Se;te===void 0||te.mean===void 0?pe=[255,255,255,255]:typeof te.mean=="number"?pe=[te.mean,te.mean,te.mean,te.mean]:(pe=[te.mean[0],te.mean[1],te.mean[2],0],te.mean[3]!==void 0&&(pe[3]=te.mean[3])),te===void 0||te.bias===void 0?Se=[0,0,0,0]:typeof te.bias=="number"?Se=[te.bias,te.bias,te.bias,te.bias]:(Se=[te.bias[0],te.bias[1],te.bias[2],0],te.bias[3]!==void 0&&(Se[3]=te.bias[3]));const Ee=W*R;let j=0,le=Ee,de=Ee*2,U=-1;q==="RGBA"?(j=0,le=Ee,de=Ee*2,U=Ee*3):q==="RGB"?(j=0,le=Ee,de=Ee*2):q==="RBG"&&(j=0,de=Ee,le=Ee*2);for(let H=0;H<W;H++)for(let N=0;N<R;N++){const I=(xe.data[j++]-Se[0])*pe[0],z=(xe.data[le++]-Se[1])*pe[1],T=(xe.data[de++]-Se[2])*pe[2],_e=U===-1?255:(xe.data[U++]-Se[3])*pe[3];Q.fillStyle="rgba("+I+","+z+","+T+","+_e+")",Q.fillRect(N,H,1,1)}if("toDataURL"in Pe)return Pe.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},se=(xe,Ie)=>{const Pe=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let Q;if(Pe!=null){let R,W,q;Ie?.tensorLayout!==void 0&&Ie.tensorLayout==="NHWC"?(R=xe.dims[2],W=xe.dims[1],q=xe.dims[3]):(R=xe.dims[3],W=xe.dims[2],q=xe.dims[1]);const te=Ie!==void 0&&Ie.format!==void 0?Ie.format:"RGB",pe=Ie?.norm;let Se,Ee;pe===void 0||pe.mean===void 0?Se=[255,255,255,255]:typeof pe.mean=="number"?Se=[pe.mean,pe.mean,pe.mean,pe.mean]:(Se=[pe.mean[0],pe.mean[1],pe.mean[2],255],pe.mean[3]!==void 0&&(Se[3]=pe.mean[3])),pe===void 0||pe.bias===void 0?Ee=[0,0,0,0]:typeof pe.bias=="number"?Ee=[pe.bias,pe.bias,pe.bias,pe.bias]:(Ee=[pe.bias[0],pe.bias[1],pe.bias[2],0],pe.bias[3]!==void 0&&(Ee[3]=pe.bias[3]));const j=W*R;if(Ie!==void 0&&(Ie.format!==void 0&&q===4&&Ie.format!=="RGBA"||q===3&&Ie.format!=="RGB"&&Ie.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const le=4;let de=0,U=1,H=2,N=3,I=0,z=j,T=j*2,_e=-1;te==="RGBA"?(I=0,z=j,T=j*2,_e=j*3):te==="RGB"?(I=0,z=j,T=j*2):te==="RBG"&&(I=0,T=j,z=j*2),Q=Pe.createImageData(R,W);for(let Me=0;Me<W*R;de+=le,U+=le,H+=le,N+=le,Me++)Q.data[de]=(xe.data[I++]-Ee[0])*Se[0],Q.data[U]=(xe.data[z++]-Ee[1])*Se[1],Q.data[H]=(xe.data[T++]-Ee[2])*Se[2],Q.data[N]=_e===-1?255:(xe.data[_e++]-Ee[3])*Se[3]}else throw new Error("Can not access image data");return Q}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(we,Y,P)=>{P.r(Y)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(we,Y,P)=>{P.r(Y),P.d(Y,{bufferToTensor:()=>se,tensorFromGpuBuffer:()=>Pe,tensorFromImage:()=>xe,tensorFromPinnedBuffer:()=>Q,tensorFromTexture:()=>Ie});var $=P("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const se=(R,W)=>{if(R===void 0)throw new Error("Image buffer must be defined");if(W.height===void 0||W.width===void 0)throw new Error("Image height and width must be defined");if(W.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:q,width:te}=W,pe=W.norm??{mean:255,bias:0};let Se,Ee;typeof pe.mean=="number"?Se=[pe.mean,pe.mean,pe.mean,pe.mean]:Se=[pe.mean[0],pe.mean[1],pe.mean[2],pe.mean[3]??255],typeof pe.bias=="number"?Ee=[pe.bias,pe.bias,pe.bias,pe.bias]:Ee=[pe.bias[0],pe.bias[1],pe.bias[2],pe.bias[3]??0];const j=W.format!==void 0?W.format:"RGBA",le=W.tensorFormat!==void 0&&W.tensorFormat!==void 0?W.tensorFormat:"RGB",de=q*te,U=le==="RGBA"?new Float32Array(de*4):new Float32Array(de*3);let H=4,N=0,I=1,z=2,T=3,_e=0,Me=de,$e=de*2,K=-1;j==="RGB"&&(H=3,N=0,I=1,z=2,T=-1),le==="RGBA"?K=de*3:le==="RBG"?(_e=0,$e=de,Me=de*2):le==="BGR"&&($e=0,Me=de,_e=de*2);for(let ot=0;ot<de;ot++,N+=H,z+=H,I+=H,T+=H)U[_e++]=(R[N]+Ee[0])/Se[0],U[Me++]=(R[I]+Ee[1])/Se[1],U[$e++]=(R[z]+Ee[2])/Se[2],K!==-1&&T!==-1&&(U[K++]=(R[T]+Ee[3])/Se[3]);return le==="RGBA"?new $.Tensor("float32",U,[1,4,q,te]):new $.Tensor("float32",U,[1,3,q,te])},xe=async(R,W)=>{const q=typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement,te=typeof ImageData<"u"&&R instanceof ImageData,pe=typeof ImageBitmap<"u"&&R instanceof ImageBitmap,Se=typeof R=="string";let Ee,j=W??{};const le=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},de=U=>U instanceof HTMLCanvasElement||U instanceof OffscreenCanvas?U.getContext("2d"):null;if(q){const U=le();U.width=R.width,U.height=R.height;const H=de(U);if(H!=null){let N=R.height,I=R.width;if(W!==void 0&&W.resizedHeight!==void 0&&W.resizedWidth!==void 0&&(N=W.resizedHeight,I=W.resizedWidth),W!==void 0){if(j=W,W.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");j.tensorFormat="RGBA",j.height=N,j.width=I}else j.tensorFormat="RGBA",j.height=N,j.width=I;H.drawImage(R,0,0),Ee=H.getImageData(0,0,I,N).data}else throw new Error("Can not access image data")}else if(te){let U,H;if(W!==void 0&&W.resizedWidth!==void 0&&W.resizedHeight!==void 0?(U=W.resizedHeight,H=W.resizedWidth):(U=R.height,H=R.width),W!==void 0&&(j=W),j.format="RGBA",j.height=U,j.width=H,W!==void 0){const N=le();N.width=H,N.height=U;const I=de(N);if(I!=null)I.putImageData(R,0,0),Ee=I.getImageData(0,0,H,U).data;else throw new Error("Can not access image data")}else Ee=R.data}else if(pe){if(W===void 0)throw new Error("Please provide image config with format for Imagebitmap");const U=le();U.width=R.width,U.height=R.height;const H=de(U);if(H!=null){const N=R.height,I=R.width;return H.drawImage(R,0,0,I,N),Ee=H.getImageData(0,0,I,N).data,j.height=N,j.width=I,se(Ee,j)}else throw new Error("Can not access image data")}else{if(Se)return new Promise((U,H)=>{const N=le(),I=de(N);if(!R||!I)return H();const z=new Image;z.crossOrigin="Anonymous",z.src=R,z.onload=()=>{N.width=z.width,N.height=z.height,I.drawImage(z,0,0,N.width,N.height);const T=I.getImageData(0,0,N.width,N.height);j.height=N.height,j.width=N.width,U(se(T.data,j))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(Ee!==void 0)return se(Ee,j);throw new Error("Input data provided is not supported - aborted tensor creation")},Ie=(R,W)=>{const{width:q,height:te,download:pe,dispose:Se}=W,Ee=[1,te,q,4];return new $.Tensor({location:"texture",type:"float32",texture:R,dims:Ee,download:pe,dispose:Se})},Pe=(R,W)=>{const{dataType:q,dims:te,download:pe,dispose:Se}=W;return new $.Tensor({location:"gpu-buffer",type:q??"float32",gpuBuffer:R,dims:te,download:pe,dispose:Se})},Q=(R,W,q)=>new $.Tensor({location:"cpu-pinned",type:R,data:W,dims:q??[W.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(we,Y,P)=>{P.r(Y)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(we,Y,P)=>{P.r(Y),P.d(Y,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>se,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>$,checkTypedArray:()=>Ie});const $=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),se=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let xe=!1;const Ie=()=>{if(!xe){xe=!0;const Pe=typeof BigInt64Array<"u"&&BigInt64Array.from,Q=typeof BigUint64Array<"u"&&BigUint64Array.from,R=typeof Float16Array<"u"&&Float16Array.from;Pe&&($.set("int64",BigInt64Array),se.set(BigInt64Array,"int64")),Q&&($.set("uint64",BigUint64Array),se.set(BigUint64Array,"uint64")),R?($.set("float16",Float16Array),se.set(Float16Array,"float16")):$.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(we,Y,P)=>{P.r(Y),P.d(Y,{Tensor:()=>Pe});var $=P("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),se=P("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),xe=P("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),Ie=P("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class Pe{constructor(R,W,q){(0,xe.checkTypedArray)();let te,pe;if(typeof R=="object"&&"location"in R)switch(this.dataLocation=R.location,te=R.type,pe=R.dims,R.location){case"cpu-pinned":{const Ee=xe.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(te);if(!Ee)throw new TypeError(`unsupported type "${te}" to create tensor from pinned buffer`);if(!(R.data instanceof Ee))throw new TypeError(`buffer should be of type ${Ee.name}`);this.cpuData=R.data;break}case"texture":{if(te!=="float32")throw new TypeError(`unsupported type "${te}" to create tensor from texture`);this.gpuTextureData=R.texture,this.downloader=R.download,this.disposer=R.dispose;break}case"gpu-buffer":{if(te!=="float32"&&te!=="float16"&&te!=="int32"&&te!=="int64"&&te!=="uint32"&&te!=="uint8"&&te!=="bool")throw new TypeError(`unsupported type "${te}" to create tensor from gpu buffer`);this.gpuBufferData=R.gpuBuffer,this.downloader=R.download,this.disposer=R.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let Ee,j;if(typeof R=="string")if(te=R,j=q,R==="string"){if(!Array.isArray(W))throw new TypeError("A string tensor's data must be a string array.");Ee=W}else{const le=xe.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(R);if(le===void 0)throw new TypeError(`Unsupported tensor type: ${R}.`);if(Array.isArray(W)){if(R==="float16"&&le===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");R==="uint64"||R==="int64"?Ee=le.from(W,BigInt):Ee=le.from(W)}else if(W instanceof le)Ee=W;else throw new TypeError(`A ${te} tensor's data must be type of ${le}`)}else if(j=W,Array.isArray(R)){if(R.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const le=typeof R[0];if(le==="string")te="string",Ee=R;else if(le==="boolean")te="bool",Ee=Uint8Array.from(R);else throw new TypeError(`Invalid element type of data array: ${le}.`)}else{const le=xe.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(R.constructor);if(le===void 0)throw new TypeError(`Unsupported type for tensor data: ${R.constructor}.`);te=le,Ee=R}if(j===void 0)j=[Ee.length];else if(!Array.isArray(j))throw new TypeError("A tensor's dims must be a number array");pe=j,this.cpuData=Ee,this.dataLocation="cpu"}const Se=(0,Ie.calculateSize)(pe);if(this.cpuData&&Se!==this.cpuData.length)throw new Error(`Tensor's size(${Se}) does not match data length(${this.cpuData.length}).`);this.type=te,this.dims=pe,this.size=Se}static async fromImage(R,W){return(0,se.tensorFromImage)(R,W)}static fromTexture(R,W){return(0,se.tensorFromTexture)(R,W)}static fromGpuBuffer(R,W){return(0,se.tensorFromGpuBuffer)(R,W)}static fromPinnedBuffer(R,W,q){return(0,se.tensorFromPinnedBuffer)(R,W,q)}toDataURL(R){return(0,$.tensorToDataURL)(this,R)}toImageData(R){return(0,$.tensorToImageData)(this,R)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(R){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const W=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=W,R&&this.disposer&&(this.disposer(),this.disposer=void 0),W}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(R){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,Ie.tensorReshape)(this,R)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(we,Y,P)=>{P.r(Y),P.d(Y,{calculateSize:()=>se,tensorReshape:()=>xe});var $=P("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const se=Ie=>{let Pe=1;for(let Q=0;Q<Ie.length;Q++){const R=Ie[Q];if(typeof R!="number"||!Number.isSafeInteger(R))throw new TypeError(`dims[${Q}] must be an integer, got: ${R}`);if(R<0)throw new RangeError(`dims[${Q}] must be a non-negative integer, got: ${R}`);Pe*=R}return Pe},xe=(Ie,Pe)=>{switch(Ie.location){case"cpu":return new $.Tensor(Ie.type,Ie.data,Pe);case"cpu-pinned":return new $.Tensor({location:"cpu-pinned",data:Ie.data,type:Ie.type,dims:Pe});case"texture":return new $.Tensor({location:"texture",texture:Ie.texture,type:Ie.type,dims:Pe});case"gpu-buffer":return new $.Tensor({location:"gpu-buffer",gpuBuffer:Ie.gpuBuffer,type:Ie.type,dims:Pe});default:throw new Error(`tensorReshape: tensor location ${Ie.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(we,Y,P)=>{P.r(Y),P.d(Y,{Tensor:()=>se});var $=P("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const se=$.Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(we,Y,P)=>{P.r(Y),P.d(Y,{TRACE:()=>se,TRACE_FUNC_BEGIN:()=>Ie,TRACE_FUNC_END:()=>Pe});var $=P("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const se=(Q,R)=>{(typeof $.env.trace>"u"?!$.env.wasm.trace:!$.env.trace)||console.timeStamp(`${Q}::ORT::${R}`)},xe=(Q,R)=>{const W=new Error().stack?.split(/\r\n|\r|\n/g)||[];let q=!1;for(let te=0;te<W.length;te++){if(q&&!W[te].includes("TRACE_FUNC")){let pe=`FUNC_${Q}::${W[te].trim().split(" ")[1]}`;R&&(pe+=`::${R}`),se("CPU",pe);return}W[te].includes("TRACE_FUNC")&&(q=!0)}},Ie=Q=>{(typeof $.env.trace>"u"?!$.env.wasm.trace:!$.env.trace)||xe("BEGIN",Q)},Pe=Q=>{(typeof $.env.trace>"u"?!$.env.wasm.trace:!$.env.trace)||xe("END",Q)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(we,Y,P)=>{P.r(Y),P.d(Y,{TrainingSession:()=>Ie});var $=P("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),se=P("./node_modules/onnxruntime-common/dist/esm/tensor.js");const xe="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";class Ie{constructor(Q,R,W){this.handler=Q,this.hasOptimizerModel=R,this.hasEvalModel=W}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(Q,R){const W=Q.evalModel||"",q=Q.optimizerModel||"",te=R||{},[pe,Se]=await(0,$.resolveBackendAndExecutionProviders)(te);if(pe.createTrainingSessionHandler){const Ee=await pe.createTrainingSessionHandler(Q.checkpointState,Q.trainModel,W,q,Se);return new Ie(Ee,!!Q.optimizerModel,!!Q.evalModel)}else throw new Error(xe)}typeNarrowingForRunStep(Q,R,W,q,te){const pe={};let Se={};if(typeof W!="object"||W===null||W instanceof se.Tensor||Array.isArray(W))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let Ee=!0;if(typeof q=="object"){if(q===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(q instanceof se.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(q)){if(q.length===0)throw new TypeError("'fetches' cannot be an empty array.");Ee=!1;for(const j of q){if(typeof j!="string")throw new TypeError("'fetches' must be a string array or an object.");if(R.indexOf(j)===-1)throw new RangeError(`'fetches' contains invalid output name: ${j}.`);pe[j]=null}if(typeof te=="object"&&te!==null)Se=te;else if(typeof te<"u")throw new TypeError("'options' must be an object.")}else{let j=!1;const le=Object.getOwnPropertyNames(q);for(const de of R)if(le.indexOf(de)!==-1){const U=q[de];(U===null||U instanceof se.Tensor)&&(j=!0,Ee=!1,pe[de]=U)}if(j){if(typeof te=="object"&&te!==null)Se=te;else if(typeof te<"u")throw new TypeError("'options' must be an object.")}else Se=q}}else if(typeof q<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const j of Q)if(typeof W[j]>"u")throw new Error(`input '${j}' is missing in 'feeds'.`);if(Ee)for(const j of R)pe[j]=null;return[pe,Se]}convertHandlerReturnTypeToMapOfTensors(Q){const R={};for(const W in Q)if(Object.hasOwnProperty.call(Q,W)){const q=Q[W];q instanceof se.Tensor?R[W]=q:R[W]=new se.Tensor(q.type,q.data,q.dims)}return R}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(Q,R,W){const[q,te]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,Q,R,W),pe=await this.handler.runTrainStep(Q,q,te);return this.convertHandlerReturnTypeToMapOfTensors(pe)}async runOptimizerStep(Q){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(Q||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(Q,R,W){if(this.hasEvalModel){const[q,te]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,Q,R,W),pe=await this.handler.runEvalStep(Q,q,te);return this.convertHandlerReturnTypeToMapOfTensors(pe)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(Q=!0){return this.handler.getParametersSize(Q)}async loadParametersBuffer(Q,R=!0){const W=await this.getParametersSize(R);if(Q.length!==4*W)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(Q,R)}async getContiguousParameters(Q=!0){return this.handler.getContiguousParameters(Q)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(we,Y,P)=>{P.r(Y),P.d(Y,{TrainingSession:()=>se});var $=P("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js");const se=$.TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(we,Y,P)=>{P.r(Y),P.d(Y,{version:()=>$});const $="1.19.2"},"./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs":(we,Y,P)=>{P.r(Y),P.d(Y,{InferenceSession:()=>Ct,TRACE:()=>rt,TRACE_FUNC_BEGIN:()=>Xe,TRACE_FUNC_END:()=>Ge,Tensor:()=>re,TrainingSession:()=>ut,default:()=>Im,env:()=>T,registerBackend:()=>Se});/*!
 * ONNX Runtime Web v1.21.0-dev.20241024-d9ca84ef96
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var $=Object.defineProperty,se=Object.getOwnPropertyDescriptor,xe=Object.getOwnPropertyNames,Ie=Object.prototype.hasOwnProperty,Pe=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),Q=(e,t)=>()=>(e&&(t=e(e=0)),t),R=(e,t)=>{for(var r in t)$(e,r,{get:t[r],enumerable:!0})},W=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of xe(t))!Ie.call(e,i)&&i!==r&&$(e,i,{get:()=>t[i],enumerable:!(n=se(t,i))||n.enumerable});return e},q=e=>W($({},"__esModule",{value:!0}),e),te,pe,Se,Ee,j,le=Q(()=>{te=new Map,pe=[],Se=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let n=te.get(e);if(n===void 0)te.set(e,{backend:t,priority:r});else{if(n.priority>r)return;if(n.priority===r&&n.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let i=pe.indexOf(e);i!==-1&&pe.splice(i,1);for(let s=0;s<pe.length;s++)if(te.get(pe[s]).priority<=r){pe.splice(s,0,e);return}pe.push(e)}return}throw new TypeError("not a valid backend")},Ee=async e=>{let t=te.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(n){return r||(t.error=`${n}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},j=async e=>{let t=e.executionProviders||[],r=t.map(c=>typeof c=="string"?c:c.name),n=r.length===0?pe:r,i,s=[],o=new Set;for(let c of n){let h=await Ee(c);typeof h=="string"?s.push({name:c,err:h}):(i||(i=h),i===h&&o.add(c))}if(!i)throw new Error(`no available backend found. ERR: ${s.map(c=>`[${c.name}] ${c.err}`).join(", ")}`);for(let{name:c,err:h}of s)r.includes(c)&&console.warn(`removing requested execution provider "${c}" from session options because it is not available: ${h}`);let u=t.filter(c=>o.has(typeof c=="string"?c:c.name));return[i,new Proxy(e,{get:(c,h)=>h==="executionProviders"?u:Reflect.get(c,h)})]}}),de=Q(()=>{le()}),U,H=Q(()=>{U="1.20.0-dev.20241016-2b8fc5529b"}),N,I,z=Q(()=>{H(),N="warning",I={wasm:{},webgl:{},webgpu:{},versions:{common:U},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);N=e}},get logLevel(){return N}},Object.defineProperty(I,"logLevel",{enumerable:!0})}),T,_e=Q(()=>{z(),T=I}),Me,$e,K=Q(()=>{Me=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let n=r.getContext("2d");if(n!=null){let i,s;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],s=e.dims[3]):(i=e.dims[3],s=e.dims[2]);let o=t?.format!==void 0?t.format:"RGB",u=t?.norm,c,h;u===void 0||u.mean===void 0?c=[255,255,255,255]:typeof u.mean=="number"?c=[u.mean,u.mean,u.mean,u.mean]:(c=[u.mean[0],u.mean[1],u.mean[2],0],u.mean[3]!==void 0&&(c[3]=u.mean[3])),u===void 0||u.bias===void 0?h=[0,0,0,0]:typeof u.bias=="number"?h=[u.bias,u.bias,u.bias,u.bias]:(h=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(h[3]=u.bias[3]));let y=s*i,l=0,x=y,A=y*2,k=-1;o==="RGBA"?(l=0,x=y,A=y*2,k=y*3):o==="RGB"?(l=0,x=y,A=y*2):o==="RBG"&&(l=0,A=y,x=y*2);for(let C=0;C<s;C++)for(let ee=0;ee<i;ee++){let J=(e.data[l++]-h[0])*c[0],B=(e.data[x++]-h[1])*c[1],ie=(e.data[A++]-h[2])*c[2],ce=k===-1?255:(e.data[k++]-h[3])*c[3];n.fillStyle="rgba("+J+","+B+","+ie+","+ce+")",n.fillRect(ee,C,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},$e=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),n;if(r!=null){let i,s,o;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],s=e.dims[1],o=e.dims[3]):(i=e.dims[3],s=e.dims[2],o=e.dims[1]);let u=t!==void 0&&t.format!==void 0?t.format:"RGB",c=t?.norm,h,y;c===void 0||c.mean===void 0?h=[255,255,255,255]:typeof c.mean=="number"?h=[c.mean,c.mean,c.mean,c.mean]:(h=[c.mean[0],c.mean[1],c.mean[2],255],c.mean[3]!==void 0&&(h[3]=c.mean[3])),c===void 0||c.bias===void 0?y=[0,0,0,0]:typeof c.bias=="number"?y=[c.bias,c.bias,c.bias,c.bias]:(y=[c.bias[0],c.bias[1],c.bias[2],0],c.bias[3]!==void 0&&(y[3]=c.bias[3]));let l=s*i;if(t!==void 0&&(t.format!==void 0&&o===4&&t.format!=="RGBA"||o===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let x=4,A=0,k=1,C=2,ee=3,J=0,B=l,ie=l*2,ce=-1;u==="RGBA"?(J=0,B=l,ie=l*2,ce=l*3):u==="RGB"?(J=0,B=l,ie=l*2):u==="RBG"&&(J=0,ie=l,B=l*2),n=r.createImageData(i,s);for(let be=0;be<s*i;A+=x,k+=x,C+=x,ee+=x,be++)n.data[A]=(e.data[J++]-y[0])*h[0],n.data[k]=(e.data[B++]-y[1])*h[1],n.data[C]=(e.data[ie++]-y[2])*h[2],n.data[ee]=ce===-1?255:(e.data[ce++]-y[3])*h[3]}else throw new Error("Can not access image data");return n}}),Fe,ot,Qe,ct,Ce,X,ve=Q(()=>{Ze(),Fe=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:n}=t,i=t.norm??{mean:255,bias:0},s,o;typeof i.mean=="number"?s=[i.mean,i.mean,i.mean,i.mean]:s=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?o=[i.bias,i.bias,i.bias,i.bias]:o=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let u=t.format!==void 0?t.format:"RGBA",c=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",h=r*n,y=c==="RGBA"?new Float32Array(h*4):new Float32Array(h*3),l=4,x=0,A=1,k=2,C=3,ee=0,J=h,B=h*2,ie=-1;u==="RGB"&&(l=3,x=0,A=1,k=2,C=-1),c==="RGBA"?ie=h*3:c==="RBG"?(ee=0,B=h,J=h*2):c==="BGR"&&(B=0,J=h,ee=h*2);for(let ce=0;ce<h;ce++,x+=l,k+=l,A+=l,C+=l)y[ee++]=(e[x]+o[0])/s[0],y[J++]=(e[A]+o[1])/s[1],y[B++]=(e[k]+o[2])/s[2],ie!==-1&&C!==-1&&(y[ie++]=(e[C]+o[3])/s[3]);return c==="RGBA"?new xt("float32",y,[1,4,r,n]):new xt("float32",y,[1,3,r,n])},ot=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,n=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,s=typeof e=="string",o,u=t??{},c=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},h=y=>typeof HTMLCanvasElement<"u"&&y instanceof HTMLCanvasElement||y instanceof OffscreenCanvas?y.getContext("2d"):null;if(r){let y=c();y.width=e.width,y.height=e.height;let l=h(y);if(l!=null){let x=e.height,A=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(x=t.resizedHeight,A=t.resizedWidth),t!==void 0){if(u=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");u.tensorFormat="RGBA",u.height=x,u.width=A}else u.tensorFormat="RGBA",u.height=x,u.width=A;l.drawImage(e,0,0),o=l.getImageData(0,0,A,x).data}else throw new Error("Can not access image data")}else if(n){let y,l;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(y=t.resizedHeight,l=t.resizedWidth):(y=e.height,l=e.width),t!==void 0&&(u=t),u.format="RGBA",u.height=y,u.width=l,t!==void 0){let x=c();x.width=l,x.height=y;let A=h(x);if(A!=null)A.putImageData(e,0,0),o=A.getImageData(0,0,l,y).data;else throw new Error("Can not access image data")}else o=e.data}else if(i){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let y=c();y.width=e.width,y.height=e.height;let l=h(y);if(l!=null){let x=e.height,A=e.width;return l.drawImage(e,0,0,A,x),o=l.getImageData(0,0,A,x).data,u.height=x,u.width=A,Fe(o,u)}else throw new Error("Can not access image data")}else{if(s)return new Promise((y,l)=>{let x=c(),A=h(x);if(!e||!A)return l();let k=new Image;k.crossOrigin="Anonymous",k.src=e,k.onload=()=>{x.width=k.width,x.height=k.height,A.drawImage(k,0,0,x.width,x.height);let C=A.getImageData(0,0,x.width,x.height);u.height=x.height,u.width=x.width,y(Fe(C.data,u))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return Fe(o,u);throw new Error("Input data provided is not supported - aborted tensor creation")},Qe=(e,t)=>{let{width:r,height:n,download:i,dispose:s}=t,o=[1,n,r,4];return new xt({location:"texture",type:"float32",texture:e,dims:o,download:i,dispose:s})},ct=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:s}=t;return new xt({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:n,download:i,dispose:s})},Ce=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:s}=t;return new xt({location:"ml-tensor",type:r??"float32",mlTensor:e,dims:n,download:i,dispose:s})},X=(e,t,r)=>new xt({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})}),Ae,He,pt,he,tt=Q(()=>{Ae=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),He=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),pt=!1,he=()=>{if(!pt){pt=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;e&&(Ae.set("int64",BigInt64Array),He.set(BigInt64Array,"int64")),t&&(Ae.set("uint64",BigUint64Array),He.set(BigUint64Array,"uint64")),r?(Ae.set("float16",Float16Array),He.set(Float16Array,"float16")):Ae.set("float16",Uint16Array)}}}),gt,Ue,yt=Q(()=>{Ze(),gt=e=>{let t=1;for(let r=0;r<e.length;r++){let n=e[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);t*=n}return t},Ue=(e,t)=>{switch(e.location){case"cpu":return new xt(e.type,e.data,t);case"cpu-pinned":return new xt({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new xt({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new xt({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new xt({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),xt,Ze=Q(()=>{K(),ve(),tt(),yt(),xt=class{constructor(e,t,r){he();let n,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,n=e.type,i=e.dims,e.location){case"cpu-pinned":{let o=Ae.get(n);if(!o)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint64"&&n!=="int8"&&n!=="uint8"&&n!=="bool")throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,u;if(typeof e=="string")if(n=e,u=r,e==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");o=t}else{let c=Ae.get(e);if(c===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e==="float16"&&c===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${c.name} as data.`);e==="uint64"||e==="int64"?o=c.from(t,BigInt):o=c.from(t)}else if(t instanceof c)o=t;else if(t instanceof Uint8ClampedArray)if(e==="uint8")o=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${n} tensor's data must be type of ${c}`)}else if(u=t,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let c=typeof e[0];if(c==="string")n="string",o=e;else if(c==="boolean")n="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${c}.`)}else if(e instanceof Uint8ClampedArray)n="uint8",o=Uint8Array.from(e);else{let c=He.get(e.constructor);if(c===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);n=c,o=e}if(u===void 0)u=[o.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=o,this.dataLocation="cpu"}let s=gt(i);if(this.cpuData&&s!==this.cpuData.length&&!((n==="uint4"||n==="int4")&&Math.ceil(s/2)===this.cpuData.length))throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=i,this.size=s}static async fromImage(e,t){return ot(e,t)}static fromTexture(e,t){return Qe(e,t)}static fromGpuBuffer(e,t){return ct(e,t)}static fromMLTensor(e,t){return Ce(e,t)}static fromPinnedBuffer(e,t,r){return X(e,t,r)}toDataURL(e){return Me(this,e)}toImageData(e){return $e(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Ue(this,e)}}}),re,Ne=Q(()=>{Ze(),re=xt}),rt,st,Xe,Ge,mt=Q(()=>{z(),rt=(e,t)=>{(typeof I.trace>"u"?!I.wasm.trace:!I.trace)||console.timeStamp(`${e}::ORT::${t}`)},st=(e,t)=>{let r=new Error().stack?.split(/\r\n|\r|\n/g)||[],n=!1;for(let i=0;i<r.length;i++){if(n&&!r[i].includes("TRACE_FUNC")){let s=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(s+=`::${t}`),rt("CPU",s);return}r[i].includes("TRACE_FUNC")&&(n=!0)}},Xe=e=>{(typeof I.trace>"u"?!I.wasm.trace:!I.trace)||st("BEGIN",e)},Ge=e=>{(typeof I.trace>"u"?!I.wasm.trace:!I.trace)||st("END",e)}}),bt,Bt=Q(()=>{le(),Ne(),mt(),bt=class fm{constructor(t){this.handler=t}async run(t,r,n){Xe();let i={},s={};if(typeof t!="object"||t===null||t instanceof re||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof re)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let h of r){if(typeof h!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(h)===-1)throw new RangeError(`'fetches' contains invalid output name: ${h}.`);i[h]=null}if(typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let h=!1,y=Object.getOwnPropertyNames(r);for(let l of this.outputNames)if(y.indexOf(l)!==-1){let x=r[l];(x===null||x instanceof re)&&(h=!0,o=!1,i[l]=x)}if(h){if(typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else s=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let h of this.inputNames)if(typeof t[h]>"u")throw new Error(`input '${h}' is missing in 'feeds'.`);if(o)for(let h of this.outputNames)i[h]=null;let u=await this.handler.run(t,i,s),c={};for(let h in u)if(Object.hasOwnProperty.call(u,h)){let y=u[h];y instanceof re?c[h]=y:c[h]=new re(y.type,y.data,y.dims)}return Ge(),c}async release(){return this.handler.dispose()}static async create(t,r,n,i){Xe();let s,o={};if(typeof t=="string"){if(s=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(s=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let y=t,l=0,x=t.byteLength;if(typeof r=="object"&&r!==null)o=r;else if(typeof r=="number"){if(l=r,!Number.isSafeInteger(l))throw new RangeError("'byteOffset' must be an integer.");if(l<0||l>=y.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${y.byteLength}).`);if(x=t.byteLength-l,typeof n=="number"){if(x=n,!Number.isSafeInteger(x))throw new RangeError("'byteLength' must be an integer.");if(x<=0||l+x>y.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${y.byteLength-l}].`);if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof n<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");s=new Uint8Array(y,l,x)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[u,c]=await j(o),h=await u.createInferenceSessionHandler(s,c);return Ge(),new fm(h)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),Ct,E=Q(()=>{Bt(),Ct=bt}),ne=Q(()=>{}),F=Q(()=>{}),oe=Q(()=>{}),Te=Q(()=>{}),lt,Ye,$t=Q(()=>{le(),Ne(),lt="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Ye=class mm{constructor(t,r,n){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,r){let n=t.evalModel||"",i=t.optimizerModel||"",s=r||{},[o,u]=await j(s);if(o.createTrainingSessionHandler){let c=await o.createTrainingSessionHandler(t.checkpointState,t.trainModel,n,i,u);return new mm(c,!!t.optimizerModel,!!t.evalModel)}else throw new Error(lt)}typeNarrowingForRunStep(t,r,n,i,s){let o={},u={};if(typeof n!="object"||n===null||n instanceof re||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let c=!0;if(typeof i=="object"){if(i===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof re)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(i.length===0)throw new TypeError("'fetches' cannot be an empty array.");c=!1;for(let h of i){if(typeof h!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(h)===-1)throw new RangeError(`'fetches' contains invalid output name: ${h}.`);o[h]=null}if(typeof s=="object"&&s!==null)u=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let h=!1,y=Object.getOwnPropertyNames(i);for(let l of r)if(y.indexOf(l)!==-1){let x=i[l];(x===null||x instanceof re)&&(h=!0,c=!1,o[l]=x)}if(h){if(typeof s=="object"&&s!==null)u=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else u=i}}else if(typeof i<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let h of t)if(typeof n[h]>"u")throw new Error(`input '${h}' is missing in 'feeds'.`);if(c)for(let h of r)o[h]=null;return[o,u]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let n in t)if(Object.hasOwnProperty.call(t,n)){let i=t[n];i instanceof re?r[n]=i:r[n]=new re(i.type,i.data,i.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,n){let[i,s]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,n),o=await this.handler.runTrainStep(t,i,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,n){if(this.hasEvalModel){let[i,s]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,n),o=await this.handler.runEvalStep(t,i,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let n=await this.getParametersSize(r);if(t.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}}),ut,ft=Q(()=>{$t(),ut=Ye}),Wt={};R(Wt,{InferenceSession:()=>Ct,TRACE:()=>rt,TRACE_FUNC_BEGIN:()=>Xe,TRACE_FUNC_END:()=>Ge,Tensor:()=>re,TrainingSession:()=>ut,env:()=>T,registerBackend:()=>Se});var Kt=Q(()=>{de(),_e(),E(),Ne(),ne(),F(),mt(),oe(),Te(),ft()}),Ir=Q(()=>{}),Er={};R(Er,{default:()=>Hr});var Lr,Cr,Hr,wn=Q(()=>{bh(),Br(),O(),Lr="ort-wasm-proxy-worker",Cr=globalThis.self?.name===Lr,Cr&&(self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":nr(r.wasm).then(()=>{Yc(r).then(()=>{postMessage({type:t})},n=>{postMessage({type:t,err:n})})},n=>{postMessage({type:t,err:n})});break;case"init-ep":{let{epName:n,env:i}=r;Zc(i,n).then(()=>{postMessage({type:t})},s=>{postMessage({type:t,err:s})});break}case"copy-from":{let{buffer:n}=r,i=Mc(n);postMessage({type:t,out:i});break}case"create":{let{model:n,options:i}=r;Jc(n,i).then(s=>{postMessage({type:t,out:s})},s=>{postMessage({type:t,err:s})});break}case"release":ep(r),postMessage({type:t});break;case"run":{let{sessionId:n,inputIndices:i,inputs:s,outputIndices:o,options:u}=r;rp(n,i,s,o,new Array(o.length).fill(null),u).then(c=>{c.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:c},ip([...s,...c]))},c=>{postMessage({type:t,err:c})});break}case"end-profiling":np(r),postMessage({type:t});break;default:}}catch(n){postMessage({type:t,err:n})}}),Hr=Cr?null:e=>new Worker(e??je,{type:"module",name:Lr})}),ht={};R(ht,{default:()=>Le});var Z,ke,Le,Oe=Q(()=>{ke=(Z=import.meta.url,async function(e={}){function t(){return ir.buffer!=br.buffer&&vn(),br}function r(){return ir.buffer!=br.buffer&&vn(),Gt}function n(){return ir.buffer!=br.buffer&&vn(),_r}function i(){return ir.buffer!=br.buffer&&vn(),Je}function s(){return ir.buffer!=br.buffer&&vn(),Et}function o(){return ir.buffer!=br.buffer&&vn(),pr}function u(){return ir.buffer!=br.buffer&&vn(),Ur}function c(){return ir.buffer!=br.buffer&&vn(),zn}var h,y,l=Object.assign({},e),x=new Promise((a,m)=>{h=a,y=m}),A=typeof window=="object",k=typeof importScripts=="function",C=k&&self.name=="em-pthread";l.mountExternalData=(a,m)=>{a.startsWith("./")&&(a=a.substring(2)),(l.Eb||(l.Eb=new Map)).set(a,m)},l.unmountExternalData=()=>{delete l.Eb};var ee=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let J=()=>{let a=(b,S,L)=>(...ge)=>{let Ke=li,dt=S?.();ge=b(...ge);let zt=S?.();return dt!==zt&&(b=zt,L(dt),S=L=null),li!=Ke?new Promise((Rt,tr)=>{Tp={resolve:Rt,reject:tr}}):ge},m=b=>async(...S)=>{try{if(l.Fb)throw Error("Session already started");let L=l.Fb={fc:S[0],errors:[]},ge=await b(...S);if(l.Fb!==L)throw Error("Session mismatch");l.Gb?.flush();let Ke=L.errors;if(0<Ke.length){let dt=await Promise.all(Ke);if(dt=dt.filter(zt=>zt),0<dt.length)throw Error(dt.join(`
`))}return ge}finally{l.Fb=null}};l._OrtCreateSession=a(l._OrtCreateSession,()=>l._OrtCreateSession,b=>l._OrtCreateSession=b),l._OrtRun=m(a(l._OrtRun,()=>l._OrtRun,b=>l._OrtRun=b)),l._OrtRunWithBinding=m(a(l._OrtRunWithBinding,()=>l._OrtRunWithBinding,b=>l._OrtRunWithBinding=b)),l._OrtBindInput=a(l._OrtBindInput,()=>l._OrtBindInput,b=>l._OrtBindInput=b),J=void 0};l.jsepInit=(a,m)=>{if(J?.(),a==="webgpu"){[l.Gb,l.Ub,l.Yb,l.Nb,l.Xb,l.jb,l.Zb,l.bc,l.Vb,l.Wb,l.$b]=m;let b=l.Gb;l.jsepRegisterBuffer=(S,L,ge,Ke)=>b.registerBuffer(S,L,ge,Ke),l.jsepGetBuffer=S=>b.getBuffer(S),l.jsepCreateDownloader=(S,L,ge)=>b.createDownloader(S,L,ge),l.jsepOnCreateSession=S=>{b.onCreateSession(S)},l.jsepOnReleaseSession=S=>{b.onReleaseSession(S)},l.jsepOnRunStart=S=>b.onRunStart(S),l.cc=(S,L)=>{b.upload(S,L)}}else if(a==="webnn"){[l.Gb,l.ac,l.Ob,l.jsepEnsureTensor,l.dc,l.jsepDownloadTensor]=m,l.jsepReleaseTensorId=l.Ob;let b=l.Gb;l.jsepOnRunStart=S=>b.onRunStart(S),l.jsepRegisterMLContext=(S,L)=>{b.registerMLContext(S,L)},l.jsepOnReleaseSession=S=>{b.onReleaseSession(S)},l.jsepCreateMLTensorDownloader=(S,L)=>b.createMLTensorDownloader(S,L),l.jsepRegisterMLTensor=(S,L,ge)=>b.registerMLTensor(S,L,ge),l.qc=(S,L,ge,Ke,dt)=>b.registerMLConstant(S,L,ge,Ke,dt,l.Eb)}};var B,ie,ce=Object.assign({},l),be="./this.program",We=(a,m)=>{throw m},ze="";(A||k)&&(k?ze=self.location.href:typeof document<"u"&&document.currentScript&&(ze=document.currentScript.src),Z&&(ze=Z),ze=ze.startsWith("blob:")?"":ze.substr(0,ze.replace(/[?#].*/,"").lastIndexOf("/")+1),k&&(ie=a=>{var m=new XMLHttpRequest;return m.open("GET",a,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),B=(a,m,b)=>{var S=new XMLHttpRequest;S.open("GET",a,!0),S.responseType="arraybuffer",S.onload=()=>{S.status==200||S.status==0&&S.response?m(S.response):b()},S.onerror=b,S.send(null)});var wt,Lt=console.log.bind(console),Dt=console.error.bind(console),sr=Lt,Qt=Dt;if(Object.assign(l,ce),ce=null,C){let a=function(m){try{var b=m.data,S=b.cmd;if(S==="load"){let L=[];self.onmessage=ge=>L.push(ge),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let ge of L)a(ge);self.onmessage=a};for(let ge of b.handlers)l[ge]&&!l[ge].proxy||(l[ge]=(...Ke)=>{postMessage({Mb:"callHandler",oc:ge,args:Ke})},ge=="print"&&(sr=l[ge]),ge=="printErr"&&(Qt=l[ge]));ir=b.wasmMemory,vn(),or(b.wasmModule)}else if(S==="run"){Sp(b.pthread_ptr,0,0,1,0,0),Mp(b.pthread_ptr),Bm(),Wh(),Tr||(Uf(),Tr=!0);try{zm(b.start_routine,b.arg)}catch(L){if(L!="unwind")throw L}}else S==="cancel"?ra()&&Oc(-1):b.target!=="setimmediate"&&(S==="checkMailbox"?Tr&&Ec():S&&(Qt(`worker: received unknown command ${S}`),Qt(b)))}catch(L){throw Vf(),L}};var or,Tr=!1;Qt=function(...m){m=m.join(" "),console.error(m)},self.alert=function(...m){postMessage({Mb:"alert",text:m.join(" "),rc:ra()})},l.instantiateWasm=(m,b)=>new Promise(S=>{or=L=>{L=new WebAssembly.Instance(L,Rh()),b(L),S()}}),self.onunhandledrejection=m=>{throw m.reason||m},self.onmessage=a}l.wasmBinary&&(wt=l.wasmBinary);var ir,Ht,Mr,br,Gt,_r,Je,Et,pr,Ur,Wr,Gn,zn,Cn=!1;function vn(){var a=ir.buffer;l.HEAP8=br=new Int8Array(a),l.HEAP16=_r=new Int16Array(a),l.HEAPU8=Gt=new Uint8Array(a),l.HEAPU16=Je=new Uint16Array(a),l.HEAP32=Et=new Int32Array(a),l.HEAPU32=pr=new Uint32Array(a),l.HEAPF32=Ur=new Float32Array(a),l.HEAPF64=zn=new Float64Array(a),l.HEAP64=Wr=new BigInt64Array(a),l.HEAPU64=Gn=new BigUint64Array(a)}if(!C){if(!((ir=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof ee))throw Qt("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");vn()}var fn=[],mn=[],Xi=[],Qi=0,ys=null;function Oh(){if(--Qi==0&&ys){var a=ys;ys=null,a()}}function Jo(a){throw Qt(a="Aborted("+a+")"),Cn=!0,Mr=1,a=new WebAssembly.RuntimeError(a+". Build with -sASSERTIONS for more info."),y(a),a}var up,Bh=a=>a.startsWith("data:application/octet-stream;base64,"),zh=a=>a.startsWith("file://");function Dh(a){if(a==up&&wt)return new Uint8Array(wt);if(ie)return ie(a);throw"both async and sync fetching of the wasm failed"}function Lh(a,m,b){return function(S){if(!wt&&(A||k)){if(typeof fetch=="function"&&!zh(S))return fetch(S,{credentials:"same-origin"}).then(L=>{if(!L.ok)throw`failed to load wasm binary file at '${S}'`;return L.arrayBuffer()}).catch(()=>Dh(S));if(B)return new Promise((L,ge)=>{B(S,Ke=>L(new Uint8Array(Ke)),ge)})}return Promise.resolve().then(()=>Dh(S))}(a).then(S=>WebAssembly.instantiate(S,m)).then(b,S=>{Qt(`failed to asynchronously prepare wasm: ${S}`),Jo(S)})}function Rh(){return{a:{O:Om,Aa:Fm,b:Lm,aa:Kh,B:Yh,qa:Zh,Y:ef,_:tf,ra:rf,oa:nf,ha:sf,na:of,L:af,Z:lf,W:uf,pa:df,X:cf,wa:Rm,F:Nm,Q:jm,P:Vm,E:Gm,u:qm,q:Hm,G:Km,A:t_,R:r_,ua:n_,ka:i_,U:s_,ba:o_,H:a_,ja:Mp,ta:l_,t:u_,x:p_,n:h_,l:m_,c:yp,o:__,j:y_,w:b_,p:M_,g:v_,s:x_,m:T_,e:E_,k:C_,i:$_,h:S_,d:k_,ea:P_,fa:A_,ga:I_,ca:Ef,da:Cf,T:F_,f:O_,D:B_,I:z_,M:D_,y:L_,sa:R_,V:N_,v:Sf,z:j_,N:U_,S:V_,za:W_,ya:G_,la:Af,ma:If,$:fp,C:Ff,K:Of,ia:Bf,J:zf,a:ir,xa:hp,va:Rf,r:K_}}}var dp={867364:(a,m,b,S,L)=>{if(l===void 0||!l.Eb)return 1;if((a=gn(a>>>0)).startsWith("./")&&(a=a.substring(2)),!(a=l.Eb.get(a)))return 2;if(S>>>=0,(m>>>=0)+(b>>>=0)>a.byteLength)return 3;try{let ge=a.subarray(m,m+b);switch(L){case 0:r().set(ge,S>>>0);break;case 1:l.cc(S,ge);break;default:return 4}return 0}catch{return 4}},868047:(a,m,b)=>{l.dc(a,r().subarray(m>>>0,m+b>>>0))},868110:()=>l.ac(),868151:a=>{l.Ob(a)},868187:()=>{l.Vb()},868218:()=>{l.Wb()},868247:()=>{l.$b()},868272:a=>l.Ub(a),868305:a=>l.Yb(a),868337:(a,m,b)=>{l.Nb(a,m,b,!0)},868376:(a,m,b)=>{l.Nb(a,m,b)},868409:()=>typeof wasmOffsetConverter<"u",868466:a=>{l.jb("Abs",a,void 0)},868517:a=>{l.jb("Neg",a,void 0)},868568:a=>{l.jb("Floor",a,void 0)},868621:a=>{l.jb("Ceil",a,void 0)},868673:a=>{l.jb("Reciprocal",a,void 0)},868731:a=>{l.jb("Sqrt",a,void 0)},868783:a=>{l.jb("Exp",a,void 0)},868834:a=>{l.jb("Erf",a,void 0)},868885:a=>{l.jb("Sigmoid",a,void 0)},868940:(a,m,b)=>{l.jb("HardSigmoid",a,{alpha:m,beta:b})},869019:a=>{l.jb("Log",a,void 0)},869070:a=>{l.jb("Sin",a,void 0)},869121:a=>{l.jb("Cos",a,void 0)},869172:a=>{l.jb("Tan",a,void 0)},869223:a=>{l.jb("Asin",a,void 0)},869275:a=>{l.jb("Acos",a,void 0)},869327:a=>{l.jb("Atan",a,void 0)},869379:a=>{l.jb("Sinh",a,void 0)},869431:a=>{l.jb("Cosh",a,void 0)},869483:a=>{l.jb("Asinh",a,void 0)},869536:a=>{l.jb("Acosh",a,void 0)},869589:a=>{l.jb("Atanh",a,void 0)},869642:a=>{l.jb("Tanh",a,void 0)},869694:a=>{l.jb("Not",a,void 0)},869745:(a,m,b)=>{l.jb("Clip",a,{min:m,max:b})},869814:a=>{l.jb("Clip",a,void 0)},869866:(a,m)=>{l.jb("Elu",a,{alpha:m})},869924:a=>{l.jb("Gelu",a,void 0)},869976:a=>{l.jb("Relu",a,void 0)},870028:(a,m)=>{l.jb("LeakyRelu",a,{alpha:m})},870092:(a,m)=>{l.jb("ThresholdedRelu",a,{alpha:m})},870162:(a,m)=>{l.jb("Cast",a,{to:m})},870220:a=>{l.jb("Add",a,void 0)},870271:a=>{l.jb("Sub",a,void 0)},870322:a=>{l.jb("Mul",a,void 0)},870373:a=>{l.jb("Div",a,void 0)},870424:a=>{l.jb("Pow",a,void 0)},870475:a=>{l.jb("Equal",a,void 0)},870528:a=>{l.jb("Greater",a,void 0)},870583:a=>{l.jb("GreaterOrEqual",a,void 0)},870645:a=>{l.jb("Less",a,void 0)},870697:a=>{l.jb("LessOrEqual",a,void 0)},870756:(a,m,b,S,L)=>{l.jb("ReduceMean",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(s().subarray(S>>>0,L>>>0)):[]})},870915:(a,m,b,S,L)=>{l.jb("ReduceMax",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(s().subarray(S>>>0,L>>>0)):[]})},871073:(a,m,b,S,L)=>{l.jb("ReduceMin",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(s().subarray(S>>>0,L>>>0)):[]})},871231:(a,m,b,S,L)=>{l.jb("ReduceProd",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(s().subarray(S>>>0,L>>>0)):[]})},871390:(a,m,b,S,L)=>{l.jb("ReduceSum",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(s().subarray(S>>>0,L>>>0)):[]})},871548:(a,m,b,S,L)=>{l.jb("ReduceL1",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(s().subarray(S>>>0,L>>>0)):[]})},871705:(a,m,b,S,L)=>{l.jb("ReduceL2",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(s().subarray(S>>>0,L>>>0)):[]})},871862:(a,m,b,S,L)=>{l.jb("ReduceLogSum",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(s().subarray(S>>>0,L>>>0)):[]})},872023:(a,m,b,S,L)=>{l.jb("ReduceSumSquare",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(s().subarray(S>>>0,L>>>0)):[]})},872187:(a,m,b,S,L)=>{l.jb("ReduceLogSumExp",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(s().subarray(S>>>0,L>>>0)):[]})},872351:a=>{l.jb("Where",a,void 0)},872404:(a,m,b)=>{l.jb("Transpose",a,{perm:m?Array.from(s().subarray(m>>>0,b>>>0)):[]})},872512:(a,m,b,S)=>{l.jb("DepthToSpace",a,{blocksize:m,mode:gn(b),format:S?"NHWC":"NCHW"})},872645:(a,m,b,S)=>{l.jb("DepthToSpace",a,{blocksize:m,mode:gn(b),format:S?"NHWC":"NCHW"})},872778:(a,m,b,S,L,ge,Ke,dt,zt,Rt,tr,Ar,Dr,Ve,Sr)=>{l.jb("ConvTranspose",a,{format:zt?"NHWC":"NCHW",autoPad:m,dilations:[b],group:S,kernelShape:[L],pads:[ge,Ke],strides:[dt],wIsConst:()=>!!t()[Rt>>>0],outputPadding:tr?Array.from(s().subarray(tr>>>0,Ar>>>0)):[],outputShape:Dr?Array.from(s().subarray(Dr>>>0,Ve>>>0)):[],activation:gn(Sr)})},873179:(a,m,b,S,L,ge,Ke,dt,zt,Rt,tr,Ar,Dr,Ve)=>{l.jb("ConvTranspose",a,{format:dt?"NHWC":"NCHW",autoPad:m,dilations:Array.from(s().subarray(b>>>0,2+(b>>>0)>>>0)),group:S,kernelShape:Array.from(s().subarray(L>>>0,2+(L>>>0)>>>0)),pads:Array.from(s().subarray(ge>>>0,4+(ge>>>0)>>>0)),strides:Array.from(s().subarray(Ke>>>0,2+(Ke>>>0)>>>0)),wIsConst:()=>!!t()[zt>>>0],outputPadding:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],outputShape:Ar?Array.from(s().subarray(Ar>>>0,Dr>>>0)):[],activation:gn(Ve)})},873744:(a,m,b,S,L,ge,Ke,dt,zt,Rt,tr,Ar,Dr,Ve,Sr)=>{l.jb("ConvTranspose",a,{format:zt?"NHWC":"NCHW",autoPad:m,dilations:[b],group:S,kernelShape:[L],pads:[ge,Ke],strides:[dt],wIsConst:()=>!!t()[Rt>>>0],outputPadding:tr?Array.from(s().subarray(tr>>>0,Ar>>>0)):[],outputShape:Dr?Array.from(s().subarray(Dr>>>0,Ve>>>0)):[],activation:gn(Sr)})},874145:(a,m,b,S,L,ge,Ke,dt,zt,Rt,tr,Ar,Dr,Ve)=>{l.jb("ConvTranspose",a,{format:dt?"NHWC":"NCHW",autoPad:m,dilations:Array.from(s().subarray(b>>>0,2+(b>>>0)>>>0)),group:S,kernelShape:Array.from(s().subarray(L>>>0,2+(L>>>0)>>>0)),pads:Array.from(s().subarray(ge>>>0,4+(ge>>>0)>>>0)),strides:Array.from(s().subarray(Ke>>>0,2+(Ke>>>0)>>>0)),wIsConst:()=>!!t()[zt>>>0],outputPadding:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],outputShape:Ar?Array.from(s().subarray(Ar>>>0,Dr>>>0)):[],activation:gn(Ve)})},874710:(a,m)=>{l.jb("GlobalAveragePool",a,{format:m?"NHWC":"NCHW"})},874801:(a,m,b,S,L,ge,Ke,dt,zt,Rt,tr,Ar,Dr,Ve)=>{l.jb("AveragePool",a,{format:Ve?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:S,storage_order:L,dilations:ge?Array.from(s().subarray(ge>>>0,Ke>>>0)):[],kernel_shape:dt?Array.from(s().subarray(dt>>>0,zt>>>0)):[],pads:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],strides:Ar?Array.from(s().subarray(Ar>>>0,Dr>>>0)):[]})},875216:(a,m)=>{l.jb("GlobalAveragePool",a,{format:m?"NHWC":"NCHW"})},875307:(a,m,b,S,L,ge,Ke,dt,zt,Rt,tr,Ar,Dr,Ve)=>{l.jb("AveragePool",a,{format:Ve?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:S,storage_order:L,dilations:ge?Array.from(s().subarray(ge>>>0,Ke>>>0)):[],kernel_shape:dt?Array.from(s().subarray(dt>>>0,zt>>>0)):[],pads:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],strides:Ar?Array.from(s().subarray(Ar>>>0,Dr>>>0)):[]})},875722:(a,m)=>{l.jb("GlobalMaxPool",a,{format:m?"NHWC":"NCHW"})},875809:(a,m,b,S,L,ge,Ke,dt,zt,Rt,tr,Ar,Dr,Ve)=>{l.jb("MaxPool",a,{format:Ve?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:S,storage_order:L,dilations:ge?Array.from(s().subarray(ge>>>0,Ke>>>0)):[],kernel_shape:dt?Array.from(s().subarray(dt>>>0,zt>>>0)):[],pads:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],strides:Ar?Array.from(s().subarray(Ar>>>0,Dr>>>0)):[]})},876220:(a,m)=>{l.jb("GlobalMaxPool",a,{format:m?"NHWC":"NCHW"})},876307:(a,m,b,S,L,ge,Ke,dt,zt,Rt,tr,Ar,Dr,Ve)=>{l.jb("MaxPool",a,{format:Ve?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:S,storage_order:L,dilations:ge?Array.from(s().subarray(ge>>>0,Ke>>>0)):[],kernel_shape:dt?Array.from(s().subarray(dt>>>0,zt>>>0)):[],pads:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],strides:Ar?Array.from(s().subarray(Ar>>>0,Dr>>>0)):[]})},876718:(a,m,b,S,L)=>{l.jb("Gemm",a,{alpha:m,beta:b,transA:S,transB:L})},876822:a=>{l.jb("MatMul",a,void 0)},876876:(a,m,b,S)=>{l.jb("ArgMax",a,{keepDims:!!m,selectLastIndex:!!b,axis:S})},876984:(a,m,b,S)=>{l.jb("ArgMin",a,{keepDims:!!m,selectLastIndex:!!b,axis:S})},877092:(a,m)=>{l.jb("Softmax",a,{axis:m})},877155:(a,m)=>{l.jb("Concat",a,{axis:m})},877215:(a,m,b,S,L)=>{l.jb("Split",a,{axis:m,numOutputs:b,splitSizes:S?Array.from(s().subarray(S>>>0,L>>>0)):[]})},877355:a=>{l.jb("Expand",a,void 0)},877409:(a,m)=>{l.jb("Gather",a,{axis:Number(m)})},877480:(a,m)=>{l.jb("GatherElements",a,{axis:Number(m)})},877559:(a,m,b,S,L,ge,Ke,dt,zt,Rt,tr)=>{l.jb("Resize",a,{antialias:m,axes:b?Array.from(s().subarray(b>>>0,S>>>0)):[],coordinateTransformMode:gn(L),cubicCoeffA:ge,excludeOutside:Ke,extrapolationValue:dt,keepAspectRatioPolicy:gn(zt),mode:gn(Rt),nearestMode:gn(tr)})},877905:(a,m,b,S,L,ge,Ke)=>{l.jb("Slice",a,{starts:m?Array.from(s().subarray(m>>>0,b>>>0)):[],ends:S?Array.from(s().subarray(S>>>0,L>>>0)):[],axes:ge?Array.from(s().subarray(ge>>>0,Ke>>>0)):[]})},878121:a=>{l.jb("Tile",a,void 0)},878173:(a,m,b)=>{l.jb("InstanceNormalization",a,{epsilon:m,format:b?"NHWC":"NCHW"})},878287:(a,m,b)=>{l.jb("InstanceNormalization",a,{epsilon:m,format:b?"NHWC":"NCHW"})},878401:a=>{l.jb("Range",a,void 0)},878454:(a,m)=>{l.jb("Einsum",a,{equation:gn(m)})},878535:(a,m,b,S,L)=>{l.jb("Pad",a,{mode:m,value:b,pads:S?Array.from(s().subarray(S>>>0,L>>>0)):[]})},878662:(a,m,b,S,L,ge)=>{l.jb("BatchNormalization",a,{epsilon:m,momentum:b,spatial:!!L,trainingMode:!!S,format:ge?"NHWC":"NCHW"})},878831:(a,m,b,S,L,ge)=>{l.jb("BatchNormalization",a,{epsilon:m,momentum:b,spatial:!!L,trainingMode:!!S,format:ge?"NHWC":"NCHW"})},879e3:(a,m,b)=>{l.jb("CumSum",a,{exclusive:Number(m),reverse:Number(b)})},879097:(a,m,b)=>{l.jb("DequantizeLinear",a,{axis:m,blockSize:b})},879187:(a,m,b,S,L,ge,Ke,dt,zt)=>{l.jb("Attention",a,{numHeads:m,isUnidirectional:b,maskFilterValue:S,scale:L,doRotary:ge,qkvHiddenSizes:Ke?Array.from(s().subarray(Number(dt)>>>0,Number(dt)+Ke>>>0)):[],pastPresentShareBuffer:!!zt})},879459:a=>{l.jb("BiasAdd",a,void 0)},879514:a=>{l.jb("BiasSplitGelu",a,void 0)},879575:a=>{l.jb("FastGelu",a,void 0)},879631:(a,m,b,S,L,ge,Ke,dt,zt,Rt,tr,Ar,Dr,Ve,Sr,en)=>{l.jb("Conv",a,{format:Ar?"NHWC":"NCHW",auto_pad:m,dilations:b?Array.from(s().subarray(b>>>0,S>>>0)):[],group:L,kernel_shape:ge?Array.from(s().subarray(ge>>>0,Ke>>>0)):[],pads:dt?Array.from(s().subarray(dt>>>0,zt>>>0)):[],strides:Rt?Array.from(s().subarray(Rt>>>0,tr>>>0)):[],w_is_const:()=>!!t()[Dr>>>0],activation:gn(Ve),activation_params:Sr?Array.from(u().subarray(Sr>>>0,en>>>0)):[]})},880127:a=>{l.jb("Gelu",a,void 0)},880179:(a,m,b,S,L,ge,Ke,dt,zt)=>{l.jb("GroupQueryAttention",a,{numHeads:m,kvNumHeads:b,scale:S,softcap:L,doRotary:ge,rotaryInterleaved:Ke,smoothSoftmax:dt,localWindowSize:zt})},880396:(a,m,b,S)=>{l.jb("LayerNormalization",a,{axis:m,epsilon:b,simplified:!!S})},880507:(a,m,b,S)=>{l.jb("LayerNormalization",a,{axis:m,epsilon:b,simplified:!!S})},880618:(a,m,b,S,L,ge)=>{l.jb("MatMulNBits",a,{k:m,n:b,accuracyLevel:S,bits:L,blockSize:ge})},880745:(a,m,b,S,L,ge)=>{l.jb("MultiHeadAttention",a,{numHeads:m,isUnidirectional:b,maskFilterValue:S,scale:L,doRotary:ge})},880904:(a,m)=>{l.jb("QuickGelu",a,{alpha:m})},880968:(a,m,b,S,L)=>{l.jb("RotaryEmbedding",a,{interleaved:!!m,numHeads:b,rotaryEmbeddingDim:S,scale:L})},881107:(a,m,b)=>{l.jb("SkipLayerNormalization",a,{epsilon:m,simplified:!!b})},881209:(a,m,b)=>{l.jb("SkipLayerNormalization",a,{epsilon:m,simplified:!!b})},881311:(a,m,b,S)=>{l.jb("GatherBlockQuantized",a,{gatherAxis:m,quantizeAxis:b,blockSize:S})},881432:a=>{l.Zb(a)},881466:(a,m)=>l.bc(a,m,l.Fb.fc,l.Fb.errors)};function Fm(a,m,b){return bf(async()=>{await l.Xb(a,m,b)})}function Om(){return typeof wasmOffsetConverter<"u"}function cp(a){this.name="ExitStatus",this.message=`Program terminated with exit(${a})`,this.status=a}var pp=a=>{a.terminate(),a.onmessage=()=>{}},Nh=a=>{Yi.length==0&&(qh(),Gh(Yi[0]));var m=Yi.pop();if(!m)return 6;Ms.push(m),oi[a.Ab]=m,m.Ab=a.Ab;var b={cmd:"run",start_routine:a.hc,arg:a.Qb,pthread_ptr:a.Ab};return m.postMessage(b,a.mc),0},bs=0,Qr=(a,m,...b)=>{for(var S=2*b.length,L=Ap(),ge=Pp(8*S),Ke=ge>>>3,dt=0;dt<b.length;dt++){var zt=b[dt];typeof zt=="bigint"?(Wr[Ke+2*dt]=1n,Wr[Ke+2*dt+1]=zt):(Wr[Ke+2*dt]=0n,c()[Ke+2*dt+1>>>0]=zt)}return a=Wf(a,0,S,ge,m),Bc(L),a};function hp(a){if(C)return Qr(0,1,a);if(Mr=a,!(0<bs)){for(var m of Ms)pp(m);for(m of Yi)pp(m);Yi=[],Ms=[],oi=[],Cn=!0}We(a,new cp(a))}function jh(a){if(C)return Qr(1,0,a);fp(a)}var fp=a=>{if(Mr=a,C)throw jh(a),"unwind";hp(a)},Yi=[],Ms=[],Uh=[],oi={},Vh=a=>{var m=a.Ab;delete oi[m],Yi.push(a),Ms.splice(Ms.indexOf(a),1),a.Ab=0,kp(m)};function Wh(){Uh.forEach(a=>a())}var Gh=a=>new Promise(m=>{a.onmessage=L=>{var ge=(L=L.data).cmd;if(L.targetThread&&L.targetThread!=ra()){var Ke=oi[L.targetThread];Ke?Ke.postMessage(L,L.transferList):Qt(`Internal error! Worker sent a message "${ge}" to target pthread ${L.targetThread}, but that thread no longer exists!`)}else ge==="checkMailbox"?Ec():ge==="spawnThread"?Nh(L):ge==="cleanupThread"?Vh(oi[L.thread]):ge==="killThread"?(L=L.thread,ge=oi[L],delete oi[L],pp(ge),kp(L),Ms.splice(Ms.indexOf(ge),1),ge.Ab=0):ge==="cancelThread"?oi[L.thread].postMessage({cmd:"cancel"}):ge==="loaded"?(a.loaded=!0,m(a)):ge==="alert"?alert(`Thread ${L.threadId}: ${L.text}`):L.target==="setimmediate"?a.postMessage(L):ge==="callHandler"?l[L.handler](...L.args):ge&&Qt(`worker sent an unknown command ${ge}`)},a.onerror=L=>{throw Qt(`worker sent an error! ${L.filename}:${L.lineno}: ${L.message}`),L};var b,S=[];for(b of[])l.hasOwnProperty(b)&&S.push(b);a.postMessage({cmd:"load",handlers:S,wasmMemory:ir,wasmModule:Ht})});function qh(){var a=new Worker(new URL(import.meta.url),{type:"module",workerData:"em-pthread",name:"em-pthread"});Yi.push(a)}var Tc=a=>{for(;0<a.length;)a.shift()(l)},Bm=()=>{var a=ra(),m=o()[a+52>>>2>>>0];a=o()[a+56>>>2>>>0],qf(m,m-a),Bc(m)},zm=(a,m)=>{bs=0,a=Hf(a,m),0<bs?Mr=a:Oc(a)};class Dm{constructor(m){this.Jb=m-24}}function Lm(a,m,b){var S=new Dm(a>>>=0);throw m>>>=0,b>>>=0,o()[S.Jb+16>>>2>>>0]=0,o()[S.Jb+4>>>2>>>0]=m,o()[S.Jb+8>>>2>>>0]=b,a}function Hh(a,m,b,S){return C?Qr(2,1,a,m,b,S):Kh(a,m,b,S)}function Kh(a,m,b,S){if(a>>>=0,m>>>=0,b>>>=0,S>>>=0,ee===void 0)return Qt("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var L=[];return C&&L.length===0?Hh(a,m,b,S):(a={hc:b,Ab:a,Qb:S,mc:L},C?(a.Mb="spawnThread",postMessage(a,L),0):Nh(a))}var Xh=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Qh=(a,m,b)=>{var S=(m>>>=0)+b;for(b=m;a[b]&&!(b>=S);)++b;if(16<b-m&&a.buffer&&Xh)return Xh.decode(a.buffer instanceof ee?a.slice(m,b):a.subarray(m,b));for(S="";m<b;){var L=a[m++];if(128&L){var ge=63&a[m++];if((224&L)==192)S+=String.fromCharCode((31&L)<<6|ge);else{var Ke=63&a[m++];65536>(L=(240&L)==224?(15&L)<<12|ge<<6|Ke:(7&L)<<18|ge<<12|Ke<<6|63&a[m++])?S+=String.fromCharCode(L):(L-=65536,S+=String.fromCharCode(55296|L>>10,56320|1023&L))}}else S+=String.fromCharCode(L)}return S},gn=(a,m)=>(a>>>=0)?Qh(r(),a,m):"";function Yh(a,m,b){return C?Qr(3,1,a,m,b):0}function Zh(a,m){if(C)return Qr(4,1,a,m)}var mp=a=>{for(var m=0,b=0;b<a.length;++b){var S=a.charCodeAt(b);127>=S?m++:2047>=S?m+=2:55296<=S&&57343>=S?(m+=4,++b):m+=3}return m},Jh=(a,m,b,S)=>{if(!(0<S))return 0;var L=b>>>=0;S=b+S-1;for(var ge=0;ge<a.length;++ge){var Ke=a.charCodeAt(ge);if(55296<=Ke&&57343>=Ke&&(Ke=65536+((1023&Ke)<<10)|1023&a.charCodeAt(++ge)),127>=Ke){if(b>=S)break;m[b++>>>0]=Ke}else{if(2047>=Ke){if(b+1>=S)break;m[b++>>>0]=192|Ke>>6}else{if(65535>=Ke){if(b+2>=S)break;m[b++>>>0]=224|Ke>>12}else{if(b+3>=S)break;m[b++>>>0]=240|Ke>>18,m[b++>>>0]=128|Ke>>12&63}m[b++>>>0]=128|Ke>>6&63}m[b++>>>0]=128|63&Ke}}return m[b>>>0]=0,b-L},ea=(a,m,b)=>Jh(a,r(),m,b);function ef(a,m){if(C)return Qr(5,1,a,m)}function tf(a,m,b){if(C)return Qr(6,1,a,m,b)}function rf(a,m,b){return C?Qr(7,1,a,m,b):0}function nf(a,m){if(C)return Qr(8,1,a,m)}function sf(a,m,b){if(C)return Qr(9,1,a,m,b)}function of(a,m,b,S){if(C)return Qr(10,1,a,m,b,S)}function af(a,m,b,S){if(C)return Qr(11,1,a,m,b,S)}function lf(a,m,b,S){if(C)return Qr(12,1,a,m,b,S)}function uf(a){if(C)return Qr(13,1,a)}function df(a,m){if(C)return Qr(14,1,a,m)}function cf(a,m,b){if(C)return Qr(15,1,a,m,b)}var pf,Zi,Rm=()=>{Jo("")},ai=a=>{for(var m="";r()[a>>>0];)m+=pf[r()[a++>>>0]];return m},_p={},gp={};function xi(a,m,b={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(S,L,ge={}){var Ke=L.name;if(!S)throw new Zi(`type "${Ke}" must have a positive integer typeid pointer`);if(gp.hasOwnProperty(S)){if(ge.Sb)return;throw new Zi(`Cannot register type '${Ke}' twice`)}gp[S]=L,_p.hasOwnProperty(S)&&(L=_p[S],delete _p[S],L.forEach(dt=>dt()))}(a,m,b)}var hf=(a,m,b)=>{switch(m){case 1:return b?S=>t()[S>>>0]:S=>r()[S>>>0];case 2:return b?S=>n()[S>>>1>>>0]:S=>i()[S>>>1>>>0];case 4:return b?S=>s()[S>>>2>>>0]:S=>o()[S>>>2>>>0];case 8:return b?S=>Wr[S>>>3]:S=>Gn[S>>>3];default:throw new TypeError(`invalid integer width (${m}): ${a}`)}};function Nm(a,m,b){b>>>=0,xi(a>>>=0,{name:m=ai(m>>>0),fromWireType:S=>S,toWireType:function(S,L){if(typeof L!="bigint"&&typeof L!="number")throw L=L===null?"null":(S=typeof L)=="object"||S==="array"||S==="function"?L.toString():""+L,new TypeError(`Cannot convert "${L}" to ${this.name}`);return typeof L=="number"&&(L=BigInt(L)),L},argPackAdvance:Ji,readValueFromPointer:hf(m,b,m.indexOf("u")==-1),Db:null})}var Ji=8;function jm(a,m,b,S){xi(a>>>=0,{name:m=ai(m>>>0),fromWireType:function(L){return!!L},toWireType:function(L,ge){return ge?b:S},argPackAdvance:Ji,readValueFromPointer:function(L){return this.fromWireType(r()[L>>>0])},Db:null})}var wp=[],Ti=[];function yp(a){9<(a>>>=0)&&--Ti[a+1]==0&&(Ti[a]=void 0,wp.push(a))}var qn=a=>{if(!a)throw new Zi("Cannot use deleted val. handle = "+a);return Ti[a]},Hn=a=>{switch(a){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=wp.pop()||Ti.length;return Ti[m]=a,Ti[m+1]=1,m}};function bp(a){return this.fromWireType(o()[a>>>2>>>0])}var Um={name:"emscripten::val",fromWireType:a=>{var m=qn(a);return yp(a),m},toWireType:(a,m)=>Hn(m),argPackAdvance:Ji,readValueFromPointer:bp,Db:null};function Vm(a){return xi(a>>>0,Um)}var Wm=(a,m)=>{switch(m){case 4:return function(b){return this.fromWireType(u()[b>>>2>>>0])};case 8:return function(b){return this.fromWireType(c()[b>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${a}`)}};function Gm(a,m,b){b>>>=0,xi(a>>>=0,{name:m=ai(m>>>0),fromWireType:S=>S,toWireType:(S,L)=>L,argPackAdvance:Ji,readValueFromPointer:Wm(m,b),Db:null})}function qm(a,m,b,S,L){if(a>>>=0,b>>>=0,m=ai(m>>>0),L===-1&&(L=4294967295),L=dt=>dt,S===0){var ge=32-8*b;L=dt=>dt<<ge>>>ge}var Ke=m.includes("unsigned")?function(dt,zt){return zt>>>0}:function(dt,zt){return zt};xi(a,{name:m,fromWireType:L,toWireType:Ke,argPackAdvance:Ji,readValueFromPointer:hf(m,b,S!==0),Db:null})}function Hm(a,m,b){function S(ge){var Ke=o()[ge>>>2>>>0];return ge=o()[ge+4>>>2>>>0],new L(t().buffer,ge,Ke)}var L=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];xi(a>>>=0,{name:b=ai(b>>>0),fromWireType:S,argPackAdvance:Ji,readValueFromPointer:S},{Sb:!0})}function Km(a,m){a>>>=0;var b=(m=ai(m>>>0))==="std::string";xi(a,{name:m,fromWireType:function(S){var L=o()[S>>>2>>>0],ge=S+4;if(b)for(var Ke=ge,dt=0;dt<=L;++dt){var zt=ge+dt;if(dt==L||r()[zt>>>0]==0){if(Ke=gn(Ke,zt-Ke),Rt===void 0)var Rt=Ke;else Rt+="\0",Rt+=Ke;Ke=zt+1}}else{for(Rt=Array(L),dt=0;dt<L;++dt)Rt[dt]=String.fromCharCode(r()[ge+dt>>>0]);Rt=Rt.join("")}return ui(S),Rt},toWireType:function(S,L){L instanceof ArrayBuffer&&(L=new Uint8Array(L));var ge=typeof L=="string";if(!(ge||L instanceof Uint8Array||L instanceof Uint8ClampedArray||L instanceof Int8Array))throw new Zi("Cannot pass non-string to std::string");var Ke=b&&ge?mp(L):L.length,dt=Fc(4+Ke+1),zt=dt+4;if(o()[dt>>>2>>>0]=Ke,b&&ge)ea(L,zt,Ke+1);else if(ge)for(ge=0;ge<Ke;++ge){var Rt=L.charCodeAt(ge);if(255<Rt)throw ui(zt),new Zi("String has UTF-16 code units that do not fit in 8 bits");r()[zt+ge>>>0]=Rt}else for(ge=0;ge<Ke;++ge)r()[zt+ge>>>0]=L[ge];return S!==null&&S.push(ui,dt),dt},argPackAdvance:Ji,readValueFromPointer:bp,Db(S){ui(S)}})}var ff=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Xm=(a,m)=>{for(var b=a>>1,S=b+m/2;!(b>=S)&&i()[b>>>0];)++b;if(32<(b<<=1)-a&&ff)return ff.decode(r().slice(a,b));for(b="",S=0;!(S>=m/2);++S){var L=n()[a+2*S>>>1>>>0];if(L==0)break;b+=String.fromCharCode(L)}return b},Qm=(a,m,b)=>{if(b??=2147483647,2>b)return 0;var S=m;b=(b-=2)<2*a.length?b/2:a.length;for(var L=0;L<b;++L){var ge=a.charCodeAt(L);n()[m>>>1>>>0]=ge,m+=2}return n()[m>>>1>>>0]=0,m-S},Ym=a=>2*a.length,Zm=(a,m)=>{for(var b=0,S="";!(b>=m/4);){var L=s()[a+4*b>>>2>>>0];if(L==0)break;++b,65536<=L?(L-=65536,S+=String.fromCharCode(55296|L>>10,56320|1023&L)):S+=String.fromCharCode(L)}return S},Jm=(a,m,b)=>{if(m>>>=0,b??=2147483647,4>b)return 0;var S=m;b=S+b-4;for(var L=0;L<a.length;++L){var ge=a.charCodeAt(L);if(55296<=ge&&57343>=ge&&(ge=65536+((1023&ge)<<10)|1023&a.charCodeAt(++L)),s()[m>>>2>>>0]=ge,(m+=4)+4>b)break}return s()[m>>>2>>>0]=0,m-S},e_=a=>{for(var m=0,b=0;b<a.length;++b){var S=a.charCodeAt(b);55296<=S&&57343>=S&&++b,m+=4}return m};function t_(a,m,b){if(a>>>=0,m>>>=0,b=ai(b>>>=0),m===2)var S=Xm,L=Qm,ge=Ym,Ke=dt=>i()[dt>>>1>>>0];else m===4&&(S=Zm,L=Jm,ge=e_,Ke=dt=>o()[dt>>>2>>>0]);xi(a,{name:b,fromWireType:dt=>{for(var zt,Rt=o()[dt>>>2>>>0],tr=dt+4,Ar=0;Ar<=Rt;++Ar){var Dr=dt+4+Ar*m;Ar!=Rt&&Ke(Dr)!=0||(tr=S(tr,Dr-tr),zt===void 0?zt=tr:(zt+="\0",zt+=tr),tr=Dr+m)}return ui(dt),zt},toWireType:(dt,zt)=>{if(typeof zt!="string")throw new Zi(`Cannot pass non-string to C++ string type ${b}`);var Rt=ge(zt),tr=Fc(4+Rt+m);return o()[tr>>>2>>>0]=Rt/m,L(zt,tr+4,Rt+m),dt!==null&&dt.push(ui,tr),tr},argPackAdvance:Ji,readValueFromPointer:bp,Db(dt){ui(dt)}})}function r_(a,m){xi(a>>>=0,{Tb:!0,name:m=ai(m>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var n_=()=>1;function i_(a){Sp(a>>>0,!k,1,!A,131072,!1),Wh()}var mf=a=>{if(!Cn)try{if(a(),!(0<bs))try{C?Oc(Mr):fp(Mr)}catch(m){m instanceof cp||m=="unwind"||We(1,m)}}catch(m){m instanceof cp||m=="unwind"||We(1,m)}};function Mp(a){a>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(s(),a>>>2,a).value.then(Ec),a+=128,Atomics.store(s(),a>>>2,1))}var Ec=()=>{var a=ra();a&&(Mp(a),mf(Gf))};function s_(a,m){(a>>>=0)==m>>>0?setTimeout(Ec):C?postMessage({targetThread:a,cmd:"checkMailbox"}):(a=oi[a])&&a.postMessage({cmd:"checkMailbox"})}var vp=[];function o_(a,m,b,S,L){for(m>>>=0,S/=2,vp.length=S,b=L>>>0>>>3,L=0;L<S;L++)vp[L]=Wr[b+2*L]?Wr[b+2*L+1]:c()[b+2*L+1>>>0];return(m?dp[m]:X_[a])(...vp)}function a_(a){a>>>=0,C?postMessage({cmd:"cleanupThread",thread:a}):Vh(oi[a])}function l_(a){}var xp=(a,m)=>{var b=gp[a];if(b===void 0)throw a=jf(a),b=ai(a),ui(a),new Zi(`${m} has unknown type ${b}`);return b},_f=(a,m,b)=>{var S=[];return a=a.toWireType(S,b),S.length&&(o()[m>>>2>>>0]=Hn(S)),a};function u_(a,m,b){return m>>>=0,b>>>=0,a=qn(a>>>0),m=xp(m,"emval::as"),_f(m,b,a)}var Cc=a=>{try{a()}catch(m){Jo(m)}},es=0,li=null,gf=0,$c=[],wf={},yf={},d_=0,Tp=null,c_=[];function bf(a){return function(m){if(!Cn){if(es===0){var b=!1,S=!1;m((L=0)=>{if(!Cn&&(gf=L,b=!0,S)){es=2,Cc(()=>Qf(li)),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.resume(),L=!1;try{var ge=function(){var zt=s()[li+8>>>2>>>0];return zt=Zt[yf[zt]],--bs,zt()}()}catch(zt){ge=zt,L=!0}var Ke=!1;if(!li){var dt=Tp;dt&&(Tp=null,(L?dt.reject:dt.resolve)(ge),Ke=!0)}if(L&&!Ke)throw ge}}),S=!0,b||(es=1,li=function(){var L=Fc(65548),ge=L+12;o()[L>>>2>>>0]=ge,o()[L+4>>>2>>>0]=ge+65536,ge=$c[0];var Ke=wf[ge];return Ke===void 0&&(Ke=d_++,wf[ge]=Ke,yf[Ke]=ge),ge=Ke,s()[L+8>>>2>>>0]=ge,L}(),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.pause(),Cc(()=>Kf(li)))}else es===2?(es=0,Cc(Yf),ui(li),li=null,c_.forEach(mf)):Jo(`invalid state: ${es}`);return gf}}(m=>{a().then(m)})}function p_(a){return a>>>=0,bf(()=>(a=qn(a)).then(Hn))}var Sc=[];function h_(a,m,b,S){return b>>>=0,S>>>=0,(a=Sc[a>>>0])(null,m=qn(m>>>0),b,S)}var f_={},kc=a=>{var m=f_[a];return m===void 0?ai(a):m};function m_(a,m,b,S,L){return b>>>=0,S>>>=0,L>>>=0,(a=Sc[a>>>0])(m=qn(m>>>0),m[b=kc(b)],S,L)}var Mf=()=>typeof globalThis=="object"?globalThis:Function("return this")();function __(a){return(a>>>=0)==0?Hn(Mf()):(a=kc(a),Hn(Mf()[a]))}var g_=a=>{var m=Sc.length;return Sc.push(a),m},w_=(a,m)=>{for(var b=Array(a),S=0;S<a;++S)b[S]=xp(o()[m+4*S>>>2>>>0],"parameter "+S);return b},vf=(a,m)=>Object.defineProperty(m,"name",{value:a});function y_(a,m,b){var S=(m=w_(a,m>>>0)).shift();a--;var L=`return function (obj, func, destructorsRef, args) {
`,ge=0,Ke=[];b===0&&Ke.push("obj");for(var dt=["retType"],zt=[S],Rt=0;Rt<a;++Rt)Ke.push("arg"+Rt),dt.push("argType"+Rt),zt.push(m[Rt]),L+=`  var arg${Rt} = argType${Rt}.readValueFromPointer(args${ge?"+"+ge:""});
`,ge+=m[Rt].argPackAdvance;return L+=`  var rv = ${b===1?"new func":"func.call"}(${Ke.join(", ")});
`,S.Tb||(dt.push("emval_returnValue"),zt.push(_f),L+=`  return emval_returnValue(retType, destructorsRef, rv);
`),dt.push(L+`};
`),a=function(tr){var Ar=Function;if(!(Ar instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Ar} which is not a function`);var Dr=vf(Ar.name||"unknownFunctionName",function(){});return Dr.prototype=Ar.prototype,Dr=new Dr,(tr=Ar.apply(Dr,tr))instanceof Object?tr:Dr}(dt)(...zt),b=`methodCaller<(${m.map(tr=>tr.name).join(", ")}) => ${S.name}>`,g_(vf(b,a))}function b_(a){return a=kc(a>>>0),Hn(l[a])}function M_(a,m){return m>>>=0,a=qn(a>>>0),m=qn(m),Hn(a[m])}function v_(a){9<(a>>>=0)&&(Ti[a+1]+=1)}function x_(){return Hn([])}function T_(a){a=qn(a>>>0);for(var m=Array(a.length),b=0;b<a.length;b++)m[b]=a[b];return Hn(m)}function E_(a){return Hn(kc(a>>>0))}function C_(){return Hn({})}function $_(a){for(var m=qn(a>>>=0);m.length;){var b=m.pop();m.pop()(b)}yp(a)}function S_(a,m,b){m>>>=0,b>>>=0,a=qn(a>>>0),m=qn(m),b=qn(b),a[m]=b}function k_(a,m){return m>>>=0,a=(a=xp(a>>>0,"_emval_take_value")).readValueFromPointer(m),Hn(a)}function P_(a,m){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),m>>>=0,a=new Date(1e3*a),s()[m>>>2>>>0]=a.getUTCSeconds(),s()[m+4>>>2>>>0]=a.getUTCMinutes(),s()[m+8>>>2>>>0]=a.getUTCHours(),s()[m+12>>>2>>>0]=a.getUTCDate(),s()[m+16>>>2>>>0]=a.getUTCMonth(),s()[m+20>>>2>>>0]=a.getUTCFullYear()-1900,s()[m+24>>>2>>>0]=a.getUTCDay(),a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,s()[m+28>>>2>>>0]=a}var ta=a=>a%4==0&&(a%100!=0||a%400==0),xf=[0,31,60,91,121,152,182,213,244,274,305,335],Tf=[0,31,59,90,120,151,181,212,243,273,304,334];function A_(a,m){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),m>>>=0,a=new Date(1e3*a),s()[m>>>2>>>0]=a.getSeconds(),s()[m+4>>>2>>>0]=a.getMinutes(),s()[m+8>>>2>>>0]=a.getHours(),s()[m+12>>>2>>>0]=a.getDate(),s()[m+16>>>2>>>0]=a.getMonth(),s()[m+20>>>2>>>0]=a.getFullYear()-1900,s()[m+24>>>2>>>0]=a.getDay();var b=(ta(a.getFullYear())?xf:Tf)[a.getMonth()]+a.getDate()-1|0;s()[m+28>>>2>>>0]=b,s()[m+36>>>2>>>0]=-60*a.getTimezoneOffset(),b=new Date(a.getFullYear(),6,1).getTimezoneOffset();var S=new Date(a.getFullYear(),0,1).getTimezoneOffset();a=0|(b!=S&&a.getTimezoneOffset()==Math.min(S,b)),s()[m+32>>>2>>>0]=a}function I_(a){a>>>=0;var m=new Date(s()[a+20>>>2>>>0]+1900,s()[a+16>>>2>>>0],s()[a+12>>>2>>>0],s()[a+8>>>2>>>0],s()[a+4>>>2>>>0],s()[a>>>2>>>0],0),b=s()[a+32>>>2>>>0],S=m.getTimezoneOffset(),L=new Date(m.getFullYear(),6,1).getTimezoneOffset(),ge=new Date(m.getFullYear(),0,1).getTimezoneOffset(),Ke=Math.min(ge,L);return 0>b?s()[a+32>>>2>>>0]=+(L!=ge&&Ke==S):0<b!=(Ke==S)&&(L=Math.max(ge,L),m.setTime(m.getTime()+6e4*((0<b?Ke:L)-S))),s()[a+24>>>2>>>0]=m.getDay(),b=(ta(m.getFullYear())?xf:Tf)[m.getMonth()]+m.getDate()-1|0,s()[a+28>>>2>>>0]=b,s()[a>>>2>>>0]=m.getSeconds(),s()[a+4>>>2>>>0]=m.getMinutes(),s()[a+8>>>2>>>0]=m.getHours(),s()[a+12>>>2>>>0]=m.getDate(),s()[a+16>>>2>>>0]=m.getMonth(),s()[a+20>>>2>>>0]=m.getYear(),a=m.getTime(),BigInt(isNaN(a)?-1:a/1e3)}function Ef(a,m,b,S,L,ge,Ke){return C?Qr(16,1,a,m,b,S,L,ge,Ke):-52}function Cf(a,m,b,S,L,ge){if(C)return Qr(17,1,a,m,b,S,L,ge)}function F_(a,m,b,S){a>>>=0,m>>>=0,b>>>=0,S>>>=0;var L=new Date().getFullYear(),ge=new Date(L,0,1),Ke=new Date(L,6,1);L=ge.getTimezoneOffset();var dt=Ke.getTimezoneOffset(),zt=Math.max(L,dt);o()[a>>>2>>>0]=60*zt,s()[m>>>2>>>0]=+(L!=dt),ge=(a=Rt=>Rt.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(ge),Ke=a(Ke),dt<L?(ea(ge,b,17),ea(Ke,S,17)):(ea(ge,S,17),ea(Ke,b,17))}var Ep=[],$f=(a,m)=>{Ep.length=0;for(var b;b=r()[a++>>>0];){var S=b!=105;m+=(S&=b!=112)&&m%8?4:0,Ep.push(b==112?o()[m>>>2>>>0]:b==106?Wr[m>>>3]:b==105?s()[m>>>2>>>0]:c()[m>>>3>>>0]),m+=S?8:4}return Ep};function O_(a,m,b){return a>>>=0,m=$f(m>>>0,b>>>0),dp[a](...m)}function B_(a,m,b){return a>>>=0,m=$f(m>>>0,b>>>0),dp[a](...m)}var z_=()=>{},D_=()=>Date.now();function L_(a,m){return Qt(gn(a>>>0,m>>>0))}var Sf,R_=()=>{throw bs+=1,"unwind"};function N_(){return 4294901760}Sf=()=>performance.timeOrigin+performance.now();var j_=()=>navigator.hardwareConcurrency;function U_(){return Jo("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function V_(a){a>>>=0;var m=r().length;if(a<=m||4294901760<a)return!1;for(var b=1;4>=b;b*=2){var S=m*(1+.2/b);S=Math.min(S,a+100663296);var L=Math;S=Math.max(a,S);e:{L=(L.min.call(L,4294901760,S+(65536-S%65536)%65536)-ir.buffer.byteLength+65535)/65536;try{ir.grow(L),vn();var ge=1;break e}catch{}ge=void 0}if(ge)return!0}return!1}var Pc=()=>(Jo("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),_d={},kf=a=>{a.forEach(m=>{Pc()})};function W_(){var a=Error().stack.toString().split(`
`);return a[0]=="Error"&&a.shift(),kf(a),_d.Pb=Pc(),_d.ec=a,_d.Pb}function G_(a,m,b){if(a>>>=0,m>>>=0,_d.Pb==a)var S=_d.ec;else(S=Error().stack.toString().split(`
`))[0]=="Error"&&S.shift(),kf(S);for(var L=3;S[L]&&Pc()!=a;)++L;for(a=0;a<b&&S[a+L];++a)s()[m+4*a>>>2>>>0]=Pc();return a}var Cp,$p={},Pf=()=>{if(!Cp){var a,m={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:be};for(a in $p)$p[a]===void 0?delete m[a]:m[a]=$p[a];var b=[];for(a in m)b.push(`${a}=${m[a]}`);Cp=b}return Cp};function Af(a,m){if(C)return Qr(18,1,a,m);a>>>=0,m>>>=0;var b=0;return Pf().forEach((S,L)=>{var ge=m+b;for(L=o()[a+4*L>>>2>>>0]=ge,ge=0;ge<S.length;++ge)t()[L++>>>0]=S.charCodeAt(ge);t()[L>>>0]=0,b+=S.length+1}),0}function If(a,m){if(C)return Qr(19,1,a,m);a>>>=0,m>>>=0;var b=Pf();o()[a>>>2>>>0]=b.length;var S=0;return b.forEach(L=>S+=L.length+1),o()[m>>>2>>>0]=S,0}function Ff(a){return C?Qr(20,1,a):52}function Of(a,m,b,S){return C?Qr(21,1,a,m,b,S):52}function Bf(a,m,b,S){return C?Qr(22,1,a,m,b,S):70}var q_=[null,[],[]];function zf(a,m,b,S){if(C)return Qr(23,1,a,m,b,S);m>>>=0,b>>>=0,S>>>=0;for(var L=0,ge=0;ge<b;ge++){var Ke=o()[m>>>2>>>0],dt=o()[m+4>>>2>>>0];m+=8;for(var zt=0;zt<dt;zt++){var Rt=r()[Ke+zt>>>0],tr=q_[a];Rt===0||Rt===10?((a===1?sr:Qt)(Qh(tr,0)),tr.length=0):tr.push(Rt)}L+=dt}return o()[S>>>2>>>0]=L,0}var Df=[31,29,31,30,31,30,31,31,30,31,30,31],Lf=[31,28,31,30,31,30,31,31,30,31,30,31],H_=(a,m)=>{t().set(a,m>>>0)};function Rf(a,m,b,S){function L(Ve,Sr,en){for(Ve=typeof Ve=="number"?Ve.toString():Ve||"";Ve.length<Sr;)Ve=en[0]+Ve;return Ve}function ge(Ve,Sr){return L(Ve,Sr,"0")}function Ke(Ve,Sr){function en(Jf){return 0>Jf?-1:0<Jf?1:0}var vs;return(vs=en(Ve.getFullYear()-Sr.getFullYear()))===0&&(vs=en(Ve.getMonth()-Sr.getMonth()))===0&&(vs=en(Ve.getDate()-Sr.getDate())),vs}function dt(Ve){switch(Ve.getDay()){case 0:return new Date(Ve.getFullYear()-1,11,29);case 1:return Ve;case 2:return new Date(Ve.getFullYear(),0,3);case 3:return new Date(Ve.getFullYear(),0,2);case 4:return new Date(Ve.getFullYear(),0,1);case 5:return new Date(Ve.getFullYear()-1,11,31);case 6:return new Date(Ve.getFullYear()-1,11,30)}}function zt(Ve){var Sr=Ve.Bb;for(Ve=new Date(new Date(Ve.Cb+1900,0,1).getTime());0<Sr;){var en=Ve.getMonth(),vs=(ta(Ve.getFullYear())?Df:Lf)[en];if(!(Sr>vs-Ve.getDate())){Ve.setDate(Ve.getDate()+Sr);break}Sr-=vs-Ve.getDate()+1,Ve.setDate(1),11>en?Ve.setMonth(en+1):(Ve.setMonth(0),Ve.setFullYear(Ve.getFullYear()+1))}return en=new Date(Ve.getFullYear()+1,0,4),Sr=dt(new Date(Ve.getFullYear(),0,4)),en=dt(en),0>=Ke(Sr,Ve)?0>=Ke(en,Ve)?Ve.getFullYear()+1:Ve.getFullYear():Ve.getFullYear()-1}a>>>=0,m>>>=0,b>>>=0,S>>>=0;var Rt=o()[S+40>>>2>>>0];for(var tr in S={kc:s()[S>>>2>>>0],jc:s()[S+4>>>2>>>0],Hb:s()[S+8>>>2>>>0],Lb:s()[S+12>>>2>>>0],Ib:s()[S+16>>>2>>>0],Cb:s()[S+20>>>2>>>0],ub:s()[S+24>>>2>>>0],Bb:s()[S+28>>>2>>>0],sc:s()[S+32>>>2>>>0],ic:s()[S+36>>>2>>>0],lc:Rt?gn(Rt):""},b=gn(b),Rt={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})b=b.replace(new RegExp(tr,"g"),Rt[tr]);var Ar="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Dr="January February March April May June July August September October November December".split(" ");for(tr in Rt={"%a":Ve=>Ar[Ve.ub].substring(0,3),"%A":Ve=>Ar[Ve.ub],"%b":Ve=>Dr[Ve.Ib].substring(0,3),"%B":Ve=>Dr[Ve.Ib],"%C":Ve=>ge((Ve.Cb+1900)/100|0,2),"%d":Ve=>ge(Ve.Lb,2),"%e":Ve=>L(Ve.Lb,2," "),"%g":Ve=>zt(Ve).toString().substring(2),"%G":zt,"%H":Ve=>ge(Ve.Hb,2),"%I":Ve=>((Ve=Ve.Hb)==0?Ve=12:12<Ve&&(Ve-=12),ge(Ve,2)),"%j":Ve=>{for(var Sr=0,en=0;en<=Ve.Ib-1;Sr+=(ta(Ve.Cb+1900)?Df:Lf)[en++]);return ge(Ve.Lb+Sr,3)},"%m":Ve=>ge(Ve.Ib+1,2),"%M":Ve=>ge(Ve.jc,2),"%n":()=>`
`,"%p":Ve=>0<=Ve.Hb&&12>Ve.Hb?"AM":"PM","%S":Ve=>ge(Ve.kc,2),"%t":()=>"	","%u":Ve=>Ve.ub||7,"%U":Ve=>ge(Math.floor((Ve.Bb+7-Ve.ub)/7),2),"%V":Ve=>{var Sr=Math.floor((Ve.Bb+7-(Ve.ub+6)%7)/7);if(2>=(Ve.ub+371-Ve.Bb-2)%7&&Sr++,Sr)Sr==53&&((en=(Ve.ub+371-Ve.Bb)%7)==4||en==3&&ta(Ve.Cb)||(Sr=1));else{Sr=52;var en=(Ve.ub+7-Ve.Bb-1)%7;(en==4||en==5&&ta(Ve.Cb%400-1))&&Sr++}return ge(Sr,2)},"%w":Ve=>Ve.ub,"%W":Ve=>ge(Math.floor((Ve.Bb+7-(Ve.ub+6)%7)/7),2),"%y":Ve=>(Ve.Cb+1900).toString().substring(2),"%Y":Ve=>Ve.Cb+1900,"%z":Ve=>{var Sr=0<=(Ve=Ve.ic);return Ve=Math.abs(Ve)/60,(Sr?"+":"-")+("0000"+(Ve/60*100+Ve%60)).slice(-4)},"%Z":Ve=>Ve.lc,"%%":()=>"%"},b=b.replace(/%%/g,"\0\0"),Rt)b.includes(tr)&&(b=b.replace(new RegExp(tr,"g"),Rt[tr](S)));return tr=function(Ve){var Sr=Array(mp(Ve)+1);return Jh(Ve,Sr,0,Sr.length),Sr}(b=b.replace(/\0\0/g,"%")),tr.length>m?0:(H_(tr,a),tr.length-1)}function K_(a,m,b,S){return Rf(a>>>0,m>>>0,b>>>0,S>>>0)}C||function(){for(var a=l.numThreads-1;a--;)qh();fn.unshift(()=>{Qi++,function(m){C?m():Promise.all(Yi.map(Gh)).then(m)}(()=>Oh())})}();for(var Nf=Array(256),Ac=0;256>Ac;++Ac)Nf[Ac]=String.fromCharCode(Ac);pf=Nf,Zi=l.BindingError=class extends Error{constructor(a){super(a),this.name="BindingError"}},l.InternalError=class extends Error{constructor(a){super(a),this.name="InternalError"}},Ti.push(0,1,void 0,1,null,1,!0,1,!1,1),l.count_emval_handles=()=>Ti.length/2-5-wp.length;var X_=[hp,jh,Hh,Yh,Zh,ef,tf,rf,nf,sf,of,af,lf,uf,df,cf,Ef,Cf,Af,If,Ff,Of,Bf,zf],Zt=function(){function a(b,S){return Zt=b.exports,Zt=function(){var L=Zt,ge={};for(let[Ke,dt]of Object.entries(L))ge[Ke]=typeof dt=="function"?(...zt)=>{$c.push(Ke);try{return dt(...zt)}finally{Cn||($c.pop(),li&&es===1&&$c.length===0&&(es=0,bs+=1,Cc(Xf),typeof Fibers<"u"&&Fibers.tc()))}}:dt;return ge}(),Zt=function(){var L=Zt,ge=dt=>zt=>dt(zt)>>>0,Ke=dt=>()=>dt()>>>0;return(L=Object.assign({},L)).Ca=ge(L.Ca),L.fb=Ke(L.fb),L.hb=ge(L.hb),L.emscripten_main_runtime_thread_id=Ke(L.emscripten_main_runtime_thread_id),L.sb=ge(L.sb),L.tb=Ke(L.tb),L}(),Uh.push(Zt.ib),mn.unshift(Zt.Ba),Ht=S,Oh(),Zt}var m=Rh();if(Qi++,l.instantiateWasm)try{return l.instantiateWasm(m,a)}catch(b){Qt(`Module.instantiateWasm callback failed with error: ${b}`),y(b)}return up||=l.locateFile?Bh("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":l.locateFile?l.locateFile("ort-wasm-simd-threaded.jsep.wasm",ze):ze+"ort-wasm-simd-threaded.jsep.wasm":new URL(P("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),P.b).href,function(b,S){var L=up;return wt||typeof WebAssembly.instantiateStreaming!="function"||Bh(L)||zh(L)||typeof fetch!="function"?Lh(L,b,S):fetch(L,{credentials:"same-origin"}).then(ge=>WebAssembly.instantiateStreaming(ge,b).then(S,function(Ke){return Qt(`wasm streaming compile failed: ${Ke}`),Qt("falling back to ArrayBuffer instantiation"),Lh(L,b,S)}))}(m,function(b){a(b.instance,b.module)}).catch(y),{}}(),jf=a=>(jf=Zt.Ca)(a),Uf=()=>(Uf=Zt.Da)();l._OrtInit=(a,m)=>(l._OrtInit=Zt.Ea)(a,m),l._OrtGetLastError=(a,m)=>(l._OrtGetLastError=Zt.Fa)(a,m),l._OrtCreateSessionOptions=(a,m,b,S,L,ge,Ke,dt,zt,Rt)=>(l._OrtCreateSessionOptions=Zt.Ga)(a,m,b,S,L,ge,Ke,dt,zt,Rt),l._OrtAppendExecutionProvider=(a,m)=>(l._OrtAppendExecutionProvider=Zt.Ha)(a,m),l._OrtAddFreeDimensionOverride=(a,m,b)=>(l._OrtAddFreeDimensionOverride=Zt.Ia)(a,m,b),l._OrtAddSessionConfigEntry=(a,m,b)=>(l._OrtAddSessionConfigEntry=Zt.Ja)(a,m,b),l._OrtReleaseSessionOptions=a=>(l._OrtReleaseSessionOptions=Zt.Ka)(a),l._OrtCreateSession=(a,m,b)=>(l._OrtCreateSession=Zt.La)(a,m,b),l._OrtReleaseSession=a=>(l._OrtReleaseSession=Zt.Ma)(a),l._OrtGetInputOutputCount=(a,m,b)=>(l._OrtGetInputOutputCount=Zt.Na)(a,m,b),l._OrtGetInputName=(a,m)=>(l._OrtGetInputName=Zt.Oa)(a,m),l._OrtGetOutputName=(a,m)=>(l._OrtGetOutputName=Zt.Pa)(a,m),l._OrtFree=a=>(l._OrtFree=Zt.Qa)(a),l._OrtCreateTensor=(a,m,b,S,L,ge)=>(l._OrtCreateTensor=Zt.Ra)(a,m,b,S,L,ge),l._OrtGetTensorData=(a,m,b,S,L)=>(l._OrtGetTensorData=Zt.Sa)(a,m,b,S,L),l._OrtReleaseTensor=a=>(l._OrtReleaseTensor=Zt.Ta)(a),l._OrtCreateRunOptions=(a,m,b,S)=>(l._OrtCreateRunOptions=Zt.Ua)(a,m,b,S),l._OrtAddRunConfigEntry=(a,m,b)=>(l._OrtAddRunConfigEntry=Zt.Va)(a,m,b),l._OrtReleaseRunOptions=a=>(l._OrtReleaseRunOptions=Zt.Wa)(a),l._OrtCreateBinding=a=>(l._OrtCreateBinding=Zt.Xa)(a),l._OrtBindInput=(a,m,b)=>(l._OrtBindInput=Zt.Ya)(a,m,b),l._OrtBindOutput=(a,m,b,S)=>(l._OrtBindOutput=Zt.Za)(a,m,b,S),l._OrtClearBoundOutputs=a=>(l._OrtClearBoundOutputs=Zt._a)(a),l._OrtReleaseBinding=a=>(l._OrtReleaseBinding=Zt.$a)(a),l._OrtRunWithBinding=(a,m,b,S,L)=>(l._OrtRunWithBinding=Zt.ab)(a,m,b,S,L),l._OrtRun=(a,m,b,S,L,ge,Ke,dt)=>(l._OrtRun=Zt.bb)(a,m,b,S,L,ge,Ke,dt),l._OrtEndProfiling=a=>(l._OrtEndProfiling=Zt.cb)(a),l._JsepOutput=(a,m,b)=>(l._JsepOutput=Zt.db)(a,m,b),l._JsepGetNodeName=a=>(l._JsepGetNodeName=Zt.eb)(a);var Ic,ra=()=>(ra=Zt.fb)(),ui=l._free=a=>(ui=l._free=Zt.gb)(a),Fc=l._malloc=a=>(Fc=l._malloc=Zt.hb)(a),Sp=(a,m,b,S,L,ge)=>(Sp=Zt.kb)(a,m,b,S,L,ge),Vf=()=>(Vf=Zt.lb)(),Wf=(a,m,b,S,L)=>(Wf=Zt.mb)(a,m,b,S,L),kp=a=>(kp=Zt.nb)(a),Oc=a=>(Oc=Zt.ob)(a),Gf=()=>(Gf=Zt.pb)(),qf=(a,m)=>(qf=Zt.qb)(a,m),Bc=a=>(Bc=Zt.rb)(a),Pp=a=>(Pp=Zt.sb)(a),Ap=()=>(Ap=Zt.tb)(),Hf=l.dynCall_ii=(a,m)=>(Hf=l.dynCall_ii=Zt.vb)(a,m),Kf=a=>(Kf=Zt.wb)(a),Xf=()=>(Xf=Zt.xb)(),Qf=a=>(Qf=Zt.yb)(a),Yf=()=>(Yf=Zt.zb)();function Zf(){0<Qi||(C?(h(l),C||Tc(mn),startWorker(l)):(Tc(fn),0<Qi||Ic||(Ic=!0,l.calledRun=!0,Cn||(C||Tc(mn),h(l),C||Tc(Xi)))))}return l.___start_em_js=881578,l.___stop_em_js=881800,l.stackSave=()=>Ap(),l.stackRestore=a=>Bc(a),l.stackAlloc=a=>Pp(a),l.UTF8ToString=gn,l.stringToUTF8=ea,l.lengthBytesUTF8=mp,ys=function a(){Ic||Zf(),Ic||(ys=a)},Zf(),x}),Le=ke,globalThis.self?.name==="em-pthread"&&ke()}),je,at,vt,_t,kt,M,d,f,O=Q(()=>{Ir(),je=import.meta.url??(typeof document<"u"?document.currentScript?.src:typeof self<"u"?self.location?.href:void 0),at=typeof location>"u"?void 0:location.origin,vt=(e,t)=>{try{let r=t??je;return(r?new URL(e,r):new URL(e)).origin===at}catch{return!1}},_t=async e=>{let t=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(t)},kt=(wn(),q(Er)).default,M=async()=>{if(!je)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(vt(je))return[void 0,kt()];let e=await _t(je);return[e,kt(e)]},d=(Oe(),q(ht)).default,f=async(e,t,r)=>[void 0,d]}),D,G,fe,Mt,Nt,qt,nr,jt,Br=Q(()=>{O(),G=!1,fe=!1,Mt=!1,Nt=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},qt=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},nr=async e=>{if(G)return Promise.resolve();if(fe)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Mt)throw new Error("previous call to 'initializeWebAssembly()' failed.");fe=!0;let t=e.initTimeout,r=e.numThreads;if(!qt())throw new Error("WebAssembly SIMD is not supported in the current environment.");let n=Nt();r>1&&!n&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=r=1);let i=e.wasmPaths,s=typeof i=="string"?i:void 0,o=i?.mjs,u=o?.href??o,c=i?.wasm,h=c?.href??c,y=e.wasmBinary,[l,x]=await f(u,s,r>1),A=!1,k=[];if(t>0&&k.push(new Promise(C=>{setTimeout(()=>{A=!0,C()},t)})),k.push(new Promise((C,ee)=>{let J={numThreads:r};y?J.wasmBinary=y:(h||s)&&(J.locateFile=(B,ie)=>h??(s??ie)+B),x(J).then(B=>{fe=!1,G=!0,D=B,C(),l&&URL.revokeObjectURL(l)},B=>{fe=!1,Mt=!0,ee(B)})})),await Promise.race(k),A)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},jt=()=>{if(G&&D)return D;throw new Error("WebAssembly is not initialized yet.")}}),kr,Dn,Rr,hi=Q(()=>{Br(),kr=(e,t)=>{let r=jt(),n=r.lengthBytesUTF8(e)+1,i=r._malloc(n);return r.stringToUTF8(e,i,n),t.push(i),i},Dn=(e,t,r,n)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,s])=>{let o=t?t+i:i;if(typeof s=="object")Dn(s,o+".",r,n);else if(typeof s=="string"||typeof s=="number")n(o,s.toString());else if(typeof s=="boolean")n(o,s?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof s}`)})},Rr=e=>{let t=jt(),r=t.stackSave();try{let n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);let i=t.HEAP32[n/4],s=t.HEAPU32[n/4+1],o=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${o}`)}finally{t.stackRestore(r)}}}),$i,Kn=Q(()=>{Br(),hi(),$i=e=>{let t=jt(),r=0,n=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let s=0;return e?.tag!==void 0&&(s=kr(e.tag,n)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,s),r===0&&Rr("Can't create run options."),e?.extra!==void 0&&Dn(e.extra,"",new WeakSet,(o,u)=>{let c=kr(o,n),h=kr(u,n);t._OrtAddRunConfigEntry(r,c,h)!==0&&Rr(`Can't set a run config entry: ${o} - ${u}.`)}),[r,n]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),n.forEach(o=>t._free(o)),s}}}),Si,ki,Pi,Ai,Ii,ei=Q(()=>{Br(),hi(),Si=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},ki=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Pi=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Ai=(e,t,r)=>{for(let n of t){let i=typeof n=="string"?n:n.name;switch(i){case"webnn":if(i="WEBNN",typeof n!="string"){let o=n?.deviceType;if(o){let u=kr("deviceType",r),c=kr(o,r);jt()._OrtAddSessionConfigEntry(e,u,c)!==0&&Rr(`Can't set a session config entry: 'deviceType' - ${o}.`)}}break;case"webgpu":if(i="JS",typeof n!="string"){let o=n;if(o?.preferredLayout){if(o.preferredLayout!=="NCHW"&&o.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${o.preferredLayout}`);let u=kr("preferredLayout",r),c=kr(o.preferredLayout,r);jt()._OrtAddSessionConfigEntry(e,u,c)!==0&&Rr(`Can't set a session config entry: 'preferredLayout' - ${o.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let s=kr(i,r);jt()._OrtAppendExecutionProvider(e,s)!==0&&Rr(`Can't append execution provider: ${i}.`)}},Ii=e=>{let t=jt(),r=0,n=[],i=e||{};Pi(i);try{let s=Si(i.graphOptimizationLevel??"all"),o=ki(i.executionMode??"sequential"),u=typeof i.logId=="string"?kr(i.logId,n):0,c=i.logSeverityLevel??2;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log serverity level is not valid: ${c}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let y=typeof i.optimizedModelFilePath=="string"?kr(i.optimizedModelFilePath,n):0;if(r=t._OrtCreateSessionOptions(s,!!i.enableCpuMemArena,!!i.enableMemPattern,o,!!i.enableProfiling,0,u,c,h,y),r===0&&Rr("Can't create session options."),i.executionProviders&&Ai(r,i.executionProviders,n),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let l=kr("enableGraphCapture",n),x=kr(i.enableGraphCapture.toString(),n);t._OrtAddSessionConfigEntry(r,l,x)!==0&&Rr(`Can't set a session config entry: 'enableGraphCapture' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[l,x]of Object.entries(i.freeDimensionOverrides)){if(typeof l!="string")throw new Error(`free dimension override name must be a string: ${l}`);if(typeof x!="number"||!Number.isInteger(x)||x<0)throw new Error(`free dimension override value must be a non-negative integer: ${x}`);let A=kr(l,n);t._OrtAddFreeDimensionOverride(r,A,x)!==0&&Rr(`Can't set a free dimension override: ${l} - ${x}.`)}return i.extra!==void 0&&Dn(i.extra,"",new WeakSet,(l,x)=>{let A=kr(l,n),k=kr(x,n);t._OrtAddSessionConfigEntry(r,A,k)!==0&&Rr(`Can't set a session config entry: ${l} - ${x}.`)}),[r,n]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),n.forEach(o=>t._free(o)),s}}}),Xn,$n,Ln,fi,On,mi,_i,gi,er=Q(()=>{Xn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},$n=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},Ln=(e,t)=>{let r=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],n=typeof t=="number"?t:t.reduce((i,s)=>i*s,1);return r>0?Math.ceil(n*r):void 0},fi=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},On=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},mi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",_i=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool",gi=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),ti,Fi=Q(()=>{Ir(),ti=async e=>{if(typeof e=="string"){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),n=r?parseInt(r,10):0;if(n<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),s;try{s=new ArrayBuffer(n)}catch(u){if(u instanceof RangeError){let c=Math.ceil(n/65536);s=new WebAssembly.Memory({initial:c,maximum:c}).buffer}else throw u}let o=0;for(;;){let{done:u,value:c}=await i.read();if(u)break;let h=c.byteLength;new Uint8Array(s,o,h).set(c),o+=h}return new Uint8Array(s,0,n)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),Oi,wi,Bi,zi,ri,ts,ye,_=Q(()=>{er(),Oi=["V","I","W","E","F"],wi=(e,t)=>{console.log(`[${Oi[e]},${new Date().toISOString()}]${t}`)},ri=(e,t)=>{Bi=e,zi=t},ts=(e,t)=>{let r=On(e),n=On(Bi);r>=n&&wi(r,typeof t=="function"?t():t)},ye=(...e)=>{zi&&ts(...e)}}),V,ue=Q(()=>{er(),V=(e,t)=>new(fi(t))(e)}),me=Q(()=>{}),De,et,St,Ft,Ot,Tt,hr,ur,vr,Kr=Q(()=>{_(),me(),De=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),et=[],St=e=>Math.ceil(e/16)*16,Ft=e=>{for(let t=0;t<et.length;t++){let r=et[t];if(e<=r)return r}return Math.ceil(e/16)*16},Ot=1,Tt=()=>Ot++,hr=async(e,t,r,n)=>{let i=St(r),s=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(t,0,s,0,i),e.flush(),await s.mapAsync(GPUMapMode.READ);let u=s.getMappedRange();if(n){let c=n();return c.set(new Uint8Array(u,0,r)),c}else return new Uint8Array(u.slice(0,r))}finally{s.destroy()}},ur=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[t]of De)et.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[]);this.sessionCount=0}upload(e,t){let r=t.buffer,n=t.byteOffset,i=t.byteLength,s=St(i),o=this.storageCache.get(e);if(!o)throw new Error("gpu data for uploading does not exist");if(o.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),c=u.getMappedRange();new Uint8Array(c).set(new Uint8Array(r,n,i)),u.unmap();let h=this.backend.getCommandEncoder();this.backend.endComputePass(),h.copyBufferToBuffer(u,0,o.gpuData.buffer,0,s),ye("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(t);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(r.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=St(r.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(r.gpuData.buffer,0,n.gpuData.buffer,0,i)}registerExternalBuffer(e,t,r){let n;if(r){if(n=r[0],e===r[1])return ye("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else n=Tt();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:e},originalSize:t}),ye("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, registered.`),n}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),ye("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r=Ft(e),n,i=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||s){let u=(i?this.freeBuffers:this.freeUniformBuffers).get(r);u?u.length>0?n=u.pop():n=this.backend.device.createBuffer({size:r,usage:t}):n=this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let o={id:Tt(),type:0,buffer:n};return this.storageCache.set(o.id,{gpuData:o,originalSize:e}),ye("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${o.id}`),o}get(e){return this.storageCache.get(e)?.gpuData}release(e){let t=this.storageCache.get(e);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return ye("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("data does not exist");await hr(this.backend,r.gpuData.buffer,r.originalSize,t)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let t=De.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(ye("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.storageCache=new Map)}},vr=(...e)=>new ur(...e)}),bn,dr,$r=Q(()=>{bn=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},dr=e=>new bn(e)}),xn,Sn,Be,Zr,an,kn,Rn,Yt=Q(()=>{xn=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},Sn=class{static calcShape(e,t,r=!1){let n=e.length,i=t.length;if(n===0)return t;if(i===0)return e;let s=Math.max(e.length,t.length),o=new Array(s);if(r){if(n<2||i<2)return;let u=xn.calcMatMulShape([e[n-2],e[n-1]],[t[i-2],t[i-1]]);if(u===void 0)return;[o[s-2],o[s-1]]=u}for(let u=r?3:1;u<=s;u++){let c=n-u<0?1:e[n-u],h=i-u<0?1:t[i-u];if(c!==h&&c>1&&h>1)return;let y=Math.max(c,h);if(c&&h)o[s-u]=Math.max(c,h);else{if(y>1)return;o[s-u]=0}}return o}static isValidBroadcast(e,t){let r=e.length,n=t.length;if(r>n)return!1;for(let i=1;i<=r;i++)if(e[r-i]!==1&&e[r-i]!==t[n-i])return!1;return!0}},Be=class Lc{static size(t){return Lc.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let n=t.length;if(n===0)return[];let i=new Array(n),s=n-1;for(;s>=0;){if(t[s]%r===0){i[s]=t[s]/r;break}if(r%t[s]!==0)throw new Error("cannot convert shape");i[s]=1,r/=t[s],s--}for(s--;s>=0;s--)i[s]=t[s];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return Lc.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return Lc.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,n){let i=1;for(let s=r;s<n;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[s]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let n=new Array(r);n[r-1]=1,n[r-2]=t[r-1];for(let i=r-3;i>=0;--i)n[i]=n[i+1]*t[i+1];return n}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(n=>this.normalizeAxis(n,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(n=>t[n]):t.slice().reverse()}static padShape(t,r){let n=t.length;return t.map((i,s)=>i+r[s]+r[s+n])}static areEqual(t,r){return t.length!==r.length?!1:t.every((n,i)=>n===r[i])}},Zr=class yd{static adjustPoolAttributes(t,r,n,i,s,o){if(!t&&n.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let u=0;u<r.length-2;u++)u>=n.length?n.push(r[u+2]):n[u]=r[u+2];for(let u=0;u<n.length;u++)if(u<i.length){if(i[u]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let u=0;u<n.length;u++)if(u<s.length){if(s[u]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let u=0;u<n.length*2;u++)if(u<o.length){if(o[u]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let u=0;u<n.length;u++){if(n[u]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[u]>=n[u]||o[u+n.length]>=n[u])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,n,i,s,o,u){if(u){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let c=0;c<t.length-2;c++)yd.adjustPadAndReturnShape(t[c+(o?1:2)],r[c],n[c],i[c],s,c,c+t.length-2,u)}}static computePoolOutputShape(t,r,n,i,s,o,u){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let c=[r[0],r[1]];return yd.computeShapeHelper(t,r,c,n,i,s,o,u),c}static computeConvOutputShape(t,r,n,i,s,o,u){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let c=[t[0],r[0]];return yd.computeShapeHelper(!1,t,c,n,i,s,o,u),c}static computeShapeHelper(t,r,n,i,s,o,u,c){if(t)for(let h=0;h<r.length-2;h++)n.push(1);else for(let h=0;h<r.length-2;h++)n.push(yd.adjustPadAndReturnShape(r[h+2],i[h],s[h],o[h],u,h,h+r.length-2,c))}static adjustPadAndReturnShape(t,r,n,i,s,o,u,c){let h=n*(i-1)+1;if(c&&c!=="NOTSET")switch(c){case"VALID":return s[o]=0,s[u]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(n!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return s[o]=Math.floor(c==="SAME_LOWER"?(y+1)/2:y/2),s[u]=y-s[o],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[o]+s[u]-h)/r+1)}},an=class{static getShapeOfGemmResult(e,t,r,n,i){if(e.length!==2||r.length!==2)throw new Error("shape need to be of size 2");let s,o,u;t?(s=e[1],o=e[0]):(s=e[0],o=e[1]);let c=-1;if(n?(u=r[0],c=1):(u=r[1],c=0),r[c]!==o)throw new Error("dimension mismatch");if(s<=0||u<=0||o<=0)throw new Error("invalid shape specified");if(i&&!Sn.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,o]}},kn=-34028234663852886e22,Rn=34028234663852886e22}),cn,Xr,fr,Fr,At,gr,ni,Qn,Nn,Ut,rs,nt,Vt,Es,Cs,ua,yi,cr=Q(()=>{er(),Yt(),cn=64,Xr=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},fr=(e,t=1)=>{let r=Xr(e,t);return typeof r=="string"?r:r[0]},Fr=(e,t=1)=>{let r=Xr(e,t);return typeof r=="string"?r:r[1]},At=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:Be.computeStrides(r)})}),t},gr=e=>e%4===0?4:e%2===0?2:1,ni=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Qn=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,Nn=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,Ut=(e,t,r,n)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?n==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:n==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,rs=(e,t,r,n,i)=>{let s=typeof r=="number",o=s?r:r.length,u=[...new Array(o).keys()],c=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,h=Xr(t,i),y=typeof h=="string"?h:h[1],l=typeof h=="string"?h:h[0],x={indices:c,value:y,storage:l,tensor:t},A=Je=>typeof Je=="string"?Je:`${Je}u`,k={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},C=s?"uniforms.":"",ee=`${C}${e}_shape`,J=`${C}${e}_strides`,B="";for(let Je=0;Je<o-1;Je++)B+=`
    let dim${Je} = current / ${Ut(J,Je,o)};
    let rest${Je} = current % ${Ut(J,Je,o)};
    indices[${Je}] = dim${Je};
    current = rest${Je};
    `;B+=`indices[${o-1}] = current;`;let ie=o<2?"":`
  fn o2i_${e}(offset: u32) -> ${x.indices} {
    var indices: ${x.indices};
    var current = offset;
    ${B}
    return indices;
  }`,ce=Je=>(k.offsetToIndices=!0,o<2?Je:`o2i_${e}(${Je})`),be=[];if(o>=2)for(let Je=o-1;Je>=0;Je--)be.push(`${Ut(J,Je,o)} * (indices[${Je}])`);let We=o<2?"":`
  fn i2o_${e}(indices: ${x.indices}) -> u32 {
    return ${be.join("+")};
  }`,ze=Je=>(k.indicesToOffset=!0,o<2?Je:`i2o_${e}(${Je})`),wt=(...Je)=>o===0?"0u":`${x.indices}(${Je.map(A).join(",")})`,Lt=(Je,Et)=>o<2?`${Je}`:`${Ut(Je,Et,o)}`,Dt=(Je,Et,pr)=>o<2?`${Je}=${pr};`:`${Ut(Je,Et,o)}=${pr};`,sr={},Qt=(Je,Et)=>{k.broadcastedIndicesToOffset=!0;let pr=`${Et.name}broadcastedIndicesTo${e}Offset`;if(pr in sr)return`${pr}(${Je})`;let Ur=[];for(let Wr=o-1;Wr>=0;Wr--){let Gn=Et.indicesGet("outputIndices",Wr+Et.rank-o);Ur.push(`${Lt(J,Wr)} * (${Gn} % ${Lt(ee,Wr)})`)}return sr[pr]=`fn ${pr}(outputIndices: ${Et.type.indices}) -> u32 {
             return ${Ur.length>0?Ur.join("+"):"0u"};
           }`,`${pr}(${Je})`},or=(Je,Et)=>(()=>{if(x.storage===x.value)return`${e}[${Je}]=${Et};`;if(x.storage==="vec2<u32>"&&x.value==="i32")return`${e}[${Je}]=vec2<u32>(u32(${Et}), select(0u, 0xFFFFFFFFu, ${Et} < 0));`;if(x.storage==="vec2<u32>"&&x.value==="u32")return`${e}[${Je}]=vec2<u32>(u32(${Et}), 0u);`;if(x.storage==="u32"&&x.value==="vec4<bool>")return`${e}[${Je}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${Et}));`;throw new Error(`not supported combination of storage type ${x.storage} and value type ${x.value} yet`)})(),Tr=Je=>(()=>{if(x.storage===x.value)return`${e}[${Je}]`;if(x.storage==="vec2<u32>"&&x.value==="i32")return`i32(${e}[${Je}].x)`;if(x.storage==="vec2<u32>"&&x.value==="u32")return`u32(${e}[${Je}].x)`;if(x.storage==="u32"&&x.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${Je}] & 0xFFu), bool(${e}[${Je}] & 0xFF00u), bool(${e}[${Je}] & 0xFF0000u), bool(${e}[${Je}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${x.storage} and value type ${x.value} yet`)})(),ir=o<2?"":`
  fn get_${e}ByIndices(indices: ${x.indices}) -> ${y} {
    return ${Tr(`i2o_${e}(indices)`)};
  }`,Ht=o<2?"":(()=>{let Je=u.map(pr=>`d${pr}: u32`).join(", "),Et=u.map(pr=>`d${pr}`).join(", ");return`
  fn get_${e}(${Je}) -> ${y} {
    return get_${e}ByIndices(${wt(Et)});
  }`})(),Mr=(...Je)=>{if(Je.length!==o)throw new Error(`indices length must be ${o}`);let Et=Je.map(A).join(",");return o===0?Tr("0u"):o===1?Tr(Et[0]):(k.get=!0,k.getByIndices=!0,k.indicesToOffset=!0,`get_${e}(${Et})`)},br=Je=>o<2?Tr(Je):(k.getByIndices=!0,k.indicesToOffset=!0,`get_${e}ByIndices(${Je})`),Gt=o<2?"":`
  fn set_${e}ByIndices(indices: ${x.indices}, value: ${y}) {
    ${or(`i2o_${e}(indices)`,"value")}
  }`,_r=o<2?"":(()=>{let Je=u.map(pr=>`d${pr}: u32`).join(", "),Et=u.map(pr=>`d${pr}`).join(", ");return`
  fn set_${e}(${Je}, value: ${y}) {
    set_${e}ByIndices(${wt(Et)}, value);
  }`})();return{impl:()=>{let Je=[],Et=!1;return k.offsetToIndices&&(Je.push(ie),Et=!0),k.indicesToOffset&&(Je.push(We),Et=!0),k.broadcastedIndicesToOffset&&(Object.values(sr).forEach(pr=>Je.push(pr)),Et=!0),k.set&&(Je.push(_r),Et=!0),k.setByIndices&&(Je.push(Gt),Et=!0),k.get&&(Je.push(Ht),Et=!0),k.getByIndices&&(Je.push(ir),Et=!0),!s&&Et&&Je.unshift(`const ${ee} = ${x.indices}(${r.join(",")});`,`const ${J} = ${x.indices}(${Be.computeStrides(r).join(",")});`),Je.join(`
`)},type:x,offsetToIndices:ce,indicesToOffset:ze,broadcastedIndicesToOffset:Qt,indices:wt,indicesGet:Lt,indicesSet:Dt,set:(...Je)=>{if(Je.length!==o+1)throw new Error(`indices length must be ${o}`);let Et=Je[o];if(typeof Et!="string")throw new Error("value must be string");let pr=Je.slice(0,o).map(A).join(",");return o===0?or("0u",Et):o===1?or(pr[0],Et):(k.set=!0,k.setByIndices=!0,k.indicesToOffset=!0,`set_${e}(${pr}, ${Et})`)},setByOffset:or,setByIndices:(Je,Et)=>o<2?or(Je,Et):(k.setByIndices=!0,k.indicesToOffset=!0,`set_${e}ByIndices(${Je}, ${Et});`),get:Mr,getByOffset:Tr,getByIndices:br,usage:n,name:e,strides:J,shape:ee,rank:o}},nt=(e,t,r,n=1)=>rs(e,t,r,"input",n),Vt=(e,t,r,n=1)=>rs(e,t,r,"output",n),Es=(e,t,r,n=1)=>rs(e,t,r,"internal",n),Cs=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=cn){let t=typeof e=="number"?e:e[0],r=typeof e=="number"?1:e[1],n=typeof e=="number"?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||n>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*r*n>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=i?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${t*r*n}u + local_idx;`;return`@compute @workgroup_size(${t}, ${r}, ${n})
  fn main(${s}) {
    ${o}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let r=e.usage==="input"?"read":"read_write",n=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${r}> ${e.name}: array<${n}>;`}declareVariables(...e){return e.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(e,t,r=1){return this.uniforms.push({name:e,type:t,length:r}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:t,type:r,length:n}of this.uniforms)if(n&&n>4)r==="f16"?e.push(`@align(16) ${t}:array<mat2x4<${r}>, ${Math.ceil(n/8)}>`):e.push(`${t}:array<vec4<${r}>, ${Math.ceil(n/4)}>`);else{let i=n==null||n===1?r:`vec${n}<${r}>`;e.push(`${t}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},ua=(e,t)=>new Cs(e,t),yi=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;i++){let s=r-1-i,o=e[s]||1;(t[t.length-1-i]||1)>1&&o===1&&n.unshift(s)}return n}}),da,$s,ii,ca,Td,Mn,Ed,pa,jn=Q(()=>{er(),Yt(),$r(),cr(),da=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},$s=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,ii=(e,t)=>Be.sortBasedOnPerm(e,$s(e.length,t)),ca=(e,t,r,n)=>{let i=`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`;for(let s=0;s<t;++s)i+=r.indicesSet("a",e[s],`i[${s}]`);return i+="return a;}"},Td=(e,t)=>{let r=[],n=[];for(let i=0;i<e.length;++i)e[i]!==1&&r.push(e[i]),e[t[i]]!==1&&n.push(t[i]);return{newShape:r,newPerm:n}},Mn=(e,t)=>{let r=e.dataType,n=e.dims.length,i=$s(n,t),s=ii(e.dims,i),{newShape:o,newPerm:u}=Td(e.dims,i),c=Be.areEqual(u,[2,3,1]),h=Be.areEqual(u,[3,1,2]),y=o.length===2&&u[0]>u[1]||c||h,l=y?o:e.dims,x=s;y&&(l=c?[o[0],o[1]*o[2]]:h?[o[0]*o[1],o[2]]:o,x=[l[1],l[0]]);let A=nt("a",r,l.length),k=Vt("output",r,x.length),C=16,ee;return y?ee=J=>`
  ${J.registerUniform("output_size","u32").declareVariables(A,k)}
  var<workgroup> tile : array<array<${k.type.value}, ${C+1}>, ${C}>;
  ${J.mainStart([C,C,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${C} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${C}u + local_id.x;
    let input_row = workgroup_id_x * ${C}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${A.getByIndices(`${A.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${C}u + local_id.x;
    let output_row = workgroup_id_y * ${C}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${k.setByIndices(`${k.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`:ee=J=>`
  ${J.registerUniform("output_size","u32").declareVariables(A,k)}

  ${ca(i,n,A,k)}

  ${J.mainStart()}
    ${J.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${k.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${k.setByOffset("global_idx",A.getByIndices("aIndices"))}
  }`,{name:y?"TransposeShared":"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let J=Be.size(s);return{outputs:[{dims:s,dataType:e.dataType}],dispatchGroup:y?{x:Math.ceil(x[1]/C),y:Math.ceil(x[0]/C)}:{x:Math.ceil(J/64)},programUniforms:[{type:12,data:J},...At(l,x)]}},getShaderSource:ee}},Ed=(e,t)=>{da(e.inputs),e.compute(Mn(e.inputs[0],t.perm))},pa=e=>dr({perm:e.perm})}),ha,fa,ma,_a,ga,Ss,wa,ya,ks,ba,Pn,Ps,Ma,va,As,xa,Ta,Is,Ea,Ca,Fs,Cd=Q(()=>{er(),Yt(),cr(),Vs(),jn(),ha={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},fa={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},ma={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},_a={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ga=(e,t)=>{let r=[];for(let n=t-e;n<t;++n)r.push(n);return r},Ss=(e,t)=>{let r=[],n=e.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&r.push(e[s]);let i=t.map(s=>e[s]);return[r,i]},wa=(e,t)=>{let r=e.length+t.length,n=[],i=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?n.push(e[i++]):n.push(1);return n},ya=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},ks=(e,t)=>{let r=[];if(!ya(e,t)){for(let n=0;n<t;++n)e.indexOf(n)===-1&&r.push(n);e.forEach(n=>r.push(n))}return r},ba=(e,t,r,n,i,s,o)=>{let u=r[0].dims,c=Be.size(s),h=Be.size(o),y=nt("_A",r[0].dataType,u),l=Vt("output",i,s),x=32,A=`
          var<workgroup> aBestValues : array<f32, ${x}>;
       `;return{name:e,shaderCache:t,getShaderSource:k=>`
        ${k.registerUniform("reduceSize","u32").declareVariables(y,l)}
        ${A}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${k.mainStart(x)}

          let outputIndex = global_idx / ${x};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${ma[n]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${x}) {
           let candidate = f32(${y.getByOffset("offset + k")});
           bestValue = ${ha[n]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${x}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${fa[n]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${l.setByOffset("outputIndex",`${n==="mean"?`${l.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${l.type.storage}(${_a[n]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:c},programUniforms:[{type:12,data:h}]})}},Pn=(e,t,r,n)=>{let i=e.inputs.length===1?r:Bs(e.inputs,r),s=i.axes;s.length===0&&!i.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((A,k)=>k));let o=Be.normalizeAxes(s,e.inputs[0].dims.length),u=o,c=e.inputs[0],h=ks(u,e.inputs[0].dims.length);h.length>0&&(c=e.compute(Mn(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],u=ga(u.length,c.dims.length));let[y,l]=Ss(c.dims,u),x=y;i.keepDims&&(x=wa(y,o)),e.compute(ba(t,{hint:i.cacheKey,inputDependencies:["type"]},[c],n,e.inputs[0].dataType,x,l),{inputs:[c]})},Ps=(e,t)=>{Pn(e,"ReduceMeanShared",t,"mean")},Ma=(e,t)=>{Pn(e,"ReduceL1Shared",t,"l1")},va=(e,t)=>{Pn(e,"ReduceL2Shared",t,"l2")},As=(e,t)=>{Pn(e,"ReduceLogSumExpShared",t,"logSumExp")},xa=(e,t)=>{Pn(e,"ReduceMaxShared",t,"max")},Ta=(e,t)=>{Pn(e,"ReduceMinShared",t,"min")},Is=(e,t)=>{Pn(e,"ReduceProdShared",t,"prod")},Ea=(e,t)=>{Pn(e,"ReduceSumShared",t,"sum")},Ca=(e,t)=>{Pn(e,"ReduceSumSquareShared",t,"sumSquare")},Fs=(e,t)=>{Pn(e,"ReduceLogSumShared",t,"logSum")}}),An,Os,ns,Bs,Tn,$a,Sa,zs,ka,Pa,Ds,Aa,Ia,Ls,Fa,In,Rs,Oa,Ba,Ns,za,Da,js,La,Ra,Us,Vs=Q(()=>{er(),Yt(),$r(),cr(),Cd(),An=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Os=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],ns=(e,t,r,n,i,s,o=!1,u=!1)=>{let c=[],h=r[0].dims,y=h.length,l=Be.normalizeAxes(i,y),x=!u&&l.length===0;h.forEach((C,ee)=>{x||l.indexOf(ee)>=0?o&&c.push(1):c.push(C)});let A=c.length,k=Be.size(c);return{name:e,shaderCache:t,getShaderSource:C=>{let ee=[],J=nt("_A",r[0].dataType,y),B=Vt("output",s,A),ie=n(J,B,l),ce=ie[2];for(let be=0,We=0;be<y;be++)x||l.indexOf(be)>=0?(o&&We++,ce=`for(var j${be}: u32 = 0; j${be} < ${h[be]}; j${be}++) {
                  ${ie[2].includes("last_index")?`let last_index = j${be};`:""}
                  ${J.indicesSet("input_indices",be,`j${be}`)}
                  ${ce}
                }`):(ee.push(`${J.indicesSet("input_indices",be,B.indicesGet("output_indices",We))};`),We++);return`

        ${C.registerUniform("output_size","u32").declareVariables(J,B)}

        ${C.mainStart()}
          ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${J.type.indices};
          let output_indices = ${B.offsetToIndices("global_idx")};

          ${ee.join(`
`)}
          ${ie[0]}       // init ops for reduce max/min
          ${ie[1]}
          ${ce}
          ${ie[3]}
          ${ie.length===4?B.setByOffset("global_idx","value"):ie.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:c,dataType:s}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:[{type:12,data:k},...At(h,c)]})}},Bs=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),dr({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Tn=(e,t,r,n)=>{let i=e.inputs,s=i.length===1?r:Bs(i,r);e.compute(ns(t,{hint:s.cacheKey,inputDependencies:["rank"]},[i[0]],s.noopWithEmptyAxes&&s.axes.length===0?Os:n,s.axes,i[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},$a=(e,t)=>{An(e.inputs),Tn(e,"ReduceLogSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,"value = log(value);"])},Sa=(e,t)=>{An(e.inputs),Tn(e,"ReduceL1",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${r.getByIndices("input_indices")});`,""])},zs=(e,t)=>{An(e.inputs),Tn(e,"ReduceL2",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},ka=(e,t)=>{An(e.inputs),Tn(e,"ReduceLogSumExp",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${r.getByIndices("input_indices")});`,"value = log(value);"])},Pa=(e,t)=>{An(e.inputs),Tn(e,"ReduceMax",t,(r,n,i)=>{let s=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&s.push(r.indicesSet("input_indices",o,0));return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = max(value, ${r.getByIndices("input_indices")});`,""]})},Ds=(e,t)=>{An(e.inputs),Tn(e,"ReduceMean",t,(r,n,i)=>{let s=1;for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&(s*=e.inputs[0].dims[o]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${s});`]})},Aa=(e,t)=>{An(e.inputs),Tn(e,"ReduceMin",t,(r,n,i)=>{let s=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&s.push(`input_indices[${o}] = 0;`);return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = min(value, ${r.getByIndices("input_indices")});`,""]})},Ia=(e,t)=>{An(e.inputs),Tn(e,"ReduceProd",t,(r,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${r.getByIndices("input_indices")};`,""])},Ls=(e,t)=>{An(e.inputs),Tn(e,"ReduceSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,""])},Fa=(e,t)=>{An(e.inputs),Tn(e,"ReduceSumSquare",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += t * t;`,""])},In=(e,t,r)=>{if(t.length===0)return r;let n=1,i=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?n*=e[s]:i*=e[s];return i<32&&n>1024},Rs=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ds(e,t):Ps(e,t)},Oa=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sa(e,t):Ma(e,t)},Ba=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?zs(e,t):va(e,t)},Ns=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ka(e,t):As(e,t)},za=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Pa(e,t):xa(e,t)},Da=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Aa(e,t):Ta(e,t)},js=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ia(e,t):Is(e,t)},La=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ls(e,t):Ea(e,t)},Ra=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Fa(e,t):Ca(e,t)},Us=(e,t)=>{In(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$a(e,t):Fs(e,t)}}),Ws,Gs,Na,qs,ja=Q(()=>{er(),$r(),Vs(),Ws=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Gs=(e,t)=>{Ws(e.inputs);let r=(n,i,s)=>{let o=[];for(let u=0;u<n.rank;u++)(s.indexOf(u)>=0||s.length===0)&&o.push(`input_indices[${u}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(ns("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Na=(e,t)=>{Ws(e.inputs);let r=(n,i,s)=>{let o=[];for(let u=0;u<n.rank;u++)(s.indexOf(u)>=0||s.length===0)&&o.push(`input_indices[${u}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(ns("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},qs=e=>dr(e)}),Ua,is,Hs,Va,Wa,bi,Ga,qa,ss=Q(()=>{er(),Yt(),me(),cr(),Ua=(e,t)=>{let r=e[0],n=e[1],i=e[2],s=e[3],o=e[4],u=e[5];if(o&&u)throw new Error("Attention cannot have both past and attention_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let c=r.dims[0],h=r.dims[1],y=r.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(n.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(n.dims[0]!==y)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==n.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let l=i.dims[0]/3,x=l,A=x;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let ie of t.qkvHiddenSizes)if(ie%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");l=t.qkvHiddenSizes[0],x=t.qkvHiddenSizes[1],A=t.qkvHiddenSizes[2]}let k=h;if(l!==x)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==l+x+A)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let C=0;if(o){if(x!==A)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(o.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(o.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==c)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==x/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(C=o.dims[3])}let ee=k+C,J=-1,B=0;if(s)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(u){if(u.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(u.dims[0]!==c||u.dims[1]!==t.numHeads||u.dims[2]!==h||u.dims[3]!==ee)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:c,sequenceLength:h,pastSequenceLength:C,kvSequenceLength:k,totalSequenceLength:ee,maxSequenceLength:J,inputHiddenSize:y,hiddenSize:l,vHiddenSize:A,headSize:Math.floor(l/t.numHeads),vHeadSize:Math.floor(A/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:B,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},is=(e,t,r)=>t&&e?`
      let total_sequence_length_input = u32(${t.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e?.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${r?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,Hs=(e,t,r,n,i,s,o,u)=>{let c=gr(o?1:s),h=64,y=s/c;y<h&&(h=32);let l=Math.ceil(s/c/h),x=[{type:12,data:t},{type:12,data:r},{type:12,data:n},{type:12,data:i},{type:12,data:y},{type:12,data:l}],A=fr(e.dataType,c),k=Fr(1,c),C=["type"];o&&C.push("type"),u&&C.push("type");let ee=J=>{let B=Vt("x",e.dataType,e.dims,c),ie=[B],ce=o?nt("seq_lens",o.dataType,o.dims):void 0;ce&&ie.push(ce);let be=u?nt("total_sequence_length_input",u.dataType,u.dims):void 0;be&&ie.push(be);let We=Fr(e.dataType),ze=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${h}>;
  var<workgroup> thread_sum: array<f32, ${h}>;
  ${J.registerUniforms(ze).declareVariables(...ie)}
  ${J.mainStart([h,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${is(ce,be,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${h}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${o?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${k}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${k}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(c){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${c}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${h}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${k}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${k}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(c){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${c}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${h}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${B.type.value}(${We}(1.0) / ${We}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${k}(x[offset + i]);
        x[offset + i] = ${B.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${o?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${B.type.value}(${We}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${h};${A};${c}`,inputDependencies:C},getShaderSource:ee,getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(s/h),y:i,z:t*r},programUniforms:x})}},Va=(e,t,r,n,i,s,o,u,c)=>{let h=o+s.kvSequenceLength,y=[s.batchSize,s.numHeads,s.sequenceLength,h],l=e>1&&n,x=s.kvNumHeads?s.kvNumHeads:s.numHeads,A=l?[s.batchSize,x,h,s.headSize]:void 0,k=s.nReps?s.nReps:1,C=s.scale===0?1/Math.sqrt(s.headSize):s.scale,ee=gr(s.headSize),J=s.headSize/ee,B=12,ie={x:Math.ceil(h/B),y:Math.ceil(s.sequenceLength/B),z:s.batchSize*s.numHeads},ce=[{type:12,data:s.sequenceLength},{type:12,data:J},{type:12,data:h},{type:12,data:s.numHeads},{type:12,data:s.headSize},{type:1,data:C},{type:12,data:o},{type:12,data:s.kvSequenceLength},{type:12,data:k}],be=l&&n&&Be.size(n.dims)>0,We=["type","type"];be&&We.push("type"),i&&We.push("type"),u&&We.push("type"),c&&We.push("type");let ze=[{dims:y,dataType:t.dataType,gpuDataType:0}];l&&ze.push({dims:A,dataType:t.dataType,gpuDataType:0});let wt=Lt=>{let Dt=nt("q",t.dataType,t.dims,ee),sr=nt("key",r.dataType,r.dims,ee),Qt=[Dt,sr];if(be){let Gt=nt("past_key",n.dataType,n.dims,ee);Qt.push(Gt)}i&&Qt.push(nt("attention_bias",i.dataType,i.dims));let or=u?nt("seq_lens",u.dataType,u.dims):void 0;or&&Qt.push(or);let Tr=c?nt("total_sequence_length_input",c.dataType,c.dims):void 0;Tr&&Qt.push(Tr);let ir=Vt("output",t.dataType,y),Ht=[ir];l&&Ht.push(Vt("present_key",t.dataType,A,ee));let Mr=Fr(1,ee),br=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${B}u;

  var<workgroup> tileQ: array<${Dt.type.storage}, ${B*B}>;
  var<workgroup> tileK: array<${Dt.type.storage}, ${B*B}>;
  ${Lt.registerUniforms(br).declareVariables(...Qt,...Ht)}
  ${Lt.mainStart([B,B,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${k===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${k===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${is(or,Tr,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${be&&l?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${l?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${Mr}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${be&&l?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${l?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${Mr}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(ee){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${ee}`)}})()};
        output[outputIdx] = ${ir.type.value} (sum * uniforms.alpha) + ${i?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${ee};${i!==void 0};${n!==void 0};${e}`,inputDependencies:We},getRunData:()=>({outputs:ze,dispatchGroup:ie,programUniforms:ce}),getShaderSource:wt}},Wa=(e,t,r,n,i,s,o=void 0,u=void 0)=>{let c=s+i.kvSequenceLength,h=i.nReps?i.nReps:1,y=i.vHiddenSize*h,l=e>1&&n,x=i.kvNumHeads?i.kvNumHeads:i.numHeads,A=l?[i.batchSize,x,c,i.headSize]:void 0,k=[i.batchSize,i.sequenceLength,y],C=12,ee={x:Math.ceil(i.vHeadSize/C),y:Math.ceil(i.sequenceLength/C),z:i.batchSize*i.numHeads},J=[{type:12,data:i.sequenceLength},{type:12,data:c},{type:12,data:i.vHeadSize},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:12,data:y},{type:12,data:s},{type:12,data:i.kvSequenceLength},{type:12,data:h}],B=l&&n&&Be.size(n.dims)>0,ie=["type","type"];B&&ie.push("type"),o&&ie.push("type"),u&&ie.push("type");let ce=[{dims:k,dataType:t.dataType,gpuDataType:0}];l&&ce.push({dims:A,dataType:t.dataType,gpuDataType:0});let be=We=>{let ze=nt("probs",t.dataType,t.dims),wt=nt("v",r.dataType,r.dims),Lt=[ze,wt];B&&Lt.push(nt("past_value",n.dataType,n.dims));let Dt=o?nt("seq_lens",o.dataType,o.dims):void 0;o&&Lt.push(Dt);let sr=u?nt("total_sequence_length_input",u.dataType,u.dims):void 0;u&&Lt.push(sr);let Qt=[Vt("output",t.dataType,k)];l&&Qt.push(Vt("present_value",t.dataType,A));let or=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${C}u;
  var<workgroup> tileQ: array<${ze.type.value}, ${C*C}>;
  var<workgroup> tileV: array<${ze.type.value}, ${C*C}>;
  ${We.registerUniforms(or).declareVariables(...Lt,...Qt)}
  ${We.mainStart([C,C,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${h===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${h===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${is(Dt,sr,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${B&&l?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${l?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${ze.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${B&&l?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${l?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${n!==void 0};${e}`,inputDependencies:ie},getRunData:()=>({outputs:ce,dispatchGroup:ee,programUniforms:J}),getShaderSource:be}},bi=(e,t,r,n,i,s,o,u,c,h,y=void 0,l=void 0)=>{let x=Math.min(e.outputCount,1+(o?1:0)+(u?1:0)),A=x>1?h.pastSequenceLength:0,k=A+h.kvSequenceLength,C=c&&Be.size(c.dims)>0?c:void 0,ee=[t,r];x>1&&o&&Be.size(o.dims)>0&&ee.push(o),C&&ee.push(C),y&&ee.push(y),l&&ee.push(l);let J=e.compute(Va(x,t,r,o,C,h,A,y,l),{inputs:ee,outputs:x>1?[-1,1]:[-1]})[0];e.compute(Hs(J,h.batchSize,h.numHeads,A,h.sequenceLength,k,y,l),{inputs:y&&l?[J,y,l]:[J],outputs:[]});let B=[J,n];x>1&&u&&Be.size(u.dims)>0&&B.push(u),y&&B.push(y),l&&B.push(l),e.compute(Wa(x,J,n,u,h,A,y,l),{inputs:B,outputs:x>1?[0,2]:[0]})},Ga=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],n=t.sequenceLength,i=t.inputHiddenSize,s=t.headSize,o=12,u={x:Math.ceil(t.headSize/o),y:Math.ceil(t.sequenceLength/o),z:t.batchSize*t.numHeads},c=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:n},{type:12,data:i},{type:12,data:s},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],y=l=>{let x=Vt("output_q",c[0].dataType,r),A=Vt("output_k",c[0].dataType,r),k=Vt("output_v",c[0].dataType,r),C=nt("input",c[0].dataType,c[0].dims),ee=nt("weight",c[1].dataType,c[1].dims),J=nt("bias",c[2].dataType,c[2].dims),B=C.type.storage,ie=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileInput: array<${B}, ${o*o}>;
  var<workgroup> tileWeightQ: array<${B}, ${o*o}>;
  var<workgroup> tileWeightK: array<${B}, ${o*o}>;
  var<workgroup> tileWeightV: array<${B}, ${o*o}>;
  ${l.registerUniforms(ie).declareVariables(C,ee,J,x,A,k)}
  ${l.mainStart([o,o,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${B}(0);
    var valueK = ${B}(0);
    var valueV = ${B}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:u,programUniforms:h}),getShaderSource:y},{inputs:c,outputs:[-1,-1,-1]})},qa=(e,t)=>{let r=Ua(e.inputs,t),[n,i,s]=Ga(e,r);return bi(e,n,i,s,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r)}}),Ha,Ka,Ks,Xa,$d=Q(()=>{Kt(),er(),Yt(),$r(),cr(),Ha=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(n,i,s)=>{let o=i.length;if(o!==n.length)throw new Error(`${s}: num dimensions != ${o}`);i.forEach((u,c)=>{if(u!==n[c])throw new Error(`${s}: dim[${c}] do not match`)})};if(e[0].dims.length>1){let n=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,n,"Invalid input scale"),r(e[2].dims,n,"Invalid input B"),r(e[3].dims,n,"Invalid input mean"),r(e[4].dims,n,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Ka=(e,t)=>{let{epsilon:r,spatial:n,format:i}=t,s=e[0].dims,o=n?gr(s[s.length-1]):1,u=i==="NHWC"&&s.length>1?o:1,c=Be.size(s)/o,h=n,y=h?s.length:s,l=nt("x",e[0].dataType,e[0].dims,o),x=nt("scale",e[1].dataType,e[1].dims,u),A=nt("bias",e[2].dataType,e[2].dims,u),k=nt("inputMean",e[3].dataType,e[3].dims,u),C=nt("inputVar",e[4].dataType,e[4].dims,u),ee=Vt("y",e[0].dataType,y,o),J=()=>{let ie="";if(n)ie=`let cOffset = ${s.length===1?"0u":i==="NHWC"?`outputIndices[${s.length-1}] / ${o}`:"outputIndices[1]"};`;else if(i==="NCHW")ie=`
            ${ee.indicesSet("outputIndices","0","0")}
            let cOffset = ${ee.indicesToOffset("outputIndices")};`;else{ie=`var cIndices = ${x.type.indices}(0);
                       cIndices[0] = outputIndices[${s.length-1}];`;for(let ce=1;ce<x.rank;ce++)ie+=`cIndices[${ce}] = outputIndices[${ce}];`;ie+=`let cOffset = ${x.indicesToOffset("cIndices")};`}return ie},B=ie=>`
  const epsilon = ${r};
  ${ie.registerUniform("outputSize","u32").declareVariables(l,x,A,k,C,ee)}
  ${ie.mainStart()}
  ${ie.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${ee.offsetToIndices(`global_idx * ${o}`)};
    ${J()}
    let scale = ${x.getByOffset("cOffset")};
    let bias = ${A.getByOffset("cOffset")};
    let inputMean = ${k.getByOffset("cOffset")};
    let inputVar = ${C.getByOffset("cOffset")};
    let x = ${l.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${ee.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${n}_${o}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:B,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:h?[{type:12,data:c},...At(s)]:[{type:12,data:c}]})}},Ks=e=>dr(e),Xa=(e,t)=>{let{inputs:r,outputCount:n}=e,i=Ks({...t,outputCount:n});if(T.webgpu.validateInputContent&&Ha(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Ka(r,i))}}),Xs,Qa,Ya,Za=Q(()=>{Yt(),cr(),Xs=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Qa=e=>{let t=e[0].dims,r=e[0].dims[2],n=Be.size(t)/4,i=e[0].dataType,s=nt("input",i,t,4),o=nt("bias",i,[r],4),u=nt("residual",i,t,4),c=Vt("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:h=>`
  const channels = ${r}u / 4;
  ${h.declareVariables(s,o,u,c)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let value = ${s.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${u.getByOffset("global_idx")};
    ${c.setByOffset("global_idx","value")}
  }`}},Ya=e=>{Xs(e.inputs),e.compute(Qa(e.inputs))}}),Ja,Pr,Qs,el,tl,rl,nl,Ys,il,sl,ol,al,Zs,ll,ul,dl,Di,Js,os,cl,eo,pl,hl,to,fl,ml,ro,_l,gl,no,wl,yl,as,bl,Ml,ls,io,so,us,vl,xl,Tl,oo,El,Cl,ao=Q(()=>{er(),Yt(),$r(),cr(),Ja=(e,t,r,n,i,s,o)=>{let u=Math.ceil(t/4),c="";typeof i=="string"?c=`${i}(a)`:c=i("a");let h=nt("inputData",r,[u],4),y=Vt("outputData",n,[u],4),l=[{name:"vec_size",type:"u32"}];return o&&l.push(...o),`
      ${e.registerUniforms(l).declareVariables(h,y)}

  ${s??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${h.getByOffset("global_idx")};
    ${y.setByOffset("global_idx",c)}
  }`},Pr=(e,t,r,n,i,s=e.dataType,o,u)=>{let c=[{type:12,data:Math.ceil(Be.size(e.dims)/4)}];return o&&c.push(...o),{name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:h=>Ja(h,Be.size(e.dims),e.dataType,s,r,n,u),getRunData:h=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(Be.size(h[0].dims)/64/4)},programUniforms:c})}},Qs=e=>{e.compute(Pr(e.inputs[0],"Abs","abs"))},el=e=>{e.compute(Pr(e.inputs[0],"Acos","acos"))},tl=e=>{e.compute(Pr(e.inputs[0],"Acosh","acosh"))},rl=e=>{e.compute(Pr(e.inputs[0],"Asin","asin"))},nl=e=>{e.compute(Pr(e.inputs[0],"Asinh","asinh"))},Ys=e=>{e.compute(Pr(e.inputs[0],"Atan","atan"))},il=e=>{e.compute(Pr(e.inputs[0],"Atanh","atanh"))},sl=e=>dr(e),ol=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(Pr(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},al=e=>{let t,r,n=e.length>=2&&e[1].data!==0,i=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:t=n?e[1].getFloat32Array()[0]:-34028234663852886e22,r=i?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=n?e[1].getUint16Array()[0]:64511,r=i?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return dr({min:t,max:r})},Zs=(e,t)=>{let r=t||al(e.inputs),n=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"Clip",i=>`clamp(${i}, vec4<${n}>(uniforms.min), vec4<${n}>(uniforms.max))`,void 0,r.cacheKey,void 0,[{type:e.inputs[0].dataType,data:r.min},{type:e.inputs[0].dataType,data:r.max}],[{name:"min",type:n},{name:"max",type:n}]),{inputs:[0]})},ll=e=>{e.compute(Pr(e.inputs[0],"Ceil","ceil"))},ul=e=>{e.compute(Pr(e.inputs[0],"Cos","cos"))},dl=e=>{e.compute(Pr(e.inputs[0],"Cosh","cosh"))},Di=e=>dr(e),Js=(e,t)=>{let r=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},os=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,cl=e=>{let t=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,os(t)))},eo=e=>{e.compute(Pr(e.inputs[0],"Exp","exp"))},pl=e=>{e.compute(Pr(e.inputs[0],"Floor","floor"))},hl=e=>{let t=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,os(t)))},to=(e,t)=>{let r=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},fl=e=>{e.compute(Pr(e.inputs[0],"Not",t=>`!${t}`))},ml=e=>{e.compute(Pr(e.inputs[0],"Neg",t=>`-${t}`))},ro=e=>{e.compute(Pr(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},_l=e=>{let t=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},gl=e=>{e.compute(Pr(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},no=e=>dr(e),wl=(e,t)=>{let r=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"HardSigmoid",n=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${n} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},yl=e=>{e.compute(Pr(e.inputs[0],"Sin","sin"))},as=e=>{e.compute(Pr(e.inputs[0],"Sinh","sinh"))},bl=e=>{e.compute(Pr(e.inputs[0],"Sqrt","sqrt"))},Ml=e=>{e.compute(Pr(e.inputs[0],"Tan","tan"))},ls=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,io=e=>{e.compute(Pr(e.inputs[0],"Tanh",ls))},so=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${ls("v")};
}
`,us=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,vl=e=>{let t=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"FastGelu",us,so(t),void 0,e.inputs[0].dataType))},xl=(e,t)=>{let r=Fr(e.inputs[0].dataType);return e.compute(Pr(e.inputs[0],"ThresholdedRelu",n=>`select(vec4<${r}>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},Tl=e=>{e.compute(Pr(e.inputs[0],"Log","log"))},oo=(e,t)=>`
const alpha = vec4<${e}>(${t});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,El=e=>`quick_gelu_impl(${e})`,Cl=(e,t)=>{let r=Fr(e.inputs[0].dataType);e.compute(Pr(e.inputs[0],"QuickGelu",El,oo(r,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),lo,$l,Sl,kl=Q(()=>{Yt(),cr(),ao(),lo=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},$l=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=nt("input",e[0].dataType,e[0].dims,4),n=nt("bias",e[0].dataType,[e[0].dims[2]],4),i=Vt("output",e[0].dataType,t,4),s=Be.size(t)/4,o=fr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${u.declareVariables(r,n,i)}

  ${os(o)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Sl=e=>{lo(e.inputs),e.compute($l(e.inputs))}}),Pl,Al,En,Il,Fl,uo,Ol,Bl,co,zl,Dl,po,Ll,Sd=Q(()=>{er(),Yt(),cr(),Pl=(e,t,r,n,i,s,o,u,c,h,y,l)=>{let x,A;typeof u=="string"?x=A=(B,ie)=>`${u}((${B}),(${ie}))`:typeof u=="function"?x=A=u:(x=u.scalar,A=u.vector);let k=Vt("outputData",y,n.length,4),C=nt("aData",c,t.length,4),ee=nt("bData",h,r.length,4),J;if(i)if(s){let B=Be.size(t)===1,ie=Be.size(r)===1,ce=t.length>0&&t[t.length-1]%4===0,be=r.length>0&&r[r.length-1]%4===0;B||ie?J=k.setByOffset("global_idx",A(B?`${C.type.value}(${C.getByOffset("0")}.x)`:C.getByOffset("global_idx"),ie?`${ee.type.value}(${ee.getByOffset("0")}.x)`:ee.getByOffset("global_idx"))):J=`
            let outputIndices = ${k.offsetToIndices("global_idx * 4u")};
            let offsetA = ${C.broadcastedIndicesToOffset("outputIndices",k)};
            let offsetB = ${ee.broadcastedIndicesToOffset("outputIndices",k)};
            ${k.setByOffset("global_idx",A(o||ce?C.getByOffset("offsetA / 4u"):`${C.type.value}(${C.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||be?ee.getByOffset("offsetB / 4u"):`${ee.type.value}(${ee.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else J=k.setByOffset("global_idx",A(C.getByOffset("global_idx"),ee.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let B=(ie,ce,be="")=>{let We=`aData[indexA${ce}][componentA${ce}]`,ze=`bData[indexB${ce}][componentB${ce}]`;return`
            let outputIndices${ce} = ${k.offsetToIndices(`global_idx * 4u + ${ce}u`)};
            let offsetA${ce} = ${C.broadcastedIndicesToOffset(`outputIndices${ce}`,k)};
            let offsetB${ce} = ${ee.broadcastedIndicesToOffset(`outputIndices${ce}`,k)};
            let indexA${ce} = offsetA${ce} / 4u;
            let indexB${ce} = offsetB${ce} / 4u;
            let componentA${ce} = offsetA${ce} % 4u;
            let componentB${ce} = offsetB${ce} % 4u;
            ${ie}[${ce}] = ${be}(${x(We,ze)});
          `};y===9?J=`
            var data = vec4<u32>(0);
            ${B("data",0,"u32")}
            ${B("data",1,"u32")}
            ${B("data",2,"u32")}
            ${B("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:J=`
            ${B("outputData[global_idx]",0)}
            ${B("outputData[global_idx]",1)}
            ${B("outputData[global_idx]",2)}
            ${B("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(C,ee,k)}

        ${l??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${J}
      }`},Al=(e,t,r,n,i,s,o=r.dataType)=>{let u=!Be.areEqual(r.dims,n.dims),c=r.dims,h=Be.size(r.dims),y=!1,l=!1,x=[u];if(u){let A=Sn.calcShape(r.dims,n.dims,!1);if(!A)throw new Error("Can't perform binary op on the given tensors");c=A,h=Be.size(c);let k=Be.size(r.dims)===1,C=Be.size(n.dims)===1,ee=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,J=n.dims.length>0&&n.dims[n.dims.length-1]%4===0;x.push(k),x.push(C),x.push(ee),x.push(J);let B=1;for(let ie=1;ie<c.length;ie++){let ce=r.dims[r.dims.length-ie]??1,be=n.dims[n.dims.length-ie]??1;if(ce===be)B*=ce;else break}B%4===0?(l=!0,y=!0):(k||C||ee||J)&&(y=!0)}else y=!0;return x.push(y),{name:e,shaderCache:{hint:t+x.map(A=>A.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:A=>Pl(A,r.dims,n.dims,c,y,u,l,i,r.dataType,n.dataType,o,s),getRunData:()=>({outputs:[{dims:c,dataType:o}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(Be.size(c)/4)},...At(r.dims,n.dims,c)]})}},En=(e,t,r,n,i,s)=>{e.compute(Al(t,i??"",e.inputs[0],e.inputs[1],r,n,s))},Il=e=>{En(e,"Add",(t,r)=>`${t}+${r}`)},Fl=e=>{En(e,"Div",(t,r)=>`${t}/${r}`)},uo=e=>{En(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Ol=e=>{En(e,"Mul",(t,r)=>`${t}*${r}`)},Bl=e=>{let t=nt("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;En(e,"Pow",{scalar:(r,n)=>`pow_custom(${r},${n})`,vector:(r,n)=>`pow_vector_custom(${r},${n})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},co=e=>{En(e,"Sub",(t,r)=>`${t}-${r}`)},zl=e=>{En(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Dl=e=>{En(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},po=e=>{En(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Ll=e=>{En(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),Rl,Nl,ds,jl,Ul,Vl,kd=Q(()=>{er(),Yt(),$r(),cr(),Rl=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,n=e[r],i=n.dataType,s=n.dims.length;e.forEach((o,u)=>{if(u!==r){if(o.dataType!==i)throw new Error("input tensors should be one type");if(o.dims.length!==s)throw new Error("input tensors should have the same shape");o.dims.forEach((c,h)=>{if(h!==t&&c!==n.dims[h])throw new Error("non concat dimensions must match")})}})},Nl=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,ds=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;++i){let s=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?n.push(s):i===0?n.push(`if (inputIndex == ${i}u) { ${s} }`):i===r-1?n.push(`else { ${s} }`):n.push(`else if (inputIndex == ${i}) { ${s} }`)}return n.join(`
`)},jl=(e,t,r,n)=>{let i=Be.size(r),s=new Array(e.length),o=new Array(e.length),u=0,c=[],h=[],y=[{type:12,data:i}];for(let C=0;C<e.length;++C)u+=e[C].dims[t],s[C]=u,h.push(e[C].dims.length),o[C]=nt(`input${C}`,n,h[C]),c.push("rank"),y.push({type:12,data:s[C]});for(let C=0;C<e.length;++C)y.push(...At(e[C].dims));y.push(...At(r));let l=Vt("output",n,r.length),x=l.indicesGet("indices",t),A=Array.from(Array(s.length).keys()).map(C=>`uniforms.sizeInConcatAxis${C}`).join(","),k=C=>`

  ${(()=>{C.registerUniform("outputSize","u32");for(let ee=0;ee<e.length;ee++)C.registerUniform(`sizeInConcatAxis${ee}`,"u32");return C.declareVariables(...o,l)})()}

  ${Nl(s.length,A)}

  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${l.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${x});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${s.length}u>(${A});
      ${x} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${ds(o,l)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:r,dataType:n}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:y}),getShaderSource:k}},Ul=(e,t)=>{let r=e.inputs,n=r[0].dims,i=Be.normalizeAxis(t.axis,n.length);Rl(r,i);let s=n.slice();s[i]=r.reduce((u,c)=>u+(c.dims.length>i?c.dims[i]:0),0);let o=r.filter(u=>Be.size(u.dims)>0);e.compute(jl(o,i,s,r[0].dataType),{inputs:o})},Vl=e=>dr({axis:e.axis})}),Yn,Un,Zn,ho,Vn=Q(()=>{er(),Yt(),Yn=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Un=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Zn=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},ho=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,n]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:n}}else if(t==="Clip"){let[r,n]=e?.activation_params||[kn,Rn];return{activation:t,clipMax:n,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}}),pn,fo,cs=Q(()=>{pn=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},fo=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),mo,_o=Q(()=>{mo=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Wl,Gl,Li,go,ql,Ri,Hl,wo,Ni=Q(()=>{er(),Yt(),cr(),Vn(),cs(),Wl=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,Gl=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Li=(e,t,r="f32",n,i=!1,s=32,o=!1,u=32)=>{let c=t[1]*e[1],h=t[0]*e[0],y=i?c:s,l=i?s:c,x=y/t[0],A=s/t[1];if(!((i&&x===4&&e[1]===4||!i&&(x===3||x===4))&&y%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${x} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${x} must be 3 or 4.
  tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${x}<${r}>, ${y/x}>, ${l}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${s}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${x};
const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${c};

  let num_tiles = ${o?`${Math.ceil(u/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${u}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${A};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Wl(i,n)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${A}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${x===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Gl(i,x)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},go=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,ql=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Ri=(e,t,r="f32",n,i=!1,s=32,o=!1,u=32,c=!1)=>{let h=e[1]*t[1],y=e[0]*t[0],l=i?h:s,x=i?s:h;if(!(x%t[1]===0&&l%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${x} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let A=x/t[1],k=l/t[0],C=s/t[1],ee=c?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${h};
    let globalColStart = i32(workgroupId.x) * ${y};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${x}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {
          ${go(i,n)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${n?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${h};

let tileRowA = i32(localId.y) * ${A};
let tileColA = i32(localId.x) * ${k};
let tileRowB = i32(localId.y) * ${C};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${A}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${k}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${go(i,n)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${C}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${n?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${ql(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${l}>, ${x}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${y}>, ${s}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(u/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${u}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;
    ${ee}
  }
`},Hl=(e,t,r,n,i,s=!1)=>{let[o,u,c]=i,[h,y,l,x]=n,A=yi(o,c),k=yi(u,c),C=fr(n[0].type.tensor),ee=()=>{let B=y.rank,ie=h.rank,ce=`var aIndices: ${y.type.indices};`;for(let be=B-2-1,We=ie-1;be>=0;be--,We--)ce+=`
aIndices[${be}] = ${ie>1?`batchIndices[${We}]`:"batchIndices"};`;return A.forEach(be=>{ce+=`
aIndices[${be}] = 0;`}),ce+=`
aIndices[${B-2}] = u32(row);
                   aIndices[${B-1}] = u32(colIn);`,ce},J=()=>{let B=l.rank,ie=h.rank,ce=`var bIndices: ${l.type.indices};`;for(let be=B-2-1,We=ie-1;be>=0;be--,We--)ce+=`
bIndices[${be}] = ${ie>1?`batchIndices[${We}]`:"batchIndices"};`;return k.forEach(be=>{ce+=`
bIndices[${be}] = 0;`}),ce+=`
bIndices[${B-2}] = u32(row);
                   bIndices[${B-1}] = u32(colIn);`,ce};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${pn(e,C)} {
      var value = ${pn(e,C)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${ee()}
        value = ${y.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${pn(e,C)} {
      var value = ${pn(e,C)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${J()}
        value = ${l.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${pn(e,C)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${s?"bias[colIn]":`${pn(e,C)}(bias[row])`};`:""}
        ${r}
        ${x.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},wo=(e,t,r,n,i=!1,s)=>{let o=e[0].dims,u=e[1].dims,c=o.slice(0,-2),h=u.slice(0,-2),y=n?n.slice(0,-2):r.slice(0,-2),l=Be.size(y),x=o[o.length-2],A=o[o.length-1],k=u[u.length-1],C=A%4===0&&k%4===0,ee=x<=8?[4,1,1]:[4,4,1],J=[8,8,1],B=[Math.ceil(k/J[0]/ee[0]),Math.ceil(x/J[1]/ee[1]),Math.ceil(l/J[2]/ee[2])],ie=C?4:1,ce=[...c,x,A/ie],be=ce.length,We=[...h,A,k/ie],ze=We.length,wt=[l,x,k/ie],Lt=[{type:6,data:x},{type:6,data:k},{type:6,data:A}];Un(t,Lt),Lt.push(...At(y,ce,We));let Dt=["rank","rank"],sr=e.length>2;sr&&(Lt.push(...At(e[2].dims)),Dt.push("rank")),Lt.push(...At(wt));let Qt=or=>{let Tr=y.length,ir=Es("batchDims",e[0].dataType,Tr,1),Ht=fr(e[0].dataType),Mr=nt("a",e[0].dataType,be,ie),br=nt("b",e[1].dataType,ze,ie),Gt=Vt("result",e[0].dataType,wt.length,ie),_r=[Mr,br];if(sr){let Wr=i?ie:1;_r.push(nt("bias",e[2].dataType,e[2].dims.length,Wr))}let Je=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Zn(t,Je);let Et=fr(Gt.type.tensor),pr=Yn(t,Gt.type.value,Et),Ur=Hl(ie,sr,pr,[ir,Mr,br,Gt],[c,h,y],i);return`
  ${or.registerUniforms(Je).registerInternalVariables(ir).declareVariables(..._r,Gt)}
  ${Ur}
  ${C?Li(ee,J,Ht,ir):Ri(ee,J,Ht,ir)}
                   `};return{name:"MatMul",shaderCache:{hint:`${ee};${t.activation};${C};${i}`,inputDependencies:Dt},getRunData:()=>({outputs:[{dims:s?s(r):r,dataType:e[0].dataType}],dispatchGroup:{x:B[0],y:B[1],z:B[2]},programUniforms:Lt}),getShaderSource:Qt}}}),Kl,Xl,Pd=Q(()=>{er(),_(),cr(),Vn(),cs(),_o(),Ni(),Kl=(e,t,r,n,i=!1,s,o=4,u=4,c=4,h="f32")=>{let y=Lt=>{switch(Lt){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Lt} is not supported.`)}},l=Lt=>{switch(Lt){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Lt} is not supported.`)}},x=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,A=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,k=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",C=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",ee=e?"row":"col",J=e?"col":"row",B=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${ee} / outWidth;
    let outCol = ${ee} % outWidth;

    let WRow = ${J} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${J} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${J} % inChannels;
    var resData = ${pn(o,h)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${k} && xCol >= 0 && xCol < ${C}) {
      ${x}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${y(o)}
    }
    return resData;`,ie=e?t&&n?`
    let col = colIn * ${o};
    ${B}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${B}
    }
    return ${pn(o,h)}(0.0);`:n&&r?`
    let col = colIn * ${o};
    ${B}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${B}
    }
    return ${pn(o,h)}(0.0);`,ce=`${l(u)}`,be=pn(c,h),We=pn(e?o:u,h),ze=pn(e?u:o,h),wt=Yn(s,be,h);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${We} {
      ${e?ie:ce}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${ze} {
      ${e?ce:ie}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${be}) {
      let col = colIn * ${c};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${A}
      ${fo(i)}
      ${wt}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Xl=(e,t,r,n,i,s,o,u,c)=>{let h=t.format==="NHWC",y=h?e[0].dims[3]:e[0].dims[1],l=r[0],x=h?r[2]:r[3],A=h?r[1]:r[2],k=h?r[3]:r[1],C=h&&(y%4===0||y%3===0)&&k%4===0,ee=h?k:x*A,J=h?x*A:k,B=[8,8,1],ie=n<=8?[4,1,1]:[4,4,1],ce=[Math.ceil(ee/B[0]/ie[0]),Math.ceil(J/B[1]/ie[1]),Math.ceil(l/B[2]/ie[2])];ye("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${ce}`);let be=C?h&&y%4!==0?3:4:1,We=B[1]*ie[1],ze=B[0]*ie[0],wt=Math.max(B[0]*be,B[1]),Lt=n%We===0,Dt=i%ze===0,sr=s%wt===0,Qt=C?[be,4,4]:[1,1,1],or=[{type:6,data:n},{type:6,data:i},{type:6,data:s},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Un(t,or),or.push(...At(e[0].dims,e[1].dims));let Tr=["rank","rank"];o&&(or.push(...At(e[2].dims)),Tr.push("rank")),or.push(...At(r));let ir=Ht=>{let Mr=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Zn(t,Mr);let br=C?4:1,Gt=fr(e[0].dataType),_r=`
      fn setOutputAtIndex(flatIndex : i32, value : ${C?`vec4<${Gt}>`:Gt}) {
        result[flatIndex] = ${C?`vec4<${Gt}>`:Gt}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${C?`vec4<${Gt}>`:Gt}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${C?"/ 4":""}, value);
      }`,Je=nt("x",e[0].dataType,e[0].dims.length,be===3?1:be),Et=nt("w",e[1].dataType,e[1].dims.length,br),pr=[Je,Et],Ur=Vt("result",e[0].dataType,r.length,br);if(o){let Wr=nt("bias",e[2].dataType,e[2].dims.length,br);pr.push(Wr),_r+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${C?`vec4<${Gt}>`:Gt} {
          return bias[coords.${h?"w":"y"}${C?"/ 4":""}];
        }`}return`
        ${mo("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Ht.registerUniforms(Mr).declareVariables(...pr,Ur)}
        ${_r}
        ${Kl(h,Lt,Dt,sr,o,t,Qt[0],Qt[1],Qt[2],Gt)}
        ${C?Li(ie,B,Gt,void 0,!h,wt):Ri(ie,B,Gt,void 0,!h,wt,!1,void 0,u)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${be};${C};${Lt};${Dt};${sr};${We};${ze};${wt}`,inputDependencies:Tr},getRunData:()=>({outputs:[{dims:c?c(r):r,dataType:e[0].dataType}],dispatchGroup:{x:ce[0],y:ce[1],z:ce[2]},programUniforms:or}),getShaderSource:ir}}}),Ql,yo,ji,bo,Mo,Yl,vo,Zl,Ad=Q(()=>{er(),_(),Yt(),cr(),Vn(),cs(),Ql=e=>{let t=1;for(let r=0;r<e.length;r++)t*=e[r];return t},yo=e=>typeof e=="number"?[e,e,e]:e,ji=(e,t)=>t<=1?e:e+(e-1)*(t-1),bo=(e,t,r,n=1)=>{let i=ji(t,n);return Math.floor((e[0]*(r-1)-r+i)/2)},Mo=(e,t,r,n,i)=>{i==null&&(i=bo(e,t[0],n[0]));let s=[0,0,0,r];for(let o=0;o<3;o++)e[o]+2*i>=t[o]&&(s[o]=Math.trunc((e[o]-t[o]+2*i)/n[o]+1));return s},Yl=(e,t,r,n,i,s,o,u,c,h)=>{let y,l,x,A;if(e==="VALID"&&(e=0),typeof e=="number"){y={top:e,bottom:e,left:e,right:e,front:e,back:e};let k=Mo([t,r,n,1],[u,c,h],1,[i,s,o],e);l=k[0],x=k[1],A=k[2]}else if(Array.isArray(e)){if(!e.every((C,ee,J)=>C===J[0]))throw Error(`Unsupported padding parameter: ${e}`);y={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let k=Mo([t,r,n,1],[u,c,h],1,[i,s,o],e[0]);l=k[0],x=k[1],A=k[2]}else if(e==="SAME_UPPER"){l=Math.ceil(t/i),x=Math.ceil(r/s),A=Math.ceil(n/o);let k=(l-1)*i+u-t,C=(x-1)*s+c-r,ee=(A-1)*o+h-n,J=Math.floor(k/2),B=k-J,ie=Math.floor(C/2),ce=C-ie,be=Math.floor(ee/2),We=ee-be;y={top:ie,bottom:ce,left:be,right:We,front:J,back:B}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:y,outDepth:l,outHeight:x,outWidth:A}},vo=(e,t,r,n,i,s=!1,o="channelsLast")=>{let u,c,h,y,l;if(o==="channelsLast")[u,c,h,y,l]=e;else if(o==="channelsFirst")[u,l,c,h,y]=e;else throw new Error(`Unknown dataFormat ${o}`);let[x,,A,k,C]=t,[ee,J,B]=yo(r),[ie,ce,be]=yo(n),We=ji(A,ie),ze=ji(k,ce),wt=ji(C,be),{padInfo:Lt,outDepth:Dt,outHeight:sr,outWidth:Qt}=Yl(i,c,h,y,ee,J,B,We,ze,wt),or=s?x*l:x,Tr=[0,0,0,0,0];return o==="channelsFirst"?Tr=[u,or,Dt,sr,Qt]:o==="channelsLast"&&(Tr=[u,Dt,sr,Qt,or]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:h,inWidth:y,inChannels:l,outDepth:Dt,outHeight:sr,outWidth:Qt,outChannels:or,padInfo:Lt,strideDepth:ee,strideHeight:J,strideWidth:B,filterDepth:A,filterHeight:k,filterWidth:C,effectiveFilterDepth:We,effectiveFilterHeight:ze,effectiveFilterWidth:wt,dilationDepth:ie,dilationHeight:ce,dilationWidth:be,inShape:e,outShape:Tr,filterShape:t}},Zl=(e,t,r,n,i,s)=>{let o=s==="channelsLast";o?e[0].dims[3]:e[0].dims[1];let u=[64,1,1],c={x:r.map((ee,J)=>J)},h=[Math.ceil(Ql(c.x.map(ee=>r[ee]))/u[0]),1,1];ye("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${h}`);let y=1,l=Be.size(r),x=[{type:12,data:l},{type:12,data:n},{type:12,data:i},{type:12,data:t.strides},{type:12,data:t.dilations}];Un(t,x),x.push(...At(e[0].dims,e[1].dims));let A=["rank","rank"],k=e.length===3;k&&(x.push(...At(e[2].dims)),A.push("rank")),x.push(...At(r));let C=ee=>{let J=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:n.length},{name:"pads",type:"u32",length:i.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];Zn(t,J);let B=1,ie=fr(e[0].dataType),ce=nt("x",e[0].dataType,e[0].dims.length,y),be=nt("W",e[1].dataType,e[1].dims.length,B),We=[ce,be],ze=Vt("result",e[0].dataType,r.length,B),wt="";if(k){let sr=nt("bias",e[2].dataType,e[2].dims.length,B);We.push(sr),wt+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${ie} {
          return bias[${o?Ut("coords",4,5):Ut("coords",1,5)}];
        }`}let Lt=pn(y,ie),Dt=Yn(t,Lt,ie);return`
            ${wt}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${ce.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${be.getByIndices("aIndices")};
            }
          ${ee.registerUniforms(J).declareVariables(...We,ze)}
          ${ee.mainStart()}
          ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${ze.offsetToIndices("global_idx")};
              let batch = ${Ut("coords",0,ce.rank)};
              let d2 = ${o?Ut("coords",ce.rank-1,ce.rank):Ut("coords",1,ce.rank)};
              let xFRCCorner = vec3<u32>(${o?Ut("coords",1,ce.rank):Ut("coords",2,ce.rank)},
              ${o?Ut("coords",2,ce.rank):Ut("coords",3,ce.rank)},
              ${o?Ut("coords",3,ce.rank):Ut("coords",4,ce.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?Ut("uniforms.x_shape",1,ce.rank):Ut("uniforms.x_shape",2,ce.rank)};
              let xShapeZ = ${o?Ut("uniforms.x_shape",2,ce.rank):Ut("uniforms.x_shape",3,ce.rank)};
              let xShapeW = ${o?Ut("uniforms.x_shape",3,ce.rank):Ut("uniforms.x_shape",4,ce.rank)};
              let xShapeU = ${o?Ut("uniforms.x_shape",4,ce.rank):Ut("uniforms.x_shape",1,ce.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${k?"value = value + getBiasByOutputCoords(coords)":""};
              ${Dt}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${o};${y};${k}`,inputDependencies:A},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:h[0],y:h[1],z:h[2]},programUniforms:x}),getShaderSource:C}}}),Jn,Jl,Id=Q(()=>{er(),Yt(),cr(),Vn(),Jn=(e,t,r,n)=>{let i=e.length>2,s=i?"value += b[output_channel];":"",o=e[0].dims,u=e[1].dims,c=t.format==="NHWC",h=c?r[3]:r[1],y=h/t.group,l=c&&y>=4?gr(h):1,x=Be.size(r)/l,A=[{type:12,data:x},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:y}];Un(t,A),A.push(...At(o,[u[0],u[1],u[2],u[3]/l]));let k=i?["rank","rank","rank"]:["rank","rank"];A.push(...At([r[0],r[1],r[2],r[3]/l]));let C=ee=>{let J=Vt("output",e[0].dataType,r.length,l),B=fr(J.type.tensor),ie=Yn(t,J.type.value,B),ce=nt("x",e[0].dataType,o.length),be=nt("w",e[1].dataType,u.length,l),We=[ce,be];i&&We.push(nt("b",e[2].dataType,e[2].dims,l));let ze=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Zn(t,ze);let wt=c?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${ce.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${be.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${ce.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${be.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${ee.registerUniforms(ze).declareVariables(...We,J)}

  ${ee.mainStart()}
    ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${J.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${c?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${c?1:2}], outputIndices[${c?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${l} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${c?2:1}];

    var value: ${J.type.value} = ${J.type.value}(0);
    ${wt}
    ${s}
    ${ie}
    ${J.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${l}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(x/64)},programUniforms:A}),getShaderSource:C}},Jl=(e,t,r,n)=>{let i=e.length>2,s=gr(r[3]),o=gr(r[2]),u=Be.size(r)/s/o,c=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/s],h=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/s],y=[r[0],r[1],r[2],r[3]/s],l=[{type:12,data:u},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];Un(t,l),l.push(...At(c,h,y));let x=(o-1)*t.strides[1]+h[1],A=k=>{let C=Vt("output",e[0].dataType,y.length,s),ee=fr(C.type.tensor),J=Yn(t,C.type.value,ee),B=nt("x",e[0].dataType,c.length,s),ie=nt("w",e[1].dataType,h.length,s),ce=[B,ie];i&&ce.push(nt("b",e[2].dataType,e[2].dims,s));let be=i?"value += b[output_channel];":"",We=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Zn(t,We),`
  ${k.registerUniforms(We).declareVariables(...ce,C)}
  ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${B.type.value}, ${x}>;
    var values: array<${C.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${h[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${x}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${B.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${B.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${h[1]}; w_width++) {
          let w_val = ${ie.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${be}
      ${J}
      ${C.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${s};${o};${x};${h[0]};${h[1]}`,inputDependencies:i?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:A}}}),xo,eu,To,tu=Q(()=>{er(),Yt(),Ni(),cr(),Vn(),xo=(e,t,r,n,i=!1,s)=>{let o=e[0].dims,u=e[1].dims,c=o[o.length-2],h=u[u.length-1],y=o[o.length-1],l=gr(h),x=gr(y),A=gr(c),k=Be.size(r)/l/A,C=e.length>2,ee=n?n.slice(0,-2):r.slice(0,-2),J=[Be.size(ee),c,h],B=[{type:12,data:k},{type:12,data:c},{type:12,data:h},{type:12,data:y}];Un(t,B),B.push(...At(ee,o,u)),C&&B.push(...At(e[2].dims)),B.push(...At(J));let ie=ce=>{let be=Es("batch_dims",e[0].dataType,ee.length),We=nt("a",e[0].dataType,o.length,x),ze=nt("b",e[1].dataType,u.length,l),wt=Vt("output",e[0].dataType,J.length,l),Lt=fr(wt.type.tensor),Dt=Yn(t,wt.type.value,Lt),sr=[We,ze],Qt="";if(C){let _r=i?l:1;sr.push(nt("bias",e[2].dataType,e[2].dims.length,_r)),Qt=`${i?`value += bias[col / ${_r}];`:`value += ${wt.type.value}(bias[row + i]);`}`}let or=o.slice(0,-2),Tr=u.slice(0,-2),ir=yi(or,ee),Ht=yi(Tr,ee),Mr=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Zn(t,Mr);let br=(_r,Je)=>{let Et=_r.rank,pr=_r.name;if(Et===2)return`var ${pr}_indices = ${_r.type.indices}(0u, 0u);`;let Ur=be.rank,Wr=`var ${pr}_indices: ${_r.type.indices};`;for(let Gn=Et-2-1,zn=Ur-1;Gn>=0;Gn--,zn--)Wr+=`
${pr}_indices[${Gn}] = ${Ur>1?`batch_indices[${zn}]`:"batch_indices"};`;return Je.forEach(Gn=>{Wr+=`
${pr}_indices[${Gn}] = 0;`}),Wr+=`${pr}_indices[${Et-2}] = 0u;
                     ${pr}_indices[${Et-1}] = 0u;`,Wr},Gt=()=>{let _r=`var a_data: ${We.type.value};`;for(let Je=0;Je<x;Je++)_r+=`
              let b_data${Je} = b[(b_offset + (k + ${Je}) * uniforms.N + col) / ${l}];`;for(let Je=0;Je<A;Je++){_r+=`a_data = a[(a_offset + (row + ${Je}) * uniforms.K + k) / ${x}];`;for(let Et=0;Et<x;Et++)_r+=`
            values[${Je}] = fma(${ze.type.value}(a_data${x===1?"":`[${Et}]`}), b_data${Et}, values[${Je}]);
`}return _r};return`
  ${ce.registerUniforms(Mr).registerInternalVariables(be).declareVariables(...sr,wt)}
  ${ce.mainStart()}
    ${ce.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${l})) * ${l};
    var index1 = global_idx / (uniforms.N / ${l});
    let stride1 = uniforms.M / ${A};
    let row = (index1 % stride1) * ${A};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${be.offsetToIndices("batch")};`}
    ${br(We,ir)}
    let a_offset = ${We.indicesToOffset("a_indices")};
    ${br(ze,Ht)}
    let b_offset = ${ze.indicesToOffset("b_indices")};
    var values: array<${wt.type.value}, ${A}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${x}) {
      ${Gt()}
    }
    for (var i = 0u; i < ${A}u; i++) {
      var value = values[i];
      ${Qt}
      ${Dt}
      let cur_indices = ${wt.type.indices}(batch, row + i, col);
      let offset = ${wt.indicesToOffset("cur_indices")};
      ${wt.setByOffset(`offset / ${l}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${l};${x};${A};${i}`,inputDependencies:C?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:B}),getShaderSource:ie}},eu=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},To=e=>{eu(e.inputs);let t=Sn.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],n=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&n<8?e.compute(xo(e.inputs,{activation:""},t)):e.compute(wo(e.inputs,{activation:""},t))}}),ru,ps,nu,Mi,Eo,Co,iu,Ui,$o,Fd=Q(()=>{Yt(),Pd(),Ad(),Ni(),Id(),Vn(),tu(),jn(),ru=(e,t,r,n,i,s)=>{let o=e[0],u=e.slice(s?1:2,s?3:4),c=u.length,h=t[0],y=t.slice(2).map((x,A)=>x+(x-1)*(r[A]-1)),l=u.map((x,A)=>x+n[A]+n[A+c]).map((x,A)=>Math.floor((x-y[A]+i[A])/i[A]));return l.splice(0,0,o),l.splice(s?3:1,0,h),l},ps=[2,3,1,0],nu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[1]*t.group;if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Mi=(e,t)=>{let r=e.kernelShape.slice();r.length<t[1].dims.length-2&&r.push(...Array(t[1].dims.length-2-r.length).fill(0));for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let n=e.pads.slice();Zr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,n,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:n}),i},Eo=e=>{let t=ho(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,s=e.group,o=e.kernel_shape,u=e.pads,c=e.strides,h=e.w_is_const();return{autoPad:n,format:r,dilations:i,group:s,kernelShape:o,pads:u,strides:c,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},Co=(e,t,r,n)=>{let i=r.format==="NHWC",s=ru(t[0].dims,t[1].dims,r.dilations,r.pads,r.strides,i);if(r.group!==1){let We=[t[0]];if(i){let ze=e.kernelCustomData.wT??e.compute(Mn(t[1],ps),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=ze),We.push(ze)}else We.push(t[1]);t.length===3&&We.push(t[2]),!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1?e.compute(Jl(We,r,s,n),{inputs:We}):e.compute(Jn(We,r,s,n),{inputs:We});return}let o=t.length===3,u=t[0].dims[i?1:2],c=t[0].dims[i?2:3],h=t[0].dims[i?3:1],y=t[1].dims[2],l=t[1].dims[3],x=s[i?1:2],A=s[i?2:3],k=s[i?3:1],C=i&&y===u&&l===c&&r.pads[0]===0&&r.pads[1]===0;if(C||y===1&&l===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let We=s[0],ze,wt,Lt,Dt=[];if(i){let or=e.kernelCustomData.wT??e.compute(Mn(t[1],ps),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=or),C){let Tr=u*c*h;ze=t[0].reshape([1,We,Tr]),wt=or.reshape([1,Tr,k]),Lt=[1,We,k]}else ze=t[0].reshape([We,u*c,h]),wt=or.reshape([1,h,k]),Lt=[We,x*A,k];Dt.push(ze),Dt.push(wt)}else ze=t[0].reshape([We,h,u*c]),wt=t[1].reshape([1,k,h]),Lt=[We,k,x*A],Dt.push(wt),Dt.push(ze);o&&Dt.push(t[2]);let sr=Lt[2],Qt=Dt[0].dims[Dt[0].dims.length-1];sr<8&&Qt<8?e.compute(xo(Dt,r,s,Lt,i,n),{inputs:Dt}):e.compute(wo(Dt,r,s,Lt,i,n),{inputs:Dt});return}let ee=!0,J=e.kernelCustomData.wT??e.compute(Mn(t[1],ps),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=J);let B=[t[0],J];o&&B.push(t[2]);let ie=i?x*A:k,ce=i?k:x*A,be=y*l*h;e.compute(Xl(B,r,s,ie,ce,be,o,ee,n),{inputs:B})},iu=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),o=[1].concat(t.dilations),u=[1].concat(t.kernelShape),c=Mi({...t,pads:i,strides:s,dilations:o,kernelShape:u},n);Co(e,n,c,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]])},Ui=(e,t,r)=>{let n=r.format==="NHWC"?"channelsLast":"channelsFirst",i=Mi(r,t),s=r.autoPad==="NOTSET"?r.pads:r.autoPad,o=vo(t[0].dims,t[1].dims,r.strides,r.dilations,s,!1,n);e.compute(Zl(t,i,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],n))},$o=(e,t)=>{if(nu(e.inputs,t),e.inputs[0].dims.length===3)iu(e,t);else if(e.inputs[0].dims.length===5)Ui(e,e.inputs,t);else{let r=Mi(t,e.inputs);Co(e,e.inputs,r)}}}),su,ou,So=Q(()=>{er(),_(),cr(),Vn(),cs(),_o(),Ni(),su=(e,t=!1,r,n,i=4)=>{let s=ee=>{switch(ee){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${n}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${ee} is not supported.`)}},o=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,u=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,c=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",y=e?"row":"col",l=e?"col":"row",x=`
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${y} / outWidth;
      let outCol = ${y} % outWidth;

      let WRow = ${l} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${l} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${c}) || fract(xR) > 0.0) {
        return ${n}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {
        return ${n}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${l} % inChannels;
      ${o}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${i}];`,A=e?`
      let col = colIn * ${i};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${x}
      }
      return ${n}(0.0);`:`
      let col = colIn * ${i};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${x}
      }
      return ${n}(0.0);`,k=`
      let col = colIn * ${i};
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${s(i)}
      }
      return ${n}(0.0);
      `,C=Yn(r,n);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${e?A:k}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${e?k:A}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${n}) {
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${u}
      ${fo(t)}
      ${C}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${i}] = value;
    }
  }`},ou=(e,t,r,n,i,s,o,u)=>{let c=t.format==="NHWC",h=c?e[0].dims[3]:e[0].dims[1],y=r[0],l=c?r[2]:r[3],x=c?r[1]:r[2],A=c?r[3]:r[1],k=c&&h%4===0&&h%3&&A%4===0,C=c?A:l*x,ee=c?l*x:A,J=[8,8,1],B=n<=8?[4,1,1]:[4,4,1],ie=[Math.ceil(C/J[0]/B[0]),Math.ceil(ee/J[1]/B[1]),Math.ceil(y/J[2]/B[2])];ye("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${ie}`);let ce=k?4:1,be=Math.max(J[0]*ce,J[1]),We=k?4:1,ze=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],wt=[ze[0]+(t.dilations[0]<=1?0:(ze[0]-1)*(t.dilations[0]-1)),ze[1]+(t.dilations[1]<=1?0:(ze[1]-1)*(t.dilations[1]-1))],Lt=[wt[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),wt[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],Dt=[{type:6,data:n},{type:6,data:i},{type:6,data:s},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:ze},{type:6,data:Lt}];Un(t,Dt),Dt.push(...At(e[0].dims,e[1].dims));let sr=["rank","rank"];o&&(Dt.push(...At(e[2].dims)),sr.push("rank")),Dt.push(...At(r));let Qt=or=>{let Tr=nt("x",e[0].dataType,e[0].dims.length,We),ir=nt("w",e[1].dataType,e[1].dims.length,1),Ht=Vt("result",e[0].dataType,r.length,We),Mr=[Tr,ir],br="";if(o){let Je=nt("bias",e[2].dataType,e[2].dims.length,We);Mr.push(Je),br+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${Je.type.value} {
            return bias[coords.${c?"w":"y"}${k?"/ 4":""}];
          }`}let Gt=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:ze.length},{name:"pads",type:"i32",length:Lt.length}];Zn(t,Gt);let _r=fr(e[0].dataType,1);if(_r!=="f16"&&_r!=="f32")throw new Error(`elemType ${_r} is not supported.`);return`
        ${mo("uniforms.result_strides")}
        ${or.registerUniforms(Gt).declareVariables(...Mr,Ht)};
        ${br}
        ${su(c,o,t,Tr.type.value,ce)}
        ${k?Li(B,J,_r,void 0,!c,be):Ri(B,J,_r,void 0,!c,be,!1,void 0,u)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${B};${J};${k}`,inputDependencies:sr},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:ie[0],y:ie[1],z:ie[2]},programUniforms:Dt}),getShaderSource:Qt}}}),au,ko,Od=Q(()=>{er(),_(),Yt(),cr(),au=(e,t,r,n,i,s=!1,o,u,c=!1)=>{let h=c?1:2,y=c?2:3,l=c?3:1,x=s?2:1,A=`
  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${o}>`:o}) {
    result[flatIndex] = ${s?`vec4<${o}>`:o}(value);
  }`;n&&(A+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${o}>`:o} {
      return bias[coords.${c?"w":"y"}${s?"/ 4":""}];
    }`);let k=s?4:1,C=nt("W",t[1].dataType,t[1].dims.length,k),ee=nt("Dy",t[0].dataType,t[0].dims.length,k),J=[ee,C];n&&J.push(nt("bias",t[2].dataType,[r[l]].length,k));let B=Vt("result",t[0].dataType,r.length,k),ie=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${x};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${o}>, ${x}>;
        for (var i = 0; i < ${x}; i++) {
          dotProd[i] = vec4<${o}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${o}(dyCorner.x) + ${o}(wR)) / ${o}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${o}(dyCorner.y) + ${o}(wC)) / ${o}(uniforms.strides.y);
            let dyC2 = (${o}(dyCorner.y) + 1.0 + ${o}(wC)) / ${o}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${ee.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${ee.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${o}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${l}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${ee.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${ee.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${x}; i = i + 1) {
          let value = dotProd[i] + ${n?"bias[c+i]":`vec4<${o}>(0.0)`};
          ${B.set("batch","r","c + i","d1","value")};
        }
      }`,ce=`
          let outputIndices = ${B.offsetToIndices("global_idx")};
          let batch = ${B.indicesGet("outputIndices",0)};
          let d1 = ${B.indicesGet("outputIndices",l)};
          let r = ${B.indicesGet("outputIndices",h)};
          let c = ${B.indicesGet("outputIndices",y)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${o}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${o}(dyRCorner) + ${o}(wR)) / ${o}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${o}(dyCCorner) + ${o}(wC)) / ${o}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[${y}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${c?ee.get("batch","idyR","idyC","inputChannel"):ee.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${C.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${n?"bias[d1]":`${o}(0.0)`};
          ${B.setByOffset("global_idx","value")};
        `;return`
  ${e.registerUniforms(u).declareVariables(...J,B)}
  ${A}

    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${s?ie:ce}}`},ko=(e,t,r)=>{let n=e.length>2,i=t.outputShape,s=Be.size(i),o=[Math.ceil(s/64),1,1];ye("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${o}`);let u=t.format==="NHWC",c=["rank","rank"],h=[t.strides[0],t.strides[1]],y=[t.kernelShape[u?1:2],t.kernelShape[u?2:3]],l=[t.dilations[0],t.dilations[1]],x=[y[0]+(t.dilations[0]<=1?0:(t.kernelShape[u?1:2]-1)*(t.dilations[0]-1)),y[1]+(t.dilations[1]<=1?0:(t.kernelShape[u?2:3]-1)*(t.dilations[1]-1))],A=[x[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),x[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],k=!1,C=t.group,ee=e[1].dims,J=ee[0]/C,B=ee[1],ie=[{type:12,data:s},{type:12,data:h},{type:12,data:y},{type:12,data:l},{type:12,data:x},{type:6,data:A},{type:12,data:J},{type:12,data:B},...At(e[0].dims,e[1].dims)];n&&(ie.push(...At(e[2].dims)),c.push("rank")),ie.push(...At(i));let ce=o[1]===1&&o[2]===1,be=We=>{let ze=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:y.length},{name:"dilations",type:"u32",length:y.length},{name:"effective_filter_dims",type:"u32",length:x.length},{name:"pads",type:"i32",length:A.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],wt=fr(e[0].dataType);return`${au(We,e,i,n,ce,k,wt,ze,u)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:c},getRunData:()=>({dispatchGroup:{x:o[0],y:o[1],z:o[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:ie}),getShaderSource:be}}}),Bd,lu,uu,Po,vi,du,cu,pu,hu,fu,Ao=Q(()=>{So(),Od(),Vn(),jn(),Bd=(e,t,r,n,i,s)=>(e-1)*t+r+(n-1)*i+1-s,lu=(e,t,r,n,i)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[n]=s,r[i]=e-s):t==="SAME_LOWER"&&(r[n]=e-s,r[i]=s)},uu=(e,t,r,n,i,s,o,u,c,h)=>{let y=e.length-2,l=h.length===0;c.length<y&&c.push(...Array(y-c.length).fill(0));let x=e[0],A=t[u?3:1]*i;for(let k=0,C=e.length-y-(u?1:0);k<y;++k,++C){let ee=e[C],J=l?ee*o[k]:h[k],B=Bd(ee,o[k],s[k],t[C],r[k],J);lu(B,n,s,k,k+y),l&&h.push(o[k]*(ee-1)+c[k]+(t[C]-1)*r[k]+1-s[k]-s[k+y])}h.splice(0,0,x),h.splice(u?3:1,0,A)},Po=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((l,x)=>l*x,1)===0){r.length=0;for(let l=2;l<t[1].dims.length;++l)r.push(t[1].dims[l])}let n=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(n?3:1,0,t[1].dims[1]);let i=e.pads.slice(),s=e.outputShape.slice(),o=e.outputPadding.slice(),u=t[0].dims,c=e.dilations.slice();if(c.reduce((l,x)=>l+x,0)===0){let l=t[0].dims.length-2;c=new Array(l).fill(1)}let h=e.strides.slice();if(h.reduce((l,x)=>l+x,0)===0){let l=t[0].dims.length-2;h=new Array(l).fill(1)}uu(u,r,c,e.autoPad,e.group,i,h,n,o,s);let y=Object.assign({},e);return Object.assign(y,{kernelShape:r,pads:i,outputPadding:o,outputShape:s,dilations:c,strides:h}),y},vi=e=>{let t=ho(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,s=e.group,o=e.kernelShape,u=e.pads,c=e.strides,h=e.wIsConst(),y=e.outputPadding,l=e.outputShape;return{autoPad:n,format:r,dilations:i,group:s,kernelShape:o,outputPadding:y,outputShape:l,pads:u,strides:c,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},du=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[0];if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((o,u)=>o+u,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((o,u)=>o+u,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((o,u)=>o+u,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((o,u)=>o+u,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},cu=[2,3,1,0],pu=(e,t,r)=>{let n=Po(r,t),i=r.format==="NHWC",s=n.outputShape,o=s[i?3:1],u=t[0].dims[i?3:1];if(n.group!==1||o===1&&u===1){e.compute(ko(t,n));return}let c=s[i?1:2],h=s[i?2:3],y=t[1].dims[2],l=t[1].dims[3],x=i?c*h:o,A=i?o:c*h,k=y*l*u,C=!0,ee=e.kernelCustomData.wT??e.compute(Mn(t[1],cu),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=ee);let J=[t[0],ee],B=t.length===3;B&&(!i&&t[2].dims.length===1?J.push(t[2].reshape([t[2].dims[0],1,1])):J.push(t[2])),e.compute(ou(J,n,s,x,A,k,B,C),{inputs:J})},hu=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let o=t.strides;(o.length===0||o[0]===0)&&(o=[1]);let u=t.pads;u.length===0&&(u=[0,0]),u=[0,u[0],0,u[1]],o=[1].concat(o),s=[1].concat(s),i=[1].concat(i);let c=Po({...t,pads:u,strides:o,dilations:s,kernelShape:i},n);e.compute(ko(n,c,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},fu=(e,t)=>{du(e.inputs,t),e.inputs[0].dims.length===3?hu(e,t):pu(e,e.inputs,t)}}),zd,mu,_u,Dd=Q(()=>{er(),Yt(),$r(),cr(),zd=(e,t,r,n)=>{let i=Be.size(t),s=t.length,o=nt("input",e,s),u=Vt("output",e,s),c=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=Be.normalizeAxis(c,s),y=l=>{let x=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,A=Ut("uniforms.input_shape","uniforms.axis",s),k=n.reverse?x+(n.exclusive?" + 1":""):"0",C=n.reverse?A:x+(n.exclusive?"":" + 1");return`
                ${l.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,u)}
                ${l.mainStart()}
                  ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${u.offsetToIndices("global_idx")};
                  var sum = ${u.type.value}(0);
                  let first : i32 = ${k};
                  let last : i32 = ${C};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${u.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:h},...At(t,t)]}),getShaderSource:y}},mu=(e,t)=>{let r=e.inputs[0].dims,n=e.inputs[0].dataType,i=e.inputs[1];e.compute(zd(n,r,i,t),{inputs:[0]})},_u=e=>{let t=e.exclusive===1,r=e.reverse===1;return dr({exclusive:t,reverse:r})}}),gu,wu,Io,yu,bu,Mu=Q(()=>{er(),Yt(),$r(),cr(),gu=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},wu=(e,t,r,n)=>{let i=[];i.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let s=0;s<t;++s)i.push(r.indicesSet("a",e[s],`i[${s}]`));return i.push("return a;}"),i.join(`
`)},Io=(e,t)=>{let r,n,i,s,o,u,c=t.format==="NHWC",h=t.blocksize,y=t.mode==="DCR";c?([r,n,i,s]=e.dims,o=y?[r,n,i,h,h,s/h**2]:[r,n,i,s/h**2,h,h],u=y?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,n,i,s]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],o=y?[r,h,h,s/h**2,n,i]:[r,s/h**2,h,h,n,i],u=y?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let l=e.reshape(o),x=l.dims.length,A=e.dataType,k=nt("a",A,x),C=Vt("output",A,x),ee=J=>`
  ${J.registerUniform("output_size","u32").declareVariables(k,C)}

  ${wu(u,x,k,C)}

  ${J.mainStart()}
    ${J.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${C.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${C.setByOffset("global_idx",k.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:J=>{let B=c?[r,n*h,i*h,s/h**2]:[r,s/h**2,n*h,i*h],ie=Be.size(B),ce=l.dims,be=Be.sortBasedOnPerm(ce,u);return{outputs:[{dims:B,dataType:J[0].dataType}],dispatchGroup:{x:Math.ceil(ie/64)},programUniforms:[{type:12,data:ie},...At(ce,be)]}},getShaderSource:ee}},yu=(e,t)=>{gu(e.inputs),e.compute(Io(e.inputs[0],t))},bu=e=>dr({blocksize:e.blocksize,mode:e.mode,format:e.format})}),hs,Vi,fs,vu,xu,ms,Tu,Fo,Eu,Cu,Oo,Bo=Q(()=>{er(),Yt(),$r(),cr(),hs="[a-zA-Z]|\\.\\.\\.",Vi="("+hs+")+",fs="^"+Vi+"$",vu="("+Vi+",)*"+Vi,xu="^"+vu+"$",ms=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let r=this.symbolToIndices.get(e);r===void 0?r=[t]:r.push(t),this.symbolToIndices.set(e,r)}},Tu=class{constructor(e,t){this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,n]=t.includes("->")?t.split("->",2):[t,""];if(!r.match(RegExp(xu)))throw new Error("Invalid LHS term");if(r.split(",").forEach((i,s)=>{let o=e[s].dims.slice();if(!i.match(RegExp(fs)))throw new Error("Invalid LHS term");let u=this.processTerm(i,!0,o,s);this.lhs.push(u)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([i,s])=>s.count===1||i==="...").map(([i])=>i).join("");else if(!n.match(RegExp(Vi)))throw new Error("Invalid RHS");n.match(RegExp(hs,"g"))?.forEach(i=>{if(i==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let s=this.symbolToInfo.get(i);if(s===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(s.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(e,t,r){let n=this.symbolToInfo.get(e);if(n!==void 0){if(n.dimValue!==t&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(r)}else n={count:1,dimValue:t,inputIndices:[r]};this.symbolToInfo.set(e,n)}processTerm(e,t,r,n=-1){let i=r.length,s=!1,o=[],u=0;if(!e.match(RegExp(fs))&&!t&&e!=="")throw new Error("Invalid LHS term");let c=e.match(RegExp(hs,"g")),h=new ms(n);return c?.forEach((y,l)=>{if(y==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let x=i-c.length+1;if(x<0)throw new Error("Ellipsis out of bounds");if(o=r.slice(u,u+x),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=o;else throw new Error("Ellipsis must be specified in the LHS");for(let A=0;A<o.length;A++){let k=String.fromCharCode(48+A);h.addSymbol(k,l+A),this.addSymbol(k,r[u++],n)}}else h.addSymbol(y,l+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,r[u++],n)}),h}},Fo=e=>e+"_max",Eu=(e,t,r,n)=>{let i=e.map(h=>h.length).map((h,y)=>nt(`input${y}`,t,h)),s=Be.size(n),o=Vt("output",t,n.length),u=[...r.symbolToInfo.keys()].filter(h=>!r.rhs.symbolToIndices.has(h)),c=h=>{let y=[],l="var prod = 1.0;",x="var sum = 0.0;",A="sum += prod;",k=[],C=[],ee=[],J=[],B=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((ce,be)=>{if(r.rhs.symbolToIndices.has(be)){let We=r.rhs.symbolToIndices.get(be)?.[0];We!==void 0&&r.lhs.forEach((ze,wt)=>{if(ce.inputIndices.includes(wt)){let Lt=ze.symbolToIndices.get(be);if(Lt===void 0)throw new Error("Invalid symbol error");Lt.forEach(Dt=>{y.push(`${i[wt].indicesSet(`input${wt}Indices`,Dt,o.indicesGet("outputIndices",We))}`)})}})}else r.lhs.forEach((We,ze)=>{if(ce.inputIndices.includes(ze)){let wt=We.symbolToIndices.get(be);if(wt===void 0)throw new Error("Invalid symbol error");wt.forEach(Lt=>{k.push(`${i[ze].indicesSet(`input${ze}Indices`,Lt,`${be}`)}`)}),J.push(`prod *= ${i[ze].getByIndices(`input${ze}Indices`)};`)}}),C.push(`for(var ${be}: u32 = 0; ${be} < uniforms.${Fo(be)}; ${be}++) {`),ee.push("}")});let ie=B?[...y,`let sum = ${i.map((ce,be)=>ce.getByIndices(`input${be}Indices`)).join(" * ")};`]:[...y,x,...C,...k,l,...J,A,...ee];return`
            ${h.registerUniforms(u.map(ce=>({name:`${Fo(ce)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,o)}

            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${i.map((ce,be)=>`var input${be}Indices: ${i[be].type.indices};`).join(`
`)}
            ${ie.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let h=u.filter(l=>r.symbolToInfo.has(l)).map(l=>({type:12,data:r.symbolToInfo.get(l)?.dimValue||0}));h.push({type:12,data:s});let y=e.map((l,x)=>[...At(l)]).reduce((l,x)=>l.concat(x),h);return y.push(...At(n)),{outputs:[{dims:n,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:y}},getShaderSource:c}},Cu=(e,t)=>{let r=new Tu(e.inputs,t.equation),n=r.outputDims,i=e.inputs.map((s,o)=>s.dims);e.compute(Eu(i,e.inputs[0].dataType,r,n))},Oo=e=>{let t=e.equation.replace(/\s+/g,"");return dr({equation:t})}}),Ld,zo,$u,Do,Su,Rd=Q(()=>{er(),Yt(),cr(),Ld=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;n<r.length&&i<t.length;++n,++i)if(r[n]!==t[i]&&r[n]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},zo=(e,t)=>{let r=e.length-t.length,n=[];for(let i=0;i<r;++i)n.push(e[i]);for(let i=0;i<t.length;++i)n.push(t[i]===1?e[i+r]:t[i]);return n},$u=(e,t)=>e.length>t.length?zo(e,t):zo(t,e),Do=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=$u(t,r),i=e[0].dataType,s=i===9?4:1,o=Math.ceil(Be.size(n)/s),u=h=>{let y=nt("input",i,t.length,s),l=Vt("output",i,n.length,s),x;if(i===9){let A=(k,C,ee="")=>`
          let outputIndices${C} = ${l.offsetToIndices(`outputOffset + ${C}u`)};
          let offset${C} = ${y.broadcastedIndicesToOffset(`outputIndices${C}`,l)};
          let index${C} = offset${C} / 4u;
          let component${C} = offset${C} % 4u;
          ${k}[${C}] = ${ee}(${y.getByOffset(`index${C}`)}[component${C}]);
        `;x=`
        let outputOffset = global_idx * ${s};
        var data = vec4<u32>(0);
        ${A("data",0,"u32")}
        ${A("data",1,"u32")}
        ${A("data",2,"u32")}
        ${A("data",3,"u32")}
        ${l.setByOffset("global_idx","data")}
      }`}else x=`
        let outputIndices = ${l.offsetToIndices("global_idx")};
        let inputOffset = ${y.broadcastedIndicesToOffset("outputIndices",l)};
        ${l.setByOffset("global_idx",y.getByOffset("inputOffset"))}
      }`;return`
    ${h.registerUniform("vec_size","u32").declareVariables(y,l)}
    ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${x}`},c=[{type:12,data:o},...At(t,n)];return{name:"Expand",shaderCache:{hint:`${n.length}`,inputDependencies:["rank"]},getShaderSource:u,getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:c})}},Su=e=>{Ld(e.inputs),e.compute(Do(e.inputs),{inputs:[0]})}}),Lo,ku,Nd=Q(()=>{er(),Yt(),cr(),ao(),Lo=e=>{let t=e[0].dataType,r=Be.size(e[0].dims),n=Be.size(e[1].dims),i=n%4===0,s=o=>{let u=nt("x",t,[1],4),c=nt("bias",t,[1],4),h=Vt("y",t,[1],4),y=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],l=A=>`
      let bias${A}_offset: u32 = (global_idx * 4 + ${A}) % uniforms.bias_size;
      let bias${A} = ${c.getByOffset(`bias${A}_offset / 4`)}[bias${A}_offset % 4];`,x=i?`
      let bias = ${c.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${l(0)}${l(1)}${l(2)}${l(3)}
      let bias = ${u.type.value}(bias0, bias1, bias2, bias3);`;return`${o.registerUniforms(y).declareVariables(u,c,h)}

    ${so(Fr(t))}

    ${o.mainStart(cn)}
      ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${u.getByOffset("global_idx")};
      ${x}
      let x_in = x + bias;
      ${h.setByOffset("global_idx",us("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:s,getRunData:o=>({outputs:[{dims:o[0].dims,dataType:o[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:n}],dispatchGroup:{x:Math.ceil(r/cn/4)}})}},ku=e=>{e.inputs.length<2||Be.size(e.inputs[1].dims)===0?vl(e):e.compute(Lo(e.inputs))}}),Ro,jd,Ud,No,Pu=Q(()=>{er(),Yt(),$r(),cr(),Ro=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},jd=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,s=Be.normalizeAxis(t.axis,i),o=r.slice(0);o.splice(s,1,...n);let u=r[s],c=e[0].dataType===9?4:1,h=Math.ceil(Be.size(o)/c),y=[{type:12,data:h},{type:6,data:u},{type:12,data:s},...At(e[0].dims,e[1].dims,o)],l=x=>{let A=nt("data",e[0].dataType,e[0].dims.length,c),k=nt("inputIndices",e[1].dataType,e[1].dims.length),C=Vt("output",e[0].dataType,o.length,c),ee=B=>{let ie=n.length,ce=`var indicesIndices${B}  = ${k.type.indices}(0);`;for(let be=0;be<ie;be++)ce+=`${ie>1?`indicesIndices${B}[${be}]`:`indicesIndices${B}`} = ${o.length>1?`outputIndices${B}[uniforms.axis + ${be}]`:`outputIndices${B}`};`;ce+=`
          var idx${B} = ${k.getByIndices(`indicesIndices${B}`)};
          if (idx${B} < 0) {
            idx${B} = idx${B} + uniforms.axisDimLimit;
          }
          var dataIndices${B} : ${A.type.indices};
        `;for(let be=0,We=0;be<i;be++)be===s?(ce+=`${i>1?`dataIndices${B}[${be}]`:`dataIndices${B}`} = u32(idx${B});`,We+=ie):(ce+=`${i>1?`dataIndices${B}[${be}]`:`dataIndices${B}`} = ${o.length>1?`outputIndices${B}[${We}]`:`outputIndices${B}`};`,We++);return ce},J;if(e[0].dataType===9){let B=(ie,ce,be="")=>`
          let outputIndices${ce} = ${C.offsetToIndices(`outputOffset + ${ce}u`)};
          ${ee(ce)};
          let offset${ce} = ${A.indicesToOffset(`dataIndices${ce}`)};
          let index${ce} = offset${ce} / 4u;
          let component${ce} = offset${ce} % 4u;
          ${ie}[${ce}] = ${be}(${A.getByOffset(`index${ce}`)}[component${ce}]);
        `;J=`
        let outputOffset = global_idx * ${c};
        var value = vec4<u32>(0);
        ${B("value",0,"u32")}
        ${B("value",1,"u32")}
        ${B("value",2,"u32")}
        ${B("value",3,"u32")}
        ${C.setByOffset("global_idx","value")}
      `}else J=`
      let outputIndices = ${C.offsetToIndices("global_idx")};
      ${ee("")};
      let value = ${A.getByIndices("dataIndices")};
      ${C.setByOffset("global_idx","value")};
      `;return`
      ${x.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(A,k,C)}
      ${x.mainStart()}
        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${J}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:y}),getShaderSource:l}},Ud=e=>dr({axis:e.axis}),No=(e,t)=>{let r=e.inputs;Ro(r),e.compute(jd(e.inputs,t))}}),Au,Iu,jo,Fu,Vd=Q(()=>{er(),Yt(),$r(),cr(),Au=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let r=Be.normalizeAxis(t.quantizeAxis,e[0].dims.length),n=t.blockSize,i=e[0],s=e[2],o=e.length===4?e[3]:void 0;if(s.dims.length!==i.dims.length||!i.dims.map((u,c)=>c===r?Math.ceil(u/n)===s.dims[c]:u===s.dims[c]).reduce((u,c)=>u&&c,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==i.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==s.dims.length||!o.dims.map((u,c)=>u===s.dims[c]).reduce((u,c)=>u&&c,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Iu=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,s=Be.normalizeAxis(t.gatherAxis,i),o=Be.normalizeAxis(t.quantizeAxis,i),u=r.slice(0);u.splice(s,1,...n);let c=Be.size(u),h=e[2].dataType,y=e[0].dataType===22,l=[{type:12,data:c},{type:12,data:o},{type:12,data:s},{type:12,data:t.blockSize},...At(...e.map((A,k)=>A.dims),u)],x=A=>{let k=nt("data",e[0].dataType,e[0].dims.length),C=nt("inputIndices",e[1].dataType,e[1].dims.length),ee=nt("scales",e[2].dataType,e[2].dims.length),J=e.length>3?nt("zeroPoint",e[3].dataType,e[3].dims.length):void 0,B=Vt("output",h,u.length),ie=[k,C,ee];J&&ie.push(J);let ce=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${A.registerUniforms(ce).declareVariables(...ie,B)}
        ${A.mainStart()}
        let output_indices = ${B.offsetToIndices("global_idx")};
        var indices_indices = ${C.type.indices}(0);
        ${n.length>1?`
          for (var i: u32 = 0; i < ${n.length}; i++) {
            let index = ${B.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${C.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${B.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${k.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${B.indicesGet("output_indices","i")};
          ${k.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${C.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${r[s]};
        }
        ${k.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${u.length}; i++) {
          let index = ${B.indicesGet("output_indices",`i + ${n.length} - 1`)};
          ${k.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${k.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${k.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${y?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${ee.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${ee.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${ee.getByIndices("scale_indices")};
        ${J?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${J.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${J.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${y?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Fr(h)}(quantized_data - zero_point) * scale;
        ${B.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter((A,k)=>k!==1).map(A=>A.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(A,k)=>"rank")},getRunData:()=>({outputs:[{dims:u,dataType:h}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:l}),getShaderSource:x}},jo=(e,t)=>{let r=e.inputs;Au(r,t),e.compute(Iu(e.inputs,t))},Fu=e=>dr({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),Uo,Ou,Bu,Vo,Wd=Q(()=>{er(),Yt(),$r(),cr(),Uo=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Ou=(e,t)=>{let r=e[0].dims,n=e[0].dataType,i=r.length,s=e[1].dims,o=e[1].dataType,u=Be.normalizeAxis(t.axis,i),c=r[u],h=s.slice(0),y=Be.size(h),l=nt("input",n,i),x=nt("indicesInput",o,s.length),A=Vt("output",n,h.length),k=[{type:12,data:y},{type:6,data:c},{type:12,data:u}];return k.push(...At(r,s,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:k}),getShaderSource:C=>`
      ${C.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(l,x,A)}
      ${C.mainStart()}
      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${A.offsetToIndices("global_idx")};

      var idx = ${x.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${l.type.indices}(outputIndices);
      ${l.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${l.getByIndices("inputIndices")};

      ${A.setByOffset("global_idx","value")};
  }`}},Bu=e=>dr({axis:e.axis}),Vo=(e,t)=>{let r=e.inputs;Uo(r),e.compute(Ou(e.inputs,t))}}),zu,Du,Lu,zr,jc=Q(()=>{er(),Yt(),cr(),zu=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Du=(e,t)=>{let r=e[0].dims.slice(),n=e[1].dims.slice(),[i,s,o]=an.getShapeOfGemmResult(r,t.transA,n,t.transB,e.length===3?e[2].dims:void 0),u=[i,s];if(!u)throw new Error("Can't use gemm on the given tensors");let c=Be.size(u),h=[{type:12,data:c},{type:12,data:i},{type:12,data:s},{type:12,data:o},{type:1,data:t.alpha},{type:1,data:t.beta}],y=["type","type"];e.length===3&&(h.push(...At(e[2].dims)),y.push("rank")),h.push(...At(u));let l=x=>{let A="";t.transA&&t.transB?A="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?A="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?A="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(A="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let k=t.alpha===1?"":"value *= uniforms.alpha;",C=nt("a",e[0].dataType,e[0].dims),ee=nt("b",e[1].dataType,e[1].dims),J=C.type.value,B=null,ie=[C,ee];e.length===3&&(B=nt("c",e[2].dataType,e[2].dims.length),ie.push(B));let ce=Vt("output",e[0].dataType,u.length);ie.push(ce);let be=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${x.registerUniforms(be).declareVariables(...ie)}

  ${x.mainStart()}
    ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${J}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${A}
    }

    ${k}
    ${B!=null?`let cOffset = ${B.broadcastedIndicesToOffset("vec2(m, n)",ce)}; value += ${J}(uniforms.beta) * ${B.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:h}),getShaderSource:l}},Lu=e=>{let t=e.transA,r=e.transB,n=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:n,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},zr=(e,t)=>{zu(e.inputs),e.compute(Du(e.inputs,t))}}),yn,Gd,Wo,Go,Ru,Wi,Nu,qo=Q(()=>{er(),Yt(),$r(),me(),ss(),cr(),jn(),yn=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,Gd=(e,t)=>{let r=e[0],n=yn(e,1),i=yn(e,2),s=yn(e,3),o=yn(e,4),u=yn(e,5),c=yn(e,6),h=yn(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let y=r.dims[0],l=r.dims[1],x=r.dims.length===3?r.dims[2]:t.numHeads*r.dims[4],A=l,k=0,C=0,ee=Math.floor(x/t.numHeads);if(c&&h&&Be.size(c.dims)&&Be.size(h.dims)){if(c.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(c.dims[0]!==y||c.dims[1]!==t.numHeads||c.dims[3]!==ee)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(h.dims[0]!==y||h.dims[1]!==t.numHeads||h.dims[3]!==ee)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[2]!==h.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(h.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');k=c.dims[2],C=c.dims[2]}else if(c&&Be.size(c.dims)||h&&Be.size(h.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let J;if(n&&Be.size(n.dims)>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(n.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');J=2,A=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==ee)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');J=5,A=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==ee)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');J=0,A=n.dims[2]}}else{if(r.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(r.dims[2]!==t.numHeads||r.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');J=3}if(s&&Be.size(s.dims)>0){if(s.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(n&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let B=k+A,ie=0;if(o&&Be.size(o.dims)>0){ie=8;let ze=o.dims;throw ze.length===1?ze[0]===y?ie=1:ze[0]===3*y+2&&(ie=3):ze.length===2&&ze[0]===y&&ze[1]===B&&(ie=5),ie===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let ce=!1,be=x;if(i&&Be.size(i.dims)>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(A!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');be=i.dims[2]}else{if(A!==i.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');be=i.dims[1]*i.dims[3],ce=!0}}let We=!1;if(o&&Be.size(o.dims)>0)throw new Error("Key padding mask is not supported");if(u&&Be.size(u.dims)>0){if(u.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(u.dims[0]!==y||u.dims[1]!==t.numHeads||u.dims[2]!==l||u.dims[3]!==B)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:y,sequenceLength:l,pastSequenceLength:k,kvSequenceLength:A,totalSequenceLength:B,maxSequenceLength:C,inputHiddenSize:0,hiddenSize:x,vHiddenSize:be,headSize:ee,vHeadSize:Math.floor(be/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:ie,scale:t.scale,broadcastResPosBias:We,passPastInKv:ce,qkvFormat:J}},Wo=e=>dr({...e}),Go=dr({perm:[0,2,1,3]}),Ru=(e,t,r,n,i,s,o)=>{let u=[n,i,s],c=Be.size(u),h=[{type:12,data:c},{type:12,data:o},{type:12,data:s}],y=l=>{let x=Vt("qkv_with_bias",t.dataType,u),A=nt("qkv",t.dataType,u),k=nt("bias",r.dataType,u),C=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${l.registerUniforms(C).declareVariables(A,k,x)}
  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:h}),getShaderSource:y},{inputs:[t,r],outputs:[-1]})[0]},Wi=(e,t,r,n,i,s,o,u)=>{let c=s;if(o&&Be.size(o.dims)>0){if(n===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return c=Ru(e,s,o,t,n,r*i,u),c=c.reshape([t,n,r,i]),r===1||n===1?c:e.compute(Mn(c,Go.perm),{inputs:[c],outputs:[-1]})[0]}else return s.dims.length===3&&(c=s.reshape([t,n,r,i])),r===1||n===1?c:e.compute(Mn(c,Go.perm),{inputs:[c],outputs:[-1]})[0]},Nu=(e,t)=>{let r=Gd(e.inputs,t),n=e.inputs[0],i=yn(e.inputs,1),s=yn(e.inputs,2),o=yn(e.inputs,3),u=yn(e.inputs,4),c=yn(e.inputs,5),h=yn(e.inputs,6),y=yn(e.inputs,7);if(n.dims.length===5)throw new Error("Packed QKV is not implemented");if(i?.dims.length===5)throw new Error("Packed KV is not implemented");let l=i&&s&&i.dims.length===4&&s.dims.length===4,x=Wi(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,n,o,0);if(l)return bi(e,x,i,s,u,void 0,h,y,c,r);if(!i||!s)throw new Error("key and value must be provided");let A=Wi(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,o,r.hiddenSize),k=Wi(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,s,o,2*r.hiddenSize);bi(e,x,A,k,u,void 0,h,y,c,r)}}),Ho,ju,Uu,Ko,Vu,qd,Wu,Gu=Q(()=>{er(),Yt(),$r(),cr(),Ho=e=>{if(!e||e.length<1)throw new Error("too few inputs")},ju=(e,t)=>{let r=[],n=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),n=r.length),dr({numOutputs:n,axis:t.axis,splitSizes:r})},Uu=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${Ut("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,Ko=e=>{let t=e.length,r=[];for(let n=0;n<t;++n){let i=e[n].setByIndices("indices","input[global_idx]");t===1?r.push(i):n===0?r.push(`if (output_number == ${n}u) { ${i} }`):n===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${n}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},Vu=(e,t)=>{let r=e[0].dims,n=Be.size(r),i=e[0].dataType,s=Be.normalizeAxis(t.axis,r.length),o=new Array(t.numOutputs),u=nt("input",i,r.length),c=new Array(t.numOutputs),h=[],y=[],l=0,x=[{type:12,data:n}];for(let k=0;k<t.numOutputs;k++){l+=t.splitSizes[k],c[k]=l;let C=r.slice();C[s]=t.splitSizes[k],y.push(C),o[k]=Vt(`output${k}`,i,C.length),h.push({dims:y[k],dataType:e[0].dataType})}x.push({type:12,data:c},...At(r,...y));let A=k=>`
  ${k.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",c.length).declareVariables(u,...o)}
  ${Uu(c.length)}
  ${Ko(o)}

  ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${u.offsetToIndices("global_idx")};
    var index = ${u.indicesGet("indices",s)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${Ut("uniforms.size_in_split_axis","output_number - 1u",c.length)};
      ${u.indicesSet("indices",s,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(n/64)},programUniforms:x})}},qd=(e,t)=>{Ho(e.inputs);let r=e.inputs.length===1?t:ju(e.inputs,t);e.compute(Vu(e.inputs,r),{inputs:[0]})},Wu=e=>{let t=e.axis,r=e.splitSizes,n=e.numOutputs<0?r.length:e.numOutputs;if(n!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return dr({axis:t,numOutputs:n,splitSizes:r})}}),qu,Hu,Xo,Ku,Hd=Q(()=>{$r(),ss(),qo(),Gu(),jn(),qu=(e,t)=>{if(t.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let r=e[0],n=e[1],i=e[2],s=e[3],o=e[4];if(t.localWindowSize!==-1)throw new Error("Local attention is not supported");if(t.softcap!==0)throw new Error("Softcap is not supported");if(t.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(t.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let u=!1,c=r.dims[0],h=r.dims[1],y=r.dims.length===3?u?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],l=h,x=0,A=!n||n.dims.length===0,k=Math.floor(A?y/(t.numHeads+2*t.kvNumHeads):y/t.numHeads);A&&(y=k*t.numHeads);let C=s&&s.dims.length!==0,ee=o&&o.dims.length!==0;if(C&&s.dims.length===4&&s.dims[0]===c&&s.dims[1]!==t.kvNumHeads&&s.dims[2]===t.kvNumHeads&&s.dims[3]===k)throw new Error("BSNH pastKey/pastValue is not supported");if(C&&ee){if(s.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(o.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');x=s.dims[2]}else if(C||ee)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let J=1;if(n&&n.dims.length>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(r.dims[2]%n.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');l=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==k)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');l=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==k)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');l=n.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');J=3}let B=0,ie=!1,ce=t.kvNumHeads?k*t.kvNumHeads:y;if(i&&i.dims.length>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(l!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');ce=i.dims[2]}else{if(l!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');ce=i.dims[1]*i.dims[3],ie=!0}}let be=e.length>4?e[5]:void 0;if(be&&be.dims.length!==1&&be.dims[0]!==c)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:c,sequenceLength:h,pastSequenceLength:x,kvSequenceLength:l,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:y,vHiddenSize:ce,headSize:k,vHeadSize:Math.floor(ce/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:B,scale:t.scale,broadcastResPosBias:!1,passPastInKv:ie,qkvFormat:J}},Hu=dr({perm:[0,2,1,3]}),Xo=(e,t,r)=>{let n=t,i=r.kvNumHeads;return t.dims.length===3&&r.kvSequenceLength!==0&&(n=t.reshape([r.batchSize,r.kvSequenceLength,i,r.headSize]),n=e.compute(Mn(n,Hu.perm),{inputs:[n],outputs:[-1]})[0]),n},Ku=(e,t)=>{let r=qu(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let n=e.inputs[0],i=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,s=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,o=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,u=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,c=e.inputs.length>4?e.inputs[5]:void 0,h=e.inputs.length>5?e.inputs[6]:void 0,y=r.kvNumHeads?r.kvNumHeads:r.numHeads,l=dr({axis:2,numOutputs:3,splitSizes:[r.numHeads*r.headSize,y*r.headSize,y*r.headSize]}),[x,A,k]=!i&&!s?e.compute(Vu([n],l),{inputs:[n],outputs:[-1,-1,-1]}):[n,i,s],C=Wi(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,x,void 0,0);bi(e,C,Xo(e,A,r),Xo(e,k,r),void 0,void 0,o,u,void 0,r,c,h)}}),Qo,Xu,Qu,Yu,Kd=Q(()=>{er(),Yt(),jn(),cr(),Qo=(e,t,r,n,i,s,o,u)=>{let c=gr(s),h=c===1?"f32":`vec${c}f`,y=c===1?"vec2f":`mat2x${c}f`,l=i*o,x=[i,o,s/c],A=[i,o,2],k=["rank","type","type"],C=[];C.push(...At(x,A));let ee=J=>{let B=nt("x",t.dataType,3,c),ie=nt("scale",r.dataType,r.dims),ce=nt("bias",n.dataType,n.dims),be=Vt("output",1,3,2),We=[B,ie,ce,be],ze=64;return`
  var<workgroup> workgroup_shared : array<${y}, ${ze}>;
  const workgroup_size = ${ze}u;
  ${J.declareVariables(...We)}
  ${J.mainStart(ze)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${h}(0);
    var squared_sum = ${h}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${h}(${B.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${y}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Nn("workgroup_shared[0][0]",c)} / f32(hight * ${c});
      let squared_sum_final = ${Nn("workgroup_shared[0][1]",c)} / f32(hight * ${c});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${u}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${c};${u}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:A,dataType:1}],dispatchGroup:{x:l},programUniforms:C}),getShaderSource:ee},{inputs:[t,r,n],outputs:[-1]})[0]},Xu=(e,t,r)=>{let n=t[0].dims,i=n,s=2,o=n[0],u=n[1],c=Be.sizeFromDimension(n,s),h=gr(c),y=Be.size(i)/h,l=Qo(e,t[0],t[1],t[2],o,c,u,r.epsilon),x=[o,u,c/h],A=[o,u],k=["type","none"],C=ee=>{let J=nt("x",t[0].dataType,x.length,h),B=nt("scale_shift",1,A.length,2),ie=Vt("output",t[0].dataType,x.length,h),ce=[J,B,ie];return`
  ${ee.registerUniform("output_size","u32").declareVariables(...ce)}
  ${ee.mainStart()}
  ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${ie.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${B.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${J.getByOffset("global_idx")} * ${ie.type.value}(scale_shift.x) + ${ie.type.value}(scale_shift.y);
      ${ie.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${h}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:[{type:12,data:y},...At(x,A,x)]}),getShaderSource:C},{inputs:[t[0],l]})},Qu=(e,t,r)=>{let n=t[0].dims,i=n,s=n[0],o=n[n.length-1],u=Be.sizeFromDimension(n,1)/o,c=gr(o),h=Be.size(i)/c,y=[{type:12,data:u},{type:12,data:Math.floor(o/c)}],l=["type","type"],x=[0,n.length-1];for(let ee=0;ee<n.length-2;ee++)x.push(ee+1);let A=e.compute(Mn(e.inputs[0],x),{inputs:[e.inputs[0]],outputs:[-1]})[0],k=Qo(e,A,t[1],t[2],s,u,o,r.epsilon),C=ee=>{let J=fr(t[0].dataType),B=c===1?"vec2f":`mat${c}x2f`,ie=We=>{let ze=We===0?"x":"y",wt=c===1?"f32":`vec${c}f`;switch(c){case 1:return`${J}(${wt}(scale.${ze}))`;case 2:return`vec2<${J}>(${wt}(scale[0].${ze}, scale[1].${ze}))`;case 4:return`vec4<${J}>(${wt}(scale[0].${ze}, scale[1].${ze}, scale[2].${ze}, scale[3].${ze}))`;default:throw new Error(`Not supported compoents ${c}`)}},ce=nt("input",t[0].dataType,t[0].dims,c),be=Vt("output",t[0].dataType,i,c);return`
  @group(0) @binding(0) var<storage, read> input : array<${ce.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${B}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${be.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${ee.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${ie(0)}, ${ie(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${c}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:y}),getShaderSource:C},{inputs:[t[0],k]})},Yu=(e,t)=>{t.format==="NHWC"?Qu(e,e.inputs,t):Xu(e,e.inputs,t)}}),Zu,Ju,ed,Xd=Q(()=>{er(),Yt(),cr(),Zu=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Ju=(e,t,r)=>{let n=t.simplified,i=e[0].dims,s=e[1],o=!n&&e[2],u=i,c=Be.normalizeAxis(t.axis,i.length),h=Be.sizeToDimension(i,c),y=Be.sizeFromDimension(i,c),l=Be.size(s.dims),x=o?Be.size(o.dims):0;if(l!==y||o&&x!==y)throw new Error(`Size of X.shape()[axis:] == ${y}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${l} and bias size of ${x}`);let A=[];for(let be=0;be<i.length;++be)be<c?A.push(i[be]):A.push(1);let k=gr(y),C=["type","type"],ee=[{type:12,data:h},{type:1,data:y},{type:12,data:Math.floor(y/k)},{type:1,data:t.epsilon}];o&&C.push("type");let J=r>1,B=r>2,ie=be=>{let We=fr(e[0].dataType),ze=[nt("x",e[0].dataType,e[0].dims,k),nt("scale",s.dataType,s.dims,k)];o&&ze.push(nt("bias",o.dataType,o.dims,k)),ze.push(Vt("output",e[0].dataType,u,k)),J&&ze.push(Vt("mean_data_output",1,A)),B&&ze.push(Vt("inv_std_output",1,A));let wt=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${be.registerUniforms(wt).declareVariables(...ze)}
  ${be.mainStart()}
    ${be.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${ni("f32",k)};
    var mean_square_vector = ${ni("f32",k)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Qn(We,k,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Nn("mean_vector",k)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Nn("mean_square_vector",k)} / uniforms.norm_size ${n?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Qn(We,k,"x[j + offset]")};
      let f32scale = ${Qn(We,k,"scale[j]")};
      output[j + offset] = ${ze[0].type.value}((f32input ${n?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${Qn(We,k,"bias[j]")}`:""}
      );
    }

    ${J?"mean_data_output[global_idx] = mean":""};
    ${B?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},ce=[{dims:u,dataType:e[0].dataType}];return J&&ce.push({dims:A,dataType:1}),B&&ce.push({dims:A,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${k};${r};${n}`,inputDependencies:C},getRunData:()=>({outputs:ce,dispatchGroup:{x:Math.ceil(h/64)},programUniforms:ee}),getShaderSource:ie}},ed=(e,t)=>{Zu(e.inputs),e.compute(Ju(e.inputs,t,e.outputCount))}}),td,Qd,Yd,Zd,Jd,Uc=Q(()=>{er(),Yt(),$r(),cr(),td=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],n=r.dims.length;if(r.dims[n-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),s=t.blockSize/8*t.bits,o=e[1];if(!Be.areEqual(o.dims,[t.n,i,s]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let u=e[2].dims;if(Be.size(u)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let c=e[3].dims,h=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(Be.size(c)!==h)throw new Error("zeroPoints input size error.")}},Qd=(e,t)=>{let r=e[0].dims,n=r.length,i=r[n-2],s=t.k,o=t.n,u=r.slice(0,n-2),c=Be.size(u),h=e[1].dims[2]/4,y=e[0].dataType,l=gr(t.k),x=gr(h),A=gr(o),k=u.concat([i,o]),C=i>1&&o/A%2===0?2:1,ee=Be.size(k)/A/C,J=64,B=[],ie=[c,i,s/l],ce=Be.convertShape(e[1].dims).slice();ce.splice(-1,1,h/x),B.push(...At(ie)),B.push(...At(ce)),B.push(...At(e[2].dims)),e.length===4&&B.push(...At(Be.convertShape(e[3].dims)));let be=[c,i,o/A];B.push(...At(be));let We=ze=>{let wt=ie.length,Lt=nt("a",e[0].dataType,wt,l),Dt=nt("b",12,ce.length,x),sr=nt("scales",e[2].dataType,e[2].dims.length),Qt=[Lt,Dt,sr],or=e.length===4?nt("zero_points",12,e[3].dims.length):void 0;or&&Qt.push(or);let Tr=be.length,ir=Vt("output",e[0].dataType,Tr,A),Ht=fr(e[0].dataType),Mr=(()=>{switch(l){case 1:return`array<${Ht}, 8>`;case 2:return`mat4x2<${Ht}>`;case 4:return`mat2x4<${Ht}>`;default:throw new Error(`${l}-component is not supported.`)}})(),br=()=>{let Je=`
          // reuse a data
            var input_offset = ${Lt.indicesToOffset(`${Lt.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Mr};
            for (var j: u32 = 0; j < ${8/l}; j++) {
              a_data[j] = ${Lt.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let Et=0;Et<A*C;Et++)Je+=`
            b_value = ${x===1?`b${Et}_data`:`b${Et}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Mr}(${Array.from({length:4},(pr,Ur)=>`${Ht}(b_value_lower[${Ur}]), ${Ht}(b_value_upper[${Ur}])`).join(", ")});
            b_dequantized_values = ${l===1?`${Mr}(${Array.from({length:8},(pr,Ur)=>`(b_quantized_values[${Ur}] - ${or?`zero_point${Et}`:"zero_point"}) * scale${Et}`).join(", ")});`:`(b_quantized_values - ${Mr}(${Array(8).fill(`${or?`zero_point${Et}`:"zero_point"}`).join(",")})) * scale${Et};`};
            workgroup_shared[local_id.x * ${C} + ${Math.floor(Et/A)}]${A>1?`[${Et%A}]`:""} += ${Array.from({length:8/l},(pr,Ur)=>`${l===1?`a_data[${Ur}] * b_dequantized_values[${Ur}]`:`dot(a_data[${Ur}], b_dequantized_values[${Ur}])`}`).join(" + ")};
          `;return Je},Gt=()=>{let Je=`
            var col_index = col * ${A};
            ${or?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Ht}(8);`}
            `;for(let Et=0;Et<A*C;Et++)Je+=`
            let scale${Et} = ${sr.getByOffset("col_index * nBlocksPerCol + block")};
            ${or?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${or.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${Et} = ${Ht}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return Je},_r=()=>{let Je=`col_index = col * ${A};`;for(let Et=0;Et<A*C;Et++)Je+=`
            let b${Et}_data = ${Dt.getByIndices(`${Dt.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return Je+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Mr};
            var b_dequantized_values: ${Mr};`,Je};return`
        var<workgroup> workgroup_shared: array<${ir.type.value}, ${C*J}>;
        ${ze.declareVariables(...Qt,ir)}
        ${ze.mainStart([J,1,1])}
          let output_indices = ${ir.offsetToIndices(`(global_idx / ${J}) * ${C}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${J}) {
            //process one block
            var word_offset: u32 = block * ${t.blockSize/l};
            ${Gt()}
            for (var word: u32 = 0; word < ${h}; word += ${x}) {
              ${_r()}
              for (var i: u32 = 0; i < ${x}; i++) {
                ${br()}
                word_offset += ${8/l};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${C}) {
            var output_value: ${ir.type.value} = ${ir.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${J}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${C};
            }
            ${ir.setByIndices(`${ir.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${l};${x};${A};${C};${J}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:k,dataType:y}],dispatchGroup:{x:ee},programUniforms:B}),getShaderSource:We}},Yd=(e,t)=>{let r=e[0].dims,n=r.length,i=r[n-2],s=t.k,o=t.n,u=r.slice(0,n-2),c=Be.size(u),h=e[1].dims[2]/4,y=e[0].dataType,l=gr(t.k),x=gr(h),A=u.concat([i,o]),k=128,C=o%8===0?8:o%4===0?4:1,ee=k/C,J=ee*x*8,B=J/l,ie=J/t.blockSize,ce=Be.size(A)/C,be=[],We=[c,i,s/l],ze=Be.convertShape(e[1].dims).slice();ze.splice(-1,1,h/x),be.push(...At(We)),be.push(...At(ze)),be.push(...At(e[2].dims)),e.length===4&&be.push(...At(Be.convertShape(e[3].dims)));let wt=[c,i,o];be.push(...At(wt));let Lt=Dt=>{let sr=We.length,Qt=nt("a",e[0].dataType,sr,l),or=nt("b",12,ze.length,x),Tr=nt("scales",e[2].dataType,e[2].dims.length),ir=[Qt,or,Tr],Ht=e.length===4?nt("zero_points",12,e[3].dims.length):void 0;Ht&&ir.push(Ht);let Mr=wt.length,br=Vt("output",e[0].dataType,Mr),Gt=fr(e[0].dataType),_r=()=>{switch(l){case 1:return`
          let a_data0 = vec4<${Gt}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${Gt}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${Gt}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${Gt}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${l}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${Qt.type.value}, ${B}>;
        var<workgroup> inter_results: array<array<${br.type.value}, ${ee}>, ${C}>;
        ${Dt.declareVariables(...ir,br)}
        ${Dt.mainStart([ee,C,1])}
          let output_indices = ${br.offsetToIndices(`workgroup_index * ${C}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${ie} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${B};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${B}; a_offset += ${k})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${Qt.getByIndices(`${Qt.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${Qt.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${ie} + local_id.x;
            ${Ht?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${Ht.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${Gt}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Gt}(8);`}
            let scale = ${Tr.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${or.getByIndices(`${or.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${t.blockSize/l};
            for (var i: u32 = 0; i < ${x}; i++) {
              ${_r()}
              let b_value = ${x===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${Gt}>(${Array.from({length:4},(Je,Et)=>`${Gt}(b_value_lower[${Et}]), ${Gt}(b_value_upper[${Et}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${Gt}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(Je,Et)=>`${`dot(a_data${Et}, b_dequantized_values[${Et}])`}`).join(" + ")};
              word_offset += ${8/l};
            }
            workgroupBarrier();
          }

          if (local_idx < ${C}) {
            var output_value: ${br.type.value} = ${br.type.value}(0);
            for (var b = 0u; b < ${ee}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${br.setByIndices(`${br.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${l};${x};${ee};${C}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:A,dataType:y}],dispatchGroup:{x:ce},programUniforms:be}),getShaderSource:Lt}},Zd=(e,t)=>{td(e.inputs,t),t.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Yd(e.inputs,t)):e.compute(Qd(e.inputs,t))},Jd=e=>dr(e)}),ec,tc,rc,nc,ic,sc,oc,ac,lc,Vc=Q(()=>{er(),Yt(),cr(),ec=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},tc=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
            k = i32(${e.indicesGet("indices",i)}) - ${Ut("uniforms.pads",i,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${Ut("uniforms.x_shape",i,t)})) {
              break;
            }
            offset += k * i32(${Ut("uniforms.x_strides",i,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${n}
            value = x[offset];
          }
      `},rc=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${Ut("uniforms.pads",i,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${Ut("uniforms.x_shape",i,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${Ut("uniforms.x_shape",i,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${Ut("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},nc=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${Ut("uniforms.pads",i,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${Ut("uniforms.x_shape",i,t)})) {
                  k = i32(${Ut("uniforms.x_shape",i,t)}) - 1;
                }
                offset += k * i32(${Ut("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},ic=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${Ut("uniforms.pads",i,r)};
                if (k < 0)  {
                  k += i32(${Ut("uniforms.x_shape",i,t)}]);
                }
                if (k >= i32(${Ut("uniforms.x_shape",i,t)})) {
                  k -= i32(${Ut("uniforms.x_shape",i,t)});
                }
                offset += k * i32(${Ut("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},sc=(e,t,r)=>{switch(r.mode){case 0:return tc(e,t,r.pads.length);case 1:return rc(e,t,r.pads.length);case 2:return nc(e,t,r.pads.length);case 3:return ic(e,t,r.pads.length);default:throw new Error("Invalid mode")}},oc=(e,t)=>{let r=Be.padShape(e[0].dims.slice(),t.pads),n=e[0].dims,i=Be.size(r),s=[{type:12,data:i},{type:6,data:t.pads}],o=e.length>=3&&e[2].data;t.mode===0&&s.push({type:o?e[2].dataType:1,data:t.value}),s.push(...At(e[0].dims,r));let u=["rank"],c=h=>{let y=Vt("output",e[0].dataType,r.length),l=nt("x",e[0].dataType,n.length),x=l.type.value,A=sc(y,n.length,t),k=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&k.push({name:"constant_value",type:o?x:"f32"}),`
            ${h.registerUniforms(k).declareVariables(l,y)}
            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${y.offsetToIndices("global_idx")};

            var value = ${x}(0);
            ${A}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}${o}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Be.size(r)/64)},programUniforms:s}),getShaderSource:c}},ac=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),n=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,i=e[0].dims.length,s=new Int32Array(2*i).fill(0);if(e.length>=4){let u=e[3].getBigInt64Array();for(let c=0;c<u.length;c++)s[Number(u[c])]=Number(r[c]),s[Number(u[c])+i]=Number(r[c+u.length])}else r.forEach((u,c)=>s[Number(c)]=Number(u));let o=[];return s.forEach(u=>o.push(u)),{mode:t.mode,value:n,pads:o}}else return t},lc=(e,t)=>{ec(e.inputs);let r=ac(e.inputs,t);e.compute(oc(e.inputs,r),{inputs:[0]})}}),_s,rd,nd,id,sd,uc,dc,od,ad,cc,pc,ld,hc,fc,ud,lr,dd,rn,ln,_n=Q(()=>{Kt(),er(),Yt(),cr(),_s=e=>{if(T.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},rd=(e,t,r)=>{let n=t.format==="NHWC",i=e.dims.slice();n&&i.splice(1,0,i.pop());let s=Object.hasOwnProperty.call(t,"dilations"),o=t.kernelShape.slice(),u=t.strides.slice(),c=s?t.dilations.slice():[],h=t.pads.slice();Zr.adjustPoolAttributes(r,i,o,u,c,h);let y=Zr.computePoolOutputShape(r,i,u,c,o,h,t.autoPad),l=Object.assign({},t);s?Object.assign(l,{kernelShape:o,strides:u,pads:h,dilations:c,cacheKey:t.cacheKey}):Object.assign(l,{kernelShape:o,strides:u,pads:h,cacheKey:t.cacheKey});let x=y.slice();return x.push(x.splice(1,1)[0]),[l,n?x:y]},nd=(e,t)=>{let r=t.format==="NHWC",n=Be.size(e),i=Be.size(t.kernelShape),s=[{type:12,data:n},{type:12,data:i}],o=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let u=t.kernelShape[t.kernelShape.length-1],c=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],y=t.pads[t.pads.length-1],l=!!(h+y);s.push({type:12,data:u},{type:12,data:c},{type:12,data:h},{type:12,data:y}),o.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let x=!1;if(t.kernelShape.length===2){let A=t.kernelShape[t.kernelShape.length-2],k=t.strides[t.strides.length-2],C=t.pads[t.pads.length/2-2],ee=t.pads[t.pads.length-2];x=!!(C+ee),s.push({type:12,data:A},{type:12,data:k},{type:12,data:C},{type:12,data:ee}),o.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,o,!0,l,x]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let u=Be.computeStrides(t.kernelShape);s.push({type:12,data:u},{type:12,data:t.pads},{type:12,data:t.strides}),o.push({name:"kernelStrides",type:"u32",length:u.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let c=t.pads.reduce((h,y)=>h+y);return[s,o,!!c,!1,!1]}},id=(e,t,r,n,i,s,o,u,c,h,y,l)=>{let x=i.format==="NHWC",A=t.type.value,k=Vt("output",t.type.tensor,n);if(i.kernelShape.length<=2){let C="",ee="",J="",B=r-(x?2:1);if(y?C=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${B}] = indices[${B}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${B}] < 0 || xIndices[${B}]
                      >= uniforms.x_shape[${B}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`:C=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${B}] = indices[${B}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`,i.kernelShape.length===2){let ie=r-(x?3:2);l?ee=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${ie}] = indices[${ie}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${ie}] < 0 || xIndices[${ie}] >= uniforms.x_shape[${ie}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:ee=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${ie}] = indices[${ie}] * uniforms.sh - uniforms.phStart + j;
                `,J=`
              }
            `}return`
            ${e.registerUniforms(c).declareVariables(t,k)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${k.offsetToIndices("global_idx")};
              var xIndices = ${k.offsetToIndices("global_idx")};

              var value = ${A}(${u});
              var pad = 0;
              ${ee}
              ${C}
              ${J}
              ${o}

              output[global_idx] = value;
            }`}else{if(x)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let C=i.kernelShape.length,ee=i.pads.length,J="";return h?J=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${s}
              }`:J=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${s}
            `,`
            ${e.registerUniforms(c).declareVariables(t,k)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${k.offsetToIndices("global_idx")};
              var xIndices = ${k.offsetToIndices("global_idx")};

              var offsets: array<u32, ${C}>;

              var value = ${A}(${u});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${C-1}u; j++) {
                  offsets[j] = offset / ${Ut("uniforms.kernelStrides","j",C)};
                  offset -= offsets[j] * ${Ut("uniforms.kernelStrides","j",C)};
                }
                offsets[${C-1}] = offset;

                isPad = false;
                for (var j = ${r-C}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${Ut("uniforms.strides",`j - ${r-C}u`,C)}
                    + offsets[j - ${r-C}u] - ${Ut("uniforms.pads","j - 2u",ee)};
                  ${J}
              }
              ${o}

              output[global_idx] = value;
            }`}},sd=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,uc=e=>`${sd(e)};${e.countIncludePad}`,dc=e=>`${sd(e)};${e.storageOrder};${e.dilations}`,od=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),ad=(e,t,r,n)=>{let[i,s]=rd(t,n,r),o=nt("x",t.dataType,t.dims.length),u=o.type.value,c="value += x_val;",h="";i.countIncludePad?h+=`value /= ${u}(uniforms.kernelSize);`:h+=`value /= ${u}(i32(uniforms.kernelSize) - pad);`;let[y,l,x,A,k]=nd(s,i);y.push(...At(t.dims,s));let C=["rank"];return{name:e,shaderCache:{hint:`${n.cacheKey};${x};${A};${k}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Be.size(s)/64)},programUniforms:y}),getShaderSource:ee=>id(ee,o,t.dims.length,s.length,i,c,h,0,l,x,A,k)}},cc=e=>{let t=e.count_include_pad!==0,r=od(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let n={countIncludePad:t,...r,cacheKey:""};return{...n,cacheKey:uc(n)}},pc=(e,t)=>{_s(e.inputs),e.compute(ad("AveragePool",e.inputs[0],!1,t))},ld={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},hc=e=>{let t=e.format;return{format:t,...ld,cacheKey:t}},fc=(e,t)=>{_s(e.inputs),e.compute(ad("GlobalAveragePool",e.inputs[0],!0,t))},ud=(e,t,r,n)=>{let[i,s]=rd(t,n,r),o=`
      value = max(x_val, value);
    `,u="",c=nt("x",t.dataType,t.dims.length),h=["rank"],[y,l,x,A,k]=nd(s,i);return y.push(...At(t.dims,s)),{name:e,shaderCache:{hint:`${n.cacheKey};${x};${A};${k}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Be.size(s)/64)},programUniforms:y}),getShaderSource:C=>id(C,c,t.dims.length,s.length,i,o,u,t.dataType===10?-65504:-1e5,l,x,A,k)}},lr=(e,t)=>{_s(e.inputs),e.compute(ud("MaxPool",e.inputs[0],!1,t))},dd=e=>{let t=e.storage_order,r=e.dilations,n=od(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...n,cacheKey:""};return{...i,cacheKey:dc(i)}},rn=e=>{let t=e.format;return{format:t,...ld,cacheKey:t}},ln=(e,t)=>{_s(e.inputs),e.compute(ud("GlobalMaxPool",e.inputs[0],!0,t))}}),si,mc,cd,pd,g=Q(()=>{er(),Yt(),$r(),cr(),si=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((r,n)=>r===e[2].dims[n]).reduce((r,n)=>r&&n,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((i,s)=>s===t.axis||i===e[0].dims[s]).reduce((i,s)=>i&&s,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let r=e[0].dims[t.axis],n=e[1].dims[t.axis];if(t.blockSize<Math.ceil(r/n)||t.blockSize>Math.ceil(r/(n-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},mc=(e,t)=>{let r=Be.normalizeAxis(t.axis,e[0].dims.length),n=e[0].dataType,i=n===3,s=e[0].dims,o=e[1].dataType,u=Be.size(s),c=n===3||n===2,h=c?[Math.ceil(Be.size(e[0].dims)/4)]:e[0].dims,y=e[1].dims,l=e.length>2?e[2]:void 0,x=l?c?[Math.ceil(Be.size(l.dims)/4)]:l.dims:void 0,A=y.length===0||y.length===1&&y[0]===1,k=A===!1&&y.length===1,C=gr(u),ee=A&&(!c||C===4),J=ee?C:1,B=ee&&!c?C:1,ie=nt("input",c?12:n,h.length,B),ce=nt("scale",o,y.length),be=l?nt("zero_point",c?12:n,x.length):void 0,We=Vt("output",o,s.length,J),ze=[ie,ce];be&&ze.push(be);let wt=[h,y];l&&wt.push(x);let Lt=[{type:12,data:u/J},{type:12,data:r},{type:12,data:t.blockSize},...At(...wt,s)],Dt=sr=>{let Qt=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${sr.registerUniforms(Qt).declareVariables(...ze,We)}
      ${sr.mainStart()}
          ${sr.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${We.offsetToIndices("global_idx")};

          // Set input x
          ${c?`
            let input = ${ie.getByOffset("global_idx / 4")};
            let x_vec = ${i?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${J===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${ie.getByOffset("global_idx")};`};

          // Set scale input
          ${A?`let scale_value= ${ce.getByOffset("0")}`:k?`
            let scale_index = ${We.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${ce.getByOffset("scale_index")};`:`
            var scale_indices: ${ce.type.indices} = output_indices;
            let index = ${ce.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${ce.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${ce.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${be?A?c?`
                let zero_point_input = ${be.getByOffset("0")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${be.getByOffset("0")}`:k?c?`
                let zero_point_index = ${We.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${be.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${We.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${be.getByOffset("zero_point_index")};`:c?`
                let zero_point_offset = ${ce.indicesToOffset("scale_indices")};
                let zero_point_input = ${be.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${be.getByIndices("scale_indices")};`:`let zero_point_value = ${c?i?"i32":"u32":ie.type.value}(0);`};
      // Compute and write output
      ${We.setByOffset("global_idx",`${We.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:be?["rank","rank","rank"]:["rank","rank"]},getShaderSource:Dt,getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(u/J/64),y:1,z:1},programUniforms:Lt})}},cd=(e,t)=>{si(e.inputs,t),e.compute(mc(e.inputs,t))},pd=e=>dr({axis:e.axis,blockSize:e.blockSize})}),w,ae,Re,qe=Q(()=>{Kt(),er(),cr(),w=(e,t,r)=>{let n=e===t,i=e<t&&r<0,s=e>t&&r>0;if(n||i||s)throw new Error("Range these inputs' contents are invalid.")},ae=(e,t,r,n)=>{let i=Math.abs(Math.ceil((t-e)/r)),s=[i],o=i,u=[{type:12,data:o},{type:n,data:e},{type:n,data:r},...At(s)],c=h=>{let y=Vt("output",n,s.length),l=y.type.value,x=[{name:"outputSize",type:"u32"},{name:"start",type:l},{name:"delta",type:l}];return`
        ${h.registerUniforms(x).declareVariables(y)}
        ${h.mainStart()}
        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${l}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${n}`},getShaderSource:c,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:u})}},Re=e=>{let t=0,r=0,n=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],n=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],n=e.inputs[2].getFloat32Array()[0]),T.webgpu.validateInputContent&&w(t,r,n),e.compute(ae(t,r,n,e.inputs[0].dataType),{inputs:[]})}}),it,It,Pt,Xt,mr,Nr,Or,xr,Jt,tn,wr,yr,jr,un,Vr,nn,hn,Jr,sn,Yo=Q(()=>{er(),Yt(),$r(),cr(),it=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},It=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let n=new Array(r).fill(1);return t.forEach((i,s)=>n[i]=e[s]),n},Pt=(e,t,r,n,i,s)=>{let[o,u,c]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach(y=>s.push(y));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(u>0&&e.length>u&&e[u].dims.length===1&&e[u].dims[0]>0){if(e[u].getFloat32Array().forEach(y=>n.push(y)),n.length!==0&&n.length!==h&&r>=18&&n.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");it(n,t),t.axes.length>0&&It(n,t.axes,h).forEach((y,l)=>n[l]=y)}if(c>0&&e.length>c&&e[c].dims.length===1&&e[c].dims[0]>0&&(e[c].getBigInt64Array().forEach(y=>i.push(Number(y))),i.length!==0&&i.length!==h&&r>=18&&i.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(n.length!==0&&n.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==0&&i.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof n<"u"&&typeof i<"u"&&n.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Xt=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",mr=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Nr=(e,t,r)=>{let n=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?n:e.slice();return t.length>0?(t.forEach((s,o)=>{n[s]=i[o],n[o+r]=i[t.length+o]}),n):i},Or=(e,t,r,n)=>{let i=[];if(r.length>0)if(n.length>0){if(e.forEach(s=>i.push(s)),Math.max(...n)>e.length)throw new Error("axes is out of bound");n.forEach((s,o)=>i[s]=r[o])}else r.forEach(s=>i.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((s,o)=>Math.round(s*t[o]))}return i},xr=(e,t,r)=>{let n=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(s=>t[s]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(s=>t[s]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(s=>t[s]=n),r.axes.forEach(s=>i[s]=Math.round(e[s]*t[s]))):(t.fill(n,0,t.length),i.forEach((s,o)=>i[o]=Math.round(s*t[o]))),i},Jt=(e,t,r,n,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${Ut("uniforms.scales","i",n)};
        var roi_low = ${Ut("uniforms.roi","i",i)};
        var roi_hi = ${Ut("uniforms.roi",`i + ${t.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${Ut("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${Ut("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,tn=(e,t,r,n,i,s,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${Ut("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${Ut("uniforms.roi","i",s)};
          var roi_hi = ${Ut("uniforms.roi",`i + ${r.length}`,s)};
          var input_shape_i = ${Ut("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${Ut("uniforms.output_shape","i",n.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,wr=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${Ut("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,yr=(e,t,r,n)=>e.rank>n?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",jr=(e,t,r,n,i)=>{let[s,o,u,c]=r.length===2?[-1,0,1,-1]:[0,2,3,1],h=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${h} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(row, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(col, ${r[u]} - 1))`)};
      ${yr(e,c,s,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${h} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${h} = originalIndices[${o}];
      var col:${h} = originalIndices[${u}];
      ${n?`if (row < 0 || row > (${r[o]} - 1) || col < 0 || col > (${r[u]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${r[o]} - 1));
      col = max(0, min(col, ${r[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${c}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${h} = getInputValue(batch, channel, row1, col1);
      var x12: ${h} = getInputValue(batch, channel, row1, col2);
      var x21: ${h} = getInputValue(batch, channel, row2, col1);
      var x22: ${h} = getInputValue(batch, channel, row2, col2);
      var dx1: ${h} = abs(row - ${h}(row1));
      var dx2: ${h} = abs(${h}(row2) - row);
      var dy1: ${h} = abs(col - ${h}(col1));
      var dy2: ${h} = abs(${h}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},un=(e,t,r,n,i,s,o,u,c,h)=>{let y=r.length===2,[l,x]=y?[0,1]:[2,3],A=e.type.value,k=C=>{let ee=C===l?"row":"col";return`
      fn ${ee}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${A} {
        var output_index = ${t.indicesGet("output_indices",C)};
        var originalIdx: ${A} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[C]},
        ${n[C]}, ${r[C]}, ${s[C]}, ${s[C]} + ${r.length});
        var fractOriginalIdx: ${A} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${u} && (originalIdx < 0 || originalIdx > (${r[C]} - 1))) {
          return ${c};
        }
        var data: array<${A}, 4> = array<${A}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${ee}: ${A} = originalIdx + ${A}(i);
          if (${ee} < 0 || ${ee} >= ${r[C]}) {
            ${h?`coefs[i + 1] = 0.0;
                        continue;`:u?`return ${c};`:`${ee} = max(0, min(${ee}, ${r[C]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",C,`u32(${ee})`)};
          data[i + 1] = ${C===l?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${k(l)};
    ${k(x)};
  fn getCubicInterpolationCoefs(s: ${A}) -> array<${A}, 4> {
    var absS = abs(s);
    var coeffs: array<${A}, 4> = array<${A}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${A} = 1.0 - absS;
    var twoMinusAbsS: ${A} = 2.0 - absS;
    var onePlusAbsS: ${A} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${A}, 4>, coefs: array<${A}, 4>) -> ${A} {
    var coefsSum: ${A} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${A} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Vr=(e,t,r,n,i)=>{let[s,o,u,c,h]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(depth, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(height, ${r[u]} - 1))`)};
      ${e.indicesSet("input_indices",c,`max(0, min(width, ${r[c]} - 1))`)};
      ${yr(e,h,s,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${y} = originalIndices[${o}];
      var height:${y} = originalIndices[${u}];
      var width:${y} = originalIndices[${c}];
      ${n?`if (depth < 0 || depth > (${r[o]} - 1) || height < 0 || height > (${r[u]} - 1) || width < 0 || (width > ${r[c]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${r[o]} - 1));
      height = max(0, min(height, ${r[u]} - 1));
      width = max(0, min(width, ${r[c]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${h}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${y} = abs(depth - ${y}(depth1));
      var dx2: ${y} = abs(${y}(depth2) - depth);
      var dy1: ${y} = abs(height - ${y}(height1));
      var dy2: ${y} = abs(${y}(height2) - height);
      var dz1: ${y} = abs(width - ${y}(width1));
      var dz2: ${y} = abs(${y}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},nn=(e,t,r,n,i,s)=>{let o=e.dims,u=Nr(s,t.axes,o.length),c=Or(o,n,i,t.axes),h=n.slice();n.length===0&&(h=o.map((B,ie)=>B===0?1:c[ie]/B),t.keepAspectRatioPolicy!=="stretch"&&(c=xr(o,h,t)));let y=Vt("output",e.dataType,c.length),l=nt("input",e.dataType,o.length),x=Be.size(c),A=o.length===c.length&&o.every((B,ie)=>B===c[ie]),k=t.coordinateTransformMode==="tf_crop_and_resize",C=t.extrapolationValue,ee=l.type.value,J=B=>`
      ${A?"":`
      ${Xt(t.coordinateTransformMode,ee)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${wr(l,o)};
              ${mr(t.nearestMode,r,ee)};
              ${tn(l,y,o,c,h.length,u.length,k)};
              `;case"linear":return`
              ${Jt(y,o,c,h.length,u.length)};
              ${(()=>{if(o.length===2||o.length===4)return`${jr(l,y,o,k,C)}`;if(o.length===3||o.length===5)return`${Vr(l,y,o,k,C)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(o.length===2||o.length===4)return`${un(l,y,o,c,h,u,t.cubicCoeffA,k,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${B.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",u.length).declareVariables(l,y)}
      ${B.mainStart()}
        ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${A?"output[global_idx] = input[global_idx];":`
        let output_indices = ${y.offsetToIndices("global_idx")};
        var input_indices: ${l.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${l.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${o.length===2||o.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${u.length>0?u:""}|${A}|${o}`,inputDependencies:["rank"]},getShaderSource:J,getRunData:()=>({outputs:[{dims:c,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(x/64)},programUniforms:[{type:12,data:x},{type:1,data:h},{type:1,data:u},...At(o,c)]})}},hn=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Jr=(e,t)=>{let r=[],n=[],i=[],s=hn(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Pt(e.inputs,t,s,r,n,i),e.compute(nn(e.inputs[0],t,s,r,n,i),{inputs:[0]})},sn=e=>{let t=e.antialias,r=e.axes,n=e.coordinateTransformMode,i=e.cubicCoeffA,s=e.excludeOutside!==0,o=e.extrapolationValue,u=e.keepAspectRatioPolicy,c=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return dr({antialias:t,axes:r,coordinateTransformMode:n,cubicCoeffA:i,excludeOutside:s,extrapolationValue:o,keepAspectRatioPolicy:u,mode:c,nearestMode:h})}}),Gi,Wc,Bn,qi=Q(()=>{er(),Yt(),$r(),cr(),Gi=(e,t)=>{let[r,n,i,s]=e,{numHeads:o,rotaryEmbeddingDim:u}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!Be.areEqual(n.dims,[])&&!Be.areEqual(n.dims,[1])&&n.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${n.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(s.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(!Be.areEqual(i.dims,s.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(u>0&&o===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let c=r.dims[0],h=r.dims[r.dims.length-2],y=i.dims[0],l=Be.sizeFromDimension(r.dims,1)/h,x=u===0?i.dims[1]*2:l/o;if(u>x)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(n.dims.length===2){if(c!==n.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${n.dims[0]}`);if(h!==n.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${n.dims[1]}`)}if(x/2!==i.dims[1]&&u/2!==i.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(h>y)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Wc=(e,t)=>{let{interleaved:r,numHeads:n,rotaryEmbeddingDim:i,scale:s}=t,o=e[0].dims[0],u=Be.sizeFromDimension(e[0].dims,1),c=e[0].dims[e[0].dims.length-2],h=u/c,y=e[2].dims[1],l=i===0?y*2:h/n,x=new Array(o,c,h/l,l-y),A=Be.computeStrides(x),k=[{type:1,data:s},{type:12,data:x},{type:12,data:A},...e[0].dims.length===3?new Array({type:12,data:[u,h,l,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[u,l,c*l,1]}):[],...At(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],C=ee=>{let J=nt("input",e[0].dataType,e[0].dims.length),B=nt("position_ids",e[1].dataType,e[1].dims.length),ie=nt("cos_cache",e[2].dataType,e[2].dims.length),ce=nt("sin_cache",e[3].dataType,e[3].dims.length),be=Vt("output",e[0].dataType,e[0].dims.length);return ee.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:x.length},{name:"global_strides",type:"u32",length:A.length},{name:"input_output_strides",type:"u32",length:A.length}]),`
        ${ee.declareVariables(J,B,ie,ce,be)}

        ${ee.mainStart(cn)}
          let half_rotary_emb_dim = uniforms.${ie.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${ee.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${B.broadcastedIndicesToOffset("bsnh.xy",Vt("",B.type.tensor,2))};
            let position_id =
                u32(${B.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});
            let j = i + select(half_rotary_emb_dim, 1, ${r});
            let re = ${J.getByOffset("i")} * ${ie.get("position_id","bsnh[3]")} -
                ${J.getByOffset("j")} * ${ce.get("position_id","bsnh[3]")};
            ${be.setByOffset("i","re")}
            let im = ${J.getByOffset("i")} * ${ce.get("position_id","bsnh[3]")} +
                ${J.getByOffset("j")} * ${ie.get("position_id","bsnh[3]")};
            ${be.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${be.setByOffset("k",J.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:dr({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:C,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Be.size(x)/cn)},programUniforms:k})}},Bn=(e,t)=>{Gi(e.inputs,t),e.compute(Wc(e.inputs,t))}}),_c,gc,wc,yc=Q(()=>{er(),Yt(),cr(),_c=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],n=e[2];if(t.dataType!==r.dataType||t.dataType!==n.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(n.dims.length!==1)throw new Error("Gamma must be 1D");if(n.dims[n.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let o=e[3];if(o.dims.length!==1)throw new Error("Beta must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let o=e[4];if(o.dims.length!==1)throw new Error("Bias must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},gc=(e,t,r,n)=>{let i=t.simplified,s=e[0].dims,o=Be.size(s),u=s,c=o,h=s.slice(-1)[0],y=n?s.slice(0,-1).concat(1):[],l=!i&&e.length>3,x=e.length>4,A=n&&r>1,k=n&&r>2,C=r>3,ee=64,J=gr(h),B=[{type:12,data:c},{type:12,data:J},{type:12,data:h},{type:1,data:t.epsilon}],ie=be=>{let We=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],ze=[nt("x",e[0].dataType,e[0].dims,J),nt("skip",e[1].dataType,e[1].dims,J),nt("gamma",e[2].dataType,e[2].dims,J)];l&&ze.push(nt("beta",e[3].dataType,e[3].dims,J)),x&&ze.push(nt("bias",e[4].dataType,e[4].dims,J)),ze.push(Vt("output",e[0].dataType,u,J)),A&&ze.push(Vt("mean_output",1,y)),k&&ze.push(Vt("inv_std_output",1,y)),C&&ze.push(Vt("input_skip_bias_sum",e[0].dataType,u,J));let wt=fr(e[0].dataType),Lt=fr(1,J);return`

      ${be.registerUniforms(We).declareVariables(...ze)}
      var<workgroup> sum_shared : array<${Lt}, ${ee}>;
      var<workgroup> sum_squared_shared : array<${Lt}, ${ee}>;

      ${be.mainStart([ee,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${ee};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${ee};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${ee-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${x?"bias[offset1d + i]":wt+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${C?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Qn(wt,J,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${ee};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Nn("sum",J)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Nn("square_sum",J)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);
        ${A?"mean_output[global_idx] = mean;":""}
        ${k?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${i?"":`- ${wt}(mean)`}) *
            ${wt}(inv_std_dev) * gamma[offset1d + i]
            ${l?"+ beta[offset1d + i]":""};
        }
      }`},ce=[{dims:u,dataType:e[0].dataType}];return r>1&&ce.push({dims:y,dataType:1}),r>2&&ce.push({dims:y,dataType:1}),r>3&&ce.push({dims:s,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${J};${A};${k};${C}`,inputDependencies:e.map((be,We)=>"type")},getShaderSource:ie,getRunData:()=>({outputs:ce,dispatchGroup:{x:Math.ceil(c/h)},programUniforms:B})}},wc=(e,t)=>{_c(e.inputs);let r=[0];e.outputCount>1&&r.push(-3),e.outputCount>2&&r.push(-3),e.outputCount>3&&r.push(3),e.compute(gc(e.inputs,t,e.outputCount,!1),{outputs:r})}}),Up,hd,Vp,Gc,Wp,Gp,qp,Hp,ym=Q(()=>{er(),Yt(),$r(),cr(),Up=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,n)=>{if(e[n+1].dataType!==6&&e[n+1].dataType!==7)throw new Error(`Input ${n} must be an array of int32 or int64`)})},hd=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(n=>r.push(Number(n)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(n=>r.push(Number(n)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Vp=(e,t)=>{if(e.length>1){let r=hd(e,1),n=hd(e,2),i=hd(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),dr({starts:r,ends:n,axes:i})}else return t},Gc=(e,t,r,n,i)=>{let s=e;return e<0&&(s+=r[n[t]]),i[t]<0?Math.max(0,Math.min(s,r[n[t]]-1)):Math.max(0,Math.min(s,r[n[t]]))},Wp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${Ut("uniforms.input_shape","i",r.length)};
            let steps_i = ${Ut("uniforms.steps","i",r.length)};
            let signs_i = ${Ut("uniforms.signs","i",r.length)};
            let starts_i = ${Ut("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,Gp=(e,t)=>{let r=e[0].dims,n=Be.size(r),i=t.axes.length>0?Be.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=hd(e,4);s.forEach(J=>J!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(i.length).fill(1));let o=t.starts.map((J,B)=>Gc(J,B,r,i,s)),u=t.ends.map((J,B)=>Gc(J,B,r,i,s));if(i.length!==o.length||i.length!==u.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let J=0;J<r.length;++J)i.includes(J)||(o.splice(J,0,0),u.splice(J,0,r[J]),s.splice(J,0,1));let c=s.map(J=>Math.sign(J));s.forEach((J,B,ie)=>{if(J<0){let ce=(u[B]-o[B])/J,be=o[B],We=be+ce*s[B];o[B]=We,u[B]=be,ie[B]=-J}});let h=r.slice(0);i.forEach((J,B)=>{h[J]=Math.ceil((u[J]-o[J])/s[J])});let y={dims:h,dataType:e[0].dataType},l=Vt("output",e[0].dataType,h.length),x=nt("input",e[0].dataType,e[0].dims.length),A=Be.size(h),k=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:c.length},{name:"steps",type:"u32",length:s.length}],C=[{type:12,data:A},{type:12,data:o},{type:6,data:c},{type:12,data:s},...At(e[0].dims,h)],ee=J=>`
      ${J.registerUniforms(k).declareVariables(x,l)}
        ${Wp(x,l,r)}
        ${J.mainStart()}
          ${J.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${l.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${l.setByOffset("global_idx",x.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${c.length}_${o.length}_${s.length}`,inputDependencies:["rank"]},getShaderSource:ee,getRunData:()=>({outputs:[y],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:C})}},qp=(e,t)=>{Up(e.inputs,t);let r=Vp(e.inputs,t);e.compute(Gp(e.inputs,r),{inputs:[0]})},Hp=e=>{let t=e.starts,r=e.ends,n=e.axes;return dr({starts:t,ends:r,axes:n})}}),Kp,Xp,Qp,Yp,bm=Q(()=>{er(),Yt(),$r(),jn(),cr(),Kp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Xp=(e,t)=>{let r=e.inputs[0],n=r.dims,i=Be.size(n),s=64,o=n.length,u=Be.normalizeAxis(t.axis,o),c=u<n.length-1,h,y=[];c?(y=Array.from({length:o},(ze,wt)=>wt),y[u]=o-1,y[o-1]=u,h=e.compute(Mn(r,y),{inputs:[r],outputs:[-1]})[0]):h=r;let l=h.dims,x=l[o-1],A=i/x,k=gr(x),C=x/k,ee=(ze,wt)=>wt===4?`max(max(${ze}.x, ${ze}.y), max(${ze}.z, ${ze}.w))`:wt===2?`max(${ze}.x, ${ze}.y)`:wt===3?`max(max(${ze}.x, ${ze}.y), ${ze}.z)`:ze,J=nt("x",h.dataType,h.dims,k),B=Vt("result",h.dataType,h.dims,k),ie=J.type.value,ce=fr(h.dataType)==="f32"?`var threadMax = ${ie}(-3.402823e+38f);`:`var threadMax = ${ie}(-65504.0h);`,be=ze=>`
      var<workgroup> rowMaxShared : ${ie};
      var<workgroup> rowSumShared : ${ie};
      var<workgroup> threadShared : array<${ie}, ${s}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${ie} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${ie}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${ze.registerUniform("packedCols","i32").declareVariables(J,B)}
      ${ze.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${s};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${ce}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${ie}(${ee("threadShared[0]",k)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${ie}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${ie}(${Nn("threadShared[0]",k)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,We=e.compute({name:"Softmax",shaderCache:{hint:`${k}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:l,dataType:h.dataType}],dispatchGroup:{x:A},programUniforms:[{type:6,data:C}]}),getShaderSource:be},{inputs:[h],outputs:[c?-1:0]})[0];c&&e.compute(Mn(We,y),{inputs:[We]})},Qp=(e,t)=>{Kp(e.inputs),Xp(e,t)},Yp=e=>dr({axis:e.axis})}),qc,Zp,Jp,eh,th,Mm=Q(()=>{er(),Yt(),cr(),qc=e=>Array.from(e.getBigInt64Array(),Number),Zp=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(qc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Jp=(e,t)=>{let r=[];for(let n=0;n<e.length;++n)r.push(e[n]*t[n]);return r},eh=(e,t)=>{let r=e[0].dims,n=t??qc(e[1]),i=Jp(r,n),s=Be.size(i),o=e[0].dataType,u=nt("input",o,r.length),c=Vt("output",o,i.length),h=y=>`
      const inputShape = ${u.indices(...r)};
      ${y.registerUniform("output_size","u32").declareVariables(u,c)}
      ${y.mainStart()}
      ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${c.offsetToIndices("global_idx")};
      var input_indices: ${u.type.indices};
      for (var i = 0; i < ${r.length}; i++) {
        let input_dim_i = ${u.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;

        ${u.indicesSet("input_indices","i","input_dim_value")}
      }
      ${c.setByOffset("global_idx",u.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},...At(e[0].dims,i)]}),getShaderSource:h}},th=e=>{Zp(e.inputs),e.compute(eh(e.inputs),{inputs:[0]})}}),rh,nh,ih,vm=Q(()=>{er(),Yt(),cr(),rh=(e,t,r,n,i)=>{let s=Vt("output_data",i,r.length,4),o=nt("a_data",t[1].dataType,t[1].dims.length,4),u=nt("b_data",t[2].dataType,t[2].dims.length,4),c=nt("c_data",t[0].dataType,t[0].dims.length,4),h,y=(l,x,A)=>`select(${x}, ${l}, ${A})`;if(!n)h=s.setByOffset("global_idx",y(o.getByOffset("global_idx"),u.getByOffset("global_idx"),c.getByOffset("global_idx")));else{let l=(x,A,k="")=>{let C=`a_data[index_a${A}][component_a${A}]`,ee=`b_data[index_b${A}][component_b${A}]`,J=`bool(c_data[index_c${A}] & (0xffu << (component_c${A} * 8)))`;return`
            let output_indices${A} = ${s.offsetToIndices(`global_idx * 4u + ${A}u`)};
            let offset_a${A} = ${o.broadcastedIndicesToOffset(`output_indices${A}`,s)};
            let offset_b${A} = ${u.broadcastedIndicesToOffset(`output_indices${A}`,s)};
            let offset_c${A} = ${c.broadcastedIndicesToOffset(`output_indices${A}`,s)};
            let index_a${A} = offset_a${A} / 4u;
            let index_b${A} = offset_b${A} / 4u;
            let index_c${A} = offset_c${A} / 4u;
            let component_a${A} = offset_a${A} % 4u;
            let component_b${A} = offset_b${A} % 4u;
            let component_c${A} = offset_c${A} % 4u;
            ${x}[${A}] = ${k}(${y(C,ee,J)});
          `};i===9?h=`
            var data = vec4<u32>(0);
            ${l("data",0,"u32")}
            ${l("data",1,"u32")}
            ${l("data",2,"u32")}
            ${l("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`
            ${l("output_data[global_idx]",0)}
            ${l("output_data[global_idx]",1)}
            ${l("output_data[global_idx]",2)}
            ${l("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(c,o,u,s)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${h}
      }`},nh=e=>{let t=e[1].dims,r=e[2].dims,n=e[0].dims,i=e[1].dataType,s=!(Be.areEqual(t,r)&&Be.areEqual(r,n)),o=t,u=Be.size(t);if(s){let h=Sn.calcShape(Sn.calcShape(t,r,!1),n,!1);if(!h)throw new Error("Can't perform where op on the given tensors");o=h,u=Be.size(o)}let c=Math.ceil(u/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>rh(h,e,o,s,i),getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:c},...At(n,t,r,o)]})}},ih=e=>{e.compute(nh(e.inputs))}}),sh,xm=Q(()=>{ja(),ss(),$d(),Za(),kl(),Sd(),kd(),Fd(),Ao(),Dd(),Mu(),Bo(),Rd(),Nd(),Pu(),Vd(),Wd(),jc(),Hd(),Kd(),Xd(),tu(),Uc(),qo(),Vc(),_n(),g(),qe(),Vs(),Yo(),qi(),yc(),ym(),bm(),Gu(),Mm(),jn(),ao(),vm(),sh=new Map([["Abs",[Qs]],["Acos",[el]],["Acosh",[tl]],["Add",[Il]],["ArgMax",[Na,qs]],["ArgMin",[Gs,qs]],["Asin",[rl]],["Asinh",[nl]],["Atan",[Ys]],["Atanh",[il]],["Attention",[qa]],["AveragePool",[pc,cc]],["BatchNormalization",[Xa]],["BiasAdd",[Ya]],["BiasSplitGelu",[Sl]],["Cast",[ol,sl]],["Ceil",[ll]],["Clip",[Zs]],["Concat",[Ul,Vl]],["Conv",[$o,Eo]],["ConvTranspose",[fu,vi]],["Cos",[ul]],["Cosh",[dl]],["CumSum",[mu,_u]],["DepthToSpace",[yu,bu]],["DequantizeLinear",[cd,pd]],["Div",[Fl]],["Einsum",[Cu,Oo]],["Elu",[Js,Di]],["Equal",[uo]],["Erf",[cl]],["Exp",[eo]],["Expand",[Su]],["FastGelu",[ku]],["Floor",[pl]],["FusedConv",[$o,Eo]],["Gather",[No,Ud]],["GatherElements",[Vo,Bu]],["GatherBlockQuantized",[jo,Fu]],["Gelu",[hl]],["Gemm",[zr,Lu]],["GlobalAveragePool",[fc,hc]],["GlobalMaxPool",[ln,rn]],["Greater",[zl]],["GreaterOrEqual",[po]],["GroupQueryAttention",[Ku]],["HardSigmoid",[wl,no]],["InstanceNormalization",[Yu]],["LayerNormalization",[ed]],["LeakyRelu",[to,Di]],["Less",[Dl]],["LessOrEqual",[Ll]],["Log",[Tl]],["MatMul",[To]],["MatMulNBits",[Zd,Jd]],["MaxPool",[lr,dd]],["Mul",[Ol]],["MultiHeadAttention",[Nu,Wo]],["Neg",[ml]],["Not",[fl]],["Pad",[lc]],["Pow",[Bl]],["QuickGelu",[Cl,Di]],["Range",[Re]],["Reciprocal",[ro]],["ReduceMin",[Da]],["ReduceMean",[Rs]],["ReduceMax",[za]],["ReduceSum",[La]],["ReduceProd",[js]],["ReduceL1",[Oa]],["ReduceL2",[Ba]],["ReduceLogSum",[Us]],["ReduceLogSumExp",[Ns]],["ReduceSumSquare",[Ra]],["Relu",[_l]],["Resize",[Jr,sn]],["RotaryEmbedding",[Bn]],["Sigmoid",[gl]],["Sin",[yl]],["Sinh",[as]],["Slice",[qp,Hp]],["SkipLayerNormalization",[wc]],["Split",[qd,Wu]],["Sqrt",[bl]],["Softmax",[Qp,Yp]],["Sub",[co]],["Tan",[Ml]],["Tanh",[io]],["ThresholdedRelu",[xl,Di]],["Tile",[th]],["Transpose",[Ed,pa]],["Where",[ih]]])}),oh,Tm=Q(()=>{Kt(),_(),cr(),oh=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,r,n,i){Xe(e.programInfo.name);let s=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let u=[];for(let h of t)u.push({binding:u.length,resource:{buffer:h.buffer}});for(let h of r)u.push({binding:u.length,resource:{buffer:h.buffer}});i&&u.push({binding:u.length,resource:i});let c=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let h={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:c,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(h)}o.setPipeline(e.computePipeline),o.setBindGroup(0,c),o.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ge(e.programInfo.name)}dispose(){}build(e,t){Xe(e.name);let r=this.backend.device,n=[];r.features.has("shader-f16")&&n.push("enable f16;");let i=ua(t,this.backend.device.limits),s=e.getShaderSource(i),o=`${n.join(`
`)}
${i.additionalImplementations}
${s}`,u=r.createShaderModule({code:o,label:e.name});ye("verbose",()=>`[WebGPU] ${e.name} shader code: ${o}`);let c=r.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return Ge(e.name),{programInfo:e,computePipeline:c,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let t=typeof e=="number"?e:e.x,r=typeof e=="number"?1:e.y||1,n=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=i&&r<=i&&n<=i)return[t,r,n];let s=t*r*n,o=Math.ceil(Math.sqrt(s));if(o>i){if(o=Math.ceil(Math.cbrt(s)),o>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}else return[o,o,1]}}}),ah,lh,uh,dh,Em=Q(()=>{Kt(),er(),_(),ue(),Kr(),xm(),Tm(),ah=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let n=0;n<e.length;++n){let i=e[n].dataType;switch(t[n]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let s=e[n].dims.length;r.push(`${i};${s}`);break}case"dims":{let s=e[n].dims.join(",");r.push(`${i};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[n]}`)}}return r.join("|")},lh=(e,t,r)=>{let n=e.name;return e.shaderCache?.hint&&(n+="["+e.shaderCache.hint+"]"),n+=":"+r+`:${ah(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,n},uh=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},dh=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let r=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r};t.features.has("chromium-experimental-timestamp-query-inside-passes")?r.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&r.push("timestamp-query"),t.features.has("shader-f16")&&r.push("shader-f16"),this.device=await t.requestDevice(n),this.adapterInfo=new uh(t.info||await t.requestAdapterInfo()),this.gpuDataManager=vr(this),this.programManager=new oh(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ri(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Xe(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let t=new BigUint64Array(e.getMappedRange()),r=this.pendingQueries.get(e);for(let n=0;n<t.length/2;n++){let i=r[n],s=i.kernelId,o=this.kernels.get(s),u=o.kernelType,c=o.kernelName,h=i.programName,y=i.inputTensorViews,l=i.outputTensorViews,x=t[n*2],A=t[n*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=x);let k=Number(x-this.queryTimeBase),C=Number(A-this.queryTimeBase);if(!Number.isSafeInteger(k)||!Number.isSafeInteger(C))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(ee=>({dims:ee.dims,dataType:$n(ee.dataType)})),outputsMetadata:l.map(ee=>({dims:ee.dims,dataType:$n(ee.dataType)})),kernelId:s,kernelType:u,kernelName:c,programName:h,startTime:k,endTime:C});else{let ee="";y.forEach((B,ie)=>{ee+=`input[${ie}]: [${B.dims}] | ${$n(B.dataType)}, `});let J="";l.forEach((B,ie)=>{J+=`output[${ie}]: [${B.dims}] | ${$n(B.dataType)}, `}),console.log(`[profiling] kernel "${s}|${u}|${c}|${h}" ${ee}${J}execution time: ${C-k} ns`)}rt("GPU",`${h}::${x}::${A}`)}e.unmap(),this.pendingQueries.delete(e)}),Ge()}run(e,t,r,n,i,s){Xe(e.name);let o=[];for(let B=0;B<t.length;++B){let ie=t[B].data;if(ie===0)continue;let ce=this.gpuDataManager.get(ie);if(!ce)throw new Error(`no GPU data for input: ${ie}`);o.push(ce)}let{outputs:u,dispatchGroup:c,programUniforms:h}=e.getRunData(t),y=r.length===0?u.map((B,ie)=>ie):r;if(y.length!==u.length)throw new Error(`Output size ${y.length} must be equal to ${u.length}.`);let l=[],x=[];for(let B=0;B<u.length;++B){if(!Number.isInteger(y[B])||y[B]<-3||y[B]>=s)throw new Error(`Invalid output index: ${y[B]}`);if(y[B]===-3)continue;let ie=y[B]===-1,ce=y[B]===-2,be=ie||ce?i(u[B].dataType,u[B].dims):n(y[B],u[B].dataType,u[B].dims);if(l.push(be),be.data===0)continue;let We=this.gpuDataManager.get(be.data);if(!We)throw new Error(`no GPU data for output: ${be.data}`);if(ie&&this.temporaryData.push(We),ce){let ze=this.kernelPersistentData.get(this.currentKernelId);ze||(ze=[],this.kernelPersistentData.set(this.currentKernelId,ze)),ze.push(We)}x.push(We)}if(o.length!==t.length||x.length!==l.length){if(x.length===0)return Ge(e.name),l;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let A;if(h){let B=0,ie=[];h.forEach(ze=>{let wt=typeof ze.data=="number"?[ze.data]:ze.data;if(wt.length===0)return;let Lt=ze.type===10?2:4,Dt,sr;ze.type===10?(sr=wt.length>4?16:wt.length>2?8:wt.length*Lt,Dt=wt.length>4?16:Lt*wt.length):(sr=wt.length<=2?wt.length*Lt:16,Dt=16),B=Math.ceil(B/sr)*sr,ie.push(B);let Qt=ze.type===10?8:4;B+=wt.length>4?Math.ceil(wt.length/Qt)*Dt:wt.length*Lt});let ce=16;B=Math.ceil(B/ce)*ce;let be=new ArrayBuffer(B);h.forEach((ze,wt)=>{let Lt=ie[wt],Dt=typeof ze.data=="number"?[ze.data]:ze.data;if(ze.type===6)new Int32Array(be,Lt,Dt.length).set(Dt);else if(ze.type===12)new Uint32Array(be,Lt,Dt.length).set(Dt);else if(ze.type===10)new Uint16Array(be,Lt,Dt.length).set(Dt);else if(ze.type===1)new Float32Array(be,Lt,Dt.length).set(Dt);else throw new Error(`Unsupported uniform type: ${$n(ze.type)}`)});let We=this.gpuDataManager.create(B,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(We.buffer,0,be,0,B),this.gpuDataManager.release(We.id),A={offset:0,size:B,buffer:We.buffer}}let k=this.programManager.normalizeDispatchGroupSize(c),C=k[1]===1&&k[2]===1,ee=lh(e,t,C),J=this.programManager.getArtifact(ee);if(J||(J=this.programManager.build(e,k),this.programManager.setArtifact(ee,J),ye("info",()=>`[artifact] key: ${ee}, programName: ${e.name}`)),h&&J.uniformVariablesInfo){if(h.length!==J.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${J.uniformVariablesInfo.length}, got ${h.length} in program "${J.programInfo.name}".`);for(let B=0;B<h.length;B++){let ie=h[B],ce=ie.type,be=typeof ie.data=="number"?1:ie.data.length,[We,ze]=J.uniformVariablesInfo[B];if(ce!==We||be!==ze)throw new Error(`Uniform variable ${B} mismatch: expect type ${We} with size ${ze}, got type ${ce} with size ${be} in program "${J.programInfo.name}".`)}}if(ye("info",()=>`[ProgramManager] run "${e.name}" (key=${ee}) with ${k[0]}x${k[1]}x${k[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let B={kernelId:this.currentKernelId,programName:J.programInfo.name,inputTensorViews:t,outputTensorViews:l};this.pendingKernels.push(B),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(B)}return this.programManager.run(J,o,x,k,A),Ge(e.name),l}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,r,n){let i=sh.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let s={kernelType:e,kernelName:n,kernelEntry:i[0],attributes:[i[1],r]};this.kernels.set(t,s)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let r of t)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,r){let n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);let i=n.kernelType,s=n.kernelName,o=n.kernelEntry,u=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${s}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),ye("info",()=>`[WebGPU] Start to run kernel "[${i}] ${s}"...`);let c=this.env.debug;this.temporaryData=[];try{return c&&this.device.pushErrorScope("validation"),o(t,u[1]),0}catch(h){return r.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${s}" failed. ${h}`)),1}finally{c&&r.push(this.device.popErrorScope().then(h=>h?`GPU validation error for kernel "[${i}] ${s}": ${h.message}`:null));for(let h of this.temporaryData)this.gpuDataManager.release(h.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,r,n){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let s=i.get(t),o=this.gpuDataManager.registerExternalBuffer(r,n,s);return i.set(t,[o,r]),o}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,r){return async()=>{let n=await hr(this,e,t);return V(n.buffer,r)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){ye("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){ye("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){ye("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),r=e.length;this.pendingKernels=[];for(let n=0;n<r;n++){let i=this.getComputePassEncoder(),s=e[n];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(s.computePipeline),i.setBindGroup(0,s.bindGroup),i.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),ch,Hc,Kc,Xc,ph,hh,Cm=Q(()=>{_(),ch=1,Hc=()=>ch++,Kc=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}destroy(){ye("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}sameTypeAndShape(e,t){return this.dataType===e&&this.tensorShape.every((r,n)=>r===t[n])}},Xc=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&this.tensorManager.releaseTensor(this.tensorWrapper)}async ensureTensor(e,t,r){if(this.wrapper){if(this.wrapper.sameTypeAndShape(e,t))return this.wrapper.tensor;r&&(this.activeUpload=new Uint8Array(await this.wrapper.read())),this.tensorManager.releaseTensor(this.wrapper)}let n=MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,t,n,!0,!0),r&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){if(this.wrapper){this.wrapper.write(e);return}this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(e):this.wrapper.read()}},ph=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let e=Hc();return this.tensorTrackersById.set(e,new Xc(this)),e}releaseTensorId(e){let t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,r,n){ye("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${r}, copyOld: ${n}}`);let i=this.tensorTrackersById.get(e);if(!i)throw new Error("Tensor not found.");return i.ensureTensor(t,r,n)}upload(e,t){let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");r.upload(t)}async download(e,t){ye("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t?.byteLength}}`);let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");return r.download(t)}releaseTensorsForSession(e){for(let t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter(t=>t.sessionId!==e)}registerTensor(e,t,r,n){let i=Hc(),s=new Kc({sessionId:this.backend.currentSessionId,context:e,tensor:t,dataType:r,shape:n});return this.tensorTrackersById.set(i,new Xc(this,s)),this.externalTensors.add(s),i}async getCachedTensor(e,t,r,n,i){let s=this.backend.currentSessionId;for(let[c,h]of this.freeTensors.entries())if(h.sameTypeAndShape(e,t)){let y=this.freeTensors.splice(c,1)[0];return y.sessionId=s,y}let o=this.backend.currentContext;ye("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`);let u=await o.createTensor({dataType:e,shape:t,dimensions:t,usage:r,writable:n,readable:i});return new Kc({sessionId:s,context:o,tensor:u,dataType:e,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},hh=(...e)=>new ph(...e)}),Qc,fh,$m=Q(()=>{er(),Br(),ue(),Cm(),_(),Qc=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),fh=class{constructor(e){this.tensorManager=hh(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,ri(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let r=this.sessionIdsByMLContext.get(t);r||(r=new Set,this.sessionIdsByMLContext.set(t,r)),r.add(e)}onReleaseSession(e){let t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let r=this.sessionIdsByMLContext.get(t);r.delete(e),r.size===0&&this.sessionIdsByMLContext.delete(t)}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){ye("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,r,n){let i=Qc.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,i,r,n)}uploadTensor(e,t){if(!jt().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");ye("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let r=await this.tensorManager.download(e);return V(r,t)}}registerMLTensor(e,t,r){let n=Qc.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);let i=this.tensorManager.registerTensor(this.currentContext,e,n,r);return ye("verbose",()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${n}, dimensions: ${r}} -> {tensorId: ${i}}`),i}registerMLConstant(e,t,r,n,i,s){if(!s)throw new Error("External mounted files are not available.");let o=e;e.startsWith("./")&&(o=e.substring(2));let u=s.get(o);if(!u)throw new Error(`File with name ${o} not found in preloaded files.`);if(t+r>u.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let c=u.slice(t,t+r).buffer,h;switch(i.dataType){case"float32":h=new Float32Array(c);break;case"float16":h=new Uint16Array(c);break;case"int32":h=new Int32Array(c);break;case"uint32":h=new Uint32Array(c);break;case"int64":h=new BigInt64Array(c);break;case"uint64":h=new BigUint64Array(c);break;case"int8":h=new Int8Array(c);break;case"uint8":h=new Uint8Array(c);break;default:throw new Error(`Unsupported data type: ${i.dataType} in creating WebNN Constant from external data.`)}return ye("verbose",()=>`[WebNN] registerMLConstant {dataType: ${i.dataType}, shape: ${i.shape}}}`),n.constant(i,h)}flush(){}}}),mh={};R(mh,{init:()=>gh});var bc,_h,gh,Sm=Q(()=>{er(),Em(),_(),Yt(),$m(),bc=class _m{constructor(t,r,n,i){this.module=t,this.dataType=r,this.data=n,this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=Be.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=Be.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=Be.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let t=Be.size(this.dims);return t===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(Be.size(t)!==Be.size(this.dims))throw new Error("Invalid new shape");return new _m(this.module,this.dataType,this.data,t)}},_h=class{constructor(e,t,r){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let n=e.HEAPU32,i=r>>>2;this.opKernelContext=n[i++];let s=n[i++];this.outputCount=n[i++],this.customDataOffset=n[i++],this.customDataSize=n[i++];let o=[];for(let u=0;u<s;u++){let c=n[i++],h=n[i++],y=n[i++],l=[];for(let x=0;x<y;x++)l.push(n[i++]);o.push(new bc(e,c,h,l))}this.inputs=o}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,t){let r=t?.inputs?.map(o=>typeof o=="number"?this.inputs[o]:o)??this.inputs,n=t?.outputs??[],i=(o,u,c)=>new bc(this.module,u,this.output(o,c),c),s=(o,u)=>{let c=Ln(o,u);if(!c)throw new Error(`Unsupported data type: ${o}`);let h=c>0?this.backend.gpuDataManager.create(c).id:0;return new bc(this.module,o,h,u)};return this.backend.run(e,r,n,i,s,this.outputCount)}output(e,t){let r=this.module.stackSave();try{let n=this.module.stackAlloc((1+t.length)*4),i=n>>2;this.module.HEAPU32[i++]=t.length;for(let s=0;s<t.length;s++)this.module.HEAPU32[i++]=t[s];return this.module._JsepOutput(this.opKernelContext,e,n)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(r)}}},gh=async(e,t,r,n)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let s=new dh;await s.initialize(r,n),i("webgpu",[s,o=>s.alloc(o),o=>s.free(o),(o,u,c,h=!1)=>{if(h)ye("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${o}, dst=${u}, size=${c}`),s.memcpy(o,u);else{ye("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${o}, gpuDataId=${u}, size=${c}`);let y=t.HEAPU8.subarray(o>>>0,(o>>>0)+c);s.upload(u,y)}},async(o,u,c)=>{ye("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${u}, size=${c}`),await s.download(o,()=>t.HEAPU8.subarray(u>>>0,(u>>>0)+c))},(o,u,c)=>s.createKernel(o,u,c,t.UTF8ToString(t._JsepGetNodeName(u))),o=>s.releaseKernel(o),(o,u,c,h)=>{ye("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${c}, kernel=${o}, contextDataOffset=${u}`);let y=new _h(t,s,u);return s.computeKernel(o,y,h)},()=>s.captureBegin(),()=>s.captureEnd(),()=>s.replay()])}else{let s=new fh(r);i("webnn",[s,()=>s.reserveTensorId(),o=>s.releaseTensorId(o),async(o,u,c,h)=>s.ensureTensor(o,u,c,h),(o,u)=>{s.uploadTensor(o,u)},async(o,u)=>s.downloadTensor(o,u)])}}}),wh,Yc,Zc,Hi,yh,Mc,Jc,ep,tp,rp,np,ip,bh=Q(()=>{Kn(),ei(),er(),Br(),hi(),Fi(),wh=(e,t)=>{jt()._OrtInit(e,t)!==0&&Rr("Can't initialize onnxruntime.")},Yc=async e=>{wh(e.wasm.numThreads,On(e.logLevel))},Zc=async(e,t)=>{{let r=(Sm(),q(mh)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=e.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let s=e.webgpu.forceFallbackAdapter;if(s!==void 0&&typeof s!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${s}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:s}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await r("webgpu",jt(),e,n)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",jt(),e)}}},Hi=new Map,yh=e=>{let t=jt(),r=t.stackSave();try{let n=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,n,n+4)!==0&&Rr("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(r)}},Mc=e=>{let t=jt(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Jc=async(e,t)=>{let r,n,i=jt();Array.isArray(e)?[r,n]=e:e.buffer===i.HEAPU8.buffer?[r,n]=[e.byteOffset,e.byteLength]:[r,n]=Mc(e);let s=0,o=0,u=0,c=[],h=[],y=[];try{if([o,c]=Ii(t),t?.externalData&&i.mountExternalData){let B=[];for(let ie of t.externalData){let ce=typeof ie=="string"?ie:ie.path;B.push(ti(typeof ie=="string"?ie:ie.data).then(be=>{i.mountExternalData(ce,be)}))}await Promise.all(B)}for(let B of t?.executionProviders??[])if((typeof B=="string"?B:B.name)==="webnn"){if(i.shouldTransferToMLTensor=!1,i.currentContext)throw new Error("WebNN execution provider is already set.");if(typeof B!="string"){let ie=B,ce=ie?.context,be=ie?.gpuDevice,We=ie?.deviceType,ze=ie?.powerPreference;ce?i.currentContext=ce:be?i.currentContext=await navigator.ml.createContext(be):i.currentContext=await navigator.ml.createContext({deviceType:We,powerPreference:ze})}else i.currentContext=await navigator.ml.createContext();break}s=await i._OrtCreateSession(r,n,o),s===0&&Rr("Can't create a session."),i.jsepOnCreateSession?.(),i.currentContext&&(i.jsepRegisterMLContext(s,i.currentContext),i.currentContext=void 0,i.shouldTransferToMLTensor=!0);let[l,x]=yh(s),A=!!t?.enableGraphCapture,k=[],C=[],ee=[];for(let B=0;B<l;B++){let ie=i._OrtGetInputName(s,B);ie===0&&Rr("Can't get an input name."),h.push(ie),k.push(i.UTF8ToString(ie))}for(let B=0;B<x;B++){let ie=i._OrtGetOutputName(s,B);ie===0&&Rr("Can't get an output name."),y.push(ie);let ce=i.UTF8ToString(ie);C.push(ce);{if(A&&t?.preferredOutputLocation===void 0){ee.push("gpu-buffer");continue}let be=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[ce]??"cpu";if(be!=="cpu"&&be!=="cpu-pinned"&&be!=="gpu-buffer"&&be!=="ml-tensor")throw new Error(`Not supported preferred output location: ${be}.`);if(A&&be!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${be}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);ee.push(be)}}let J=null;return ee.some(B=>B==="gpu-buffer"||B==="ml-tensor")&&(u=i._OrtCreateBinding(s),u===0&&Rr("Can't create IO binding."),J={handle:u,outputPreferredLocations:ee,outputPreferredLocationsEncoded:ee.map(B=>gi(B))}),Hi.set(s,[s,h,y,J,A,!1]),[s,k,C]}catch(l){throw h.forEach(x=>i._OrtFree(x)),y.forEach(x=>i._OrtFree(x)),u!==0&&i._OrtReleaseBinding(u),s!==0&&i._OrtReleaseSession(s),l}finally{i._free(r),o!==0&&i._OrtReleaseSessionOptions(o),c.forEach(l=>i._free(l)),i.unmountExternalData?.()}},ep=e=>{let t=jt(),r=Hi.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[n,i,s,o,u]=r;o&&(u&&t._OrtClearBoundOutputs(o.handle),t._OrtReleaseBinding(o.handle)),t.jsepOnReleaseSession?.(e),i.forEach(c=>t._OrtFree(c)),s.forEach(c=>t._OrtFree(c)),t._OrtReleaseSession(n),Hi.delete(e)},tp=(e,t,r,n,i,s=!1)=>{if(!e){t.push(0);return}let o=jt(),u=e[0],c=e[1],h=e[3],y,l;if(u==="string"&&(h==="gpu-buffer"||h==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(s&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let k=e[2].gpuBuffer;l=Ln(Xn(u),c);let C=o.jsepRegisterBuffer;if(!C)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');y=C(n,i,k,l)}else if(h==="ml-tensor"){let k=e[2].mlTensor;l=Ln(Xn(u),c);let C=o.jsepRegisterMLTensor;if(!C)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');y=C(k,Xn(u),c)}else{let k=e[2];if(Array.isArray(k)){l=4*k.length,y=o._malloc(l),r.push(y);let C=y/4;for(let ee=0;ee<k.length;ee++){if(typeof k[ee]!="string")throw new TypeError(`tensor data at index ${ee} is not a string`);o.HEAPU32[C++]=kr(k[ee],r)}}else l=k.byteLength,y=o._malloc(l),r.push(y),o.HEAPU8.set(new Uint8Array(k.buffer,k.byteOffset,l),y)}let x=o.stackSave(),A=o.stackAlloc(4*c.length);try{let k=A/4;c.forEach(ee=>o.HEAP32[k++]=ee);let C=o._OrtCreateTensor(Xn(u),y,l,A,c.length,gi(h));C===0&&Rr(`Can't create tensor for input/output. session=${n}, index=${i}.`),t.push(C)}finally{o.stackRestore(x)}},rp=async(e,t,r,n,i,s)=>{let o=jt(),u=Hi.get(e);if(!u)throw new Error(`cannot run inference. invalid session id: ${e}`);let c=u[0],h=u[1],y=u[2],l=u[3],x=u[4],A=u[5],k=t.length,C=n.length,ee=0,J=[],B=[],ie=[],ce=[],be=o.stackSave(),We=o.stackAlloc(k*4),ze=o.stackAlloc(k*4),wt=o.stackAlloc(C*4),Lt=o.stackAlloc(C*4);try{o.jsepOnRunStart?.(c),[ee,J]=$i(s);for(let Ht=0;Ht<k;Ht++)tp(r[Ht],B,ce,e,t[Ht],x);for(let Ht=0;Ht<C;Ht++)tp(i[Ht],ie,ce,e,k+n[Ht],x);let Dt=We/4,sr=ze/4,Qt=wt/4,or=Lt/4;for(let Ht=0;Ht<k;Ht++)o.HEAPU32[Dt++]=B[Ht],o.HEAPU32[sr++]=h[t[Ht]];for(let Ht=0;Ht<C;Ht++)o.HEAPU32[Qt++]=ie[Ht],o.HEAPU32[or++]=y[n[Ht]];if(l&&!A){let{handle:Ht,outputPreferredLocations:Mr,outputPreferredLocationsEncoded:br}=l;if(h.length!==k)throw new Error(`input count from feeds (${k}) is expected to be always equal to model's input count (${h.length}).`);for(let Gt=0;Gt<k;Gt++){let _r=t[Gt];await o._OrtBindInput(Ht,h[_r],B[Gt])!==0&&Rr(`Can't bind input[${Gt}] for session=${e}.`)}for(let Gt=0;Gt<C;Gt++){let _r=n[Gt];i[Gt]?.[3]?o._OrtBindOutput(Ht,y[_r],ie[Gt],0)!==0&&Rr(`Can't bind pre-allocated output[${Gt}] for session=${e}.`):o._OrtBindOutput(Ht,y[_r],0,br[_r])!==0&&Rr(`Can't bind output[${Gt}] to ${Mr[Gt]} for session=${e}.`)}Hi.set(e,[c,h,y,l,x,!0])}let Tr;l?Tr=await o._OrtRunWithBinding(c,l.handle,C,wt,ee):Tr=await o._OrtRun(c,ze,We,k,Lt,C,wt,ee),Tr!==0&&Rr("failed to call OrtRun().");let ir=[];for(let Ht=0;Ht<C;Ht++){let Mr=o.HEAPU32[wt/4+Ht];if(Mr===ie[Ht]){ir.push(i[Ht]);continue}let br=o.stackSave(),Gt=o.stackAlloc(4*4),_r=!1,Je,Et=0;try{o._OrtGetTensorData(Mr,Gt,Gt+4,Gt+8,Gt+12)!==0&&Rr(`Can't access output tensor data on index ${Ht}.`);let pr=Gt/4,Ur=o.HEAPU32[pr++];Et=o.HEAPU32[pr++];let Wr=o.HEAPU32[pr++],Gn=o.HEAPU32[pr++],zn=[];for(let fn=0;fn<Gn;fn++)zn.push(o.HEAPU32[Wr/4+fn]);o._OrtFree(Wr);let Cn=zn.reduce((fn,mn)=>fn*mn,1);Je=$n(Ur);let vn=l?.outputPreferredLocations[n[Ht]];if(Je==="string"){if(vn==="gpu-buffer"||vn==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let fn=[],mn=Et/4;for(let Xi=0;Xi<Cn;Xi++){let Qi=o.HEAPU32[mn++],ys=Xi===Cn-1?void 0:o.HEAPU32[mn]-Qi;fn.push(o.UTF8ToString(Qi,ys))}ir.push([Je,zn,fn,"cpu"])}else if(vn==="gpu-buffer"&&Cn>0){let fn=o.jsepGetBuffer;if(!fn)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let mn=fn(Et),Xi=Ln(Ur,Cn);if(Xi===void 0||!mi(Je))throw new Error(`Unsupported data type: ${Je}`);_r=!0,ir.push([Je,zn,{gpuBuffer:mn,download:o.jsepCreateDownloader(mn,Xi,Je),dispose:()=>{o._OrtReleaseTensor(Mr)}},"gpu-buffer"])}else if(vn==="ml-tensor"&&Cn>0){let fn=o.jsepEnsureTensor;if(!fn)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(Ln(Ur,Cn)===void 0||!_i(Je))throw new Error(`Unsupported data type: ${Je}`);let mn=await fn(Et,Ur,zn,!1);_r=!0,ir.push([Je,zn,{mlTensor:mn,download:o.jsepCreateMLTensorDownloader(Et,Je),dispose:()=>{o.jsepReleaseTensorId(Et),o._OrtReleaseTensor(Mr)}},"ml-tensor"])}else{let fn=fi(Je),mn=new fn(Cn);new Uint8Array(mn.buffer,mn.byteOffset,mn.byteLength).set(o.HEAPU8.subarray(Et,Et+mn.byteLength)),ir.push([Je,zn,mn,"cpu"])}}finally{o.stackRestore(br),Je==="string"&&Et&&o._free(Et),_r||o._OrtReleaseTensor(Mr)}}return l&&!x&&(o._OrtClearBoundOutputs(l.handle),Hi.set(e,[c,h,y,l,x,!1])),ir}finally{o.stackRestore(be),B.forEach(Dt=>o._OrtReleaseTensor(Dt)),ie.forEach(Dt=>o._OrtReleaseTensor(Dt)),ce.forEach(Dt=>o._free(Dt)),ee!==0&&o._OrtReleaseRunOptions(ee),J.forEach(Dt=>o._free(Dt))}},np=e=>{let t=jt(),r=Hi.get(e);if(!r)throw new Error("invalid session id");let n=r[0],i=t._OrtEndProfiling(n);i===0&&Rr("Can't get an profile file name."),t._OrtFree(i)},ip=e=>{let t=[];for(let r of e){let n=r[2];!Array.isArray(n)&&"buffer"in n&&t.push(n.buffer)}return t}}),Ki,Wn,Zo,fd,md,vc,sp,xc,gs,ws,Mh,vh,xh,Th,Eh,Ch,$h,Sh,kh=Q(()=>{Kt(),bh(),Br(),O(),Ki=()=>!!T.wasm.proxy&&typeof document<"u",Zo=!1,fd=!1,md=!1,xc=new Map,gs=(e,t)=>{let r=xc.get(e);r?r.push(t):xc.set(e,[t])},ws=()=>{if(Zo||!fd||md||!Wn)throw new Error("worker not ready")},Mh=e=>{switch(e.data.type){case"init-wasm":Zo=!1,e.data.err?(md=!0,sp[1](e.data.err)):(fd=!0,sp[0]()),vc&&(URL.revokeObjectURL(vc),vc=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=xc.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},vh=async()=>{if(!fd){if(Zo)throw new Error("multiple calls to 'initWasm()' detected.");if(md)throw new Error("previous call to 'initWasm()' failed.");if(Zo=!0,Ki())return new Promise((e,t)=>{Wn?.terminate(),M().then(([r,n])=>{try{Wn=n,Wn.onerror=s=>t(s),Wn.onmessage=Mh,sp=[e,t];let i={type:"init-wasm",in:T};Wn.postMessage(i),vc=r}catch(i){t(i)}},t)});try{await nr(T.wasm),await Yc(T),fd=!0}catch(e){throw md=!0,e}finally{Zo=!1}}},xh=async e=>{if(Ki())return ws(),new Promise((t,r)=>{gs("init-ep",[t,r]);let n={type:"init-ep",in:{epName:e,env:T}};Wn.postMessage(n)});await Zc(T,e)},Th=async e=>Ki()?(ws(),new Promise((t,r)=>{gs("copy-from",[t,r]);let n={type:"copy-from",in:{buffer:e}};Wn.postMessage(n,[e.buffer])})):Mc(e),Eh=async(e,t)=>{if(Ki()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return ws(),new Promise((r,n)=>{gs("create",[r,n]);let i={type:"create",in:{model:e,options:{...t}}},s=[];e instanceof Uint8Array&&s.push(e.buffer),Wn.postMessage(i,s)})}else return Jc(e,t)},Ch=async e=>{if(Ki())return ws(),new Promise((t,r)=>{gs("release",[t,r]);let n={type:"release",in:e};Wn.postMessage(n)});ep(e)},$h=async(e,t,r,n,i,s)=>{if(Ki()){if(r.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return ws(),new Promise((o,u)=>{gs("run",[o,u]);let c=r,h={type:"run",in:{sessionId:e,inputIndices:t,inputs:c,outputIndices:n,options:s}};Wn.postMessage(h,ip(c))})}else return rp(e,t,r,n,i,s)},Sh=async e=>{if(Ki())return ws(),new Promise((t,r)=>{gs("end-profiling",[t,r]);let n={type:"end-profiling",in:e};Wn.postMessage(n)});np(e)}}),op,Ph,Ah,km=Q(()=>{Kt(),kh(),er(),Ir(),Fi(),op=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Ph=e=>{switch(e[3]){case"cpu":return new re(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!mi(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:n,dispose:i}=e[2];return re.fromGpuBuffer(r,{dataType:t,dims:e[1],download:n,dispose:i})}case"ml-tensor":{let t=e[0];if(!_i(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:r,download:n,dispose:i}=e[2];return re.fromMLTensor(r,{dataType:t,dims:e[1],download:n,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},Ah=class{async fetchModelAndCopyToWasmMemory(e){return Th(await ti(e))}async loadModel(e,t){Xe();let r;typeof e=="string"?r=await this.fetchModelAndCopyToWasmMemory(e):r=e,[this.sessionId,this.inputNames,this.outputNames]=await Eh(r,t),Ge()}async dispose(){return Ch(this.sessionId)}async run(e,t,r){Xe();let n=[],i=[];Object.entries(e).forEach(l=>{let x=l[0],A=l[1],k=this.inputNames.indexOf(x);if(k===-1)throw new Error(`invalid input '${x}'`);n.push(A),i.push(k)});let s=[],o=[];Object.entries(t).forEach(l=>{let x=l[0],A=l[1],k=this.outputNames.indexOf(x);if(k===-1)throw new Error(`invalid output '${x}'`);s.push(A),o.push(k)});let u=n.map((l,x)=>op(l,()=>`input "${this.inputNames[i[x]]}"`)),c=s.map((l,x)=>l?op(l,()=>`output "${this.outputNames[o[x]]}"`):null),h=await $h(this.sessionId,i,u,o,c,r),y={};for(let l=0;l<h.length;l++)y[this.outputNames[o[l]]]=s[l]??Ph(h[l]);return Ge(),y}startProfiling(){}endProfiling(){Sh(this.sessionId)}}}),Ih={};R(Ih,{OnnxruntimeWebAssemblyBackend:()=>lp,initializeFlags:()=>ap,wasmBackend:()=>Fh});var ap,lp,Fh,Pm=Q(()=>{Kt(),kh(),km(),O(),ap=()=>{if((typeof T.wasm.initTimeout!="number"||T.wasm.initTimeout<0)&&(T.wasm.initTimeout=0),T.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof T.wasm.proxy!="boolean"&&(T.wasm.proxy=!1),typeof T.wasm.trace!="boolean"&&(T.wasm.trace=!1),typeof T.wasm.numThreads!="number"||!Number.isInteger(T.wasm.numThreads)||T.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)T.wasm.numThreads=1;else{let e=typeof navigator>"u"?Pe("node:os").cpus().length:navigator.hardwareConcurrency;T.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},lp=class{async init(e){ap(),await vh(),await xh(e)}async createInferenceSessionHandler(e,t){let r=new Ah;return await r.loadModel(e,t),Promise.resolve(r)}},Fh=new lp});Kt(),Kt(),Kt();var Am="1.21.0-dev.20241024-d9ca84ef96",Im=Wt;{let e=(Pm(),q(Ih)).wasmBackend;Se("webgpu",e,5),Se("webnn",e,5),Se("cpu",e,10),Se("wasm",e,10)}Object.defineProperty(T.versions,"web",{value:Am,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"./src/backends/onnx.js":(we,Y,P)=>{var $;P.r(Y),P.d(Y,{Tensor:()=>Pe.Tensor,createInferenceSession:()=>j,deviceToExecutionProviders:()=>Se,isONNXProxy:()=>U,isONNXTensor:()=>le});var se=P("./src/env.js"),xe=P("?2ce3"),Ie=P("./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs"),Pe=P("./node_modules/onnxruntime-common/dist/esm/index.js");const Q=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),R=[];let W,q;const te=Symbol.for("onnxruntime");if(te in globalThis)q=globalThis[te];else if(se.apis.IS_NODE_ENV){switch(q=xe??($||($=P.t(xe,2))),xs.platform){case"win32":R.push("dml");break;case"linux":xs.arch==="x64"&&R.push("cuda");break}R.push("cpu"),W=["cpu"]}else q=Ie,se.apis.IS_WEBNN_AVAILABLE&&R.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),se.apis.IS_WEBGPU_AVAILABLE&&R.push("webgpu"),R.push("wasm"),W=["wasm"];const pe=q.InferenceSession;function Se(H=null){if(!H)return W;switch(H){case"auto":return R;case"gpu":return R.filter(N=>["webgpu","cuda","dml","webnn-gpu"].includes(N))}if(R.includes(H))return[Q[H]??H];throw new Error(`Unsupported device: "${H}". Should be one of: ${R.join(", ")}.`)}let Ee=null;async function j(H,N,I){Ee&&await Ee;const z=pe.create(H,N);Ee??=z;const T=await z;return T.config=I,T}function le(H){return H instanceof q.Tensor}const de=q?.env;de?.wasm&&(de.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${se.env.version}/dist/`,de.wasm.proxy=!1,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(de.wasm.numThreads=1)),de?.webgpu&&(de.webgpu.powerPreference="high-performance");function U(){return de?.wasm?.proxy}se.env.backends.onnx=de},"./src/configs.js":(we,Y,P)=>{P.r(Y),P.d(Y,{AutoConfig:()=>R,PretrainedConfig:()=>Q,getKeyValueShapes:()=>Pe});var $=P("./src/utils/core.js"),se=P("./src/utils/hub.js");async function xe(W,q){return await(0,se.getModelJSON)(W,"config.json",!0,q)}function Ie(W){const q={};let te={};switch(W.model_type){case"llava":case"paligemma":case"florence2":te=Ie(W.text_config);break;case"moondream1":te=Ie(W.phi_config);break;case"musicgen":te=Ie(W.decoder);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":q.num_heads="n_head",q.num_layers="n_layer",q.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":q.num_heads="num_attention_heads",q.num_layers="num_hidden_layers",q.hidden_size="hidden_size";break;case"llama":case"olmo":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":q.num_heads="num_key_value_heads",q.num_layers="num_hidden_layers",q.hidden_size="hidden_size",q.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":q.num_heads="num_key_value_heads",q.num_layers="num_hidden_layers",q.dim_kv="head_dim";break;case"openelm":q.num_heads="num_kv_heads",q.num_layers="num_transformer_layers",q.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":q.num_heads="num_heads",q.num_layers="num_layers",q.hidden_size="hidden_size";break;case"bloom":q.num_heads="n_head",q.num_layers="n_layer",q.hidden_size="hidden_size";break;case"mpt":q.num_heads="n_heads",q.num_layers="n_layers",q.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":q.num_decoder_layers="num_decoder_layers",q.num_decoder_heads="num_heads",q.decoder_dim_kv="d_kv",q.num_encoder_layers="num_layers",q.num_encoder_heads="num_heads",q.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":q.num_decoder_layers="decoder_layers",q.num_decoder_heads="decoder_attention_heads",q.decoder_hidden_size="d_model",q.num_encoder_layers="encoder_layers",q.num_encoder_heads="encoder_attention_heads",q.encoder_hidden_size="d_model";break;case"speecht5":q.num_decoder_layers="decoder_layers",q.num_decoder_heads="decoder_attention_heads",q.decoder_hidden_size="hidden_size",q.num_encoder_layers="encoder_layers",q.num_encoder_heads="encoder_attention_heads",q.encoder_hidden_size="hidden_size";break;case"trocr":q.num_encoder_layers=q.num_decoder_layers="decoder_layers",q.num_encoder_heads=q.num_decoder_heads="decoder_attention_heads",q.encoder_hidden_size=q.decoder_hidden_size="d_model";break;case"musicgen_decoder":q.num_encoder_layers=q.num_decoder_layers="num_hidden_layers",q.num_encoder_heads=q.num_decoder_heads="num_attention_heads",q.encoder_hidden_size=q.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const Se=Ie(W.decoder),Ee="num_decoder_layers"in Se,j=(0,$.pick)(W,["model_type","is_encoder_decoder"]);return Ee?(j.num_decoder_layers=Se.num_decoder_layers,j.num_decoder_heads=Se.num_decoder_heads,j.decoder_hidden_size=Se.decoder_hidden_size,j.num_encoder_layers=Se.num_encoder_layers,j.num_encoder_heads=Se.num_encoder_heads,j.encoder_hidden_size=Se.encoder_hidden_size):(j.num_layers=Se.num_layers,j.num_heads=Se.num_heads,j.hidden_size=Se.hidden_size),j}const pe={...te,...(0,$.pick)(W,["model_type","multi_query","is_encoder_decoder"])};for(const Se in q)pe[Se]=W[q[Se]];return pe}function Pe(W,{prefix:q="past_key_values"}={}){const te={},pe=W.normalized_config,Se=1;if(pe.is_encoder_decoder&&"num_encoder_heads"in pe&&"num_decoder_heads"in pe){const Ee=pe.encoder_dim_kv??pe.encoder_hidden_size/pe.num_encoder_heads,j=pe.decoder_dim_kv??pe.decoder_hidden_size/pe.num_decoder_heads,le=[Se,pe.num_encoder_heads,0,Ee],de=[Se,pe.num_decoder_heads,0,j];for(let U=0;U<pe.num_decoder_layers;++U)te[`${q}.${U}.encoder.key`]=le,te[`${q}.${U}.encoder.value`]=le,te[`${q}.${U}.decoder.key`]=de,te[`${q}.${U}.decoder.value`]=de}else{const Ee=pe.num_heads,j=pe.num_layers,le=pe.dim_kv??pe.hidden_size/(pe.num_attention_heads??Ee);if(pe.model_type==="falcon"){const de=[Se*Ee,0,le];for(let U=0;U<j;++U)te[`${q}.${U}.key`]=de,te[`${q}.${U}.value`]=de}else if(pe.multi_query){const de=[Se*Ee,0,2*le];for(let U=0;U<j;++U)te[`${q}.${U}.key_value`]=de}else if(pe.model_type==="bloom"){const de=[Se*Ee,le,0],U=[Se*Ee,0,le];for(let H=0;H<j;++H)te[`${q}.${H}.key`]=de,te[`${q}.${H}.value`]=U}else if(pe.model_type==="openelm")for(let de=0;de<j;++de){const U=[Se,Ee[de],0,le];te[`${q}.${de}.key`]=U,te[`${q}.${de}.value`]=U}else{const de=[Se,Ee,0,le];for(let U=0;U<j;++U)te[`${q}.${U}.key`]=de,te[`${q}.${U}.value`]=de}}return te}class Q{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(q){Object.assign(this,q),this.normalized_config=Ie(this)}static async from_pretrained(q,{progress_callback:te=null,config:pe=null,cache_dir:Se=null,local_files_only:Ee=!1,revision:j="main"}={}){pe&&!(pe instanceof Q)&&(pe=new Q(pe));const le=pe??await xe(q,{progress_callback:te,config:pe,cache_dir:Se,local_files_only:Ee,revision:j});return new this(le)}}class R{static async from_pretrained(...q){return Q.from_pretrained(...q)}}},"./src/env.js":(we,Y,P)=>{P.r(Y),P.d(Y,{apis:()=>j,env:()=>I});var $=P("?569f"),se=P("?3f59"),xe=P("?154a");const Ie="3.0.2",Pe=typeof self<"u",Q=Pe&&self.constructor.name==="DedicatedWorkerGlobalScope",R=Pe&&"caches"in self,W=typeof navigator<"u"&&"gpu"in navigator,q=typeof navigator<"u"&&"ml"in navigator,te=typeof xs<"u",pe=te&&xs?.release?.name==="node",Se=!z($),Ee=!z(se),j=Object.freeze({IS_BROWSER_ENV:Pe,IS_WEBWORKER_ENV:Q,IS_WEB_CACHE_AVAILABLE:R,IS_WEBGPU_AVAILABLE:W,IS_WEBNN_AVAILABLE:q,IS_PROCESS_AVAILABLE:te,IS_NODE_ENV:pe,IS_FS_AVAILABLE:Se,IS_PATH_AVAILABLE:Ee}),le=Se&&Ee;let de="./";if(le){const T=Object(import.meta).url;T?de=se.dirname(se.dirname(xe.fileURLToPath(T))):typeof __dirname<"u"&&(de=se.dirname(__dirname))}const U=le?se.join(de,"/.cache/"):null,H="/models/",N=le?se.join(de,H):H,I={version:Ie,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!Pe,localModelPath:N,useFS:Se,useBrowserCache:R,useFSCache:Se,cacheDir:U,useCustomCache:!1,customCache:null};function z(T){return Object.keys(T).length===0}},"./src/generation/configuration_utils.js":(we,Y,P)=>{P.r(Y),P.d(Y,{GenerationConfig:()=>se});var $=P("./src/utils/core.js");class se{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(Ie){Object.assign(this,(0,$.pick)(Ie,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(we,Y,P)=>{P.r(Y),P.d(Y,{ClassifierFreeGuidanceLogitsProcessor:()=>le,ForcedBOSTokenLogitsProcessor:()=>Q,ForcedEOSTokenLogitsProcessor:()=>R,LogitsProcessor:()=>xe,LogitsProcessorList:()=>Pe,LogitsWarper:()=>Ie,MinLengthLogitsProcessor:()=>Se,MinNewTokensLengthLogitsProcessor:()=>Ee,NoBadWordsLogitsProcessor:()=>j,NoRepeatNGramLogitsProcessor:()=>te,RepetitionPenaltyLogitsProcessor:()=>pe,SuppressTokensAtBeginLogitsProcessor:()=>W,TemperatureLogitsWarper:()=>de,TopKLogitsWarper:()=>H,TopPLogitsWarper:()=>U,WhisperTimeStampLogitsProcessor:()=>q});var $=P("./src/utils/generic.js");P("./src/utils/tensor.js");var se=P("./src/utils/maths.js");class xe extends $.Callable{_call(I,z){throw Error("`_call` should be implemented in a subclass")}}class Ie extends $.Callable{_call(I,z){throw Error("`_call` should be implemented in a subclass")}}class Pe extends $.Callable{constructor(){super(),this.processors=[]}push(I){this.processors.push(I)}extend(I){this.processors.push(...I)}_call(I,z){let T=z;for(const _e of this.processors)T=_e(I,T);return T}[Symbol.iterator](){return this.processors.values()}}class Q extends xe{constructor(I){super(),this.bos_token_id=I}_call(I,z){for(let T=0;T<I.length;++T)if(I[T].length===1){const _e=z[T].data;_e.fill(-1/0),_e[this.bos_token_id]=0}return z}}class R extends xe{constructor(I,z){super(),this.max_length=I,this.eos_token_id=Array.isArray(z)?z:[z]}_call(I,z){for(let T=0;T<I.length;++T)if(I[T].length===this.max_length-1){const _e=z[T].data;_e.fill(-1/0);for(const Me of this.eos_token_id)_e[Me]=0}return z}}class W extends xe{constructor(I,z){super(),this.begin_suppress_tokens=I,this.begin_index=z}_call(I,z){for(let T=0;T<I.length;++T)if(I[T].length===this.begin_index){const _e=z[T].data;for(const Me of this.begin_suppress_tokens)_e[Me]=-1/0}return z}}class q extends xe{constructor(I,z){super(),this.eos_token_id=Array.isArray(I.eos_token_id)?I.eos_token_id[0]:I.eos_token_id,this.no_timestamps_token_id=I.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=z.length,z.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=I.max_initial_timestamp_index}_call(I,z){for(let T=0;T<I.length;++T){const _e=z[T].data;if(_e[this.no_timestamps_token_id]=-1/0,I[T].length===this.begin_index-1){_e.fill(-1/0),_e[this.timestamp_begin]=0;continue}const Me=I[T].slice(this.begin_index),$e=Me.length>=1&&Me[Me.length-1]>=this.timestamp_begin,K=Me.length<2||Me[Me.length-2]>=this.timestamp_begin;if($e&&(K?_e.subarray(this.timestamp_begin).fill(-1/0):_e.subarray(0,this.eos_token_id).fill(-1/0)),I[T].length===this.begin_index&&this.max_initial_timestamp_index!==null){const ct=this.timestamp_begin+this.max_initial_timestamp_index;_e.subarray(ct+1).fill(-1/0)}const Fe=(0,se.log_softmax)(_e),ot=Math.log(Fe.subarray(this.timestamp_begin).map(Math.exp).reduce((ct,Ce)=>ct+Ce)),Qe=(0,se.max)(Fe.subarray(0,this.timestamp_begin))[0];ot>Qe&&_e.subarray(0,this.timestamp_begin).fill(-1/0)}return z}}class te extends xe{constructor(I){super(),this.no_repeat_ngram_size=I}getNgrams(I){const z=I.length,T=[];for(let Me=0;Me<z+1-this.no_repeat_ngram_size;++Me){const $e=[];for(let K=0;K<this.no_repeat_ngram_size;++K)$e.push(I[Me+K]);T.push($e.map(Number))}const _e=new Map;for(const Me of T){const $e=Me.slice(0,Me.length-1),K=JSON.stringify($e),Fe=_e.get(K)??[];Fe.push(Me[Me.length-1]),_e.set(K,Fe)}return _e}getGeneratedNgrams(I,z){const T=z.slice(z.length+1-this.no_repeat_ngram_size,z.length);return I.get(JSON.stringify(T.map(Number)))??[]}calcBannedNgramTokens(I){const z=[];if(I.length+1<this.no_repeat_ngram_size)return z;{const T=this.getNgrams(I);return this.getGeneratedNgrams(T,I)}}_call(I,z){for(let T=0;T<I.length;++T){const _e=z[T].data,Me=this.calcBannedNgramTokens(I[T]);for(const $e of Me)_e[$e]=-1/0}return z}}class pe extends xe{constructor(I){super(),this.penalty=I}_call(I,z){for(let T=0;T<I.length;++T){const _e=z[T].data;for(const Me of I[T]){const $e=Number(Me);_e[$e]<0?_e[$e]*=this.penalty:_e[$e]/=this.penalty}}return z}}class Se extends xe{constructor(I,z){super(),this.min_length=I,this.eos_token_id=Array.isArray(z)?z:[z]}_call(I,z){for(let T=0;T<I.length;++T)if(I[T].length<this.min_length){const _e=z[T].data;for(const Me of this.eos_token_id)_e[Me]=-1/0}return z}}class Ee extends xe{constructor(I,z,T){super(),this.prompt_length_to_skip=I,this.min_new_tokens=z,this.eos_token_id=Array.isArray(T)?T:[T]}_call(I,z){for(let T=0;T<I.length;++T)if(I[T].length-this.prompt_length_to_skip<this.min_new_tokens){const Me=z[T].data;for(const $e of this.eos_token_id)Me[$e]=-1/0}return z}}class j extends xe{constructor(I,z){super(),this.bad_words_ids=I,this.eos_token_id=Array.isArray(z)?z:[z]}_call(I,z){for(let T=0;T<I.length;++T){const _e=z[T].data,Me=I[T];for(const $e of this.bad_words_ids){let K=!0;for(let Fe=1;Fe<=$e.length-1&&$e.length<Me.length;++Fe)if($e.at(-Fe-1)!=Me.at(-Fe)){K=!1;break}K&&(_e[$e.at(-1)]=-1/0)}}return z}}class le extends xe{constructor(I){if(super(),I<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${I}.`);this.guidance_scale=I}_call(I,z){if(z.dims[0]!==2*I.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${z.dims[0]} for the logits and ${I.length} for the input ids.`);const T=I.length,_e=z.slice([0,T],null),Me=z.slice([T,z.dims[0]],null);for(let $e=0;$e<Me.data.length;++$e)Me.data[$e]+=(_e.data[$e]-Me.data[$e])*this.guidance_scale;return Me}}class de extends Ie{constructor(I){super(),this.temperature=I}_call(I,z){const T=z.data;for(let _e=0;_e<T.length;++_e)T[_e]/=this.temperature;return z}}class U extends Ie{constructor(I,{filter_value:z=-1/0,min_tokens_to_keep:T=1}={}){if(super(),I<0||I>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${I}`);if(!Number.isInteger(T)||T<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${T}`);this.top_p=I,this.filter_value=z,this.min_tokens_to_keep=T}}class H extends Ie{constructor(I,{filter_value:z=-1/0,min_tokens_to_keep:T=1}={}){if(super(),!Number.isInteger(I)||I<0)throw new Error(`\`top_k\` must be a positive integer, but is ${I}`);this.top_k=Math.max(I,T),this.filter_value=z}}},"./src/generation/logits_sampler.js":(we,Y,P)=>{P.r(Y),P.d(Y,{LogitsSampler:()=>Ie});var $=P("./src/utils/generic.js"),se=P("./src/utils/tensor.js"),xe=P("./src/utils/maths.js");P("./src/generation/configuration_utils.js");class Ie extends $.Callable{constructor(q){super(),this.generation_config=q}async _call(q){return this.sample(q)}async sample(q){throw Error("sample should be implemented in subclasses.")}getLogits(q,te){let pe=q.dims.at(-1),Se=q.data;if(te===-1)Se=Se.slice(-pe);else{let Ee=te*pe;Se=Se.slice(Ee,Ee+pe)}return Se}randomSelect(q){let te=0;for(let Se=0;Se<q.length;++Se)te+=q[Se];let pe=Math.random()*te;for(let Se=0;Se<q.length;++Se)if(pe-=q[Se],pe<=0)return Se;return 0}static getSampler(q){if(q.do_sample)return new Q(q);if(q.num_beams>1)return new R(q);if(q.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${q.num_return_sequences}.`);return new Pe(q)}}class Pe extends Ie{async sample(q){const te=(0,xe.max)(q.data)[1];return[[BigInt(te),0]]}}class Q extends Ie{async sample(q){let te=q.dims.at(-1);this.generation_config.top_k>0&&(te=Math.min(this.generation_config.top_k,te));const[pe,Se]=await(0,se.topk)(q,te),Ee=(0,xe.softmax)(pe.data);return Array.from({length:this.generation_config.num_beams},()=>{const j=this.randomSelect(Ee);return[Se.data[j],Math.log(Ee[j])]})}}class R extends Ie{async sample(q){let te=q.dims.at(-1);this.generation_config.top_k>0&&(te=Math.min(this.generation_config.top_k,te));const[pe,Se]=await(0,se.topk)(q,te),Ee=(0,xe.softmax)(pe.data);return Array.from({length:this.generation_config.num_beams},(j,le)=>[Se.data[le],Math.log(Ee[le])])}}},"./src/generation/stopping_criteria.js":(we,Y,P)=>{P.r(Y),P.d(Y,{EosTokenCriteria:()=>Pe,InterruptableStoppingCriteria:()=>Q,MaxLengthCriteria:()=>Ie,StoppingCriteria:()=>se,StoppingCriteriaList:()=>xe});var $=P("./src/utils/generic.js");class se extends $.Callable{_call(W,q){throw Error("StoppingCriteria needs to be subclassed")}}class xe extends $.Callable{constructor(){super(),this.criteria=[]}push(W){this.criteria.push(W)}extend(W){W instanceof xe?W=W.criteria:W instanceof se&&(W=[W]),this.criteria.push(...W)}_call(W,q){const te=new Array(W.length).fill(!1);for(const pe of this.criteria){const Se=pe(W,q);for(let Ee=0;Ee<te.length;++Ee)te[Ee]||=Se[Ee]}return te}[Symbol.iterator](){return this.criteria.values()}}class Ie extends se{constructor(W,q=null){super(),this.max_length=W,this.max_position_embeddings=q}_call(W){return W.map(q=>q.length>=this.max_length)}}class Pe extends se{constructor(W){super(),Array.isArray(W)||(W=[W]),this.eos_token_id=W}_call(W,q){return W.map(te=>{const pe=te.at(-1);return this.eos_token_id.some(Se=>pe==Se)})}}class Q extends se{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(W,q){return new Array(W.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(we,Y,P)=>{P.r(Y),P.d(Y,{BaseStreamer:()=>Ie,TextStreamer:()=>Q,WhisperTextStreamer:()=>R});var $=P("./src/utils/core.js"),se=P("./src/tokenizers.js"),xe=P("./src/env.js");class Ie{put(q){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const Pe=xe.apis.IS_PROCESS_AVAILABLE?W=>xs.stdout.write(W):W=>console.log(W);class Q extends Ie{constructor(q,{skip_prompt:te=!1,callback_function:pe=null,token_callback_function:Se=null,decode_kwargs:Ee={},...j}={}){super(),this.tokenizer=q,this.skip_prompt=te,this.callback_function=pe??Pe,this.token_callback_function=Se,this.decode_kwargs={...Ee,...j},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(q){if(q.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}const te=q[0];this.token_callback_function?.(te),this.token_cache=(0,$.mergeArrays)(this.token_cache,te);const pe=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let Se;pe.endsWith(`
`)?(Se=pe.slice(this.print_len),this.token_cache=[],this.print_len=0):pe.length>0&&(0,se.is_chinese_char)(pe.charCodeAt(pe.length-1))?(Se=pe.slice(this.print_len),this.print_len+=Se.length):(Se=pe.slice(this.print_len,pe.lastIndexOf(" ")+1),this.print_len+=Se.length),this.on_finalized_text(Se,!1)}end(){let q;this.token_cache.length>0?(q=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):q="",this.next_tokens_are_prompt=!0,this.on_finalized_text(q,!0)}on_finalized_text(q,te){q.length>0&&this.callback_function?.(q),te&&this.callback_function===Pe&&xe.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.(`
`)}}class R extends Q{constructor(q,{skip_prompt:te=!1,callback_function:pe=null,token_callback_function:Se=null,on_chunk_start:Ee=null,on_chunk_end:j=null,on_finalize:le=null,time_precision:de=.02,skip_special_tokens:U=!0,decode_kwargs:H={}}={}){super(q,{skip_prompt:te,callback_function:pe,token_callback_function:Se,decode_kwargs:{skip_special_tokens:U,...H}}),this.timestamp_begin=q.timestamp_begin,this.on_chunk_start=Ee,this.on_chunk_end=j,this.on_finalize=le,this.time_precision=de,this.waiting_for_timestamp=!1}put(q){if(q.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const te=q[0];if(te.length===1){const pe=Number(te[0])-this.timestamp_begin;if(pe>=0){const Se=pe*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(Se):this.on_chunk_start?.(Se),this.waiting_for_timestamp=!this.waiting_for_timestamp,q=[[]]}}return super.put(q)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(we,Y,P)=>{P.r(Y),P.d(Y,{ASTForAudioClassification:()=>rs,ASTModel:()=>Ut,ASTPreTrainedModel:()=>Nn,AlbertForMaskedLM:()=>er,AlbertForQuestionAnswering:()=>gi,AlbertForSequenceClassification:()=>_i,AlbertModel:()=>mi,AlbertPreTrainedModel:()=>On,AutoModel:()=>Yd,AutoModelForAudioClassification:()=>uc,AutoModelForAudioFrameClassification:()=>od,AutoModelForCTC:()=>sd,AutoModelForCausalLM:()=>nc,AutoModelForDepthEstimation:()=>ld,AutoModelForDocumentQuestionAnswering:()=>ad,AutoModelForImageClassification:()=>ac,AutoModelForImageFeatureExtraction:()=>fc,AutoModelForImageMatting:()=>cc,AutoModelForImageSegmentation:()=>lc,AutoModelForImageToImage:()=>pc,AutoModelForMaskGeneration:()=>id,AutoModelForMaskedLM:()=>ic,AutoModelForNormalEstimation:()=>hc,AutoModelForObjectDetection:()=>rd,AutoModelForQuestionAnswering:()=>sc,AutoModelForSemanticSegmentation:()=>Vc,AutoModelForSeq2SeqLM:()=>Uc,AutoModelForSequenceClassification:()=>Zd,AutoModelForSpeechSeq2Seq:()=>ec,AutoModelForTextToSpectrogram:()=>tc,AutoModelForTextToWaveform:()=>rc,AutoModelForTokenClassification:()=>Jd,AutoModelForUniversalSegmentation:()=>_s,AutoModelForVision2Seq:()=>oc,AutoModelForXVector:()=>dc,AutoModelForZeroShotObjectDetection:()=>nd,BartForConditionalGeneration:()=>ue,BartForSequenceClassification:()=>me,BartModel:()=>V,BartPretrainedModel:()=>_,BaseModelOutput:()=>gt,BeitForImageClassification:()=>yl,BeitModel:()=>wl,BeitPreTrainedModel:()=>no,BertForMaskedLM:()=>xt,BertForQuestionAnswering:()=>Ne,BertForSequenceClassification:()=>Ze,BertForTokenClassification:()=>re,BertModel:()=>yt,BertPreTrainedModel:()=>Ue,BlenderbotForConditionalGeneration:()=>ur,BlenderbotModel:()=>hr,BlenderbotPreTrainedModel:()=>Tt,BlenderbotSmallForConditionalGeneration:()=>bn,BlenderbotSmallModel:()=>Kr,BlenderbotSmallPreTrainedModel:()=>vr,BloomForCausalLM:()=>Ka,BloomModel:()=>Ha,BloomPreTrainedModel:()=>ss,CLIPModel:()=>ca,CLIPPreTrainedModel:()=>ii,CLIPSegForImageSegmentation:()=>ya,CLIPSegModel:()=>wa,CLIPSegPreTrainedModel:()=>Ss,CLIPTextModel:()=>Td,CLIPTextModelWithProjection:()=>Mn,CLIPVisionModel:()=>Ed,CLIPVisionModelWithProjection:()=>pa,CamembertForMaskedLM:()=>Lr,CamembertForQuestionAnswering:()=>wn,CamembertForSequenceClassification:()=>Cr,CamembertForTokenClassification:()=>Hr,CamembertModel:()=>Er,CamembertPreTrainedModel:()=>Ir,CausalLMOutput:()=>si,CausalLMOutputWithPast:()=>mc,ChineseCLIPModel:()=>ga,ChineseCLIPPreTrainedModel:()=>_a,ClapAudioModelWithProjection:()=>Eu,ClapModel:()=>Tu,ClapPreTrainedModel:()=>ms,ClapTextModelWithProjection:()=>Fo,CodeGenForCausalLM:()=>Sa,CodeGenModel:()=>$a,CodeGenPreTrainedModel:()=>Tn,CohereForCausalLM:()=>Da,CohereModel:()=>za,CoherePreTrainedModel:()=>Ns,ConvBertForMaskedLM:()=>F,ConvBertForQuestionAnswering:()=>lt,ConvBertForSequenceClassification:()=>oe,ConvBertForTokenClassification:()=>Te,ConvBertModel:()=>ne,ConvBertPreTrainedModel:()=>E,ConvNextForImageClassification:()=>Gl,ConvNextModel:()=>Wl,ConvNextPreTrainedModel:()=>_o,ConvNextV2ForImageClassification:()=>ql,ConvNextV2Model:()=>go,ConvNextV2PreTrainedModel:()=>Li,DPTForDepthEstimation:()=>Sd,DPTModel:()=>Ll,DPTPreTrainedModel:()=>po,DebertaForMaskedLM:()=>ke,DebertaForQuestionAnswering:()=>je,DebertaForSequenceClassification:()=>Le,DebertaForTokenClassification:()=>Oe,DebertaModel:()=>Z,DebertaPreTrainedModel:()=>ht,DebertaV2ForMaskedLM:()=>_t,DebertaV2ForQuestionAnswering:()=>d,DebertaV2ForSequenceClassification:()=>kt,DebertaV2ForTokenClassification:()=>M,DebertaV2Model:()=>vt,DebertaV2PreTrainedModel:()=>at,DecisionTransformerModel:()=>Lu,DecisionTransformerPreTrainedModel:()=>Du,DeiTForImageClassification:()=>Sl,DeiTModel:()=>$l,DeiTPreTrainedModel:()=>lo,DepthAnythingForDepthEstimation:()=>Nl,DepthAnythingPreTrainedModel:()=>Rl,DepthProForDepthEstimation:()=>Yn,DepthProPreTrainedModel:()=>kd,DetrForObjectDetection:()=>Ml,DetrForSegmentation:()=>ls,DetrModel:()=>bl,DetrObjectDetectionOutput:()=>io,DetrPreTrainedModel:()=>as,DetrSegmentationOutput:()=>so,Dinov2ForImageClassification:()=>wo,Dinov2Model:()=>Hl,Dinov2PreTrainedModel:()=>Ri,DistilBertForMaskedLM:()=>Mt,DistilBertForQuestionAnswering:()=>fe,DistilBertForSequenceClassification:()=>D,DistilBertForTokenClassification:()=>G,DistilBertModel:()=>O,DistilBertPreTrainedModel:()=>f,DonutSwinModel:()=>mo,DonutSwinPreTrainedModel:()=>cs,EfficientNetForImageClassification:()=>Nd,EfficientNetModel:()=>ku,EfficientNetPreTrainedModel:()=>Lo,ElectraForMaskedLM:()=>ut,ElectraForQuestionAnswering:()=>Kt,ElectraForSequenceClassification:()=>ft,ElectraForTokenClassification:()=>Wt,ElectraModel:()=>$t,ElectraPreTrainedModel:()=>Ye,EsmForMaskedLM:()=>nr,EsmForSequenceClassification:()=>jt,EsmForTokenClassification:()=>Br,EsmModel:()=>qt,EsmPreTrainedModel:()=>Nt,FalconForCausalLM:()=>xu,FalconModel:()=>vu,FalconPreTrainedModel:()=>fs,FastViTForImageClassification:()=>ul,FastViTModel:()=>ll,FastViTPreTrainedModel:()=>Zs,Florence2ForConditionalGeneration:()=>$s,Florence2PreTrainedModel:()=>da,GLPNForDepthEstimation:()=>fo,GLPNModel:()=>pn,GLPNPreTrainedModel:()=>Vn,GPT2LMHeadModel:()=>Pn,GPT2Model:()=>ba,GPT2PreTrainedModel:()=>ks,GPTBigCodeForCausalLM:()=>Bs,GPTBigCodeModel:()=>ns,GPTBigCodePreTrainedModel:()=>Os,GPTJForCausalLM:()=>An,GPTJModel:()=>Cd,GPTJPreTrainedModel:()=>Fs,GPTNeoForCausalLM:()=>Ta,GPTNeoModel:()=>xa,GPTNeoPreTrainedModel:()=>As,GPTNeoXForCausalLM:()=>Ca,GPTNeoXModel:()=>Ea,GPTNeoXPreTrainedModel:()=>Is,Gemma2ForCausalLM:()=>Ws,Gemma2Model:()=>Vs,Gemma2PreTrainedModel:()=>Us,GemmaForCausalLM:()=>Ra,GemmaModel:()=>La,GemmaPreTrainedModel:()=>js,GraniteForCausalLM:()=>Ba,GraniteModel:()=>Oa,GranitePreTrainedModel:()=>Rs,GroupViTModel:()=>al,GroupViTPreTrainedModel:()=>ol,HieraForImageClassification:()=>Al,HieraModel:()=>Pl,HieraPreTrainedModel:()=>kl,HubertForCTC:()=>uu,HubertForSequenceClassification:()=>Po,HubertModel:()=>lu,HubertPreTrainedModel:()=>Bd,ImageMattingOutput:()=>cd,JAISLMHeadModel:()=>va,JAISModel:()=>Ma,JAISPreTrainedModel:()=>Ps,LlamaForCausalLM:()=>Pa,LlamaModel:()=>ka,LlamaPreTrainedModel:()=>zs,LlavaForConditionalGeneration:()=>yi,LlavaPreTrainedModel:()=>ua,LongT5ForConditionalGeneration:()=>zi,LongT5Model:()=>Bi,LongT5PreTrainedModel:()=>wi,M2M100ForConditionalGeneration:()=>Ad,M2M100Model:()=>Zl,M2M100PreTrainedModel:()=>vo,MBartForCausalLM:()=>Ot,MBartForConditionalGeneration:()=>St,MBartForSequenceClassification:()=>Ft,MBartModel:()=>et,MBartPreTrainedModel:()=>De,MPNetForMaskedLM:()=>ki,MPNetForQuestionAnswering:()=>Ii,MPNetForSequenceClassification:()=>Pi,MPNetForTokenClassification:()=>Ai,MPNetModel:()=>Si,MPNetPreTrainedModel:()=>Kn,MT5ForConditionalGeneration:()=>ye,MT5Model:()=>ts,MT5PreTrainedModel:()=>ri,MarianMTModel:()=>Yl,MarianModel:()=>Mo,MarianPreTrainedModel:()=>bo,MaskFormerForInstanceSegmentation:()=>ho,MaskFormerModel:()=>Zn,MaskFormerPreTrainedModel:()=>Un,MaskedLMOutput:()=>ln,MistralForCausalLM:()=>bu,MistralModel:()=>yu,MistralPreTrainedModel:()=>Io,MobileBertForMaskedLM:()=>Rr,MobileBertForQuestionAnswering:()=>$i,MobileBertForSequenceClassification:()=>hi,MobileBertModel:()=>Dn,MobileBertPreTrainedModel:()=>kr,MobileLLMForCausalLM:()=>Ia,MobileLLMModel:()=>Aa,MobileLLMPreTrainedModel:()=>Ds,MobileNetV1ForImageClassification:()=>Iu,MobileNetV1Model:()=>Au,MobileNetV1PreTrainedModel:()=>Pu,MobileNetV2ForImageClassification:()=>Vd,MobileNetV2Model:()=>Fu,MobileNetV2PreTrainedModel:()=>jo,MobileNetV3ForImageClassification:()=>Bu,MobileNetV3Model:()=>Ou,MobileNetV3PreTrainedModel:()=>Uo,MobileNetV4ForImageClassification:()=>zu,MobileNetV4Model:()=>Wd,MobileNetV4PreTrainedModel:()=>Vo,MobileViTForImageClassification:()=>cl,MobileViTModel:()=>os,MobileViTPreTrainedModel:()=>Js,MobileViTV2ForImageClassification:()=>hl,MobileViTV2Model:()=>pl,MobileViTV2PreTrainedModel:()=>eo,ModelOutput:()=>tt,Moondream1ForConditionalGeneration:()=>cr,MptForCausalLM:()=>$d,MptModel:()=>Xa,MptPreTrainedModel:()=>Ks,MusicgenForCausalLM:()=>Ud,MusicgenForConditionalGeneration:()=>No,MusicgenModel:()=>jd,MusicgenPreTrainedModel:()=>Ro,NomicBertModel:()=>st,NomicBertPreTrainedModel:()=>rt,OPTForCausalLM:()=>Ya,OPTModel:()=>Qa,OPTPreTrainedModel:()=>Xs,OlmoForCausalLM:()=>In,OlmoModel:()=>Fa,OlmoPreTrainedModel:()=>Ls,OpenELMForCausalLM:()=>qs,OpenELMModel:()=>Na,OpenELMPreTrainedModel:()=>Gs,OwlViTForObjectDetection:()=>ml,OwlViTModel:()=>fl,OwlViTPreTrainedModel:()=>to,Owlv2ForObjectDetection:()=>gl,Owlv2Model:()=>_l,Owlv2PreTrainedModel:()=>ro,Phi3ForCausalLM:()=>qa,Phi3Model:()=>Ga,Phi3PreTrainedModel:()=>bi,PhiForCausalLM:()=>Wa,PhiModel:()=>Va,PhiPreTrainedModel:()=>Hs,PreTrainedModel:()=>he,PretrainedMixin:()=>zr,PvtForImageClassification:()=>tl,PvtModel:()=>el,PvtPreTrainedModel:()=>Qs,PyAnnoteForAudioFrameClassification:()=>ru,PyAnnoteModel:()=>tu,PyAnnotePreTrainedModel:()=>To,QuestionAnsweringModelOutput:()=>_n,Qwen2ForCausalLM:()=>is,Qwen2Model:()=>Ua,Qwen2PreTrainedModel:()=>ja,RTDetrForObjectDetection:()=>xl,RTDetrModel:()=>vl,RTDetrObjectDetectionOutput:()=>Tl,RTDetrPreTrainedModel:()=>us,ResNetForImageClassification:()=>Fl,ResNetModel:()=>Il,ResNetPreTrainedModel:()=>En,RoFormerForMaskedLM:()=>mt,RoFormerForQuestionAnswering:()=>Ct,RoFormerForSequenceClassification:()=>bt,RoFormerForTokenClassification:()=>Bt,RoFormerModel:()=>Ge,RoFormerPreTrainedModel:()=>Xe,RobertaForMaskedLM:()=>xn,RobertaForQuestionAnswering:()=>Zr,RobertaForSequenceClassification:()=>Sn,RobertaForTokenClassification:()=>Be,RobertaModel:()=>$r,RobertaPreTrainedModel:()=>dr,SamImageSegmentationOutput:()=>ji,SamModel:()=>yo,SamPreTrainedModel:()=>Ql,SapiensForDepthEstimation:()=>Ul,SapiensForNormalEstimation:()=>Vl,SapiensForSemanticSegmentation:()=>jl,SapiensPreTrainedModel:()=>ds,SegformerForImageClassification:()=>zo,SegformerForSemanticSegmentation:()=>$u,SegformerModel:()=>Ld,SegformerPreTrainedModel:()=>Bo,Seq2SeqLMOutput:()=>ud,SequenceClassifierOutput:()=>lr,SiglipModel:()=>ha,SiglipPreTrainedModel:()=>jn,SiglipTextModel:()=>fa,SiglipVisionModel:()=>ma,SpeechT5ForSpeechToText:()=>mu,SpeechT5ForTextToSpeech:()=>_u,SpeechT5HifiGan:()=>Dd,SpeechT5Model:()=>zd,SpeechT5PreTrainedModel:()=>Ao,SqueezeBertForMaskedLM:()=>$n,SqueezeBertForQuestionAnswering:()=>fi,SqueezeBertForSequenceClassification:()=>Ln,SqueezeBertModel:()=>Xn,SqueezeBertPreTrainedModel:()=>ei,StableLmForCausalLM:()=>Rd,StableLmModel:()=>Su,StableLmPreTrainedModel:()=>Do,Starcoder2ForCausalLM:()=>Vi,Starcoder2Model:()=>hs,Starcoder2PreTrainedModel:()=>Mu,Swin2SRForImageSuperResolution:()=>Dl,Swin2SRModel:()=>zl,Swin2SRPreTrainedModel:()=>co,SwinForImageClassification:()=>Bl,SwinModel:()=>Ol,SwinPreTrainedModel:()=>uo,T5ForConditionalGeneration:()=>Oi,T5Model:()=>Fi,T5PreTrainedModel:()=>ti,TableTransformerForObjectDetection:()=>Cl,TableTransformerModel:()=>El,TableTransformerObjectDetectionOutput:()=>ao,TableTransformerPreTrainedModel:()=>oo,TokenClassifierOutput:()=>rn,TrOCRForCausalLM:()=>wu,TrOCRPreTrainedModel:()=>gu,UniSpeechForCTC:()=>Co,UniSpeechForSequenceClassification:()=>iu,UniSpeechModel:()=>Eo,UniSpeechPreTrainedModel:()=>Mi,UniSpeechSatForAudioFrameClassification:()=>ou,UniSpeechSatForCTC:()=>Fd,UniSpeechSatForSequenceClassification:()=>su,UniSpeechSatModel:()=>$o,UniSpeechSatPreTrainedModel:()=>Ui,ViTForImageClassification:()=>Pr,ViTMAEModel:()=>nl,ViTMAEPreTrainedModel:()=>rl,ViTMSNForImageClassification:()=>sl,ViTMSNModel:()=>il,ViTMSNPreTrainedModel:()=>Ys,ViTModel:()=>Ja,ViTPreTrainedModel:()=>Za,VisionEncoderDecoderModel:()=>Cs,VitMatteForImageMatting:()=>Di,VitMattePreTrainedModel:()=>dl,VitsModel:()=>Oo,VitsModelOutput:()=>pd,VitsPreTrainedModel:()=>Cu,Wav2Vec2BertForCTC:()=>ko,Wav2Vec2BertForSequenceClassification:()=>Od,Wav2Vec2BertModel:()=>au,Wav2Vec2BertPreTrainedModel:()=>So,Wav2Vec2ForAudioFrameClassification:()=>eu,Wav2Vec2ForCTC:()=>Id,Wav2Vec2ForSequenceClassification:()=>xo,Wav2Vec2Model:()=>Jl,Wav2Vec2PreTrainedModel:()=>Jn,WavLMForAudioFrameClassification:()=>fu,WavLMForCTC:()=>cu,WavLMForSequenceClassification:()=>pu,WavLMForXVector:()=>hu,WavLMModel:()=>du,WavLMPreTrainedModel:()=>vi,WeSpeakerResNetModel:()=>nu,WeSpeakerResNetPreTrainedModel:()=>ps,WhisperForConditionalGeneration:()=>Es,WhisperModel:()=>Vt,WhisperPreTrainedModel:()=>nt,XLMForQuestionAnswering:()=>Xr,XLMForSequenceClassification:()=>Yt,XLMForTokenClassification:()=>cn,XLMModel:()=>kn,XLMPreTrainedModel:()=>an,XLMRobertaForMaskedLM:()=>At,XLMRobertaForQuestionAnswering:()=>Qn,XLMRobertaForSequenceClassification:()=>gr,XLMRobertaForTokenClassification:()=>ni,XLMRobertaModel:()=>Fr,XLMRobertaPreTrainedModel:()=>fr,XLMWithLMHeadModel:()=>Rn,XVectorOutput:()=>dd,YolosForObjectDetection:()=>Xl,YolosModel:()=>Kl,YolosObjectDetectionOutput:()=>Pd,YolosPreTrainedModel:()=>Ni});var $=P("./src/configs.js"),se=P("./src/backends/onnx.js"),xe=P("./src/utils/dtypes.js"),Ie=P("./src/utils/generic.js"),Pe=P("./src/utils/core.js"),Q=P("./src/utils/hub.js"),R=P("./src/utils/constants.js"),W=P("./src/generation/logits_process.js"),q=P("./src/generation/configuration_utils.js"),te=P("./src/utils/tensor.js"),pe=P("./src/utils/maths.js"),Se=P("./src/generation/stopping_criteria.js"),Ee=P("./src/generation/logits_sampler.js"),j=P("./src/env.js"),le=P("./src/models/whisper/generation_whisper.js"),de=P("./src/models/whisper/common_whisper.js");const U={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7},H=new Map,N=new Map,I=new Map;async function z(g,w,ae){const Re=ae.config?.["transformers.js_config"]??{};let qe=ae.device??Re.device;qe&&typeof qe!="string"&&(qe.hasOwnProperty(w)?qe=qe[w]:(console.warn(`device not specified for "${w}". Using the default device.`),qe=null));const it=qe??(j.apis.IS_NODE_ENV?"cpu":"wasm"),It=(0,se.deviceToExecutionProviders)(it);let Pt=ae.dtype??Re.dtype;typeof Pt!="string"&&(Pt&&Pt.hasOwnProperty(w)?Pt=Pt[w]:(Pt=xe.DEFAULT_DEVICE_DTYPE_MAPPING[it]??xe.DATA_TYPES.fp32,console.warn(`dtype not specified for "${w}". Using the default dtype (${Pt}) for this device (${it}).`)));const Xt=Pt;if(xe.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Xt)){if(Xt===xe.DATA_TYPES.fp16&&it==="webgpu"&&!await(0,xe.isWebGpuFp16Supported)())throw new Error(`The device (${it}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Xt}. Should be one of: ${Object.keys(xe.DATA_TYPES).join(", ")}`);const mr=Re.kv_cache_dtype?typeof Re.kv_cache_dtype=="string"?Re.kv_cache_dtype:Re.kv_cache_dtype[Xt]??"float32":void 0;if(mr&&!["float32","float16"].includes(mr))throw new Error(`Invalid kv_cache_dtype: ${mr}. Should be one of: float32, float16`);const Nr={dtype:Xt,kv_cache_dtype:mr},Or=xe.DEFAULT_DTYPE_SUFFIX_MAPPING[Xt],xr=`${ae.subfolder??""}/${w}${Or}.onnx`,Jt={...ae.session_options};Jt.executionProviders??=It;const tn=Re.free_dimension_overrides;tn?Jt.freeDimensionOverrides??=tn:it.startsWith("webnn")&&!Jt.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const wr=(0,Q.getModelFile)(g,xr,!0,ae),yr=ae.use_external_data_format??Re.use_external_data_format;let jr=[];if(yr&&(yr===!0||typeof yr=="object"&&yr.hasOwnProperty(w)&&yr[w]===!0)){if(j.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const Vr=`${w}${Or}.onnx_data`,nn=`${ae.subfolder??""}/${Vr}`;jr.push(new Promise(async(hn,Jr)=>{const sn=await(0,Q.getModelFile)(g,nn,!0,ae);hn({path:Vr,data:sn})}))}else Jt.externalData!==void 0&&(jr=Jt.externalData.map(async Vr=>{if(typeof Vr.data=="string"){const nn=await(0,Q.getModelFile)(g,Vr.data,!0,ae);return{...Vr,data:nn}}return Vr}));if(jr.length>0&&(Jt.externalData=await Promise.all(jr)),it==="webgpu"){const Vr=(0,$.getKeyValueShapes)(ae.config,{prefix:"present"});if(Object.keys(Vr).length>0&&!(0,se.isONNXProxy)()){const nn={};for(const hn in Vr)nn[hn]="gpu-buffer";Jt.preferredOutputLocation=nn}}return{buffer:await wr,session_options:Jt,session_config:Nr}}async function T(g,w,ae){return Object.fromEntries(await Promise.all(Object.keys(w).map(async Re=>{const{buffer:qe,session_options:it,session_config:It}=await z(g,w[Re],ae),Pt=await(0,se.createInferenceSession)(qe,it,It);return[Re,Pt]})))}async function _e(g,w,ae){return Object.fromEntries(await Promise.all(Object.keys(w).map(async Re=>{const qe=await(0,Q.getModelJSON)(g,w[Re],!1,ae);return[Re,qe]})))}function Me(g,w){const ae=Object.create(null),Re=[];for(const It of g.inputNames){const Pt=w[It];if(!(Pt instanceof te.Tensor)){Re.push(It);continue}ae[It]=(0,se.isONNXProxy)()?Pt.clone():Pt}if(Re.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${Re.join(", ")}.`);const qe=Object.keys(w).length,it=g.inputNames.length;if(qe>it){let It=Object.keys(w).filter(Pt=>!g.inputNames.includes(Pt));console.warn(`WARNING: Too many inputs were provided (${qe} > ${it}). The following inputs will be ignored: "${It.join(", ")}".`)}return ae}async function $e(g,w){const ae=Me(g,w);try{const Re=Object.fromEntries(Object.entries(ae).map(([it,It])=>[it,It.ort_tensor]));let qe=await g.run(Re);return qe=K(qe),qe}catch(Re){throw console.error(`An error occurred during model execution: "${Re}".`),console.error("Inputs given to model:",ae),Re}}function K(g){for(let w in g)(0,se.isONNXTensor)(g[w])?g[w]=new te.Tensor(g[w]):typeof g[w]=="object"&&K(g[w]);return g}function Fe(g){if(g instanceof te.Tensor)return g;if(g.length===0)throw Error("items must be non-empty");if(Array.isArray(g[0])){if(g.some(w=>w.length!==g[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new te.Tensor("int64",BigInt64Array.from(g.flat().map(w=>BigInt(w))),[g.length,g[0].length])}else return new te.Tensor("int64",BigInt64Array.from(g.map(w=>BigInt(w))),[1,g.length])}function ot(g){return new te.Tensor("bool",[g],[1])}async function Qe(g,w){let{encoder_outputs:ae,input_ids:Re,decoder_input_ids:qe,...it}=w;if(!ae){const Pt=(0,Pe.pick)(w,g.sessions.model.inputNames);ae=(await ct(g,Pt)).last_hidden_state}return it.input_ids=qe,it.encoder_hidden_states=ae,g.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(it.encoder_attention_mask=w.attention_mask),await Ce(g,it,!0)}async function ct(g,w){const ae=g.sessions.model,Re=(0,Pe.pick)(w,ae.inputNames);if(ae.inputNames.includes("inputs_embeds")&&!Re.inputs_embeds){if(!w.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");Re.inputs_embeds=await g.encode_text({input_ids:w.input_ids})}return ae.inputNames.includes("token_type_ids")&&!Re.token_type_ids&&(Re.token_type_ids=new te.Tensor("int64",new BigInt64Array(Re.input_ids.data.length),Re.input_ids.dims)),await $e(ae,Re)}async function Ce(g,w,ae=!1){const Re=g.sessions[ae?"decoder_model_merged":"model"],{past_key_values:qe,...it}=w;Re.inputNames.includes("use_cache_branch")&&(it.use_cache_branch=ot(!!qe)),Re.inputNames.includes("position_ids")&&it.attention_mask&&!it.position_ids&&(it.position_ids=ve(it,qe)),g.addPastKeyValues(it,qe);const It=(0,Pe.pick)(it,Re.inputNames);return await $e(Re,It)}async function X(g,{input_ids:w=null,attention_mask:ae=null,pixel_values:Re=null,position_ids:qe=null,inputs_embeds:it=null,past_key_values:It=null,generation_config:Pt=null,logits_processor:Xt=null,...mr}){if(!it){if(it=await g.encode_text({input_ids:w}),Re&&w.dims[1]!==1){const Or=await g.encode_image({pixel_values:Re});({inputs_embeds:it,attention_mask:ae}=g._merge_input_ids_with_image_features({image_features:Or,inputs_embeds:it,input_ids:w,attention_mask:ae}))}else if(It&&Re&&w.dims[1]===1){const Or=w.dims[1],xr=Object.values(It)[0].dims.at(-2);ae=(0,te.cat)([(0,te.ones)([w.dims[0],xr]),ae.slice(null,[ae.dims[1]-Or,ae.dims[1]])],1)}}return await Ce(g,{inputs_embeds:it,past_key_values:It,attention_mask:ae,position_ids:qe,generation_config:Pt,logits_processor:Xt},!0)}function ve(g,w=null){const{input_ids:ae,inputs_embeds:Re,attention_mask:qe}=g,[it,It]=qe.dims,Pt=new BigInt64Array(qe.data.length);for(let mr=0;mr<it;++mr){const Nr=mr*It;let Or=BigInt(0);for(let xr=0;xr<It;++xr){const Jt=Nr+xr;qe.data[Jt]===0n?Pt[Jt]=BigInt(1):(Pt[Jt]=Or,Or+=qe.data[Jt])}}let Xt=new te.Tensor("int64",Pt,qe.dims);if(w){const mr=-(ae??Re).dims.at(1);Xt=Xt.slice(null,[mr,null])}return Xt}function Ae(g,w,ae,Re){if(ae.past_key_values){const qe=Object.values(ae.past_key_values)[0].dims.at(-2),{input_ids:it,attention_mask:It}=ae;if(!(It&&It.dims[1]>it.dims[1])){if(qe<it.dims[1])ae.input_ids=it.slice(null,[qe,null]);else if(g.config.image_token_index!=null&&it.data.some(Pt=>Pt==g.config.image_token_index)){const Pt=g.config.num_image_tokens;if(!Pt)throw new Error("`num_image_tokens` is missing in the model configuration.");const Xt=it.dims[1]-(qe-Pt);ae.input_ids=it.slice(null,[-Xt,null]),ae.attention_mask=(0,te.ones)([1,qe+Xt])}}}return ae}function He(g,w,ae,Re){return ae.past_key_values&&(w=w.map(qe=>[qe.at(-1)])),{...ae,decoder_input_ids:Fe(w)}}function pt(g,...w){return g.config.is_encoder_decoder?He(g,...w):Ae(g,...w)}class he extends Ie.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(w,ae,Re){super(),this.config=w,this.sessions=ae,this.configs=Re;const qe=I.get(this.constructor),it=H.get(qe);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,it){case U.DecoderOnly:this.can_generate=!0,this._forward=Ce,this._prepare_inputs_for_generation=Ae;break;case U.Seq2Seq:case U.Vision2Seq:case U.Musicgen:this.can_generate=!0,this._forward=Qe,this._prepare_inputs_for_generation=He;break;case U.EncoderDecoder:this._forward=Qe;break;case U.ImageTextToText:this.can_generate=!0,this._forward=X,this._prepare_inputs_for_generation=pt;break;default:this._forward=ct;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const w=[];for(const ae of Object.values(this.sessions))ae?.handler?.dispose&&w.push(ae.handler.dispose());return await Promise.all(w)}static async from_pretrained(w,{progress_callback:ae=null,config:Re=null,cache_dir:qe=null,local_files_only:it=!1,revision:It="main",model_file_name:Pt=null,subfolder:Xt="onnx",device:mr=null,dtype:Nr=null,use_external_data_format:Or=null,session_options:xr={}}={}){let Jt={progress_callback:ae,config:Re,cache_dir:qe,local_files_only:it,revision:It,model_file_name:Pt,subfolder:Xt,device:mr,dtype:Nr,use_external_data_format:Or,session_options:xr};const tn=I.get(this),wr=H.get(tn);Re=Jt.config=await $.AutoConfig.from_pretrained(w,Jt);let yr;if(wr===U.DecoderOnly)yr=await Promise.all([T(w,{model:Jt.model_file_name??"model"},Jt),_e(w,{generation_config:"generation_config.json"},Jt)]);else if(wr===U.Seq2Seq||wr===U.Vision2Seq)yr=await Promise.all([T(w,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},Jt),_e(w,{generation_config:"generation_config.json"},Jt)]);else if(wr===U.MaskGeneration)yr=await Promise.all([T(w,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},Jt)]);else if(wr===U.EncoderDecoder)yr=await Promise.all([T(w,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},Jt)]);else if(wr===U.ImageTextToText){const jr={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Re.is_encoder_decoder&&(jr.model="encoder_model"),yr=await Promise.all([T(w,jr,Jt),_e(w,{generation_config:"generation_config.json"},Jt)])}else wr===U.Musicgen?yr=await Promise.all([T(w,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},Jt),_e(w,{generation_config:"generation_config.json"},Jt)]):(wr!==U.EncoderOnly&&console.warn(`Model type for '${tn??Re?.model_type}' not found, assuming encoder-only architecture. Please report this at ${R.GITHUB_ISSUE_URL}.`),yr=await Promise.all([T(w,{model:Jt.model_file_name??"model"},Jt)]));return new this(Re,...yr)}async _call(w){return await this.forward(w)}async forward(w){return await this._forward(this,w)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(w){const ae=new W.LogitsProcessorList;return w.temperature!==null&&w.temperature!==1&&ae.push(new W.TemperatureLogitsWarper(w.temperature)),w.top_k!==null&&w.top_k!==0&&ae.push(new W.TopKLogitsWarper(w.top_k)),w.top_p!==null&&w.top_p<1&&ae.push(new W.TopPLogitsWarper(w.top_p)),ae}_get_logits_processor(w,ae,Re=null){const qe=new W.LogitsProcessorList;if(w.repetition_penalty!==null&&w.repetition_penalty!==1&&qe.push(new W.RepetitionPenaltyLogitsProcessor(w.repetition_penalty)),w.no_repeat_ngram_size!==null&&w.no_repeat_ngram_size>0&&qe.push(new W.NoRepeatNGramLogitsProcessor(w.no_repeat_ngram_size)),w.bad_words_ids!==null&&qe.push(new W.NoBadWordsLogitsProcessor(w.bad_words_ids,w.eos_token_id)),w.min_length!==null&&w.eos_token_id!==null&&w.min_length>0&&qe.push(new W.MinLengthLogitsProcessor(w.min_length,w.eos_token_id)),w.min_new_tokens!==null&&w.eos_token_id!==null&&w.min_new_tokens>0&&qe.push(new W.MinNewTokensLengthLogitsProcessor(ae,w.min_new_tokens,w.eos_token_id)),w.forced_bos_token_id!==null&&qe.push(new W.ForcedBOSTokenLogitsProcessor(w.forced_bos_token_id)),w.forced_eos_token_id!==null&&qe.push(new W.ForcedEOSTokenLogitsProcessor(w.max_length,w.forced_eos_token_id)),w.begin_suppress_tokens!==null){const it=ae>1||w.forced_bos_token_id===null?ae:ae+1;qe.push(new W.SuppressTokensAtBeginLogitsProcessor(w.begin_suppress_tokens,it))}return w.guidance_scale!==null&&w.guidance_scale>1&&qe.push(new W.ClassifierFreeGuidanceLogitsProcessor(w.guidance_scale)),Re!==null&&qe.extend(Re),qe}_prepare_generation_config(w,ae,Re=q.GenerationConfig){const qe={...this.config};for(const It of["decoder","generator","text_config"])It in qe&&Object.assign(qe,qe[It]);const it=new Re(qe);return Object.assign(it,this.generation_config??{}),w&&Object.assign(it,w),ae&&Object.assign(it,(0,Pe.pick)(ae,Object.getOwnPropertyNames(it))),it}_get_stopping_criteria(w,ae=null){const Re=new Se.StoppingCriteriaList;return w.max_length!==null&&Re.push(new Se.MaxLengthCriteria(w.max_length,this.config.max_position_embeddings??null)),w.eos_token_id!==null&&Re.push(new Se.EosTokenCriteria(w.eos_token_id)),ae&&Re.extend(ae),Re}_validate_model_class(){if(!this.can_generate){const w=[Ho,Ko,qo,Wo],ae=I.get(this.constructor),Re=new Set,qe=this.config.model_type;for(const It of w){const Pt=It.get(qe);Pt&&Re.add(Pt[0])}let it=`The current model class (${ae}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw Re.size>0&&(it+=` Please use the following class instead: ${[...Re].join(", ")}`),Error(it)}}prepare_inputs_for_generation(...w){return this._prepare_inputs_for_generation(this,...w)}_update_model_kwargs_for_generation({generated_input_ids:w,outputs:ae,model_inputs:Re,is_encoder_decoder:qe}){return Re.past_key_values=this.getPastKeyValues(ae,Re.past_key_values),Re.input_ids=new te.Tensor("int64",w.flat(),[w.length,1]),qe||(Re.attention_mask=(0,te.cat)([Re.attention_mask,(0,te.ones)([Re.attention_mask.dims[0],1])],1)),Re.position_ids=null,Re}_prepare_model_inputs({inputs:w,bos_token_id:ae,model_kwargs:Re}){const qe=(0,Pe.pick)(Re,this.forward_params),it=this.main_input_name;if(it in qe){if(w)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else qe[it]=w;return{inputs_tensor:qe[it],model_inputs:qe,model_input_name:it}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:w,model_inputs:ae,model_input_name:Re,generation_config:qe}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!ae.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:It,pixel_values:Pt,attention_mask:Xt,...mr}=ae,Nr=await this._prepare_inputs_embeds(ae);ae={...mr,...(0,Pe.pick)(Nr,["inputs_embeds","attention_mask"])}}let{last_hidden_state:it}=await ct(this,ae);if(qe.guidance_scale!==null&&qe.guidance_scale>1)it=(0,te.cat)([it,(0,te.full_like)(it,0)],0),"attention_mask"in ae&&(ae.attention_mask=(0,te.cat)([ae.attention_mask,(0,te.zeros_like)(ae.attention_mask)],0));else if(ae.decoder_input_ids){const It=Fe(ae.decoder_input_ids).dims[0];if(It!==it.dims[0]){if(it.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${it.dims[0]}) than the decoder inputs (${It}).`);it=(0,te.cat)(Array.from({length:It},()=>it),0)}}return ae.encoder_outputs=it,ae}_prepare_decoder_input_ids_for_generation({batch_size:w,model_input_name:ae,model_kwargs:Re,decoder_start_token_id:qe,bos_token_id:it,generation_config:It}){let{decoder_input_ids:Pt,...Xt}=Re;if(!(Pt instanceof te.Tensor)){if(Pt)Array.isArray(Pt[0])||(Pt=Array.from({length:w},()=>Pt));else if(qe??=it,this.config.model_type==="musicgen")Pt=Array.from({length:w*this.config.decoder.num_codebooks},()=>[qe]);else if(Array.isArray(qe)){if(qe.length!==w)throw new Error(`\`decoder_start_token_id\` expcted to have length ${w} but got ${qe.length}`);Pt=qe}else Pt=Array.from({length:w},()=>[qe]);Pt=Fe(Pt)}return Re.decoder_attention_mask=(0,te.ones_like)(Pt),{input_ids:Pt,model_inputs:Xt}}async generate({inputs:w=null,generation_config:ae=null,logits_processor:Re=null,stopping_criteria:qe=null,streamer:it=null,...It}){this._validate_model_class(),ae=this._prepare_generation_config(ae,It);let{inputs_tensor:Pt,model_inputs:Xt,model_input_name:mr}=this._prepare_model_inputs({inputs:w,model_kwargs:It});const Nr=this.config.is_encoder_decoder;Nr&&("encoder_outputs"in Xt||(Xt=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Pt,model_inputs:Xt,model_input_name:mr,generation_config:ae})));let Or;Nr?{input_ids:Or,model_inputs:Xt}=this._prepare_decoder_input_ids_for_generation({batch_size:Xt[mr].dims.at(0),model_input_name:mr,model_kwargs:Xt,decoder_start_token_id:ae.decoder_start_token_id,bos_token_id:ae.bos_token_id,generation_config:ae}):Or=Xt[mr];let xr=Or.dims.at(-1);ae.max_new_tokens!==null&&(ae.max_length=xr+ae.max_new_tokens);const Jt=this._get_logits_processor(ae,xr,Re),tn=this._get_stopping_criteria(ae,qe),wr=Xt[mr].dims.at(0),yr=Ee.LogitsSampler.getSampler(ae),jr=new Array(wr).fill(0),un=Or.tolist();it&&it.put(un);let Vr,nn={};for(;;){if(Xt=this.prepare_inputs_for_generation(un,Xt,ae),Vr=await this.forward(Xt),ae.output_attentions&&ae.return_dict_in_generate){const Bn=this.getAttentions(Vr);for(const qi in Bn)qi in nn||(nn[qi]=[]),nn[qi].push(Bn[qi])}const sn=Vr.logits.slice(null,-1,null),Yo=Jt(un,sn),Gi=[];for(let Bn=0;Bn<Yo.dims.at(0);++Bn){const qi=Yo[Bn],_c=await yr(qi);for(const[gc,wc]of _c){const yc=BigInt(gc);jr[Bn]+=wc,un[Bn].push(yc),Gi.push([yc]);break}}if(it&&it.put(Gi),tn(un).every(Bn=>Bn))break;Xt=this._update_model_kwargs_for_generation({generated_input_ids:Gi,outputs:Vr,model_inputs:Xt,is_encoder_decoder:Nr})}it&&it.end();const hn=this.getPastKeyValues(Vr,Xt.past_key_values,!0),Jr=new te.Tensor("int64",un.flat(),[un.length,un[0].length]);if(ae.return_dict_in_generate)return{sequences:Jr,past_key_values:hn,...nn};for(const sn of Object.values(Vr))sn.location==="gpu-buffer"&&sn.dispose();return Jr}getPastKeyValues(w,ae,Re=!1){const qe=Object.create(null);for(const it in w)if(it.startsWith("present")){const It=it.replace("present","past_key_values"),Pt=it.includes("encoder");if(Pt&&ae?qe[It]=ae[It]:qe[It]=w[it],ae&&(!Pt||Re)){const Xt=ae[It];Xt.location==="gpu-buffer"&&Xt.dispose()}}return qe}getAttentions(w){const ae={};for(const Re of["cross_attentions","encoder_attentions","decoder_attentions"])for(const qe in w)qe.startsWith(Re)&&(Re in ae||(ae[Re]=[]),ae[Re].push(w[qe]));return ae}addPastKeyValues(w,ae){if(ae)Object.assign(w,ae);else{const qe=(this.sessions.decoder_model_merged??this.sessions.model)?.config?.kv_cache_dtype??"float32",it=qe==="float16"?new Uint16Array:[],It=(0,$.getKeyValueShapes)(this.config);for(const Pt in It)w[Pt]=new te.Tensor(qe,it,It[Pt])}}async encode_image({pixel_values:w}){const ae=(await $e(this.sessions.vision_encoder,{pixel_values:w})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${ae.dims[1]}).`),this.config.num_image_tokens=ae.dims[1]),ae}async encode_text({input_ids:w}){return(await $e(this.sessions.embed_tokens,{input_ids:w})).inputs_embeds}}class tt{}class gt extends tt{constructor({last_hidden_state:w,hidden_states:ae=null,attentions:Re=null}){super(),this.last_hidden_state=w,this.hidden_states=ae,this.attentions=Re}}class Ue extends he{}class yt extends Ue{}class xt extends Ue{async _call(w){return new ln(await super._call(w))}}class Ze extends Ue{async _call(w){return new lr(await super._call(w))}}class re extends Ue{async _call(w){return new rn(await super._call(w))}}class Ne extends Ue{async _call(w){return new _n(await super._call(w))}}class rt extends he{}class st extends rt{}class Xe extends he{}class Ge extends Xe{}class mt extends Xe{async _call(w){return new ln(await super._call(w))}}class bt extends Xe{async _call(w){return new lr(await super._call(w))}}class Bt extends Xe{async _call(w){return new rn(await super._call(w))}}class Ct extends Xe{async _call(w){return new _n(await super._call(w))}}class E extends he{}class ne extends E{}class F extends E{async _call(w){return new ln(await super._call(w))}}class oe extends E{async _call(w){return new lr(await super._call(w))}}class Te extends E{async _call(w){return new rn(await super._call(w))}}class lt extends E{async _call(w){return new _n(await super._call(w))}}class Ye extends he{}class $t extends Ye{}class ut extends Ye{async _call(w){return new ln(await super._call(w))}}class ft extends Ye{async _call(w){return new lr(await super._call(w))}}class Wt extends Ye{async _call(w){return new rn(await super._call(w))}}class Kt extends Ye{async _call(w){return new _n(await super._call(w))}}class Ir extends he{}class Er extends Ir{}class Lr extends Ir{async _call(w){return new ln(await super._call(w))}}class Cr extends Ir{async _call(w){return new lr(await super._call(w))}}class Hr extends Ir{async _call(w){return new rn(await super._call(w))}}class wn extends Ir{async _call(w){return new _n(await super._call(w))}}class ht extends he{}class Z extends ht{}class ke extends ht{async _call(w){return new ln(await super._call(w))}}class Le extends ht{async _call(w){return new lr(await super._call(w))}}class Oe extends ht{async _call(w){return new rn(await super._call(w))}}class je extends ht{async _call(w){return new _n(await super._call(w))}}class at extends he{}class vt extends at{}class _t extends at{async _call(w){return new ln(await super._call(w))}}class kt extends at{async _call(w){return new lr(await super._call(w))}}class M extends at{async _call(w){return new rn(await super._call(w))}}class d extends at{async _call(w){return new _n(await super._call(w))}}class f extends he{}class O extends f{}class D extends f{async _call(w){return new lr(await super._call(w))}}class G extends f{async _call(w){return new rn(await super._call(w))}}class fe extends f{async _call(w){return new _n(await super._call(w))}}class Mt extends f{async _call(w){return new ln(await super._call(w))}}class Nt extends he{}class qt extends Nt{}class nr extends Nt{async _call(w){return new ln(await super._call(w))}}class jt extends Nt{async _call(w){return new lr(await super._call(w))}}class Br extends Nt{async _call(w){return new rn(await super._call(w))}}class kr extends he{}class Dn extends kr{}class Rr extends kr{async _call(w){return new ln(await super._call(w))}}class hi extends kr{async _call(w){return new lr(await super._call(w))}}class $i extends kr{async _call(w){return new _n(await super._call(w))}}class Kn extends he{}class Si extends Kn{}class ki extends Kn{async _call(w){return new ln(await super._call(w))}}class Pi extends Kn{async _call(w){return new lr(await super._call(w))}}class Ai extends Kn{async _call(w){return new rn(await super._call(w))}}class Ii extends Kn{async _call(w){return new _n(await super._call(w))}}class ei extends he{}class Xn extends ei{}class $n extends ei{async _call(w){return new ln(await super._call(w))}}class Ln extends ei{async _call(w){return new lr(await super._call(w))}}class fi extends ei{async _call(w){return new _n(await super._call(w))}}class On extends he{}class mi extends On{}class _i extends On{async _call(w){return new lr(await super._call(w))}}class gi extends On{async _call(w){return new _n(await super._call(w))}}class er extends On{async _call(w){return new ln(await super._call(w))}}class ti extends he{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Fi extends ti{}class Oi extends ti{}class wi extends he{}class Bi extends wi{}class zi extends wi{}class ri extends he{}class ts extends ri{}class ye extends ri{}class _ extends he{}class V extends _{}class ue extends _{}class me extends _{async _call(w){return new lr(await super._call(w))}}class De extends he{}class et extends De{}class St extends De{}class Ft extends De{async _call(w){return new lr(await super._call(w))}}class Ot extends De{}class Tt extends he{}class hr extends Tt{}class ur extends Tt{}class vr extends he{}class Kr extends vr{}class bn extends vr{}class dr extends he{}class $r extends dr{}class xn extends dr{async _call(w){return new ln(await super._call(w))}}class Sn extends dr{async _call(w){return new lr(await super._call(w))}}class Be extends dr{async _call(w){return new rn(await super._call(w))}}class Zr extends dr{async _call(w){return new _n(await super._call(w))}}class an extends he{}class kn extends an{}class Rn extends an{async _call(w){return new ln(await super._call(w))}}class Yt extends an{async _call(w){return new lr(await super._call(w))}}class cn extends an{async _call(w){return new rn(await super._call(w))}}class Xr extends an{async _call(w){return new _n(await super._call(w))}}class fr extends he{}class Fr extends fr{}class At extends fr{async _call(w){return new ln(await super._call(w))}}class gr extends fr{async _call(w){return new lr(await super._call(w))}}class ni extends fr{async _call(w){return new rn(await super._call(w))}}class Qn extends fr{async _call(w){return new _n(await super._call(w))}}class Nn extends he{}class Ut extends Nn{}class rs extends Nn{}class nt extends he{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Vt extends nt{}class Es extends nt{_prepare_generation_config(w,ae){return super._prepare_generation_config(w,ae,le.WhisperGenerationConfig)}_retrieve_init_tokens(w){const ae=[w.decoder_start_token_id];let Re=w.language;const qe=w.task;if(w.is_multilingual){Re||(console.warn("No language specified - defaulting to English (en)."),Re="en");const It=`<|${(0,de.whisper_language_to_code)(Re)}|>`;ae.push(w.lang_to_id[It]),ae.push(w.task_to_id[qe??"transcribe"])}else if(Re||qe)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!w.return_timestamps&&w.no_timestamps_token_id&&ae.at(-1)!==w.no_timestamps_token_id?ae.push(w.no_timestamps_token_id):w.return_timestamps&&ae.at(-1)===w.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),ae.pop()),ae.filter(it=>it!=null)}async generate({inputs:w=null,generation_config:ae=null,logits_processor:Re=null,stopping_criteria:qe=null,...it}){ae=this._prepare_generation_config(ae,it);const It=it.decoder_input_ids??this._retrieve_init_tokens(ae);if(ae.return_timestamps&&(Re??=new W.LogitsProcessorList,Re.push(new W.WhisperTimeStampLogitsProcessor(ae,It))),ae.begin_suppress_tokens&&(Re??=new W.LogitsProcessorList,Re.push(new W.SuppressTokensAtBeginLogitsProcessor(ae.begin_suppress_tokens,It.length))),ae.return_token_timestamps){if(!ae.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");ae.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),ae.output_attentions=!0,ae.return_dict_in_generate=!0}const Pt=await super.generate({inputs:w,generation_config:ae,logits_processor:Re,decoder_input_ids:It,...it});return ae.return_token_timestamps&&(Pt.token_timestamps=this._extract_token_timestamps(Pt,ae.alignment_heads,ae.num_frames)),Pt}_extract_token_timestamps(w,ae,Re=null,qe=.02){if(!w.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");Re==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let it=this.config.median_filter_width;it===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),it=7);const It=w.cross_attentions,Pt=Array.from({length:this.config.decoder_layers},(wr,yr)=>(0,te.cat)(It.map(jr=>jr[yr]),2)),Xt=(0,te.stack)(ae.map(([wr,yr])=>{if(wr>=Pt.length)throw new Error(`Layer index ${wr} is out of bounds for cross attentions (length ${Pt.length}).`);return Re?Pt[wr].slice(null,yr,null,[0,Re]):Pt[wr].slice(null,yr)})).transpose(1,0,2,3),[mr,Nr]=(0,te.std_mean)(Xt,-2,0,!0),Or=Xt.clone();for(let wr=0;wr<Or.dims[0];++wr){const yr=Or[wr];for(let jr=0;jr<yr.dims[0];++jr){const un=yr[jr],Vr=mr[wr][jr][0].data,nn=Nr[wr][jr][0].data;for(let hn=0;hn<un.dims[0];++hn){let Jr=un[hn].data;for(let sn=0;sn<Jr.length;++sn)Jr[sn]=(Jr[sn]-nn[sn])/Vr[sn];Jr.set((0,pe.medianFilter)(Jr,it))}}}const xr=[(0,te.mean)(Or,1)],Jt=w.sequences.dims,tn=new te.Tensor("float32",new Float32Array(Jt[0]*Jt[1]),Jt);for(let wr=0;wr<Jt[0];++wr){const yr=xr[wr].neg().squeeze_(0),[jr,un]=(0,pe.dynamic_time_warping)(yr.tolist()),Vr=Array.from({length:jr.length-1},(Jr,sn)=>jr[sn+1]-jr[sn]),nn=(0,Pe.mergeArrays)([1],Vr).map(Jr=>!!Jr),hn=[];for(let Jr=0;Jr<nn.length;++Jr)nn[Jr]&&hn.push(un[Jr]*qe);tn[wr].data.set(hn,1)}return tn}}class Cs extends he{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class ua extends he{forward_params=["input_ids","pixel_values","attention_mask","position_ids","past_key_values"]}class yi extends ua{_merge_input_ids_with_image_features({inputs_embeds:w,image_features:ae,input_ids:Re,attention_mask:qe}){const it=this.config.image_token_index,Pt=Re.tolist().map(xr=>xr.findIndex(Jt=>Jt==it)),Xt=Pt.every(xr=>xr===-1),mr=Pt.every(xr=>xr!==-1);if(!Xt&&!mr)throw new Error("Every input should contain either 0 or 1 image token.");if(Xt)return{inputs_embeds:w,attention_mask:qe};const Nr=[],Or=[];for(let xr=0;xr<Pt.length;++xr){const Jt=Pt[xr],tn=w[xr],wr=ae[xr],yr=qe[xr];Nr.push((0,te.cat)([tn.slice([0,Jt]),wr,tn.slice([Jt+1,tn.dims[0]])],0)),Or.push((0,te.cat)([yr.slice([0,Jt]),(0,te.ones)([wr.dims[0]]),yr.slice([Jt+1,yr.dims[0]])],0))}return{inputs_embeds:(0,te.stack)(Nr,0),attention_mask:(0,te.stack)(Or,0)}}}class cr extends yi{}class da extends he{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class $s extends da{_merge_input_ids_with_image_features({inputs_embeds:w,image_features:ae,input_ids:Re,attention_mask:qe}){return{inputs_embeds:(0,te.cat)([ae,w],1),attention_mask:(0,te.cat)([(0,te.ones)(ae.dims.slice(0,2)),qe],1)}}async _prepare_inputs_embeds({input_ids:w,pixel_values:ae,inputs_embeds:Re,attention_mask:qe}){if(!w&&!ae)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let it,It;return w&&(it=await this.encode_text({input_ids:w})),ae&&(It=await this.encode_image({pixel_values:ae})),it&&It?{inputs_embeds:Re,attention_mask:qe}=this._merge_input_ids_with_image_features({inputs_embeds:it,image_features:It,input_ids:w,attention_mask:qe}):Re=it||It,{inputs_embeds:Re,attention_mask:qe}}async forward({input_ids:w,pixel_values:ae,attention_mask:Re,decoder_input_ids:qe,decoder_attention_mask:it,encoder_outputs:It,past_key_values:Pt,inputs_embeds:Xt,decoder_inputs_embeds:mr}){if(Xt||({inputs_embeds:Xt,attention_mask:Re}=await this._prepare_inputs_embeds({input_ids:w,pixel_values:ae,inputs_embeds:Xt,attention_mask:Re})),!It){let{last_hidden_state:xr}=await ct(this,{inputs_embeds:Xt,attention_mask:Re});It=xr}if(!mr){if(!qe)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");mr=await this.encode_text({input_ids:qe})}return await Ce(this,{inputs_embeds:mr,attention_mask:it,encoder_attention_mask:Re,encoder_hidden_states:It,past_key_values:Pt},!0)}}class ii extends he{}class ca extends ii{}class Td extends ii{static async from_pretrained(w,ae={}){return ae.model_file_name??="text_model",super.from_pretrained(w,ae)}}class Mn extends ii{static async from_pretrained(w,ae={}){return ae.model_file_name??="text_model",super.from_pretrained(w,ae)}}class Ed extends ii{static async from_pretrained(w,ae={}){return ae.model_file_name??="vision_model",super.from_pretrained(w,ae)}}class pa extends ii{static async from_pretrained(w,ae={}){return ae.model_file_name??="vision_model",super.from_pretrained(w,ae)}}class jn extends he{}class ha extends jn{}class fa extends jn{static async from_pretrained(w,ae={}){return ae.model_file_name??="text_model",super.from_pretrained(w,ae)}}class ma extends ii{static async from_pretrained(w,ae={}){return ae.model_file_name??="vision_model",super.from_pretrained(w,ae)}}class _a extends he{}class ga extends _a{}class Ss extends he{}class wa extends Ss{}class ya extends Ss{}class ks extends he{}class ba extends ks{}class Pn extends ks{}class Ps extends he{}class Ma extends Ps{}class va extends Ps{}class As extends he{}class xa extends As{}class Ta extends As{}class Is extends he{}class Ea extends Is{}class Ca extends Is{}class Fs extends he{}class Cd extends Fs{}class An extends Fs{}class Os extends he{}class ns extends Os{}class Bs extends Os{}class Tn extends he{}class $a extends Tn{}class Sa extends Tn{}class zs extends he{}class ka extends zs{}class Pa extends zs{}class Ds extends he{}class Aa extends Ds{}class Ia extends Ds{}class Ls extends he{}class Fa extends Ls{}class In extends Ls{}class Rs extends he{}class Oa extends Rs{}class Ba extends Rs{}class Ns extends he{}class za extends Ns{}class Da extends Ns{}class js extends he{}class La extends js{}class Ra extends js{}class Us extends he{}class Vs extends Us{}class Ws extends Us{}class Gs extends he{}class Na extends Gs{}class qs extends Gs{}class ja extends he{}class Ua extends ja{}class is extends ja{}class Hs extends he{}class Va extends Hs{}class Wa extends Hs{}class bi extends he{}class Ga extends bi{}class qa extends bi{}class ss extends he{}class Ha extends ss{}class Ka extends ss{}class Ks extends he{}class Xa extends Ks{}class $d extends Ks{}class Xs extends he{}class Qa extends Xs{}class Ya extends Xs{}class Za extends he{}class Ja extends Za{}class Pr extends Za{async _call(w){return new lr(await super._call(w))}}class Qs extends he{}class el extends Qs{}class tl extends Qs{async _call(w){return new lr(await super._call(w))}}class rl extends he{}class nl extends rl{}class Ys extends he{}class il extends Ys{}class sl extends Ys{async _call(w){return new lr(await super._call(w))}}class ol extends he{}class al extends ol{}class Zs extends he{}class ll extends Zs{}class ul extends Zs{async _call(w){return new lr(await super._call(w))}}class dl extends he{}class Di extends dl{async _call(w){return new cd(await super._call(w))}}class Js extends he{}class os extends Js{}class cl extends Js{async _call(w){return new lr(await super._call(w))}}class eo extends he{}class pl extends eo{}class hl extends eo{async _call(w){return new lr(await super._call(w))}}class to extends he{}class fl extends to{}class ml extends to{}class ro extends he{}class _l extends ro{}class gl extends ro{}class no extends he{}class wl extends no{}class yl extends no{async _call(w){return new lr(await super._call(w))}}class as extends he{}class bl extends as{}class Ml extends as{async _call(w){return new io(await super._call(w))}}class ls extends as{async _call(w){return new so(await super._call(w))}}class io extends tt{constructor({logits:w,pred_boxes:ae}){super(),this.logits=w,this.pred_boxes=ae}}class so extends tt{constructor({logits:w,pred_boxes:ae,pred_masks:Re}){super(),this.logits=w,this.pred_boxes=ae,this.pred_masks=Re}}class us extends he{}class vl extends us{}class xl extends us{async _call(w){return new Tl(await super._call(w))}}class Tl extends tt{constructor({logits:w,pred_boxes:ae}){super(),this.logits=w,this.pred_boxes=ae}}class oo extends he{}class El extends oo{}class Cl extends oo{async _call(w){return new ao(await super._call(w))}}class ao extends io{}class lo extends he{}class $l extends lo{}class Sl extends lo{async _call(w){return new lr(await super._call(w))}}class kl extends he{}class Pl extends kl{}class Al extends kl{async _call(w){return new lr(await super._call(w))}}class En extends he{}class Il extends En{}class Fl extends En{async _call(w){return new lr(await super._call(w))}}class uo extends he{}class Ol extends uo{}class Bl extends uo{async _call(w){return new lr(await super._call(w))}}class co extends he{}class zl extends co{}class Dl extends co{}class po extends he{}class Ll extends po{}class Sd extends po{}class Rl extends he{}class Nl extends Rl{}class ds extends he{}class jl extends ds{}class Ul extends ds{}class Vl extends ds{}class kd extends he{}class Yn extends kd{}class Un extends he{}class Zn extends Un{}class ho extends Un{}class Vn extends he{}class pn extends Vn{}class fo extends Vn{}class cs extends he{}class mo extends cs{}class _o extends he{}class Wl extends _o{}class Gl extends _o{async _call(w){return new lr(await super._call(w))}}class Li extends he{}class go extends Li{}class ql extends Li{async _call(w){return new lr(await super._call(w))}}class Ri extends he{}class Hl extends Ri{}class wo extends Ri{async _call(w){return new lr(await super._call(w))}}class Ni extends he{}class Kl extends Ni{}class Xl extends Ni{async _call(w){return new Pd(await super._call(w))}}class Pd extends tt{constructor({logits:w,pred_boxes:ae}){super(),this.logits=w,this.pred_boxes=ae}}class Ql extends he{}class yo extends Ql{async get_image_embeddings({pixel_values:w}){return await ct(this,{pixel_values:w})}async forward(w){if((!w.image_embeddings||!w.image_positional_embeddings)&&(w={...w,...await this.get_image_embeddings(w)}),!w.input_labels&&w.input_points){const Re=w.input_points.dims.slice(0,-1),qe=Re.reduce((it,It)=>it*It,1);w.input_labels=new te.Tensor("int64",new BigInt64Array(qe).fill(1n),Re)}const ae={image_embeddings:w.image_embeddings,image_positional_embeddings:w.image_positional_embeddings};return w.input_points&&(ae.input_points=w.input_points),w.input_labels&&(ae.input_labels=w.input_labels),w.input_boxes&&(ae.input_boxes=w.input_boxes),await $e(this.sessions.prompt_encoder_mask_decoder,ae)}async _call(w){return new ji(await super._call(w))}}class ji extends tt{constructor({iou_scores:w,pred_masks:ae}){super(),this.iou_scores=w,this.pred_masks=ae}}class bo extends he{}class Mo extends bo{}class Yl extends bo{}class vo extends he{}class Zl extends vo{}class Ad extends vo{}class Jn extends he{}class Jl extends Jn{}class Id extends Jn{async _call(w){return new si(await super._call(w))}}class xo extends Jn{async _call(w){return new lr(await super._call(w))}}class eu extends Jn{async _call(w){return new rn(await super._call(w))}}class To extends he{}class tu extends To{}class ru extends To{async _call(w){return new rn(await super._call(w))}}class ps extends he{}class nu extends ps{}class Mi extends he{}class Eo extends Mi{}class Co extends Mi{async _call(w){return new si(await super._call(w))}}class iu extends Mi{async _call(w){return new lr(await super._call(w))}}class Ui extends he{}class $o extends Ui{}class Fd extends Ui{async _call(w){return new si(await super._call(w))}}class su extends Ui{async _call(w){return new lr(await super._call(w))}}class ou extends Ui{async _call(w){return new rn(await super._call(w))}}class So extends he{}class au extends So{}class ko extends So{async _call(w){return new si(await super._call(w))}}class Od extends So{async _call(w){return new lr(await super._call(w))}}class Bd extends he{}class lu extends Jn{}class uu extends Jn{async _call(w){return new si(await super._call(w))}}class Po extends Jn{async _call(w){return new lr(await super._call(w))}}class vi extends he{}class du extends vi{}class cu extends vi{async _call(w){return new si(await super._call(w))}}class pu extends vi{async _call(w){return new lr(await super._call(w))}}class hu extends vi{async _call(w){return new dd(await super._call(w))}}class fu extends vi{async _call(w){return new rn(await super._call(w))}}class Ao extends he{}class zd extends Ao{}class mu extends Ao{}class _u extends Ao{async generate_speech(w,ae,{threshold:Re=.5,minlenratio:qe=0,maxlenratio:it=20,vocoder:It=null}={}){const Pt={input_ids:w},{encoder_outputs:Xt,encoder_attention_mask:mr}=await ct(this,Pt),Nr=Xt.dims[1]/this.config.reduction_factor,Or=Math.floor(Nr*it),xr=Math.floor(Nr*qe),Jt=this.config.num_mel_bins;let tn=[],wr=null,yr=null,jr=0;for(;;){++jr;const nn=ot(!!yr);let hn;yr?hn=yr.output_sequence_out:hn=new te.Tensor("float32",new Float32Array(Jt),[1,1,Jt]);let Jr={use_cache_branch:nn,output_sequence:hn,encoder_attention_mask:mr,speaker_embeddings:ae,encoder_hidden_states:Xt};this.addPastKeyValues(Jr,wr),yr=await $e(this.sessions.decoder_model_merged,Jr),wr=this.getPastKeyValues(yr,wr);const{prob:sn,spectrum:Yo}=yr;if(tn.push(Yo),jr>=xr&&(Array.from(sn.data).filter(Gi=>Gi>=Re).length>0||jr>=Or))break}const un=(0,te.cat)(tn),{waveform:Vr}=await $e(It.sessions.model,{spectrogram:un});return{spectrogram:un,waveform:Vr}}}class Dd extends he{main_input_name="spectrogram"}class gu extends he{}class wu extends gu{}class Io extends he{}class yu extends Io{}class bu extends Io{}class Mu extends he{}class hs extends Mu{}class Vi extends Mu{}class fs extends he{}class vu extends fs{}class xu extends fs{}class ms extends he{}class Tu extends ms{}class Fo extends ms{static async from_pretrained(w,ae={}){return ae.model_file_name??="text_model",super.from_pretrained(w,ae)}}class Eu extends ms{static async from_pretrained(w,ae={}){return ae.model_file_name??="audio_model",super.from_pretrained(w,ae)}}class Cu extends he{}class Oo extends Cu{async _call(w){return new pd(await super._call(w))}}class Bo extends he{}class Ld extends Bo{}class zo extends Bo{}class $u extends Bo{}class Do extends he{}class Su extends Do{}class Rd extends Do{}class Lo extends he{}class ku extends Lo{}class Nd extends Lo{async _call(w){return new lr(await super._call(w))}}class Ro extends he{}class jd extends Ro{}class Ud extends Ro{}class No extends he{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(w){const[ae,Re]=w.dims,qe=this.config.decoder.num_codebooks,it=Re-qe;let It=0;for(let mr=0;mr<w.size;++mr){if(w.data[mr]===this.config.decoder.pad_token_id)continue;const Nr=mr%Re,Or=Math.floor(mr/Re)%qe,xr=Nr-Or;xr>0&&xr<=it&&(w.data[It++]=w.data[mr])}const Pt=Math.floor(ae/qe),Xt=It/(Pt*qe);return new te.Tensor(w.type,w.data.slice(0,It),[Pt,qe,Xt])}prepare_inputs_for_generation(w,ae,Re){let qe=structuredClone(w);for(let It=0;It<qe.length;++It)for(let Pt=0;Pt<qe[It].length;++Pt)It%this.config.decoder.num_codebooks>=Pt&&(qe[It][Pt]=BigInt(this.config.decoder.pad_token_id));return Re.guidance_scale!==null&&Re.guidance_scale>1&&(qe=qe.concat(qe)),super.prepare_inputs_for_generation(qe,ae,Re)}async generate(w){const ae=await super.generate(w),Re=this._apply_and_filter_by_delay_pattern_mask(ae).unsqueeze_(0),{audio_values:qe}=await $e(this.sessions.encodec_decode,{audio_codes:Re});return qe}}class Pu extends he{}class Au extends Pu{}class Iu extends Pu{async _call(w){return new lr(await super._call(w))}}class jo extends he{}class Fu extends jo{}class Vd extends jo{async _call(w){return new lr(await super._call(w))}}class Uo extends he{}class Ou extends Uo{}class Bu extends Uo{async _call(w){return new lr(await super._call(w))}}class Vo extends he{}class Wd extends Vo{}class zu extends Vo{async _call(w){return new lr(await super._call(w))}}class Du extends he{}class Lu extends Du{}class zr{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(w,{progress_callback:ae=null,config:Re=null,cache_dir:qe=null,local_files_only:it=!1,revision:It="main",model_file_name:Pt=null,subfolder:Xt="onnx",device:mr=null,dtype:Nr=null,use_external_data_format:Or=null,session_options:xr={}}={}){const Jt={progress_callback:ae,config:Re,cache_dir:qe,local_files_only:it,revision:It,model_file_name:Pt,subfolder:Xt,device:mr,dtype:Nr,use_external_data_format:Or,session_options:xr};if(Jt.config=await $.AutoConfig.from_pretrained(w,Jt),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const tn of this.MODEL_CLASS_MAPPINGS){const wr=tn.get(Jt.config.model_type);if(wr)return await wr[1].from_pretrained(w,Jt)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${Jt.config.model_type}", attempting to construct from base class.`),await he.from_pretrained(w,Jt);throw Error(`Unsupported model type: ${Jt.config.model_type}`)}}const jc=new Map([["bert",["BertModel",yt]],["nomic_bert",["NomicBertModel",st]],["roformer",["RoFormerModel",Ge]],["electra",["ElectraModel",$t]],["esm",["EsmModel",qt]],["convbert",["ConvBertModel",ne]],["camembert",["CamembertModel",Er]],["deberta",["DebertaModel",Z]],["deberta-v2",["DebertaV2Model",vt]],["mpnet",["MPNetModel",Si]],["albert",["AlbertModel",mi]],["distilbert",["DistilBertModel",O]],["roberta",["RobertaModel",$r]],["xlm",["XLMModel",kn]],["xlm-roberta",["XLMRobertaModel",Fr]],["clap",["ClapModel",Tu]],["clip",["CLIPModel",ca]],["clipseg",["CLIPSegModel",wa]],["chinese_clip",["ChineseCLIPModel",ga]],["siglip",["SiglipModel",ha]],["mobilebert",["MobileBertModel",Dn]],["squeezebert",["SqueezeBertModel",Xn]],["wav2vec2",["Wav2Vec2Model",Jl]],["wav2vec2-bert",["Wav2Vec2BertModel",au]],["unispeech",["UniSpeechModel",Eo]],["unispeech-sat",["UniSpeechSatModel",$o]],["hubert",["HubertModel",lu]],["wavlm",["WavLMModel",du]],["audio-spectrogram-transformer",["ASTModel",Ut]],["vits",["VitsModel",Oo]],["pyannote",["PyAnnoteModel",tu]],["wespeaker-resnet",["WeSpeakerResNetModel",nu]],["detr",["DetrModel",bl]],["rt_detr",["RTDetrModel",vl]],["table-transformer",["TableTransformerModel",El]],["vit",["ViTModel",Ja]],["pvt",["PvtModel",el]],["vit_msn",["ViTMSNModel",il]],["vit_mae",["ViTMAEModel",nl]],["groupvit",["GroupViTModel",al]],["fastvit",["FastViTModel",ll]],["mobilevit",["MobileViTModel",os]],["mobilevitv2",["MobileViTV2Model",pl]],["owlvit",["OwlViTModel",fl]],["owlv2",["Owlv2Model",_l]],["beit",["BeitModel",wl]],["deit",["DeiTModel",$l]],["hiera",["HieraModel",Pl]],["convnext",["ConvNextModel",Wl]],["convnextv2",["ConvNextV2Model",go]],["dinov2",["Dinov2Model",Hl]],["resnet",["ResNetModel",Il]],["swin",["SwinModel",Ol]],["swin2sr",["Swin2SRModel",zl]],["donut-swin",["DonutSwinModel",mo]],["yolos",["YolosModel",Kl]],["dpt",["DPTModel",Ll]],["glpn",["GLPNModel",pn]],["hifigan",["SpeechT5HifiGan",Dd]],["efficientnet",["EfficientNetModel",ku]],["decision_transformer",["DecisionTransformerModel",Lu]],["mobilenet_v1",["MobileNetV1Model",Au]],["mobilenet_v2",["MobileNetV2Model",Fu]],["mobilenet_v3",["MobileNetV3Model",Ou]],["mobilenet_v4",["MobileNetV4Model",Wd]],["maskformer",["MaskFormerModel",Zn]]]),yn=new Map([["t5",["T5Model",Fi]],["longt5",["LongT5Model",Bi]],["mt5",["MT5Model",ts]],["bart",["BartModel",V]],["mbart",["MBartModel",et]],["marian",["MarianModel",Mo]],["whisper",["WhisperModel",Vt]],["m2m_100",["M2M100Model",Zl]],["blenderbot",["BlenderbotModel",hr]],["blenderbot-small",["BlenderbotSmallModel",Kr]]]),Gd=new Map([["bloom",["BloomModel",Ha]],["jais",["JAISModel",Ma]],["gpt2",["GPT2Model",ba]],["gptj",["GPTJModel",Cd]],["gpt_bigcode",["GPTBigCodeModel",ns]],["gpt_neo",["GPTNeoModel",xa]],["gpt_neox",["GPTNeoXModel",Ea]],["codegen",["CodeGenModel",$a]],["llama",["LlamaModel",ka]],["olmo",["OlmoModel",Fa]],["mobilellm",["MobileLLMModel",Aa]],["granite",["GraniteModel",Oa]],["cohere",["CohereModel",za]],["gemma",["GemmaModel",La]],["gemma2",["Gemma2Model",Vs]],["openelm",["OpenELMModel",Na]],["qwen2",["Qwen2Model",Ua]],["phi",["PhiModel",Va]],["phi3",["Phi3Model",Ga]],["mpt",["MptModel",Xa]],["opt",["OPTModel",Qa]],["mistral",["MistralModel",yu]],["starcoder2",["Starcoder2Model",hs]],["falcon",["FalconModel",vu]],["stablelm",["StableLmModel",Su]]]),Wo=new Map([["speecht5",["SpeechT5ForSpeechToText",mu]],["whisper",["WhisperForConditionalGeneration",Es]]]),Go=new Map([["speecht5",["SpeechT5ForTextToSpeech",_u]]]),Ru=new Map([["vits",["VitsModel",Oo]],["musicgen",["MusicgenForConditionalGeneration",No]]]),Wi=new Map([["bert",["BertForSequenceClassification",Ze]],["roformer",["RoFormerForSequenceClassification",bt]],["electra",["ElectraForSequenceClassification",ft]],["esm",["EsmForSequenceClassification",jt]],["convbert",["ConvBertForSequenceClassification",oe]],["camembert",["CamembertForSequenceClassification",Cr]],["deberta",["DebertaForSequenceClassification",Le]],["deberta-v2",["DebertaV2ForSequenceClassification",kt]],["mpnet",["MPNetForSequenceClassification",Pi]],["albert",["AlbertForSequenceClassification",_i]],["distilbert",["DistilBertForSequenceClassification",D]],["roberta",["RobertaForSequenceClassification",Sn]],["xlm",["XLMForSequenceClassification",Yt]],["xlm-roberta",["XLMRobertaForSequenceClassification",gr]],["bart",["BartForSequenceClassification",me]],["mbart",["MBartForSequenceClassification",Ft]],["mobilebert",["MobileBertForSequenceClassification",hi]],["squeezebert",["SqueezeBertForSequenceClassification",Ln]]]),Nu=new Map([["bert",["BertForTokenClassification",re]],["roformer",["RoFormerForTokenClassification",Bt]],["electra",["ElectraForTokenClassification",Wt]],["esm",["EsmForTokenClassification",Br]],["convbert",["ConvBertForTokenClassification",Te]],["camembert",["CamembertForTokenClassification",Hr]],["deberta",["DebertaForTokenClassification",Oe]],["deberta-v2",["DebertaV2ForTokenClassification",M]],["mpnet",["MPNetForTokenClassification",Ai]],["distilbert",["DistilBertForTokenClassification",G]],["roberta",["RobertaForTokenClassification",Be]],["xlm",["XLMForTokenClassification",cn]],["xlm-roberta",["XLMRobertaForTokenClassification",ni]]]),qo=new Map([["t5",["T5ForConditionalGeneration",Oi]],["longt5",["LongT5ForConditionalGeneration",zi]],["mt5",["MT5ForConditionalGeneration",ye]],["bart",["BartForConditionalGeneration",ue]],["mbart",["MBartForConditionalGeneration",St]],["marian",["MarianMTModel",Yl]],["m2m_100",["M2M100ForConditionalGeneration",Ad]],["blenderbot",["BlenderbotForConditionalGeneration",ur]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",bn]]]),Ho=new Map([["bloom",["BloomForCausalLM",Ka]],["gpt2",["GPT2LMHeadModel",Pn]],["jais",["JAISLMHeadModel",va]],["gptj",["GPTJForCausalLM",An]],["gpt_bigcode",["GPTBigCodeForCausalLM",Bs]],["gpt_neo",["GPTNeoForCausalLM",Ta]],["gpt_neox",["GPTNeoXForCausalLM",Ca]],["codegen",["CodeGenForCausalLM",Sa]],["llama",["LlamaForCausalLM",Pa]],["olmo",["OlmoForCausalLM",In]],["mobilellm",["MobileLLMForCausalLM",Ia]],["granite",["GraniteForCausalLM",Ba]],["cohere",["CohereForCausalLM",Da]],["gemma",["GemmaForCausalLM",Ra]],["gemma2",["Gemma2ForCausalLM",Ws]],["openelm",["OpenELMForCausalLM",qs]],["qwen2",["Qwen2ForCausalLM",is]],["phi",["PhiForCausalLM",Wa]],["phi3",["Phi3ForCausalLM",qa]],["mpt",["MptForCausalLM",$d]],["opt",["OPTForCausalLM",Ya]],["mbart",["MBartForCausalLM",Ot]],["mistral",["MistralForCausalLM",bu]],["starcoder2",["Starcoder2ForCausalLM",Vi]],["falcon",["FalconForCausalLM",xu]],["trocr",["TrOCRForCausalLM",wu]],["stablelm",["StableLmForCausalLM",Rd]]]),ju=new Map([["bert",["BertForMaskedLM",xt]],["roformer",["RoFormerForMaskedLM",mt]],["electra",["ElectraForMaskedLM",ut]],["esm",["EsmForMaskedLM",nr]],["convbert",["ConvBertForMaskedLM",F]],["camembert",["CamembertForMaskedLM",Lr]],["deberta",["DebertaForMaskedLM",ke]],["deberta-v2",["DebertaV2ForMaskedLM",_t]],["mpnet",["MPNetForMaskedLM",ki]],["albert",["AlbertForMaskedLM",er]],["distilbert",["DistilBertForMaskedLM",Mt]],["roberta",["RobertaForMaskedLM",xn]],["xlm",["XLMWithLMHeadModel",Rn]],["xlm-roberta",["XLMRobertaForMaskedLM",At]],["mobilebert",["MobileBertForMaskedLM",Rr]],["squeezebert",["SqueezeBertForMaskedLM",$n]]]),Uu=new Map([["bert",["BertForQuestionAnswering",Ne]],["roformer",["RoFormerForQuestionAnswering",Ct]],["electra",["ElectraForQuestionAnswering",Kt]],["convbert",["ConvBertForQuestionAnswering",lt]],["camembert",["CamembertForQuestionAnswering",wn]],["deberta",["DebertaForQuestionAnswering",je]],["deberta-v2",["DebertaV2ForQuestionAnswering",d]],["mpnet",["MPNetForQuestionAnswering",Ii]],["albert",["AlbertForQuestionAnswering",gi]],["distilbert",["DistilBertForQuestionAnswering",fe]],["roberta",["RobertaForQuestionAnswering",Zr]],["xlm",["XLMForQuestionAnswering",Xr]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Qn]],["mobilebert",["MobileBertForQuestionAnswering",$i]],["squeezebert",["SqueezeBertForQuestionAnswering",fi]]]),Ko=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Cs]]]),Vu=new Map([["llava",["LlavaForConditionalGeneration",yi]],["moondream1",["Moondream1ForConditionalGeneration",cr]],["florence2",["Florence2ForConditionalGeneration",$s]]]),qd=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Cs]]]),Wu=new Map([["vit",["ViTForImageClassification",Pr]],["pvt",["PvtForImageClassification",tl]],["vit_msn",["ViTMSNForImageClassification",sl]],["fastvit",["FastViTForImageClassification",ul]],["mobilevit",["MobileViTForImageClassification",cl]],["mobilevitv2",["MobileViTV2ForImageClassification",hl]],["beit",["BeitForImageClassification",yl]],["deit",["DeiTForImageClassification",Sl]],["hiera",["HieraForImageClassification",Al]],["convnext",["ConvNextForImageClassification",Gl]],["convnextv2",["ConvNextV2ForImageClassification",ql]],["dinov2",["Dinov2ForImageClassification",wo]],["resnet",["ResNetForImageClassification",Fl]],["swin",["SwinForImageClassification",Bl]],["segformer",["SegformerForImageClassification",zo]],["efficientnet",["EfficientNetForImageClassification",Nd]],["mobilenet_v1",["MobileNetV1ForImageClassification",Iu]],["mobilenet_v2",["MobileNetV2ForImageClassification",Vd]],["mobilenet_v3",["MobileNetV3ForImageClassification",Bu]],["mobilenet_v4",["MobileNetV4ForImageClassification",zu]]]),Gu=new Map([["detr",["DetrForObjectDetection",Ml]],["rt_detr",["RTDetrForObjectDetection",xl]],["table-transformer",["TableTransformerForObjectDetection",Cl]],["yolos",["YolosForObjectDetection",Xl]]]),qu=new Map([["owlvit",["OwlViTForObjectDetection",ml]],["owlv2",["Owlv2ForObjectDetection",gl]]]),Hu=new Map([["detr",["DetrForSegmentation",ls]],["clipseg",["CLIPSegForImageSegmentation",ya]]]),Xo=new Map([["segformer",["SegformerForSemanticSegmentation",$u]],["sapiens",["SapiensForSemanticSegmentation",jl]]]),Ku=new Map([["detr",["DetrForSegmentation",ls]],["maskformer",["MaskFormerForInstanceSegmentation",ho]]]),Hd=new Map([["sam",["SamModel",yo]]]),Qo=new Map([["wav2vec2",["Wav2Vec2ForCTC",Id]],["wav2vec2-bert",["Wav2Vec2BertForCTC",ko]],["unispeech",["UniSpeechForCTC",Co]],["unispeech-sat",["UniSpeechSatForCTC",Fd]],["wavlm",["WavLMForCTC",cu]],["hubert",["HubertForCTC",uu]]]),Xu=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",xo]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Od]],["unispeech",["UniSpeechForSequenceClassification",iu]],["unispeech-sat",["UniSpeechSatForSequenceClassification",su]],["wavlm",["WavLMForSequenceClassification",pu]],["hubert",["HubertForSequenceClassification",Po]],["audio-spectrogram-transformer",["ASTForAudioClassification",rs]]]),Qu=new Map([["wavlm",["WavLMForXVector",hu]]]),Yu=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",ou]],["wavlm",["WavLMForAudioFrameClassification",fu]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",eu]],["pyannote",["PyAnnoteForAudioFrameClassification",ru]]]),Kd=new Map([["vitmatte",["VitMatteForImageMatting",Di]]]),Zu=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Dl]]]),Ju=new Map([["dpt",["DPTForDepthEstimation",Sd]],["depth_anything",["DepthAnythingForDepthEstimation",Nl]],["glpn",["GLPNForDepthEstimation",fo]],["sapiens",["SapiensForDepthEstimation",Ul]],["depth_pro",["DepthProForDepthEstimation",Yn]]]),ed=new Map([["sapiens",["SapiensForNormalEstimation",Vl]]]),Xd=new Map([["clip",["CLIPVisionModelWithProjection",pa]],["siglip",["SiglipVisionModel",ma]]]),td=[[jc,U.EncoderOnly],[yn,U.EncoderDecoder],[Gd,U.DecoderOnly],[Wi,U.EncoderOnly],[Nu,U.EncoderOnly],[qo,U.Seq2Seq],[Wo,U.Seq2Seq],[Ho,U.DecoderOnly],[ju,U.EncoderOnly],[Uu,U.EncoderOnly],[Ko,U.Vision2Seq],[Vu,U.ImageTextToText],[Wu,U.EncoderOnly],[Hu,U.EncoderOnly],[Ku,U.EncoderOnly],[Xo,U.EncoderOnly],[Kd,U.EncoderOnly],[Zu,U.EncoderOnly],[Ju,U.EncoderOnly],[ed,U.EncoderOnly],[Gu,U.EncoderOnly],[qu,U.EncoderOnly],[Hd,U.MaskGeneration],[Qo,U.EncoderOnly],[Xu,U.EncoderOnly],[Go,U.Seq2Seq],[Ru,U.EncoderOnly],[Qu,U.EncoderOnly],[Yu,U.EncoderOnly],[Xd,U.EncoderOnly]];for(const[g,w]of td)for(const[ae,Re]of g.values())H.set(ae,w),I.set(Re,ae),N.set(ae,Re);const Qd=[["MusicgenForConditionalGeneration",No,U.Musicgen],["CLIPTextModelWithProjection",Mn,U.EncoderOnly],["SiglipTextModel",fa,U.EncoderOnly],["ClapTextModelWithProjection",Fo,U.EncoderOnly],["ClapAudioModelWithProjection",Eu,U.EncoderOnly]];for(const[g,w,ae]of Qd)H.set(g,ae),I.set(w,g),N.set(g,w);class Yd extends zr{static MODEL_CLASS_MAPPINGS=td.map(w=>w[0]);static BASE_IF_FAIL=!0}class Zd extends zr{static MODEL_CLASS_MAPPINGS=[Wi]}class Jd extends zr{static MODEL_CLASS_MAPPINGS=[Nu]}class Uc extends zr{static MODEL_CLASS_MAPPINGS=[qo]}class ec extends zr{static MODEL_CLASS_MAPPINGS=[Wo]}class tc extends zr{static MODEL_CLASS_MAPPINGS=[Go]}class rc extends zr{static MODEL_CLASS_MAPPINGS=[Ru]}class nc extends zr{static MODEL_CLASS_MAPPINGS=[Ho]}class ic extends zr{static MODEL_CLASS_MAPPINGS=[ju]}class sc extends zr{static MODEL_CLASS_MAPPINGS=[Uu]}class oc extends zr{static MODEL_CLASS_MAPPINGS=[Ko]}class ac extends zr{static MODEL_CLASS_MAPPINGS=[Wu]}class lc extends zr{static MODEL_CLASS_MAPPINGS=[Hu]}class Vc extends zr{static MODEL_CLASS_MAPPINGS=[Xo]}class _s extends zr{static MODEL_CLASS_MAPPINGS=[Ku]}class rd extends zr{static MODEL_CLASS_MAPPINGS=[Gu]}class nd extends zr{static MODEL_CLASS_MAPPINGS=[qu]}class id extends zr{static MODEL_CLASS_MAPPINGS=[Hd]}class sd extends zr{static MODEL_CLASS_MAPPINGS=[Qo]}class uc extends zr{static MODEL_CLASS_MAPPINGS=[Xu]}class dc extends zr{static MODEL_CLASS_MAPPINGS=[Qu]}class od extends zr{static MODEL_CLASS_MAPPINGS=[Yu]}class ad extends zr{static MODEL_CLASS_MAPPINGS=[qd]}class cc extends zr{static MODEL_CLASS_MAPPINGS=[Kd]}class pc extends zr{static MODEL_CLASS_MAPPINGS=[Zu]}class ld extends zr{static MODEL_CLASS_MAPPINGS=[Ju]}class hc extends zr{static MODEL_CLASS_MAPPINGS=[ed]}class fc extends zr{static MODEL_CLASS_MAPPINGS=[Xd]}class ud extends tt{constructor({logits:w,past_key_values:ae,encoder_outputs:Re,decoder_attentions:qe=null,cross_attentions:it=null}){super(),this.logits=w,this.past_key_values=ae,this.encoder_outputs=Re,this.decoder_attentions=qe,this.cross_attentions=it}}class lr extends tt{constructor({logits:w}){super(),this.logits=w}}class dd extends tt{constructor({logits:w,embeddings:ae}){super(),this.logits=w,this.embeddings=ae}}class rn extends tt{constructor({logits:w}){super(),this.logits=w}}class ln extends tt{constructor({logits:w}){super(),this.logits=w}}class _n extends tt{constructor({start_logits:w,end_logits:ae}){super(),this.start_logits=w,this.end_logits=ae}}class si extends tt{constructor({logits:w}){super(),this.logits=w}}class mc extends tt{constructor({logits:w,past_key_values:ae}){super(),this.logits=w,this.past_key_values=ae}}class cd extends tt{constructor({alphas:w}){super(),this.alphas=w}}class pd extends tt{constructor({waveform:w,spectrogram:ae}){super(),this.waveform=w,this.spectrogram=ae}}},"./src/models/whisper/common_whisper.js":(we,Y,P)=>{P.r(Y),P.d(Y,{WHISPER_LANGUAGE_MAPPING:()=>se,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>xe,whisper_language_to_code:()=>Ie});const $=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],se=new Map($),xe=new Map([...$.map(([Pe,Q])=>[Q,Pe]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function Ie(Pe){Pe=Pe.toLowerCase();let Q=xe.get(Pe);if(Q===void 0)if(se.has(Pe))Q=Pe;else{const W=Pe.length===2?se.keys():se.values();throw new Error(`Language "${Pe}" is not supported. Must be one of: ${JSON.stringify(W)}`)}return Q}},"./src/models/whisper/generation_whisper.js":(we,Y,P)=>{P.r(Y),P.d(Y,{WhisperGenerationConfig:()=>se});var $=P("./src/generation/configuration_utils.js");class se extends $.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/ops/registry.js":(we,Y,P)=>{P.r(Y),P.d(Y,{TensorOpRegistry:()=>Ie});var $=P("./src/backends/onnx.js"),se=P("./src/utils/tensor.js");const xe=async(Pe,Q,R)=>{const W=await(0,$.createInferenceSession)(new Uint8Array(Pe),Q);return async q=>{const te=Object.fromEntries(Object.entries(q).map(([Se,Ee])=>[Se,Ee.ort_tensor])),pe=await W.run(te);return Array.isArray(R)?R.map(Se=>new se.Tensor(pe[Se])):new se.Tensor(pe[R])}};class Ie{static session_options={};static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=xe([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=xe([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=xe([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=xe([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=xe([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=xe([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}},"./src/pipelines.js":(we,Y,P)=>{P.r(Y),P.d(Y,{AudioClassificationPipeline:()=>K,AutomaticSpeechRecognitionPipeline:()=>ot,DepthEstimationPipeline:()=>tt,DocumentQuestionAnsweringPipeline:()=>He,FeatureExtractionPipeline:()=>Me,FillMaskPipeline:()=>U,ImageClassificationPipeline:()=>ct,ImageFeatureExtractionPipeline:()=>$e,ImageSegmentationPipeline:()=>Ce,ImageToImagePipeline:()=>he,ImageToTextPipeline:()=>Qe,ObjectDetectionPipeline:()=>ve,Pipeline:()=>Ee,QuestionAnsweringPipeline:()=>de,SummarizationPipeline:()=>N,Text2TextGenerationPipeline:()=>H,TextClassificationPipeline:()=>j,TextGenerationPipeline:()=>T,TextToAudioPipeline:()=>pt,TokenClassificationPipeline:()=>le,TranslationPipeline:()=>I,ZeroShotAudioClassificationPipeline:()=>Fe,ZeroShotClassificationPipeline:()=>_e,ZeroShotImageClassificationPipeline:()=>X,ZeroShotObjectDetectionPipeline:()=>Ae,pipeline:()=>yt});var $=P("./src/tokenizers.js"),se=P("./src/models.js"),xe=P("./src/processors.js"),Ie=P("./src/utils/generic.js"),Pe=P("./src/utils/core.js"),Q=P("./src/utils/maths.js"),R=P("./src/utils/audio.js"),W=P("./src/utils/tensor.js"),q=P("./src/utils/image.js");async function te(Ze){return Array.isArray(Ze)||(Ze=[Ze]),await Promise.all(Ze.map(re=>q.RawImage.read(re)))}async function pe(Ze,re){return Array.isArray(Ze)||(Ze=[Ze]),await Promise.all(Ze.map(Ne=>typeof Ne=="string"||Ne instanceof URL?(0,R.read_audio)(Ne,re):Ne instanceof Float64Array?new Float32Array(Ne):Ne))}function Se(Ze,re){re&&(Ze=Ze.map(Ge=>Ge|0));const[Ne,rt,st,Xe]=Ze;return{xmin:Ne,ymin:rt,xmax:st,ymax:Xe}}class Ee extends Ie.Callable{constructor({task:re,model:Ne,tokenizer:rt=null,processor:st=null}){super(),this.task=re,this.model=Ne,this.tokenizer=rt,this.processor=st}async dispose(){await this.model.dispose()}}class j extends Ee{constructor(re){super(re)}async _call(re,{top_k:Ne=1}={}){const rt=this.tokenizer(re,{padding:!0,truncation:!0}),st=await this.model(rt),Xe=this.model.config.problem_type==="multi_label_classification"?bt=>bt.sigmoid():bt=>new W.Tensor("float32",(0,Q.softmax)(bt.data),bt.dims),Ge=this.model.config.id2label,mt=[];for(const bt of st.logits){const Bt=Xe(bt),Ct=await(0,W.topk)(Bt,Ne),E=Ct[0].tolist(),F=Ct[1].tolist().map((oe,Te)=>({label:Ge?Ge[oe]:`LABEL_${oe}`,score:E[Te]}));Ne===1?mt.push(...F):mt.push(F)}return Array.isArray(re)||Ne===1?mt:mt[0]}}class le extends Ee{constructor(re){super(re)}async _call(re,{ignore_labels:Ne=["O"]}={}){const rt=Array.isArray(re),st=this.tokenizer(rt?re:[re],{padding:!0,truncation:!0}),Ge=(await this.model(st)).logits,mt=this.model.config.id2label,bt=[];for(let Bt=0;Bt<Ge.dims[0];++Bt){const Ct=st.input_ids[Bt],E=Ge[Bt],ne=[];for(let F=0;F<E.dims[0];++F){const oe=E[F],Te=(0,Q.max)(oe.data)[1],lt=mt?mt[Te]:`LABEL_${Te}`;if(Ne.includes(lt))continue;const Ye=this.tokenizer.decode([Ct[F].item()],{skip_special_tokens:!0});if(Ye==="")continue;const $t=(0,Q.softmax)(oe.data);ne.push({entity:lt,score:$t[Te],index:F,word:Ye})}bt.push(ne)}return rt?bt:bt[0]}}class de extends Ee{constructor(re){super(re)}async _call(re,Ne,{top_k:rt=1}={}){const st=this.tokenizer(re,{text_pair:Ne,padding:!0,truncation:!0}),{start_logits:Xe,end_logits:Ge}=await this.model(st),mt=st.input_ids.tolist(),bt=st.attention_mask.tolist(),Bt=this.tokenizer.all_special_ids,Ct=[];for(let E=0;E<Xe.dims[0];++E){const ne=mt[E],F=ne.findIndex(ut=>ut==this.tokenizer.sep_token_id);bt[E].map((ut,ft)=>ut==1&&(ft===0||ft>F&&Bt.findIndex(Wt=>Wt==ne[ft])===-1));const oe=Xe[E].tolist(),Te=Ge[E].tolist();for(let ut=1;ut<oe.length;++ut)(bt[E]==0||ut<=F||Bt.findIndex(ft=>ft==ne[ut])!==-1)&&(oe[ut]=-1/0,Te[ut]=-1/0);const lt=(0,Q.softmax)(oe).map((ut,ft)=>[ut,ft]),Ye=(0,Q.softmax)(Te).map((ut,ft)=>[ut,ft]);lt[0][0]=0,Ye[0][0]=0;const $t=(0,Pe.product)(lt,Ye).filter(ut=>ut[0][1]<=ut[1][1]).map(ut=>[ut[0][1],ut[1][1],ut[0][0]*ut[1][0]]).sort((ut,ft)=>ft[2]-ut[2]);for(let ut=0;ut<Math.min($t.length,rt);++ut){const[ft,Wt,Kt]=$t[ut],Ir=ne.slice(ft,Wt+1),Er=this.tokenizer.decode(Ir,{skip_special_tokens:!0});Ct.push({answer:Er,score:Kt})}}return rt===1?Ct[0]:Ct}}class U extends Ee{constructor(re){super(re)}async _call(re,{top_k:Ne=5}={}){const rt=this.tokenizer(re,{padding:!0,truncation:!0}),{logits:st}=await this.model(rt),Xe=[],Ge=rt.input_ids.tolist();for(let mt=0;mt<Ge.length;++mt){const bt=Ge[mt],Bt=bt.findIndex(oe=>oe==this.tokenizer.mask_token_id);if(Bt===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Ct=st[mt][Bt],E=await(0,W.topk)(new W.Tensor("float32",(0,Q.softmax)(Ct.data),Ct.dims),Ne),ne=E[0].tolist(),F=E[1].tolist();Xe.push(F.map((oe,Te)=>{const lt=bt.slice();return lt[Bt]=oe,{score:ne[Te],token:Number(oe),token_str:this.tokenizer.model.vocab[oe],sequence:this.tokenizer.decode(lt,{skip_special_tokens:!0})}}))}return Array.isArray(re)?Xe:Xe[0]}}class H extends Ee{_key="generated_text";constructor(re){super(re)}async _call(re,Ne={}){Array.isArray(re)||(re=[re]),this.model.config.prefix&&(re=re.map(bt=>this.model.config.prefix+bt));const rt=this.model.config.task_specific_params;rt&&rt[this.task]&&rt[this.task].prefix&&(re=re.map(bt=>rt[this.task].prefix+bt));const st=this.tokenizer,Xe={padding:!0,truncation:!0};let Ge;this instanceof I&&"_build_translation_inputs"in st?Ge=st._build_translation_inputs(re,Xe,Ne):Ge=st(re,Xe);const mt=await this.model.generate({...Ge,...Ne});return st.batch_decode(mt,{skip_special_tokens:!0}).map(bt=>({[this._key]:bt}))}}class N extends H{_key="summary_text";constructor(re){super(re)}}class I extends H{_key="translation_text";constructor(re){super(re)}}function z(Ze){return Array.isArray(Ze)&&Ze.every(re=>"role"in re&&"content"in re)}class T extends Ee{constructor(re){super(re)}async _call(re,Ne={}){let rt=!1,st=!1,Xe;if(typeof re=="string")Xe=re=[re];else if(Array.isArray(re)&&re.every(F=>typeof F=="string"))rt=!0,Xe=re;else{if(z(re))re=[re];else if(Array.isArray(re)&&re.every(z))rt=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");st=!0,Xe=re.map(F=>this.tokenizer.apply_chat_template(F,{tokenize:!1,add_generation_prompt:!0}))}const Ge=Ne.add_special_tokens??!1,mt=st?!1:Ne.return_full_text??!0;this.tokenizer.padding_side="left";const bt=this.tokenizer(Xe,{add_special_tokens:Ge,padding:!0,truncation:!0}),Bt=await this.model.generate({...bt,...Ne}),Ct=this.tokenizer.batch_decode(Bt,{skip_special_tokens:!0});let E;!mt&&bt.input_ids.dims.at(-1)>0&&(E=this.tokenizer.batch_decode(bt.input_ids,{skip_special_tokens:!0}).map(F=>F.length));const ne=Array.from({length:re.length},F=>[]);for(let F=0;F<Ct.length;++F){const oe=Math.floor(F/Bt.dims[0]*re.length);E&&(Ct[F]=Ct[F].slice(E[oe])),ne[oe].push({generated_text:st?[...re[oe],{role:"assistant",content:Ct[F]}]:Ct[F]})}return!rt&&ne.length===1?ne[0]:ne}}class _e extends Ee{constructor(re){super(re),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([Ne,rt])=>[Ne.toLowerCase(),rt])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(re,Ne,{hypothesis_template:rt="This example is {}.",multi_label:st=!1}={}){const Xe=Array.isArray(re);Xe||(re=[re]),Array.isArray(Ne)||(Ne=[Ne]);const Ge=Ne.map(Bt=>rt.replace("{}",Bt)),mt=st||Ne.length===1,bt=[];for(const Bt of re){const Ct=[];for(const F of Ge){const oe=this.tokenizer(Bt,{text_pair:F,padding:!0,truncation:!0}),Te=await this.model(oe);mt?Ct.push([Te.logits.data[this.contradiction_id],Te.logits.data[this.entailment_id]]):Ct.push(Te.logits.data[this.entailment_id])}const ne=(mt?Ct.map(F=>(0,Q.softmax)(F)[1]):(0,Q.softmax)(Ct)).map((F,oe)=>[F,oe]).sort((F,oe)=>oe[0]-F[0]);bt.push({sequence:Bt,labels:ne.map(F=>Ne[F[1]]),scores:ne.map(F=>F[0])})}return Xe?bt:bt[0]}}class Me extends Ee{constructor(re){super(re)}async _call(re,{pooling:Ne="none",normalize:rt=!1,quantize:st=!1,precision:Xe="binary"}={}){const Ge=this.tokenizer(re,{padding:!0,truncation:!0}),mt=await this.model(Ge);let bt=mt.last_hidden_state??mt.logits??mt.token_embeddings;if(Ne!=="none")if(Ne==="mean")bt=(0,W.mean_pooling)(bt,Ge.attention_mask);else if(Ne==="cls")bt=bt.slice(null,0);else throw Error(`Pooling method '${Ne}' not supported.`);return rt&&(bt=bt.normalize(2,-1)),st&&(bt=(0,W.quantize_embeddings)(bt,Xe)),bt}}class $e extends Ee{constructor(re){super(re)}async _call(re,{pool:Ne=null}={}){const rt=await te(re),{pixel_values:st}=await this.processor(rt),Xe=await this.model({pixel_values:st});let Ge;if(Ne){if(!("pooler_output"in Xe))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Ge=Xe.pooler_output}else Ge=Xe.last_hidden_state??Xe.logits??Xe.image_embeds;return Ge}}class K extends Ee{constructor(re){super(re)}async _call(re,{top_k:Ne=5}={}){const rt=this.processor.feature_extractor.config.sampling_rate,st=await pe(re,rt),Xe=this.model.config.id2label,Ge=[];for(const mt of st){const bt=await this.processor(mt),Ct=(await this.model(bt)).logits[0],E=await(0,W.topk)(new W.Tensor("float32",(0,Q.softmax)(Ct.data),Ct.dims),Ne),ne=E[0].tolist(),oe=E[1].tolist().map((Te,lt)=>({label:Xe?Xe[Te]:`LABEL_${Te}`,score:ne[lt]}));Ge.push(oe)}return Array.isArray(re)?Ge:Ge[0]}}class Fe extends Ee{constructor(re){super(re)}async _call(re,Ne,{hypothesis_template:rt="This is a sound of {}."}={}){const st=!Array.isArray(re);st&&(re=[re]);const Xe=Ne.map(Ct=>rt.replace("{}",Ct)),Ge=this.tokenizer(Xe,{padding:!0,truncation:!0}),mt=this.processor.feature_extractor.config.sampling_rate,bt=await pe(re,mt),Bt=[];for(const Ct of bt){const E=await this.processor(Ct),ne=await this.model({...Ge,...E}),F=(0,Q.softmax)(ne.logits_per_audio.data);Bt.push([...F].map((oe,Te)=>({score:oe,label:Ne[Te]})))}return st?Bt[0]:Bt}}class ot extends Ee{constructor(re){super(re)}async _call(re,Ne={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(re,Ne);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(re,Ne);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(re,Ne){Ne.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),Ne.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const rt=!Array.isArray(re);rt&&(re=[re]);const st=this.processor.feature_extractor.config.sampling_rate,Xe=await pe(re,st),Ge=[];for(const mt of Xe){const bt=await this.processor(mt),Ct=(await this.model(bt)).logits[0],E=[];for(const F of Ct)E.push((0,Q.max)(F.data)[1]);const ne=this.tokenizer.decode(E);Ge.push({text:ne})}return rt?Ge[0]:Ge}async _call_whisper(re,Ne){const rt=Ne.return_timestamps??!1,st=Ne.chunk_length_s??0,Xe=Ne.force_full_sequences??!1;let Ge=Ne.stride_length_s??null;const mt={...Ne};rt==="word"&&(mt.return_token_timestamps=!0,mt.return_timestamps=!1);const bt=!Array.isArray(re);bt&&(re=[re]);const Bt=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Ct=this.processor.feature_extractor.config.hop_length,E=this.processor.feature_extractor.config.sampling_rate,ne=await pe(re,E),F=[];for(const oe of ne){let Te=[];if(st>0){if(Ge===null)Ge=st/6;else if(st<=Ge)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const $t=E*st,ut=E*Ge,ft=$t-2*ut;let Wt=0;for(;;){const Kt=Wt+$t,Ir=oe.subarray(Wt,Kt),Er=await this.processor(Ir),Lr=Wt===0,Cr=Kt>=oe.length;if(Te.push({stride:[Ir.length,Lr?0:ut,Cr?0:ut],input_features:Er.input_features,is_last:Cr}),Cr)break;Wt+=ft}}else Te=[{stride:[oe.length,0,0],input_features:(await this.processor(oe)).input_features,is_last:!0}];for(const $t of Te){mt.num_frames=Math.floor($t.stride[0]/Ct);const ut=await this.model.generate({inputs:$t.input_features,...mt});rt==="word"?($t.tokens=ut.sequences.tolist()[0],$t.token_timestamps=ut.token_timestamps.tolist()[0].map(ft=>(0,Q.round)(ft,2))):$t.tokens=ut[0].tolist(),$t.stride=$t.stride.map(ft=>ft/E)}const[lt,Ye]=this.tokenizer._decode_asr(Te,{time_precision:Bt,return_timestamps:rt,force_full_sequences:Xe});F.push({text:lt,...Ye})}return bt?F[0]:F}}class Qe extends Ee{constructor(re){super(re)}async _call(re,Ne={}){const rt=Array.isArray(re),st=await te(re),{pixel_values:Xe}=await this.processor(st),Ge=[];for(const mt of Xe){mt.dims=[1,...mt.dims];const bt=await this.model.generate({inputs:mt,...Ne}),Bt=this.tokenizer.batch_decode(bt,{skip_special_tokens:!0}).map(Ct=>({generated_text:Ct.trim()}));Ge.push(Bt)}return rt?Ge:Ge[0]}}class ct extends Ee{constructor(re){super(re)}async _call(re,{top_k:Ne=5}={}){const rt=await te(re),{pixel_values:st}=await this.processor(rt),Xe=await this.model({pixel_values:st}),Ge=this.model.config.id2label,mt=[];for(const bt of Xe.logits){const Bt=await(0,W.topk)(new W.Tensor("float32",(0,Q.softmax)(bt.data),bt.dims),Ne),Ct=Bt[0].tolist(),ne=Bt[1].tolist().map((F,oe)=>({label:Ge?Ge[F]:`LABEL_${F}`,score:Ct[oe]}));mt.push(ne)}return Array.isArray(re)?mt:mt[0]}}class Ce extends Ee{constructor(re){super(re),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(re,{threshold:Ne=.5,mask_threshold:rt=.5,overlap_mask_area_threshold:st=.8,label_ids_to_fuse:Xe=null,target_sizes:Ge=null,subtask:mt=null}={}){if(Array.isArray(re)&&re.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const Bt=await te(re),Ct=Bt.map(Ye=>[Ye.height,Ye.width]),{pixel_values:E,pixel_mask:ne}=await this.processor(Bt),F=await this.model({pixel_values:E,pixel_mask:ne});let oe=null;if(mt!==null)oe=this.subtasks_mapping[mt];else for(let[Ye,$t]of Object.entries(this.subtasks_mapping))if($t in this.processor.feature_extractor){oe=this.processor.feature_extractor[$t].bind(this.processor.feature_extractor),mt=Ye;break}const Te=this.model.config.id2label,lt=[];if(mt==="panoptic"||mt==="instance"){const Ye=oe(F,Ne,rt,st,Xe,Ge??Ct)[0],$t=Ye.segmentation;for(const ut of Ye.segments_info){const ft=new Uint8ClampedArray($t.data.length);for(let Kt=0;Kt<$t.data.length;++Kt)$t.data[Kt]===ut.id&&(ft[Kt]=255);const Wt=new q.RawImage(ft,$t.dims[1],$t.dims[0],1);lt.push({score:ut.score,label:Te[ut.label_id],mask:Wt})}}else if(mt==="semantic"){const{segmentation:Ye,labels:$t}=oe(F,Ge??Ct)[0];for(const ut of $t){const ft=new Uint8ClampedArray(Ye.data.length);for(let Kt=0;Kt<Ye.data.length;++Kt)Ye.data[Kt]===ut&&(ft[Kt]=255);const Wt=new q.RawImage(ft,Ye.dims[1],Ye.dims[0],1);lt.push({score:null,label:Te[ut],mask:Wt})}}else throw Error(`Subtask ${mt} not supported.`);return lt}}class X extends Ee{constructor(re){super(re)}async _call(re,Ne,{hypothesis_template:rt="This is a photo of {}"}={}){const st=Array.isArray(re),Xe=await te(re),Ge=Ne.map(ne=>rt.replace("{}",ne)),mt=this.tokenizer(Ge,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:bt}=await this.processor(Xe),Bt=await this.model({...mt,pixel_values:bt}),Ct=this.model.config.model_type==="siglip"?ne=>ne.sigmoid().data:ne=>(0,Q.softmax)(ne.data),E=[];for(const ne of Bt.logits_per_image){const oe=[...Ct(ne)].map((Te,lt)=>({score:Te,label:Ne[lt]}));oe.sort((Te,lt)=>lt.score-Te.score),E.push(oe)}return st?E:E[0]}}class ve extends Ee{constructor(re){super(re)}async _call(re,{threshold:Ne=.9,percentage:rt=!1}={}){const st=Array.isArray(re);if(st&&re.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Xe=await te(re),Ge=rt?null:Xe.map(F=>[F.height,F.width]),{pixel_values:mt,pixel_mask:bt}=await this.processor(Xe),Bt=await this.model({pixel_values:mt,pixel_mask:bt}),Ct=this.processor.feature_extractor.post_process_object_detection(Bt,Ne,Ge),E=this.model.config.id2label,ne=Ct.map(F=>F.boxes.map((oe,Te)=>({score:F.scores[Te],label:E[F.classes[Te]],box:Se(oe,!rt)})));return st?ne:ne[0]}}class Ae extends Ee{constructor(re){super(re)}async _call(re,Ne,{threshold:rt=.1,top_k:st=null,percentage:Xe=!1}={}){const Ge=Array.isArray(re),mt=await te(re),bt=this.tokenizer(Ne,{padding:!0,truncation:!0}),Bt=await this.processor(mt),Ct=[];for(let E=0;E<mt.length;++E){const ne=mt[E],F=Xe?null:[[ne.height,ne.width]],oe=Bt.pixel_values[E].unsqueeze_(0),Te=await this.model({...bt,pixel_values:oe}),lt=this.processor.feature_extractor.post_process_object_detection(Te,rt,F,!0)[0];let Ye=lt.boxes.map(($t,ut)=>({score:lt.scores[ut],label:Ne[lt.classes[ut]],box:Se($t,!Xe)})).sort(($t,ut)=>ut.score-$t.score);st!==null&&(Ye=Ye.slice(0,st)),Ct.push(Ye)}return Ge?Ct:Ct[0]}}class He extends Ee{constructor(re){super(re)}async _call(re,Ne,rt={}){const st=(await te(re))[0],{pixel_values:Xe}=await this.processor(st),Ge=`<s_docvqa><s_question>${Ne}</s_question><s_answer>`,mt=this.tokenizer(Ge,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,bt=await this.model.generate({inputs:Xe,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:mt,...rt}),Ct=this.tokenizer.batch_decode(bt)[0].match(/<s_answer>(.*?)<\/s_answer>/);let E=null;return Ct&&Ct.length>=2&&(E=Ct[1].trim()),[{answer:E}]}}class pt extends Ee{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(re){super(re),this.vocoder=re.vocoder??null}async _call(re,{speaker_embeddings:Ne=null}={}){return this.processor?this._call_text_to_spectrogram(re,{speaker_embeddings:Ne}):this._call_text_to_waveform(re)}async _call_text_to_waveform(re){const Ne=this.tokenizer(re,{padding:!0,truncation:!0}),{waveform:rt}=await this.model(Ne),st=this.model.config.sampling_rate;return{audio:rt.data,sampling_rate:st}}async _call_text_to_spectrogram(re,{speaker_embeddings:Ne}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await se.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof Ne=="string"||Ne instanceof URL)&&(Ne=new Float32Array(await(await fetch(Ne)).arrayBuffer())),Ne instanceof Float32Array)Ne=new W.Tensor("float32",Ne,[1,Ne.length]);else if(!(Ne instanceof W.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:rt}=this.tokenizer(re,{padding:!0,truncation:!0}),{waveform:st}=await this.model.generate_speech(rt,Ne,{vocoder:this.vocoder}),Xe=this.processor.feature_extractor.config.sampling_rate;return{audio:st.data,sampling_rate:Xe}}}class he extends Ee{constructor(re){super(re)}async _call(re){const Ne=await te(re),rt=await this.processor(Ne),st=await this.model(rt),Xe=[];for(const Ge of st.reconstruction){const mt=Ge.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Xe.push(q.RawImage.fromTensor(mt))}return Xe.length>1?Xe:Xe[0]}}class tt extends Ee{constructor(re){super(re)}async _call(re){const Ne=await te(re),rt=await this.processor(Ne),{predicted_depth:st}=await this.model(rt),Xe=[];for(let Ge=0;Ge<Ne.length;++Ge){const mt=(0,W.interpolate)(st[Ge],Ne[Ge].size.reverse(),"bilinear",!1),bt=mt.mul_(255/(0,Q.max)(mt.data)[0]).to("uint8");Xe.push({predicted_depth:st[Ge],depth:q.RawImage.fromTensor(bt)})}return Xe.length>1?Xe:Xe[0]}}const gt=Object.freeze({"text-classification":{tokenizer:$.AutoTokenizer,pipeline:j,model:se.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:$.AutoTokenizer,pipeline:le,model:se.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:$.AutoTokenizer,pipeline:de,model:se.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:$.AutoTokenizer,pipeline:U,model:se.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:$.AutoTokenizer,pipeline:N,model:se.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:$.AutoTokenizer,pipeline:I,model:se.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:$.AutoTokenizer,pipeline:H,model:se.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:$.AutoTokenizer,pipeline:T,model:se.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:$.AutoTokenizer,pipeline:_e,model:se.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:K,model:se.AutoModelForAudioClassification,processor:xe.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:$.AutoTokenizer,pipeline:Fe,model:se.AutoModel,processor:xe.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:$.AutoTokenizer,pipeline:ot,model:[se.AutoModelForSpeechSeq2Seq,se.AutoModelForCTC],processor:xe.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:$.AutoTokenizer,pipeline:pt,model:[se.AutoModelForTextToWaveform,se.AutoModelForTextToSpectrogram],processor:[xe.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:$.AutoTokenizer,pipeline:Qe,model:se.AutoModelForVision2Seq,processor:xe.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:ct,model:se.AutoModelForImageClassification,processor:xe.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Ce,model:[se.AutoModelForImageSegmentation,se.AutoModelForSemanticSegmentation,se.AutoModelForUniversalSegmentation],processor:xe.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:$.AutoTokenizer,pipeline:X,model:se.AutoModel,processor:xe.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:ve,model:se.AutoModelForObjectDetection,processor:xe.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:$.AutoTokenizer,pipeline:Ae,model:se.AutoModelForZeroShotObjectDetection,processor:xe.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:$.AutoTokenizer,pipeline:He,model:se.AutoModelForDocumentQuestionAnswering,processor:xe.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:he,model:se.AutoModelForImageToImage,processor:xe.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:tt,model:se.AutoModelForDepthEstimation,processor:xe.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:$.AutoTokenizer,pipeline:Me,model:se.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:xe.AutoProcessor,pipeline:$e,model:[se.AutoModelForImageFeatureExtraction,se.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Ue=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function yt(Ze,re=null,{progress_callback:Ne=null,config:rt=null,cache_dir:st=null,local_files_only:Xe=!1,revision:Ge="main",device:mt=null,dtype:bt=null,model_file_name:Bt=null,session_options:Ct={}}={}){Ze=Ue[Ze]??Ze;const E=gt[Ze.split("_",1)[0]];if(!E)throw Error(`Unsupported pipeline: ${Ze}. Must be one of [${Object.keys(gt)}]`);re||(re=E.default.model,console.log(`No model specified. Using default model: "${re}".`));const ne={progress_callback:Ne,config:rt,cache_dir:st,local_files_only:Xe,revision:Ge,device:mt,dtype:bt,model_file_name:Bt,session_options:Ct},F=new Map([["tokenizer",E.tokenizer],["model",E.model],["processor",E.processor]]),oe=await xt(F,re,ne);oe.task=Ze,(0,Pe.dispatchCallback)(Ne,{status:"ready",task:Ze,model:re});const Te=E.pipeline;return new Te(oe)}async function xt(Ze,re,Ne){const rt=Object.create(null),st=[];for(const[Xe,Ge]of Ze.entries()){if(!Ge)continue;let mt;Array.isArray(Ge)?mt=new Promise(async(bt,Bt)=>{let Ct;for(const E of Ge){if(E===null){bt(null);return}try{bt(await E.from_pretrained(re,Ne));return}catch(ne){if(ne.message?.includes("Unsupported model type"))Ct=ne;else if(ne.message?.includes("Could not locate file"))Ct=ne;else{Bt(ne);return}}}Bt(Ct)}):mt=Ge.from_pretrained(re,Ne),rt[Xe]=mt,st.push(mt)}await Promise.all(st);for(const[Xe,Ge]of Object.entries(rt))rt[Xe]=await Ge;return rt}},"./src/processors.js":(we,Y,P)=>{P.r(Y),P.d(Y,{ASTFeatureExtractor:()=>Te,AutoProcessor:()=>wn,BeitFeatureExtractor:()=>Ne,BitImageProcessor:()=>Me,CLIPFeatureExtractor:()=>K,CLIPImageProcessor:()=>Fe,ChineseCLIPFeatureExtractor:()=>ot,ClapFeatureExtractor:()=>lt,ConvNextFeatureExtractor:()=>ct,ConvNextImageProcessor:()=>Ce,DPTFeatureExtractor:()=>T,DPTImageProcessor:()=>_e,DeiTFeatureExtractor:()=>re,DetrFeatureExtractor:()=>Ge,DonutFeatureExtractor:()=>rt,DonutImageProcessor:()=>st,EfficientNetImageProcessor:()=>Ae,FeatureExtractor:()=>U,Florence2Processor:()=>Hr,GLPNFeatureExtractor:()=>$e,ImageFeatureExtractor:()=>H,MaskFormerFeatureExtractor:()=>mt,MobileNetV1FeatureExtractor:()=>He,MobileNetV2FeatureExtractor:()=>pt,MobileNetV3FeatureExtractor:()=>he,MobileNetV4FeatureExtractor:()=>tt,MobileViTFeatureExtractor:()=>gt,MobileViTImageProcessor:()=>Ue,NougatImageProcessor:()=>Xe,OwlViTFeatureExtractor:()=>yt,OwlViTProcessor:()=>Cr,Owlv2ImageProcessor:()=>xt,Processor:()=>ft,PvtImageProcessor:()=>z,PyAnnoteFeatureExtractor:()=>Ye,PyAnnoteProcessor:()=>Er,RTDetrImageProcessor:()=>Ze,SamImageProcessor:()=>Bt,SamProcessor:()=>Wt,SapiensFeatureExtractor:()=>N,SeamlessM4TFeatureExtractor:()=>oe,SegformerFeatureExtractor:()=>I,SiglipImageProcessor:()=>Qe,SpeechT5FeatureExtractor:()=>ut,SpeechT5Processor:()=>Lr,Swin2SRImageProcessor:()=>Ct,ViTFeatureExtractor:()=>X,ViTImageProcessor:()=>ve,VitMatteImageProcessor:()=>E,Wav2Vec2FeatureExtractor:()=>F,Wav2Vec2ProcessorWithLM:()=>Ir,WeSpeakerFeatureExtractor:()=>$t,WhisperFeatureExtractor:()=>ne,WhisperProcessor:()=>Kt,YolosFeatureExtractor:()=>bt});var $=P("./src/utils/generic.js"),se=P("./src/utils/core.js"),xe=P("./src/utils/hub.js"),Ie=P("./src/utils/maths.js"),Pe=P("./src/utils/tensor.js");P("./src/utils/image.js");var Q=P("./src/utils/audio.js");function R([ht,Z,ke,Le]){return[ht-ke/2,Z-Le/2,ht+ke/2,Z+Le/2]}function W(ht,Z=.5,ke=null,Le=!1){const Oe=ht.logits,je=ht.pred_boxes,[at,vt,_t]=Oe.dims;if(ke!==null&&ke.length!==at)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let kt=[];for(let M=0;M<at;++M){let d=ke!==null?ke[M]:null,f={boxes:[],classes:[],scores:[]},O=Oe[M],D=je[M];for(let G=0;G<vt;++G){let fe=O[G],Mt=[],Nt;if(Le){Nt=fe.sigmoid().data;for(let qt=0;qt<Nt.length;++qt)Nt[qt]>Z&&Mt.push(qt)}else{let qt=(0,Ie.max)(fe.data)[1];if(qt===_t-1||(Nt=(0,Ie.softmax)(fe.data),Nt[qt]<Z))continue;Mt.push(qt)}for(const qt of Mt){let nr=D[G].data;nr=R(nr),d!==null&&(nr=nr.map((jt,Br)=>jt*d[(Br+1)%2])),f.boxes.push(nr),f.classes.push(qt),f.scores.push(Nt[qt])}}kt.push(f)}return kt}function q(ht,Z=null){const ke=ht.logits,Le=ke.dims[0];if(Z!==null&&Z.length!==Le)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const Oe=[];for(let je=0;je<Le;++je){const at=Z!==null?Z[je]:null;let vt=ke[je];at!==null&&(vt=(0,Pe.interpolate)(vt,at,"bilinear",!1));const[_t,kt]=at??vt.dims.slice(-2),M=new Pe.Tensor("int32",new Int32Array(_t*kt),[_t,kt]),d=vt[0].data,f=M.data;for(let G=1;G<vt.dims[0];++G){const fe=vt[G].data;for(let Mt=0;Mt<fe.length;++Mt)fe[Mt]>d[Mt]&&(d[Mt]=fe[Mt],f[Mt]=G)}const O=new Array(vt.dims[0]);for(let G=0;G<f.length;++G){const fe=f[G];O[fe]=fe}const D=O.filter(G=>G!==void 0);Oe.push({segmentation:M,labels:D})}return Oe}function te(ht,Z,ke,Le){const Oe=[],je=[],at=[];for(let vt=0;vt<ht.dims[0];++vt){const _t=ht[vt],kt=Z[vt],M=(0,Ie.max)(_t.data)[1];if(M===Le)continue;const f=(0,Ie.softmax)(_t.data)[M];f>ke&&(Oe.push(kt),je.push(f),at.push(M))}return[Oe,je,at]}function pe(ht,Z,ke,Le=.5,Oe=.8){const je=[];let at=0,vt=0;const _t=Z[ke].data;for(let M=0;M<ht.length;++M)ht[M]===ke&&(je.push(M),++at),_t[M]>=Le&&++vt;let kt=at>0&&vt>0;return kt&&(kt=at/vt>Oe),[kt,je]}function Se(ht,Z,ke,Le,Oe,je=null,at=null){const[vt,_t]=at??ht[0].dims,kt=new Pe.Tensor("int32",new Int32Array(vt*_t),[vt,_t]),M=[];if(at!==null)for(let G=0;G<ht.length;++G)ht[G]=(0,Pe.interpolate)(ht[G],at,"bilinear",!1);const d=new Int32Array(ht[0].data.length),f=new Float32Array(ht[0].data.length);for(let G=0;G<ht.length;++G){let fe=Z[G];const Mt=ht[G].data;for(let Nt=0;Nt<Mt.length;++Nt)Mt[Nt]*=fe,Mt[Nt]>f[Nt]&&(d[Nt]=G,f[Nt]=Mt[Nt])}let O=0;const D=kt.data;for(let G=0;G<ke.length;++G){const fe=ke[G],[Mt,Nt]=pe(d,ht,G,Le,Oe);if(Mt){++O;for(const qt of Nt)D[qt]=O;M.push({id:O,label_id:fe,score:Z[G]})}}return[kt,M]}function Ee(ht,Z=.5,ke=.5,Le=.8,Oe=null,je=null){Oe===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),Oe=new Set);const at=ht.class_queries_logits??ht.logits,_t=(ht.masks_queries_logits??ht.pred_masks).sigmoid();let[kt,M,d]=at.dims;if(d-=1,je!==null&&je.length!==kt)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let f=[];for(let O=0;O<kt;++O){let D=je!==null?je[O]:null,G=at[O],fe=_t[O],[Mt,Nt,qt]=te(G,fe,Z,d);if(qt.length===0){let[Br,kr]=D??fe.dims.slice(-2),Dn=new Pe.Tensor("int32",new Int32Array(Br*kr).fill(-1),[Br,kr]);f.push({segmentation:Dn,segments_info:[]});continue}let[nr,jt]=Se(Mt,Nt,qt,ke,Le,Oe,D);f.push({segmentation:nr,segments_info:jt})}return f}function j(ht,Z){if(!(ht instanceof Float32Array||ht instanceof Float64Array))throw new Error(`${Z} expects input to be a Float32Array or a Float64Array, but got ${ht?.constructor?.name??typeof ht} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}function le(ht,Z,ke=0,Le=null){const Oe=ht/Z;let je=(0,Ie.bankers_round)(Oe)*Z;return Le!==null&&je>Le&&(je=Math.floor(Oe)*Z),je<ke&&(je=Math.ceil(Oe)*Z),je}function de([ht,Z],ke){return[Math.max(Math.floor(ht/ke),1)*ke,Math.max(Math.floor(Z/ke),1)*ke]}class U extends $.Callable{constructor(Z){super(),this.config=Z}}class H extends U{constructor(Z){super(Z),this.image_mean=this.config.image_mean??this.config.mean,this.image_std=this.config.image_std??this.config.std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.do_thumbnail=this.config.do_thumbnail,this.size=this.config.size,this.size_divisibility=this.config.size_divisibility??this.config.size_divisor,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.do_crop_margin=this.config.do_crop_margin,this.pad_size=this.config.pad_size,this.do_pad=this.config.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=this.config.do_flip_channel_order??!1}async thumbnail(Z,ke,Le=2){const Oe=Z.height,je=Z.width,at=ke.height,vt=ke.width;let _t=Math.min(Oe,at),kt=Math.min(je,vt);return _t===Oe&&kt===je?Z:(Oe>je?kt=Math.floor(je*_t/Oe):je>Oe&&(_t=Math.floor(Oe*kt/je)),await Z.resize(kt,_t,{resample:Le}))}async crop_margin(Z,ke=200){const Le=Z.clone().grayscale(),Oe=(0,Ie.min)(Le.data)[0],at=(0,Ie.max)(Le.data)[0]-Oe;if(at===0)return Z;const vt=ke/255;let _t=Le.width,kt=Le.height,M=0,d=0;const f=Le.data;for(let O=0;O<Le.height;++O){const D=O*Le.width;for(let G=0;G<Le.width;++G)(f[D+G]-Oe)/at<vt&&(_t=Math.min(_t,G),kt=Math.min(kt,O),M=Math.max(M,G),d=Math.max(d,O))}return Z=await Z.crop([_t,kt,M,d]),Z}pad_image(Z,ke,Le,{mode:Oe="constant",center:je=!1,constant_values:at=0}={}){const[vt,_t,kt]=ke;let M,d;if(typeof Le=="number"?(M=Le,d=Le):(M=Le.width,d=Le.height),M!==_t||d!==vt){const f=new Float32Array(M*d*kt);if(Array.isArray(at))for(let G=0;G<f.length;++G)f[G]=at[G%kt];else at!==0&&f.fill(at);const[O,D]=je?[Math.floor((M-_t)/2),Math.floor((d-vt)/2)]:[0,0];for(let G=0;G<vt;++G){const fe=(G+D)*M,Mt=G*_t;for(let Nt=0;Nt<_t;++Nt){const qt=(fe+Nt+O)*kt,nr=(Mt+Nt)*kt;for(let jt=0;jt<kt;++jt)f[qt+jt]=Z[nr+jt]}}if(Oe==="symmetric"){if(je)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const G=vt-1,fe=_t-1;for(let Mt=0;Mt<d;++Mt){const Nt=Mt*M,qt=(0,se.calculateReflectOffset)(Mt,G)*_t;for(let nr=0;nr<M;++nr){if(Mt<vt&&nr<_t)continue;const jt=(Nt+nr)*kt,Br=(qt+(0,se.calculateReflectOffset)(nr,fe))*kt;for(let kr=0;kr<kt;++kr)f[jt+kr]=Z[Br+kr]}}}Z=f,ke=[d,M,kt]}return[Z,ke]}rescale(Z){for(let ke=0;ke<Z.length;++ke)Z[ke]=this.rescale_factor*Z[ke]}get_resize_output_image_size(Z,ke){const[Le,Oe]=Z.size;let je,at;if(this.do_thumbnail){const{height:vt,width:_t}=ke;je=Math.min(vt,_t)}else Number.isInteger(ke)?(je=ke,at=this.config.max_size??je):ke!==void 0&&(je=ke.shortest_edge,at=ke.longest_edge);if(je!==void 0||at!==void 0){const vt=je===void 0?1:Math.max(je/Le,je/Oe),_t=Le*vt,kt=Oe*vt,M=at===void 0?1:Math.min(at/_t,at/kt);let d=Math.floor(Number((_t*M).toFixed(2))),f=Math.floor(Number((kt*M).toFixed(2)));return this.size_divisibility!==void 0&&([d,f]=de([d,f],this.size_divisibility)),[d,f]}else if(ke!==void 0&&ke.width!==void 0&&ke.height!==void 0){let vt=ke.width,_t=ke.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let kt=_t/Oe,M=vt/Le;Math.abs(1-M)<Math.abs(1-kt)?kt=M:M=kt,_t=le(kt*Oe,this.config.ensure_multiple_of),vt=le(M*Le,this.config.ensure_multiple_of)}return[vt,_t]}else{if(this.size_divisibility!==void 0)return de([Le,Oe],this.size_divisibility);throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(ke)}`)}}async resize(Z){const[ke,Le]=this.get_resize_output_image_size(Z,this.size);return await Z.resize(ke,Le,{resample:this.resample})}async preprocess(Z,{do_normalize:ke=null,do_pad:Le=null,do_convert_rgb:Oe=null,do_convert_grayscale:je=null,do_flip_channel_order:at=null}={}){this.do_crop_margin&&(Z=await this.crop_margin(Z));const[vt,_t]=Z.size;if(Oe??this.do_convert_rgb?Z=Z.rgb():je&&(Z=Z.grayscale()),this.do_resize&&(Z=await this.resize(Z)),this.do_thumbnail&&(Z=await this.thumbnail(Z,this.size,this.resample)),this.do_center_crop){let O,D;Number.isInteger(this.crop_size)?(O=this.crop_size,D=this.crop_size):(O=this.crop_size.width,D=this.crop_size.height),Z=await Z.center_crop(O,D)}const kt=[Z.height,Z.width];let M=Float32Array.from(Z.data),d=[Z.height,Z.width,Z.channels];if(this.do_rescale&&this.rescale(M),ke??this.do_normalize){let O=this.image_mean;Array.isArray(this.image_mean)||(O=new Array(Z.channels).fill(O));let D=this.image_std;if(Array.isArray(this.image_std)||(D=new Array(Z.channels).fill(O)),O.length!==Z.channels||D.length!==Z.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${O.length}) and \`image_std\` (${D.length}) must match the number of channels in the image (${Z.channels}).`);for(let G=0;G<M.length;G+=Z.channels)for(let fe=0;fe<Z.channels;++fe)M[G+fe]=(M[G+fe]-O[fe])/D[fe]}if(Le??this.do_pad){if(this.pad_size)[M,d]=this.pad_image(M,[Z.height,Z.width,Z.channels],this.pad_size);else if(this.size_divisibility){const[O,D]=de([d[1],d[0]],this.size_divisibility);[M,d]=this.pad_image(M,d,{width:O,height:D})}}if(at??this.do_flip_channel_order){if(d[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let O=0;O<M.length;O+=3){const D=M[O];M[O]=M[O+2],M[O+2]=D}}const f=new Pe.Tensor("float32",M,d).permute(2,0,1);return{original_size:[_t,vt],reshaped_input_size:kt,pixel_values:f}}async _call(Z,...ke){Array.isArray(Z)||(Z=[Z]);const Le=await Promise.all(Z.map(je=>this.preprocess(je)));return{pixel_values:(0,Pe.stack)(Le.map(je=>je.pixel_values),0),original_sizes:Le.map(je=>je.original_size),reshaped_input_sizes:Le.map(je=>je.reshaped_input_size)}}}class N extends H{post_process_semantic_segmentation(...Z){return q(...Z)}}class I extends H{post_process_semantic_segmentation(...Z){return q(...Z)}}class z extends H{}class T extends H{}class _e extends T{}class Me extends H{}class $e extends H{}class K extends H{}class Fe extends K{}class ot extends H{}class Qe extends H{}class ct extends H{constructor(Z){super(Z),this.crop_pct=this.config.crop_pct??224/256}async resize(Z){const ke=this.size?.shortest_edge;if(ke===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(ke<384){const Le=Math.floor(ke/this.crop_pct),[Oe,je]=this.get_resize_output_image_size(Z,{shortest_edge:Le});Z=await Z.resize(Oe,je,{resample:this.resample}),Z=await Z.center_crop(ke,ke)}else Z=await Z.resize(ke,ke,{resample:this.resample});return Z}}class Ce extends ct{}class X extends H{}class ve extends H{}class Ae extends H{constructor(Z){super(Z),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(ke=>ke*ke))}}class He extends H{}class pt extends H{}class he extends H{}class tt extends H{}class gt extends H{}class Ue extends gt{}class yt extends H{post_process_object_detection(...Z){return W(...Z)}}class xt extends yt{}class Ze extends H{post_process_object_detection(...Z){return W(...Z)}}class re extends H{}class Ne extends H{}class rt extends H{pad_image(Z,ke,Le,Oe={}){const[je,at,vt]=ke;let _t=this.image_mean;Array.isArray(this.image_mean)||(_t=new Array(vt).fill(_t));let kt=this.image_std;Array.isArray(kt)||(kt=new Array(vt).fill(_t));const M=_t.map((d,f)=>-d/kt[f]);return super.pad_image(Z,ke,Le,{center:!0,constant_values:M,...Oe})}}class st extends rt{}class Xe extends rt{}class Ge extends H{async _call(Z){const ke=await super._call(Z),Le=[ke.pixel_values.dims[0],64,64],Oe=(0,Pe.full)(Le,1n);return{...ke,pixel_mask:Oe}}post_process_object_detection(...Z){return W(...Z)}post_process_panoptic_segmentation(...Z){return Ee(...Z)}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class mt extends H{post_process_panoptic_segmentation(...Z){return Ee(...Z)}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class bt extends H{post_process_object_detection(...Z){return W(...Z)}}class Bt extends H{reshape_input_points(Z,ke,Le,Oe=!1){Z=structuredClone(Z);let je=(0,se.calculateDimensions)(Z);if(je.length===3)Oe||(je=[1,...je]),Z=[Z];else if(je.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let at=0;at<Z.length;++at){let vt=ke[at],_t=Le[at],kt=[_t[0]/vt[0],_t[1]/vt[1]];for(let M=0;M<Z[at].length;++M)for(let d=0;d<Z[at][M].length;++d)for(let f=0;f<Z[at][M][d].length;++f)Z[at][M][d][f]*=kt[f%2]}return new Pe.Tensor("float32",Float32Array.from(Z.flat(1/0)),je)}add_input_labels(Z,ke){let Le=(0,se.calculateDimensions)(Z);if(Le.length===2)Le=[1,...Le],Z=[Z];else if(Le.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(Le.some((Oe,je)=>Oe!==ke.dims[je]))throw Error(`The first ${Le.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new Pe.Tensor("int64",Z.flat(1/0).map(BigInt),Le)}async _call(Z,{input_points:ke=null,input_labels:Le=null,input_boxes:Oe=null}={}){const je=await super._call(Z);if(ke&&(je.input_points=this.reshape_input_points(ke,je.original_sizes,je.reshaped_input_sizes)),Le){if(!je.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");je.input_labels=this.add_input_labels(Le,je.input_points)}return Oe&&(je.input_boxes=this.reshape_input_points(Oe,je.original_sizes,je.reshaped_input_sizes,!0)),je}async post_process_masks(Z,ke,Le,{mask_threshold:Oe=0,binarize:je=!0,pad_size:at=null}={}){const vt=[];at=at??this.pad_size;const _t=[at.height,at.width];for(let kt=0;kt<ke.length;++kt){const M=ke[kt],d=Le[kt];let f=await(0,Pe.interpolate_4d)(Z[kt],{mode:"bilinear",size:_t});if(f=f.slice(null,null,[0,d[0]],[0,d[1]]),f=await(0,Pe.interpolate_4d)(f,{mode:"bilinear",size:M}),je){const O=f.data,D=new Uint8Array(O.length);for(let G=0;G<O.length;++G)O[G]>Oe&&(D[G]=1);f=new Pe.Tensor("bool",D,f.dims)}vt.push(f)}return vt}generate_crop_boxes(Z,ke,{crop_n_layers:Le=0,overlap_ratio:Oe=512/1500,points_per_crop:je=32,crop_n_points_downscale_factor:at=1}={}){}}class Ct extends H{pad_image(Z,ke,Le,Oe={}){const[je,at,vt]=ke;return super.pad_image(Z,ke,{width:at+(Le-at%Le)%Le,height:je+(Le-je%Le)%Le},{mode:"symmetric",center:!1,constant_values:-1,...Oe})}}class E extends H{async _call(Z,ke){Array.isArray(Z)||(Z=[Z]),Array.isArray(ke)||(ke=[ke]);const Le=await Promise.all(Z.map(at=>this.preprocess(at))),Oe=await Promise.all(ke.map(at=>this.preprocess(at,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,Pe.stack)(Le.map((at,vt)=>(0,Pe.cat)([at.pixel_values,Oe[vt].pixel_values],0)),0),original_sizes:Le.map(at=>at.original_size),reshaped_input_sizes:Le.map(at=>at.reshaped_input_size)}}}class ne extends U{constructor(Z){super(Z),this.config.mel_filters??=(0,Q.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,Q.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(Z){const ke=await(0,Q.spectrogram)(Z,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),Le=ke.data,Oe=(0,Ie.max)(Le)[0];for(let je=0;je<Le.length;++je)Le[je]=(Math.max(Le[je],Oe-8)+4)/4;return ke}async _call(Z){j(Z,"WhisperFeatureExtractor");let ke;return Z.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),ke=Z.slice(0,this.config.n_samples)):(ke=new Float32Array(this.config.n_samples),ke.set(Z)),{input_features:(await this._extract_fbank_features(ke)).unsqueeze_(0)}}}class F extends U{_zero_mean_unit_var_norm(Z){const Le=Z.reduce((je,at)=>je+at,0)/Z.length,Oe=Z.reduce((je,at)=>je+(at-Le)**2,0)/Z.length;return Z.map(je=>(je-Le)/Math.sqrt(Oe+1e-7))}async _call(Z){j(Z,"Wav2Vec2FeatureExtractor"),Z instanceof Float64Array&&(Z=new Float32Array(Z));let ke=Z;this.config.do_normalize&&(ke=this._zero_mean_unit_var_norm(ke));const Le=[1,ke.length];return{input_values:new Pe.Tensor("float32",ke,Le),attention_mask:new Pe.Tensor("int64",new BigInt64Array(ke.length).fill(1n),Le)}}}class oe extends U{constructor(Z){super(Z);const ke=this.config.sampling_rate,Le=(0,Q.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(ke/2),ke,null,"kaldi",!0);for(let Oe=0;Oe<Le.length;++Oe)Le[Oe].push(0);this.mel_filters=Le,this.window=(0,Q.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(Z,ke){return Z=Z.map(Le=>Le*32768),(0,Q.spectrogram)(Z,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:ke,transpose:!0})}async _call(Z,{padding:ke=!0,pad_to_multiple_of:Le=2,do_normalize_per_mel_bins:Oe=!0,return_attention_mask:je=!0}={}){j(Z,"SeamlessM4TFeatureExtractor");let at=await this._extract_fbank_features(Z,this.config.max_length);if(Oe){const[D,G]=at.dims,fe=at.data;for(let Mt=0;Mt<G;++Mt){let Nt=0;for(let Br=0;Br<D;++Br)Nt+=fe[Br*G+Mt];const qt=Nt/D;let nr=0;for(let Br=0;Br<D;++Br)nr+=(fe[Br*G+Mt]-qt)**2;nr/=D-1;const jt=Math.sqrt(nr+1e-7);for(let Br=0;Br<D;++Br){const kr=Br*G+Mt;fe[kr]=(fe[kr]-qt)/jt}}}let vt;if(ke){const[D,G]=at.dims,fe=at.data,Mt=D%Le;if(Mt>0){const Nt=new Float32Array(G*(D+Mt));Nt.set(fe),Nt.fill(this.config.padding_value,fe.length);const qt=D+Mt;at=new Pe.Tensor(at.type,Nt,[qt,G]),je&&(vt=new Pe.Tensor("int64",new BigInt64Array(qt),[1,qt]),vt.data.fill(1n,0,D))}}const[_t,kt]=at.dims,M=this.config.stride;if(_t%M!==0)throw new Error(`The number of frames (${_t}) must be a multiple of the stride (${M}).`);const f=at.view(1,Math.floor(_t/M),kt*M),O={input_features:f};if(je){const D=f.dims[1],G=new BigInt64Array(D);if(vt){const fe=vt.data;for(let Mt=1,Nt=0;Mt<_t;Mt+=M,++Nt)G[Nt]=fe[Mt]}else G.fill(1n);O.attention_mask=new Pe.Tensor("int64",G,[1,D])}return O}}class Te extends U{constructor(Z){super(Z);const ke=this.config.sampling_rate,Le=(0,Q.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(ke/2),ke,null,"kaldi",!0);for(let Oe=0;Oe<Le.length;++Oe)Le[Oe].push(0);this.mel_filters=Le,this.window=(0,Q.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(Z,ke){return(0,Q.spectrogram)(Z,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:ke,transpose:!0})}async _call(Z){j(Z,"ASTFeatureExtractor");const ke=await this._extract_fbank_features(Z,this.config.max_length);if(this.config.do_normalize){const Le=this.std*2,Oe=ke.data;for(let je=0;je<Oe.length;++je)Oe[je]=(Oe[je]-this.mean)/Le}return{input_values:ke.unsqueeze_(0)}}}class lt extends U{constructor(Z){super(Z),this.mel_filters=(0,Q.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,Q.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,Q.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(Z,ke,Le,Oe){let je;const at=Z.length-ke;if(at>0)if(Le==="rand_trunc"){const vt=Math.floor(Math.random()*(at+1));Z=Z.subarray(vt,vt+ke),je=await this._extract_fbank_features(Z,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${Le}" not implemented`);else{if(at<0){let vt=new Float64Array(ke);if(vt.set(Z),Oe==="repeat")for(let _t=Z.length;_t<ke;_t+=Z.length)vt.set(Z.subarray(0,Math.min(Z.length,ke-_t)),_t);else if(Oe==="repeatpad")for(let _t=Z.length;_t<-at;_t+=Z.length)vt.set(Z,_t);Z=vt}if(Le==="fusion")throw new Error(`Truncation strategy "${Le}" not implemented`);je=await this._extract_fbank_features(Z,this.mel_filters_slaney,this.config.nb_max_samples)}return je.unsqueeze_(0)}async _extract_fbank_features(Z,ke,Le=null){return(0,Q.spectrogram)(Z,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:ke,log_mel:"dB",max_num_frames:Le,do_pad:!1,transpose:!0})}async _call(Z,{max_length:ke=null}={}){return j(Z,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(Z,ke??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}class Ye extends U{async _call(Z){j(Z,"PyAnnoteFeatureExtractor"),Z instanceof Float64Array&&(Z=new Float32Array(Z));const ke=[1,1,Z.length];return{input_values:new Pe.Tensor("float32",Z,ke)}}samples_to_frames(Z){return(Z-this.config.offset)/this.config.step}post_process_speaker_diarization(Z,ke){const Le=ke/this.samples_to_frames(ke)/this.config.sampling_rate,Oe=[];for(const je of Z.tolist()){const at=[];let vt=-1;for(let _t=0;_t<je.length;++_t){const kt=(0,Ie.softmax)(je[_t]),[M,d]=(0,Ie.max)(kt),[f,O]=[_t,_t+1];d!==vt?(vt=d,at.push({id:d,start:f,end:O,score:M})):(at.at(-1).end=O,at.at(-1).score+=M)}Oe.push(at.map(({id:_t,start:kt,end:M,score:d})=>({id:_t,start:kt*Le,end:M*Le,confidence:d/(M-kt)})))}return Oe}}class $t extends U{constructor(Z){super(Z);const ke=this.config.sampling_rate,Le=(0,Q.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(ke/2),ke,null,"kaldi",!0);for(let Oe=0;Oe<Le.length;++Oe)Le[Oe].push(0);this.mel_filters=Le,this.window=(0,Q.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(Z){return Z=Z.map(ke=>ke*32768),(0,Q.spectrogram)(Z,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(Z){j(Z,"WeSpeakerFeatureExtractor");const ke=(await this._extract_fbank_features(Z)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const Le=ke.mean(1).data,Oe=ke.data,[je,at,vt]=ke.dims;for(let _t=0;_t<je;++_t){const kt=_t*at*vt,M=_t*vt;for(let d=0;d<at;++d){const f=kt+d*vt;for(let O=0;O<vt;++O)Oe[f+O]-=Le[M+O]}}}return{input_features:ke}}}class ut extends U{}class ft extends $.Callable{constructor(Z){super(),this.feature_extractor=Z}async _call(Z,...ke){return await this.feature_extractor(Z,...ke)}}class Wt extends ft{async _call(...Z){return await this.feature_extractor(...Z)}post_process_masks(...Z){return this.feature_extractor.post_process_masks(...Z)}reshape_input_points(...Z){return this.feature_extractor.reshape_input_points(...Z)}}class Kt extends ft{async _call(Z){return await this.feature_extractor(Z)}}class Ir extends ft{async _call(Z){return await this.feature_extractor(Z)}}class Er extends ft{async _call(Z){return await this.feature_extractor(Z)}post_process_speaker_diarization(...Z){return this.feature_extractor.post_process_speaker_diarization(...Z)}}class Lr extends ft{async _call(Z){return await this.feature_extractor(Z)}}class Cr extends ft{}class Hr extends ft{constructor(Z){super(Z);const{tasks_answer_post_processing_type:ke,task_prompts_without_inputs:Le,task_prompts_with_input:Oe}=Z.config;this.tasks_answer_post_processing_type=new Map(Object.entries(ke??{})),this.task_prompts_without_inputs=new Map(Object.entries(Le??{})),this.task_prompts_with_input=new Map(Object.entries(Oe??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(Z){typeof Z=="string"&&(Z=[Z]);const ke=[];for(const Le of Z)if(this.task_prompts_without_inputs.has(Le))ke.push(this.task_prompts_without_inputs.get(Le));else{for(const[Oe,je]of this.task_prompts_with_input)if(Le.includes(Oe)){ke.push(je.replaceAll("{input}",Le).replaceAll(Oe,""));break}ke.length!==Z.length&&ke.push(Le)}return ke}post_process_generation(Z,ke,Le){const Oe=this.tasks_answer_post_processing_type.get(ke)??"pure_text";Z=Z.replaceAll("<s>","").replaceAll("</s>","");let je;switch(Oe){case"pure_text":je=Z;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const at=Oe==="ocr"?"quad_boxes":"bboxes",vt=Z.matchAll(this.regexes[at]),_t=[],kt=[];for(const[M,d,...f]of vt)_t.push(d?d.trim():_t.at(-1)??""),kt.push(f.map((O,D)=>(Number(O)+.5)/this.size_per_bin*Le[D%2]));je={labels:_t,[at]:kt};break;default:throw new Error(`Task "${ke}" (of type "${Oe}") not yet implemented.`)}return{[ke]:je}}}class wn{static FEATURE_EXTRACTOR_CLASS_MAPPING={ImageFeatureExtractor:H,WhisperFeatureExtractor:ne,ViTFeatureExtractor:X,MobileViTFeatureExtractor:gt,MobileViTImageProcessor:Ue,MobileNetV1FeatureExtractor:He,MobileNetV2FeatureExtractor:pt,MobileNetV3FeatureExtractor:he,MobileNetV4FeatureExtractor:tt,OwlViTFeatureExtractor:yt,Owlv2ImageProcessor:xt,CLIPFeatureExtractor:K,CLIPImageProcessor:Fe,Florence2Processor:Hr,ChineseCLIPFeatureExtractor:ot,SiglipImageProcessor:Qe,ConvNextFeatureExtractor:ct,ConvNextImageProcessor:Ce,SegformerFeatureExtractor:I,SapiensFeatureExtractor:N,BitImageProcessor:Me,DPTImageProcessor:_e,DPTFeatureExtractor:T,PvtImageProcessor:z,GLPNFeatureExtractor:$e,BeitFeatureExtractor:Ne,DeiTFeatureExtractor:re,DetrFeatureExtractor:Ge,RTDetrImageProcessor:Ze,MaskFormerFeatureExtractor:mt,YolosFeatureExtractor:bt,DonutFeatureExtractor:rt,DonutImageProcessor:st,NougatImageProcessor:Xe,EfficientNetImageProcessor:Ae,ViTImageProcessor:ve,VitMatteImageProcessor:E,SamImageProcessor:Bt,Swin2SRImageProcessor:Ct,Wav2Vec2FeatureExtractor:F,SeamlessM4TFeatureExtractor:oe,SpeechT5FeatureExtractor:ut,ASTFeatureExtractor:Te,ClapFeatureExtractor:lt,PyAnnoteFeatureExtractor:Ye,WeSpeakerFeatureExtractor:$t};static PROCESSOR_CLASS_MAPPING={WhisperProcessor:Kt,Wav2Vec2ProcessorWithLM:Ir,PyAnnoteProcessor:Er,SamProcessor:Wt,SpeechT5Processor:Lr,OwlViTProcessor:Cr,Florence2Processor:Hr};static async from_pretrained(Z,{progress_callback:ke=null,config:Le=null,cache_dir:Oe=null,local_files_only:je=!1,revision:at="main"}={}){let vt=Le??await(0,xe.getModelJSON)(Z,"preprocessor_config.json",!0,{progress_callback:ke,config:Le,cache_dir:Oe,local_files_only:je,revision:at}),_t=vt.feature_extractor_type??vt.image_processor_type,kt=this.FEATURE_EXTRACTOR_CLASS_MAPPING[_t];if(!kt)if(vt.size!==void 0)console.warn(`Feature extractor type "${_t}" not found, assuming ImageFeatureExtractor due to size parameter in config.`),kt=H;else throw new Error(`Unknown Feature Extractor type: ${_t}`);let M=this.PROCESSOR_CLASS_MAPPING[vt.processor_class]??ft,d=new kt(vt);return new M(d)}}},"./src/tokenizers.js":(we,Y,P)=>{P.r(Y),P.d(Y,{AlbertTokenizer:()=>at,AutoTokenizer:()=>ts,BartTokenizer:()=>nr,BertTokenizer:()=>je,BlenderbotSmallTokenizer:()=>Oi,BlenderbotTokenizer:()=>Fi,BloomTokenizer:()=>Dn,CLIPTokenizer:()=>_i,CamembertTokenizer:()=>G,CodeGenTokenizer:()=>mi,CodeLlamaTokenizer:()=>$i,CohereTokenizer:()=>ri,ConvBertTokenizer:()=>f,DebertaTokenizer:()=>kt,DebertaV2Tokenizer:()=>M,DistilBertTokenizer:()=>D,ElectraTokenizer:()=>Mt,EsmTokenizer:()=>Ai,FalconTokenizer:()=>ki,GPT2Tokenizer:()=>qt,GPTNeoXTokenizer:()=>Pi,GemmaTokenizer:()=>ei,Grok1Tokenizer:()=>Xn,HerbertTokenizer:()=>d,LlamaTokenizer:()=>hi,M2M100Tokenizer:()=>fi,MBart50Tokenizer:()=>Br,MBartTokenizer:()=>jt,MPNetTokenizer:()=>Si,MarianTokenizer:()=>er,MobileBertTokenizer:()=>vt,NllbTokenizer:()=>Ln,NougatTokenizer:()=>Bi,PreTrainedTokenizer:()=>Oe,Qwen2Tokenizer:()=>Ii,RoFormerTokenizer:()=>O,RobertaTokenizer:()=>kr,SiglipTokenizer:()=>gi,SpeechT5Tokenizer:()=>wi,SqueezeBertTokenizer:()=>_t,T5Tokenizer:()=>Nt,TokenizerModel:()=>$e,VitsTokenizer:()=>zi,Wav2Vec2CTCTokenizer:()=>ti,WhisperTokenizer:()=>On,XLMRobertaTokenizer:()=>Kn,XLMTokenizer:()=>fe,is_chinese_char:()=>U});var $=P("./src/utils/generic.js"),se=P("./src/utils/core.js"),xe=P("./src/utils/hub.js"),Ie=P("./src/utils/maths.js"),Pe=P("./src/utils/tensor.js"),Q=P("./src/utils/data-structures.js"),R=P("./node_modules/@huggingface/jinja/dist/index.js"),W=P("./src/models/whisper/common_whisper.js");P("./src/utils/constants.js");async function q(ye,_){const V=await Promise.all([(0,xe.getModelJSON)(ye,"tokenizer.json",!0,_),(0,xe.getModelJSON)(ye,"tokenizer_config.json",!0,_)]);return _.legacy!==null&&(V[1].legacy=_.legacy),V}function te(ye,_){const V=[];let ue=0;for(const me of ye.matchAll(_)){const De=me[0];ue<me.index&&V.push(ye.slice(ue,me.index)),De.length>0&&V.push(De),ue=me.index+De.length}return ue<ye.length&&V.push(ye.slice(ue)),V}function pe(ye,_=!0){if(ye.Regex!==void 0){let V=ye.Regex.replace(/\\([#&~])/g,"$1");for(const[ue,me]of _e)V=V.replaceAll(ue,me);return new RegExp(V,"gu")}else if(ye.String!==void 0){const V=(0,se.escapeRegExp)(ye.String);return new RegExp(_?V:`(${V})`,"gu")}else return console.warn("Unknown pattern type:",ye),null}function Se(ye){return new Map(Object.entries(ye))}function Ee(ye){const _=ye.dims;switch(_.length){case 1:return ye.tolist();case 2:if(_[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return ye.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${_.length}.`)}}function j(ye){return ye.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function le(ye){return ye.replace(/\p{M}/gu,"")}function de(ye){return le(ye.toLowerCase())}function U(ye){return ye>=19968&&ye<=40959||ye>=13312&&ye<=19903||ye>=131072&&ye<=173791||ye>=173824&&ye<=177983||ye>=177984&&ye<=178207||ye>=178208&&ye<=183983||ye>=63744&&ye<=64255||ye>=194560&&ye<=195103}function H(ye,_,V){const ue=[];let me=0;for(;me<ye.length;){if(ue.push(ye[me]),(_.get(ye[me])??V)!==V){++me;continue}for(;++me<ye.length&&(_.get(ye[me])??V)===V;)_.get(ue.at(-1))!==V&&(ue[ue.length-1]+=ye[me])}return ue}function N(ye){return ye.match(/\S+/g)||[]}const I="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",z=new RegExp(`^[${I}]+$`,"gu"),T=".,!?…。，、।۔،",_e=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${T}])]+`,` ?[^\\s${T}]+`]]);class Me{constructor(_){this.content=_.content,this.id=_.id,this.single_word=_.single_word??!1,this.lstrip=_.lstrip??!1,this.rstrip=_.rstrip??!1,this.special=_.special??!1,this.normalized=_.normalized??null}}class $e extends $.Callable{constructor(_){super(),this.config=_,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(_,...V){switch(_.type){case"WordPiece":return new K(_);case"Unigram":return new Fe(_,...V);case"BPE":return new ct(_);default:if(_.vocab)return Array.isArray(_.vocab)?new Fe(_,...V):new Ce(_,...V);throw new Error(`Unknown TokenizerModel type: ${_.type}`)}}_call(_){return _=this.encode(_),this.fuse_unk&&(_=H(_,this.tokens_to_ids,this.unk_token_id)),_}encode(_){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(_){return _.map(V=>this.tokens_to_ids.get(V)??this.unk_token_id)}convert_ids_to_tokens(_){return _.map(V=>this.vocab[V]??this.unk_token)}}class K extends $e{constructor(_){super(_),this.tokens_to_ids=Se(_.vocab),this.unk_token_id=this.tokens_to_ids.get(_.unk_token),this.unk_token=_.unk_token,this.max_input_chars_per_word=_.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[V,ue]of this.tokens_to_ids)this.vocab[ue]=V}encode(_){const V=[];for(const ue of _){const me=[...ue];if(me.length>this.max_input_chars_per_word){V.push(this.unk_token);continue}let De=!1,et=0;const St=[];for(;et<me.length;){let Ft=me.length,Ot=null;for(;et<Ft;){let Tt=me.slice(et,Ft).join("");if(et>0&&(Tt=this.config.continuing_subword_prefix+Tt),this.tokens_to_ids.has(Tt)){Ot=Tt;break}--Ft}if(Ot===null){De=!0;break}St.push(Ot),et=Ft}De?V.push(this.unk_token):V.push(...St)}return V}}class Fe extends $e{constructor(_,V){super(_);const ue=_.vocab.length;this.vocab=new Array(ue),this.scores=new Array(ue);for(let me=0;me<ue;++me){const De=_.vocab[me];this.vocab[me]=De[0],this.scores[me]=De[1]}this.unk_token_id=_.unk_id,this.unk_token=this.vocab[_.unk_id],this.tokens_to_ids=new Map(this.vocab.map((me,De)=>[me,De])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=V.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,Ie.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new Q.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(_){const V=_.chars,ue=1;let me=0;for(;me<V.length;){let De=!1;const et=V.slice(me).join(""),St=this.trie.commonPrefixSearch(et);for(const Ft of St){const Ot=this.tokens_to_ids.get(Ft),Tt=this.scores[Ot],hr=(0,se.len)(Ft);_.insert(me,hr,Tt,Ot),!De&&hr===ue&&(De=!0)}De||_.insert(me,ue,this.unk_score,this.unk_token_id),me+=ue}}tokenize(_){const V=new Q.TokenLattice(_,this.bos_token_id,this.eos_token_id);return this.populateNodes(V),V.tokens()}encode(_){const V=[];for(const ue of _){const me=this.tokenize(ue);V.push(...me)}return V}}const ot=(()=>{const ye=[...Array.from({length:94},(me,De)=>De+33),...Array.from({length:12},(me,De)=>De+161),...Array.from({length:82},(me,De)=>De+174)],_=ye.slice();let V=0;for(let me=0;me<256;++me)ye.includes(me)||(ye.push(me),_.push(256+V),V+=1);const ue=_.map(me=>String.fromCharCode(me));return Object.fromEntries(ye.map((me,De)=>[me,ue[De]]))})(),Qe=(0,se.reverseDictionary)(ot);class ct extends $e{constructor(_){super(_),this.tokens_to_ids=Se(_.vocab),this.unk_token_id=this.tokens_to_ids.get(_.unk_token),this.unk_token=_.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[ue,me]of this.tokens_to_ids)this.vocab[me]=ue;const V=Array.isArray(_.merges[0]);this.merges=V?_.merges:_.merges.map(ue=>ue.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((ue,me)=>[JSON.stringify(ue),me])),this.end_of_word_suffix=_.end_of_word_suffix,this.continuing_subword_suffix=_.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(_){if(_.length===0)return[];const V=this.cache.get(_);if(V!==void 0)return V;const ue=Array.from(_);this.end_of_word_suffix&&(ue[ue.length-1]+=this.end_of_word_suffix);let me=[];if(ue.length>1){const De=new Q.PriorityQueue((Ft,Ot)=>Ft.score<Ot.score);let et={token:ue[0],bias:0,prev:null,next:null},St=et;for(let Ft=1;Ft<ue.length;++Ft){const Ot={bias:Ft/ue.length,token:ue[Ft],prev:St,next:null};St.next=Ot,this._add_node(De,St),St=Ot}for(;!De.isEmpty();){const Ft=De.pop();if(Ft.deleted||!Ft.next||Ft.next.deleted)continue;if(Ft.deleted=!0,Ft.next.deleted=!0,Ft.prev){const Tt={...Ft.prev};Ft.prev.deleted=!0,Ft.prev=Tt,Tt.prev?Tt.prev.next=Tt:et=Tt}const Ot={token:Ft.token+Ft.next.token,bias:Ft.bias,prev:Ft.prev,next:Ft.next.next};Ot.prev?(Ot.prev.next=Ot,this._add_node(De,Ot.prev)):et=Ot,Ot.next&&(Ot.next.prev=Ot,this._add_node(De,Ot))}for(let Ft=et;Ft!==null;Ft=Ft.next)me.push(Ft.token)}else me=ue;if(this.continuing_subword_suffix)for(let De=0;De<me.length-1;++De)me[De]+=this.continuing_subword_suffix;return this.cache.set(_,me),me}_add_node(_,V){const ue=this.bpe_ranks.get(JSON.stringify([V.token,V.next.token]));ue!==void 0&&(V.score=ue+V.bias,_.push(V))}encode(_){const V=[];for(const ue of _){if(this.ignore_merges&&this.tokens_to_ids.has(ue)){V.push(ue);continue}const me=this.bpe(ue);for(const De of me)if(this.tokens_to_ids.has(De))V.push(De);else if(this.byte_fallback){const et=Array.from(this.text_encoder.encode(De)).map(St=>`<0x${St.toString(16).toUpperCase().padStart(2,"0")}>`);et.every(St=>this.tokens_to_ids.has(St))?V.push(...et):V.push(this.unk_token)}else V.push(this.unk_token)}return V}}class Ce extends $e{constructor(_,V){super(_),this.tokens_to_ids=Se(V.target_lang?_.vocab[V.target_lang]:_.vocab),this.bos_token=V.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=V.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=V.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=V.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[ue,me]of this.tokens_to_ids)this.vocab[me]=ue}encode(_){return _}}class X extends $.Callable{constructor(_){super(),this.config=_}static fromConfig(_){if(_===null)return null;switch(_.type){case"BertNormalizer":return new xt(_);case"Precompiled":return new Lr(_);case"Sequence":return new yt(_);case"Replace":return new ve(_);case"NFC":return new Ae(_);case"NFKC":return new He(_);case"NFKD":return new pt(_);case"Strip":return new he(_);case"StripAccents":return new tt(_);case"Lowercase":return new gt(_);case"Prepend":return new Ue(_);default:throw new Error(`Unknown Normalizer type: ${_.type}`)}}normalize(_){throw Error("normalize should be implemented in subclass.")}_call(_){return this.normalize(_)}}class ve extends X{normalize(_){const V=pe(this.config.pattern);return V===null?_:_.replaceAll(V,this.config.content)}}class Ae extends X{normalize(_){return _=_.normalize("NFC"),_}}class He extends X{normalize(_){return _=_.normalize("NFKC"),_}}class pt extends X{normalize(_){return _=_.normalize("NFKD"),_}}class he extends X{normalize(_){return this.config.strip_left&&this.config.strip_right?_=_.trim():(this.config.strip_left&&(_=_.trimStart()),this.config.strip_right&&(_=_.trimEnd())),_}}class tt extends X{normalize(_){return _=le(_),_}}class gt extends X{normalize(_){return _=_.toLowerCase(),_}}class Ue extends X{normalize(_){return _=this.config.prepend+_,_}}class yt extends X{constructor(_){super(_),this.normalizers=_.normalizers.map(V=>X.fromConfig(V))}normalize(_){return this.normalizers.reduce((V,ue)=>ue.normalize(V),_)}}class xt extends X{_tokenize_chinese_chars(_){const V=[];for(let ue=0;ue<_.length;++ue){const me=_[ue],De=me.charCodeAt(0);U(De)?(V.push(" "),V.push(me),V.push(" ")):V.push(me)}return V.join("")}stripAccents(_){return _.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(_){switch(_){case"	":case`
`:case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(_)}}_clean_text(_){const V=[];for(const ue of _){const me=ue.charCodeAt(0);me===0||me===65533||this._is_control(ue)||(/^\s$/.test(ue)?V.push(" "):V.push(ue))}return V.join("")}normalize(_){return this.config.clean_text&&(_=this._clean_text(_)),this.config.handle_chinese_chars&&(_=this._tokenize_chinese_chars(_)),this.config.lowercase?(_=_.toLowerCase(),this.config.strip_accents!==!1&&(_=this.stripAccents(_))):this.config.strip_accents&&(_=this.stripAccents(_)),_}}class Ze extends $.Callable{static fromConfig(_){if(_===null)return null;switch(_.type){case"BertPreTokenizer":return new re(_);case"Sequence":return new Cr(_);case"Whitespace":return new Hr(_);case"WhitespaceSplit":return new wn(_);case"Metaspace":return new Ir(_);case"ByteLevel":return new Ne(_);case"Split":return new rt(_);case"Punctuation":return new st(_);case"Digits":return new Xe(_);case"Replace":return new ht(_);default:throw new Error(`Unknown PreTokenizer type: ${_.type}`)}}pre_tokenize_text(_,V){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(_,V){return(Array.isArray(_)?_.map(ue=>this.pre_tokenize_text(ue,V)):this.pre_tokenize_text(_,V)).flat()}_call(_,V){return this.pre_tokenize(_,V)}}class re extends Ze{constructor(_){super(),this.pattern=new RegExp(`[^\\s${I}]+|[${I}]`,"gu")}pre_tokenize_text(_,V){return _.trim().match(this.pattern)||[]}}class Ne extends Ze{constructor(_){super(),this.config=_,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=ot,this.text_encoder=new TextEncoder}pre_tokenize_text(_,V){return this.add_prefix_space&&!_.startsWith(" ")&&(_=" "+_),(this.use_regex?_.match(this.pattern)||[]:[_]).map(me=>Array.from(this.text_encoder.encode(me),De=>this.byte_encoder[De]).join(""))}}class rt extends Ze{constructor(_){super(),this.config=_,this.pattern=pe(this.config.pattern,this.config.invert)}pre_tokenize_text(_,V){return this.pattern===null?[]:this.config.invert?_.match(this.pattern)||[]:te(_,this.pattern)}}class st extends Ze{constructor(_){super(),this.config=_,this.pattern=new RegExp(`[^${I}]+|[${I}]+`,"gu")}pre_tokenize_text(_,V){return _.match(this.pattern)||[]}}class Xe extends Ze{constructor(_){super(),this.config=_;const V=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(V,"gu")}pre_tokenize_text(_,V){return _.match(this.pattern)||[]}}class Ge extends $.Callable{constructor(_){super(),this.config=_}static fromConfig(_){if(_===null)return null;switch(_.type){case"TemplateProcessing":return new Bt(_);case"ByteLevel":return new Ct(_);case"RobertaProcessing":return new bt(_);case"BertProcessing":return new mt(_);case"Sequence":return new E(_);default:throw new Error(`Unknown PostProcessor type: ${_.type}`)}}post_process(_,...V){throw Error("post_process should be implemented in subclass.")}_call(_,...V){return this.post_process(_,...V)}}class mt extends Ge{constructor(_){super(_),this.cls=_.cls[0],this.sep=_.sep[0]}post_process(_,V=null,{add_special_tokens:ue=!0}={}){ue&&(_=(0,se.mergeArrays)([this.cls],_,[this.sep]));let me=new Array(_.length).fill(0);if(V!==null){const De=ue&&this instanceof bt?[this.sep]:[],et=ue?[this.sep]:[];_=(0,se.mergeArrays)(_,De,V,et),me=(0,se.mergeArrays)(me,new Array(V.length+De.length+et.length).fill(1))}return{tokens:_,token_type_ids:me}}}class bt extends mt{}class Bt extends Ge{constructor(_){super(_),this.single=_.single,this.pair=_.pair}post_process(_,V=null,{add_special_tokens:ue=!0}={}){const me=V===null?this.single:this.pair;let De=[],et=[];for(const St of me)"SpecialToken"in St?ue&&(De.push(St.SpecialToken.id),et.push(St.SpecialToken.type_id)):"Sequence"in St&&(St.Sequence.id==="A"?(De=(0,se.mergeArrays)(De,_),et=(0,se.mergeArrays)(et,new Array(_.length).fill(St.Sequence.type_id))):St.Sequence.id==="B"&&(De=(0,se.mergeArrays)(De,V),et=(0,se.mergeArrays)(et,new Array(V.length).fill(St.Sequence.type_id))));return{tokens:De,token_type_ids:et}}}class Ct extends Ge{post_process(_,V=null){return V&&(_=(0,se.mergeArrays)(_,V)),{tokens:_}}}class E extends Ge{constructor(_){super(_),this.processors=_.processors.map(V=>Ge.fromConfig(V))}post_process(_,V=null,ue={}){let me;for(const De of this.processors)if(De instanceof Ct)_=De.post_process(_).tokens,V&&(V=De.post_process(V).tokens);else{const et=De.post_process(_,V,ue);_=et.tokens,me=et.token_type_ids}return{tokens:_,token_type_ids:me}}}class ne extends $.Callable{constructor(_){super(),this.config=_,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=_.trim_offsets}static fromConfig(_){if(_===null)return null;switch(_.type){case"WordPiece":return new Ye(_);case"Metaspace":return new Er(_);case"ByteLevel":return new $t(_);case"Replace":return new F(_);case"ByteFallback":return new oe(_);case"Fuse":return new Te(_);case"Strip":return new lt(_);case"Sequence":return new ft(_);case"CTC":return new ut(_);case"BPEDecoder":return new Wt(_);default:throw new Error(`Unknown Decoder type: ${_.type}`)}}_call(_){return this.decode(_)}decode(_){return this.decode_chain(_).join("")}decode_chain(_){throw Error("`decode_chain` should be implemented in subclass.")}}class F extends ne{decode_chain(_){const V=pe(this.config.pattern);return V===null?_:_.map(ue=>ue.replaceAll(V,this.config.content))}}class oe extends ne{constructor(_){super(_),this.text_decoder=new TextDecoder}decode_chain(_){const V=[];let ue=[];for(const me of _){let De=null;if(me.length===6&&me.startsWith("<0x")&&me.endsWith(">")){const et=parseInt(me.slice(3,5),16);isNaN(et)||(De=et)}if(De!==null)ue.push(De);else{if(ue.length>0){const et=this.text_decoder.decode(Uint8Array.from(ue));V.push(et),ue=[]}V.push(me)}}if(ue.length>0){const me=this.text_decoder.decode(Uint8Array.from(ue));V.push(me),ue=[]}return V}}class Te extends ne{decode_chain(_){return[_.join("")]}}class lt extends ne{constructor(_){super(_),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(_){return _.map(V=>{let ue=0;for(let De=0;De<this.start&&V[De]===this.content;++De){ue=De+1;continue}let me=V.length;for(let De=0;De<this.stop;++De){const et=V.length-De-1;if(V[et]===this.content){me=et;continue}else break}return V.slice(ue,me)})}}class Ye extends ne{constructor(_){super(_),this.cleanup=_.cleanup}decode_chain(_){return _.map((V,ue)=>(ue!==0&&(V.startsWith(this.config.prefix)?V=V.replace(this.config.prefix,""):V=" "+V),this.cleanup&&(V=j(V)),V))}}class $t extends ne{constructor(_){super(_),this.byte_decoder=Qe,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(_){const V=_.join(""),ue=new Uint8Array([...V].map(De=>this.byte_decoder[De]));return this.text_decoder.decode(ue)}decode_chain(_){const V=[];let ue=[];for(const me of _)this.added_tokens.find(De=>De.content===me)!==void 0?(ue.length>0&&(V.push(this.convert_tokens_to_string(ue)),ue=[]),V.push(me)):ue.push(me);return ue.length>0&&V.push(this.convert_tokens_to_string(ue)),V}}class ut extends ne{constructor(_){super(_),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(_){if(_.length===0)return"";const V=[_[0]];for(let De=1;De<_.length;++De)_[De]!==V.at(-1)&&V.push(_[De]);let me=V.filter(De=>De!==this.pad_token).join("");return this.cleanup&&(me=j(me).replaceAll(this.word_delimiter_token," ").trim()),me}decode_chain(_){return[this.convert_tokens_to_string(_)]}}class ft extends ne{constructor(_){super(_),this.decoders=_.decoders.map(V=>ne.fromConfig(V))}decode_chain(_){return this.decoders.reduce((V,ue)=>ue.decode_chain(V),_)}}class Wt extends ne{constructor(_){super(_),this.suffix=this.config.suffix}decode_chain(_){return _.map((V,ue)=>V.replaceAll(this.suffix,ue===_.length-1?"":" "))}}class Kt extends ne{decode_chain(_){let V="";for(let ue=1;ue<_.length;ue+=2)V+=_[ue];return[V]}}class Ir extends Ze{constructor(_){super(),this.addPrefixSpace=_.add_prefix_space,this.replacement=_.replacement,this.strRep=_.str_rep||this.replacement,this.prepend_scheme=_.prepend_scheme??"always"}pre_tokenize_text(_,{section_index:V=void 0}={}){let ue=_.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!ue.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&V===0)&&(ue=this.strRep+ue),[ue]}}class Er extends ne{constructor(_){super(_),this.addPrefixSpace=_.add_prefix_space,this.replacement=_.replacement}decode_chain(_){const V=[];for(let ue=0;ue<_.length;++ue){let me=_[ue].replaceAll(this.replacement," ");this.addPrefixSpace&&ue==0&&me.startsWith(" ")&&(me=me.substring(1)),V.push(me)}return V}}class Lr extends X{constructor(_){super(_),this.charsmap=_.precompiled_charsmap}normalize(_){return _=_.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),_=_.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),_.includes("～")?_=_.split("～").map(ue=>ue.normalize("NFKC")).join("～"):_=_.normalize("NFKC"),_}}class Cr extends Ze{constructor(_){super(),this.tokenizers=_.pretokenizers.map(V=>Ze.fromConfig(V))}pre_tokenize_text(_,V){return this.tokenizers.reduce((ue,me)=>me.pre_tokenize(ue,V),[_])}}class Hr extends Ze{constructor(_){super()}pre_tokenize_text(_,V){return _.match(/\w+|[^\w\s]+/g)||[]}}class wn extends Ze{constructor(_){super()}pre_tokenize_text(_,V){return N(_)}}class ht extends Ze{constructor(_){super(),this.config=_,this.pattern=pe(this.config.pattern),this.content=this.config.content}pre_tokenize_text(_,V){return this.pattern===null?[_]:[_.replaceAll(this.pattern,this.config.content)]}}const Z=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function ke(ye,_,V,ue){for(const me of Object.keys(ye)){const De=_-ye[me].length,et=V(me),St=new Array(De).fill(et);ye[me]=ue==="right"?(0,se.mergeArrays)(ye[me],St):(0,se.mergeArrays)(St,ye[me])}}function Le(ye,_){for(const V of Object.keys(ye))ye[V].length=_}class Oe extends $.Callable{return_token_type_ids=!1;padding_side="right";constructor(_,V){super(),this._tokenizer_config=V,this.normalizer=X.fromConfig(_.normalizer),this.pre_tokenizer=Ze.fromConfig(_.pre_tokenizer),this.model=$e.fromConfig(_.model,V),this.post_processor=Ge.fromConfig(_.post_processor),this.decoder=ne.fromConfig(_.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const ue of _.added_tokens){const me=new Me(ue);this.added_tokens.push(me),this.model.tokens_to_ids.set(me.content,me.id),this.model.vocab[me.id]=me.content,me.special&&(this.special_tokens.push(me.content),this.all_special_ids.push(me.id))}if(this.additional_special_tokens=V.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((ue,me)=>me.content.length-ue.content.length).map(ue=>`${ue.lstrip?"\\s*":""}(${(0,se.escapeRegExp)(ue.content)})${ue.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=V.model_max_length,this.remove_space=V.remove_space,this.clean_up_tokenization_spaces=V.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=V.do_lowercase_and_remove_accent??!1,V.padding_side&&(this.padding_side=V.padding_side),this.legacy=!1,this.chat_template=V.chat_template??null,Array.isArray(this.chat_template)){const ue=Object.create(null);for(const{name:me,template:De}of this.chat_template){if(typeof me!="string"||typeof De!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');ue[me]=De}this.chat_template=ue}this._compiled_template_cache=new Map}getToken(..._){for(const V of _){const ue=this._tokenizer_config[V];if(ue)if(typeof ue=="object"){if(ue.__type==="AddedToken")return ue.content;throw Error(`Unknown token: ${ue}`)}else return ue}return null}static async from_pretrained(_,{progress_callback:V=null,config:ue=null,cache_dir:me=null,local_files_only:De=!1,revision:et="main",legacy:St=null}={}){const Ft=await q(_,{progress_callback:V,config:ue,cache_dir:me,local_files_only:De,revision:et,legacy:St});return new this(...Ft)}_call(_,{text_pair:V=null,add_special_tokens:ue=!0,padding:me=!1,truncation:De=null,max_length:et=null,return_tensor:St=!0,return_token_type_ids:Ft=null}={}){const Ot=Array.isArray(_);let Tt;if(Ot){if(_.length===0)throw Error("text array must be non-empty");if(V!==null){if(Array.isArray(V)){if(_.length!==V.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");Tt=_.map((ur,vr)=>this._encode_plus(ur,{text_pair:V[vr],add_special_tokens:ue,return_token_type_ids:Ft}))}else Tt=_.map(ur=>this._encode_plus(ur,{add_special_tokens:ue,return_token_type_ids:Ft}))}else{if(_==null)throw Error("text may not be null or undefined");if(Array.isArray(V))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");Tt=[this._encode_plus(_,{text_pair:V,add_special_tokens:ue,return_token_type_ids:Ft})]}if(et===null?me==="max_length"?et=this.model_max_length:et=(0,Ie.max)(Tt.map(ur=>ur.input_ids.length))[0]:De||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),et=Math.min(et,this.model_max_length??1/0),me||De)for(let ur=0;ur<Tt.length;++ur)Tt[ur].input_ids.length!==et&&(Tt[ur].input_ids.length>et?De&&Le(Tt[ur],et):me&&ke(Tt[ur],et,vr=>vr==="input_ids"?this.pad_token_id:0,this.padding_side));const hr={};if(St){if(!(me&&De)&&Tt.some(vr=>{for(const Kr of Object.keys(vr))if(vr[Kr].length!==Tt[0][Kr]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const ur=[Tt.length,Tt[0].input_ids.length];for(const vr of Object.keys(Tt[0]))hr[vr]=new Pe.Tensor("int64",BigInt64Array.from(Tt.flatMap(Kr=>Kr[vr]).map(BigInt)),ur)}else{for(const ur of Object.keys(Tt[0]))hr[ur]=Tt.map(vr=>vr[ur]);if(!Ot)for(const ur of Object.keys(hr))hr[ur]=hr[ur][0]}return hr}_encode_text(_){return _===null?null:(this.added_tokens_regex?_.split(this.added_tokens_regex).filter(me=>me):[_]).map((me,De)=>{if(this.added_tokens.find(St=>St.content===me)!==void 0)return me;{if(this.remove_space===!0&&(me=me.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(me=de(me)),this.normalizer!==null&&(me=this.normalizer(me)),me.length===0)return[];const St=this.pre_tokenizer!==null?this.pre_tokenizer(me,{section_index:De}):[me];return this.model(St)}}).flat()}_encode_plus(_,{text_pair:V=null,add_special_tokens:ue=!0,return_token_type_ids:me=null}={}){const{tokens:De,token_type_ids:et}=this._tokenize_helper(_,{pair:V,add_special_tokens:ue}),St=this.model.convert_tokens_to_ids(De),Ft={input_ids:St,attention_mask:new Array(St.length).fill(1)};return(me??this.return_token_type_ids)&&et&&(Ft.token_type_ids=et),Ft}_tokenize_helper(_,{pair:V=null,add_special_tokens:ue=!1}={}){const me=this._encode_text(_),De=this._encode_text(V);return this.post_processor?this.post_processor(me,De,{add_special_tokens:ue}):{tokens:(0,se.mergeArrays)(me??[],De??[])}}tokenize(_,{pair:V=null,add_special_tokens:ue=!1}={}){return this._tokenize_helper(_,{pair:V,add_special_tokens:ue}).tokens}encode(_,{text_pair:V=null,add_special_tokens:ue=!0,return_token_type_ids:me=null}={}){return this._encode_plus(_,{text_pair:V,add_special_tokens:ue,return_token_type_ids:me}).input_ids}batch_decode(_,V={}){return _ instanceof Pe.Tensor&&(_=_.tolist()),_.map(ue=>this.decode(ue,V))}decode(_,V={}){if(_ instanceof Pe.Tensor&&(_=Ee(_)),!Array.isArray(_)||_.length===0||!(0,se.isIntegralNumber)(_[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(_,V)}decode_single(_,{skip_special_tokens:V=!1,clean_up_tokenization_spaces:ue=null}){let me=this.model.convert_ids_to_tokens(_);V&&(me=me.filter(et=>!this.special_tokens.includes(et)));let De=this.decoder?this.decoder(me):me.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(De=De.replaceAll(this.decoder.end_of_word_suffix," "),V&&(De=De.trim())),(ue??this.clean_up_tokenization_spaces)&&(De=j(De)),De}get_chat_template({chat_template:_=null,tools:V=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const ue=this.chat_template;if(_!==null&&Object.hasOwn(ue,_))_=ue[_];else if(_===null)if(V!==null&&"tool_use"in ue)_=ue.tool_use;else if("default"in ue)_=ue.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(ue).sort()}.`)}else if(_===null)if(this.chat_template)_=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return _}apply_chat_template(_,{tools:V=null,documents:ue=null,chat_template:me=null,add_generation_prompt:De=!1,tokenize:et=!0,padding:St=!1,truncation:Ft=!1,max_length:Ot=null,return_tensor:Tt=!0,return_dict:hr=!1,tokenizer_kwargs:ur={},...vr}={}){if(me=this.get_chat_template({chat_template:me,tools:V}),typeof me!="string")throw Error(`chat_template must be a string, but got ${typeof me}`);let Kr=this._compiled_template_cache.get(me);Kr===void 0&&(Kr=new R.Template(me),this._compiled_template_cache.set(me,Kr));const bn=Object.create(null);for(const $r of Z){const xn=this.getToken($r);xn&&(bn[$r]=xn)}const dr=Kr.render({messages:_,add_generation_prompt:De,tools:V,documents:ue,...bn,...vr});if(et){const $r=this._call(dr,{add_special_tokens:!1,padding:St,truncation:Ft,max_length:Ot,return_tensor:Tt,...ur});return hr?$r:$r.input_ids}return dr}}class je extends Oe{return_token_type_ids=!0}class at extends Oe{return_token_type_ids=!0}class vt extends Oe{return_token_type_ids=!0}class _t extends Oe{return_token_type_ids=!0}class kt extends Oe{return_token_type_ids=!0}class M extends Oe{return_token_type_ids=!0}class d extends Oe{return_token_type_ids=!0}class f extends Oe{return_token_type_ids=!0}class O extends Oe{return_token_type_ids=!0}class D extends Oe{}class G extends Oe{}class fe extends Oe{return_token_type_ids=!0;constructor(_,V){super(_,V),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Mt extends Oe{return_token_type_ids=!0}class Nt extends Oe{}class qt extends Oe{}class nr extends Oe{}class jt extends Oe{constructor(_,V){super(_,V),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(ue=>this.languageRegex.test(ue)),this.lang_to_token=ue=>ue}_build_translation_inputs(_,V,ue){return $n(this,_,V,ue)}}class Br extends jt{}class kr extends Oe{}class Dn extends Oe{}const Rr="▁";class hi extends Oe{padding_side="left";constructor(_,V){super(_,V),this.legacy=V.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Ir({replacement:Rr,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(_){if(_===null)return null;if(this.legacy||_.length===0)return super._encode_text(_);let V=super._encode_text(Rr+_.replaceAll(Rr," "));return V.length>1&&V[0]===Rr&&this.special_tokens.includes(V[1])&&(V=V.slice(1)),V}}class $i extends Oe{}class Kn extends Oe{}class Si extends Oe{}class ki extends Oe{}class Pi extends Oe{}class Ai extends Oe{}class Ii extends Oe{}class ei extends Oe{}class Xn extends Oe{}function $n(ye,_,V,ue){if(!("language_codes"in ye)||!Array.isArray(ye.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in ye)||!(ye.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in ye)||typeof ye.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const me=ue.src_lang,De=ue.tgt_lang;if(!ye.language_codes.includes(De))throw new Error(`Target language code "${De}" is not valid. Must be one of: {${ye.language_codes.join(", ")}}`);if(me!==void 0){if(!ye.language_codes.includes(me))throw new Error(`Source language code "${me}" is not valid. Must be one of: {${ye.language_codes.join(", ")}}`);for(const et of ye.post_processor.config.single)if("SpecialToken"in et&&ye.languageRegex.test(et.SpecialToken.id)){et.SpecialToken.id=ye.lang_to_token(me);break}}return ue.forced_bos_token_id=ye.model.convert_tokens_to_ids([ye.lang_to_token(De)])[0],ye._call(_,V)}class Ln extends Oe{constructor(_,V){super(_,V),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(ue=>this.languageRegex.test(ue)),this.lang_to_token=ue=>ue}_build_translation_inputs(_,V,ue){return $n(this,_,V,ue)}}class fi extends Oe{constructor(_,V){super(_,V),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(ue=>this.languageRegex.test(ue)).map(ue=>ue.slice(2,-2)),this.lang_to_token=ue=>`__${ue}__`}_build_translation_inputs(_,V,ue){return $n(this,_,V,ue)}}class On extends Oe{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(_,{return_timestamps:V=!1,return_language:ue=!1,time_precision:me=null,force_full_sequences:De=!0}={}){if(me===null)throw Error("Must specify time_precision");let et=null;const St=V==="word";function Ft(){return{language:et,timestamp:[null,null],text:""}}const Ot=[];let Tt=Ft(),hr=0;const ur=this.timestamp_begin;let vr=[],Kr=[],bn=!1,dr=null;const $r=new Set(this.all_special_ids);for(const Be of _){const Zr=Be.tokens,an=St?Be.token_timestamps:null;let kn=null,Rn=ur;if("stride"in Be){const[Xr,fr,Fr]=Be.stride;if(hr-=fr,dr=Xr-Fr,fr&&(Rn=fr/me+ur),Fr)for(let At=Zr.length-1;At>=0;--At){const gr=Number(Zr[At]);if(gr>=ur){if(kn!==null&&(gr-ur)*me<dr)break;kn=gr}}}let Yt=[],cn=[];for(let Xr=0;Xr<Zr.length;++Xr){const fr=Number(Zr[Xr]);if($r.has(fr)){const Fr=this.decode([fr]),At=W.WHISPER_LANGUAGE_MAPPING.get(Fr.slice(2,-2));if(At!==void 0){if(et!==null&&At!==et&&!V){vr.push(Yt);const gr=this.findLongestCommonSequence(vr)[0],ni=this.decode(gr);Tt.text=ni,Ot.push(Tt),vr=[],Yt=[],Tt=Ft()}et=Tt.language=At}}else if(fr>=ur){const Fr=(fr-ur)*me+hr,At=(0,Ie.round)(Fr,2);if(kn!==null&&fr>=kn)bn=!0;else if(bn||vr.length>0&&fr<Rn)bn=!1;else if(Tt.timestamp[0]===null)Tt.timestamp[0]=At;else if(At!==Tt.timestamp[0]){Tt.timestamp[1]=At,vr.push(Yt),St&&Kr.push(cn);const[gr,ni]=this.findLongestCommonSequence(vr,Kr),Qn=this.decode(gr);Tt.text=Qn,St&&(Tt.words=this.collateWordTimestamps(gr,ni,et)),Ot.push(Tt),vr=[],Yt=[],Kr=[],cn=[],Tt=Ft()}}else if(Yt.push(fr),St){let Fr=(0,Ie.round)(an[Xr]+hr,2),At;if(Xr+1<an.length){At=(0,Ie.round)(an[Xr+1]+hr,2);const gr=this.decode([fr]);z.test(gr)&&(At=(0,Ie.round)(Math.min(Fr+me,At),2))}else At=null;cn.push([Fr,At])}}if("stride"in Be){const[Xr,fr,Fr]=Be.stride;hr+=Xr-Fr}Yt.length>0?(vr.push(Yt),St&&Kr.push(cn)):vr.every(Xr=>Xr.length===0)&&(Tt=Ft(),vr=[],Yt=[],Kr=[],cn=[])}if(vr.length>0){if(De&&V)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Be,Zr]=this.findLongestCommonSequence(vr,Kr),an=this.decode(Be);Tt.text=an,St&&(Tt.words=this.collateWordTimestamps(Be,Zr,et)),Ot.push(Tt)}let xn=Object.create(null);const Sn=Ot.map(Be=>Be.text).join("");if(V||ue){for(let Be=0;Be<Ot.length;++Be){const Zr=Ot[Be];V||delete Zr.timestamp,ue||delete Zr.language}if(St){const Be=[];for(const Zr of Ot)for(const an of Zr.words)Be.push(an);xn={chunks:Be}}else xn={chunks:Ot}}return[Sn,xn]}findLongestCommonSequence(_,V=null){let ue=_[0],me=ue.length,De=[];const et=Array.isArray(V)&&V.length>0;let St=et?[]:null,Ft=et?V[0]:null;for(let Ot=1;Ot<_.length;++Ot){const Tt=_[Ot];let hr=0,ur=[me,me,0,0];const vr=Tt.length;for(let Be=1;Be<me+vr;++Be){const Zr=Math.max(0,me-Be),an=Math.min(me,me+vr-Be),kn=ue.slice(Zr,an),Rn=Math.max(0,Be-me),Yt=Math.min(vr,Be),cn=Tt.slice(Rn,Yt);if(kn.length!==cn.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Xr;et?Xr=kn.filter((At,gr)=>At===cn[gr]&&Ft[Zr+gr]<=V[Ot][Rn+gr]).length:Xr=kn.filter((At,gr)=>At===cn[gr]).length;const fr=Be/1e4,Fr=Xr/Be+fr;Xr>1&&Fr>hr&&(hr=Fr,ur=[Zr,an,Rn,Yt])}const[Kr,bn,dr,$r]=ur,xn=Math.floor((bn+Kr)/2),Sn=Math.floor(($r+dr)/2);De.push(...ue.slice(0,xn)),ue=Tt.slice(Sn),me=ue.length,et&&(St.push(...Ft.slice(0,xn)),Ft=V[Ot].slice(Sn))}return De.push(...ue),et?(St.push(...Ft),[De,St]):[De,[]]}collateWordTimestamps(_,V,ue){const[me,De,et]=this.combineTokensIntoWords(_,ue),St=[];for(let Ft=0;Ft<me.length;++Ft){const Ot=et[Ft];St.push({text:me[Ft],timestamp:[V[Ot.at(0)][0],V[Ot.at(-1)][1]]})}return St}combineTokensIntoWords(_,V,ue=`"'“¡¿([{-`,me=`"'.。,，!！?？:：”)]}、`){V=V??"english";let De,et,St;return["chinese","japanese","thai","lao","myanmar"].includes(V)?[De,et,St]=this.splitTokensOnUnicode(_):[De,et,St]=this.splitTokensOnSpaces(_),this.mergePunctuations(De,et,St,ue,me)}decode(_,V){let ue;return V?.decode_with_timestamps?(_ instanceof Pe.Tensor&&(_=Ee(_)),ue=this.decodeWithTimestamps(_,V)):ue=super.decode(_,V),ue}decodeWithTimestamps(_,V){const ue=V?.time_precision??.02,me=Array.from(this.all_special_ids).at(-1)+1;let De=[[]];for(let et of _)if(et=Number(et),et>=me){const St=((et-me)*ue).toFixed(2);De.push(`<|${St}|>`),De.push([])}else De[De.length-1].push(et);return De=De.map(et=>typeof et=="string"?et:super.decode(et,V)),De.join("")}splitTokensOnUnicode(_){const V=this.decode(_,{decode_with_timestamps:!0}),ue="�",me=[],De=[],et=[];let St=[],Ft=[],Ot=0;for(let Tt=0;Tt<_.length;++Tt){const hr=_[Tt];St.push(hr),Ft.push(Tt);const ur=this.decode(St,{decode_with_timestamps:!0});(!ur.includes(ue)||V[Ot+ur.indexOf(ue)]===ue)&&(me.push(ur),De.push(St),et.push(Ft),St=[],Ft=[],Ot+=ur.length)}return[me,De,et]}splitTokensOnSpaces(_){const[V,ue,me]=this.splitTokensOnUnicode(_),De=[],et=[],St=[],Ft=new RegExp(`^[${I}]$`,"gu");for(let Ot=0;Ot<V.length;++Ot){const Tt=V[Ot],hr=ue[Ot],ur=me[Ot],vr=hr[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Kr=Tt.startsWith(" "),bn=Tt.trim(),dr=Ft.test(bn);if(vr||Kr||dr||De.length===0)De.push(Tt),et.push(hr),St.push(ur);else{const $r=De.length-1;De[$r]+=Tt,et[$r].push(...hr),St[$r].push(...ur)}}return[De,et,St]}mergePunctuations(_,V,ue,me,De){const et=structuredClone(_),St=structuredClone(V),Ft=structuredClone(ue);let Ot=et.length-2,Tt=et.length-1;for(;Ot>=0;)et[Ot].startsWith(" ")&&me.includes(et[Ot].trim())?(et[Tt]=et[Ot]+et[Tt],St[Tt]=(0,se.mergeArrays)(St[Ot],St[Tt]),Ft[Tt]=(0,se.mergeArrays)(Ft[Ot],Ft[Tt]),et[Ot]="",St[Ot]=[],Ft[Ot]=[]):Tt=Ot,--Ot;for(Ot=0,Tt=1;Tt<et.length;)!et[Ot].endsWith(" ")&&De.includes(et[Tt])?(et[Ot]+=et[Tt],St[Ot]=(0,se.mergeArrays)(St[Ot],St[Tt]),Ft[Ot]=(0,se.mergeArrays)(Ft[Ot],Ft[Tt]),et[Tt]="",St[Tt]=[],Ft[Tt]=[]):Ot=Tt,++Tt;return[et.filter(hr=>hr),St.filter(hr=>hr.length>0),Ft.filter(hr=>hr.length>0)]}}class mi extends Oe{}class _i extends Oe{}class gi extends Oe{}class er extends Oe{constructor(_,V){super(_,V),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(ue=>this.languageRegex.test(ue)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(_){if(_===null)return null;const[V,...ue]=_.trim().split(this.languageRegex);if(ue.length===0)return super._encode_text(V);if(ue.length===2){const[me,De]=ue;return this.supported_language_codes.includes(me)||console.warn(`Unsupported language code "${me}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,se.mergeArrays)([me],super._encode_text(De))}}}class ti extends Oe{}class Fi extends Oe{}class Oi extends Oe{}class wi extends Oe{}class Bi extends Oe{}class zi extends Oe{constructor(_,V){super(_,V),this.decoder=new Kt({})}}class ri extends Oe{}class ts{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:Nt,DistilBertTokenizer:D,CamembertTokenizer:G,DebertaTokenizer:kt,DebertaV2Tokenizer:M,BertTokenizer:je,HerbertTokenizer:d,ConvBertTokenizer:f,RoFormerTokenizer:O,XLMTokenizer:fe,ElectraTokenizer:Mt,MobileBertTokenizer:vt,SqueezeBertTokenizer:_t,AlbertTokenizer:at,GPT2Tokenizer:qt,BartTokenizer:nr,MBartTokenizer:jt,MBart50Tokenizer:Br,RobertaTokenizer:kr,WhisperTokenizer:On,CodeGenTokenizer:mi,CLIPTokenizer:_i,SiglipTokenizer:gi,MarianTokenizer:er,BloomTokenizer:Dn,NllbTokenizer:Ln,M2M100Tokenizer:fi,LlamaTokenizer:hi,CodeLlamaTokenizer:$i,XLMRobertaTokenizer:Kn,MPNetTokenizer:Si,FalconTokenizer:ki,GPTNeoXTokenizer:Pi,EsmTokenizer:Ai,Wav2Vec2CTCTokenizer:ti,BlenderbotTokenizer:Fi,BlenderbotSmallTokenizer:Oi,SpeechT5Tokenizer:wi,NougatTokenizer:Bi,VitsTokenizer:zi,Qwen2Tokenizer:Ii,GemmaTokenizer:ei,Grok1Tokenizer:Xn,CohereTokenizer:ri,PreTrainedTokenizer:Oe};static async from_pretrained(_,{progress_callback:V=null,config:ue=null,cache_dir:me=null,local_files_only:De=!1,revision:et="main",legacy:St=null}={}){const[Ft,Ot]=await q(_,{progress_callback:V,config:ue,cache_dir:me,local_files_only:De,revision:et,legacy:St}),Tt=Ot.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let hr=this.TOKENIZER_CLASS_MAPPING[Tt];return hr||(console.warn(`Unknown tokenizer class "${Tt}", attempting to construct from base class.`),hr=Oe),new hr(Ft,Ot)}}},"./src/utils/audio.js":(we,Y,P)=>{P.r(Y),P.d(Y,{hamming:()=>W,hanning:()=>R,mel_filter_bank:()=>le,read_audio:()=>Pe,spectrogram:()=>I,window_function:()=>z});var $=P("./src/utils/hub.js"),se=P("./src/utils/maths.js"),xe=P("./src/utils/core.js"),Ie=P("./src/utils/tensor.js");async function Pe(T,_e){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const Me=await(await(0,$.getFile)(T)).arrayBuffer(),$e=new AudioContext({sampleRate:_e});typeof _e>"u"&&console.warn(`No sampling rate provided, using default of ${$e.sampleRate}Hz.`);const K=await $e.decodeAudioData(Me);let Fe;if(K.numberOfChannels===2){const ot=Math.sqrt(2),Qe=K.getChannelData(0),ct=K.getChannelData(1);Fe=new Float32Array(Qe.length);for(let Ce=0;Ce<K.length;++Ce)Fe[Ce]=ot*(Qe[Ce]+ct[Ce])/2}else Fe=K.getChannelData(0);return Fe}function Q(T,_e){if(T<1)return new Float64Array;if(T===1)return new Float64Array([1]);const Me=1-_e,$e=2*Math.PI/(T-1),K=new Float64Array(T);for(let Fe=0;Fe<T;++Fe)K[Fe]=_e-Me*Math.cos(Fe*$e);return K}function R(T){return Q(T,.5)}function W(T){return Q(T,.54)}const q={htk:T=>2595*Math.log10(1+T/700),kaldi:T=>1127*Math.log(1+T/700),slaney:(T,_e=1e3,Me=15,$e=27/Math.log(6.4))=>T>=_e?Me+Math.log(T/_e)*$e:3*T/200};function te(T,_e="htk"){const Me=q[_e];if(!Me)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof T=="number"?Me(T):T.map($e=>Me($e))}const pe={htk:T=>700*(10**(T/2595)-1),kaldi:T=>700*(Math.exp(T/1127)-1),slaney:(T,_e=1e3,Me=15,$e=Math.log(6.4)/27)=>T>=Me?_e*Math.exp($e*(T-Me)):200*T/3};function Se(T,_e="htk"){const Me=pe[_e];if(!Me)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof T=="number"?Me(T):T.map($e=>Me($e))}function Ee(T,_e){const Me=Float64Array.from({length:_e.length-1},(ot,Qe)=>_e[Qe+1]-_e[Qe]),$e=Array.from({length:T.length},()=>new Array(_e.length));for(let ot=0;ot<T.length;++ot){const Qe=$e[ot];for(let ct=0;ct<_e.length;++ct)Qe[ct]=_e[ct]-T[ot]}const K=_e.length-2,Fe=Array.from({length:K},()=>new Array(T.length));for(let ot=0;ot<T.length;++ot){const Qe=$e[ot];for(let ct=0;ct<K;++ct){const Ce=-Qe[ct]/Me[ct],X=Qe[ct+2]/Me[ct+1];Fe[ct][ot]=Math.max(0,Math.min(Ce,X))}}return Fe}function j(T,_e,Me){const $e=(_e-T)/(Me-1);return Float64Array.from({length:Me},(K,Fe)=>T+$e*Fe)}function le(T,_e,Me,$e,K,Fe=null,ot="htk",Qe=!1){if(Fe!==null&&Fe!=="slaney")throw new Error('norm must be one of null or "slaney"');const ct=te(Me,ot),Ce=te($e,ot),X=j(ct,Ce,_e+2);let ve=Se(X,ot),Ae;if(Qe){const pt=K/(T*2);Ae=te(Float64Array.from({length:T},(he,tt)=>tt*pt),ot),ve=X}else Ae=j(0,Math.floor(K/2),T);const He=Ee(Ae,ve);if(Fe!==null&&Fe==="slaney")for(let pt=0;pt<_e;++pt){const he=He[pt],tt=2/(ve[pt+2]-ve[pt]);for(let gt=0;gt<T;++gt)he[gt]*=tt}return He}function de(T,_e,Me){const $e=new T.constructor(T.length+_e+Me),K=T.length-1;for(let Fe=0;Fe<T.length;++Fe)$e[_e+Fe]=T[Fe];for(let Fe=1;Fe<=_e;++Fe)$e[_e-Fe]=T[(0,xe.calculateReflectOffset)(Fe,K)];for(let Fe=1;Fe<=Me;++Fe)$e[K+_e+Fe]=T[(0,xe.calculateReflectOffset)(K-Fe,K)];return $e}function U(T,_e,Me,$e,K){if(Me<=0)throw new Error("reference must be greater than zero");if($e<=0)throw new Error("min_value must be greater than zero");Me=Math.max($e,Me);const Fe=Math.log10(Me);for(let ot=0;ot<T.length;++ot)T[ot]=_e*Math.log10(Math.max($e,T[ot])-Fe);if(K!==null){if(K<=0)throw new Error("db_range must be greater than zero");const ot=(0,se.max)(T)[0]-K;for(let Qe=0;Qe<T.length;++Qe)T[Qe]=Math.max(T[Qe],ot)}return T}function H(T,_e=1,Me=1e-5,$e=null){return U(T,20,_e,Me,$e)}function N(T,_e=1,Me=1e-10,$e=null){return U(T,10,_e,Me,$e)}async function I(T,_e,Me,$e,{fft_length:K=null,power:Fe=1,center:ot=!0,pad_mode:Qe="reflect",onesided:ct=!0,preemphasis:Ce=null,mel_filters:X=null,mel_floor:ve=1e-10,log_mel:Ae=null,reference:He=1,min_value:pt=1e-10,db_range:he=null,remove_dc_offset:tt=null,min_num_frames:gt=null,max_num_frames:Ue=null,do_pad:yt=!0,transpose:xt=!1}={}){const Ze=_e.length;if(K===null&&(K=Me),Me>K)throw Error(`frame_length (${Me}) may not be larger than fft_length (${K})`);if(Ze!==Me)throw new Error(`Length of the window (${Ze}) must equal frame_length (${Me})`);if($e<=0)throw new Error("hop_length must be greater than zero");if(Fe===null&&X!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(ot){if(Qe!=="reflect")throw new Error(`pad_mode="${Qe}" not implemented yet.`);const ne=Math.floor((K-1)/2)+1;T=de(T,ne,ne)}let re=Math.floor(1+Math.floor((T.length-Me)/$e));gt!==null&&re<gt&&(re=gt);const Ne=ct?Math.floor(K/2)+1:K;let rt=re,st=re;Ue!==null&&(Ue>re?yt&&(st=Ue):st=rt=Ue);const Xe=new se.FFT(K),Ge=new Float64Array(K),mt=new Float64Array(Xe.outputBufferSize),bt=new Float32Array(Ne*st);for(let ne=0;ne<rt;++ne){const F=ne*$e,oe=Math.min(T.length-F,Me);oe!==Me&&Ge.fill(0,0,Me);for(let Te=0;Te<oe;++Te)Ge[Te]=T[F+Te];if(tt){let Te=0;for(let Ye=0;Ye<oe;++Ye)Te+=Ge[Ye];const lt=Te/oe;for(let Ye=0;Ye<oe;++Ye)Ge[Ye]-=lt}if(Ce!==null){for(let Te=oe-1;Te>=1;--Te)Ge[Te]-=Ce*Ge[Te-1];Ge[0]*=1-Ce}for(let Te=0;Te<_e.length;++Te)Ge[Te]*=_e[Te];Xe.realTransform(mt,Ge);for(let Te=0;Te<Ne;++Te){const lt=Te<<1;bt[Te*st+ne]=mt[lt]**2+mt[lt+1]**2}}if(Fe!==null&&Fe!==2){const ne=2/Fe;for(let F=0;F<bt.length;++F)bt[F]**=ne}const Bt=X.length;let Ct=await(0,Ie.matmul)(new Ie.Tensor("float32",X.flat(),[Bt,Ne]),new Ie.Tensor("float32",bt,[Ne,st]));xt&&(Ct=Ct.transpose(1,0));const E=Ct.data;for(let ne=0;ne<E.length;++ne)E[ne]=Math.max(ve,E[ne]);if(Fe!==null&&Ae!==null){const ne=Math.min(E.length,rt*Bt);switch(Ae){case"log":for(let F=0;F<ne;++F)E[F]=Math.log(E[F]);break;case"log10":for(let F=0;F<ne;++F)E[F]=Math.log10(E[F]);break;case"dB":if(Fe===1)H(E,He,pt,he);else if(Fe===2)N(E,He,pt,he);else throw new Error(`Cannot use log_mel option '${Ae}' with power ${Fe}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${Ae}'`)}}return Ct}function z(T,_e,{periodic:Me=!0,frame_length:$e=null,center:K=!0}={}){const Fe=Me?T+1:T;let ot;switch(_e){case"boxcar":ot=new Float64Array(Fe).fill(1);break;case"hann":case"hann_window":ot=R(Fe);break;case"hamming":ot=W(Fe);break;case"povey":ot=R(Fe).map(Qe=>Math.pow(Qe,.85));break;default:throw new Error(`Unknown window type ${_e}.`)}if(Me&&(ot=ot.subarray(0,T)),$e===null)return ot;if(T>$e)throw new Error(`Length of the window (${T}) may not be larger than frame_length (${$e})`);return ot}},"./src/utils/constants.js":(we,Y,P)=>{P.r(Y),P.d(Y,{GITHUB_ISSUE_URL:()=>$});const $="https://github.com/huggingface/transformers.js/issues/new/choose"},"./src/utils/core.js":(we,Y,P)=>{P.r(Y),P.d(Y,{calculateDimensions:()=>Q,calculateReflectOffset:()=>te,dispatchCallback:()=>$,escapeRegExp:()=>xe,isIntegralNumber:()=>Pe,isTypedArray:()=>Ie,len:()=>Se,mergeArrays:()=>W,pick:()=>pe,pop:()=>R,product:()=>q,reverseDictionary:()=>se});function $(Ee,j){Ee&&Ee(j)}function se(Ee){return Object.fromEntries(Object.entries(Ee).map(([j,le])=>[le,j]))}function xe(Ee){return Ee.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function Ie(Ee){return Ee?.prototype?.__proto__?.constructor?.name==="TypedArray"}function Pe(Ee){return Number.isInteger(Ee)||typeof Ee=="bigint"}function Q(Ee){const j=[];let le=Ee;for(;Array.isArray(le);)j.push(le.length),le=le[0];return j}function R(Ee,j,le=void 0){const de=Ee[j];if(de!==void 0)return delete Ee[j],de;if(le===void 0)throw Error(`Key ${j} does not exist in object.`);return le}function W(...Ee){return Array.prototype.concat.apply([],Ee)}function q(...Ee){return Ee.reduce((j,le)=>j.flatMap(de=>le.map(U=>[de,U])))}function te(Ee,j){return Math.abs((Ee+j)%(2*j)-j)}function pe(Ee,j){return Object.assign({},...j.map(le=>{if(Ee[le]!==void 0)return{[le]:Ee[le]}}))}function Se(Ee){let j=0;for(const le of Ee)++j;return j}},"./src/utils/data-structures.js":(we,Y,P)=>{P.r(Y),P.d(Y,{CharTrie:()=>se,PriorityQueue:()=>$,TokenLattice:()=>Ie});class ${constructor(R=(q,te)=>q>te,W=1/0){this._heap=[],this._comparator=R,this._maxSize=W}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...R){return this.extend(R)}extend(R){for(const W of R)if(this.size<this._maxSize)this._heap.push(W),this._siftUp();else{const q=this._smallest();this._comparator(W,this._heap[q])&&(this._heap[q]=W,this._siftUpFrom(q))}return this.size}pop(){const R=this.peek(),W=this.size-1;return W>0&&this._swap(0,W),this._heap.pop(),this._siftDown(),R}replace(R){const W=this.peek();return this._heap[0]=R,this._siftDown(),W}_parent(R){return(R+1>>>1)-1}_left(R){return(R<<1)+1}_right(R){return R+1<<1}_greater(R,W){return this._comparator(this._heap[R],this._heap[W])}_swap(R,W){const q=this._heap[R];this._heap[R]=this._heap[W],this._heap[W]=q}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(R){for(;R>0&&this._greater(R,this._parent(R));)this._swap(R,this._parent(R)),R=this._parent(R)}_siftDown(){let R=0;for(;this._left(R)<this.size&&this._greater(this._left(R),R)||this._right(R)<this.size&&this._greater(this._right(R),R);){const W=this._right(R)<this.size&&this._greater(this._right(R),this._left(R))?this._right(R):this._left(R);this._swap(R,W),R=W}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class se{constructor(){this.root=xe.default()}extend(R){for(const W of R)this.push(W)}push(R){let W=this.root;for(const q of R){let te=W.children.get(q);te===void 0&&(te=xe.default(),W.children.set(q,te)),W=te}W.isLeaf=!0}*commonPrefixSearch(R){let W=this.root;if(W===void 0)return;let q="";for(const te of R){if(q+=te,W=W.children.get(te),W===void 0)return;W.isLeaf&&(yield q)}}}class xe{constructor(R,W){this.isLeaf=R,this.children=W}static default(){return new xe(!1,new Map)}}class Ie{constructor(R,W,q){this.chars=Array.from(R),this.len=this.chars.length,this.bosTokenId=W,this.eosTokenId=q,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const te=new Pe(this.bosTokenId,0,0,0,0),pe=new Pe(this.eosTokenId,1,this.len,0,0);this.nodes.push(te.clone()),this.nodes.push(pe.clone()),this.beginNodes[this.len].push(pe),this.endNodes[0].push(te)}insert(R,W,q,te){const pe=this.nodes.length,Se=new Pe(te,pe,R,W,q);this.beginNodes[R].push(Se),this.endNodes[R+W].push(Se),this.nodes.push(Se)}viterbi(){const R=this.len;let W=0;for(;W<=R;){if(this.beginNodes[W].length==0)return[];for(let Ee of this.beginNodes[W]){Ee.prev=null;let j=0,le=null;for(let de of this.endNodes[W]){const U=de.backtraceScore+Ee.score;(le===null||U>j)&&(le=de.clone(),j=U)}if(le!==null)Ee.prev=le,Ee.backtraceScore=j;else return[]}++W}const q=[],pe=this.beginNodes[R][0].prev;if(pe===null)return[];let Se=pe.clone();for(;Se.prev!==null;)q.push(Se.clone()),Se=Se.clone().prev.clone();return q.reverse(),q}piece(R){return this.chars.slice(R.pos,R.pos+R.length).join("")}tokens(){return this.viterbi().map(W=>this.piece(W))}tokenIds(){return this.viterbi().map(W=>W.tokenId)}}class Pe{constructor(R,W,q,te,pe){this.tokenId=R,this.nodeId=W,this.pos=q,this.length=te,this.score=pe,this.prev=null,this.backtraceScore=0}clone(){const R=new Pe(this.tokenId,this.nodeId,this.pos,this.length,this.score);return R.prev=this.prev,R.backtraceScore=this.backtraceScore,R}}},"./src/utils/devices.js":(we,Y,P)=>{P.r(Y),P.d(Y,{DEVICE_TYPES:()=>$});const $=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(we,Y,P)=>{P.r(Y),P.d(Y,{DATA_TYPES:()=>Ie,DEFAULT_DEVICE_DTYPE_MAPPING:()=>Pe,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>Q,isWebGpuFp16Supported:()=>xe});var $=P("./src/env.js"),se=P("./src/utils/devices.js");const xe=function(){let R;return async function(){if(R===void 0)if(!$.apis.IS_WEBGPU_AVAILABLE)R=!1;else try{R=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{R=!1}return R}}(),Ie=Object.freeze({fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),Pe=Object.freeze({[se.DEVICE_TYPES.wasm]:Ie.q8}),Q=Object.freeze({[Ie.fp32]:"",[Ie.fp16]:"_fp16",[Ie.int8]:"_int8",[Ie.uint8]:"_uint8",[Ie.q8]:"_quantized",[Ie.q4]:"_q4",[Ie.q4f16]:"_q4f16",[Ie.bnb4]:"_bnb4"})},"./src/utils/generic.js":(we,Y,P)=>{P.r(Y),P.d(Y,{Callable:()=>$});const $=class{constructor(){let se=function(...xe){return se._call(...xe)};return Object.setPrototypeOf(se,new.target.prototype)}_call(...se){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(we,Y,P)=>{P.r(Y),P.d(Y,{getFile:()=>W,getModelFile:()=>Ee,getModelJSON:()=>j});var $=P("?7a2c"),se=P("?a42a"),xe=P("./src/env.js"),Ie=P("./src/utils/core.js");const Pe={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class Q{constructor(H){if(this.filePath=H,this.headers=new Headers,this.exists=$.existsSync(H),this.exists){this.status=200,this.statusText="OK";let N=$.statSync(H);this.headers.set("content-length",N.size.toString()),this.updateContentType();let I=this;this.body=new ReadableStream({start(z){I.arrayBuffer().then(T=>{z.enqueue(new Uint8Array(T)),z.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const H=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",Pe[H]??"application/octet-stream")}clone(){let H=new Q(this.filePath);return H.exists=this.exists,H.status=this.status,H.statusText=this.statusText,H.headers=new Headers(this.headers),H}async arrayBuffer(){return(await $.promises.readFile(this.filePath)).buffer}async blob(){const H=await $.promises.readFile(this.filePath);return new Blob([H],{type:this.headers.get("content-type")})}async text(){return await $.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function R(U,H=null,N=null){let I;try{I=new URL(U)}catch{return!1}return!(H&&!H.includes(I.protocol)||N&&!N.includes(I.hostname))}async function W(U){if(xe.env.useFS&&!R(U,["http:","https:","blob:"]))return new Q(U);if(typeof xs<"u"&&xs?.release?.name==="node"){const H=!!Ip?.TESTING_REMOTELY,N=xe.env.version,I=new Headers;if(I.set("User-Agent",`transformers.js/${N}; is_ci/${H};`),R(U,["http:","https:"],["huggingface.co","hf.co"])){const T=Ip?.HF_TOKEN??Ip?.HF_ACCESS_TOKEN;T&&I.set("Authorization",`Bearer ${T}`)}return fetch(U,{headers:I})}else return fetch(U)}const q={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function te(U,H,N){if(!N)return null;const I=q[U]??`Error (${U}) occurred while trying to load file`;throw Error(`${I}: "${H}".`)}class pe{constructor(H){this.path=H}async match(H){let N=se.join(this.path,H),I=new Q(N);if(I.exists)return I}async put(H,N){const I=tg.from(await N.arrayBuffer());let z=se.join(this.path,H);try{await $.promises.mkdir(se.dirname(z),{recursive:!0}),await $.promises.writeFile(z,I)}catch(T){console.warn("An error occurred while writing the file to cache:",T)}}}async function Se(U,...H){for(let N of H)try{let I=await U.match(N);if(I)return I}catch{continue}}async function Ee(U,H,N=!0,I={}){if(!xe.env.allowLocalModels){if(I.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!xe.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,Ie.dispatchCallback)(I.progress_callback,{status:"initiate",name:U,file:H});let z;if(!z&&xe.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{z=await caches.open("transformers-cache")}catch(Ae){console.warn("An error occurred while opening the browser cache:",Ae)}}if(!z&&xe.env.useFSCache&&(z=new pe(I.cache_dir??xe.env.cacheDir)),!z&&xe.env.useCustomCache){if(!xe.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!xe.env.customCache.match||!xe.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");z=xe.env.customCache}const T=I.revision??"main";let _e=de(U,H),Me=de(xe.env.localModelPath,_e),$e=de(xe.env.remoteHost,xe.env.remotePathTemplate.replaceAll("{model}",U).replaceAll("{revision}",encodeURIComponent(T)),H),K=T==="main"?_e:de(U,T,H),Fe,ot=z instanceof pe?K:$e,Qe=!1,ct;z&&(ct=await Se(z,Me,ot));const Ce=ct!==void 0;if(ct===void 0){if(xe.env.allowLocalModels)if(R(_e,["http:","https:"])){if(I.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${_e}.`);if(!xe.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${_e}.`)}else try{ct=await W(Me),Fe=Me}catch(He){console.warn(`Unable to load from local path "${Me}": "${He}"`)}if(ct===void 0||ct.status===404){if(I.local_files_only||!xe.env.allowRemoteModels){if(N)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${Me}".`);return null}if(ct=await W($e),ct.status!==200)return te(ct.status,$e,N);Fe=ot}Qe=z&&typeof Response<"u"&&ct instanceof Response&&ct.status===200}(0,Ie.dispatchCallback)(I.progress_callback,{status:"download",name:U,file:H});const X={status:"progress",name:U,file:H};let ve;return I.progress_callback?Ce&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(ve=new Uint8Array(await ct.arrayBuffer()),(0,Ie.dispatchCallback)(I.progress_callback,{...X,progress:100,loaded:ve.length,total:ve.length})):ve=await le(ct,Ae=>{(0,Ie.dispatchCallback)(I.progress_callback,{...X,...Ae})}):ve=new Uint8Array(await ct.arrayBuffer()),Qe&&Fe&&await z.match(Fe)===void 0&&await z.put(Fe,new Response(ve,{headers:ct.headers})).catch(Ae=>{console.warn(`Unable to add response to browser cache: ${Ae}.`)}),(0,Ie.dispatchCallback)(I.progress_callback,{status:"done",name:U,file:H}),ve}async function j(U,H,N=!0,I={}){let z=await Ee(U,H,N,I);if(z===null)return{};let _e=new TextDecoder("utf-8").decode(z);return JSON.parse(_e)}async function le(U,H){const N=U.headers.get("Content-Length");N===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let I=parseInt(N??"0"),z=new Uint8Array(I),T=0;const _e=U.body.getReader();async function Me(){const{done:$e,value:K}=await _e.read();if($e)return;let Fe=T+K.length;if(Fe>I){I=Fe;let Qe=new Uint8Array(I);Qe.set(z),z=Qe}z.set(K,T),T=Fe;const ot=T/I*100;return H({progress:ot,loaded:T,total:I}),Me()}return await Me(),z}function de(...U){return U=U.map((H,N)=>(N&&(H=H.replace(new RegExp("^/"),"")),N!==U.length-1&&(H=H.replace(new RegExp("/$"),"")),H)),U.join("/")}},"./src/utils/image.js":(we,Y,P)=>{P.r(Y),P.d(Y,{RawImage:()=>Se});var $=P("./src/utils/hub.js"),se=P("./src/env.js"),xe=P("./src/utils/tensor.js"),Ie=P("?2b25");const Pe=typeof self<"u",Q=Pe&&self.constructor.name==="DedicatedWorkerGlobalScope";let R,W,q;if(Pe)R=(Ee,j)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(Ee,j)},q=self.createImageBitmap,W=self.ImageData;else if(Ie)q=async Ee=>{const le=(await Ee.metadata()).channels,{data:de,info:U}=await Ee.rotate().raw().toBuffer({resolveWithObject:!0}),H=new Se(new Uint8ClampedArray(de),U.width,U.height,U.channels);return le!==void 0&&le!==U.channels&&H.convert(le),H};else throw new Error("Unable to load image processing library.");const te={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},pe=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class Se{constructor(j,le,de,U){this.data=j,this.width=le,this.height=de,this.channels=U}get size(){return[this.width,this.height]}static async read(j){if(j instanceof Se)return j;if(typeof j=="string"||j instanceof URL)return await this.fromURL(j);throw new Error(`Unsupported input type: ${typeof j}`)}static fromCanvas(j){if(!Pe)throw new Error("fromCanvas() is only supported in browser environments.");const de=j.getContext("2d").getImageData(0,0,j.width,j.height).data;return new Se(de,j.width,j.height,4)}static async fromURL(j){const le=await(0,$.getFile)(j);if(le.status!==200)throw new Error(`Unable to read image from "${j}" (${le.status} ${le.statusText})`);const de=await le.blob();return this.fromBlob(de)}static async fromBlob(j){if(Pe){const le=await q(j),de=R(le.width,le.height).getContext("2d");return de.drawImage(le,0,0),new this(de.getImageData(0,0,le.width,le.height).data,le.width,le.height,4)}else{const le=Ie(await j.arrayBuffer());return await q(le)}}static fromTensor(j,le="CHW"){if(j.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${j.dims.length} dimensions.`);if(le==="CHW")j=j.transpose(1,2,0);else if(le!=="HWC")throw new Error(`Unsupported channel format: ${le}`);if(!(j.data instanceof Uint8ClampedArray||j.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${j.type}`);switch(j.dims[2]){case 1:case 2:case 3:case 4:return new Se(j.data,j.dims[1],j.dims[0],j.dims[2]);default:throw new Error(`Unsupported number of channels: ${j.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const j=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let le=0,de=0;le<this.data.length;le+=this.channels){const U=this.data[le],H=this.data[le+1],N=this.data[le+2];j[de++]=Math.round(.2989*U+.587*H+.114*N)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(j,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const j=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let le=0,de=0;le<this.data.length;++le)j[de++]=this.data[le],j[de++]=this.data[le],j[de++]=this.data[le];break;case 4:for(let le=0,de=0;le<this.data.length;le+=4)j[de++]=this.data[le],j[de++]=this.data[le+1],j[de++]=this.data[le+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(j,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const j=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let le=0,de=0;le<this.data.length;++le)j[de++]=this.data[le],j[de++]=this.data[le],j[de++]=this.data[le],j[de++]=255;break;case 3:for(let le=0,de=0;le<this.data.length;le+=3)j[de++]=this.data[le],j[de++]=this.data[le+1],j[de++]=this.data[le+2],j[de++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(j,this.width,this.height,4)}async resize(j,le,{resample:de=2}={}){let U=te[de]??de;if(Pe){const H=this.channels,N=this.toCanvas(),I=R(j,le).getContext("2d");return I.drawImage(N,0,0,j,le),new Se(I.getImageData(0,0,j,le).data,j,le,4).convert(H)}else{let H=this.toSharp();switch(U){case"box":case"hamming":(U==="box"||U==="hamming")&&(console.warn(`Resampling method ${U} is not yet supported. Using bilinear instead.`),U="bilinear");case"nearest":case"bilinear":case"bicubic":H=H.affine([j/this.width,0,0,le/this.height],{interpolator:U});break;case"lanczos":H=H.resize({width:j,height:le,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${U} is not supported.`)}return await q(H)}}async pad([j,le,de,U]){if(j=Math.max(j,0),le=Math.max(le,0),de=Math.max(de,0),U=Math.max(U,0),j===0&&le===0&&de===0&&U===0)return this;if(Pe){const H=this.channels,N=this.toCanvas(),I=this.width+j+le,z=this.height+de+U,T=R(I,z).getContext("2d");return T.drawImage(N,0,0,this.width,this.height,j,de,I,z),new Se(T.getImageData(0,0,I,z).data,I,z,4).convert(H)}else{const H=this.toSharp().extend({left:j,right:le,top:de,bottom:U});return await q(H)}}async crop([j,le,de,U]){if(j=Math.max(j,0),le=Math.max(le,0),de=Math.min(de,this.width-1),U=Math.min(U,this.height-1),j===0&&le===0&&de===this.width-1&&U===this.height-1)return this;const H=de-j+1,N=U-le+1;if(Pe){const I=this.channels,z=this.toCanvas(),T=R(H,N).getContext("2d");return T.drawImage(z,j,le,H,N,0,0,H,N),new Se(T.getImageData(0,0,H,N).data,H,N,4).convert(I)}else{const I=this.toSharp().extract({left:j,top:le,width:H,height:N});return await q(I)}}async center_crop(j,le){if(this.width===j&&this.height===le)return this;const de=(this.width-j)/2,U=(this.height-le)/2;if(Pe){const H=this.channels,N=this.toCanvas(),I=R(j,le).getContext("2d");let z=0,T=0,_e=0,Me=0;return de>=0?z=de:_e=-de,U>=0?T=U:Me=-U,I.drawImage(N,z,T,j,le,_e,Me,j,le),new Se(I.getImageData(0,0,j,le).data,j,le,4).convert(H)}else{let H=this.toSharp();if(de>=0&&U>=0)H=H.extract({left:Math.floor(de),top:Math.floor(U),width:j,height:le});else if(de<=0&&U<=0){const N=Math.floor(-U),I=Math.floor(-de);H=H.extend({top:N,left:I,right:j-this.width-I,bottom:le-this.height-N})}else{let N=[0,0],I=0;U<0?(N[0]=Math.floor(-U),N[1]=le-this.height-N[0]):I=Math.floor(U);let z=[0,0],T=0;de<0?(z[0]=Math.floor(-de),z[1]=j-this.width-z[0]):T=Math.floor(de),H=H.extend({top:N[0],bottom:N[1],left:z[0],right:z[1]}).extract({left:T,top:I,width:j,height:le})}return await q(H)}}async toBlob(j="image/png",le=1){if(!Pe)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:j,quality:le})}toTensor(j="CHW"){let le=new xe.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(j!=="HWC")if(j==="CHW")le=le.permute(2,0,1);else throw new Error(`Unsupported channel format: ${j}`);return le}toCanvas(){if(!Pe)throw new Error("toCanvas() is only supported in browser environments.");const j=this.clone().rgba(),le=R(j.width,j.height),de=new W(j.data,j.width,j.height);return le.getContext("2d").putImageData(de,0,0),le}_update(j,le,de,U=null){return this.data=j,this.width=le,this.height=de,U!==null&&(this.channels=U),this}clone(){return new Se(this.data.slice(),this.width,this.height,this.channels)}convert(j){if(this.channels===j)return this;switch(j){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(j){if(Pe){if(Q)throw new Error("Unable to save an image from a Web Worker.");const le=j.split(".").pop().toLowerCase(),de=pe.get(le)??"image/png",U=await this.toBlob(de),H=URL.createObjectURL(U),N=document.createElement("a");N.href=H,N.download=j,N.click(),N.remove()}else{if(se.env.useFS)return await this.toSharp().toFile(j);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(Pe)throw new Error("toSharp() is only supported in server-side environments.");return Ie(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}},"./src/utils/maths.js":(we,Y,P)=>{P.r(Y),P.d(Y,{FFT:()=>Ee,bankers_round:()=>de,cos_sim:()=>Q,dot:()=>Pe,dynamic_time_warping:()=>U,interpolate_data:()=>$,log_softmax:()=>Ie,magnitude:()=>R,max:()=>q,medianFilter:()=>j,min:()=>W,permute_data:()=>se,round:()=>le,softmax:()=>xe});function $(H,[N,I,z],[T,_e],Me="bilinear",$e=!1){const K=_e/z,Fe=T/I,ot=new H.constructor(T*_e*N),Qe=I*z,ct=T*_e;for(let Ce=0;Ce<T;++Ce)for(let X=0;X<_e;++X){const ve=Ce*_e+X,Ae=(X+.5)/K-.5,He=(Ce+.5)/Fe-.5;let pt=Math.floor(Ae),he=Math.floor(He);const tt=Math.min(pt+1,z-1),gt=Math.min(he+1,I-1);pt=Math.max(pt,0),he=Math.max(he,0);const Ue=Ae-pt,yt=He-he,xt=(1-Ue)*(1-yt),Ze=Ue*(1-yt),re=(1-Ue)*yt,Ne=Ue*yt,rt=he*z,st=gt*z,Xe=rt+pt,Ge=rt+tt,mt=st+pt,bt=st+tt;for(let Bt=0;Bt<N;++Bt){const Ct=Bt*Qe;ot[Bt*ct+ve]=xt*H[Ct+Xe]+Ze*H[Ct+Ge]+re*H[Ct+mt]+Ne*H[Ct+bt]}}return ot}function se(H,N,I){const z=new Array(I.length),T=new Array(I.length);for(let $e=I.length-1,K=1;$e>=0;--$e)T[$e]=K,z[$e]=N[I[$e]],K*=z[$e];const _e=I.map(($e,K)=>T[I.indexOf(K)]),Me=new H.constructor(H.length);for(let $e=0;$e<H.length;++$e){let K=0;for(let Fe=N.length-1,ot=$e;Fe>=0;--Fe)K+=ot%N[Fe]*_e[Fe],ot=Math.floor(ot/N[Fe]);Me[K]=H[$e]}return[Me,z]}function xe(H){const N=q(H)[0],I=H.map(_e=>Math.exp(_e-N)),z=I.reduce((_e,Me)=>_e+Me,0);return I.map(_e=>_e/z)}function Ie(H){const N=q(H)[0];let I=0;for(let _e=0;_e<H.length;++_e)I+=Math.exp(H[_e]-N);const z=Math.log(I);return H.map(_e=>_e-N-z)}function Pe(H,N){let I=0;for(let z=0;z<H.length;++z)I+=H[z]*N[z];return I}function Q(H,N){const I=Pe(H,N),z=R(H),T=R(N);return I/(z*T)}function R(H){return Math.sqrt(H.reduce((N,I)=>N+I*I,0))}function W(H){if(H.length===0)throw Error("Array must not be empty");let N=H[0],I=0;for(let z=1;z<H.length;++z)H[z]<N&&(N=H[z],I=z);return[N,I]}function q(H){if(H.length===0)throw Error("Array must not be empty");let N=H[0],I=0;for(let z=1;z<H.length;++z)H[z]>N&&(N=H[z],I=z);return[Number(N),I]}function te(H){return H>0&&(H&H-1)===0}class pe{constructor(N){if(this.size=N|0,this.size<=1||!te(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=N<<1,this.table=new Float64Array(this.size*2);for(let z=0;z<this.table.length;z+=2){const T=Math.PI*z/this.size;this.table[z]=Math.cos(T),this.table[z+1]=-Math.sin(T)}let I=0;for(let z=1;this.size>z;z<<=1)++I;this._width=I%2===0?I-1:I,this._bitrev=new Int32Array(1<<this._width);for(let z=0;z<this._bitrev.length;++z){this._bitrev[z]=0;for(let T=0;T<this._width;T+=2){const _e=this._width-T-2;this._bitrev[z]|=(z>>>T&3)<<_e}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(N,I){const z=I||new Array(N.length>>>1);for(let T=0;T<N.length;T+=2)z[T>>>1]=N[T];return z}toComplexArray(N,I){const z=I||this.createComplexArray();for(let T=0;T<z.length;T+=2)z[T]=N[T>>>1],z[T+1]=0;return z}transform(N,I){if(N===I)throw new Error("Input and output buffers must be different");this._transform4(N,I,1)}realTransform(N,I){if(N===I)throw new Error("Input and output buffers must be different");this._realTransform4(N,I,1)}inverseTransform(N,I){if(N===I)throw new Error("Input and output buffers must be different");this._transform4(N,I,-1);for(let z=0;z<N.length;++z)N[z]/=this.size}_transform4(N,I,z){const T=this._csize;let Me=1<<this._width,$e=T/Me<<1,K,Fe;const ot=this._bitrev;if($e===4)for(K=0,Fe=0;K<T;K+=$e,++Fe){const ct=ot[Fe];this._singleTransform2(I,N,K,ct,Me)}else for(K=0,Fe=0;K<T;K+=$e,++Fe){const ct=ot[Fe];this._singleTransform4(I,N,K,ct,Me,z)}const Qe=this.table;for(Me>>=2;Me>=2;Me>>=2){$e=T/Me<<1;const ct=$e>>>2;for(K=0;K<T;K+=$e){const Ce=K+ct-1;for(let X=K,ve=0;X<Ce;X+=2,ve+=Me){const Ae=X,He=Ae+ct,pt=He+ct,he=pt+ct,tt=N[Ae],gt=N[Ae+1],Ue=N[He],yt=N[He+1],xt=N[pt],Ze=N[pt+1],re=N[he],Ne=N[he+1],rt=Qe[ve],st=z*Qe[ve+1],Xe=Ue*rt-yt*st,Ge=Ue*st+yt*rt,mt=Qe[2*ve],bt=z*Qe[2*ve+1],Bt=xt*mt-Ze*bt,Ct=xt*bt+Ze*mt,E=Qe[3*ve],ne=z*Qe[3*ve+1],F=re*E-Ne*ne,oe=re*ne+Ne*E,Te=tt+Bt,lt=gt+Ct,Ye=tt-Bt,$t=gt-Ct,ut=Xe+F,ft=Ge+oe,Wt=z*(Xe-F),Kt=z*(Ge-oe);N[Ae]=Te+ut,N[Ae+1]=lt+ft,N[He]=Ye+Kt,N[He+1]=$t-Wt,N[pt]=Te-ut,N[pt+1]=lt-ft,N[he]=Ye-Kt,N[he+1]=$t+Wt}}}}_singleTransform2(N,I,z,T,_e){const Me=N[T],$e=N[T+1],K=N[T+_e],Fe=N[T+_e+1];I[z]=Me+K,I[z+1]=$e+Fe,I[z+2]=Me-K,I[z+3]=$e-Fe}_singleTransform4(N,I,z,T,_e,Me){const $e=_e*2,K=_e*3,Fe=N[T],ot=N[T+1],Qe=N[T+_e],ct=N[T+_e+1],Ce=N[T+$e],X=N[T+$e+1],ve=N[T+K],Ae=N[T+K+1],He=Fe+Ce,pt=ot+X,he=Fe-Ce,tt=ot-X,gt=Qe+ve,Ue=ct+Ae,yt=Me*(Qe-ve),xt=Me*(ct-Ae);I[z]=He+gt,I[z+1]=pt+Ue,I[z+2]=he+xt,I[z+3]=tt-yt,I[z+4]=He-gt,I[z+5]=pt-Ue,I[z+6]=he-xt,I[z+7]=tt+yt}_realTransform4(N,I,z){const T=this._csize;let Me=1<<this._width,$e=T/Me<<1,K,Fe;const ot=this._bitrev;if($e===4)for(K=0,Fe=0;K<T;K+=$e,++Fe){const Ce=ot[Fe];this._singleRealTransform2(I,N,K,Ce>>>1,Me>>>1)}else for(K=0,Fe=0;K<T;K+=$e,++Fe){const Ce=ot[Fe];this._singleRealTransform4(I,N,K,Ce>>>1,Me>>>1,z)}const Qe=this.table;for(Me>>=2;Me>=2;Me>>=2){$e=T/Me<<1;const Ce=$e>>>1,X=Ce>>>1,ve=X>>>1;for(K=0;K<T;K+=$e)for(let Ae=0,He=0;Ae<=ve;Ae+=2,He+=Me){const pt=K+Ae,he=pt+X,tt=he+X,gt=tt+X,Ue=N[pt],yt=N[pt+1],xt=N[he],Ze=N[he+1],re=N[tt],Ne=N[tt+1],rt=N[gt],st=N[gt+1],Xe=Ue,Ge=yt,mt=Qe[He],bt=z*Qe[He+1],Bt=xt*mt-Ze*bt,Ct=xt*bt+Ze*mt,E=Qe[2*He],ne=z*Qe[2*He+1],F=re*E-Ne*ne,oe=re*ne+Ne*E,Te=Qe[3*He],lt=z*Qe[3*He+1],Ye=rt*Te-st*lt,$t=rt*lt+st*Te,ut=Xe+F,ft=Ge+oe,Wt=Xe-F,Kt=Ge-oe,Ir=Bt+Ye,Er=Ct+$t,Lr=z*(Bt-Ye),Cr=z*(Ct-$t);if(N[pt]=ut+Ir,N[pt+1]=ft+Er,N[he]=Wt+Cr,N[he+1]=Kt-Lr,Ae===0){N[tt]=ut-Ir,N[tt+1]=ft-Er;continue}if(Ae===ve)continue;const Hr=K+X-Ae,wn=K+Ce-Ae;N[Hr]=Wt-z*Cr,N[Hr+1]=-Kt-z*Lr,N[wn]=ut-z*Ir,N[wn+1]=-ft+z*Er}}const ct=T>>>1;for(let Ce=2;Ce<ct;Ce+=2)N[T-Ce]=N[Ce],N[T-Ce+1]=-N[Ce+1]}_singleRealTransform2(N,I,z,T,_e){const Me=N[T],$e=N[T+_e];I[z]=Me+$e,I[z+1]=0,I[z+2]=Me-$e,I[z+3]=0}_singleRealTransform4(N,I,z,T,_e,Me){const $e=_e*2,K=_e*3,Fe=N[T],ot=N[T+_e],Qe=N[T+$e],ct=N[T+K],Ce=Fe+Qe,X=Fe-Qe,ve=ot+ct,Ae=Me*(ot-ct);I[z]=Ce+ve,I[z+1]=0,I[z+2]=X,I[z+3]=-Ae,I[z+4]=Ce-ve,I[z+5]=0,I[z+6]=X,I[z+7]=Ae}}class Se{constructor(N){const I=2*(N-1),z=2*(2*N-1),T=2**Math.ceil(Math.log2(z));this.bufferSize=T,this._a=I;const _e=new Float64Array(z),Me=new Float64Array(T);this._chirpBuffer=new Float64Array(T),this._buffer1=new Float64Array(T),this._buffer2=new Float64Array(T),this._outBuffer1=new Float64Array(T),this._outBuffer2=new Float64Array(T);const $e=-2*Math.PI/N,K=Math.cos($e),Fe=Math.sin($e);for(let ot=0;ot<z>>1;++ot){const Qe=(ot+1-N)**2/2,ct=Math.sqrt(K**2+Fe**2)**Qe,Ce=Qe*Math.atan2(Fe,K),X=2*ot;_e[X]=ct*Math.cos(Ce),_e[X+1]=ct*Math.sin(Ce),Me[X]=_e[X],Me[X+1]=-_e[X+1]}this._slicedChirpBuffer=_e.subarray(I,z),this._f=new pe(T>>1),this._f.transform(this._chirpBuffer,Me)}_transform(N,I,z){const T=this._buffer1,_e=this._buffer2,Me=this._outBuffer1,$e=this._outBuffer2,K=this._chirpBuffer,Fe=this._slicedChirpBuffer,ot=this._a;if(z)for(let Qe=0;Qe<Fe.length;Qe+=2){const ct=Qe+1,Ce=Qe>>1,X=I[Ce];T[Qe]=X*Fe[Qe],T[ct]=X*Fe[ct]}else for(let Qe=0;Qe<Fe.length;Qe+=2){const ct=Qe+1;T[Qe]=I[Qe]*Fe[Qe]-I[ct]*Fe[ct],T[ct]=I[Qe]*Fe[ct]+I[ct]*Fe[Qe]}this._f.transform(Me,T);for(let Qe=0;Qe<K.length;Qe+=2){const ct=Qe+1;_e[Qe]=Me[Qe]*K[Qe]-Me[ct]*K[ct],_e[ct]=Me[Qe]*K[ct]+Me[ct]*K[Qe]}this._f.inverseTransform($e,_e);for(let Qe=0;Qe<$e.length;Qe+=2){const ct=$e[Qe+ot],Ce=$e[Qe+ot+1],X=Fe[Qe],ve=Fe[Qe+1];N[Qe]=ct*X-Ce*ve,N[Qe+1]=ct*ve+Ce*X}}transform(N,I){this._transform(N,I,!1)}realTransform(N,I){this._transform(N,I,!0)}}class Ee{constructor(N){this.fft_length=N,this.isPowerOfTwo=te(N),this.isPowerOfTwo?(this.fft=new pe(N),this.outputBufferSize=2*N):(this.fft=new Se(N),this.outputBufferSize=this.fft.bufferSize)}realTransform(N,I){this.fft.realTransform(N,I)}transform(N,I){this.fft.transform(N,I)}}function j(H,N){if(N%2===0||N<=0)throw new Error("Window size must be a positive odd number");const I=new H.constructor(H.length),z=new H.constructor(N),T=Math.floor(N/2);for(let _e=0;_e<H.length;++_e){let Me=0;for(let $e=-T;$e<=T;++$e){let K=_e+$e;K<0?K=Math.abs(K):K>=H.length&&(K=2*(H.length-1)-K),z[Me++]=H[K]}z.sort(),I[_e]=z[T]}return I}function le(H,N){const I=Math.pow(10,N);return Math.round(H*I)/I}function de(H){const N=Math.round(H);return Math.abs(H)%1===.5?N%2===0?N:N-1:N}function U(H){const N=H.length,I=H[0].length,z=[N+1,I+1],T=Array.from({length:z[0]},()=>Array(z[1]).fill(1/0));T[0][0]=0;const _e=Array.from({length:z[0]},()=>Array(z[1]).fill(-1));for(let ot=1;ot<z[1];++ot)for(let Qe=1;Qe<z[0];++Qe){const ct=T[Qe-1][ot-1],Ce=T[Qe-1][ot],X=T[Qe][ot-1];let ve,Ae;ct<Ce&&ct<X?(ve=ct,Ae=0):Ce<ct&&Ce<X?(ve=Ce,Ae=1):(ve=X,Ae=2),T[Qe][ot]=H[Qe-1][ot-1]+ve,_e[Qe][ot]=Ae}for(let ot=0;ot<z[1];++ot)_e[0][ot]=2;for(let ot=0;ot<z[0];++ot)_e[ot][0]=1;let Me=N,$e=I,K=[],Fe=[];for(;Me>0||$e>0;)switch(K.push(Me-1),Fe.push($e-1),_e[Me][$e]){case 0:--Me,--$e;break;case 1:--Me;break;case 2:--$e;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${Me}, ${$e}]. Please file a bug report.`)}return K.reverse(),Fe.reverse(),[K,Fe]}},"./src/utils/tensor.js":(we,Y,P)=>{P.r(Y),P.d(Y,{Tensor:()=>Pe,cat:()=>H,full:()=>Me,full_like:()=>$e,interpolate:()=>W,interpolate_4d:()=>q,layer_norm:()=>j,matmul:()=>te,mean:()=>z,mean_pooling:()=>Ee,ones:()=>K,ones_like:()=>Fe,permute:()=>R,quantize_embeddings:()=>ct,rfft:()=>pe,stack:()=>N,std_mean:()=>I,topk:()=>Se,zeros:()=>ot,zeros_like:()=>Qe});var $=P("./src/utils/maths.js"),se=P("./src/backends/onnx.js"),xe=P("./src/ops/registry.js");const Ie=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array});class Pe{get dims(){return this.ort_tensor.dims}set dims(X){this.ort_tensor.dims=X}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...X){return(0,se.isONNXTensor)(X[0])?this.ort_tensor=X[0]:this.ort_tensor=new se.Tensor(X[0],X[1],X[2]),new Proxy(this,{get:(ve,Ae)=>{if(typeof Ae=="string"){let He=Number(Ae);if(Number.isInteger(He))return ve._getitem(He)}return ve[Ae]},set:(ve,Ae,He)=>ve[Ae]=He})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[X,...ve]=this.dims;if(ve.length>0){const Ae=ve.reduce((He,pt)=>He*pt);for(let He=0;He<X;++He)yield this._subarray(He,Ae,ve)}else yield*this.data}_getitem(X){const[ve,...Ae]=this.dims;if(X=U(X,ve),Ae.length>0){const He=Ae.reduce((pt,he)=>pt*he);return this._subarray(X,He,Ae)}else return new Pe(this.type,[this.data[X]],Ae)}indexOf(X){const ve=this.data;for(let Ae=0;Ae<ve.length;++Ae)if(ve[Ae]==X)return Ae;return-1}_subarray(X,ve,Ae){const He=X*ve,pt=(X+1)*ve,he="subarray"in this.data?this.data.subarray(He,pt):this.data.slice(He,pt);return new Pe(this.type,he,Ae)}item(){const X=this.data;if(X.length!==1)throw new Error(`a Tensor with ${X.length} elements cannot be converted to Scalar`);return X[0]}tolist(){return Q(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const X=this.data;for(let ve=0;ve<X.length;++ve)X[ve]=1/(1+Math.exp(-X[ve]));return this}map(X){return this.clone().map_(X)}map_(X){const ve=this.data;for(let Ae=0;Ae<ve.length;++Ae)ve[Ae]=X(ve[Ae],Ae,ve);return this}mul(X){return this.clone().mul_(X)}mul_(X){const ve=this.data;for(let Ae=0;Ae<ve.length;++Ae)ve[Ae]*=X;return this}div(X){return this.clone().div_(X)}div_(X){const ve=this.data;for(let Ae=0;Ae<ve.length;++Ae)ve[Ae]/=X;return this}add(X){return this.clone().add_(X)}add_(X){const ve=this.data;for(let Ae=0;Ae<ve.length;++Ae)ve[Ae]+=X;return this}sub(X){return this.clone().sub_(X)}sub_(X){const ve=this.data;for(let Ae=0;Ae<ve.length;++Ae)ve[Ae]-=X;return this}clone(){return new Pe(this.type,this.data.slice(),this.dims.slice())}slice(...X){const ve=[],Ae=[];for(let Ue=0;Ue<this.dims.length;++Ue){let yt=X[Ue];if(yt==null)Ae.push([0,this.dims[Ue]]),ve.push(this.dims[Ue]);else if(typeof yt=="number")yt=U(yt,this.dims[Ue],Ue),Ae.push([yt,yt+1]);else if(Array.isArray(yt)&&yt.length===2){let[xt,Ze]=yt;if(xt=xt===null?0:U(xt,this.dims[Ue],Ue,!1),Ze=Ze===null?this.dims[Ue]:U(Ze,this.dims[Ue],Ue,!1),xt>Ze)throw new Error(`Invalid slice: ${yt}`);const re=[Math.max(xt,0),Math.min(Ze,this.dims[Ue])];Ae.push(re),ve.push(re[1]-re[0])}else throw new Error(`Invalid slice: ${yt}`)}const He=Ae.map(([Ue,yt])=>yt-Ue),pt=He.reduce((Ue,yt)=>Ue*yt),he=this.data,tt=new he.constructor(pt),gt=this.stride();for(let Ue=0;Ue<pt;++Ue){let yt=0;for(let xt=He.length-1,Ze=Ue;xt>=0;--xt){const re=He[xt];yt+=(Ze%re+Ae[xt][0])*gt[xt],Ze=Math.floor(Ze/re)}tt[Ue]=he[yt]}return new Pe(this.type,tt,ve)}permute(...X){return R(this,X)}transpose(...X){return this.permute(...X)}sum(X=null,ve=!1){return this.norm(1,X,ve)}norm(X="fro",ve=null,Ae=!1){if(X==="fro")X=2;else if(typeof X=="string")throw Error(`Unsupported norm: ${X}`);const He=this.data;if(ve===null){let tt=He.reduce((gt,Ue)=>gt+Ue**X,0)**(1/X);return new Pe(this.type,[tt],[])}ve=U(ve,this.dims.length);const pt=this.dims.slice();pt[ve]=1;const he=new He.constructor(He.length/this.dims[ve]);for(let tt=0;tt<He.length;++tt){let gt=0;for(let Ue=this.dims.length-1,yt=tt,xt=1;Ue>=0;--Ue){const Ze=this.dims[Ue];if(Ue!==ve){const re=yt%Ze;gt+=re*xt,xt*=pt[Ue]}yt=Math.floor(yt/Ze)}he[gt]+=He[tt]**X}if(X!==1)for(let tt=0;tt<he.length;++tt)he[tt]=he[tt]**(1/X);return Ae||pt.splice(ve,1),new Pe(this.type,he,pt)}normalize_(X=2,ve=1){ve=U(ve,this.dims.length);const Ae=this.norm(X,ve,!0),He=this.data,pt=Ae.data;for(let he=0;he<He.length;++he){let tt=0;for(let gt=this.dims.length-1,Ue=he,yt=1;gt>=0;--gt){const xt=this.dims[gt];if(gt!==ve){const Ze=Ue%xt;tt+=Ze*yt,yt*=this.dims[gt]}Ue=Math.floor(Ue/xt)}He[he]/=pt[tt]}return this}normalize(X=2,ve=1){return this.clone().normalize_(X,ve)}stride(){return T(this.dims)}squeeze(X=null){return new Pe(this.type,this.data,le(this.dims,X))}squeeze_(X=null){return this.dims=le(this.dims,X),this}unsqueeze(X=null){return new Pe(this.type,this.data,de(this.dims,X))}unsqueeze_(X=null){return this.dims=de(this.dims,X),this}flatten_(X=0,ve=-1){ve=(ve+this.dims.length)%this.dims.length;let Ae=this.dims.slice(0,X),He=this.dims.slice(X,ve+1),pt=this.dims.slice(ve+1);return this.dims=[...Ae,He.reduce((he,tt)=>he*tt,1),...pt],this}flatten(X=0,ve=-1){return this.clone().flatten_(X,ve)}view(...X){let ve=-1;for(let He=0;He<X.length;++He)if(X[He]===-1){if(ve!==-1)throw new Error("Only one dimension can be inferred");ve=He}const Ae=this.data;if(ve!==-1){const He=X.reduce((pt,he,tt)=>tt!==ve?pt*he:pt,1);X[ve]=Ae.length/He}return new Pe(this.type,Ae,X)}neg_(){const X=this.data;for(let ve=0;ve<X.length;++ve)X[ve]=-X[ve];return this}neg(){return this.clone().neg_()}clamp_(X,ve){const Ae=this.data;for(let He=0;He<Ae.length;++He)Ae[He]=Math.min(Math.max(Ae[He],X),ve);return this}clamp(X,ve){return this.clone().clamp_(X,ve)}round_(){const X=this.data;for(let ve=0;ve<X.length;++ve)X[ve]=Math.round(X[ve]);return this}round(){return this.clone().round_()}mean(X=null,ve=!1){return z(this,X,ve)}to(X){if(this.type===X)return this;if(!Ie.hasOwnProperty(X))throw new Error(`Unsupported type: ${X}`);return new Pe(X,Ie[X].from(this.data),this.dims)}}function Q(Ce,X){const ve=Ce.length,Ae=X.reduce((pt,he)=>pt*he);if(ve!==Ae)throw Error(`cannot reshape array of size ${ve} into shape (${X})`);let He=Ce;for(let pt=X.length-1;pt>=0;pt--)He=He.reduce((he,tt)=>{let gt=he[he.length-1];return gt.length<X[pt]?gt.push(tt):he.push([tt]),he},[[]]);return He[0]}function R(Ce,X){const[ve,Ae]=(0,$.permute_data)(Ce.data,Ce.dims,X);return new Pe(Ce.type,ve,Ae)}function W(Ce,[X,ve],Ae="bilinear",He=!1){const pt=Ce.dims.at(-3)??1,he=Ce.dims.at(-2),tt=Ce.dims.at(-1);let gt=(0,$.interpolate_data)(Ce.data,[pt,he,tt],[X,ve],Ae,He);return new Pe(Ce.type,gt,[pt,X,ve])}async function q(Ce,{size:X=null,mode:ve="bilinear"}={}){if(Ce.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!X)throw new Error("`interpolate_4d` requires a `size` argument.");let Ae;if(X.length===2)Ae=[...Ce.dims.slice(0,2),...X];else if(X.length===3)Ae=[Ce.dims[0],...X];else if(X.length===4)Ae=X;else throw new Error("`size` must be of length 2, 3, or 4.");let He;if(ve==="bilinear")He=await xe.TensorOpRegistry.bilinear_interpolate_4d;else if(ve==="bicubic")He=await xe.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${ve}`);const pt=new Pe("int64",new BigInt64Array(Ae.map(BigInt)),[Ae.length]);return await He({x:Ce,s:pt})}async function te(Ce,X){return await(await xe.TensorOpRegistry.matmul)({a:Ce,b:X})}async function pe(Ce,X){return await(await xe.TensorOpRegistry.rfft)({x:Ce,a:X})}async function Se(Ce,X){const ve=await xe.TensorOpRegistry.top_k;return X===null?X=Ce.dims.at(-1):X=Math.min(X,Ce.dims.at(-1)),await ve({x:Ce,k:new Pe("int64",[BigInt(X)],[1])})}function Ee(Ce,X){const ve=Ce.data,Ae=X.data,He=[Ce.dims[0],Ce.dims[2]],pt=new ve.constructor(He[0]*He[1]),[he,tt,gt]=Ce.dims;let Ue=0;for(let yt=0;yt<he;++yt){const xt=yt*gt*tt;for(let Ze=0;Ze<gt;++Ze){let re=0,Ne=0;const rt=yt*tt,st=xt+Ze;for(let Ge=0;Ge<tt;++Ge){const mt=Number(Ae[rt+Ge]);Ne+=mt,re+=ve[st+Ge*gt]*mt}const Xe=re/Ne;pt[Ue++]=Xe}}return new Pe(Ce.type,pt,He)}function j(Ce,X,{eps:ve=1e-5}={}){if(Ce.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[Ae,He]=Ce.dims;if(X.length!==1&&X[0]!==He)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[pt,he]=I(Ce,1,0,!0),tt=pt.data,gt=he.data,Ue=Ce.data,yt=new Ue.constructor(Ue.length);for(let xt=0;xt<Ae;++xt){const Ze=xt*He;for(let re=0;re<He;++re){const Ne=Ze+re;yt[Ne]=(Ue[Ne]-gt[xt])/(tt[xt]+ve)}}return new Pe(Ce.type,yt,Ce.dims)}function le(Ce,X){return Ce=Ce.slice(),X===null?Ce=Ce.filter(ve=>ve!==1):typeof X=="number"?Ce[X]===1&&Ce.splice(X,1):Array.isArray(X)&&(Ce=Ce.filter((ve,Ae)=>ve!==1||!X.includes(Ae))),Ce}function de(Ce,X){return X=U(X,Ce.length+1),Ce=Ce.slice(),Ce.splice(X,0,1),Ce}function U(Ce,X,ve=null,Ae=!0){if(Ae&&(Ce<-X||Ce>=X))throw new Error(`IndexError: index ${Ce} is out of bounds for dimension${ve===null?"":" "+ve} with size ${X}`);return Ce<0&&(Ce=(Ce%X+X)%X),Ce}function H(Ce,X=0){X=U(X,Ce[0].dims.length);const ve=Ce[0].dims.slice();ve[X]=Ce.reduce((he,tt)=>he+tt.dims[X],0);const Ae=ve.reduce((he,tt)=>he*tt,1),He=new Ce[0].data.constructor(Ae),pt=Ce[0].type;if(X===0){let he=0;for(const tt of Ce){const gt=tt.data;He.set(gt,he),he+=gt.length}}else{let he=0;for(let tt=0;tt<Ce.length;++tt){const{data:gt,dims:Ue}=Ce[tt];for(let yt=0;yt<gt.length;++yt){let xt=0;for(let Ze=Ue.length-1,re=yt,Ne=1;Ze>=0;--Ze){const rt=Ue[Ze];let st=re%rt;Ze===X&&(st+=he),xt+=st*Ne,Ne*=ve[Ze],re=Math.floor(re/rt)}He[xt]=gt[yt]}he+=Ue[X]}}return new Pe(pt,He,ve)}function N(Ce,X=0){return H(Ce.map(ve=>ve.unsqueeze(X)),X)}function I(Ce,X=null,ve=1,Ae=!1){const He=Ce.data,pt=Ce.dims;if(X===null){const Ze=He.reduce((st,Xe)=>st+Xe,0)/He.length,re=Math.sqrt(He.reduce((st,Xe)=>st+(Xe-Ze)**2,0)/(He.length-ve)),Ne=new Pe(Ce.type,[Ze],[]);return[new Pe(Ce.type,[re],[]),Ne]}X=U(X,pt.length);const he=z(Ce,X,Ae),tt=he.data,gt=pt.slice();gt[X]=1;const Ue=new He.constructor(He.length/pt[X]);for(let xt=0;xt<He.length;++xt){let Ze=0;for(let re=pt.length-1,Ne=xt,rt=1;re>=0;--re){const st=pt[re];if(re!==X){const Xe=Ne%st;Ze+=Xe*rt,rt*=gt[re]}Ne=Math.floor(Ne/st)}Ue[Ze]+=(He[xt]-tt[Ze])**2}for(let xt=0;xt<Ue.length;++xt)Ue[xt]=Math.sqrt(Ue[xt]/(pt[X]-ve));return Ae||gt.splice(X,1),[new Pe(Ce.type,Ue,gt),he]}function z(Ce,X=null,ve=!1){const Ae=Ce.data;if(X===null){const tt=Ae.reduce((gt,Ue)=>gt+Ue,0);return new Pe(Ce.type,[tt/Ae.length],[])}const He=Ce.dims;X=U(X,He.length);const pt=He.slice();pt[X]=1;const he=new Ae.constructor(Ae.length/He[X]);for(let tt=0;tt<Ae.length;++tt){let gt=0;for(let Ue=He.length-1,yt=tt,xt=1;Ue>=0;--Ue){const Ze=He[Ue];if(Ue!==X){const re=yt%Ze;gt+=re*xt,xt*=pt[Ue]}yt=Math.floor(yt/Ze)}he[gt]+=Ae[tt]}if(He[X]!==1)for(let tt=0;tt<he.length;++tt)he[tt]=he[tt]/He[X];return ve||pt.splice(X,1),new Pe(Ce.type,he,pt)}function T(Ce){const X=new Array(Ce.length);for(let ve=Ce.length-1,Ae=1;ve>=0;--ve)X[ve]=Ae,Ae*=Ce[ve];return X}function _e(Ce,X,ve,Ae){const He=Ce.reduce((pt,he)=>pt*he,1);return new Pe(ve,new Ae(He).fill(X),Ce)}function Me(Ce,X){let ve,Ae;if(typeof X=="number")ve="float32",Ae=Float32Array;else if(typeof X=="bigint")ve="int64",Ae=BigInt64Array;else throw new Error(`Unsupported data type: ${typeof X}`);return _e(Ce,X,ve,Ae)}function $e(Ce,X){return Me(Ce.dims,X)}function K(Ce){return _e(Ce,1n,"int64",BigInt64Array)}function Fe(Ce){return K(Ce.dims)}function ot(Ce){return _e(Ce,0n,"int64",BigInt64Array)}function Qe(Ce){return ot(Ce.dims)}function ct(Ce,X){if(Ce.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(Ce.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(X))throw new Error("The precision must be either 'binary' or 'ubinary'");const ve=X==="binary",Ae=ve?"int8":"uint8",He=ve?Int8Array:Uint8Array,pt=Ce.data,he=new He(pt.length/8);for(let tt=0;tt<pt.length;++tt){const gt=pt[tt]>0?1:0,Ue=Math.floor(tt/8),yt=tt%8;he[Ue]|=gt<<7-yt,ve&&yt===0&&(he[Ue]-=128)}return new Pe(Ae,he,[Ce.dims[0],Ce.dims[1]/8])}}},em={};function qr(we){var Y=em[we];if(Y!==void 0)return Y.exports;var P=em[we]={exports:{}};return hm[we](P,P.exports,qr),P.exports}qr.m=hm;(()=>{var we=Object.getPrototypeOf?P=>Object.getPrototypeOf(P):P=>P.__proto__,Y;qr.t=function(P,$){if($&1&&(P=this(P)),$&8||typeof P=="object"&&P&&($&4&&P.__esModule||$&16&&typeof P.then=="function"))return P;var se=Object.create(null);qr.r(se);var xe={};Y=Y||[null,we({}),we([]),we(we)];for(var Ie=$&2&&P;typeof Ie=="object"&&!~Y.indexOf(Ie);Ie=we(Ie))Object.getOwnPropertyNames(Ie).forEach(Pe=>xe[Pe]=()=>P[Pe]);return xe.default=()=>P,qr.d(se,xe),se}})();qr.d=(we,Y)=>{for(var P in Y)qr.o(Y,P)&&!qr.o(we,P)&&Object.defineProperty(we,P,{enumerable:!0,get:Y[P]})};qr.o=(we,Y)=>Object.prototype.hasOwnProperty.call(we,Y);qr.r=we=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(we,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(we,"__esModule",{value:!0})};(()=>{var we;if(typeof import.meta.url=="string"&&(we=import.meta.url),!we)throw new Error("Automatic publicPath is not supported in this browser");we=we.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),qr.p=we})();qr.b=new URL("./",import.meta.url);var p={};/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/qr.r(p);qr.d(p,{ASTFeatureExtractor:()=>rr.ASTFeatureExtractor,ASTForAudioClassification:()=>v.ASTForAudioClassification,ASTModel:()=>v.ASTModel,ASTPreTrainedModel:()=>v.ASTPreTrainedModel,AlbertForMaskedLM:()=>v.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>v.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>v.AlbertForSequenceClassification,AlbertModel:()=>v.AlbertModel,AlbertPreTrainedModel:()=>v.AlbertPreTrainedModel,AlbertTokenizer:()=>ar.AlbertTokenizer,AudioClassificationPipeline:()=>Gr.AudioClassificationPipeline,AutoConfig:()=>Fp.AutoConfig,AutoModel:()=>v.AutoModel,AutoModelForAudioClassification:()=>v.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>v.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>v.AutoModelForCTC,AutoModelForCausalLM:()=>v.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>v.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>v.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>v.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>v.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>v.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>v.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>v.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>v.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>v.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>v.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>v.AutoModelForObjectDetection,AutoModelForQuestionAnswering:()=>v.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>v.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>v.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>v.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>v.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>v.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>v.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>v.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>v.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>v.AutoModelForVision2Seq,AutoModelForXVector:()=>v.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>v.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>rr.AutoProcessor,AutoTokenizer:()=>ar.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>Gr.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>v.BartForConditionalGeneration,BartForSequenceClassification:()=>v.BartForSequenceClassification,BartModel:()=>v.BartModel,BartPretrainedModel:()=>v.BartPretrainedModel,BartTokenizer:()=>ar.BartTokenizer,BaseModelOutput:()=>v.BaseModelOutput,BaseStreamer:()=>Op.BaseStreamer,BeitFeatureExtractor:()=>rr.BeitFeatureExtractor,BeitForImageClassification:()=>v.BeitForImageClassification,BeitModel:()=>v.BeitModel,BeitPreTrainedModel:()=>v.BeitPreTrainedModel,BertForMaskedLM:()=>v.BertForMaskedLM,BertForQuestionAnswering:()=>v.BertForQuestionAnswering,BertForSequenceClassification:()=>v.BertForSequenceClassification,BertForTokenClassification:()=>v.BertForTokenClassification,BertModel:()=>v.BertModel,BertPreTrainedModel:()=>v.BertPreTrainedModel,BertTokenizer:()=>ar.BertTokenizer,BitImageProcessor:()=>rr.BitImageProcessor,BlenderbotForConditionalGeneration:()=>v.BlenderbotForConditionalGeneration,BlenderbotModel:()=>v.BlenderbotModel,BlenderbotPreTrainedModel:()=>v.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>v.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>v.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>v.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>ar.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>ar.BlenderbotTokenizer,BloomForCausalLM:()=>v.BloomForCausalLM,BloomModel:()=>v.BloomModel,BloomPreTrainedModel:()=>v.BloomPreTrainedModel,BloomTokenizer:()=>ar.BloomTokenizer,CLIPFeatureExtractor:()=>rr.CLIPFeatureExtractor,CLIPImageProcessor:()=>rr.CLIPImageProcessor,CLIPModel:()=>v.CLIPModel,CLIPPreTrainedModel:()=>v.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>v.CLIPSegForImageSegmentation,CLIPSegModel:()=>v.CLIPSegModel,CLIPSegPreTrainedModel:()=>v.CLIPSegPreTrainedModel,CLIPTextModel:()=>v.CLIPTextModel,CLIPTextModelWithProjection:()=>v.CLIPTextModelWithProjection,CLIPTokenizer:()=>ar.CLIPTokenizer,CLIPVisionModel:()=>v.CLIPVisionModel,CLIPVisionModelWithProjection:()=>v.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>v.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>v.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>v.CamembertForSequenceClassification,CamembertForTokenClassification:()=>v.CamembertForTokenClassification,CamembertModel:()=>v.CamembertModel,CamembertPreTrainedModel:()=>v.CamembertPreTrainedModel,CamembertTokenizer:()=>ar.CamembertTokenizer,CausalLMOutput:()=>v.CausalLMOutput,CausalLMOutputWithPast:()=>v.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>rr.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>v.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>v.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>v.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>rr.ClapFeatureExtractor,ClapModel:()=>v.ClapModel,ClapPreTrainedModel:()=>v.ClapPreTrainedModel,ClapTextModelWithProjection:()=>v.ClapTextModelWithProjection,CodeGenForCausalLM:()=>v.CodeGenForCausalLM,CodeGenModel:()=>v.CodeGenModel,CodeGenPreTrainedModel:()=>v.CodeGenPreTrainedModel,CodeGenTokenizer:()=>ar.CodeGenTokenizer,CodeLlamaTokenizer:()=>ar.CodeLlamaTokenizer,CohereForCausalLM:()=>v.CohereForCausalLM,CohereModel:()=>v.CohereModel,CoherePreTrainedModel:()=>v.CoherePreTrainedModel,CohereTokenizer:()=>ar.CohereTokenizer,ConvBertForMaskedLM:()=>v.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>v.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>v.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>v.ConvBertForTokenClassification,ConvBertModel:()=>v.ConvBertModel,ConvBertPreTrainedModel:()=>v.ConvBertPreTrainedModel,ConvBertTokenizer:()=>ar.ConvBertTokenizer,ConvNextFeatureExtractor:()=>rr.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>v.ConvNextForImageClassification,ConvNextImageProcessor:()=>rr.ConvNextImageProcessor,ConvNextModel:()=>v.ConvNextModel,ConvNextPreTrainedModel:()=>v.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>v.ConvNextV2ForImageClassification,ConvNextV2Model:()=>v.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>v.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>rr.DPTFeatureExtractor,DPTForDepthEstimation:()=>v.DPTForDepthEstimation,DPTImageProcessor:()=>rr.DPTImageProcessor,DPTModel:()=>v.DPTModel,DPTPreTrainedModel:()=>v.DPTPreTrainedModel,DebertaForMaskedLM:()=>v.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>v.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>v.DebertaForSequenceClassification,DebertaForTokenClassification:()=>v.DebertaForTokenClassification,DebertaModel:()=>v.DebertaModel,DebertaPreTrainedModel:()=>v.DebertaPreTrainedModel,DebertaTokenizer:()=>ar.DebertaTokenizer,DebertaV2ForMaskedLM:()=>v.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>v.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>v.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>v.DebertaV2ForTokenClassification,DebertaV2Model:()=>v.DebertaV2Model,DebertaV2PreTrainedModel:()=>v.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>ar.DebertaV2Tokenizer,DecisionTransformerModel:()=>v.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>v.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>rr.DeiTFeatureExtractor,DeiTForImageClassification:()=>v.DeiTForImageClassification,DeiTModel:()=>v.DeiTModel,DeiTPreTrainedModel:()=>v.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>v.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>v.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>Gr.DepthEstimationPipeline,DepthProForDepthEstimation:()=>v.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>v.DepthProPreTrainedModel,DetrFeatureExtractor:()=>rr.DetrFeatureExtractor,DetrForObjectDetection:()=>v.DetrForObjectDetection,DetrForSegmentation:()=>v.DetrForSegmentation,DetrModel:()=>v.DetrModel,DetrObjectDetectionOutput:()=>v.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>v.DetrPreTrainedModel,DetrSegmentationOutput:()=>v.DetrSegmentationOutput,Dinov2ForImageClassification:()=>v.Dinov2ForImageClassification,Dinov2Model:()=>v.Dinov2Model,Dinov2PreTrainedModel:()=>v.Dinov2PreTrainedModel,DistilBertForMaskedLM:()=>v.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>v.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>v.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>v.DistilBertForTokenClassification,DistilBertModel:()=>v.DistilBertModel,DistilBertPreTrainedModel:()=>v.DistilBertPreTrainedModel,DistilBertTokenizer:()=>ar.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>Gr.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>rr.DonutFeatureExtractor,DonutImageProcessor:()=>rr.DonutImageProcessor,DonutSwinModel:()=>v.DonutSwinModel,DonutSwinPreTrainedModel:()=>v.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>v.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>rr.EfficientNetImageProcessor,EfficientNetModel:()=>v.EfficientNetModel,EfficientNetPreTrainedModel:()=>v.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>v.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>v.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>v.ElectraForSequenceClassification,ElectraForTokenClassification:()=>v.ElectraForTokenClassification,ElectraModel:()=>v.ElectraModel,ElectraPreTrainedModel:()=>v.ElectraPreTrainedModel,ElectraTokenizer:()=>ar.ElectraTokenizer,EosTokenCriteria:()=>gd.EosTokenCriteria,EsmForMaskedLM:()=>v.EsmForMaskedLM,EsmForSequenceClassification:()=>v.EsmForSequenceClassification,EsmForTokenClassification:()=>v.EsmForTokenClassification,EsmModel:()=>v.EsmModel,EsmPreTrainedModel:()=>v.EsmPreTrainedModel,EsmTokenizer:()=>ar.EsmTokenizer,FFT:()=>Fn.FFT,FalconForCausalLM:()=>v.FalconForCausalLM,FalconModel:()=>v.FalconModel,FalconPreTrainedModel:()=>v.FalconPreTrainedModel,FalconTokenizer:()=>ar.FalconTokenizer,FastViTForImageClassification:()=>v.FastViTForImageClassification,FastViTModel:()=>v.FastViTModel,FastViTPreTrainedModel:()=>v.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>Gr.FeatureExtractionPipeline,FeatureExtractor:()=>rr.FeatureExtractor,FillMaskPipeline:()=>Gr.FillMaskPipeline,Florence2ForConditionalGeneration:()=>v.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>v.Florence2PreTrainedModel,Florence2Processor:()=>rr.Florence2Processor,GLPNFeatureExtractor:()=>rr.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>v.GLPNForDepthEstimation,GLPNModel:()=>v.GLPNModel,GLPNPreTrainedModel:()=>v.GLPNPreTrainedModel,GPT2LMHeadModel:()=>v.GPT2LMHeadModel,GPT2Model:()=>v.GPT2Model,GPT2PreTrainedModel:()=>v.GPT2PreTrainedModel,GPT2Tokenizer:()=>ar.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>v.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>v.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>v.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>v.GPTJForCausalLM,GPTJModel:()=>v.GPTJModel,GPTJPreTrainedModel:()=>v.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>v.GPTNeoForCausalLM,GPTNeoModel:()=>v.GPTNeoModel,GPTNeoPreTrainedModel:()=>v.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>v.GPTNeoXForCausalLM,GPTNeoXModel:()=>v.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>v.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>ar.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>v.Gemma2ForCausalLM,Gemma2Model:()=>v.Gemma2Model,Gemma2PreTrainedModel:()=>v.Gemma2PreTrainedModel,GemmaForCausalLM:()=>v.GemmaForCausalLM,GemmaModel:()=>v.GemmaModel,GemmaPreTrainedModel:()=>v.GemmaPreTrainedModel,GemmaTokenizer:()=>ar.GemmaTokenizer,GraniteForCausalLM:()=>v.GraniteForCausalLM,GraniteModel:()=>v.GraniteModel,GranitePreTrainedModel:()=>v.GranitePreTrainedModel,Grok1Tokenizer:()=>ar.Grok1Tokenizer,GroupViTModel:()=>v.GroupViTModel,GroupViTPreTrainedModel:()=>v.GroupViTPreTrainedModel,HerbertTokenizer:()=>ar.HerbertTokenizer,HieraForImageClassification:()=>v.HieraForImageClassification,HieraModel:()=>v.HieraModel,HieraPreTrainedModel:()=>v.HieraPreTrainedModel,HubertForCTC:()=>v.HubertForCTC,HubertForSequenceClassification:()=>v.HubertForSequenceClassification,HubertModel:()=>v.HubertModel,HubertPreTrainedModel:()=>v.HubertPreTrainedModel,ImageClassificationPipeline:()=>Gr.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>Gr.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>rr.ImageFeatureExtractor,ImageMattingOutput:()=>v.ImageMattingOutput,ImageSegmentationPipeline:()=>Gr.ImageSegmentationPipeline,ImageToImagePipeline:()=>Gr.ImageToImagePipeline,ImageToTextPipeline:()=>Gr.ImageToTextPipeline,InterruptableStoppingCriteria:()=>gd.InterruptableStoppingCriteria,JAISLMHeadModel:()=>v.JAISLMHeadModel,JAISModel:()=>v.JAISModel,JAISPreTrainedModel:()=>v.JAISPreTrainedModel,LlamaForCausalLM:()=>v.LlamaForCausalLM,LlamaModel:()=>v.LlamaModel,LlamaPreTrainedModel:()=>v.LlamaPreTrainedModel,LlamaTokenizer:()=>ar.LlamaTokenizer,LlavaForConditionalGeneration:()=>v.LlavaForConditionalGeneration,LlavaPreTrainedModel:()=>v.LlavaPreTrainedModel,LongT5ForConditionalGeneration:()=>v.LongT5ForConditionalGeneration,LongT5Model:()=>v.LongT5Model,LongT5PreTrainedModel:()=>v.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>v.M2M100ForConditionalGeneration,M2M100Model:()=>v.M2M100Model,M2M100PreTrainedModel:()=>v.M2M100PreTrainedModel,M2M100Tokenizer:()=>ar.M2M100Tokenizer,MBart50Tokenizer:()=>ar.MBart50Tokenizer,MBartForCausalLM:()=>v.MBartForCausalLM,MBartForConditionalGeneration:()=>v.MBartForConditionalGeneration,MBartForSequenceClassification:()=>v.MBartForSequenceClassification,MBartModel:()=>v.MBartModel,MBartPreTrainedModel:()=>v.MBartPreTrainedModel,MBartTokenizer:()=>ar.MBartTokenizer,MPNetForMaskedLM:()=>v.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>v.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>v.MPNetForSequenceClassification,MPNetForTokenClassification:()=>v.MPNetForTokenClassification,MPNetModel:()=>v.MPNetModel,MPNetPreTrainedModel:()=>v.MPNetPreTrainedModel,MPNetTokenizer:()=>ar.MPNetTokenizer,MT5ForConditionalGeneration:()=>v.MT5ForConditionalGeneration,MT5Model:()=>v.MT5Model,MT5PreTrainedModel:()=>v.MT5PreTrainedModel,MarianMTModel:()=>v.MarianMTModel,MarianModel:()=>v.MarianModel,MarianPreTrainedModel:()=>v.MarianPreTrainedModel,MarianTokenizer:()=>ar.MarianTokenizer,MaskFormerFeatureExtractor:()=>rr.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>v.MaskFormerForInstanceSegmentation,MaskFormerModel:()=>v.MaskFormerModel,MaskFormerPreTrainedModel:()=>v.MaskFormerPreTrainedModel,MaskedLMOutput:()=>v.MaskedLMOutput,MaxLengthCriteria:()=>gd.MaxLengthCriteria,MistralForCausalLM:()=>v.MistralForCausalLM,MistralModel:()=>v.MistralModel,MistralPreTrainedModel:()=>v.MistralPreTrainedModel,MobileBertForMaskedLM:()=>v.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>v.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>v.MobileBertForSequenceClassification,MobileBertModel:()=>v.MobileBertModel,MobileBertPreTrainedModel:()=>v.MobileBertPreTrainedModel,MobileBertTokenizer:()=>ar.MobileBertTokenizer,MobileLLMForCausalLM:()=>v.MobileLLMForCausalLM,MobileLLMModel:()=>v.MobileLLMModel,MobileLLMPreTrainedModel:()=>v.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>rr.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>v.MobileNetV1ForImageClassification,MobileNetV1Model:()=>v.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>v.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>rr.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>v.MobileNetV2ForImageClassification,MobileNetV2Model:()=>v.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>v.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>rr.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>v.MobileNetV3ForImageClassification,MobileNetV3Model:()=>v.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>v.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>rr.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>v.MobileNetV4ForImageClassification,MobileNetV4Model:()=>v.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>v.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>rr.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>v.MobileViTForImageClassification,MobileViTImageProcessor:()=>rr.MobileViTImageProcessor,MobileViTModel:()=>v.MobileViTModel,MobileViTPreTrainedModel:()=>v.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>v.MobileViTV2ForImageClassification,MobileViTV2Model:()=>v.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>v.MobileViTV2PreTrainedModel,ModelOutput:()=>v.ModelOutput,Moondream1ForConditionalGeneration:()=>v.Moondream1ForConditionalGeneration,MptForCausalLM:()=>v.MptForCausalLM,MptModel:()=>v.MptModel,MptPreTrainedModel:()=>v.MptPreTrainedModel,MusicgenForCausalLM:()=>v.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>v.MusicgenForConditionalGeneration,MusicgenModel:()=>v.MusicgenModel,MusicgenPreTrainedModel:()=>v.MusicgenPreTrainedModel,NllbTokenizer:()=>ar.NllbTokenizer,NomicBertModel:()=>v.NomicBertModel,NomicBertPreTrainedModel:()=>v.NomicBertPreTrainedModel,NougatImageProcessor:()=>rr.NougatImageProcessor,NougatTokenizer:()=>ar.NougatTokenizer,OPTForCausalLM:()=>v.OPTForCausalLM,OPTModel:()=>v.OPTModel,OPTPreTrainedModel:()=>v.OPTPreTrainedModel,ObjectDetectionPipeline:()=>Gr.ObjectDetectionPipeline,OlmoForCausalLM:()=>v.OlmoForCausalLM,OlmoModel:()=>v.OlmoModel,OlmoPreTrainedModel:()=>v.OlmoPreTrainedModel,OpenELMForCausalLM:()=>v.OpenELMForCausalLM,OpenELMModel:()=>v.OpenELMModel,OpenELMPreTrainedModel:()=>v.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>rr.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>v.OwlViTForObjectDetection,OwlViTModel:()=>v.OwlViTModel,OwlViTPreTrainedModel:()=>v.OwlViTPreTrainedModel,OwlViTProcessor:()=>rr.OwlViTProcessor,Owlv2ForObjectDetection:()=>v.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>rr.Owlv2ImageProcessor,Owlv2Model:()=>v.Owlv2Model,Owlv2PreTrainedModel:()=>v.Owlv2PreTrainedModel,Phi3ForCausalLM:()=>v.Phi3ForCausalLM,Phi3Model:()=>v.Phi3Model,Phi3PreTrainedModel:()=>v.Phi3PreTrainedModel,PhiForCausalLM:()=>v.PhiForCausalLM,PhiModel:()=>v.PhiModel,PhiPreTrainedModel:()=>v.PhiPreTrainedModel,Pipeline:()=>Gr.Pipeline,PreTrainedModel:()=>v.PreTrainedModel,PreTrainedTokenizer:()=>ar.PreTrainedTokenizer,PretrainedConfig:()=>Fp.PretrainedConfig,PretrainedMixin:()=>v.PretrainedMixin,Processor:()=>rr.Processor,PvtForImageClassification:()=>v.PvtForImageClassification,PvtImageProcessor:()=>rr.PvtImageProcessor,PvtModel:()=>v.PvtModel,PvtPreTrainedModel:()=>v.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>rr.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>v.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>v.PyAnnoteModel,PyAnnotePreTrainedModel:()=>v.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>rr.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>v.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>Gr.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>v.Qwen2ForCausalLM,Qwen2Model:()=>v.Qwen2Model,Qwen2PreTrainedModel:()=>v.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>ar.Qwen2Tokenizer,RTDetrForObjectDetection:()=>v.RTDetrForObjectDetection,RTDetrImageProcessor:()=>rr.RTDetrImageProcessor,RTDetrModel:()=>v.RTDetrModel,RTDetrObjectDetectionOutput:()=>v.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>v.RTDetrPreTrainedModel,RawImage:()=>ng.RawImage,ResNetForImageClassification:()=>v.ResNetForImageClassification,ResNetModel:()=>v.ResNetModel,ResNetPreTrainedModel:()=>v.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>v.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>v.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>v.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>v.RoFormerForTokenClassification,RoFormerModel:()=>v.RoFormerModel,RoFormerPreTrainedModel:()=>v.RoFormerPreTrainedModel,RoFormerTokenizer:()=>ar.RoFormerTokenizer,RobertaForMaskedLM:()=>v.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>v.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>v.RobertaForSequenceClassification,RobertaForTokenClassification:()=>v.RobertaForTokenClassification,RobertaModel:()=>v.RobertaModel,RobertaPreTrainedModel:()=>v.RobertaPreTrainedModel,RobertaTokenizer:()=>ar.RobertaTokenizer,SamImageProcessor:()=>rr.SamImageProcessor,SamImageSegmentationOutput:()=>v.SamImageSegmentationOutput,SamModel:()=>v.SamModel,SamPreTrainedModel:()=>v.SamPreTrainedModel,SamProcessor:()=>rr.SamProcessor,SapiensFeatureExtractor:()=>rr.SapiensFeatureExtractor,SapiensForDepthEstimation:()=>v.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>v.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>v.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>v.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>rr.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>rr.SegformerFeatureExtractor,SegformerForImageClassification:()=>v.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>v.SegformerForSemanticSegmentation,SegformerModel:()=>v.SegformerModel,SegformerPreTrainedModel:()=>v.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>v.Seq2SeqLMOutput,SequenceClassifierOutput:()=>v.SequenceClassifierOutput,SiglipImageProcessor:()=>rr.SiglipImageProcessor,SiglipModel:()=>v.SiglipModel,SiglipPreTrainedModel:()=>v.SiglipPreTrainedModel,SiglipTextModel:()=>v.SiglipTextModel,SiglipTokenizer:()=>ar.SiglipTokenizer,SiglipVisionModel:()=>v.SiglipVisionModel,SpeechT5FeatureExtractor:()=>rr.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>v.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>v.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>v.SpeechT5HifiGan,SpeechT5Model:()=>v.SpeechT5Model,SpeechT5PreTrainedModel:()=>v.SpeechT5PreTrainedModel,SpeechT5Processor:()=>rr.SpeechT5Processor,SpeechT5Tokenizer:()=>ar.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>v.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>v.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>v.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>v.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>v.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>ar.SqueezeBertTokenizer,StableLmForCausalLM:()=>v.StableLmForCausalLM,StableLmModel:()=>v.StableLmModel,StableLmPreTrainedModel:()=>v.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>v.Starcoder2ForCausalLM,Starcoder2Model:()=>v.Starcoder2Model,Starcoder2PreTrainedModel:()=>v.Starcoder2PreTrainedModel,StoppingCriteria:()=>gd.StoppingCriteria,StoppingCriteriaList:()=>gd.StoppingCriteriaList,SummarizationPipeline:()=>Gr.SummarizationPipeline,Swin2SRForImageSuperResolution:()=>v.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>rr.Swin2SRImageProcessor,Swin2SRModel:()=>v.Swin2SRModel,Swin2SRPreTrainedModel:()=>v.Swin2SRPreTrainedModel,SwinForImageClassification:()=>v.SwinForImageClassification,SwinModel:()=>v.SwinModel,SwinPreTrainedModel:()=>v.SwinPreTrainedModel,T5ForConditionalGeneration:()=>v.T5ForConditionalGeneration,T5Model:()=>v.T5Model,T5PreTrainedModel:()=>v.T5PreTrainedModel,T5Tokenizer:()=>ar.T5Tokenizer,TableTransformerForObjectDetection:()=>v.TableTransformerForObjectDetection,TableTransformerModel:()=>v.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>v.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>v.TableTransformerPreTrainedModel,Tensor:()=>dn.Tensor,Text2TextGenerationPipeline:()=>Gr.Text2TextGenerationPipeline,TextClassificationPipeline:()=>Gr.TextClassificationPipeline,TextGenerationPipeline:()=>Gr.TextGenerationPipeline,TextStreamer:()=>Op.TextStreamer,TextToAudioPipeline:()=>Gr.TextToAudioPipeline,TokenClassificationPipeline:()=>Gr.TokenClassificationPipeline,TokenClassifierOutput:()=>v.TokenClassifierOutput,TokenizerModel:()=>ar.TokenizerModel,TrOCRForCausalLM:()=>v.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>v.TrOCRPreTrainedModel,TranslationPipeline:()=>Gr.TranslationPipeline,UniSpeechForCTC:()=>v.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>v.UniSpeechForSequenceClassification,UniSpeechModel:()=>v.UniSpeechModel,UniSpeechPreTrainedModel:()=>v.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>v.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>v.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>v.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>v.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>v.UniSpeechSatPreTrainedModel,ViTFeatureExtractor:()=>rr.ViTFeatureExtractor,ViTForImageClassification:()=>v.ViTForImageClassification,ViTImageProcessor:()=>rr.ViTImageProcessor,ViTMAEModel:()=>v.ViTMAEModel,ViTMAEPreTrainedModel:()=>v.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>v.ViTMSNForImageClassification,ViTMSNModel:()=>v.ViTMSNModel,ViTMSNPreTrainedModel:()=>v.ViTMSNPreTrainedModel,ViTModel:()=>v.ViTModel,ViTPreTrainedModel:()=>v.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>v.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>v.VitMatteForImageMatting,VitMatteImageProcessor:()=>rr.VitMatteImageProcessor,VitMattePreTrainedModel:()=>v.VitMattePreTrainedModel,VitsModel:()=>v.VitsModel,VitsModelOutput:()=>v.VitsModelOutput,VitsPreTrainedModel:()=>v.VitsPreTrainedModel,VitsTokenizer:()=>ar.VitsTokenizer,Wav2Vec2BertForCTC:()=>v.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>v.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>v.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>v.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>ar.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>rr.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>v.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>v.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>v.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>v.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>v.Wav2Vec2PreTrainedModel,Wav2Vec2ProcessorWithLM:()=>rr.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>v.WavLMForAudioFrameClassification,WavLMForCTC:()=>v.WavLMForCTC,WavLMForSequenceClassification:()=>v.WavLMForSequenceClassification,WavLMForXVector:()=>v.WavLMForXVector,WavLMModel:()=>v.WavLMModel,WavLMPreTrainedModel:()=>v.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>rr.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>v.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>v.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>rr.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>v.WhisperForConditionalGeneration,WhisperModel:()=>v.WhisperModel,WhisperPreTrainedModel:()=>v.WhisperPreTrainedModel,WhisperProcessor:()=>rr.WhisperProcessor,WhisperTextStreamer:()=>Op.WhisperTextStreamer,WhisperTokenizer:()=>ar.WhisperTokenizer,XLMForQuestionAnswering:()=>v.XLMForQuestionAnswering,XLMForSequenceClassification:()=>v.XLMForSequenceClassification,XLMForTokenClassification:()=>v.XLMForTokenClassification,XLMModel:()=>v.XLMModel,XLMPreTrainedModel:()=>v.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>v.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>v.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>v.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>v.XLMRobertaForTokenClassification,XLMRobertaModel:()=>v.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>v.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>ar.XLMRobertaTokenizer,XLMTokenizer:()=>ar.XLMTokenizer,XLMWithLMHeadModel:()=>v.XLMWithLMHeadModel,XVectorOutput:()=>v.XVectorOutput,YolosFeatureExtractor:()=>rr.YolosFeatureExtractor,YolosForObjectDetection:()=>v.YolosForObjectDetection,YolosModel:()=>v.YolosModel,YolosObjectDetectionOutput:()=>v.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>v.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>Gr.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>Gr.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>Gr.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>Gr.ZeroShotObjectDetectionPipeline,bankers_round:()=>Fn.bankers_round,cat:()=>dn.cat,cos_sim:()=>Fn.cos_sim,dot:()=>Fn.dot,dynamic_time_warping:()=>Fn.dynamic_time_warping,env:()=>rg.env,full:()=>dn.full,full_like:()=>dn.full_like,getKeyValueShapes:()=>Fp.getKeyValueShapes,hamming:()=>na.hamming,hanning:()=>na.hanning,interpolate:()=>dn.interpolate,interpolate_4d:()=>dn.interpolate_4d,interpolate_data:()=>Fn.interpolate_data,is_chinese_char:()=>ar.is_chinese_char,layer_norm:()=>dn.layer_norm,log_softmax:()=>Fn.log_softmax,magnitude:()=>Fn.magnitude,matmul:()=>dn.matmul,max:()=>Fn.max,mean:()=>dn.mean,mean_pooling:()=>dn.mean_pooling,medianFilter:()=>Fn.medianFilter,mel_filter_bank:()=>na.mel_filter_bank,min:()=>Fn.min,ones:()=>dn.ones,ones_like:()=>dn.ones_like,permute:()=>dn.permute,permute_data:()=>Fn.permute_data,pipeline:()=>Gr.pipeline,quantize_embeddings:()=>dn.quantize_embeddings,read_audio:()=>na.read_audio,rfft:()=>dn.rfft,round:()=>Fn.round,softmax:()=>Fn.softmax,spectrogram:()=>na.spectrogram,stack:()=>dn.stack,std_mean:()=>dn.std_mean,topk:()=>dn.topk,window_function:()=>na.window_function,zeros:()=>dn.zeros,zeros_like:()=>dn.zeros_like});var rg=qr("./src/env.js"),Gr=qr("./src/pipelines.js"),v=qr("./src/models.js"),ar=qr("./src/tokenizers.js"),rr=qr("./src/processors.js"),Fp=qr("./src/configs.js"),na=qr("./src/utils/audio.js"),ng=qr("./src/utils/image.js"),dn=qr("./src/utils/tensor.js"),Fn=qr("./src/utils/maths.js"),Op=qr("./src/generation/streamers.js"),gd=qr("./src/generation/stopping_criteria.js");p.ASTFeatureExtractor;p.ASTForAudioClassification;p.ASTModel;p.ASTPreTrainedModel;p.AlbertForMaskedLM;p.AlbertForQuestionAnswering;p.AlbertForSequenceClassification;p.AlbertModel;p.AlbertPreTrainedModel;p.AlbertTokenizer;p.AudioClassificationPipeline;p.AutoConfig;p.AutoModel;p.AutoModelForAudioClassification;p.AutoModelForAudioFrameClassification;p.AutoModelForCTC;p.AutoModelForCausalLM;p.AutoModelForDepthEstimation;p.AutoModelForDocumentQuestionAnswering;p.AutoModelForImageClassification;p.AutoModelForImageFeatureExtraction;p.AutoModelForImageMatting;p.AutoModelForImageSegmentation;p.AutoModelForImageToImage;p.AutoModelForMaskGeneration;p.AutoModelForMaskedLM;p.AutoModelForNormalEstimation;p.AutoModelForObjectDetection;p.AutoModelForQuestionAnswering;p.AutoModelForSemanticSegmentation;p.AutoModelForSeq2SeqLM;p.AutoModelForSequenceClassification;p.AutoModelForSpeechSeq2Seq;p.AutoModelForTextToSpectrogram;p.AutoModelForTextToWaveform;p.AutoModelForTokenClassification;p.AutoModelForUniversalSegmentation;p.AutoModelForVision2Seq;p.AutoModelForXVector;p.AutoModelForZeroShotObjectDetection;p.AutoProcessor;p.AutoTokenizer;p.AutomaticSpeechRecognitionPipeline;p.BartForConditionalGeneration;p.BartForSequenceClassification;p.BartModel;p.BartPretrainedModel;p.BartTokenizer;p.BaseModelOutput;p.BaseStreamer;p.BeitFeatureExtractor;p.BeitForImageClassification;p.BeitModel;p.BeitPreTrainedModel;p.BertForMaskedLM;p.BertForQuestionAnswering;p.BertForSequenceClassification;p.BertForTokenClassification;p.BertModel;p.BertPreTrainedModel;p.BertTokenizer;p.BitImageProcessor;p.BlenderbotForConditionalGeneration;p.BlenderbotModel;p.BlenderbotPreTrainedModel;p.BlenderbotSmallForConditionalGeneration;p.BlenderbotSmallModel;p.BlenderbotSmallPreTrainedModel;p.BlenderbotSmallTokenizer;p.BlenderbotTokenizer;p.BloomForCausalLM;p.BloomModel;p.BloomPreTrainedModel;p.BloomTokenizer;p.CLIPFeatureExtractor;p.CLIPImageProcessor;p.CLIPModel;p.CLIPPreTrainedModel;p.CLIPSegForImageSegmentation;p.CLIPSegModel;p.CLIPSegPreTrainedModel;p.CLIPTextModel;p.CLIPTextModelWithProjection;p.CLIPTokenizer;p.CLIPVisionModel;p.CLIPVisionModelWithProjection;p.CamembertForMaskedLM;p.CamembertForQuestionAnswering;p.CamembertForSequenceClassification;p.CamembertForTokenClassification;p.CamembertModel;p.CamembertPreTrainedModel;p.CamembertTokenizer;p.CausalLMOutput;p.CausalLMOutputWithPast;p.ChineseCLIPFeatureExtractor;p.ChineseCLIPModel;p.ChineseCLIPPreTrainedModel;p.ClapAudioModelWithProjection;p.ClapFeatureExtractor;p.ClapModel;p.ClapPreTrainedModel;p.ClapTextModelWithProjection;p.CodeGenForCausalLM;p.CodeGenModel;p.CodeGenPreTrainedModel;p.CodeGenTokenizer;p.CodeLlamaTokenizer;p.CohereForCausalLM;p.CohereModel;p.CoherePreTrainedModel;p.CohereTokenizer;p.ConvBertForMaskedLM;p.ConvBertForQuestionAnswering;p.ConvBertForSequenceClassification;p.ConvBertForTokenClassification;p.ConvBertModel;p.ConvBertPreTrainedModel;p.ConvBertTokenizer;p.ConvNextFeatureExtractor;p.ConvNextForImageClassification;p.ConvNextImageProcessor;p.ConvNextModel;p.ConvNextPreTrainedModel;p.ConvNextV2ForImageClassification;p.ConvNextV2Model;p.ConvNextV2PreTrainedModel;p.DPTFeatureExtractor;p.DPTForDepthEstimation;p.DPTImageProcessor;p.DPTModel;p.DPTPreTrainedModel;p.DebertaForMaskedLM;p.DebertaForQuestionAnswering;p.DebertaForSequenceClassification;p.DebertaForTokenClassification;p.DebertaModel;p.DebertaPreTrainedModel;p.DebertaTokenizer;p.DebertaV2ForMaskedLM;p.DebertaV2ForQuestionAnswering;p.DebertaV2ForSequenceClassification;p.DebertaV2ForTokenClassification;p.DebertaV2Model;p.DebertaV2PreTrainedModel;p.DebertaV2Tokenizer;p.DecisionTransformerModel;p.DecisionTransformerPreTrainedModel;p.DeiTFeatureExtractor;p.DeiTForImageClassification;p.DeiTModel;p.DeiTPreTrainedModel;p.DepthAnythingForDepthEstimation;p.DepthAnythingPreTrainedModel;p.DepthEstimationPipeline;p.DepthProForDepthEstimation;p.DepthProPreTrainedModel;p.DetrFeatureExtractor;p.DetrForObjectDetection;p.DetrForSegmentation;p.DetrModel;p.DetrObjectDetectionOutput;p.DetrPreTrainedModel;p.DetrSegmentationOutput;p.Dinov2ForImageClassification;p.Dinov2Model;p.Dinov2PreTrainedModel;p.DistilBertForMaskedLM;p.DistilBertForQuestionAnswering;p.DistilBertForSequenceClassification;p.DistilBertForTokenClassification;p.DistilBertModel;p.DistilBertPreTrainedModel;p.DistilBertTokenizer;p.DocumentQuestionAnsweringPipeline;p.DonutFeatureExtractor;p.DonutImageProcessor;p.DonutSwinModel;p.DonutSwinPreTrainedModel;p.EfficientNetForImageClassification;p.EfficientNetImageProcessor;p.EfficientNetModel;p.EfficientNetPreTrainedModel;p.ElectraForMaskedLM;p.ElectraForQuestionAnswering;p.ElectraForSequenceClassification;p.ElectraForTokenClassification;p.ElectraModel;p.ElectraPreTrainedModel;p.ElectraTokenizer;p.EosTokenCriteria;p.EsmForMaskedLM;p.EsmForSequenceClassification;p.EsmForTokenClassification;p.EsmModel;p.EsmPreTrainedModel;p.EsmTokenizer;p.FFT;p.FalconForCausalLM;p.FalconModel;p.FalconPreTrainedModel;p.FalconTokenizer;p.FastViTForImageClassification;p.FastViTModel;p.FastViTPreTrainedModel;p.FeatureExtractionPipeline;p.FeatureExtractor;p.FillMaskPipeline;p.Florence2ForConditionalGeneration;p.Florence2PreTrainedModel;p.Florence2Processor;p.GLPNFeatureExtractor;p.GLPNForDepthEstimation;p.GLPNModel;p.GLPNPreTrainedModel;p.GPT2LMHeadModel;p.GPT2Model;p.GPT2PreTrainedModel;p.GPT2Tokenizer;p.GPTBigCodeForCausalLM;p.GPTBigCodeModel;p.GPTBigCodePreTrainedModel;p.GPTJForCausalLM;p.GPTJModel;p.GPTJPreTrainedModel;p.GPTNeoForCausalLM;p.GPTNeoModel;p.GPTNeoPreTrainedModel;p.GPTNeoXForCausalLM;p.GPTNeoXModel;p.GPTNeoXPreTrainedModel;p.GPTNeoXTokenizer;p.Gemma2ForCausalLM;p.Gemma2Model;p.Gemma2PreTrainedModel;p.GemmaForCausalLM;p.GemmaModel;p.GemmaPreTrainedModel;p.GemmaTokenizer;p.GraniteForCausalLM;p.GraniteModel;p.GranitePreTrainedModel;p.Grok1Tokenizer;p.GroupViTModel;p.GroupViTPreTrainedModel;p.HerbertTokenizer;p.HieraForImageClassification;p.HieraModel;p.HieraPreTrainedModel;p.HubertForCTC;p.HubertForSequenceClassification;p.HubertModel;p.HubertPreTrainedModel;p.ImageClassificationPipeline;p.ImageFeatureExtractionPipeline;p.ImageFeatureExtractor;p.ImageMattingOutput;p.ImageSegmentationPipeline;p.ImageToImagePipeline;p.ImageToTextPipeline;p.InterruptableStoppingCriteria;p.JAISLMHeadModel;p.JAISModel;p.JAISPreTrainedModel;p.LlamaForCausalLM;p.LlamaModel;p.LlamaPreTrainedModel;p.LlamaTokenizer;p.LlavaForConditionalGeneration;p.LlavaPreTrainedModel;p.LongT5ForConditionalGeneration;p.LongT5Model;p.LongT5PreTrainedModel;p.M2M100ForConditionalGeneration;p.M2M100Model;p.M2M100PreTrainedModel;p.M2M100Tokenizer;p.MBart50Tokenizer;p.MBartForCausalLM;p.MBartForConditionalGeneration;p.MBartForSequenceClassification;p.MBartModel;p.MBartPreTrainedModel;p.MBartTokenizer;p.MPNetForMaskedLM;p.MPNetForQuestionAnswering;p.MPNetForSequenceClassification;p.MPNetForTokenClassification;p.MPNetModel;p.MPNetPreTrainedModel;p.MPNetTokenizer;p.MT5ForConditionalGeneration;p.MT5Model;p.MT5PreTrainedModel;p.MarianMTModel;p.MarianModel;p.MarianPreTrainedModel;p.MarianTokenizer;p.MaskFormerFeatureExtractor;p.MaskFormerForInstanceSegmentation;p.MaskFormerModel;p.MaskFormerPreTrainedModel;p.MaskedLMOutput;p.MaxLengthCriteria;p.MistralForCausalLM;p.MistralModel;p.MistralPreTrainedModel;p.MobileBertForMaskedLM;p.MobileBertForQuestionAnswering;p.MobileBertForSequenceClassification;p.MobileBertModel;p.MobileBertPreTrainedModel;p.MobileBertTokenizer;p.MobileLLMForCausalLM;p.MobileLLMModel;p.MobileLLMPreTrainedModel;p.MobileNetV1FeatureExtractor;p.MobileNetV1ForImageClassification;p.MobileNetV1Model;p.MobileNetV1PreTrainedModel;p.MobileNetV2FeatureExtractor;p.MobileNetV2ForImageClassification;p.MobileNetV2Model;p.MobileNetV2PreTrainedModel;p.MobileNetV3FeatureExtractor;p.MobileNetV3ForImageClassification;p.MobileNetV3Model;p.MobileNetV3PreTrainedModel;p.MobileNetV4FeatureExtractor;p.MobileNetV4ForImageClassification;p.MobileNetV4Model;p.MobileNetV4PreTrainedModel;p.MobileViTFeatureExtractor;p.MobileViTForImageClassification;p.MobileViTImageProcessor;p.MobileViTModel;p.MobileViTPreTrainedModel;p.MobileViTV2ForImageClassification;p.MobileViTV2Model;p.MobileViTV2PreTrainedModel;p.ModelOutput;p.Moondream1ForConditionalGeneration;p.MptForCausalLM;p.MptModel;p.MptPreTrainedModel;p.MusicgenForCausalLM;p.MusicgenForConditionalGeneration;p.MusicgenModel;p.MusicgenPreTrainedModel;p.NllbTokenizer;p.NomicBertModel;p.NomicBertPreTrainedModel;p.NougatImageProcessor;p.NougatTokenizer;p.OPTForCausalLM;p.OPTModel;p.OPTPreTrainedModel;p.ObjectDetectionPipeline;p.OlmoForCausalLM;p.OlmoModel;p.OlmoPreTrainedModel;p.OpenELMForCausalLM;p.OpenELMModel;p.OpenELMPreTrainedModel;p.OwlViTFeatureExtractor;p.OwlViTForObjectDetection;p.OwlViTModel;p.OwlViTPreTrainedModel;p.OwlViTProcessor;p.Owlv2ForObjectDetection;p.Owlv2ImageProcessor;p.Owlv2Model;p.Owlv2PreTrainedModel;p.Phi3ForCausalLM;p.Phi3Model;p.Phi3PreTrainedModel;p.PhiForCausalLM;p.PhiModel;p.PhiPreTrainedModel;p.Pipeline;p.PreTrainedModel;p.PreTrainedTokenizer;p.PretrainedConfig;p.PretrainedMixin;p.Processor;p.PvtForImageClassification;p.PvtImageProcessor;p.PvtModel;p.PvtPreTrainedModel;p.PyAnnoteFeatureExtractor;p.PyAnnoteForAudioFrameClassification;p.PyAnnoteModel;p.PyAnnotePreTrainedModel;p.PyAnnoteProcessor;p.QuestionAnsweringModelOutput;p.QuestionAnsweringPipeline;p.Qwen2ForCausalLM;p.Qwen2Model;p.Qwen2PreTrainedModel;p.Qwen2Tokenizer;p.RTDetrForObjectDetection;p.RTDetrImageProcessor;p.RTDetrModel;p.RTDetrObjectDetectionOutput;p.RTDetrPreTrainedModel;p.RawImage;p.ResNetForImageClassification;p.ResNetModel;p.ResNetPreTrainedModel;p.RoFormerForMaskedLM;p.RoFormerForQuestionAnswering;p.RoFormerForSequenceClassification;p.RoFormerForTokenClassification;p.RoFormerModel;p.RoFormerPreTrainedModel;p.RoFormerTokenizer;p.RobertaForMaskedLM;p.RobertaForQuestionAnswering;p.RobertaForSequenceClassification;p.RobertaForTokenClassification;p.RobertaModel;p.RobertaPreTrainedModel;p.RobertaTokenizer;p.SamImageProcessor;p.SamImageSegmentationOutput;p.SamModel;p.SamPreTrainedModel;p.SamProcessor;p.SapiensFeatureExtractor;p.SapiensForDepthEstimation;p.SapiensForNormalEstimation;p.SapiensForSemanticSegmentation;p.SapiensPreTrainedModel;p.SeamlessM4TFeatureExtractor;p.SegformerFeatureExtractor;p.SegformerForImageClassification;p.SegformerForSemanticSegmentation;p.SegformerModel;p.SegformerPreTrainedModel;p.Seq2SeqLMOutput;p.SequenceClassifierOutput;p.SiglipImageProcessor;p.SiglipModel;p.SiglipPreTrainedModel;p.SiglipTextModel;p.SiglipTokenizer;p.SiglipVisionModel;p.SpeechT5FeatureExtractor;p.SpeechT5ForSpeechToText;p.SpeechT5ForTextToSpeech;p.SpeechT5HifiGan;p.SpeechT5Model;p.SpeechT5PreTrainedModel;p.SpeechT5Processor;p.SpeechT5Tokenizer;p.SqueezeBertForMaskedLM;p.SqueezeBertForQuestionAnswering;p.SqueezeBertForSequenceClassification;p.SqueezeBertModel;p.SqueezeBertPreTrainedModel;p.SqueezeBertTokenizer;p.StableLmForCausalLM;p.StableLmModel;p.StableLmPreTrainedModel;p.Starcoder2ForCausalLM;p.Starcoder2Model;p.Starcoder2PreTrainedModel;p.StoppingCriteria;p.StoppingCriteriaList;p.SummarizationPipeline;p.Swin2SRForImageSuperResolution;p.Swin2SRImageProcessor;p.Swin2SRModel;p.Swin2SRPreTrainedModel;p.SwinForImageClassification;p.SwinModel;p.SwinPreTrainedModel;p.T5ForConditionalGeneration;p.T5Model;p.T5PreTrainedModel;p.T5Tokenizer;p.TableTransformerForObjectDetection;p.TableTransformerModel;p.TableTransformerObjectDetectionOutput;p.TableTransformerPreTrainedModel;p.Tensor;p.Text2TextGenerationPipeline;p.TextClassificationPipeline;p.TextGenerationPipeline;p.TextStreamer;p.TextToAudioPipeline;p.TokenClassificationPipeline;p.TokenClassifierOutput;p.TokenizerModel;p.TrOCRForCausalLM;p.TrOCRPreTrainedModel;p.TranslationPipeline;p.UniSpeechForCTC;p.UniSpeechForSequenceClassification;p.UniSpeechModel;p.UniSpeechPreTrainedModel;p.UniSpeechSatForAudioFrameClassification;p.UniSpeechSatForCTC;p.UniSpeechSatForSequenceClassification;p.UniSpeechSatModel;p.UniSpeechSatPreTrainedModel;p.ViTFeatureExtractor;p.ViTForImageClassification;p.ViTImageProcessor;p.ViTMAEModel;p.ViTMAEPreTrainedModel;p.ViTMSNForImageClassification;p.ViTMSNModel;p.ViTMSNPreTrainedModel;p.ViTModel;p.ViTPreTrainedModel;p.VisionEncoderDecoderModel;p.VitMatteForImageMatting;p.VitMatteImageProcessor;p.VitMattePreTrainedModel;p.VitsModel;p.VitsModelOutput;p.VitsPreTrainedModel;p.VitsTokenizer;p.Wav2Vec2BertForCTC;p.Wav2Vec2BertForSequenceClassification;p.Wav2Vec2BertModel;p.Wav2Vec2BertPreTrainedModel;p.Wav2Vec2CTCTokenizer;p.Wav2Vec2FeatureExtractor;p.Wav2Vec2ForAudioFrameClassification;p.Wav2Vec2ForCTC;p.Wav2Vec2ForSequenceClassification;p.Wav2Vec2Model;p.Wav2Vec2PreTrainedModel;p.Wav2Vec2ProcessorWithLM;p.WavLMForAudioFrameClassification;p.WavLMForCTC;p.WavLMForSequenceClassification;p.WavLMForXVector;p.WavLMModel;p.WavLMPreTrainedModel;p.WeSpeakerFeatureExtractor;p.WeSpeakerResNetModel;p.WeSpeakerResNetPreTrainedModel;p.WhisperFeatureExtractor;p.WhisperForConditionalGeneration;p.WhisperModel;p.WhisperPreTrainedModel;p.WhisperProcessor;p.WhisperTextStreamer;p.WhisperTokenizer;p.XLMForQuestionAnswering;p.XLMForSequenceClassification;p.XLMForTokenClassification;p.XLMModel;p.XLMPreTrainedModel;p.XLMRobertaForMaskedLM;p.XLMRobertaForQuestionAnswering;p.XLMRobertaForSequenceClassification;p.XLMRobertaForTokenClassification;p.XLMRobertaModel;p.XLMRobertaPreTrainedModel;p.XLMRobertaTokenizer;p.XLMTokenizer;p.XLMWithLMHeadModel;p.XVectorOutput;p.YolosFeatureExtractor;p.YolosForObjectDetection;p.YolosModel;p.YolosObjectDetectionOutput;p.YolosPreTrainedModel;p.ZeroShotAudioClassificationPipeline;p.ZeroShotClassificationPipeline;p.ZeroShotImageClassificationPipeline;p.ZeroShotObjectDetectionPipeline;p.bankers_round;p.cat;p.cos_sim;p.dot;p.dynamic_time_warping;p.env;p.full;p.full_like;p.getKeyValueShapes;p.hamming;p.hanning;p.interpolate;p.interpolate_4d;p.interpolate_data;p.is_chinese_char;p.layer_norm;p.log_softmax;p.magnitude;p.matmul;p.max;p.mean;p.mean_pooling;p.medianFilter;p.mel_filter_bank;p.min;p.ones;p.ones_like;p.permute;p.permute_data;var ig=p.pipeline;p.quantize_embeddings;p.read_audio;p.rfft;p.round;p.softmax;p.spectrogram;p.stack;p.std_mean;p.topk;p.window_function;p.zeros;p.zeros_like;const Bp=10,tm=(we=0)=>Y=>`\x1B[${Y+we}m`,rm=(we=0)=>Y=>`\x1B[${38+we};5;${Y}m`,nm=(we=0)=>(Y,P,$)=>`\x1B[${38+we};2;${Y};${P};${$}m`,Yr={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],overline:[53,55],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],gray:[90,39],grey:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgGray:[100,49],bgGrey:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};Object.keys(Yr.modifier);const sg=Object.keys(Yr.color),og=Object.keys(Yr.bgColor);[...sg,...og];function ag(){const we=new Map;for(const[Y,P]of Object.entries(Yr)){for(const[$,se]of Object.entries(P))Yr[$]={open:`\x1B[${se[0]}m`,close:`\x1B[${se[1]}m`},P[$]=Yr[$],we.set(se[0],se[1]);Object.defineProperty(Yr,Y,{value:P,enumerable:!1})}return Object.defineProperty(Yr,"codes",{value:we,enumerable:!1}),Yr.color.close="\x1B[39m",Yr.bgColor.close="\x1B[49m",Yr.color.ansi=tm(),Yr.color.ansi256=rm(),Yr.color.ansi16m=nm(),Yr.bgColor.ansi=tm(Bp),Yr.bgColor.ansi256=rm(Bp),Yr.bgColor.ansi16m=nm(Bp),Object.defineProperties(Yr,{rgbToAnsi256:{value(Y,P,$){return Y===P&&P===$?Y<8?16:Y>248?231:Math.round((Y-8)/247*24)+232:16+36*Math.round(Y/255*5)+6*Math.round(P/255*5)+Math.round($/255*5)},enumerable:!1},hexToRgb:{value(Y){const P=/[a-f\d]{6}|[a-f\d]{3}/i.exec(Y.toString(16));if(!P)return[0,0,0];let[$]=P;$.length===3&&($=[...$].map(xe=>xe+xe).join(""));const se=Number.parseInt($,16);return[se>>16&255,se>>8&255,se&255]},enumerable:!1},hexToAnsi256:{value:Y=>Yr.rgbToAnsi256(...Yr.hexToRgb(Y)),enumerable:!1},ansi256ToAnsi:{value(Y){if(Y<8)return 30+Y;if(Y<16)return 90+(Y-8);let P,$,se;if(Y>=232)P=((Y-232)*10+8)/255,$=P,se=P;else{Y-=16;const Pe=Y%36;P=Math.floor(Y/36)/5,$=Math.floor(Pe/6)/5,se=Pe%6/5}const xe=Math.max(P,$,se)*2;if(xe===0)return 30;let Ie=30+(Math.round(se)<<2|Math.round($)<<1|Math.round(P));return xe===2&&(Ie+=60),Ie},enumerable:!1},rgbToAnsi:{value:(Y,P,$)=>Yr.ansi256ToAnsi(Yr.rgbToAnsi256(Y,P,$)),enumerable:!1},hexToAnsi:{value:Y=>Yr.ansi256ToAnsi(Yr.hexToAnsi256(Y)),enumerable:!1}}),Yr}const pi=ag(),zc=(()=>{if(navigator.userAgentData){const we=navigator.userAgentData.brands.find(({brand:Y})=>Y==="Chromium");if(we&&we.version>93)return 3}return/\b(Chrome|Chromium)\//.test(navigator.userAgent)?1:0})(),im=zc!==0&&{level:zc,hasBasic:!0,has256:zc>=2,has16m:zc>=3},lg={stdout:im,stderr:im};function ug(we,Y,P){let $=we.indexOf(Y);if($===-1)return we;const se=Y.length;let xe=0,Ie="";do Ie+=we.slice(xe,$)+Y+P,xe=$+se,$=we.indexOf(Y,xe);while($!==-1);return Ie+=we.slice(xe),Ie}function dg(we,Y,P,$){let se=0,xe="";do{const Ie=we[$-1]==="\r";xe+=we.slice(se,Ie?$-1:$)+Y+(Ie?`\r
`:`
`)+P,se=$+1,$=we.indexOf(`
`,se)}while($!==-1);return xe+=we.slice(se),xe}const{stdout:sm,stderr:om}=lg,Lp=Symbol("GENERATOR"),sa=Symbol("STYLER"),Md=Symbol("IS_EMPTY"),am=["ansi","ansi","ansi256","ansi16m"],oa=Object.create(null),cg=(we,Y={})=>{if(Y.level&&!(Number.isInteger(Y.level)&&Y.level>=0&&Y.level<=3))throw new Error("The `level` option should be an integer from 0 to 3");const P=sm?sm.level:0;we.level=Y.level===void 0?P:Y.level},pg=we=>{const Y=(...P)=>P.join(" ");return cg(Y,we),Object.setPrototypeOf(Y,xd.prototype),Y};function xd(we){return pg(we)}Object.setPrototypeOf(xd.prototype,Function.prototype);for(const[we,Y]of Object.entries(pi))oa[we]={get(){const P=Rc(this,Np(Y.open,Y.close,this[sa]),this[Md]);return Object.defineProperty(this,we,{value:P}),P}};oa.visible={get(){const we=Rc(this,this[sa],!0);return Object.defineProperty(this,"visible",{value:we}),we}};const Rp=(we,Y,P,...$)=>we==="rgb"?Y==="ansi16m"?pi[P].ansi16m(...$):Y==="ansi256"?pi[P].ansi256(pi.rgbToAnsi256(...$)):pi[P].ansi(pi.rgbToAnsi(...$)):we==="hex"?Rp("rgb",Y,P,...pi.hexToRgb(...$)):pi[P][we](...$),hg=["rgb","hex","ansi256"];for(const we of hg){oa[we]={get(){const{level:P}=this;return function(...$){const se=Np(Rp(we,am[P],"color",...$),pi.color.close,this[sa]);return Rc(this,se,this[Md])}}};const Y="bg"+we[0].toUpperCase()+we.slice(1);oa[Y]={get(){const{level:P}=this;return function(...$){const se=Np(Rp(we,am[P],"bgColor",...$),pi.bgColor.close,this[sa]);return Rc(this,se,this[Md])}}}}const fg=Object.defineProperties(()=>{},{...oa,level:{enumerable:!0,get(){return this[Lp].level},set(we){this[Lp].level=we}}}),Np=(we,Y,P)=>{let $,se;return P===void 0?($=we,se=Y):($=P.openAll+we,se=Y+P.closeAll),{open:we,close:Y,openAll:$,closeAll:se,parent:P}},Rc=(we,Y,P)=>{const $=(...se)=>mg($,se.length===1?""+se[0]:se.join(" "));return Object.setPrototypeOf($,fg),$[Lp]=we,$[sa]=Y,$[Md]=P,$},mg=(we,Y)=>{if(we.level<=0||!Y)return we[Md]?"":Y;let P=we[sa];if(P===void 0)return Y;const{openAll:$,closeAll:se}=P;if(Y.includes("\x1B"))for(;P!==void 0;)Y=ug(Y,P.close,P.open),P=P.parent;const xe=Y.indexOf(`
`);return xe!==-1&&(Y=dg(Y,se,$,xe)),$+Y+se};Object.defineProperties(xd.prototype,oa);const aa=xd();xd({level:om?om.level:0});const _g={BASE_URL:"/NoLLMChat/",DEV:!1,MODE:"production",PROD:!0,SSR:!1},Nc=(typeof _g<"u",typeof window<"u"&&typeof window.localStorage<"u"?window.localStorage.getItem("__DEBUG__")==="true":!1),la=console.log,gm=(...we)=>we.map(Y=>typeof Y=="object"?JSON.stringify(Y):Y).join(`
`),gg=(...we)=>Nc?la(aa.blueBright(gm(...we))):void 0,wg=(...we)=>{Nc&&(la(aa.redBright("ERROR:")),console.error(...we),la(aa.redBright("-".repeat(10))))},yg=(...we)=>{Nc&&(la(aa.yellowBright("WARN:")),console.warn(...we),la(aa.yellowBright("-".repeat(10))))},jp=(...we)=>Nc?la(aa.greenBright(gm(...we))):void 0,bd=new Map,wm="_WORKER_INIT_";function vd(we,Y,P){if(!bd.get(we)&&we!==wm){yg("[No process found for message]",we);return}self.postMessage({messageId:we,type:Y,payload:P}),jp("[Message sent to main thread]",{id:we,type:Y,payload:P})}function bg(we){return async Y=>{try{const P=await we(Y);vd(Y.messageId,"complete",P)}catch(P){wg(P),vd(Y.messageId,"error",{error:P instanceof Error?P.message:"An error occurred",error_code:"UNKNOWN_ERROR"})}finally{bd.delete(Y.messageId)}}}function Mg(we,Y){self.addEventListener("message",async P=>{bd.set(P.data.messageId,Promise.race([bg(we)(P.data),new Promise($=>setTimeout(()=>$(!0),12e4)).then(()=>{bd.has(P.data.messageId)&&(vd(P.data.messageId,"error",{error:"Operation timed out",error_code:"TIMEOUT_ERROR"}),bd.delete(P.data.messageId))})])),vd(P.data.messageId,"started","Started processing")})}async function vg(we){vd(wm,"complete","Worker initialized")}let wd;async function xg(we){switch(we.type){case"load":{const[Y,P]=we.payload;return jp("Loading model:",Y,P),(!wd||wd.model.name!==Y)&&(wd=await ig("feature-extraction",Y,P)),!0}case"embedding":{if(!wd)throw new Error("Pipe is not ready yet.");jp("Embedding:",we.payload);const[Y,P]=we.payload;return(await wd(Y,P)).tolist()}default:throw new Error("Invalid operation")}}Mg(xg);gg("Embedding worker initialized");vg();
