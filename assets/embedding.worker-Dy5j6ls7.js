function F_(Ae){return Ae&&Ae.__esModule&&Object.prototype.hasOwnProperty.call(Ae,"default")?Ae.default:Ae}var Gf={exports:{}},on=Gf.exports={},di,ci;function kp(){throw new Error("setTimeout has not been defined")}function Pp(){throw new Error("clearTimeout has not been defined")}(function(){try{typeof setTimeout=="function"?di=setTimeout:di=kp}catch{di=kp}try{typeof clearTimeout=="function"?ci=clearTimeout:ci=Pp}catch{ci=Pp}})();function qf(Ae){if(di===setTimeout)return setTimeout(Ae,0);if((di===kp||!di)&&setTimeout)return di=setTimeout,setTimeout(Ae,0);try{return di(Ae,0)}catch{try{return di.call(null,Ae,0)}catch{return di.call(this,Ae,0)}}}function O_(Ae){if(ci===clearTimeout)return clearTimeout(Ae);if((ci===Pp||!ci)&&clearTimeout)return ci=clearTimeout,clearTimeout(Ae);try{return ci(Ae)}catch{try{return ci.call(null,Ae)}catch{return ci.call(this,Ae)}}}var Ei=[],sa=!1,Ts,Ac=-1;function B_(){!sa||!Ts||(sa=!1,Ts.length?Ei=Ts.concat(Ei):Ac=-1,Ei.length&&Hf())}function Hf(){if(!sa){var Ae=qf(B_);sa=!0;for(var ie=Ei.length;ie;){for(Ts=Ei,Ei=[];++Ac<ie;)Ts&&Ts[Ac].run();Ac=-1,ie=Ei.length}Ts=null,sa=!1,O_(Ae)}}on.nextTick=function(Ae){var ie=new Array(arguments.length-1);if(arguments.length>1)for(var I=1;I<arguments.length;I++)ie[I-1]=arguments[I];Ei.push(new Kf(Ae,ie)),Ei.length===1&&!sa&&qf(Hf)};function Kf(Ae,ie){this.fun=Ae,this.array=ie}Kf.prototype.run=function(){this.fun.apply(null,this.array)};on.title="browser";on.browser=!0;on.env={};on.argv=[];on.version="";on.versions={};function Ci(){}on.on=Ci;on.addListener=Ci;on.once=Ci;on.off=Ci;on.removeListener=Ci;on.removeAllListeners=Ci;on.emit=Ci;on.prependListener=Ci;on.prependOnceListener=Ci;on.listeners=function(Ae){return[]};on.binding=function(Ae){throw new Error("process.binding is not supported")};on.cwd=function(){return"/"};on.chdir=function(Ae){throw new Error("process.chdir is not supported")};on.umask=function(){return 0};var z_=Gf.exports;const xs=F_(z_);var Xf={},Fc={};Fc.byteLength=R_;Fc.toByteArray=j_;Fc.fromByteArray=W_;var pi=[],Hn=[],D_=typeof Uint8Array<"u"?Uint8Array:Array,Ep="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(var na=0,L_=Ep.length;na<L_;++na)pi[na]=Ep[na],Hn[Ep.charCodeAt(na)]=na;Hn[45]=62;Hn[95]=63;function Qf(Ae){var ie=Ae.length;if(ie%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var I=Ae.indexOf("=");I===-1&&(I=ie);var F=I===ie?0:4-I%4;return[I,F]}function R_(Ae){var ie=Qf(Ae),I=ie[0],F=ie[1];return(I+F)*3/4-F}function N_(Ae,ie,I){return(ie+I)*3/4-I}function j_(Ae){var ie,I=Qf(Ae),F=I[0],ue=I[1],oe=new D_(N_(Ae,F,ue)),ge=0,Ee=ue>0?F-4:F,L;for(L=0;L<Ee;L+=4)ie=Hn[Ae.charCodeAt(L)]<<18|Hn[Ae.charCodeAt(L+1)]<<12|Hn[Ae.charCodeAt(L+2)]<<6|Hn[Ae.charCodeAt(L+3)],oe[ge++]=ie>>16&255,oe[ge++]=ie>>8&255,oe[ge++]=ie&255;return ue===2&&(ie=Hn[Ae.charCodeAt(L)]<<2|Hn[Ae.charCodeAt(L+1)]>>4,oe[ge++]=ie&255),ue===1&&(ie=Hn[Ae.charCodeAt(L)]<<10|Hn[Ae.charCodeAt(L+1)]<<4|Hn[Ae.charCodeAt(L+2)]>>2,oe[ge++]=ie>>8&255,oe[ge++]=ie&255),oe}function U_(Ae){return pi[Ae>>18&63]+pi[Ae>>12&63]+pi[Ae>>6&63]+pi[Ae&63]}function V_(Ae,ie,I){for(var F,ue=[],oe=ie;oe<I;oe+=3)F=(Ae[oe]<<16&16711680)+(Ae[oe+1]<<8&65280)+(Ae[oe+2]&255),ue.push(U_(F));return ue.join("")}function W_(Ae){for(var ie,I=Ae.length,F=I%3,ue=[],oe=16383,ge=0,Ee=I-F;ge<Ee;ge+=oe)ue.push(V_(Ae,ge,ge+oe>Ee?Ee:ge+oe));return F===1?(ie=Ae[I-1],ue.push(pi[ie>>2]+pi[ie<<4&63]+"==")):F===2&&(ie=(Ae[I-2]<<8)+Ae[I-1],ue.push(pi[ie>>10]+pi[ie>>4&63]+pi[ie<<2&63]+"=")),ue.join("")}var Ap={};/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */Ap.read=function(Ae,ie,I,F,ue){var oe,ge,Ee=ue*8-F-1,L=(1<<Ee)-1,O=L>>1,M=-7,j=I?ue-1:0,K=I?-1:1,se=Ae[ie+j];for(j+=K,oe=se&(1<<-M)-1,se>>=-M,M+=Ee;M>0;oe=oe*256+Ae[ie+j],j+=K,M-=8);for(ge=oe&(1<<-M)-1,oe>>=-M,M+=F;M>0;ge=ge*256+Ae[ie+j],j+=K,M-=8);if(oe===0)oe=1-O;else{if(oe===L)return ge?NaN:(se?-1:1)*(1/0);ge=ge+Math.pow(2,F),oe=oe-O}return(se?-1:1)*ge*Math.pow(2,oe-F)};Ap.write=function(Ae,ie,I,F,ue,oe){var ge,Ee,L,O=oe*8-ue-1,M=(1<<O)-1,j=M>>1,K=ue===23?Math.pow(2,-24)-Math.pow(2,-77):0,se=F?0:oe-1,Te=F?1:-1,Me=ie<0||ie===0&&1/ie<0?1:0;for(ie=Math.abs(ie),isNaN(ie)||ie===1/0?(Ee=isNaN(ie)?1:0,ge=M):(ge=Math.floor(Math.log(ie)/Math.LN2),ie*(L=Math.pow(2,-ge))<1&&(ge--,L*=2),ge+j>=1?ie+=K/L:ie+=K*Math.pow(2,1-j),ie*L>=2&&(ge++,L/=2),ge+j>=M?(Ee=0,ge=M):ge+j>=1?(Ee=(ie*L-1)*Math.pow(2,ue),ge=ge+j):(Ee=ie*Math.pow(2,j-1)*Math.pow(2,ue),ge=0));ue>=8;Ae[I+se]=Ee&255,se+=Te,Ee/=256,ue-=8);for(ge=ge<<ue|Ee,O+=ue;O>0;Ae[I+se]=ge&255,se+=Te,ge/=256,O-=8);Ae[I+se-Te]|=Me*128};/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */(function(Ae){const ie=Fc,I=Ap,F=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;Ae.Buffer=M,Ae.SlowBuffer=W,Ae.INSPECT_MAX_BYTES=50;const ue=2147483647;Ae.kMaxLength=ue;const{Uint8Array:oe,ArrayBuffer:ge,SharedArrayBuffer:Ee}=globalThis;M.TYPED_ARRAY_SUPPORT=L(),!M.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function L(){try{const T=new oe(1),c={foo:function(){return 42}};return Object.setPrototypeOf(c,oe.prototype),Object.setPrototypeOf(T,c),T.foo()===42}catch{return!1}}Object.defineProperty(M.prototype,"parent",{enumerable:!0,get:function(){if(M.isBuffer(this))return this.buffer}}),Object.defineProperty(M.prototype,"offset",{enumerable:!0,get:function(){if(M.isBuffer(this))return this.byteOffset}});function O(T){if(T>ue)throw new RangeError('The value "'+T+'" is invalid for option "size"');const c=new oe(T);return Object.setPrototypeOf(c,M.prototype),c}function M(T,c,m){if(typeof T=="number"){if(typeof c=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return Te(T)}return j(T,c,m)}M.poolSize=8192;function j(T,c,m){if(typeof T=="string")return Me(T,c);if(ge.isView(T))return re(T);if(T==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof T);if(it(T,ge)||T&&it(T.buffer,ge)||typeof Ee<"u"&&(it(T,Ee)||T&&it(T.buffer,Ee)))return ve(T,c,m);if(typeof T=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');const U=T.valueOf&&T.valueOf();if(U!=null&&U!==T)return M.from(U,c,m);const he=J(T);if(he)return he;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof T[Symbol.toPrimitive]=="function")return M.from(T[Symbol.toPrimitive]("string"),c,m);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof T)}M.from=function(T,c,m){return j(T,c,m)},Object.setPrototypeOf(M.prototype,oe.prototype),Object.setPrototypeOf(M,oe);function K(T){if(typeof T!="number")throw new TypeError('"size" argument must be of type number');if(T<0)throw new RangeError('The value "'+T+'" is invalid for option "size"')}function se(T,c,m){return K(T),T<=0?O(T):c!==void 0?typeof m=="string"?O(T).fill(c,m):O(T).fill(c):O(T)}M.alloc=function(T,c,m){return se(T,c,m)};function Te(T){return K(T),O(T<0?0:Z(T)|0)}M.allocUnsafe=function(T){return Te(T)},M.allocUnsafeSlow=function(T){return Te(T)};function Me(T,c){if((typeof c!="string"||c==="")&&(c="utf8"),!M.isEncoding(c))throw new TypeError("Unknown encoding: "+c);const m=B(T,c)|0;let U=O(m);const he=U.write(T,c);return he!==m&&(U=U.slice(0,he)),U}function N(T){const c=T.length<0?0:Z(T.length)|0,m=O(c);for(let U=0;U<c;U+=1)m[U]=T[U]&255;return m}function re(T){if(it(T,oe)){const c=new oe(T);return ve(c.buffer,c.byteOffset,c.byteLength)}return N(T)}function ve(T,c,m){if(c<0||T.byteLength<c)throw new RangeError('"offset" is outside of buffer bounds');if(T.byteLength<c+(m||0))throw new RangeError('"length" is outside of buffer bounds');let U;return c===void 0&&m===void 0?U=new oe(T):m===void 0?U=new oe(T,c):U=new oe(T,c,m),Object.setPrototypeOf(U,M.prototype),U}function J(T){if(M.isBuffer(T)){const c=Z(T.length)|0,m=O(c);return m.length===0||T.copy(m,0,0,c),m}if(T.length!==void 0)return typeof T.length!="number"||et(T.length)?O(0):N(T);if(T.type==="Buffer"&&Array.isArray(T.data))return N(T.data)}function Z(T){if(T>=ue)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+ue.toString(16)+" bytes");return T|0}function W(T){return+T!=T&&(T=0),M.alloc(+T)}M.isBuffer=function(c){return c!=null&&c._isBuffer===!0&&c!==M.prototype},M.compare=function(c,m){if(it(c,oe)&&(c=M.from(c,c.offset,c.byteLength)),it(m,oe)&&(m=M.from(m,m.offset,m.byteLength)),!M.isBuffer(c)||!M.isBuffer(m))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(c===m)return 0;let U=c.length,he=m.length;for(let Se=0,Ge=Math.min(U,he);Se<Ge;++Se)if(c[Se]!==m[Se]){U=c[Se],he=m[Se];break}return U<he?-1:he<U?1:0},M.isEncoding=function(c){switch(String(c).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},M.concat=function(c,m){if(!Array.isArray(c))throw new TypeError('"list" argument must be an Array of Buffers');if(c.length===0)return M.alloc(0);let U;if(m===void 0)for(m=0,U=0;U<c.length;++U)m+=c[U].length;const he=M.allocUnsafe(m);let Se=0;for(U=0;U<c.length;++U){let Ge=c[U];if(it(Ge,oe))Se+Ge.length>he.length?(M.isBuffer(Ge)||(Ge=M.from(Ge)),Ge.copy(he,Se)):oe.prototype.set.call(he,Ge,Se);else if(M.isBuffer(Ge))Ge.copy(he,Se);else throw new TypeError('"list" argument must be an Array of Buffers');Se+=Ge.length}return he};function B(T,c){if(M.isBuffer(T))return T.length;if(ge.isView(T)||it(T,ge))return T.byteLength;if(typeof T!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof T);const m=T.length,U=arguments.length>2&&arguments[2]===!0;if(!U&&m===0)return 0;let he=!1;for(;;)switch(c){case"ascii":case"latin1":case"binary":return m;case"utf8":case"utf-8":return E(T).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return m*2;case"hex":return m>>>1;case"base64":return ae(T).length;default:if(he)return U?-1:E(T).length;c=(""+c).toLowerCase(),he=!0}}M.byteLength=B;function G(T,c,m){let U=!1;if((c===void 0||c<0)&&(c=0),c>this.length||((m===void 0||m>this.length)&&(m=this.length),m<=0)||(m>>>=0,c>>>=0,m<=c))return"";for(T||(T="utf8");;)switch(T){case"hex":return _t(this,c,m);case"utf8":case"utf-8":return xe(this,c,m);case"ascii":return ke(this,c,m);case"latin1":case"binary":return Qe(this,c,m);case"base64":return gt(this,c,m);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return de(this,c,m);default:if(U)throw new TypeError("Unknown encoding: "+T);T=(T+"").toLowerCase(),U=!0}}M.prototype._isBuffer=!0;function P(T,c,m){const U=T[c];T[c]=T[m],T[m]=U}M.prototype.swap16=function(){const c=this.length;if(c%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let m=0;m<c;m+=2)P(this,m,m+1);return this},M.prototype.swap32=function(){const c=this.length;if(c%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let m=0;m<c;m+=4)P(this,m,m+3),P(this,m+1,m+2);return this},M.prototype.swap64=function(){const c=this.length;if(c%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let m=0;m<c;m+=8)P(this,m,m+7),P(this,m+1,m+6),P(this,m+2,m+5),P(this,m+3,m+4);return this},M.prototype.toString=function(){const c=this.length;return c===0?"":arguments.length===0?xe(this,0,c):G.apply(this,arguments)},M.prototype.toLocaleString=M.prototype.toString,M.prototype.equals=function(c){if(!M.isBuffer(c))throw new TypeError("Argument must be a Buffer");return this===c?!0:M.compare(this,c)===0},M.prototype.inspect=function(){let c="";const m=Ae.INSPECT_MAX_BYTES;return c=this.toString("hex",0,m).replace(/(.{2})/g,"$1 ").trim(),this.length>m&&(c+=" ... "),"<Buffer "+c+">"},F&&(M.prototype[F]=M.prototype.inspect),M.prototype.compare=function(c,m,U,he,Se){if(it(c,oe)&&(c=M.from(c,c.offset,c.byteLength)),!M.isBuffer(c))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof c);if(m===void 0&&(m=0),U===void 0&&(U=c?c.length:0),he===void 0&&(he=0),Se===void 0&&(Se=this.length),m<0||U>c.length||he<0||Se>this.length)throw new RangeError("out of range index");if(he>=Se&&m>=U)return 0;if(he>=Se)return-1;if(m>=U)return 1;if(m>>>=0,U>>>=0,he>>>=0,Se>>>=0,this===c)return 0;let Ge=Se-he,sr=U-m;const Je=Math.min(Ge,sr),R=this.slice(he,Se),we=c.slice(m,U);for(let $e=0;$e<Je;++$e)if(R[$e]!==we[$e]){Ge=R[$e],sr=we[$e];break}return Ge<sr?-1:sr<Ge?1:0};function ye(T,c,m,U,he){if(T.length===0)return-1;if(typeof m=="string"?(U=m,m=0):m>2147483647?m=2147483647:m<-2147483648&&(m=-2147483648),m=+m,et(m)&&(m=he?0:T.length-1),m<0&&(m=T.length+m),m>=T.length){if(he)return-1;m=T.length-1}else if(m<0)if(he)m=0;else return-1;if(typeof c=="string"&&(c=M.from(c,U)),M.isBuffer(c))return c.length===0?-1:Ce(T,c,m,U,he);if(typeof c=="number")return c=c&255,typeof oe.prototype.indexOf=="function"?he?oe.prototype.indexOf.call(T,c,m):oe.prototype.lastIndexOf.call(T,c,m):Ce(T,[c],m,U,he);throw new TypeError("val must be string, number or Buffer")}function Ce(T,c,m,U,he){let Se=1,Ge=T.length,sr=c.length;if(U!==void 0&&(U=String(U).toLowerCase(),U==="ucs2"||U==="ucs-2"||U==="utf16le"||U==="utf-16le")){if(T.length<2||c.length<2)return-1;Se=2,Ge/=2,sr/=2,m/=2}function Je(we,$e){return Se===1?we[$e]:we.readUInt16BE($e*Se)}let R;if(he){let we=-1;for(R=m;R<Ge;R++)if(Je(T,R)===Je(c,we===-1?0:R-we)){if(we===-1&&(we=R),R-we+1===sr)return we*Se}else we!==-1&&(R-=R-we),we=-1}else for(m+sr>Ge&&(m=Ge-sr),R=m;R>=0;R--){let we=!0;for(let $e=0;$e<sr;$e++)if(Je(T,R+$e)!==Je(c,$e)){we=!1;break}if(we)return R}return-1}M.prototype.includes=function(c,m,U){return this.indexOf(c,m,U)!==-1},M.prototype.indexOf=function(c,m,U){return ye(this,c,m,U,!0)},M.prototype.lastIndexOf=function(c,m,U){return ye(this,c,m,U,!1)};function Pe(T,c,m,U){m=Number(m)||0;const he=T.length-m;U?(U=Number(U),U>he&&(U=he)):U=he;const Se=c.length;U>Se/2&&(U=Se/2);let Ge;for(Ge=0;Ge<U;++Ge){const sr=parseInt(c.substr(Ge*2,2),16);if(et(sr))return Ge;T[m+Ge]=sr}return Ge}function je(T,c,m,U){return be(E(c,T.length-m),T,m,U)}function De(T,c,m,U){return be(Y(c),T,m,U)}function ft(T,c,m,U){return be(ae(c),T,m,U)}function dt(T,c,m,U){return be(z(c,T.length-m),T,m,U)}M.prototype.write=function(c,m,U,he){if(m===void 0)he="utf8",U=this.length,m=0;else if(U===void 0&&typeof m=="string")he=m,U=this.length,m=0;else if(isFinite(m))m=m>>>0,isFinite(U)?(U=U>>>0,he===void 0&&(he="utf8")):(he=U,U=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");const Se=this.length-m;if((U===void 0||U>Se)&&(U=Se),c.length>0&&(U<0||m<0)||m>this.length)throw new RangeError("Attempt to write outside buffer bounds");he||(he="utf8");let Ge=!1;for(;;)switch(he){case"hex":return Pe(this,c,m,U);case"utf8":case"utf-8":return je(this,c,m,U);case"ascii":case"latin1":case"binary":return De(this,c,m,U);case"base64":return ft(this,c,m,U);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return dt(this,c,m,U);default:if(Ge)throw new TypeError("Unknown encoding: "+he);he=(""+he).toLowerCase(),Ge=!0}},M.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function gt(T,c,m){return c===0&&m===T.length?ie.fromByteArray(T):ie.fromByteArray(T.slice(c,m))}function xe(T,c,m){m=Math.min(T.length,m);const U=[];let he=c;for(;he<m;){const Se=T[he];let Ge=null,sr=Se>239?4:Se>223?3:Se>191?2:1;if(he+sr<=m){let Je,R,we,$e;switch(sr){case 1:Se<128&&(Ge=Se);break;case 2:Je=T[he+1],(Je&192)===128&&($e=(Se&31)<<6|Je&63,$e>127&&(Ge=$e));break;case 3:Je=T[he+1],R=T[he+2],(Je&192)===128&&(R&192)===128&&($e=(Se&15)<<12|(Je&63)<<6|R&63,$e>2047&&($e<55296||$e>57343)&&(Ge=$e));break;case 4:Je=T[he+1],R=T[he+2],we=T[he+3],(Je&192)===128&&(R&192)===128&&(we&192)===128&&($e=(Se&15)<<18|(Je&63)<<12|(R&63)<<6|we&63,$e>65535&&$e<1114112&&(Ge=$e))}}Ge===null?(Ge=65533,sr=1):Ge>65535&&(Ge-=65536,U.push(Ge>>>10&1023|55296),Ge=56320|Ge&1023),U.push(Ge),he+=sr}return _e(U)}const q=4096;function _e(T){const c=T.length;if(c<=q)return String.fromCharCode.apply(String,T);let m="",U=0;for(;U<c;)m+=String.fromCharCode.apply(String,T.slice(U,U+=q));return m}function ke(T,c,m){let U="";m=Math.min(T.length,m);for(let he=c;he<m;++he)U+=String.fromCharCode(T[he]&127);return U}function Qe(T,c,m){let U="";m=Math.min(T.length,m);for(let he=c;he<m;++he)U+=String.fromCharCode(T[he]);return U}function _t(T,c,m){const U=T.length;(!c||c<0)&&(c=0),(!m||m<0||m>U)&&(m=U);let he="";for(let Se=c;Se<m;++Se)he+=At[T[Se]];return he}function de(T,c,m){const U=T.slice(c,m);let he="";for(let Se=0;Se<U.length-1;Se+=2)he+=String.fromCharCode(U[Se]+U[Se+1]*256);return he}M.prototype.slice=function(c,m){const U=this.length;c=~~c,m=m===void 0?U:~~m,c<0?(c+=U,c<0&&(c=0)):c>U&&(c=U),m<0?(m+=U,m<0&&(m=0)):m>U&&(m=U),m<c&&(m=c);const he=this.subarray(c,m);return Object.setPrototypeOf(he,M.prototype),he};function Ue(T,c,m){if(T%1!==0||T<0)throw new RangeError("offset is not uint");if(T+c>m)throw new RangeError("Trying to access beyond buffer length")}M.prototype.readUintLE=M.prototype.readUIntLE=function(c,m,U){c=c>>>0,m=m>>>0,U||Ue(c,m,this.length);let he=this[c],Se=1,Ge=0;for(;++Ge<m&&(Se*=256);)he+=this[c+Ge]*Se;return he},M.prototype.readUintBE=M.prototype.readUIntBE=function(c,m,U){c=c>>>0,m=m>>>0,U||Ue(c,m,this.length);let he=this[c+--m],Se=1;for(;m>0&&(Se*=256);)he+=this[c+--m]*Se;return he},M.prototype.readUint8=M.prototype.readUInt8=function(c,m){return c=c>>>0,m||Ue(c,1,this.length),this[c]},M.prototype.readUint16LE=M.prototype.readUInt16LE=function(c,m){return c=c>>>0,m||Ue(c,2,this.length),this[c]|this[c+1]<<8},M.prototype.readUint16BE=M.prototype.readUInt16BE=function(c,m){return c=c>>>0,m||Ue(c,2,this.length),this[c]<<8|this[c+1]},M.prototype.readUint32LE=M.prototype.readUInt32LE=function(c,m){return c=c>>>0,m||Ue(c,4,this.length),(this[c]|this[c+1]<<8|this[c+2]<<16)+this[c+3]*16777216},M.prototype.readUint32BE=M.prototype.readUInt32BE=function(c,m){return c=c>>>0,m||Ue(c,4,this.length),this[c]*16777216+(this[c+1]<<16|this[c+2]<<8|this[c+3])},M.prototype.readBigUInt64LE=ot(function(c){c=c>>>0,mt(c,"offset");const m=this[c],U=this[c+7];(m===void 0||U===void 0)&&wt(c,this.length-8);const he=m+this[++c]*2**8+this[++c]*2**16+this[++c]*2**24,Se=this[++c]+this[++c]*2**8+this[++c]*2**16+U*2**24;return BigInt(he)+(BigInt(Se)<<BigInt(32))}),M.prototype.readBigUInt64BE=ot(function(c){c=c>>>0,mt(c,"offset");const m=this[c],U=this[c+7];(m===void 0||U===void 0)&&wt(c,this.length-8);const he=m*2**24+this[++c]*2**16+this[++c]*2**8+this[++c],Se=this[++c]*2**24+this[++c]*2**16+this[++c]*2**8+U;return(BigInt(he)<<BigInt(32))+BigInt(Se)}),M.prototype.readIntLE=function(c,m,U){c=c>>>0,m=m>>>0,U||Ue(c,m,this.length);let he=this[c],Se=1,Ge=0;for(;++Ge<m&&(Se*=256);)he+=this[c+Ge]*Se;return Se*=128,he>=Se&&(he-=Math.pow(2,8*m)),he},M.prototype.readIntBE=function(c,m,U){c=c>>>0,m=m>>>0,U||Ue(c,m,this.length);let he=m,Se=1,Ge=this[c+--he];for(;he>0&&(Se*=256);)Ge+=this[c+--he]*Se;return Se*=128,Ge>=Se&&(Ge-=Math.pow(2,8*m)),Ge},M.prototype.readInt8=function(c,m){return c=c>>>0,m||Ue(c,1,this.length),this[c]&128?(255-this[c]+1)*-1:this[c]},M.prototype.readInt16LE=function(c,m){c=c>>>0,m||Ue(c,2,this.length);const U=this[c]|this[c+1]<<8;return U&32768?U|4294901760:U},M.prototype.readInt16BE=function(c,m){c=c>>>0,m||Ue(c,2,this.length);const U=this[c+1]|this[c]<<8;return U&32768?U|4294901760:U},M.prototype.readInt32LE=function(c,m){return c=c>>>0,m||Ue(c,4,this.length),this[c]|this[c+1]<<8|this[c+2]<<16|this[c+3]<<24},M.prototype.readInt32BE=function(c,m){return c=c>>>0,m||Ue(c,4,this.length),this[c]<<24|this[c+1]<<16|this[c+2]<<8|this[c+3]},M.prototype.readBigInt64LE=ot(function(c){c=c>>>0,mt(c,"offset");const m=this[c],U=this[c+7];(m===void 0||U===void 0)&&wt(c,this.length-8);const he=this[c+4]+this[c+5]*2**8+this[c+6]*2**16+(U<<24);return(BigInt(he)<<BigInt(32))+BigInt(m+this[++c]*2**8+this[++c]*2**16+this[++c]*2**24)}),M.prototype.readBigInt64BE=ot(function(c){c=c>>>0,mt(c,"offset");const m=this[c],U=this[c+7];(m===void 0||U===void 0)&&wt(c,this.length-8);const he=(m<<24)+this[++c]*2**16+this[++c]*2**8+this[++c];return(BigInt(he)<<BigInt(32))+BigInt(this[++c]*2**24+this[++c]*2**16+this[++c]*2**8+U)}),M.prototype.readFloatLE=function(c,m){return c=c>>>0,m||Ue(c,4,this.length),I.read(this,c,!0,23,4)},M.prototype.readFloatBE=function(c,m){return c=c>>>0,m||Ue(c,4,this.length),I.read(this,c,!1,23,4)},M.prototype.readDoubleLE=function(c,m){return c=c>>>0,m||Ue(c,8,this.length),I.read(this,c,!0,52,8)},M.prototype.readDoubleBE=function(c,m){return c=c>>>0,m||Ue(c,8,this.length),I.read(this,c,!1,52,8)};function ct(T,c,m,U,he,Se){if(!M.isBuffer(T))throw new TypeError('"buffer" argument must be a Buffer instance');if(c>he||c<Se)throw new RangeError('"value" argument is out of bounds');if(m+U>T.length)throw new RangeError("Index out of range")}M.prototype.writeUintLE=M.prototype.writeUIntLE=function(c,m,U,he){if(c=+c,m=m>>>0,U=U>>>0,!he){const sr=Math.pow(2,8*U)-1;ct(this,c,m,U,sr,0)}let Se=1,Ge=0;for(this[m]=c&255;++Ge<U&&(Se*=256);)this[m+Ge]=c/Se&255;return m+U},M.prototype.writeUintBE=M.prototype.writeUIntBE=function(c,m,U,he){if(c=+c,m=m>>>0,U=U>>>0,!he){const sr=Math.pow(2,8*U)-1;ct(this,c,m,U,sr,0)}let Se=U-1,Ge=1;for(this[m+Se]=c&255;--Se>=0&&(Ge*=256);)this[m+Se]=c/Ge&255;return m+U},M.prototype.writeUint8=M.prototype.writeUInt8=function(c,m,U){return c=+c,m=m>>>0,U||ct(this,c,m,1,255,0),this[m]=c&255,m+1},M.prototype.writeUint16LE=M.prototype.writeUInt16LE=function(c,m,U){return c=+c,m=m>>>0,U||ct(this,c,m,2,65535,0),this[m]=c&255,this[m+1]=c>>>8,m+2},M.prototype.writeUint16BE=M.prototype.writeUInt16BE=function(c,m,U){return c=+c,m=m>>>0,U||ct(this,c,m,2,65535,0),this[m]=c>>>8,this[m+1]=c&255,m+2},M.prototype.writeUint32LE=M.prototype.writeUInt32LE=function(c,m,U){return c=+c,m=m>>>0,U||ct(this,c,m,4,4294967295,0),this[m+3]=c>>>24,this[m+2]=c>>>16,this[m+1]=c>>>8,this[m]=c&255,m+4},M.prototype.writeUint32BE=M.prototype.writeUInt32BE=function(c,m,U){return c=+c,m=m>>>0,U||ct(this,c,m,4,4294967295,0),this[m]=c>>>24,this[m+1]=c>>>16,this[m+2]=c>>>8,this[m+3]=c&255,m+4};function Ve(T,c,m,U,he){He(c,U,he,T,m,7);let Se=Number(c&BigInt(4294967295));T[m++]=Se,Se=Se>>8,T[m++]=Se,Se=Se>>8,T[m++]=Se,Se=Se>>8,T[m++]=Se;let Ge=Number(c>>BigInt(32)&BigInt(4294967295));return T[m++]=Ge,Ge=Ge>>8,T[m++]=Ge,Ge=Ge>>8,T[m++]=Ge,Ge=Ge>>8,T[m++]=Ge,m}function Mt(T,c,m,U,he){He(c,U,he,T,m,7);let Se=Number(c&BigInt(4294967295));T[m+7]=Se,Se=Se>>8,T[m+6]=Se,Se=Se>>8,T[m+5]=Se,Se=Se>>8,T[m+4]=Se;let Ge=Number(c>>BigInt(32)&BigInt(4294967295));return T[m+3]=Ge,Ge=Ge>>8,T[m+2]=Ge,Ge=Ge>>8,T[m+1]=Ge,Ge=Ge>>8,T[m]=Ge,m+8}M.prototype.writeBigUInt64LE=ot(function(c,m=0){return Ve(this,c,m,BigInt(0),BigInt("0xffffffffffffffff"))}),M.prototype.writeBigUInt64BE=ot(function(c,m=0){return Mt(this,c,m,BigInt(0),BigInt("0xffffffffffffffff"))}),M.prototype.writeIntLE=function(c,m,U,he){if(c=+c,m=m>>>0,!he){const Je=Math.pow(2,8*U-1);ct(this,c,m,U,Je-1,-Je)}let Se=0,Ge=1,sr=0;for(this[m]=c&255;++Se<U&&(Ge*=256);)c<0&&sr===0&&this[m+Se-1]!==0&&(sr=1),this[m+Se]=(c/Ge>>0)-sr&255;return m+U},M.prototype.writeIntBE=function(c,m,U,he){if(c=+c,m=m>>>0,!he){const Je=Math.pow(2,8*U-1);ct(this,c,m,U,Je-1,-Je)}let Se=U-1,Ge=1,sr=0;for(this[m+Se]=c&255;--Se>=0&&(Ge*=256);)c<0&&sr===0&&this[m+Se+1]!==0&&(sr=1),this[m+Se]=(c/Ge>>0)-sr&255;return m+U},M.prototype.writeInt8=function(c,m,U){return c=+c,m=m>>>0,U||ct(this,c,m,1,127,-128),c<0&&(c=255+c+1),this[m]=c&255,m+1},M.prototype.writeInt16LE=function(c,m,U){return c=+c,m=m>>>0,U||ct(this,c,m,2,32767,-32768),this[m]=c&255,this[m+1]=c>>>8,m+2},M.prototype.writeInt16BE=function(c,m,U){return c=+c,m=m>>>0,U||ct(this,c,m,2,32767,-32768),this[m]=c>>>8,this[m+1]=c&255,m+2},M.prototype.writeInt32LE=function(c,m,U){return c=+c,m=m>>>0,U||ct(this,c,m,4,2147483647,-2147483648),this[m]=c&255,this[m+1]=c>>>8,this[m+2]=c>>>16,this[m+3]=c>>>24,m+4},M.prototype.writeInt32BE=function(c,m,U){return c=+c,m=m>>>0,U||ct(this,c,m,4,2147483647,-2147483648),c<0&&(c=4294967295+c+1),this[m]=c>>>24,this[m+1]=c>>>16,this[m+2]=c>>>8,this[m+3]=c&255,m+4},M.prototype.writeBigInt64LE=ot(function(c,m=0){return Ve(this,c,m,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),M.prototype.writeBigInt64BE=ot(function(c,m=0){return Mt(this,c,m,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function Et(T,c,m,U,he,Se){if(m+U>T.length)throw new RangeError("Index out of range");if(m<0)throw new RangeError("Index out of range")}function tt(T,c,m,U,he){return c=+c,m=m>>>0,he||Et(T,c,m,4),I.write(T,c,m,U,23,4),m+4}M.prototype.writeFloatLE=function(c,m,U){return tt(this,c,m,!0,U)},M.prototype.writeFloatBE=function(c,m,U){return tt(this,c,m,!1,U)};function Q(T,c,m,U,he){return c=+c,m=m>>>0,he||Et(T,c,m,8),I.write(T,c,m,U,52,8),m+8}M.prototype.writeDoubleLE=function(c,m,U){return Q(this,c,m,!0,U)},M.prototype.writeDoubleBE=function(c,m,U){return Q(this,c,m,!1,U)},M.prototype.copy=function(c,m,U,he){if(!M.isBuffer(c))throw new TypeError("argument should be a Buffer");if(U||(U=0),!he&&he!==0&&(he=this.length),m>=c.length&&(m=c.length),m||(m=0),he>0&&he<U&&(he=U),he===U||c.length===0||this.length===0)return 0;if(m<0)throw new RangeError("targetStart out of bounds");if(U<0||U>=this.length)throw new RangeError("Index out of range");if(he<0)throw new RangeError("sourceEnd out of bounds");he>this.length&&(he=this.length),c.length-m<he-U&&(he=c.length-m+U);const Se=he-U;return this===c&&typeof oe.prototype.copyWithin=="function"?this.copyWithin(m,U,he):oe.prototype.set.call(c,this.subarray(U,he),m),Se},M.prototype.fill=function(c,m,U,he){if(typeof c=="string"){if(typeof m=="string"?(he=m,m=0,U=this.length):typeof U=="string"&&(he=U,U=this.length),he!==void 0&&typeof he!="string")throw new TypeError("encoding must be a string");if(typeof he=="string"&&!M.isEncoding(he))throw new TypeError("Unknown encoding: "+he);if(c.length===1){const Ge=c.charCodeAt(0);(he==="utf8"&&Ge<128||he==="latin1")&&(c=Ge)}}else typeof c=="number"?c=c&255:typeof c=="boolean"&&(c=Number(c));if(m<0||this.length<m||this.length<U)throw new RangeError("Out of range index");if(U<=m)return this;m=m>>>0,U=U===void 0?this.length:U>>>0,c||(c=0);let Se;if(typeof c=="number")for(Se=m;Se<U;++Se)this[Se]=c;else{const Ge=M.isBuffer(c)?c:M.from(c,he),sr=Ge.length;if(sr===0)throw new TypeError('The value "'+c+'" is invalid for argument "value"');for(Se=0;Se<U-m;++Se)this[Se+m]=Ge[Se%sr]}return this};const ze={};function nt(T,c,m){ze[T]=class extends m{constructor(){super(),Object.defineProperty(this,"message",{value:c.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${T}]`,this.stack,delete this.name}get code(){return T}set code(he){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:he,writable:!0})}toString(){return`${this.name} [${T}]: ${this.message}`}}}nt("ERR_BUFFER_OUT_OF_BOUNDS",function(T){return T?`${T} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),nt("ERR_INVALID_ARG_TYPE",function(T,c){return`The "${T}" argument must be of type number. Received type ${typeof c}`},TypeError),nt("ERR_OUT_OF_RANGE",function(T,c,m){let U=`The value of "${T}" is out of range.`,he=m;return Number.isInteger(m)&&Math.abs(m)>2**32?he=at(String(m)):typeof m=="bigint"&&(he=String(m),(m>BigInt(2)**BigInt(32)||m<-(BigInt(2)**BigInt(32)))&&(he=at(he)),he+="n"),U+=` It must be ${c}. Received ${he}`,U},RangeError);function at(T){let c="",m=T.length;const U=T[0]==="-"?1:0;for(;m>=U+4;m-=3)c=`_${T.slice(m-3,m)}${c}`;return`${T.slice(0,m)}${c}`}function Ze(T,c,m){mt(c,"offset"),(T[c]===void 0||T[c+m]===void 0)&&wt(c,T.length-(m+1))}function He(T,c,m,U,he,Se){if(T>m||T<c){const Ge=typeof c=="bigint"?"n":"";let sr;throw c===0||c===BigInt(0)?sr=`>= 0${Ge} and < 2${Ge} ** ${(Se+1)*8}${Ge}`:sr=`>= -(2${Ge} ** ${(Se+1)*8-1}${Ge}) and < 2 ** ${(Se+1)*8-1}${Ge}`,new ze.ERR_OUT_OF_RANGE("value",sr,T)}Ze(U,he,Se)}function mt(T,c){if(typeof T!="number")throw new ze.ERR_INVALID_ARG_TYPE(c,"number",T)}function wt(T,c,m){throw Math.floor(T)!==T?(mt(T,m),new ze.ERR_OUT_OF_RANGE("offset","an integer",T)):c<0?new ze.ERR_BUFFER_OUT_OF_BOUNDS:new ze.ERR_OUT_OF_RANGE("offset",`>= 0 and <= ${c}`,T)}const Lt=/[^+/0-9A-Za-z-_]/g;function kt(T){if(T=T.split("=")[0],T=T.trim().replace(Lt,""),T.length<2)return"";for(;T.length%4!==0;)T=T+"=";return T}function E(T,c){c=c||1/0;let m;const U=T.length;let he=null;const Se=[];for(let Ge=0;Ge<U;++Ge){if(m=T.charCodeAt(Ge),m>55295&&m<57344){if(!he){if(m>56319){(c-=3)>-1&&Se.push(239,191,189);continue}else if(Ge+1===U){(c-=3)>-1&&Se.push(239,191,189);continue}he=m;continue}if(m<56320){(c-=3)>-1&&Se.push(239,191,189),he=m;continue}m=(he-55296<<10|m-56320)+65536}else he&&(c-=3)>-1&&Se.push(239,191,189);if(he=null,m<128){if((c-=1)<0)break;Se.push(m)}else if(m<2048){if((c-=2)<0)break;Se.push(m>>6|192,m&63|128)}else if(m<65536){if((c-=3)<0)break;Se.push(m>>12|224,m>>6&63|128,m&63|128)}else if(m<1114112){if((c-=4)<0)break;Se.push(m>>18|240,m>>12&63|128,m>>6&63|128,m&63|128)}else throw new Error("Invalid code point")}return Se}function Y(T){const c=[];for(let m=0;m<T.length;++m)c.push(T.charCodeAt(m)&255);return c}function z(T,c){let m,U,he;const Se=[];for(let Ge=0;Ge<T.length&&!((c-=2)<0);++Ge)m=T.charCodeAt(Ge),U=m>>8,he=m%256,Se.push(he),Se.push(U);return Se}function ae(T){return ie.toByteArray(kt(T))}function be(T,c,m,U){let he;for(he=0;he<U&&!(he+m>=c.length||he>=T.length);++he)c[he+m]=T[he];return he}function it(T,c){return T instanceof c||T!=null&&T.constructor!=null&&T.constructor.name!=null&&T.constructor.name===c.name}function et(T){return T!==T}const At=function(){const T="0123456789abcdef",c=new Array(256);for(let m=0;m<16;++m){const U=m*16;for(let he=0;he<16;++he)c[U+he]=T[m]+T[he]}return c}();function ot(T){return typeof BigInt>"u"?yt:T}function yt(){throw new Error("BigInt not supported")}})(Xf);const G_=Xf.Buffer;var Cp={},Yf={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(Ae,ie,I)=>{Ae.exports=I.p+"ort-wasm-simd-threaded.jsep.wasm"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{Environment:()=>He,Interpreter:()=>mt,Template:()=>kt,parse:()=>ke,tokenize:()=>j});var F=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),ue=Object.freeze({set:F.Set,for:F.For,in:F.In,is:F.Is,if:F.If,else:F.Else,endif:F.EndIf,elif:F.ElseIf,endfor:F.EndFor,and:F.And,or:F.Or,not:F.Not,"not in":F.NotIn,macro:F.Macro,endmacro:F.EndMacro,true:F.BooleanLiteral,false:F.BooleanLiteral,True:F.BooleanLiteral,False:F.BooleanLiteral}),oe=class{constructor(E,Y){this.value=E,this.type=Y}};function ge(E){return/\w/.test(E)}function Ee(E){return/[0-9]/.test(E)}var L=[["{%",F.OpenStatement],["%}",F.CloseStatement],["{{",F.OpenExpression],["}}",F.CloseExpression],["(",F.OpenParen],[")",F.CloseParen],["{",F.OpenCurlyBracket],["}",F.CloseCurlyBracket],["[",F.OpenSquareBracket],["]",F.CloseSquareBracket],[",",F.Comma],[".",F.Dot],[":",F.Colon],["|",F.Pipe],["<=",F.ComparisonBinaryOperator],[">=",F.ComparisonBinaryOperator],["==",F.ComparisonBinaryOperator],["!=",F.ComparisonBinaryOperator],["<",F.ComparisonBinaryOperator],[">",F.ComparisonBinaryOperator],["+",F.AdditiveBinaryOperator],["-",F.AdditiveBinaryOperator],["*",F.MultiplicativeBinaryOperator],["/",F.MultiplicativeBinaryOperator],["%",F.MultiplicativeBinaryOperator],["=",F.Equals]],O=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function M(E,Y={}){return E.endsWith(`
`)&&(E=E.slice(0,-1)),E=E.replace(/{#.*?#}/gs,"{##}"),Y.lstrip_blocks&&(E=E.replace(/^[ \t]*({[#%])/gm,"$1")),Y.trim_blocks&&(E=E.replace(/([#%]})\n/g,"$1")),E.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function j(E,Y={}){const z=[],ae=M(E,Y);let be=0;const it=et=>{let At="";for(;et(ae[be]);){if(ae[be]==="\\"){if(++be,be>=ae.length)throw new SyntaxError("Unexpected end of input");const ot=ae[be++],yt=O.get(ot);if(yt===void 0)throw new SyntaxError(`Unexpected escaped character: ${ot}`);At+=yt;continue}if(At+=ae[be++],be>=ae.length)throw new SyntaxError("Unexpected end of input")}return At};e:for(;be<ae.length;){const et=z.at(-1)?.type;if(et===void 0||et===F.CloseStatement||et===F.CloseExpression){let ot="";for(;be<ae.length&&!(ae[be]==="{"&&(ae[be+1]==="%"||ae[be+1]==="{"));)ot+=ae[be++];if(ot.length>0){z.push(new oe(ot,F.Text));continue}}it(ot=>/\s/.test(ot));const At=ae[be];if(At==="-"||At==="+"){const ot=z.at(-1)?.type;if(ot===F.Text||ot===void 0)throw new SyntaxError(`Unexpected character: ${At}`);switch(ot){case F.Identifier:case F.NumericLiteral:case F.BooleanLiteral:case F.StringLiteral:case F.CloseParen:case F.CloseSquareBracket:break;default:{++be;const yt=it(Ee);z.push(new oe(`${At}${yt}`,yt.length>0?F.NumericLiteral:F.UnaryOperator));continue}}}for(const[ot,yt]of L)if(ae.slice(be,be+ot.length)===ot){z.push(new oe(ot,yt)),be+=ot.length;continue e}if(At==="'"||At==='"'){++be;const ot=it(yt=>yt!==At);z.push(new oe(ot,F.StringLiteral)),++be;continue}if(Ee(At)){const ot=it(Ee);z.push(new oe(ot,F.NumericLiteral));continue}if(ge(At)){const ot=it(ge),yt=Object.hasOwn(ue,ot)?ue[ot]:F.Identifier;yt===F.In&&z.at(-1)?.type===F.Not?(z.pop(),z.push(new oe("not in",F.NotIn))):z.push(new oe(ot,yt));continue}throw new SyntaxError(`Unexpected character: ${At}`)}return z}var K=class{type="Statement"},se=class extends K{constructor(E){super(),this.body=E}type="Program"},Te=class extends K{constructor(E,Y,z){super(),this.test=E,this.body=Y,this.alternate=z}type="If"},Me=class extends K{constructor(E,Y,z,ae){super(),this.loopvar=E,this.iterable=Y,this.body=z,this.defaultBlock=ae}type="For"},N=class extends K{constructor(E,Y){super(),this.assignee=E,this.value=Y}type="Set"},re=class extends K{constructor(E,Y,z){super(),this.name=E,this.args=Y,this.body=z}type="Macro"},ve=class extends K{type="Expression"},J=class extends ve{constructor(E,Y,z){super(),this.object=E,this.property=Y,this.computed=z}type="MemberExpression"},Z=class extends ve{constructor(E,Y){super(),this.callee=E,this.args=Y}type="CallExpression"},W=class extends ve{constructor(E){super(),this.value=E}type="Identifier"},B=class extends ve{constructor(E){super(),this.value=E}type="Literal"},G=class extends B{type="NumericLiteral"},P=class extends B{type="StringLiteral"},ye=class extends B{type="BooleanLiteral"},Ce=class extends B{type="ArrayLiteral"},Pe=class extends B{type="TupleLiteral"},je=class extends B{type="ObjectLiteral"},De=class extends ve{constructor(E,Y,z){super(),this.operator=E,this.left=Y,this.right=z}type="BinaryExpression"},ft=class extends ve{constructor(E,Y){super(),this.operand=E,this.filter=Y}type="FilterExpression"},dt=class extends ve{constructor(E,Y){super(),this.iterable=E,this.test=Y}type="SelectExpression"},gt=class extends ve{constructor(E,Y,z){super(),this.operand=E,this.negate=Y,this.test=z}type="TestExpression"},xe=class extends ve{constructor(E,Y){super(),this.operator=E,this.argument=Y}type="UnaryExpression"},q=class extends ve{constructor(E=void 0,Y=void 0,z=void 0){super(),this.start=E,this.stop=Y,this.step=z}type="SliceExpression"},_e=class extends ve{constructor(E,Y){super(),this.key=E,this.value=Y}type="KeywordArgumentExpression"};function ke(E){const Y=new se([]);let z=0;function ae(Le,Re){const vt=E[z++];if(!vt||vt.type!==Le)throw new Error(`Parser Error: ${Re}. ${vt.type} !== ${Le}.`);return vt}function be(){switch(E[z].type){case F.Text:return At();case F.OpenStatement:return ot();case F.OpenExpression:return yt();default:throw new SyntaxError(`Unexpected token type: ${E[z].type}`)}}function it(...Le){return z+Le.length<=E.length&&Le.some((Re,vt)=>Re!==E[z+vt].type)}function et(...Le){return z+Le.length<=E.length&&Le.every((Re,vt)=>Re===E[z+vt].type)}function At(){return new P(ae(F.Text,"Expected text token").value)}function ot(){ae(F.OpenStatement,"Expected opening statement token");let Le;switch(E[z].type){case F.Set:++z,Le=T(),ae(F.CloseStatement,"Expected closing statement token");break;case F.If:++z,Le=c(),ae(F.OpenStatement,"Expected {% token"),ae(F.EndIf,"Expected endif token"),ae(F.CloseStatement,"Expected %} token");break;case F.Macro:++z,Le=m(),ae(F.OpenStatement,"Expected {% token"),ae(F.EndMacro,"Expected endmacro token"),ae(F.CloseStatement,"Expected %} token");break;case F.For:++z,Le=he(),ae(F.OpenStatement,"Expected {% token"),ae(F.EndFor,"Expected endfor token"),ae(F.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${E[z].type}`)}return Le}function yt(){ae(F.OpenExpression,"Expected opening expression token");const Le=Se();return ae(F.CloseExpression,"Expected closing expression token"),Le}function T(){const Le=Se();if(et(F.Equals)){++z;const Re=T();return new N(Le,Re)}return Le}function c(){const Le=Se();ae(F.CloseStatement,"Expected closing statement token");const Re=[],vt=[];for(;!(E[z]?.type===F.OpenStatement&&(E[z+1]?.type===F.ElseIf||E[z+1]?.type===F.Else||E[z+1]?.type===F.EndIf));)Re.push(be());if(E[z]?.type===F.OpenStatement&&E[z+1]?.type!==F.EndIf)if(++z,et(F.ElseIf))ae(F.ElseIf,"Expected elseif token"),vt.push(c());else for(ae(F.Else,"Expected else token"),ae(F.CloseStatement,"Expected closing statement token");!(E[z]?.type===F.OpenStatement&&E[z+1]?.type===F.EndIf);)vt.push(be());return new Te(Le,Re,vt)}function m(){const Le=Nt();if(Le.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Re=pt();ae(F.CloseStatement,"Expected closing statement token");const vt=[];for(;it(F.OpenStatement,F.EndMacro);)vt.push(be());return new re(Le,Re,vt)}function U(Le=!1){const Re=Le?Nt:Se,vt=[Re()],Ht=et(F.Comma);for(;Ht&&(++z,vt.push(Re()),!!et(F.Comma)););return Ht?new Pe(vt):vt[0]}function he(){const Le=U(!0);if(!(Le instanceof W||Le instanceof Pe))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Le.type} instead`);ae(F.In,"Expected `in` keyword following loop variable");const Re=Se();ae(F.CloseStatement,"Expected closing statement token");const vt=[];for(;it(F.OpenStatement,F.EndFor)&&it(F.OpenStatement,F.Else);)vt.push(be());const Ht=[];if(et(F.OpenStatement,F.Else))for(++z,++z,ae(F.CloseStatement,"Expected closing statement token");it(F.OpenStatement,F.EndFor);)Ht.push(be());return new Me(Le,Re,vt,Ht)}function Se(){return Ge()}function Ge(){const Le=sr();if(et(F.If)){++z;const Re=sr();if(et(F.Else)){++z;const vt=sr();return new Te(Re,[Le],[vt])}else return new dt(Le,Re)}return Le}function sr(){let Le=Je();for(;et(F.Or);){const Re=E[z];++z;const vt=Je();Le=new De(Re,Le,vt)}return Le}function Je(){let Le=R();for(;et(F.And);){const Re=E[z];++z;const vt=R();Le=new De(Re,Le,vt)}return Le}function R(){let Le;for(;et(F.Not);){const Re=E[z];++z;const vt=R();Le=new xe(Re,vt)}return Le??we()}function we(){let Le=$e();for(;et(F.ComparisonBinaryOperator)||et(F.In)||et(F.NotIn);){const Re=E[z];++z;const vt=$e();Le=new De(Re,Le,vt)}return Le}function $e(){let Le=xt();for(;et(F.AdditiveBinaryOperator);){const Re=E[z];++z;const vt=xt();Le=new De(Re,Le,vt)}return Le}function Be(){const Le=Ft();return et(F.OpenParen)?Ke(Le):Le}function Ke(Le){let Re=new Z(Le,pt());return et(F.OpenParen)&&(Re=Ke(Re)),Re}function pt(){ae(F.OpenParen,"Expected opening parenthesis for arguments list");const Le=Ct();return ae(F.CloseParen,"Expected closing parenthesis for arguments list"),Le}function Ct(){const Le=[];for(;!et(F.CloseParen);){let Re=Se();if(et(F.Equals)){if(++z,!(Re instanceof W))throw new SyntaxError("Expected identifier for keyword argument");const vt=Se();Re=new _e(Re,vt)}Le.push(Re),et(F.Comma)&&++z}return Le}function Tt(){const Le=[];let Re=!1;for(;!et(F.CloseSquareBracket);)et(F.Colon)?(Le.push(void 0),++z,Re=!0):(Le.push(Se()),et(F.Colon)&&(++z,Re=!0));if(Le.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Re){if(Le.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new q(...Le)}return Le[0]}function Ft(){let Le=Nt();for(;et(F.Dot)||et(F.OpenSquareBracket);){const Re=E[z];++z;let vt;const Ht=Re.type!==F.Dot;if(Ht)vt=Tt(),ae(F.CloseSquareBracket,"Expected closing square bracket");else if(vt=Nt(),vt.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Le=new J(Le,vt,Ht)}return Le}function xt(){let Le=Ut();for(;et(F.MultiplicativeBinaryOperator);){const Re=E[z];++z;const vt=Ut();Le=new De(Re,Le,vt)}return Le}function Ut(){let Le=Wt();for(;et(F.Is);){++z;const Re=et(F.Not);Re&&++z;let vt=Nt();if(vt instanceof ye&&(vt=new W(vt.value.toString())),!(vt instanceof W))throw new SyntaxError("Expected identifier for the test");Le=new gt(Le,Re,vt)}return Le}function Wt(){let Le=Be();for(;et(F.Pipe);){++z;let Re=Nt();if(!(Re instanceof W))throw new SyntaxError("Expected identifier for the filter");et(F.OpenParen)&&(Re=Ke(Re)),Le=new ft(Le,Re)}return Le}function Nt(){const Le=E[z];switch(Le.type){case F.NumericLiteral:return++z,new G(Number(Le.value));case F.StringLiteral:return++z,new P(Le.value);case F.BooleanLiteral:return++z,new ye(Le.value.toLowerCase()==="true");case F.Identifier:return++z,new W(Le.value);case F.OpenParen:{++z;const Re=U();if(E[z].type!==F.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${E[z].type} instead`);return++z,Re}case F.OpenSquareBracket:{++z;const Re=[];for(;!et(F.CloseSquareBracket);)Re.push(Se()),et(F.Comma)&&++z;return++z,new Ce(Re)}case F.OpenCurlyBracket:{++z;const Re=new Map;for(;!et(F.CloseCurlyBracket);){const vt=Se();ae(F.Colon,"Expected colon between key and value in object literal");const Ht=Se();Re.set(vt,Ht),et(F.Comma)&&++z}return++z,new je(Re)}default:throw new SyntaxError(`Unexpected token: ${Le.type}`)}}for(;z<E.length;)Y.body.push(be());return Y}function Qe(E,Y,z=1){Y===void 0&&(Y=E,E=0);const ae=[];for(let be=E;be<Y;be+=z)ae.push(be);return ae}function _t(E,Y,z,ae=1){const be=Math.sign(ae);be>=0?(Y=(Y??=0)<0?Math.max(E.length+Y,0):Math.min(Y,E.length),z=(z??=E.length)<0?Math.max(E.length+z,0):Math.min(z,E.length)):(Y=(Y??=E.length-1)<0?Math.max(E.length+Y,-1):Math.min(Y,E.length-1),z=(z??=-1)<-1?Math.max(E.length+z,-1):Math.min(z,E.length-1));const it=[];for(let et=Y;be*et<be*z;et+=ae)it.push(E[et]);return it}function de(E){return E.replace(/\b\w/g,Y=>Y.toUpperCase())}var Ue=class{type="RuntimeValue";value;builtins=new Map;constructor(E=void 0){this.value=E}__bool__(){return new Mt(!!this.value)}},ct=class extends Ue{type="NumericValue"},Ve=class extends Ue{type="StringValue";builtins=new Map([["upper",new nt(()=>new Ve(this.value.toUpperCase()))],["lower",new nt(()=>new Ve(this.value.toLowerCase()))],["strip",new nt(()=>new Ve(this.value.trim()))],["title",new nt(()=>new Ve(de(this.value)))],["length",new ct(this.value.length)]])},Mt=class extends Ue{type="BooleanValue"},Et=class extends Ue{type="ObjectValue";__bool__(){return new Mt(this.value.size>0)}builtins=new Map([["get",new nt(([E,Y])=>{if(!(E instanceof Ve))throw new Error(`Object key must be a string: got ${E.type}`);return this.value.get(E.value)??Y??new at})],["items",new nt(()=>new Q(Array.from(this.value.entries()).map(([E,Y])=>new Q([new Ve(E),Y]))))]])},tt=class extends Et{type="KeywordArgumentsValue"},Q=class extends Ue{type="ArrayValue";builtins=new Map([["length",new ct(this.value.length)]]);__bool__(){return new Mt(this.value.length>0)}},ze=class extends Q{type="TupleValue"},nt=class extends Ue{type="FunctionValue"},at=class extends Ue{type="NullValue"},Ze=class extends Ue{type="UndefinedValue"},He=class{constructor(E){this.parent=E}variables=new Map([["namespace",new nt(E=>{if(E.length===0)return new Et(new Map);if(E.length!==1||!(E[0]instanceof Et))throw new Error("`namespace` expects either zero arguments or a single object argument");return E[0]})]]);tests=new Map([["boolean",E=>E.type==="BooleanValue"],["callable",E=>E instanceof nt],["odd",E=>{if(E.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${E.type}`);return E.value%2!==0}],["even",E=>{if(E.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${E.type}`);return E.value%2===0}],["false",E=>E.type==="BooleanValue"&&!E.value],["true",E=>E.type==="BooleanValue"&&E.value],["string",E=>E.type==="StringValue"],["number",E=>E.type==="NumericValue"],["integer",E=>E.type==="NumericValue"&&Number.isInteger(E.value)],["iterable",E=>E instanceof Q||E instanceof Ve],["lower",E=>{const Y=E.value;return E.type==="StringValue"&&Y===Y.toLowerCase()}],["upper",E=>{const Y=E.value;return E.type==="StringValue"&&Y===Y.toUpperCase()}],["none",E=>E.type==="NullValue"],["defined",E=>E.type!=="UndefinedValue"],["undefined",E=>E.type==="UndefinedValue"],["equalto",(E,Y)=>E.value===Y.value],["eq",(E,Y)=>E.value===Y.value]]);set(E,Y){return this.declareVariable(E,wt(Y))}declareVariable(E,Y){if(this.variables.has(E))throw new SyntaxError(`Variable already declared: ${E}`);return this.variables.set(E,Y),Y}setVariable(E,Y){return this.variables.set(E,Y),Y}resolve(E){if(this.variables.has(E))return this;if(this.parent)return this.parent.resolve(E);throw new Error(`Unknown variable: ${E}`)}lookupVariable(E){try{return this.resolve(E).variables.get(E)??new Ze}catch{return new Ze}}},mt=class{global;constructor(E){this.global=E??new He}run(E){return this.evaluate(E,this.global)}evaluateBinaryExpression(E,Y){const z=this.evaluate(E.left,Y);switch(E.operator.value){case"and":return z.__bool__().value?this.evaluate(E.right,Y):z;case"or":return z.__bool__().value?z:this.evaluate(E.right,Y)}const ae=this.evaluate(E.right,Y);switch(E.operator.value){case"==":return new Mt(z.value==ae.value);case"!=":return new Mt(z.value!=ae.value)}if(z instanceof Ze||ae instanceof Ze)throw new Error("Cannot perform operation on undefined values");if(z instanceof at||ae instanceof at)throw new Error("Cannot perform operation on null values");if(z instanceof ct&&ae instanceof ct)switch(E.operator.value){case"+":return new ct(z.value+ae.value);case"-":return new ct(z.value-ae.value);case"*":return new ct(z.value*ae.value);case"/":return new ct(z.value/ae.value);case"%":return new ct(z.value%ae.value);case"<":return new Mt(z.value<ae.value);case">":return new Mt(z.value>ae.value);case">=":return new Mt(z.value>=ae.value);case"<=":return new Mt(z.value<=ae.value)}else if(z instanceof Q&&ae instanceof Q)switch(E.operator.value){case"+":return new Q(z.value.concat(ae.value))}else if(ae instanceof Q){const be=ae.value.find(it=>it.value===z.value)!==void 0;switch(E.operator.value){case"in":return new Mt(be);case"not in":return new Mt(!be)}}if(z instanceof Ve||ae instanceof Ve)switch(E.operator.value){case"+":return new Ve(z.value.toString()+ae.value.toString())}if(z instanceof Ve&&ae instanceof Ve)switch(E.operator.value){case"in":return new Mt(ae.value.includes(z.value));case"not in":return new Mt(!ae.value.includes(z.value))}if(z instanceof Ve&&ae instanceof Et)switch(E.operator.value){case"in":return new Mt(ae.value.has(z.value));case"not in":return new Mt(!ae.value.has(z.value))}throw new SyntaxError(`Unknown operator "${E.operator.value}" between ${z.type} and ${ae.type}`)}evaluateArguments(E,Y){const z=[],ae=new Map;for(const be of E)if(be.type==="KeywordArgumentExpression"){const it=be;ae.set(it.key.value,this.evaluate(it.value,Y))}else{if(ae.size>0)throw new Error("Positional arguments must come before keyword arguments");z.push(this.evaluate(be,Y))}return[z,ae]}evaluateFilterExpression(E,Y){const z=this.evaluate(E.operand,Y);if(E.filter.type==="Identifier"){const ae=E.filter;if(ae.value==="tojson")return new Ve(Lt(z));if(z instanceof Q)switch(ae.value){case"list":return z;case"first":return z.value[0];case"last":return z.value[z.value.length-1];case"length":return new ct(z.value.length);case"reverse":return new Q(z.value.reverse());case"sort":return new Q(z.value.sort((be,it)=>{if(be.type!==it.type)throw new Error(`Cannot compare different types: ${be.type} and ${it.type}`);switch(be.type){case"NumericValue":return be.value-it.value;case"StringValue":return be.value.localeCompare(it.value);default:throw new Error(`Cannot compare type: ${be.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${ae.value}`)}else if(z instanceof Ve)switch(ae.value){case"length":return new ct(z.value.length);case"upper":return new Ve(z.value.toUpperCase());case"lower":return new Ve(z.value.toLowerCase());case"title":return new Ve(de(z.value));case"capitalize":return new Ve(z.value.charAt(0).toUpperCase()+z.value.slice(1));case"trim":return new Ve(z.value.trim());case"indent":return new Ve(z.value.split(`
`).map((be,it)=>it===0||be.length===0?be:"    "+be).join(`
`));case"string":return z;default:throw new Error(`Unknown StringValue filter: ${ae.value}`)}else if(z instanceof ct)switch(ae.value){case"abs":return new ct(Math.abs(z.value));default:throw new Error(`Unknown NumericValue filter: ${ae.value}`)}else if(z instanceof Et)switch(ae.value){case"items":return new Q(Array.from(z.value.entries()).map(([be,it])=>new Q([new Ve(be),it])));case"length":return new ct(z.value.size);default:throw new Error(`Unknown ObjectValue filter: ${ae.value}`)}throw new Error(`Cannot apply filter "${ae.value}" to type: ${z.type}`)}else if(E.filter.type==="CallExpression"){const ae=E.filter;if(ae.callee.type!=="Identifier")throw new Error(`Unknown filter: ${ae.callee.type}`);const be=ae.callee.value;if(be==="tojson"){const[,it]=this.evaluateArguments(ae.args,Y),et=it.get("indent")??new at;if(!(et instanceof ct||et instanceof at))throw new Error("If set, indent must be a number");return new Ve(Lt(z,et.value))}if(z instanceof Q){switch(be){case"selectattr":{if(z.value.some(T=>!(T instanceof Et)))throw new Error("`selectattr` can only be applied to array of objects");if(ae.args.some(T=>T.type!=="StringLiteral"))throw new Error("arguments of `selectattr` must be strings");const[it,et,At]=ae.args.map(T=>this.evaluate(T,Y));let ot;if(et){const T=Y.tests.get(et.value);if(!T)throw new Error(`Unknown test: ${et.value}`);ot=T}else ot=(...T)=>T[0].__bool__().value;const yt=z.value.filter(T=>{const c=T.value.get(it.value);return c?ot(c,At):!1});return new Q(yt)}case"map":{const[,it]=this.evaluateArguments(ae.args,Y);if(it.has("attribute")){const et=it.get("attribute");if(!(et instanceof Ve))throw new Error("attribute must be a string");const At=it.get("default"),ot=z.value.map(yt=>{if(!(yt instanceof Et))throw new Error("items in map must be an object");return yt.value.get(et.value)??At??new Ze});return new Q(ot)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${be}`)}else if(z instanceof Ve){switch(be){case"indent":{const[it,et]=this.evaluateArguments(ae.args,Y),At=it.at(0)??et.get("width")??new ct(4);if(!(At instanceof ct))throw new Error("width must be a number");const ot=it.at(1)??et.get("first")??new Mt(!1),yt=it.at(2)??et.get("blank")??new Mt(!1),T=z.value.split(`
`),c=" ".repeat(At.value),m=T.map((U,he)=>!ot.value&&he===0||!yt.value&&U.length===0?U:c+U);return new Ve(m.join(`
`))}}throw new Error(`Unknown StringValue filter: ${be}`)}else throw new Error(`Cannot apply filter "${be}" to type: ${z.type}`)}throw new Error(`Unknown filter: ${E.filter.type}`)}evaluateTestExpression(E,Y){const z=this.evaluate(E.operand,Y),ae=Y.tests.get(E.test.value);if(!ae)throw new Error(`Unknown test: ${E.test.value}`);const be=ae(z);return new Mt(E.negate?!be:be)}evaluateUnaryExpression(E,Y){const z=this.evaluate(E.argument,Y);switch(E.operator.value){case"not":return new Mt(!z.value);default:throw new SyntaxError(`Unknown operator: ${E.operator.value}`)}}evalProgram(E,Y){return this.evaluateBlock(E.body,Y)}evaluateBlock(E,Y){let z="";for(const ae of E){const be=this.evaluate(ae,Y);be.type!=="NullValue"&&be.type!=="UndefinedValue"&&(z+=be.value)}return new Ve(z)}evaluateIdentifier(E,Y){return Y.lookupVariable(E.value)}evaluateCallExpression(E,Y){const[z,ae]=this.evaluateArguments(E.args,Y);ae.size>0&&z.push(new tt(ae));const be=this.evaluate(E.callee,Y);if(be.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${be.type}`);return be.value(z,Y)}evaluateSliceExpression(E,Y,z){if(!(E instanceof Q||E instanceof Ve))throw new Error("Slice object must be an array or string");const ae=this.evaluate(Y.start,z),be=this.evaluate(Y.stop,z),it=this.evaluate(Y.step,z);if(!(ae instanceof ct||ae instanceof Ze))throw new Error("Slice start must be numeric or undefined");if(!(be instanceof ct||be instanceof Ze))throw new Error("Slice stop must be numeric or undefined");if(!(it instanceof ct||it instanceof Ze))throw new Error("Slice step must be numeric or undefined");return E instanceof Q?new Q(_t(E.value,ae.value,be.value,it.value)):new Ve(_t(Array.from(E.value),ae.value,be.value,it.value).join(""))}evaluateMemberExpression(E,Y){const z=this.evaluate(E.object,Y);let ae;if(E.computed){if(E.property.type==="SliceExpression")return this.evaluateSliceExpression(z,E.property,Y);ae=this.evaluate(E.property,Y)}else ae=new Ve(E.property.value);let be;if(z instanceof Et){if(!(ae instanceof Ve))throw new Error(`Cannot access property with non-string: got ${ae.type}`);be=z.value.get(ae.value)??z.builtins.get(ae.value)}else if(z instanceof Q||z instanceof Ve)if(ae instanceof ct)be=z.value.at(ae.value),z instanceof Ve&&(be=new Ve(z.value.at(ae.value)));else if(ae instanceof Ve)be=z.builtins.get(ae.value);else throw new Error(`Cannot access property with non-string/non-number: got ${ae.type}`);else{if(!(ae instanceof Ve))throw new Error(`Cannot access property with non-string: got ${ae.type}`);be=z.builtins.get(ae.value)}return be instanceof Ue?be:new Ze}evaluateSet(E,Y){const z=this.evaluate(E.value,Y);if(E.assignee.type==="Identifier"){const ae=E.assignee.value;Y.setVariable(ae,z)}else if(E.assignee.type==="MemberExpression"){const ae=E.assignee,be=this.evaluate(ae.object,Y);if(!(be instanceof Et))throw new Error("Cannot assign to member of non-object");if(ae.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");be.value.set(ae.property.value,z)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(E.assignee)}`);return new at}evaluateIf(E,Y){const z=this.evaluate(E.test,Y);return this.evaluateBlock(z.__bool__().value?E.body:E.alternate,Y)}evaluateFor(E,Y){const z=new He(Y);let ae,be;if(E.iterable.type==="SelectExpression"){const yt=E.iterable;be=this.evaluate(yt.iterable,z),ae=yt.test}else be=this.evaluate(E.iterable,z);if(!(be instanceof Q))throw new Error(`Expected iterable type in for loop: got ${be.type}`);const it=[],et=[];for(let yt=0;yt<be.value.length;++yt){const T=new He(z),c=be.value[yt];let m;if(E.loopvar.type==="Identifier")m=U=>U.setVariable(E.loopvar.value,c);else if(E.loopvar.type==="TupleLiteral"){const U=E.loopvar;if(c.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${c.type}`);const he=c;if(U.value.length!==he.value.length)throw new Error(`Too ${U.value.length>he.value.length?"few":"many"} items to unpack`);m=Se=>{for(let Ge=0;Ge<U.value.length;++Ge){if(U.value[Ge].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${U.value[Ge].type}`);Se.setVariable(U.value[Ge].value,he.value[Ge])}}}else throw new Error(`Invalid loop variable(s): ${E.loopvar.type}`);ae&&(m(T),!this.evaluate(ae,T).__bool__().value)||(it.push(c),et.push(m))}let At="",ot=!0;for(let yt=0;yt<it.length;++yt){const T=new Map([["index",new ct(yt+1)],["index0",new ct(yt)],["revindex",new ct(it.length-yt)],["revindex0",new ct(it.length-yt-1)],["first",new Mt(yt===0)],["last",new Mt(yt===it.length-1)],["length",new ct(it.length)],["previtem",yt>0?it[yt-1]:new Ze],["nextitem",yt<it.length-1?it[yt+1]:new Ze]]);z.setVariable("loop",new Et(T)),et[yt](z);const c=this.evaluateBlock(E.body,z);At+=c.value,ot=!1}if(ot){const yt=this.evaluateBlock(E.defaultBlock,z);At+=yt.value}return new Ve(At)}evaluateMacro(E,Y){return Y.setVariable(E.name.value,new nt((z,ae)=>{const be=new He(ae);z=z.slice();let it;z.at(-1)?.type==="KeywordArgumentsValue"&&(it=z.pop());for(let et=0;et<E.args.length;++et){const At=E.args[et],ot=z[et];if(At.type==="Identifier"){const yt=At;if(!ot)throw new Error(`Missing positional argument: ${yt.value}`);be.setVariable(yt.value,ot)}else if(At.type==="KeywordArgumentExpression"){const yt=At,T=ot??it?.value.get(yt.key.value)??this.evaluate(yt.value,be);be.setVariable(yt.key.value,T)}else throw new Error(`Unknown argument type: ${At.type}`)}return this.evaluateBlock(E.body,be)})),new at}evaluate(E,Y){if(E===void 0)return new Ze;switch(E.type){case"Program":return this.evalProgram(E,Y);case"Set":return this.evaluateSet(E,Y);case"If":return this.evaluateIf(E,Y);case"For":return this.evaluateFor(E,Y);case"Macro":return this.evaluateMacro(E,Y);case"NumericLiteral":return new ct(Number(E.value));case"StringLiteral":return new Ve(E.value);case"BooleanLiteral":return new Mt(E.value);case"ArrayLiteral":return new Q(E.value.map(z=>this.evaluate(z,Y)));case"TupleLiteral":return new ze(E.value.map(z=>this.evaluate(z,Y)));case"ObjectLiteral":{const z=new Map;for(const[ae,be]of E.value){const it=this.evaluate(ae,Y);if(!(it instanceof Ve))throw new Error(`Object keys must be strings: got ${it.type}`);z.set(it.value,this.evaluate(be,Y))}return new Et(z)}case"Identifier":return this.evaluateIdentifier(E,Y);case"CallExpression":return this.evaluateCallExpression(E,Y);case"MemberExpression":return this.evaluateMemberExpression(E,Y);case"UnaryExpression":return this.evaluateUnaryExpression(E,Y);case"BinaryExpression":return this.evaluateBinaryExpression(E,Y);case"FilterExpression":return this.evaluateFilterExpression(E,Y);case"TestExpression":return this.evaluateTestExpression(E,Y);default:throw new SyntaxError(`Unknown node type: ${E.type}`)}}};function wt(E){switch(typeof E){case"number":return new ct(E);case"string":return new Ve(E);case"boolean":return new Mt(E);case"undefined":return new Ze;case"object":return E===null?new at:Array.isArray(E)?new Q(E.map(wt)):new Et(new Map(Object.entries(E).map(([Y,z])=>[Y,wt(z)])));case"function":return new nt((Y,z)=>{const ae=E(...Y.map(be=>be.value))??null;return wt(ae)});default:throw new Error(`Cannot convert to runtime value: ${E}`)}}function Lt(E,Y,z){const ae=z??0;switch(E.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(E.value);case"ArrayValue":case"ObjectValue":{const be=Y?" ".repeat(Y):"",it=`
`+be.repeat(ae),et=it+be;if(E.type==="ArrayValue"){const At=E.value.map(ot=>Lt(ot,Y,ae+1));return Y?`[${et}${At.join(`,${et}`)}${it}]`:`[${At.join(", ")}]`}else{const At=Array.from(E.value.entries()).map(([ot,yt])=>{const T=`"${ot}": ${Lt(yt,Y,ae+1)}`;return Y?`${et}${T}`:T});return Y?`{${At.join(",")}${it}}`:`{${At.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${E.type}`)}}var kt=class{parsed;constructor(E){const Y=j(E,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=ke(Y)}render(E){const Y=new He;Y.set("false",!1),Y.set("true",!0),Y.set("raise_exception",be=>{throw new Error(be)}),Y.set("range",Qe);for(const[be,it]of Object.entries(E))Y.set(be,it);return new mt(Y).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{registerBackend:()=>oe,resolveBackendAndExecutionProviders:()=>Ee});const F=new Map,ue=[],oe=(L,O,M)=>{if(O&&typeof O.init=="function"&&typeof O.createInferenceSessionHandler=="function"){const j=F.get(L);if(j===void 0)F.set(L,{backend:O,priority:M});else{if(j.priority>M)return;if(j.priority===M&&j.backend!==O)throw new Error(`cannot register backend "${L}" using priority ${M}`)}if(M>=0){const K=ue.indexOf(L);K!==-1&&ue.splice(K,1);for(let se=0;se<ue.length;se++)if(F.get(ue[se]).priority<=M){ue.splice(se,0,L);return}ue.push(L)}return}throw new TypeError("not a valid backend")},ge=async L=>{const O=F.get(L);if(!O)return"backend not found.";if(O.initialized)return O.backend;if(O.aborted)return O.error;{const M=!!O.initPromise;try{return M||(O.initPromise=O.backend.init(L)),await O.initPromise,O.initialized=!0,O.backend}catch(j){return M||(O.error=`${j}`,O.aborted=!0),O.error}finally{delete O.initPromise}}},Ee=async L=>{const O=L.executionProviders||[],M=O.map(N=>typeof N=="string"?N:N.name),j=M.length===0?ue:M;let K;const se=[],Te=new Set;for(const N of j){const re=await ge(N);typeof re=="string"?se.push({name:N,err:re}):(K||(K=re),K===re&&Te.add(N))}if(!K)throw new Error(`no available backend found. ERR: ${se.map(N=>`[${N.name}] ${N.err}`).join(", ")}`);for(const{name:N,err:re}of se)M.includes(N)&&console.warn(`removing requested execution provider "${N}" from session options because it is not available: ${re}`);const Me=O.filter(N=>Te.has(typeof N=="string"?N:N.name));return[K,new Proxy(L,{get:(N,re)=>re==="executionProviders"?Me:Reflect.get(N,re)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{registerBackend:()=>F.registerBackend});var F=I("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{env:()=>oe});var F=I("./node_modules/onnxruntime-common/dist/esm/version.js");let ue="warning";const oe={wasm:{},webgl:{},webgpu:{},versions:{common:F.version},set logLevel(ge){if(ge!==void 0){if(typeof ge!="string"||["verbose","info","warning","error","fatal"].indexOf(ge)===-1)throw new Error(`Unsupported logging level: ${ge}`);ue=ge}},get logLevel(){return ue}};Object.defineProperty(oe,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{env:()=>ue});var F=I("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const ue=F.env},"./node_modules/onnxruntime-common/dist/esm/index.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{InferenceSession:()=>oe.InferenceSession,TRACE:()=>Ee.TRACE,TRACE_FUNC_BEGIN:()=>Ee.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>Ee.TRACE_FUNC_END,Tensor:()=>ge.Tensor,TrainingSession:()=>L.TrainingSession,env:()=>ue.env,registerBackend:()=>F.registerBackend});var F=I("./node_modules/onnxruntime-common/dist/esm/backend.js"),ue=I("./node_modules/onnxruntime-common/dist/esm/env.js"),oe=I("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),ge=I("./node_modules/onnxruntime-common/dist/esm/tensor.js");I("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),I("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var Ee=I("./node_modules/onnxruntime-common/dist/esm/trace.js");I("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),I("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var L=I("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{InferenceSession:()=>ge});var F=I("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),ue=I("./node_modules/onnxruntime-common/dist/esm/tensor.js"),oe=I("./node_modules/onnxruntime-common/dist/esm/trace.js");class ge{constructor(L){this.handler=L}async run(L,O,M){(0,oe.TRACE_FUNC_BEGIN)();const j={};let K={};if(typeof L!="object"||L===null||L instanceof ue.Tensor||Array.isArray(L))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let se=!0;if(typeof O=="object"){if(O===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(O instanceof ue.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(O)){if(O.length===0)throw new TypeError("'fetches' cannot be an empty array.");se=!1;for(const N of O){if(typeof N!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(N)===-1)throw new RangeError(`'fetches' contains invalid output name: ${N}.`);j[N]=null}if(typeof M=="object"&&M!==null)K=M;else if(typeof M<"u")throw new TypeError("'options' must be an object.")}else{let N=!1;const re=Object.getOwnPropertyNames(O);for(const ve of this.outputNames)if(re.indexOf(ve)!==-1){const J=O[ve];(J===null||J instanceof ue.Tensor)&&(N=!0,se=!1,j[ve]=J)}if(N){if(typeof M=="object"&&M!==null)K=M;else if(typeof M<"u")throw new TypeError("'options' must be an object.")}else K=O}}else if(typeof O<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const N of this.inputNames)if(typeof L[N]>"u")throw new Error(`input '${N}' is missing in 'feeds'.`);if(se)for(const N of this.outputNames)j[N]=null;const Te=await this.handler.run(L,j,K),Me={};for(const N in Te)if(Object.hasOwnProperty.call(Te,N)){const re=Te[N];re instanceof ue.Tensor?Me[N]=re:Me[N]=new ue.Tensor(re.type,re.data,re.dims)}return(0,oe.TRACE_FUNC_END)(),Me}async release(){return this.handler.dispose()}static async create(L,O,M,j){(0,oe.TRACE_FUNC_BEGIN)();let K,se={};if(typeof L=="string"){if(K=L,typeof O=="object"&&O!==null)se=O;else if(typeof O<"u")throw new TypeError("'options' must be an object.")}else if(L instanceof Uint8Array){if(K=L,typeof O=="object"&&O!==null)se=O;else if(typeof O<"u")throw new TypeError("'options' must be an object.")}else if(L instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&L instanceof SharedArrayBuffer){const re=L;let ve=0,J=L.byteLength;if(typeof O=="object"&&O!==null)se=O;else if(typeof O=="number"){if(ve=O,!Number.isSafeInteger(ve))throw new RangeError("'byteOffset' must be an integer.");if(ve<0||ve>=re.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${re.byteLength}).`);if(J=L.byteLength-ve,typeof M=="number"){if(J=M,!Number.isSafeInteger(J))throw new RangeError("'byteLength' must be an integer.");if(J<=0||ve+J>re.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${re.byteLength-ve}].`);if(typeof j=="object"&&j!==null)se=j;else if(typeof j<"u")throw new TypeError("'options' must be an object.")}else if(typeof M<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof O<"u")throw new TypeError("'options' must be an object.");K=new Uint8Array(re,ve,J)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[Te,Me]=await(0,F.resolveBackendAndExecutionProviders)(se),N=await Te.createInferenceSessionHandler(K,Me);return(0,oe.TRACE_FUNC_END)(),new ge(N)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{InferenceSession:()=>ue});var F=I("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js");const ue=F.InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(Ae,ie,I)=>{I.r(ie)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(Ae,ie,I)=>{I.r(ie)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{tensorToDataURL:()=>F,tensorToImageData:()=>ue});const F=(oe,ge)=>{const Ee=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);Ee.width=oe.dims[3],Ee.height=oe.dims[2];const L=Ee.getContext("2d");if(L!=null){let O,M;ge?.tensorLayout!==void 0&&ge.tensorLayout==="NHWC"?(O=oe.dims[2],M=oe.dims[3]):(O=oe.dims[3],M=oe.dims[2]);const j=ge?.format!==void 0?ge.format:"RGB",K=ge?.norm;let se,Te;K===void 0||K.mean===void 0?se=[255,255,255,255]:typeof K.mean=="number"?se=[K.mean,K.mean,K.mean,K.mean]:(se=[K.mean[0],K.mean[1],K.mean[2],0],K.mean[3]!==void 0&&(se[3]=K.mean[3])),K===void 0||K.bias===void 0?Te=[0,0,0,0]:typeof K.bias=="number"?Te=[K.bias,K.bias,K.bias,K.bias]:(Te=[K.bias[0],K.bias[1],K.bias[2],0],K.bias[3]!==void 0&&(Te[3]=K.bias[3]));const Me=M*O;let N=0,re=Me,ve=Me*2,J=-1;j==="RGBA"?(N=0,re=Me,ve=Me*2,J=Me*3):j==="RGB"?(N=0,re=Me,ve=Me*2):j==="RBG"&&(N=0,ve=Me,re=Me*2);for(let Z=0;Z<M;Z++)for(let W=0;W<O;W++){const B=(oe.data[N++]-Te[0])*se[0],G=(oe.data[re++]-Te[1])*se[1],P=(oe.data[ve++]-Te[2])*se[2],ye=J===-1?255:(oe.data[J++]-Te[3])*se[3];L.fillStyle="rgba("+B+","+G+","+P+","+ye+")",L.fillRect(W,Z,1,1)}if("toDataURL"in Ee)return Ee.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},ue=(oe,ge)=>{const Ee=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let L;if(Ee!=null){let O,M,j;ge?.tensorLayout!==void 0&&ge.tensorLayout==="NHWC"?(O=oe.dims[2],M=oe.dims[1],j=oe.dims[3]):(O=oe.dims[3],M=oe.dims[2],j=oe.dims[1]);const K=ge!==void 0&&ge.format!==void 0?ge.format:"RGB",se=ge?.norm;let Te,Me;se===void 0||se.mean===void 0?Te=[255,255,255,255]:typeof se.mean=="number"?Te=[se.mean,se.mean,se.mean,se.mean]:(Te=[se.mean[0],se.mean[1],se.mean[2],255],se.mean[3]!==void 0&&(Te[3]=se.mean[3])),se===void 0||se.bias===void 0?Me=[0,0,0,0]:typeof se.bias=="number"?Me=[se.bias,se.bias,se.bias,se.bias]:(Me=[se.bias[0],se.bias[1],se.bias[2],0],se.bias[3]!==void 0&&(Me[3]=se.bias[3]));const N=M*O;if(ge!==void 0&&(ge.format!==void 0&&j===4&&ge.format!=="RGBA"||j===3&&ge.format!=="RGB"&&ge.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const re=4;let ve=0,J=1,Z=2,W=3,B=0,G=N,P=N*2,ye=-1;K==="RGBA"?(B=0,G=N,P=N*2,ye=N*3):K==="RGB"?(B=0,G=N,P=N*2):K==="RBG"&&(B=0,P=N,G=N*2),L=Ee.createImageData(O,M);for(let Ce=0;Ce<M*O;ve+=re,J+=re,Z+=re,W+=re,Ce++)L.data[ve]=(oe.data[B++]-Me[0])*Te[0],L.data[J]=(oe.data[G++]-Me[1])*Te[1],L.data[Z]=(oe.data[P++]-Me[2])*Te[2],L.data[W]=ye===-1?255:(oe.data[ye++]-Me[3])*Te[3]}else throw new Error("Can not access image data");return L}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(Ae,ie,I)=>{I.r(ie)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{bufferToTensor:()=>ue,tensorFromGpuBuffer:()=>Ee,tensorFromImage:()=>oe,tensorFromPinnedBuffer:()=>L,tensorFromTexture:()=>ge});var F=I("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const ue=(O,M)=>{if(O===void 0)throw new Error("Image buffer must be defined");if(M.height===void 0||M.width===void 0)throw new Error("Image height and width must be defined");if(M.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:j,width:K}=M,se=M.norm??{mean:255,bias:0};let Te,Me;typeof se.mean=="number"?Te=[se.mean,se.mean,se.mean,se.mean]:Te=[se.mean[0],se.mean[1],se.mean[2],se.mean[3]??255],typeof se.bias=="number"?Me=[se.bias,se.bias,se.bias,se.bias]:Me=[se.bias[0],se.bias[1],se.bias[2],se.bias[3]??0];const N=M.format!==void 0?M.format:"RGBA",re=M.tensorFormat!==void 0&&M.tensorFormat!==void 0?M.tensorFormat:"RGB",ve=j*K,J=re==="RGBA"?new Float32Array(ve*4):new Float32Array(ve*3);let Z=4,W=0,B=1,G=2,P=3,ye=0,Ce=ve,Pe=ve*2,je=-1;N==="RGB"&&(Z=3,W=0,B=1,G=2,P=-1),re==="RGBA"?je=ve*3:re==="RBG"?(ye=0,Pe=ve,Ce=ve*2):re==="BGR"&&(Pe=0,Ce=ve,ye=ve*2);for(let ft=0;ft<ve;ft++,W+=Z,G+=Z,B+=Z,P+=Z)J[ye++]=(O[W]+Me[0])/Te[0],J[Ce++]=(O[B]+Me[1])/Te[1],J[Pe++]=(O[G]+Me[2])/Te[2],je!==-1&&P!==-1&&(J[je++]=(O[P]+Me[3])/Te[3]);return re==="RGBA"?new F.Tensor("float32",J,[1,4,j,K]):new F.Tensor("float32",J,[1,3,j,K])},oe=async(O,M)=>{const j=typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement,K=typeof ImageData<"u"&&O instanceof ImageData,se=typeof ImageBitmap<"u"&&O instanceof ImageBitmap,Te=typeof O=="string";let Me,N=M??{};const re=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},ve=J=>J instanceof HTMLCanvasElement||J instanceof OffscreenCanvas?J.getContext("2d"):null;if(j){const J=re();J.width=O.width,J.height=O.height;const Z=ve(J);if(Z!=null){let W=O.height,B=O.width;if(M!==void 0&&M.resizedHeight!==void 0&&M.resizedWidth!==void 0&&(W=M.resizedHeight,B=M.resizedWidth),M!==void 0){if(N=M,M.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");N.tensorFormat="RGBA",N.height=W,N.width=B}else N.tensorFormat="RGBA",N.height=W,N.width=B;Z.drawImage(O,0,0),Me=Z.getImageData(0,0,B,W).data}else throw new Error("Can not access image data")}else if(K){let J,Z;if(M!==void 0&&M.resizedWidth!==void 0&&M.resizedHeight!==void 0?(J=M.resizedHeight,Z=M.resizedWidth):(J=O.height,Z=O.width),M!==void 0&&(N=M),N.format="RGBA",N.height=J,N.width=Z,M!==void 0){const W=re();W.width=Z,W.height=J;const B=ve(W);if(B!=null)B.putImageData(O,0,0),Me=B.getImageData(0,0,Z,J).data;else throw new Error("Can not access image data")}else Me=O.data}else if(se){if(M===void 0)throw new Error("Please provide image config with format for Imagebitmap");const J=re();J.width=O.width,J.height=O.height;const Z=ve(J);if(Z!=null){const W=O.height,B=O.width;return Z.drawImage(O,0,0,B,W),Me=Z.getImageData(0,0,B,W).data,N.height=W,N.width=B,ue(Me,N)}else throw new Error("Can not access image data")}else{if(Te)return new Promise((J,Z)=>{const W=re(),B=ve(W);if(!O||!B)return Z();const G=new Image;G.crossOrigin="Anonymous",G.src=O,G.onload=()=>{W.width=G.width,W.height=G.height,B.drawImage(G,0,0,W.width,W.height);const P=B.getImageData(0,0,W.width,W.height);N.height=W.height,N.width=W.width,J(ue(P.data,N))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(Me!==void 0)return ue(Me,N);throw new Error("Input data provided is not supported - aborted tensor creation")},ge=(O,M)=>{const{width:j,height:K,download:se,dispose:Te}=M,Me=[1,K,j,4];return new F.Tensor({location:"texture",type:"float32",texture:O,dims:Me,download:se,dispose:Te})},Ee=(O,M)=>{const{dataType:j,dims:K,download:se,dispose:Te}=M;return new F.Tensor({location:"gpu-buffer",type:j??"float32",gpuBuffer:O,dims:K,download:se,dispose:Te})},L=(O,M,j)=>new F.Tensor({location:"cpu-pinned",type:O,data:M,dims:j??[M.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(Ae,ie,I)=>{I.r(ie)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>ue,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>F,checkTypedArray:()=>ge});const F=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),ue=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let oe=!1;const ge=()=>{if(!oe){oe=!0;const Ee=typeof BigInt64Array<"u"&&BigInt64Array.from,L=typeof BigUint64Array<"u"&&BigUint64Array.from,O=typeof Float16Array<"u"&&Float16Array.from;Ee&&(F.set("int64",BigInt64Array),ue.set(BigInt64Array,"int64")),L&&(F.set("uint64",BigUint64Array),ue.set(BigUint64Array,"uint64")),O?(F.set("float16",Float16Array),ue.set(Float16Array,"float16")):F.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{Tensor:()=>Ee});var F=I("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),ue=I("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),oe=I("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),ge=I("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class Ee{constructor(O,M,j){(0,oe.checkTypedArray)();let K,se;if(typeof O=="object"&&"location"in O)switch(this.dataLocation=O.location,K=O.type,se=O.dims,O.location){case"cpu-pinned":{const Me=oe.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(K);if(!Me)throw new TypeError(`unsupported type "${K}" to create tensor from pinned buffer`);if(!(O.data instanceof Me))throw new TypeError(`buffer should be of type ${Me.name}`);this.cpuData=O.data;break}case"texture":{if(K!=="float32")throw new TypeError(`unsupported type "${K}" to create tensor from texture`);this.gpuTextureData=O.texture,this.downloader=O.download,this.disposer=O.dispose;break}case"gpu-buffer":{if(K!=="float32"&&K!=="float16"&&K!=="int32"&&K!=="int64"&&K!=="uint32"&&K!=="uint8"&&K!=="bool")throw new TypeError(`unsupported type "${K}" to create tensor from gpu buffer`);this.gpuBufferData=O.gpuBuffer,this.downloader=O.download,this.disposer=O.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let Me,N;if(typeof O=="string")if(K=O,N=j,O==="string"){if(!Array.isArray(M))throw new TypeError("A string tensor's data must be a string array.");Me=M}else{const re=oe.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(O);if(re===void 0)throw new TypeError(`Unsupported tensor type: ${O}.`);if(Array.isArray(M)){if(O==="float16"&&re===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");O==="uint64"||O==="int64"?Me=re.from(M,BigInt):Me=re.from(M)}else if(M instanceof re)Me=M;else throw new TypeError(`A ${K} tensor's data must be type of ${re}`)}else if(N=M,Array.isArray(O)){if(O.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const re=typeof O[0];if(re==="string")K="string",Me=O;else if(re==="boolean")K="bool",Me=Uint8Array.from(O);else throw new TypeError(`Invalid element type of data array: ${re}.`)}else{const re=oe.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(O.constructor);if(re===void 0)throw new TypeError(`Unsupported type for tensor data: ${O.constructor}.`);K=re,Me=O}if(N===void 0)N=[Me.length];else if(!Array.isArray(N))throw new TypeError("A tensor's dims must be a number array");se=N,this.cpuData=Me,this.dataLocation="cpu"}const Te=(0,ge.calculateSize)(se);if(this.cpuData&&Te!==this.cpuData.length)throw new Error(`Tensor's size(${Te}) does not match data length(${this.cpuData.length}).`);this.type=K,this.dims=se,this.size=Te}static async fromImage(O,M){return(0,ue.tensorFromImage)(O,M)}static fromTexture(O,M){return(0,ue.tensorFromTexture)(O,M)}static fromGpuBuffer(O,M){return(0,ue.tensorFromGpuBuffer)(O,M)}static fromPinnedBuffer(O,M,j){return(0,ue.tensorFromPinnedBuffer)(O,M,j)}toDataURL(O){return(0,F.tensorToDataURL)(this,O)}toImageData(O){return(0,F.tensorToImageData)(this,O)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(O){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const M=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=M,O&&this.disposer&&(this.disposer(),this.disposer=void 0),M}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(O){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,ge.tensorReshape)(this,O)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{calculateSize:()=>ue,tensorReshape:()=>oe});var F=I("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const ue=ge=>{let Ee=1;for(let L=0;L<ge.length;L++){const O=ge[L];if(typeof O!="number"||!Number.isSafeInteger(O))throw new TypeError(`dims[${L}] must be an integer, got: ${O}`);if(O<0)throw new RangeError(`dims[${L}] must be a non-negative integer, got: ${O}`);Ee*=O}return Ee},oe=(ge,Ee)=>{switch(ge.location){case"cpu":return new F.Tensor(ge.type,ge.data,Ee);case"cpu-pinned":return new F.Tensor({location:"cpu-pinned",data:ge.data,type:ge.type,dims:Ee});case"texture":return new F.Tensor({location:"texture",texture:ge.texture,type:ge.type,dims:Ee});case"gpu-buffer":return new F.Tensor({location:"gpu-buffer",gpuBuffer:ge.gpuBuffer,type:ge.type,dims:Ee});default:throw new Error(`tensorReshape: tensor location ${ge.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{Tensor:()=>ue});var F=I("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const ue=F.Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{TRACE:()=>ue,TRACE_FUNC_BEGIN:()=>ge,TRACE_FUNC_END:()=>Ee});var F=I("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const ue=(L,O)=>{(typeof F.env.trace>"u"?!F.env.wasm.trace:!F.env.trace)||console.timeStamp(`${L}::ORT::${O}`)},oe=(L,O)=>{const M=new Error().stack?.split(/\r\n|\r|\n/g)||[];let j=!1;for(let K=0;K<M.length;K++){if(j&&!M[K].includes("TRACE_FUNC")){let se=`FUNC_${L}::${M[K].trim().split(" ")[1]}`;O&&(se+=`::${O}`),ue("CPU",se);return}M[K].includes("TRACE_FUNC")&&(j=!0)}},ge=L=>{(typeof F.env.trace>"u"?!F.env.wasm.trace:!F.env.trace)||oe("BEGIN",L)},Ee=L=>{(typeof F.env.trace>"u"?!F.env.wasm.trace:!F.env.trace)||oe("END",L)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{TrainingSession:()=>ge});var F=I("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),ue=I("./node_modules/onnxruntime-common/dist/esm/tensor.js");const oe="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";class ge{constructor(L,O,M){this.handler=L,this.hasOptimizerModel=O,this.hasEvalModel=M}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(L,O){const M=L.evalModel||"",j=L.optimizerModel||"",K=O||{},[se,Te]=await(0,F.resolveBackendAndExecutionProviders)(K);if(se.createTrainingSessionHandler){const Me=await se.createTrainingSessionHandler(L.checkpointState,L.trainModel,M,j,Te);return new ge(Me,!!L.optimizerModel,!!L.evalModel)}else throw new Error(oe)}typeNarrowingForRunStep(L,O,M,j,K){const se={};let Te={};if(typeof M!="object"||M===null||M instanceof ue.Tensor||Array.isArray(M))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let Me=!0;if(typeof j=="object"){if(j===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(j instanceof ue.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(j)){if(j.length===0)throw new TypeError("'fetches' cannot be an empty array.");Me=!1;for(const N of j){if(typeof N!="string")throw new TypeError("'fetches' must be a string array or an object.");if(O.indexOf(N)===-1)throw new RangeError(`'fetches' contains invalid output name: ${N}.`);se[N]=null}if(typeof K=="object"&&K!==null)Te=K;else if(typeof K<"u")throw new TypeError("'options' must be an object.")}else{let N=!1;const re=Object.getOwnPropertyNames(j);for(const ve of O)if(re.indexOf(ve)!==-1){const J=j[ve];(J===null||J instanceof ue.Tensor)&&(N=!0,Me=!1,se[ve]=J)}if(N){if(typeof K=="object"&&K!==null)Te=K;else if(typeof K<"u")throw new TypeError("'options' must be an object.")}else Te=j}}else if(typeof j<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const N of L)if(typeof M[N]>"u")throw new Error(`input '${N}' is missing in 'feeds'.`);if(Me)for(const N of O)se[N]=null;return[se,Te]}convertHandlerReturnTypeToMapOfTensors(L){const O={};for(const M in L)if(Object.hasOwnProperty.call(L,M)){const j=L[M];j instanceof ue.Tensor?O[M]=j:O[M]=new ue.Tensor(j.type,j.data,j.dims)}return O}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(L,O,M){const[j,K]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,L,O,M),se=await this.handler.runTrainStep(L,j,K);return this.convertHandlerReturnTypeToMapOfTensors(se)}async runOptimizerStep(L){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(L||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(L,O,M){if(this.hasEvalModel){const[j,K]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,L,O,M),se=await this.handler.runEvalStep(L,j,K);return this.convertHandlerReturnTypeToMapOfTensors(se)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(L=!0){return this.handler.getParametersSize(L)}async loadParametersBuffer(L,O=!0){const M=await this.getParametersSize(O);if(L.length!==4*M)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(L,O)}async getContiguousParameters(L=!0){return this.handler.getContiguousParameters(L)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{TrainingSession:()=>ue});var F=I("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js");const ue=F.TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{version:()=>F});const F="1.19.2"},"./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs":(Ae,ie,I)=>{I.r(ie),I.d(ie,{InferenceSession:()=>kt,TRACE:()=>nt,TRACE_FUNC_BEGIN:()=>Ze,TRACE_FUNC_END:()=>He,Tensor:()=>Q,TrainingSession:()=>ot,default:()=>mm,env:()=>P,registerBackend:()=>Te});/*!
 * ONNX Runtime Web v1.21.0-dev.20241024-d9ca84ef96
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var F=Object.defineProperty,ue=Object.getOwnPropertyDescriptor,oe=Object.getOwnPropertyNames,ge=Object.prototype.hasOwnProperty,Ee=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),L=(e,t)=>()=>(e&&(t=e(e=0)),t),O=(e,t)=>{for(var r in t)F(e,r,{get:t[r],enumerable:!0})},M=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of oe(t))!ge.call(e,i)&&i!==r&&F(e,i,{get:()=>t[i],enumerable:!(n=ue(t,i))||n.enumerable});return e},j=e=>M(F({},"__esModule",{value:!0}),e),K,se,Te,Me,N,re=L(()=>{K=new Map,se=[],Te=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let n=K.get(e);if(n===void 0)K.set(e,{backend:t,priority:r});else{if(n.priority>r)return;if(n.priority===r&&n.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let i=se.indexOf(e);i!==-1&&se.splice(i,1);for(let s=0;s<se.length;s++)if(K.get(se[s]).priority<=r){se.splice(s,0,e);return}se.push(e)}return}throw new TypeError("not a valid backend")},Me=async e=>{let t=K.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(n){return r||(t.error=`${n}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},N=async e=>{let t=e.executionProviders||[],r=t.map(d=>typeof d=="string"?d:d.name),n=r.length===0?se:r,i,s=[],o=new Set;for(let d of n){let h=await Me(d);typeof h=="string"?s.push({name:d,err:h}):(i||(i=h),i===h&&o.add(d))}if(!i)throw new Error(`no available backend found. ERR: ${s.map(d=>`[${d.name}] ${d.err}`).join(", ")}`);for(let{name:d,err:h}of s)r.includes(d)&&console.warn(`removing requested execution provider "${d}" from session options because it is not available: ${h}`);let u=t.filter(d=>o.has(typeof d=="string"?d:d.name));return[i,new Proxy(e,{get:(d,h)=>h==="executionProviders"?u:Reflect.get(d,h)})]}}),ve=L(()=>{re()}),J,Z=L(()=>{J="1.20.0-dev.20241016-2b8fc5529b"}),W,B,G=L(()=>{Z(),W="warning",B={wasm:{},webgl:{},webgpu:{},versions:{common:J},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);W=e}},get logLevel(){return W}},Object.defineProperty(B,"logLevel",{enumerable:!0})}),P,ye=L(()=>{G(),P=B}),Ce,Pe,je=L(()=>{Ce=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let n=r.getContext("2d");if(n!=null){let i,s;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],s=e.dims[3]):(i=e.dims[3],s=e.dims[2]);let o=t?.format!==void 0?t.format:"RGB",u=t?.norm,d,h;u===void 0||u.mean===void 0?d=[255,255,255,255]:typeof u.mean=="number"?d=[u.mean,u.mean,u.mean,u.mean]:(d=[u.mean[0],u.mean[1],u.mean[2],0],u.mean[3]!==void 0&&(d[3]=u.mean[3])),u===void 0||u.bias===void 0?h=[0,0,0,0]:typeof u.bias=="number"?h=[u.bias,u.bias,u.bias,u.bias]:(h=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(h[3]=u.bias[3]));let y=s*i,l=0,x=y,k=y*2,S=-1;o==="RGBA"?(l=0,x=y,k=y*2,S=y*3):o==="RGB"?(l=0,x=y,k=y*2):o==="RBG"&&(l=0,k=y,x=y*2);for(let C=0;C<s;C++)for(let X=0;X<i;X++){let H=(e.data[l++]-h[0])*d[0],A=(e.data[x++]-h[1])*d[1],ee=(e.data[k++]-h[2])*d[2],le=S===-1?255:(e.data[S++]-h[3])*d[3];n.fillStyle="rgba("+H+","+A+","+ee+","+le+")",n.fillRect(X,C,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Pe=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),n;if(r!=null){let i,s,o;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],s=e.dims[1],o=e.dims[3]):(i=e.dims[3],s=e.dims[2],o=e.dims[1]);let u=t!==void 0&&t.format!==void 0?t.format:"RGB",d=t?.norm,h,y;d===void 0||d.mean===void 0?h=[255,255,255,255]:typeof d.mean=="number"?h=[d.mean,d.mean,d.mean,d.mean]:(h=[d.mean[0],d.mean[1],d.mean[2],255],d.mean[3]!==void 0&&(h[3]=d.mean[3])),d===void 0||d.bias===void 0?y=[0,0,0,0]:typeof d.bias=="number"?y=[d.bias,d.bias,d.bias,d.bias]:(y=[d.bias[0],d.bias[1],d.bias[2],0],d.bias[3]!==void 0&&(y[3]=d.bias[3]));let l=s*i;if(t!==void 0&&(t.format!==void 0&&o===4&&t.format!=="RGBA"||o===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let x=4,k=0,S=1,C=2,X=3,H=0,A=l,ee=l*2,le=-1;u==="RGBA"?(H=0,A=l,ee=l*2,le=l*3):u==="RGB"?(H=0,A=l,ee=l*2):u==="RBG"&&(H=0,ee=l,A=l*2),n=r.createImageData(i,s);for(let me=0;me<s*i;k+=x,S+=x,C+=x,X+=x,me++)n.data[k]=(e.data[H++]-y[0])*h[0],n.data[S]=(e.data[A++]-y[1])*h[1],n.data[C]=(e.data[ee++]-y[2])*h[2],n.data[X]=le===-1?255:(e.data[le++]-y[3])*h[3]}else throw new Error("Can not access image data");return n}}),De,ft,dt,gt,xe,q,_e=L(()=>{tt(),De=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:n}=t,i=t.norm??{mean:255,bias:0},s,o;typeof i.mean=="number"?s=[i.mean,i.mean,i.mean,i.mean]:s=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?o=[i.bias,i.bias,i.bias,i.bias]:o=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let u=t.format!==void 0?t.format:"RGBA",d=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",h=r*n,y=d==="RGBA"?new Float32Array(h*4):new Float32Array(h*3),l=4,x=0,k=1,S=2,C=3,X=0,H=h,A=h*2,ee=-1;u==="RGB"&&(l=3,x=0,k=1,S=2,C=-1),d==="RGBA"?ee=h*3:d==="RBG"?(X=0,A=h,H=h*2):d==="BGR"&&(A=0,H=h,X=h*2);for(let le=0;le<h;le++,x+=l,S+=l,k+=l,C+=l)y[X++]=(e[x]+o[0])/s[0],y[H++]=(e[k]+o[1])/s[1],y[A++]=(e[S]+o[2])/s[2],ee!==-1&&C!==-1&&(y[ee++]=(e[C]+o[3])/s[3]);return d==="RGBA"?new Et("float32",y,[1,4,r,n]):new Et("float32",y,[1,3,r,n])},ft=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,n=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,s=typeof e=="string",o,u=t??{},d=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},h=y=>typeof HTMLCanvasElement<"u"&&y instanceof HTMLCanvasElement||y instanceof OffscreenCanvas?y.getContext("2d"):null;if(r){let y=d();y.width=e.width,y.height=e.height;let l=h(y);if(l!=null){let x=e.height,k=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(x=t.resizedHeight,k=t.resizedWidth),t!==void 0){if(u=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");u.tensorFormat="RGBA",u.height=x,u.width=k}else u.tensorFormat="RGBA",u.height=x,u.width=k;l.drawImage(e,0,0),o=l.getImageData(0,0,k,x).data}else throw new Error("Can not access image data")}else if(n){let y,l;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(y=t.resizedHeight,l=t.resizedWidth):(y=e.height,l=e.width),t!==void 0&&(u=t),u.format="RGBA",u.height=y,u.width=l,t!==void 0){let x=d();x.width=l,x.height=y;let k=h(x);if(k!=null)k.putImageData(e,0,0),o=k.getImageData(0,0,l,y).data;else throw new Error("Can not access image data")}else o=e.data}else if(i){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let y=d();y.width=e.width,y.height=e.height;let l=h(y);if(l!=null){let x=e.height,k=e.width;return l.drawImage(e,0,0,k,x),o=l.getImageData(0,0,k,x).data,u.height=x,u.width=k,De(o,u)}else throw new Error("Can not access image data")}else{if(s)return new Promise((y,l)=>{let x=d(),k=h(x);if(!e||!k)return l();let S=new Image;S.crossOrigin="Anonymous",S.src=e,S.onload=()=>{x.width=S.width,x.height=S.height,k.drawImage(S,0,0,x.width,x.height);let C=k.getImageData(0,0,x.width,x.height);u.height=x.height,u.width=x.width,y(De(C.data,u))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return De(o,u);throw new Error("Input data provided is not supported - aborted tensor creation")},dt=(e,t)=>{let{width:r,height:n,download:i,dispose:s}=t,o=[1,n,r,4];return new Et({location:"texture",type:"float32",texture:e,dims:o,download:i,dispose:s})},gt=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:s}=t;return new Et({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:n,download:i,dispose:s})},xe=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:s}=t;return new Et({location:"ml-tensor",type:r??"float32",mlTensor:e,dims:n,download:i,dispose:s})},q=(e,t,r)=>new Et({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})}),ke,Qe,_t,de,Ue=L(()=>{ke=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Qe=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),_t=!1,de=()=>{if(!_t){_t=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;e&&(ke.set("int64",BigInt64Array),Qe.set(BigInt64Array,"int64")),t&&(ke.set("uint64",BigUint64Array),Qe.set(BigUint64Array,"uint64")),r?(ke.set("float16",Float16Array),Qe.set(Float16Array,"float16")):ke.set("float16",Uint16Array)}}}),ct,Ve,Mt=L(()=>{tt(),ct=e=>{let t=1;for(let r=0;r<e.length;r++){let n=e[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);t*=n}return t},Ve=(e,t)=>{switch(e.location){case"cpu":return new Et(e.type,e.data,t);case"cpu-pinned":return new Et({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new Et({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new Et({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new Et({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),Et,tt=L(()=>{je(),_e(),Ue(),Mt(),Et=class{constructor(e,t,r){de();let n,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,n=e.type,i=e.dims,e.location){case"cpu-pinned":{let o=ke.get(n);if(!o)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint64"&&n!=="int8"&&n!=="uint8"&&n!=="bool")throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,u;if(typeof e=="string")if(n=e,u=r,e==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");o=t}else{let d=ke.get(e);if(d===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e==="float16"&&d===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${d.name} as data.`);e==="uint64"||e==="int64"?o=d.from(t,BigInt):o=d.from(t)}else if(t instanceof d)o=t;else if(t instanceof Uint8ClampedArray)if(e==="uint8")o=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${n} tensor's data must be type of ${d}`)}else if(u=t,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let d=typeof e[0];if(d==="string")n="string",o=e;else if(d==="boolean")n="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${d}.`)}else if(e instanceof Uint8ClampedArray)n="uint8",o=Uint8Array.from(e);else{let d=Qe.get(e.constructor);if(d===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);n=d,o=e}if(u===void 0)u=[o.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=o,this.dataLocation="cpu"}let s=ct(i);if(this.cpuData&&s!==this.cpuData.length&&!((n==="uint4"||n==="int4")&&Math.ceil(s/2)===this.cpuData.length))throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=i,this.size=s}static async fromImage(e,t){return ft(e,t)}static fromTexture(e,t){return dt(e,t)}static fromGpuBuffer(e,t){return gt(e,t)}static fromMLTensor(e,t){return xe(e,t)}static fromPinnedBuffer(e,t,r){return q(e,t,r)}toDataURL(e){return Ce(this,e)}toImageData(e){return Pe(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Ve(this,e)}}}),Q,ze=L(()=>{tt(),Q=Et}),nt,at,Ze,He,mt=L(()=>{G(),nt=(e,t)=>{(typeof B.trace>"u"?!B.wasm.trace:!B.trace)||console.timeStamp(`${e}::ORT::${t}`)},at=(e,t)=>{let r=new Error().stack?.split(/\r\n|\r|\n/g)||[],n=!1;for(let i=0;i<r.length;i++){if(n&&!r[i].includes("TRACE_FUNC")){let s=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(s+=`::${t}`),nt("CPU",s);return}r[i].includes("TRACE_FUNC")&&(n=!0)}},Ze=e=>{(typeof B.trace>"u"?!B.wasm.trace:!B.trace)||at("BEGIN",e)},He=e=>{(typeof B.trace>"u"?!B.wasm.trace:!B.trace)||at("END",e)}}),wt,Lt=L(()=>{re(),ze(),mt(),wt=class Zf{constructor(t){this.handler=t}async run(t,r,n){Ze();let i={},s={};if(typeof t!="object"||t===null||t instanceof Q||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof Q)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let h of r){if(typeof h!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(h)===-1)throw new RangeError(`'fetches' contains invalid output name: ${h}.`);i[h]=null}if(typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let h=!1,y=Object.getOwnPropertyNames(r);for(let l of this.outputNames)if(y.indexOf(l)!==-1){let x=r[l];(x===null||x instanceof Q)&&(h=!0,o=!1,i[l]=x)}if(h){if(typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else s=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let h of this.inputNames)if(typeof t[h]>"u")throw new Error(`input '${h}' is missing in 'feeds'.`);if(o)for(let h of this.outputNames)i[h]=null;let u=await this.handler.run(t,i,s),d={};for(let h in u)if(Object.hasOwnProperty.call(u,h)){let y=u[h];y instanceof Q?d[h]=y:d[h]=new Q(y.type,y.data,y.dims)}return He(),d}async release(){return this.handler.dispose()}static async create(t,r,n,i){Ze();let s,o={};if(typeof t=="string"){if(s=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(s=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let y=t,l=0,x=t.byteLength;if(typeof r=="object"&&r!==null)o=r;else if(typeof r=="number"){if(l=r,!Number.isSafeInteger(l))throw new RangeError("'byteOffset' must be an integer.");if(l<0||l>=y.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${y.byteLength}).`);if(x=t.byteLength-l,typeof n=="number"){if(x=n,!Number.isSafeInteger(x))throw new RangeError("'byteLength' must be an integer.");if(x<=0||l+x>y.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${y.byteLength-l}].`);if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof n<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");s=new Uint8Array(y,l,x)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[u,d]=await N(o),h=await u.createInferenceSessionHandler(s,d);return He(),new Zf(h)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),kt,E=L(()=>{Lt(),kt=wt}),Y=L(()=>{}),z=L(()=>{}),ae=L(()=>{}),be=L(()=>{}),it,et,At=L(()=>{re(),ze(),it="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",et=class Jf{constructor(t,r,n){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,r){let n=t.evalModel||"",i=t.optimizerModel||"",s=r||{},[o,u]=await N(s);if(o.createTrainingSessionHandler){let d=await o.createTrainingSessionHandler(t.checkpointState,t.trainModel,n,i,u);return new Jf(d,!!t.optimizerModel,!!t.evalModel)}else throw new Error(it)}typeNarrowingForRunStep(t,r,n,i,s){let o={},u={};if(typeof n!="object"||n===null||n instanceof Q||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let d=!0;if(typeof i=="object"){if(i===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof Q)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(i.length===0)throw new TypeError("'fetches' cannot be an empty array.");d=!1;for(let h of i){if(typeof h!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(h)===-1)throw new RangeError(`'fetches' contains invalid output name: ${h}.`);o[h]=null}if(typeof s=="object"&&s!==null)u=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let h=!1,y=Object.getOwnPropertyNames(i);for(let l of r)if(y.indexOf(l)!==-1){let x=i[l];(x===null||x instanceof Q)&&(h=!0,d=!1,o[l]=x)}if(h){if(typeof s=="object"&&s!==null)u=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else u=i}}else if(typeof i<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let h of t)if(typeof n[h]>"u")throw new Error(`input '${h}' is missing in 'feeds'.`);if(d)for(let h of r)o[h]=null;return[o,u]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let n in t)if(Object.hasOwnProperty.call(t,n)){let i=t[n];i instanceof Q?r[n]=i:r[n]=new Q(i.type,i.data,i.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,n){let[i,s]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,n),o=await this.handler.runTrainStep(t,i,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,n){if(this.hasEvalModel){let[i,s]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,n),o=await this.handler.runEvalStep(t,i,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let n=await this.getParametersSize(r);if(t.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}}),ot,yt=L(()=>{At(),ot=et}),T={};O(T,{InferenceSession:()=>kt,TRACE:()=>nt,TRACE_FUNC_BEGIN:()=>Ze,TRACE_FUNC_END:()=>He,Tensor:()=>Q,TrainingSession:()=>ot,env:()=>P,registerBackend:()=>Te});var c=L(()=>{ve(),ye(),E(),ze(),Y(),z(),mt(),ae(),be(),yt()}),m=L(()=>{}),U={};O(U,{default:()=>Ge});var he,Se,Ge,sr=L(()=>{dh(),Dr(),Nt(),he="ort-wasm-proxy-worker",Se=globalThis.self?.name===he,Se&&(self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":jr(r.wasm).then(()=>{Wc(r).then(()=>{postMessage({type:t})},n=>{postMessage({type:t,err:n})})},n=>{postMessage({type:t,err:n})});break;case"init-ep":{let{epName:n,env:i}=r;Gc(i,n).then(()=>{postMessage({type:t})},s=>{postMessage({type:t,err:s})});break}case"copy-from":{let{buffer:n}=r,i=_c(n);postMessage({type:t,out:i});break}case"create":{let{model:n,options:i}=r;qc(n,i).then(s=>{postMessage({type:t,out:s})},s=>{postMessage({type:t,err:s})});break}case"release":Hc(r),postMessage({type:t});break;case"run":{let{sessionId:n,inputIndices:i,inputs:s,outputIndices:o,options:u}=r;Xc(n,i,s,o,new Array(o.length).fill(null),u).then(d=>{d.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:d},Yc([...s,...d]))},d=>{postMessage({type:t,err:d})});break}case"end-profiling":Qc(r),postMessage({type:t});break;default:}}catch(n){postMessage({type:t,err:n})}}),Ge=Se?null:e=>new Worker(e??Ke,{type:"module",name:he})}),Je={};O(Je,{default:()=>$e});var R,we,$e,Be=L(()=>{we=(R=import.meta.url,async function(e={}){function t(){return or.buffer!=xr.buffer&&Mn(),xr}function r(){return or.buffer!=xr.buffer&&Mn(),Xt}function n(){return or.buffer!=xr.buffer&&Mn(),yr}function i(){return or.buffer!=xr.buffer&&Mn(),rt}function s(){return or.buffer!=xr.buffer&&Mn(),St}function o(){return or.buffer!=xr.buffer&&Mn(),mr}function u(){return or.buffer!=xr.buffer&&Mn(),Wr}function d(){return or.buffer!=xr.buffer&&Mn(),Bn}var h,y,l=Object.assign({},e),x=new Promise((a,f)=>{h=a,y=f}),k=typeof window=="object",S=typeof importScripts=="function",C=S&&self.name=="em-pthread";l.mountExternalData=(a,f)=>{a.startsWith("./")&&(a=a.substring(2)),(l.Eb||(l.Eb=new Map)).set(a,f)},l.unmountExternalData=()=>{delete l.Eb};var X=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let H=()=>{let a=(b,$,D)=>(...pe)=>{let Ye=li,ht=$?.();pe=b(...pe);let Rt=$?.();return ht!==Rt&&(b=Rt,D(ht),$=D=null),li!=Ye?new Promise((Gt,nr)=>{gp={resolve:Gt,reject:nr}}):pe},f=b=>async(...$)=>{try{if(l.Fb)throw Error("Session already started");let D=l.Fb={fc:$[0],errors:[]},pe=await b(...$);if(l.Fb!==D)throw Error("Session mismatch");l.Gb?.flush();let Ye=D.errors;if(0<Ye.length){let ht=await Promise.all(Ye);if(ht=ht.filter(Rt=>Rt),0<ht.length)throw Error(ht.join(`
`))}return pe}finally{l.Fb=null}};l._OrtCreateSession=a(l._OrtCreateSession,()=>l._OrtCreateSession,b=>l._OrtCreateSession=b),l._OrtRun=f(a(l._OrtRun,()=>l._OrtRun,b=>l._OrtRun=b)),l._OrtRunWithBinding=f(a(l._OrtRunWithBinding,()=>l._OrtRunWithBinding,b=>l._OrtRunWithBinding=b)),l._OrtBindInput=a(l._OrtBindInput,()=>l._OrtBindInput,b=>l._OrtBindInput=b),H=void 0};l.jsepInit=(a,f)=>{if(H?.(),a==="webgpu"){[l.Gb,l.Ub,l.Yb,l.Nb,l.Xb,l.jb,l.Zb,l.bc,l.Vb,l.Wb,l.$b]=f;let b=l.Gb;l.jsepRegisterBuffer=($,D,pe,Ye)=>b.registerBuffer($,D,pe,Ye),l.jsepGetBuffer=$=>b.getBuffer($),l.jsepCreateDownloader=($,D,pe)=>b.createDownloader($,D,pe),l.jsepOnCreateSession=$=>{b.onCreateSession($)},l.jsepOnReleaseSession=$=>{b.onReleaseSession($)},l.jsepOnRunStart=$=>b.onRunStart($),l.cc=($,D)=>{b.upload($,D)}}else if(a==="webnn"){[l.Gb,l.ac,l.Ob,l.jsepEnsureTensor,l.dc,l.jsepDownloadTensor]=f,l.jsepReleaseTensorId=l.Ob;let b=l.Gb;l.jsepOnRunStart=$=>b.onRunStart($),l.jsepRegisterMLContext=($,D)=>{b.registerMLContext($,D)},l.jsepOnReleaseSession=$=>{b.onReleaseSession($)},l.jsepCreateMLTensorDownloader=($,D)=>b.createMLTensorDownloader($,D),l.jsepRegisterMLTensor=($,D,pe)=>b.registerMLTensor($,D,pe),l.qc=($,D,pe,Ye,ht)=>b.registerMLConstant($,D,pe,Ye,ht,l.Eb)}};var A,ee,le=Object.assign({},l),me="./this.program",qe=(a,f)=>{throw f},Fe="";(k||S)&&(S?Fe=self.location.href:typeof document<"u"&&document.currentScript&&(Fe=document.currentScript.src),R&&(Fe=R),Fe=Fe.startsWith("blob:")?"":Fe.substr(0,Fe.replace(/[?#].*/,"").lastIndexOf("/")+1),S&&(ee=a=>{var f=new XMLHttpRequest;return f.open("GET",a,!1),f.responseType="arraybuffer",f.send(null),new Uint8Array(f.response)}),A=(a,f,b)=>{var $=new XMLHttpRequest;$.open("GET",a,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?f($.response):b()},$.onerror=b,$.send(null)});var bt,Vt=console.log.bind(console),jt=console.error.bind(console),lr=Vt,Zt=jt;if(Object.assign(l,le),le=null,C){let a=function(f){try{var b=f.data,$=b.cmd;if($==="load"){let D=[];self.onmessage=pe=>D.push(pe),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let pe of D)a(pe);self.onmessage=a};for(let pe of b.handlers)l[pe]&&!l[pe].proxy||(l[pe]=(...Ye)=>{postMessage({Mb:"callHandler",oc:pe,args:Ye})},pe=="print"&&(lr=l[pe]),pe=="printErr"&&(Zt=l[pe]));or=b.wasmMemory,Mn(),ur(b.wasmModule)}else if($==="run"){Mp(b.pthread_ptr,0,0,1,0,0),fp(b.pthread_ptr),wm(),Oh(),Sr||(If(),Sr=!0);try{ym(b.start_routine,b.arg)}catch(D){if(D!="unwind")throw D}}else $==="cancel"?ra()&&kc(-1):b.target!=="setimmediate"&&($==="checkMailbox"?Sr&&bc():$&&(Zt(`worker: received unknown command ${$}`),Zt(b)))}catch(D){throw Ff(),D}};var ur,Sr=!1;Zt=function(...f){f=f.join(" "),console.error(f)},self.alert=function(...f){postMessage({Mb:"alert",text:f.join(" "),rc:ra()})},l.instantiateWasm=(f,b)=>new Promise($=>{ur=D=>{D=new WebAssembly.Instance(D,kh()),b(D),$()}}),self.onunhandledrejection=f=>{throw f.reason||f},self.onmessage=a}l.wasmBinary&&(bt=l.wasmBinary);var or,Qt,Tr,xr,Xt,yr,rt,St,mr,Wr,qr,Wn,Bn,En=!1;function Mn(){var a=or.buffer;l.HEAP8=xr=new Int8Array(a),l.HEAP16=yr=new Int16Array(a),l.HEAPU8=Xt=new Uint8Array(a),l.HEAPU16=rt=new Uint16Array(a),l.HEAP32=St=new Int32Array(a),l.HEAPU32=mr=new Uint32Array(a),l.HEAPF32=Wr=new Float32Array(a),l.HEAPF64=Bn=new Float64Array(a),l.HEAP64=qr=new BigInt64Array(a),l.HEAPU64=Wn=new BigUint64Array(a)}if(!C){if(!((or=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof X))throw Zt("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");Mn()}var fn=[],mn=[],Xi=[],Qi=0,ys=null;function Th(){if(--Qi==0&&ys){var a=ys;ys=null,a()}}function Jo(a){throw Zt(a="Aborted("+a+")"),En=!0,Tr=1,a=new WebAssembly.RuntimeError(a+". Build with -sASSERTIONS for more info."),y(a),a}var rp,Eh=a=>a.startsWith("data:application/octet-stream;base64,"),Ch=a=>a.startsWith("file://");function $h(a){if(a==rp&&bt)return new Uint8Array(bt);if(ee)return ee(a);throw"both async and sync fetching of the wasm failed"}function Sh(a,f,b){return function($){if(!bt&&(k||S)){if(typeof fetch=="function"&&!Ch($))return fetch($,{credentials:"same-origin"}).then(D=>{if(!D.ok)throw`failed to load wasm binary file at '${$}'`;return D.arrayBuffer()}).catch(()=>$h($));if(A)return new Promise((D,pe)=>{A($,Ye=>D(new Uint8Array(Ye)),pe)})}return Promise.resolve().then(()=>$h($))}(a).then($=>WebAssembly.instantiate($,f)).then(b,$=>{Zt(`failed to asynchronously prepare wasm: ${$}`),Jo($)})}function kh(){return{a:{O:gm,Aa:_m,b:Mm,aa:Lh,B:jh,qa:Uh,Y:Wh,_:Gh,ra:qh,oa:Hh,ha:Kh,na:Xh,L:Qh,Z:Yh,W:Zh,pa:Jh,X:ef,wa:vm,F:xm,Q:Tm,P:Cm,E:Sm,u:km,q:Pm,G:Am,A:Lm,R:Rm,ua:Nm,ka:jm,U:Um,ba:Vm,H:Wm,ja:fp,ta:Gm,t:qm,x:Xm,n:Qm,l:Zm,c:pp,o:Jm,j:r_,w:n_,p:i_,g:s_,s:o_,m:a_,e:l_,k:u_,i:d_,h:c_,d:p_,ea:h_,fa:f_,ga:m_,ca:mf,da:_f,T:__,f:g_,D:w_,I:y_,M:b_,y:M_,sa:v_,V:x_,v:wf,z:T_,N:E_,S:C_,za:$_,ya:S_,la:Mf,ma:vf,$:ap,C:xf,K:Tf,ia:Ef,J:Cf,a:or,xa:op,va:kf,r:A_}}}var np={867364:(a,f,b,$,D)=>{if(l===void 0||!l.Eb)return 1;if((a=gn(a>>>0)).startsWith("./")&&(a=a.substring(2)),!(a=l.Eb.get(a)))return 2;if($>>>=0,(f>>>=0)+(b>>>=0)>a.byteLength)return 3;try{let pe=a.subarray(f,f+b);switch(D){case 0:r().set(pe,$>>>0);break;case 1:l.cc($,pe);break;default:return 4}return 0}catch{return 4}},868047:(a,f,b)=>{l.dc(a,r().subarray(f>>>0,f+b>>>0))},868110:()=>l.ac(),868151:a=>{l.Ob(a)},868187:()=>{l.Vb()},868218:()=>{l.Wb()},868247:()=>{l.$b()},868272:a=>l.Ub(a),868305:a=>l.Yb(a),868337:(a,f,b)=>{l.Nb(a,f,b,!0)},868376:(a,f,b)=>{l.Nb(a,f,b)},868409:()=>typeof wasmOffsetConverter<"u",868466:a=>{l.jb("Abs",a,void 0)},868517:a=>{l.jb("Neg",a,void 0)},868568:a=>{l.jb("Floor",a,void 0)},868621:a=>{l.jb("Ceil",a,void 0)},868673:a=>{l.jb("Reciprocal",a,void 0)},868731:a=>{l.jb("Sqrt",a,void 0)},868783:a=>{l.jb("Exp",a,void 0)},868834:a=>{l.jb("Erf",a,void 0)},868885:a=>{l.jb("Sigmoid",a,void 0)},868940:(a,f,b)=>{l.jb("HardSigmoid",a,{alpha:f,beta:b})},869019:a=>{l.jb("Log",a,void 0)},869070:a=>{l.jb("Sin",a,void 0)},869121:a=>{l.jb("Cos",a,void 0)},869172:a=>{l.jb("Tan",a,void 0)},869223:a=>{l.jb("Asin",a,void 0)},869275:a=>{l.jb("Acos",a,void 0)},869327:a=>{l.jb("Atan",a,void 0)},869379:a=>{l.jb("Sinh",a,void 0)},869431:a=>{l.jb("Cosh",a,void 0)},869483:a=>{l.jb("Asinh",a,void 0)},869536:a=>{l.jb("Acosh",a,void 0)},869589:a=>{l.jb("Atanh",a,void 0)},869642:a=>{l.jb("Tanh",a,void 0)},869694:a=>{l.jb("Not",a,void 0)},869745:(a,f,b)=>{l.jb("Clip",a,{min:f,max:b})},869814:a=>{l.jb("Clip",a,void 0)},869866:(a,f)=>{l.jb("Elu",a,{alpha:f})},869924:a=>{l.jb("Gelu",a,void 0)},869976:a=>{l.jb("Relu",a,void 0)},870028:(a,f)=>{l.jb("LeakyRelu",a,{alpha:f})},870092:(a,f)=>{l.jb("ThresholdedRelu",a,{alpha:f})},870162:(a,f)=>{l.jb("Cast",a,{to:f})},870220:a=>{l.jb("Add",a,void 0)},870271:a=>{l.jb("Sub",a,void 0)},870322:a=>{l.jb("Mul",a,void 0)},870373:a=>{l.jb("Div",a,void 0)},870424:a=>{l.jb("Pow",a,void 0)},870475:a=>{l.jb("Equal",a,void 0)},870528:a=>{l.jb("Greater",a,void 0)},870583:a=>{l.jb("GreaterOrEqual",a,void 0)},870645:a=>{l.jb("Less",a,void 0)},870697:a=>{l.jb("LessOrEqual",a,void 0)},870756:(a,f,b,$,D)=>{l.jb("ReduceMean",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,D>>>0)):[]})},870915:(a,f,b,$,D)=>{l.jb("ReduceMax",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,D>>>0)):[]})},871073:(a,f,b,$,D)=>{l.jb("ReduceMin",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,D>>>0)):[]})},871231:(a,f,b,$,D)=>{l.jb("ReduceProd",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,D>>>0)):[]})},871390:(a,f,b,$,D)=>{l.jb("ReduceSum",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,D>>>0)):[]})},871548:(a,f,b,$,D)=>{l.jb("ReduceL1",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,D>>>0)):[]})},871705:(a,f,b,$,D)=>{l.jb("ReduceL2",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,D>>>0)):[]})},871862:(a,f,b,$,D)=>{l.jb("ReduceLogSum",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,D>>>0)):[]})},872023:(a,f,b,$,D)=>{l.jb("ReduceSumSquare",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,D>>>0)):[]})},872187:(a,f,b,$,D)=>{l.jb("ReduceLogSumExp",a,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(s().subarray($>>>0,D>>>0)):[]})},872351:a=>{l.jb("Where",a,void 0)},872404:(a,f,b)=>{l.jb("Transpose",a,{perm:f?Array.from(s().subarray(f>>>0,b>>>0)):[]})},872512:(a,f,b,$)=>{l.jb("DepthToSpace",a,{blocksize:f,mode:gn(b),format:$?"NHWC":"NCHW"})},872645:(a,f,b,$)=>{l.jb("DepthToSpace",a,{blocksize:f,mode:gn(b),format:$?"NHWC":"NCHW"})},872778:(a,f,b,$,D,pe,Ye,ht,Rt,Gt,nr,Fr,Rr,We,Pr)=>{l.jb("ConvTranspose",a,{format:Rt?"NHWC":"NCHW",autoPad:f,dilations:[b],group:$,kernelShape:[D],pads:[pe,Ye],strides:[ht],wIsConst:()=>!!t()[Gt>>>0],outputPadding:nr?Array.from(s().subarray(nr>>>0,Fr>>>0)):[],outputShape:Rr?Array.from(s().subarray(Rr>>>0,We>>>0)):[],activation:gn(Pr)})},873179:(a,f,b,$,D,pe,Ye,ht,Rt,Gt,nr,Fr,Rr,We)=>{l.jb("ConvTranspose",a,{format:ht?"NHWC":"NCHW",autoPad:f,dilations:Array.from(s().subarray(b>>>0,2+(b>>>0)>>>0)),group:$,kernelShape:Array.from(s().subarray(D>>>0,2+(D>>>0)>>>0)),pads:Array.from(s().subarray(pe>>>0,4+(pe>>>0)>>>0)),strides:Array.from(s().subarray(Ye>>>0,2+(Ye>>>0)>>>0)),wIsConst:()=>!!t()[Rt>>>0],outputPadding:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],outputShape:Fr?Array.from(s().subarray(Fr>>>0,Rr>>>0)):[],activation:gn(We)})},873744:(a,f,b,$,D,pe,Ye,ht,Rt,Gt,nr,Fr,Rr,We,Pr)=>{l.jb("ConvTranspose",a,{format:Rt?"NHWC":"NCHW",autoPad:f,dilations:[b],group:$,kernelShape:[D],pads:[pe,Ye],strides:[ht],wIsConst:()=>!!t()[Gt>>>0],outputPadding:nr?Array.from(s().subarray(nr>>>0,Fr>>>0)):[],outputShape:Rr?Array.from(s().subarray(Rr>>>0,We>>>0)):[],activation:gn(Pr)})},874145:(a,f,b,$,D,pe,Ye,ht,Rt,Gt,nr,Fr,Rr,We)=>{l.jb("ConvTranspose",a,{format:ht?"NHWC":"NCHW",autoPad:f,dilations:Array.from(s().subarray(b>>>0,2+(b>>>0)>>>0)),group:$,kernelShape:Array.from(s().subarray(D>>>0,2+(D>>>0)>>>0)),pads:Array.from(s().subarray(pe>>>0,4+(pe>>>0)>>>0)),strides:Array.from(s().subarray(Ye>>>0,2+(Ye>>>0)>>>0)),wIsConst:()=>!!t()[Rt>>>0],outputPadding:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],outputShape:Fr?Array.from(s().subarray(Fr>>>0,Rr>>>0)):[],activation:gn(We)})},874710:(a,f)=>{l.jb("GlobalAveragePool",a,{format:f?"NHWC":"NCHW"})},874801:(a,f,b,$,D,pe,Ye,ht,Rt,Gt,nr,Fr,Rr,We)=>{l.jb("AveragePool",a,{format:We?"NHWC":"NCHW",auto_pad:f,ceil_mode:b,count_include_pad:$,storage_order:D,dilations:pe?Array.from(s().subarray(pe>>>0,Ye>>>0)):[],kernel_shape:ht?Array.from(s().subarray(ht>>>0,Rt>>>0)):[],pads:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],strides:Fr?Array.from(s().subarray(Fr>>>0,Rr>>>0)):[]})},875216:(a,f)=>{l.jb("GlobalAveragePool",a,{format:f?"NHWC":"NCHW"})},875307:(a,f,b,$,D,pe,Ye,ht,Rt,Gt,nr,Fr,Rr,We)=>{l.jb("AveragePool",a,{format:We?"NHWC":"NCHW",auto_pad:f,ceil_mode:b,count_include_pad:$,storage_order:D,dilations:pe?Array.from(s().subarray(pe>>>0,Ye>>>0)):[],kernel_shape:ht?Array.from(s().subarray(ht>>>0,Rt>>>0)):[],pads:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],strides:Fr?Array.from(s().subarray(Fr>>>0,Rr>>>0)):[]})},875722:(a,f)=>{l.jb("GlobalMaxPool",a,{format:f?"NHWC":"NCHW"})},875809:(a,f,b,$,D,pe,Ye,ht,Rt,Gt,nr,Fr,Rr,We)=>{l.jb("MaxPool",a,{format:We?"NHWC":"NCHW",auto_pad:f,ceil_mode:b,count_include_pad:$,storage_order:D,dilations:pe?Array.from(s().subarray(pe>>>0,Ye>>>0)):[],kernel_shape:ht?Array.from(s().subarray(ht>>>0,Rt>>>0)):[],pads:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],strides:Fr?Array.from(s().subarray(Fr>>>0,Rr>>>0)):[]})},876220:(a,f)=>{l.jb("GlobalMaxPool",a,{format:f?"NHWC":"NCHW"})},876307:(a,f,b,$,D,pe,Ye,ht,Rt,Gt,nr,Fr,Rr,We)=>{l.jb("MaxPool",a,{format:We?"NHWC":"NCHW",auto_pad:f,ceil_mode:b,count_include_pad:$,storage_order:D,dilations:pe?Array.from(s().subarray(pe>>>0,Ye>>>0)):[],kernel_shape:ht?Array.from(s().subarray(ht>>>0,Rt>>>0)):[],pads:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],strides:Fr?Array.from(s().subarray(Fr>>>0,Rr>>>0)):[]})},876718:(a,f,b,$,D)=>{l.jb("Gemm",a,{alpha:f,beta:b,transA:$,transB:D})},876822:a=>{l.jb("MatMul",a,void 0)},876876:(a,f,b,$)=>{l.jb("ArgMax",a,{keepDims:!!f,selectLastIndex:!!b,axis:$})},876984:(a,f,b,$)=>{l.jb("ArgMin",a,{keepDims:!!f,selectLastIndex:!!b,axis:$})},877092:(a,f)=>{l.jb("Softmax",a,{axis:f})},877155:(a,f)=>{l.jb("Concat",a,{axis:f})},877215:(a,f,b,$,D)=>{l.jb("Split",a,{axis:f,numOutputs:b,splitSizes:$?Array.from(s().subarray($>>>0,D>>>0)):[]})},877355:a=>{l.jb("Expand",a,void 0)},877409:(a,f)=>{l.jb("Gather",a,{axis:Number(f)})},877480:(a,f)=>{l.jb("GatherElements",a,{axis:Number(f)})},877559:(a,f,b,$,D,pe,Ye,ht,Rt,Gt,nr)=>{l.jb("Resize",a,{antialias:f,axes:b?Array.from(s().subarray(b>>>0,$>>>0)):[],coordinateTransformMode:gn(D),cubicCoeffA:pe,excludeOutside:Ye,extrapolationValue:ht,keepAspectRatioPolicy:gn(Rt),mode:gn(Gt),nearestMode:gn(nr)})},877905:(a,f,b,$,D,pe,Ye)=>{l.jb("Slice",a,{starts:f?Array.from(s().subarray(f>>>0,b>>>0)):[],ends:$?Array.from(s().subarray($>>>0,D>>>0)):[],axes:pe?Array.from(s().subarray(pe>>>0,Ye>>>0)):[]})},878121:a=>{l.jb("Tile",a,void 0)},878173:(a,f,b)=>{l.jb("InstanceNormalization",a,{epsilon:f,format:b?"NHWC":"NCHW"})},878287:(a,f,b)=>{l.jb("InstanceNormalization",a,{epsilon:f,format:b?"NHWC":"NCHW"})},878401:a=>{l.jb("Range",a,void 0)},878454:(a,f)=>{l.jb("Einsum",a,{equation:gn(f)})},878535:(a,f,b,$,D)=>{l.jb("Pad",a,{mode:f,value:b,pads:$?Array.from(s().subarray($>>>0,D>>>0)):[]})},878662:(a,f,b,$,D,pe)=>{l.jb("BatchNormalization",a,{epsilon:f,momentum:b,spatial:!!D,trainingMode:!!$,format:pe?"NHWC":"NCHW"})},878831:(a,f,b,$,D,pe)=>{l.jb("BatchNormalization",a,{epsilon:f,momentum:b,spatial:!!D,trainingMode:!!$,format:pe?"NHWC":"NCHW"})},879e3:(a,f,b)=>{l.jb("CumSum",a,{exclusive:Number(f),reverse:Number(b)})},879097:(a,f,b)=>{l.jb("DequantizeLinear",a,{axis:f,blockSize:b})},879187:(a,f,b,$,D,pe,Ye,ht,Rt)=>{l.jb("Attention",a,{numHeads:f,isUnidirectional:b,maskFilterValue:$,scale:D,doRotary:pe,qkvHiddenSizes:Ye?Array.from(s().subarray(Number(ht)>>>0,Number(ht)+Ye>>>0)):[],pastPresentShareBuffer:!!Rt})},879459:a=>{l.jb("BiasAdd",a,void 0)},879514:a=>{l.jb("BiasSplitGelu",a,void 0)},879575:a=>{l.jb("FastGelu",a,void 0)},879631:(a,f,b,$,D,pe,Ye,ht,Rt,Gt,nr,Fr,Rr,We,Pr,en)=>{l.jb("Conv",a,{format:Fr?"NHWC":"NCHW",auto_pad:f,dilations:b?Array.from(s().subarray(b>>>0,$>>>0)):[],group:D,kernel_shape:pe?Array.from(s().subarray(pe>>>0,Ye>>>0)):[],pads:ht?Array.from(s().subarray(ht>>>0,Rt>>>0)):[],strides:Gt?Array.from(s().subarray(Gt>>>0,nr>>>0)):[],w_is_const:()=>!!t()[Rr>>>0],activation:gn(We),activation_params:Pr?Array.from(u().subarray(Pr>>>0,en>>>0)):[]})},880127:a=>{l.jb("Gelu",a,void 0)},880179:(a,f,b,$,D,pe,Ye,ht,Rt)=>{l.jb("GroupQueryAttention",a,{numHeads:f,kvNumHeads:b,scale:$,softcap:D,doRotary:pe,rotaryInterleaved:Ye,smoothSoftmax:ht,localWindowSize:Rt})},880396:(a,f,b,$)=>{l.jb("LayerNormalization",a,{axis:f,epsilon:b,simplified:!!$})},880507:(a,f,b,$)=>{l.jb("LayerNormalization",a,{axis:f,epsilon:b,simplified:!!$})},880618:(a,f,b,$,D,pe)=>{l.jb("MatMulNBits",a,{k:f,n:b,accuracyLevel:$,bits:D,blockSize:pe})},880745:(a,f,b,$,D,pe)=>{l.jb("MultiHeadAttention",a,{numHeads:f,isUnidirectional:b,maskFilterValue:$,scale:D,doRotary:pe})},880904:(a,f)=>{l.jb("QuickGelu",a,{alpha:f})},880968:(a,f,b,$,D)=>{l.jb("RotaryEmbedding",a,{interleaved:!!f,numHeads:b,rotaryEmbeddingDim:$,scale:D})},881107:(a,f,b)=>{l.jb("SkipLayerNormalization",a,{epsilon:f,simplified:!!b})},881209:(a,f,b)=>{l.jb("SkipLayerNormalization",a,{epsilon:f,simplified:!!b})},881311:(a,f,b,$)=>{l.jb("GatherBlockQuantized",a,{gatherAxis:f,quantizeAxis:b,blockSize:$})},881432:a=>{l.Zb(a)},881466:(a,f)=>l.bc(a,f,l.Fb.fc,l.Fb.errors)};function _m(a,f,b){return df(async()=>{await l.Xb(a,f,b)})}function gm(){return typeof wasmOffsetConverter<"u"}function ip(a){this.name="ExitStatus",this.message=`Program terminated with exit(${a})`,this.status=a}var sp=a=>{a.terminate(),a.onmessage=()=>{}},Ph=a=>{Yi.length==0&&(zh(),Bh(Yi[0]));var f=Yi.pop();if(!f)return 6;Ms.push(f),oi[a.Ab]=f,f.Ab=a.Ab;var b={cmd:"run",start_routine:a.hc,arg:a.Qb,pthread_ptr:a.Ab};return f.postMessage(b,a.mc),0},bs=0,Yr=(a,f,...b)=>{for(var $=2*b.length,D=Tp(),pe=xp(8*$),Ye=pe>>>3,ht=0;ht<b.length;ht++){var Rt=b[ht];typeof Rt=="bigint"?(qr[Ye+2*ht]=1n,qr[Ye+2*ht+1]=Rt):(qr[Ye+2*ht]=0n,d()[Ye+2*ht+1>>>0]=Rt)}return a=Of(a,0,$,pe,f),Pc(D),a};function op(a){if(C)return Yr(0,1,a);if(Tr=a,!(0<bs)){for(var f of Ms)sp(f);for(f of Yi)sp(f);Yi=[],Ms=[],oi=[],En=!0}qe(a,new ip(a))}function Ah(a){if(C)return Yr(1,0,a);ap(a)}var ap=a=>{if(Tr=a,C)throw Ah(a),"unwind";op(a)},Yi=[],Ms=[],Ih=[],oi={},Fh=a=>{var f=a.Ab;delete oi[f],Yi.push(a),Ms.splice(Ms.indexOf(a),1),a.Ab=0,vp(f)};function Oh(){Ih.forEach(a=>a())}var Bh=a=>new Promise(f=>{a.onmessage=D=>{var pe=(D=D.data).cmd;if(D.targetThread&&D.targetThread!=ra()){var Ye=oi[D.targetThread];Ye?Ye.postMessage(D,D.transferList):Zt(`Internal error! Worker sent a message "${pe}" to target pthread ${D.targetThread}, but that thread no longer exists!`)}else pe==="checkMailbox"?bc():pe==="spawnThread"?Ph(D):pe==="cleanupThread"?Fh(oi[D.thread]):pe==="killThread"?(D=D.thread,pe=oi[D],delete oi[D],sp(pe),vp(D),Ms.splice(Ms.indexOf(pe),1),pe.Ab=0):pe==="cancelThread"?oi[D.thread].postMessage({cmd:"cancel"}):pe==="loaded"?(a.loaded=!0,f(a)):pe==="alert"?alert(`Thread ${D.threadId}: ${D.text}`):D.target==="setimmediate"?a.postMessage(D):pe==="callHandler"?l[D.handler](...D.args):pe&&Zt(`worker sent an unknown command ${pe}`)},a.onerror=D=>{throw Zt(`worker sent an error! ${D.filename}:${D.lineno}: ${D.message}`),D};var b,$=[];for(b of[])l.hasOwnProperty(b)&&$.push(b);a.postMessage({cmd:"load",handlers:$,wasmMemory:or,wasmModule:Qt})});function zh(){var a=new Worker(new URL(import.meta.url),{type:"module",workerData:"em-pthread",name:"em-pthread"});Yi.push(a)}var yc=a=>{for(;0<a.length;)a.shift()(l)},wm=()=>{var a=ra(),f=o()[a+52>>>2>>>0];a=o()[a+56>>>2>>>0],zf(f,f-a),Pc(f)},ym=(a,f)=>{bs=0,a=Df(a,f),0<bs?Tr=a:kc(a)};class bm{constructor(f){this.Jb=f-24}}function Mm(a,f,b){var $=new bm(a>>>=0);throw f>>>=0,b>>>=0,o()[$.Jb+16>>>2>>>0]=0,o()[$.Jb+4>>>2>>>0]=f,o()[$.Jb+8>>>2>>>0]=b,a}function Dh(a,f,b,$){return C?Yr(2,1,a,f,b,$):Lh(a,f,b,$)}function Lh(a,f,b,$){if(a>>>=0,f>>>=0,b>>>=0,$>>>=0,X===void 0)return Zt("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var D=[];return C&&D.length===0?Dh(a,f,b,$):(a={hc:b,Ab:a,Qb:$,mc:D},C?(a.Mb="spawnThread",postMessage(a,D),0):Ph(a))}var Rh=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Nh=(a,f,b)=>{var $=(f>>>=0)+b;for(b=f;a[b]&&!(b>=$);)++b;if(16<b-f&&a.buffer&&Rh)return Rh.decode(a.buffer instanceof X?a.slice(f,b):a.subarray(f,b));for($="";f<b;){var D=a[f++];if(128&D){var pe=63&a[f++];if((224&D)==192)$+=String.fromCharCode((31&D)<<6|pe);else{var Ye=63&a[f++];65536>(D=(240&D)==224?(15&D)<<12|pe<<6|Ye:(7&D)<<18|pe<<12|Ye<<6|63&a[f++])?$+=String.fromCharCode(D):(D-=65536,$+=String.fromCharCode(55296|D>>10,56320|1023&D))}}else $+=String.fromCharCode(D)}return $},gn=(a,f)=>(a>>>=0)?Nh(r(),a,f):"";function jh(a,f,b){return C?Yr(3,1,a,f,b):0}function Uh(a,f){if(C)return Yr(4,1,a,f)}var lp=a=>{for(var f=0,b=0;b<a.length;++b){var $=a.charCodeAt(b);127>=$?f++:2047>=$?f+=2:55296<=$&&57343>=$?(f+=4,++b):f+=3}return f},Vh=(a,f,b,$)=>{if(!(0<$))return 0;var D=b>>>=0;$=b+$-1;for(var pe=0;pe<a.length;++pe){var Ye=a.charCodeAt(pe);if(55296<=Ye&&57343>=Ye&&(Ye=65536+((1023&Ye)<<10)|1023&a.charCodeAt(++pe)),127>=Ye){if(b>=$)break;f[b++>>>0]=Ye}else{if(2047>=Ye){if(b+1>=$)break;f[b++>>>0]=192|Ye>>6}else{if(65535>=Ye){if(b+2>=$)break;f[b++>>>0]=224|Ye>>12}else{if(b+3>=$)break;f[b++>>>0]=240|Ye>>18,f[b++>>>0]=128|Ye>>12&63}f[b++>>>0]=128|Ye>>6&63}f[b++>>>0]=128|63&Ye}}return f[b>>>0]=0,b-D},ea=(a,f,b)=>Vh(a,r(),f,b);function Wh(a,f){if(C)return Yr(5,1,a,f)}function Gh(a,f,b){if(C)return Yr(6,1,a,f,b)}function qh(a,f,b){return C?Yr(7,1,a,f,b):0}function Hh(a,f){if(C)return Yr(8,1,a,f)}function Kh(a,f,b){if(C)return Yr(9,1,a,f,b)}function Xh(a,f,b,$){if(C)return Yr(10,1,a,f,b,$)}function Qh(a,f,b,$){if(C)return Yr(11,1,a,f,b,$)}function Yh(a,f,b,$){if(C)return Yr(12,1,a,f,b,$)}function Zh(a){if(C)return Yr(13,1,a)}function Jh(a,f){if(C)return Yr(14,1,a,f)}function ef(a,f,b){if(C)return Yr(15,1,a,f,b)}var tf,Zi,vm=()=>{Jo("")},ai=a=>{for(var f="";r()[a>>>0];)f+=tf[r()[a++>>>0]];return f},up={},dp={};function xi(a,f,b={}){if(!("argPackAdvance"in f))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function($,D,pe={}){var Ye=D.name;if(!$)throw new Zi(`type "${Ye}" must have a positive integer typeid pointer`);if(dp.hasOwnProperty($)){if(pe.Sb)return;throw new Zi(`Cannot register type '${Ye}' twice`)}dp[$]=D,up.hasOwnProperty($)&&(D=up[$],delete up[$],D.forEach(ht=>ht()))}(a,f,b)}var rf=(a,f,b)=>{switch(f){case 1:return b?$=>t()[$>>>0]:$=>r()[$>>>0];case 2:return b?$=>n()[$>>>1>>>0]:$=>i()[$>>>1>>>0];case 4:return b?$=>s()[$>>>2>>>0]:$=>o()[$>>>2>>>0];case 8:return b?$=>qr[$>>>3]:$=>Wn[$>>>3];default:throw new TypeError(`invalid integer width (${f}): ${a}`)}};function xm(a,f,b){b>>>=0,xi(a>>>=0,{name:f=ai(f>>>0),fromWireType:$=>$,toWireType:function($,D){if(typeof D!="bigint"&&typeof D!="number")throw D=D===null?"null":($=typeof D)=="object"||$==="array"||$==="function"?D.toString():""+D,new TypeError(`Cannot convert "${D}" to ${this.name}`);return typeof D=="number"&&(D=BigInt(D)),D},argPackAdvance:Ji,readValueFromPointer:rf(f,b,f.indexOf("u")==-1),Db:null})}var Ji=8;function Tm(a,f,b,$){xi(a>>>=0,{name:f=ai(f>>>0),fromWireType:function(D){return!!D},toWireType:function(D,pe){return pe?b:$},argPackAdvance:Ji,readValueFromPointer:function(D){return this.fromWireType(r()[D>>>0])},Db:null})}var cp=[],Ti=[];function pp(a){9<(a>>>=0)&&--Ti[a+1]==0&&(Ti[a]=void 0,cp.push(a))}var Gn=a=>{if(!a)throw new Zi("Cannot use deleted val. handle = "+a);return Ti[a]},qn=a=>{switch(a){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let f=cp.pop()||Ti.length;return Ti[f]=a,Ti[f+1]=1,f}};function hp(a){return this.fromWireType(o()[a>>>2>>>0])}var Em={name:"emscripten::val",fromWireType:a=>{var f=Gn(a);return pp(a),f},toWireType:(a,f)=>qn(f),argPackAdvance:Ji,readValueFromPointer:hp,Db:null};function Cm(a){return xi(a>>>0,Em)}var $m=(a,f)=>{switch(f){case 4:return function(b){return this.fromWireType(u()[b>>>2>>>0])};case 8:return function(b){return this.fromWireType(d()[b>>>3>>>0])};default:throw new TypeError(`invalid float width (${f}): ${a}`)}};function Sm(a,f,b){b>>>=0,xi(a>>>=0,{name:f=ai(f>>>0),fromWireType:$=>$,toWireType:($,D)=>D,argPackAdvance:Ji,readValueFromPointer:$m(f,b),Db:null})}function km(a,f,b,$,D){if(a>>>=0,b>>>=0,f=ai(f>>>0),D===-1&&(D=4294967295),D=ht=>ht,$===0){var pe=32-8*b;D=ht=>ht<<pe>>>pe}var Ye=f.includes("unsigned")?function(ht,Rt){return Rt>>>0}:function(ht,Rt){return Rt};xi(a,{name:f,fromWireType:D,toWireType:Ye,argPackAdvance:Ji,readValueFromPointer:rf(f,b,$!==0),Db:null})}function Pm(a,f,b){function $(pe){var Ye=o()[pe>>>2>>>0];return pe=o()[pe+4>>>2>>>0],new D(t().buffer,pe,Ye)}var D=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][f];xi(a>>>=0,{name:b=ai(b>>>0),fromWireType:$,argPackAdvance:Ji,readValueFromPointer:$},{Sb:!0})}function Am(a,f){a>>>=0;var b=(f=ai(f>>>0))==="std::string";xi(a,{name:f,fromWireType:function($){var D=o()[$>>>2>>>0],pe=$+4;if(b)for(var Ye=pe,ht=0;ht<=D;++ht){var Rt=pe+ht;if(ht==D||r()[Rt>>>0]==0){if(Ye=gn(Ye,Rt-Ye),Gt===void 0)var Gt=Ye;else Gt+="\0",Gt+=Ye;Ye=Rt+1}}else{for(Gt=Array(D),ht=0;ht<D;++ht)Gt[ht]=String.fromCharCode(r()[pe+ht>>>0]);Gt=Gt.join("")}return ui($),Gt},toWireType:function($,D){D instanceof ArrayBuffer&&(D=new Uint8Array(D));var pe=typeof D=="string";if(!(pe||D instanceof Uint8Array||D instanceof Uint8ClampedArray||D instanceof Int8Array))throw new Zi("Cannot pass non-string to std::string");var Ye=b&&pe?lp(D):D.length,ht=Sc(4+Ye+1),Rt=ht+4;if(o()[ht>>>2>>>0]=Ye,b&&pe)ea(D,Rt,Ye+1);else if(pe)for(pe=0;pe<Ye;++pe){var Gt=D.charCodeAt(pe);if(255<Gt)throw ui(Rt),new Zi("String has UTF-16 code units that do not fit in 8 bits");r()[Rt+pe>>>0]=Gt}else for(pe=0;pe<Ye;++pe)r()[Rt+pe>>>0]=D[pe];return $!==null&&$.push(ui,ht),ht},argPackAdvance:Ji,readValueFromPointer:hp,Db($){ui($)}})}var nf=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Im=(a,f)=>{for(var b=a>>1,$=b+f/2;!(b>=$)&&i()[b>>>0];)++b;if(32<(b<<=1)-a&&nf)return nf.decode(r().slice(a,b));for(b="",$=0;!($>=f/2);++$){var D=n()[a+2*$>>>1>>>0];if(D==0)break;b+=String.fromCharCode(D)}return b},Fm=(a,f,b)=>{if(b??=2147483647,2>b)return 0;var $=f;b=(b-=2)<2*a.length?b/2:a.length;for(var D=0;D<b;++D){var pe=a.charCodeAt(D);n()[f>>>1>>>0]=pe,f+=2}return n()[f>>>1>>>0]=0,f-$},Om=a=>2*a.length,Bm=(a,f)=>{for(var b=0,$="";!(b>=f/4);){var D=s()[a+4*b>>>2>>>0];if(D==0)break;++b,65536<=D?(D-=65536,$+=String.fromCharCode(55296|D>>10,56320|1023&D)):$+=String.fromCharCode(D)}return $},zm=(a,f,b)=>{if(f>>>=0,b??=2147483647,4>b)return 0;var $=f;b=$+b-4;for(var D=0;D<a.length;++D){var pe=a.charCodeAt(D);if(55296<=pe&&57343>=pe&&(pe=65536+((1023&pe)<<10)|1023&a.charCodeAt(++D)),s()[f>>>2>>>0]=pe,(f+=4)+4>b)break}return s()[f>>>2>>>0]=0,f-$},Dm=a=>{for(var f=0,b=0;b<a.length;++b){var $=a.charCodeAt(b);55296<=$&&57343>=$&&++b,f+=4}return f};function Lm(a,f,b){if(a>>>=0,f>>>=0,b=ai(b>>>=0),f===2)var $=Im,D=Fm,pe=Om,Ye=ht=>i()[ht>>>1>>>0];else f===4&&($=Bm,D=zm,pe=Dm,Ye=ht=>o()[ht>>>2>>>0]);xi(a,{name:b,fromWireType:ht=>{for(var Rt,Gt=o()[ht>>>2>>>0],nr=ht+4,Fr=0;Fr<=Gt;++Fr){var Rr=ht+4+Fr*f;Fr!=Gt&&Ye(Rr)!=0||(nr=$(nr,Rr-nr),Rt===void 0?Rt=nr:(Rt+="\0",Rt+=nr),nr=Rr+f)}return ui(ht),Rt},toWireType:(ht,Rt)=>{if(typeof Rt!="string")throw new Zi(`Cannot pass non-string to C++ string type ${b}`);var Gt=pe(Rt),nr=Sc(4+Gt+f);return o()[nr>>>2>>>0]=Gt/f,D(Rt,nr+4,Gt+f),ht!==null&&ht.push(ui,nr),nr},argPackAdvance:Ji,readValueFromPointer:hp,Db(ht){ui(ht)}})}function Rm(a,f){xi(a>>>=0,{Tb:!0,name:f=ai(f>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var Nm=()=>1;function jm(a){Mp(a>>>0,!S,1,!k,131072,!1),Oh()}var sf=a=>{if(!En)try{if(a(),!(0<bs))try{C?kc(Tr):ap(Tr)}catch(f){f instanceof ip||f=="unwind"||qe(1,f)}}catch(f){f instanceof ip||f=="unwind"||qe(1,f)}};function fp(a){a>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(s(),a>>>2,a).value.then(bc),a+=128,Atomics.store(s(),a>>>2,1))}var bc=()=>{var a=ra();a&&(fp(a),sf(Bf))};function Um(a,f){(a>>>=0)==f>>>0?setTimeout(bc):C?postMessage({targetThread:a,cmd:"checkMailbox"}):(a=oi[a])&&a.postMessage({cmd:"checkMailbox"})}var mp=[];function Vm(a,f,b,$,D){for(f>>>=0,$/=2,mp.length=$,b=D>>>0>>>3,D=0;D<$;D++)mp[D]=qr[b+2*D]?qr[b+2*D+1]:d()[b+2*D+1>>>0];return(f?np[f]:I_[a])(...mp)}function Wm(a){a>>>=0,C?postMessage({cmd:"cleanupThread",thread:a}):Fh(oi[a])}function Gm(a){}var _p=(a,f)=>{var b=dp[a];if(b===void 0)throw a=Af(a),b=ai(a),ui(a),new Zi(`${f} has unknown type ${b}`);return b},of=(a,f,b)=>{var $=[];return a=a.toWireType($,b),$.length&&(o()[f>>>2>>>0]=qn($)),a};function qm(a,f,b){return f>>>=0,b>>>=0,a=Gn(a>>>0),f=_p(f,"emval::as"),of(f,b,a)}var Mc=a=>{try{a()}catch(f){Jo(f)}},es=0,li=null,af=0,vc=[],lf={},uf={},Hm=0,gp=null,Km=[];function df(a){return function(f){if(!En){if(es===0){var b=!1,$=!1;f((D=0)=>{if(!En&&(af=D,b=!0,$)){es=2,Mc(()=>Nf(li)),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.resume(),D=!1;try{var pe=function(){var Rt=s()[li+8>>>2>>>0];return Rt=er[uf[Rt]],--bs,Rt()}()}catch(Rt){pe=Rt,D=!0}var Ye=!1;if(!li){var ht=gp;ht&&(gp=null,(D?ht.reject:ht.resolve)(pe),Ye=!0)}if(D&&!Ye)throw pe}}),$=!0,b||(es=1,li=function(){var D=Sc(65548),pe=D+12;o()[D>>>2>>>0]=pe,o()[D+4>>>2>>>0]=pe+65536,pe=vc[0];var Ye=lf[pe];return Ye===void 0&&(Ye=Hm++,lf[pe]=Ye,uf[Ye]=pe),pe=Ye,s()[D+8>>>2>>>0]=pe,D}(),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.pause(),Mc(()=>Lf(li)))}else es===2?(es=0,Mc(jf),ui(li),li=null,Km.forEach(sf)):Jo(`invalid state: ${es}`);return af}}(f=>{a().then(f)})}function Xm(a){return a>>>=0,df(()=>(a=Gn(a)).then(qn))}var xc=[];function Qm(a,f,b,$){return b>>>=0,$>>>=0,(a=xc[a>>>0])(null,f=Gn(f>>>0),b,$)}var Ym={},Tc=a=>{var f=Ym[a];return f===void 0?ai(a):f};function Zm(a,f,b,$,D){return b>>>=0,$>>>=0,D>>>=0,(a=xc[a>>>0])(f=Gn(f>>>0),f[b=Tc(b)],$,D)}var cf=()=>typeof globalThis=="object"?globalThis:Function("return this")();function Jm(a){return(a>>>=0)==0?qn(cf()):(a=Tc(a),qn(cf()[a]))}var e_=a=>{var f=xc.length;return xc.push(a),f},t_=(a,f)=>{for(var b=Array(a),$=0;$<a;++$)b[$]=_p(o()[f+4*$>>>2>>>0],"parameter "+$);return b},pf=(a,f)=>Object.defineProperty(f,"name",{value:a});function r_(a,f,b){var $=(f=t_(a,f>>>0)).shift();a--;var D=`return function (obj, func, destructorsRef, args) {
`,pe=0,Ye=[];b===0&&Ye.push("obj");for(var ht=["retType"],Rt=[$],Gt=0;Gt<a;++Gt)Ye.push("arg"+Gt),ht.push("argType"+Gt),Rt.push(f[Gt]),D+=`  var arg${Gt} = argType${Gt}.readValueFromPointer(args${pe?"+"+pe:""});
`,pe+=f[Gt].argPackAdvance;return D+=`  var rv = ${b===1?"new func":"func.call"}(${Ye.join(", ")});
`,$.Tb||(ht.push("emval_returnValue"),Rt.push(of),D+=`  return emval_returnValue(retType, destructorsRef, rv);
`),ht.push(D+`};
`),a=function(nr){var Fr=Function;if(!(Fr instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Fr} which is not a function`);var Rr=pf(Fr.name||"unknownFunctionName",function(){});return Rr.prototype=Fr.prototype,Rr=new Rr,(nr=Fr.apply(Rr,nr))instanceof Object?nr:Rr}(ht)(...Rt),b=`methodCaller<(${f.map(nr=>nr.name).join(", ")}) => ${$.name}>`,e_(pf(b,a))}function n_(a){return a=Tc(a>>>0),qn(l[a])}function i_(a,f){return f>>>=0,a=Gn(a>>>0),f=Gn(f),qn(a[f])}function s_(a){9<(a>>>=0)&&(Ti[a+1]+=1)}function o_(){return qn([])}function a_(a){a=Gn(a>>>0);for(var f=Array(a.length),b=0;b<a.length;b++)f[b]=a[b];return qn(f)}function l_(a){return qn(Tc(a>>>0))}function u_(){return qn({})}function d_(a){for(var f=Gn(a>>>=0);f.length;){var b=f.pop();f.pop()(b)}pp(a)}function c_(a,f,b){f>>>=0,b>>>=0,a=Gn(a>>>0),f=Gn(f),b=Gn(b),a[f]=b}function p_(a,f){return f>>>=0,a=(a=_p(a>>>0,"_emval_take_value")).readValueFromPointer(f),qn(a)}function h_(a,f){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),f>>>=0,a=new Date(1e3*a),s()[f>>>2>>>0]=a.getUTCSeconds(),s()[f+4>>>2>>>0]=a.getUTCMinutes(),s()[f+8>>>2>>>0]=a.getUTCHours(),s()[f+12>>>2>>>0]=a.getUTCDate(),s()[f+16>>>2>>>0]=a.getUTCMonth(),s()[f+20>>>2>>>0]=a.getUTCFullYear()-1900,s()[f+24>>>2>>>0]=a.getUTCDay(),a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,s()[f+28>>>2>>>0]=a}var ta=a=>a%4==0&&(a%100!=0||a%400==0),hf=[0,31,60,91,121,152,182,213,244,274,305,335],ff=[0,31,59,90,120,151,181,212,243,273,304,334];function f_(a,f){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),f>>>=0,a=new Date(1e3*a),s()[f>>>2>>>0]=a.getSeconds(),s()[f+4>>>2>>>0]=a.getMinutes(),s()[f+8>>>2>>>0]=a.getHours(),s()[f+12>>>2>>>0]=a.getDate(),s()[f+16>>>2>>>0]=a.getMonth(),s()[f+20>>>2>>>0]=a.getFullYear()-1900,s()[f+24>>>2>>>0]=a.getDay();var b=(ta(a.getFullYear())?hf:ff)[a.getMonth()]+a.getDate()-1|0;s()[f+28>>>2>>>0]=b,s()[f+36>>>2>>>0]=-60*a.getTimezoneOffset(),b=new Date(a.getFullYear(),6,1).getTimezoneOffset();var $=new Date(a.getFullYear(),0,1).getTimezoneOffset();a=0|(b!=$&&a.getTimezoneOffset()==Math.min($,b)),s()[f+32>>>2>>>0]=a}function m_(a){a>>>=0;var f=new Date(s()[a+20>>>2>>>0]+1900,s()[a+16>>>2>>>0],s()[a+12>>>2>>>0],s()[a+8>>>2>>>0],s()[a+4>>>2>>>0],s()[a>>>2>>>0],0),b=s()[a+32>>>2>>>0],$=f.getTimezoneOffset(),D=new Date(f.getFullYear(),6,1).getTimezoneOffset(),pe=new Date(f.getFullYear(),0,1).getTimezoneOffset(),Ye=Math.min(pe,D);return 0>b?s()[a+32>>>2>>>0]=+(D!=pe&&Ye==$):0<b!=(Ye==$)&&(D=Math.max(pe,D),f.setTime(f.getTime()+6e4*((0<b?Ye:D)-$))),s()[a+24>>>2>>>0]=f.getDay(),b=(ta(f.getFullYear())?hf:ff)[f.getMonth()]+f.getDate()-1|0,s()[a+28>>>2>>>0]=b,s()[a>>>2>>>0]=f.getSeconds(),s()[a+4>>>2>>>0]=f.getMinutes(),s()[a+8>>>2>>>0]=f.getHours(),s()[a+12>>>2>>>0]=f.getDate(),s()[a+16>>>2>>>0]=f.getMonth(),s()[a+20>>>2>>>0]=f.getYear(),a=f.getTime(),BigInt(isNaN(a)?-1:a/1e3)}function mf(a,f,b,$,D,pe,Ye){return C?Yr(16,1,a,f,b,$,D,pe,Ye):-52}function _f(a,f,b,$,D,pe){if(C)return Yr(17,1,a,f,b,$,D,pe)}function __(a,f,b,$){a>>>=0,f>>>=0,b>>>=0,$>>>=0;var D=new Date().getFullYear(),pe=new Date(D,0,1),Ye=new Date(D,6,1);D=pe.getTimezoneOffset();var ht=Ye.getTimezoneOffset(),Rt=Math.max(D,ht);o()[a>>>2>>>0]=60*Rt,s()[f>>>2>>>0]=+(D!=ht),pe=(a=Gt=>Gt.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(pe),Ye=a(Ye),ht<D?(ea(pe,b,17),ea(Ye,$,17)):(ea(pe,$,17),ea(Ye,b,17))}var wp=[],gf=(a,f)=>{wp.length=0;for(var b;b=r()[a++>>>0];){var $=b!=105;f+=($&=b!=112)&&f%8?4:0,wp.push(b==112?o()[f>>>2>>>0]:b==106?qr[f>>>3]:b==105?s()[f>>>2>>>0]:d()[f>>>3>>>0]),f+=$?8:4}return wp};function g_(a,f,b){return a>>>=0,f=gf(f>>>0,b>>>0),np[a](...f)}function w_(a,f,b){return a>>>=0,f=gf(f>>>0,b>>>0),np[a](...f)}var y_=()=>{},b_=()=>Date.now();function M_(a,f){return Zt(gn(a>>>0,f>>>0))}var wf,v_=()=>{throw bs+=1,"unwind"};function x_(){return 4294901760}wf=()=>performance.timeOrigin+performance.now();var T_=()=>navigator.hardwareConcurrency;function E_(){return Jo("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function C_(a){a>>>=0;var f=r().length;if(a<=f||4294901760<a)return!1;for(var b=1;4>=b;b*=2){var $=f*(1+.2/b);$=Math.min($,a+100663296);var D=Math;$=Math.max(a,$);e:{D=(D.min.call(D,4294901760,$+(65536-$%65536)%65536)-or.buffer.byteLength+65535)/65536;try{or.grow(D),Mn();var pe=1;break e}catch{}pe=void 0}if(pe)return!0}return!1}var Ec=()=>(Jo("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),hd={},yf=a=>{a.forEach(f=>{Ec()})};function $_(){var a=Error().stack.toString().split(`
`);return a[0]=="Error"&&a.shift(),yf(a),hd.Pb=Ec(),hd.ec=a,hd.Pb}function S_(a,f,b){if(a>>>=0,f>>>=0,hd.Pb==a)var $=hd.ec;else($=Error().stack.toString().split(`
`))[0]=="Error"&&$.shift(),yf($);for(var D=3;$[D]&&Ec()!=a;)++D;for(a=0;a<b&&$[a+D];++a)s()[f+4*a>>>2>>>0]=Ec();return a}var yp,bp={},bf=()=>{if(!yp){var a,f={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:me};for(a in bp)bp[a]===void 0?delete f[a]:f[a]=bp[a];var b=[];for(a in f)b.push(`${a}=${f[a]}`);yp=b}return yp};function Mf(a,f){if(C)return Yr(18,1,a,f);a>>>=0,f>>>=0;var b=0;return bf().forEach(($,D)=>{var pe=f+b;for(D=o()[a+4*D>>>2>>>0]=pe,pe=0;pe<$.length;++pe)t()[D++>>>0]=$.charCodeAt(pe);t()[D>>>0]=0,b+=$.length+1}),0}function vf(a,f){if(C)return Yr(19,1,a,f);a>>>=0,f>>>=0;var b=bf();o()[a>>>2>>>0]=b.length;var $=0;return b.forEach(D=>$+=D.length+1),o()[f>>>2>>>0]=$,0}function xf(a){return C?Yr(20,1,a):52}function Tf(a,f,b,$){return C?Yr(21,1,a,f,b,$):52}function Ef(a,f,b,$){return C?Yr(22,1,a,f,b,$):70}var k_=[null,[],[]];function Cf(a,f,b,$){if(C)return Yr(23,1,a,f,b,$);f>>>=0,b>>>=0,$>>>=0;for(var D=0,pe=0;pe<b;pe++){var Ye=o()[f>>>2>>>0],ht=o()[f+4>>>2>>>0];f+=8;for(var Rt=0;Rt<ht;Rt++){var Gt=r()[Ye+Rt>>>0],nr=k_[a];Gt===0||Gt===10?((a===1?lr:Zt)(Nh(nr,0)),nr.length=0):nr.push(Gt)}D+=ht}return o()[$>>>2>>>0]=D,0}var $f=[31,29,31,30,31,30,31,31,30,31,30,31],Sf=[31,28,31,30,31,30,31,31,30,31,30,31],P_=(a,f)=>{t().set(a,f>>>0)};function kf(a,f,b,$){function D(We,Pr,en){for(We=typeof We=="number"?We.toString():We||"";We.length<Pr;)We=en[0]+We;return We}function pe(We,Pr){return D(We,Pr,"0")}function Ye(We,Pr){function en(Vf){return 0>Vf?-1:0<Vf?1:0}var vs;return(vs=en(We.getFullYear()-Pr.getFullYear()))===0&&(vs=en(We.getMonth()-Pr.getMonth()))===0&&(vs=en(We.getDate()-Pr.getDate())),vs}function ht(We){switch(We.getDay()){case 0:return new Date(We.getFullYear()-1,11,29);case 1:return We;case 2:return new Date(We.getFullYear(),0,3);case 3:return new Date(We.getFullYear(),0,2);case 4:return new Date(We.getFullYear(),0,1);case 5:return new Date(We.getFullYear()-1,11,31);case 6:return new Date(We.getFullYear()-1,11,30)}}function Rt(We){var Pr=We.Bb;for(We=new Date(new Date(We.Cb+1900,0,1).getTime());0<Pr;){var en=We.getMonth(),vs=(ta(We.getFullYear())?$f:Sf)[en];if(!(Pr>vs-We.getDate())){We.setDate(We.getDate()+Pr);break}Pr-=vs-We.getDate()+1,We.setDate(1),11>en?We.setMonth(en+1):(We.setMonth(0),We.setFullYear(We.getFullYear()+1))}return en=new Date(We.getFullYear()+1,0,4),Pr=ht(new Date(We.getFullYear(),0,4)),en=ht(en),0>=Ye(Pr,We)?0>=Ye(en,We)?We.getFullYear()+1:We.getFullYear():We.getFullYear()-1}a>>>=0,f>>>=0,b>>>=0,$>>>=0;var Gt=o()[$+40>>>2>>>0];for(var nr in $={kc:s()[$>>>2>>>0],jc:s()[$+4>>>2>>>0],Hb:s()[$+8>>>2>>>0],Lb:s()[$+12>>>2>>>0],Ib:s()[$+16>>>2>>>0],Cb:s()[$+20>>>2>>>0],ub:s()[$+24>>>2>>>0],Bb:s()[$+28>>>2>>>0],sc:s()[$+32>>>2>>>0],ic:s()[$+36>>>2>>>0],lc:Gt?gn(Gt):""},b=gn(b),Gt={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})b=b.replace(new RegExp(nr,"g"),Gt[nr]);var Fr="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Rr="January February March April May June July August September October November December".split(" ");for(nr in Gt={"%a":We=>Fr[We.ub].substring(0,3),"%A":We=>Fr[We.ub],"%b":We=>Rr[We.Ib].substring(0,3),"%B":We=>Rr[We.Ib],"%C":We=>pe((We.Cb+1900)/100|0,2),"%d":We=>pe(We.Lb,2),"%e":We=>D(We.Lb,2," "),"%g":We=>Rt(We).toString().substring(2),"%G":Rt,"%H":We=>pe(We.Hb,2),"%I":We=>((We=We.Hb)==0?We=12:12<We&&(We-=12),pe(We,2)),"%j":We=>{for(var Pr=0,en=0;en<=We.Ib-1;Pr+=(ta(We.Cb+1900)?$f:Sf)[en++]);return pe(We.Lb+Pr,3)},"%m":We=>pe(We.Ib+1,2),"%M":We=>pe(We.jc,2),"%n":()=>`
`,"%p":We=>0<=We.Hb&&12>We.Hb?"AM":"PM","%S":We=>pe(We.kc,2),"%t":()=>"	","%u":We=>We.ub||7,"%U":We=>pe(Math.floor((We.Bb+7-We.ub)/7),2),"%V":We=>{var Pr=Math.floor((We.Bb+7-(We.ub+6)%7)/7);if(2>=(We.ub+371-We.Bb-2)%7&&Pr++,Pr)Pr==53&&((en=(We.ub+371-We.Bb)%7)==4||en==3&&ta(We.Cb)||(Pr=1));else{Pr=52;var en=(We.ub+7-We.Bb-1)%7;(en==4||en==5&&ta(We.Cb%400-1))&&Pr++}return pe(Pr,2)},"%w":We=>We.ub,"%W":We=>pe(Math.floor((We.Bb+7-(We.ub+6)%7)/7),2),"%y":We=>(We.Cb+1900).toString().substring(2),"%Y":We=>We.Cb+1900,"%z":We=>{var Pr=0<=(We=We.ic);return We=Math.abs(We)/60,(Pr?"+":"-")+("0000"+(We/60*100+We%60)).slice(-4)},"%Z":We=>We.lc,"%%":()=>"%"},b=b.replace(/%%/g,"\0\0"),Gt)b.includes(nr)&&(b=b.replace(new RegExp(nr,"g"),Gt[nr]($)));return nr=function(We){var Pr=Array(lp(We)+1);return Vh(We,Pr,0,Pr.length),Pr}(b=b.replace(/\0\0/g,"%")),nr.length>f?0:(P_(nr,a),nr.length-1)}function A_(a,f,b,$){return kf(a>>>0,f>>>0,b>>>0,$>>>0)}C||function(){for(var a=l.numThreads-1;a--;)zh();fn.unshift(()=>{Qi++,function(f){C?f():Promise.all(Yi.map(Bh)).then(f)}(()=>Th())})}();for(var Pf=Array(256),Cc=0;256>Cc;++Cc)Pf[Cc]=String.fromCharCode(Cc);tf=Pf,Zi=l.BindingError=class extends Error{constructor(a){super(a),this.name="BindingError"}},l.InternalError=class extends Error{constructor(a){super(a),this.name="InternalError"}},Ti.push(0,1,void 0,1,null,1,!0,1,!1,1),l.count_emval_handles=()=>Ti.length/2-5-cp.length;var I_=[op,Ah,Dh,jh,Uh,Wh,Gh,qh,Hh,Kh,Xh,Qh,Yh,Zh,Jh,ef,mf,_f,Mf,vf,xf,Tf,Ef,Cf],er=function(){function a(b,$){return er=b.exports,er=function(){var D=er,pe={};for(let[Ye,ht]of Object.entries(D))pe[Ye]=typeof ht=="function"?(...Rt)=>{vc.push(Ye);try{return ht(...Rt)}finally{En||(vc.pop(),li&&es===1&&vc.length===0&&(es=0,bs+=1,Mc(Rf),typeof Fibers<"u"&&Fibers.tc()))}}:ht;return pe}(),er=function(){var D=er,pe=ht=>Rt=>ht(Rt)>>>0,Ye=ht=>()=>ht()>>>0;return(D=Object.assign({},D)).Ca=pe(D.Ca),D.fb=Ye(D.fb),D.hb=pe(D.hb),D.emscripten_main_runtime_thread_id=Ye(D.emscripten_main_runtime_thread_id),D.sb=pe(D.sb),D.tb=Ye(D.tb),D}(),Ih.push(er.ib),mn.unshift(er.Ba),Qt=$,Th(),er}var f=kh();if(Qi++,l.instantiateWasm)try{return l.instantiateWasm(f,a)}catch(b){Zt(`Module.instantiateWasm callback failed with error: ${b}`),y(b)}return rp||=l.locateFile?Eh("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":l.locateFile?l.locateFile("ort-wasm-simd-threaded.jsep.wasm",Fe):Fe+"ort-wasm-simd-threaded.jsep.wasm":new URL(I("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),I.b).href,function(b,$){var D=rp;return bt||typeof WebAssembly.instantiateStreaming!="function"||Eh(D)||Ch(D)||typeof fetch!="function"?Sh(D,b,$):fetch(D,{credentials:"same-origin"}).then(pe=>WebAssembly.instantiateStreaming(pe,b).then($,function(Ye){return Zt(`wasm streaming compile failed: ${Ye}`),Zt("falling back to ArrayBuffer instantiation"),Sh(D,b,$)}))}(f,function(b){a(b.instance,b.module)}).catch(y),{}}(),Af=a=>(Af=er.Ca)(a),If=()=>(If=er.Da)();l._OrtInit=(a,f)=>(l._OrtInit=er.Ea)(a,f),l._OrtGetLastError=(a,f)=>(l._OrtGetLastError=er.Fa)(a,f),l._OrtCreateSessionOptions=(a,f,b,$,D,pe,Ye,ht,Rt,Gt)=>(l._OrtCreateSessionOptions=er.Ga)(a,f,b,$,D,pe,Ye,ht,Rt,Gt),l._OrtAppendExecutionProvider=(a,f)=>(l._OrtAppendExecutionProvider=er.Ha)(a,f),l._OrtAddFreeDimensionOverride=(a,f,b)=>(l._OrtAddFreeDimensionOverride=er.Ia)(a,f,b),l._OrtAddSessionConfigEntry=(a,f,b)=>(l._OrtAddSessionConfigEntry=er.Ja)(a,f,b),l._OrtReleaseSessionOptions=a=>(l._OrtReleaseSessionOptions=er.Ka)(a),l._OrtCreateSession=(a,f,b)=>(l._OrtCreateSession=er.La)(a,f,b),l._OrtReleaseSession=a=>(l._OrtReleaseSession=er.Ma)(a),l._OrtGetInputOutputCount=(a,f,b)=>(l._OrtGetInputOutputCount=er.Na)(a,f,b),l._OrtGetInputName=(a,f)=>(l._OrtGetInputName=er.Oa)(a,f),l._OrtGetOutputName=(a,f)=>(l._OrtGetOutputName=er.Pa)(a,f),l._OrtFree=a=>(l._OrtFree=er.Qa)(a),l._OrtCreateTensor=(a,f,b,$,D,pe)=>(l._OrtCreateTensor=er.Ra)(a,f,b,$,D,pe),l._OrtGetTensorData=(a,f,b,$,D)=>(l._OrtGetTensorData=er.Sa)(a,f,b,$,D),l._OrtReleaseTensor=a=>(l._OrtReleaseTensor=er.Ta)(a),l._OrtCreateRunOptions=(a,f,b,$)=>(l._OrtCreateRunOptions=er.Ua)(a,f,b,$),l._OrtAddRunConfigEntry=(a,f,b)=>(l._OrtAddRunConfigEntry=er.Va)(a,f,b),l._OrtReleaseRunOptions=a=>(l._OrtReleaseRunOptions=er.Wa)(a),l._OrtCreateBinding=a=>(l._OrtCreateBinding=er.Xa)(a),l._OrtBindInput=(a,f,b)=>(l._OrtBindInput=er.Ya)(a,f,b),l._OrtBindOutput=(a,f,b,$)=>(l._OrtBindOutput=er.Za)(a,f,b,$),l._OrtClearBoundOutputs=a=>(l._OrtClearBoundOutputs=er._a)(a),l._OrtReleaseBinding=a=>(l._OrtReleaseBinding=er.$a)(a),l._OrtRunWithBinding=(a,f,b,$,D)=>(l._OrtRunWithBinding=er.ab)(a,f,b,$,D),l._OrtRun=(a,f,b,$,D,pe,Ye,ht)=>(l._OrtRun=er.bb)(a,f,b,$,D,pe,Ye,ht),l._OrtEndProfiling=a=>(l._OrtEndProfiling=er.cb)(a),l._JsepOutput=(a,f,b)=>(l._JsepOutput=er.db)(a,f,b),l._JsepGetNodeName=a=>(l._JsepGetNodeName=er.eb)(a);var $c,ra=()=>(ra=er.fb)(),ui=l._free=a=>(ui=l._free=er.gb)(a),Sc=l._malloc=a=>(Sc=l._malloc=er.hb)(a),Mp=(a,f,b,$,D,pe)=>(Mp=er.kb)(a,f,b,$,D,pe),Ff=()=>(Ff=er.lb)(),Of=(a,f,b,$,D)=>(Of=er.mb)(a,f,b,$,D),vp=a=>(vp=er.nb)(a),kc=a=>(kc=er.ob)(a),Bf=()=>(Bf=er.pb)(),zf=(a,f)=>(zf=er.qb)(a,f),Pc=a=>(Pc=er.rb)(a),xp=a=>(xp=er.sb)(a),Tp=()=>(Tp=er.tb)(),Df=l.dynCall_ii=(a,f)=>(Df=l.dynCall_ii=er.vb)(a,f),Lf=a=>(Lf=er.wb)(a),Rf=()=>(Rf=er.xb)(),Nf=a=>(Nf=er.yb)(a),jf=()=>(jf=er.zb)();function Uf(){0<Qi||(C?(h(l),C||yc(mn),startWorker(l)):(yc(fn),0<Qi||$c||($c=!0,l.calledRun=!0,En||(C||yc(mn),h(l),C||yc(Xi)))))}return l.___start_em_js=881578,l.___stop_em_js=881800,l.stackSave=()=>Tp(),l.stackRestore=a=>Pc(a),l.stackAlloc=a=>xp(a),l.UTF8ToString=gn,l.stringToUTF8=ea,l.lengthBytesUTF8=lp,ys=function a(){$c||Uf(),$c||(ys=a)},Uf(),x}),$e=we,globalThis.self?.name==="em-pthread"&&we()}),Ke,pt,Ct,Tt,Ft,xt,Ut,Wt,Nt=L(()=>{m(),Ke=import.meta.url??(typeof document<"u"?document.currentScript?.src:typeof self<"u"?self.location?.href:void 0),pt=typeof location>"u"?void 0:location.origin,Ct=(e,t)=>{try{let r=t??Ke;return(r?new URL(e,r):new URL(e)).origin===pt}catch{return!1}},Tt=async e=>{let t=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(t)},Ft=(sr(),j(U)).default,xt=async()=>{if(!Ke)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(Ct(Ke))return[void 0,Ft()];let e=await Tt(Ke);return[e,Ft(e)]},Ut=(Be(),j(Je)).default,Wt=async(e,t,r)=>[void 0,Ut]}),Le,Re,vt,Ht,ar,Or,jr,Er,Dr=L(()=>{Nt(),Re=!1,vt=!1,Ht=!1,ar=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Or=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},jr=async e=>{if(Re)return Promise.resolve();if(vt)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Ht)throw new Error("previous call to 'initializeWebAssembly()' failed.");vt=!0;let t=e.initTimeout,r=e.numThreads;if(!Or())throw new Error("WebAssembly SIMD is not supported in the current environment.");let n=ar();r>1&&!n&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=r=1);let i=e.wasmPaths,s=typeof i=="string"?i:void 0,o=i?.mjs,u=o?.href??o,d=i?.wasm,h=d?.href??d,y=e.wasmBinary,[l,x]=await Wt(u,s,r>1),k=!1,S=[];if(t>0&&S.push(new Promise(C=>{setTimeout(()=>{k=!0,C()},t)})),S.push(new Promise((C,X)=>{let H={numThreads:r};y?H.wasmBinary=y:(h||s)&&(H.locateFile=(A,ee)=>h??(s??ee)+A),x(H).then(A=>{vt=!1,Re=!0,Le=A,C(),l&&URL.revokeObjectURL(l)},A=>{vt=!1,Ht=!0,X(A)})})),await Promise.race(S),k)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Er=()=>{if(Re&&Le)return Le;throw new Error("WebAssembly is not initialized yet.")}}),Ar,zn,Nr,hi=L(()=>{Dr(),Ar=(e,t)=>{let r=Er(),n=r.lengthBytesUTF8(e)+1,i=r._malloc(n);return r.stringToUTF8(e,i,n),t.push(i),i},zn=(e,t,r,n)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,s])=>{let o=t?t+i:i;if(typeof s=="object")zn(s,o+".",r,n);else if(typeof s=="string"||typeof s=="number")n(o,s.toString());else if(typeof s=="boolean")n(o,s?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof s}`)})},Nr=e=>{let t=Er(),r=t.stackSave();try{let n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);let i=t.HEAP32[n/4],s=t.HEAPU32[n/4+1],o=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${o}`)}finally{t.stackRestore(r)}}}),$i,Kn=L(()=>{Dr(),hi(),$i=e=>{let t=Er(),r=0,n=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let s=0;return e?.tag!==void 0&&(s=Ar(e.tag,n)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,s),r===0&&Nr("Can't create run options."),e?.extra!==void 0&&zn(e.extra,"",new WeakSet,(o,u)=>{let d=Ar(o,n),h=Ar(u,n);t._OrtAddRunConfigEntry(r,d,h)!==0&&Nr(`Can't set a run config entry: ${o} - ${u}.`)}),[r,n]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),n.forEach(o=>t._free(o)),s}}}),Si,ki,Pi,Ai,Ii,ei=L(()=>{Dr(),hi(),Si=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},ki=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Pi=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Ai=(e,t,r)=>{for(let n of t){let i=typeof n=="string"?n:n.name;switch(i){case"webnn":if(i="WEBNN",typeof n!="string"){let o=n?.deviceType;if(o){let u=Ar("deviceType",r),d=Ar(o,r);Er()._OrtAddSessionConfigEntry(e,u,d)!==0&&Nr(`Can't set a session config entry: 'deviceType' - ${o}.`)}}break;case"webgpu":if(i="JS",typeof n!="string"){let o=n;if(o?.preferredLayout){if(o.preferredLayout!=="NCHW"&&o.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${o.preferredLayout}`);let u=Ar("preferredLayout",r),d=Ar(o.preferredLayout,r);Er()._OrtAddSessionConfigEntry(e,u,d)!==0&&Nr(`Can't set a session config entry: 'preferredLayout' - ${o.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let s=Ar(i,r);Er()._OrtAppendExecutionProvider(e,s)!==0&&Nr(`Can't append execution provider: ${i}.`)}},Ii=e=>{let t=Er(),r=0,n=[],i=e||{};Pi(i);try{let s=Si(i.graphOptimizationLevel??"all"),o=ki(i.executionMode??"sequential"),u=typeof i.logId=="string"?Ar(i.logId,n):0,d=i.logSeverityLevel??2;if(!Number.isInteger(d)||d<0||d>4)throw new Error(`log serverity level is not valid: ${d}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let y=typeof i.optimizedModelFilePath=="string"?Ar(i.optimizedModelFilePath,n):0;if(r=t._OrtCreateSessionOptions(s,!!i.enableCpuMemArena,!!i.enableMemPattern,o,!!i.enableProfiling,0,u,d,h,y),r===0&&Nr("Can't create session options."),i.executionProviders&&Ai(r,i.executionProviders,n),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let l=Ar("enableGraphCapture",n),x=Ar(i.enableGraphCapture.toString(),n);t._OrtAddSessionConfigEntry(r,l,x)!==0&&Nr(`Can't set a session config entry: 'enableGraphCapture' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[l,x]of Object.entries(i.freeDimensionOverrides)){if(typeof l!="string")throw new Error(`free dimension override name must be a string: ${l}`);if(typeof x!="number"||!Number.isInteger(x)||x<0)throw new Error(`free dimension override value must be a non-negative integer: ${x}`);let k=Ar(l,n);t._OrtAddFreeDimensionOverride(r,k,x)!==0&&Nr(`Can't set a free dimension override: ${l} - ${x}.`)}return i.extra!==void 0&&zn(i.extra,"",new WeakSet,(l,x)=>{let k=Ar(l,n),S=Ar(x,n);t._OrtAddSessionConfigEntry(r,k,S)!==0&&Nr(`Can't set a session config entry: ${l} - ${x}.`)}),[r,n]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),n.forEach(o=>t._free(o)),s}}}),Xn,Cn,Dn,fi,Fn,mi,_i,gi,rr=L(()=>{Xn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Cn=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},Dn=(e,t)=>{let r=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],n=typeof t=="number"?t:t.reduce((i,s)=>i*s,1);return r>0?Math.ceil(n*r):void 0},fi=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Fn=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},mi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",_i=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool",gi=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),ti,Fi=L(()=>{m(),ti=async e=>{if(typeof e=="string"){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),n=r?parseInt(r,10):0;if(n<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),s;try{s=new ArrayBuffer(n)}catch(u){if(u instanceof RangeError){let d=Math.ceil(n/65536);s=new WebAssembly.Memory({initial:d,maximum:d}).buffer}else throw u}let o=0;for(;;){let{done:u,value:d}=await i.read();if(u)break;let h=d.byteLength;new Uint8Array(s,o,h).set(d),o+=h}return new Uint8Array(s,0,n)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),Oi,wi,Bi,zi,ri,ts,fe,_=L(()=>{rr(),Oi=["V","I","W","E","F"],wi=(e,t)=>{console.log(`[${Oi[e]},${new Date().toISOString()}]${t}`)},ri=(e,t)=>{Bi=e,zi=t},ts=(e,t)=>{let r=Fn(e),n=Fn(Bi);r>=n&&wi(r,typeof t=="function"?t():t)},fe=(...e)=>{zi&&ts(...e)}}),V,ne=L(()=>{rr(),V=(e,t)=>new(fi(t))(e)}),ce=L(()=>{}),Oe,st,Pt,zt,Dt,$t,_r,pr,Cr,Xr=L(()=>{_(),ce(),Oe=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),st=[],Pt=e=>Math.ceil(e/16)*16,zt=e=>{for(let t=0;t<st.length;t++){let r=st[t];if(e<=r)return r}return Math.ceil(e/16)*16},Dt=1,$t=()=>Dt++,_r=async(e,t,r,n)=>{let i=Pt(r),s=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(t,0,s,0,i),e.flush(),await s.mapAsync(GPUMapMode.READ);let u=s.getMappedRange();if(n){let d=n();return d.set(new Uint8Array(u,0,r)),d}else return new Uint8Array(u.slice(0,r))}finally{s.destroy()}},pr=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[t]of Oe)st.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[]);this.sessionCount=0}upload(e,t){let r=t.buffer,n=t.byteOffset,i=t.byteLength,s=Pt(i),o=this.storageCache.get(e);if(!o)throw new Error("gpu data for uploading does not exist");if(o.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),d=u.getMappedRange();new Uint8Array(d).set(new Uint8Array(r,n,i)),u.unmap();let h=this.backend.getCommandEncoder();this.backend.endComputePass(),h.copyBufferToBuffer(u,0,o.gpuData.buffer,0,s),fe("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(t);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(r.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=Pt(r.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(r.gpuData.buffer,0,n.gpuData.buffer,0,i)}registerExternalBuffer(e,t,r){let n;if(r){if(n=r[0],e===r[1])return fe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else n=$t();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:e},originalSize:t}),fe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, registered.`),n}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),fe("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r=zt(e),n,i=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||s){let u=(i?this.freeBuffers:this.freeUniformBuffers).get(r);u?u.length>0?n=u.pop():n=this.backend.device.createBuffer({size:r,usage:t}):n=this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let o={id:$t(),type:0,buffer:n};return this.storageCache.set(o.id,{gpuData:o,originalSize:e}),fe("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${o.id}`),o}get(e){return this.storageCache.get(e)?.gpuData}release(e){let t=this.storageCache.get(e);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return fe("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("data does not exist");await _r(this.backend,r.gpuData.buffer,r.originalSize,t)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let t=Oe.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(fe("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.storageCache=new Map)}},Cr=(...e)=>new pr(...e)}),yn,hr,kr=L(()=>{yn=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},hr=e=>new yn(e)}),vn,$n,Ie,Zr,an,Sn,Ln,Jt=L(()=>{vn=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},$n=class{static calcShape(e,t,r=!1){let n=e.length,i=t.length;if(n===0)return t;if(i===0)return e;let s=Math.max(e.length,t.length),o=new Array(s);if(r){if(n<2||i<2)return;let u=vn.calcMatMulShape([e[n-2],e[n-1]],[t[i-2],t[i-1]]);if(u===void 0)return;[o[s-2],o[s-1]]=u}for(let u=r?3:1;u<=s;u++){let d=n-u<0?1:e[n-u],h=i-u<0?1:t[i-u];if(d!==h&&d>1&&h>1)return;let y=Math.max(d,h);if(d&&h)o[s-u]=Math.max(d,h);else{if(y>1)return;o[s-u]=0}}return o}static isValidBroadcast(e,t){let r=e.length,n=t.length;if(r>n)return!1;for(let i=1;i<=r;i++)if(e[r-i]!==1&&e[r-i]!==t[n-i])return!1;return!0}},Ie=class Ic{static size(t){return Ic.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let n=t.length;if(n===0)return[];let i=new Array(n),s=n-1;for(;s>=0;){if(t[s]%r===0){i[s]=t[s]/r;break}if(r%t[s]!==0)throw new Error("cannot convert shape");i[s]=1,r/=t[s],s--}for(s--;s>=0;s--)i[s]=t[s];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return Ic.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return Ic.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,n){let i=1;for(let s=r;s<n;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[s]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let n=new Array(r);n[r-1]=1,n[r-2]=t[r-1];for(let i=r-3;i>=0;--i)n[i]=n[i+1]*t[i+1];return n}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(n=>this.normalizeAxis(n,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(n=>t[n]):t.slice().reverse()}static padShape(t,r){let n=t.length;return t.map((i,s)=>i+r[s]+r[s+n])}static areEqual(t,r){return t.length!==r.length?!1:t.every((n,i)=>n===r[i])}},Zr=class _d{static adjustPoolAttributes(t,r,n,i,s,o){if(!t&&n.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let u=0;u<r.length-2;u++)u>=n.length?n.push(r[u+2]):n[u]=r[u+2];for(let u=0;u<n.length;u++)if(u<i.length){if(i[u]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let u=0;u<n.length;u++)if(u<s.length){if(s[u]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let u=0;u<n.length*2;u++)if(u<o.length){if(o[u]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let u=0;u<n.length;u++){if(n[u]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[u]>=n[u]||o[u+n.length]>=n[u])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,n,i,s,o,u){if(u){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let d=0;d<t.length-2;d++)_d.adjustPadAndReturnShape(t[d+(o?1:2)],r[d],n[d],i[d],s,d,d+t.length-2,u)}}static computePoolOutputShape(t,r,n,i,s,o,u){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let d=[r[0],r[1]];return _d.computeShapeHelper(t,r,d,n,i,s,o,u),d}static computeConvOutputShape(t,r,n,i,s,o,u){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let d=[t[0],r[0]];return _d.computeShapeHelper(!1,t,d,n,i,s,o,u),d}static computeShapeHelper(t,r,n,i,s,o,u,d){if(t)for(let h=0;h<r.length-2;h++)n.push(1);else for(let h=0;h<r.length-2;h++)n.push(_d.adjustPadAndReturnShape(r[h+2],i[h],s[h],o[h],u,h,h+r.length-2,d))}static adjustPadAndReturnShape(t,r,n,i,s,o,u,d){let h=n*(i-1)+1;if(d&&d!=="NOTSET")switch(d){case"VALID":return s[o]=0,s[u]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(n!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return s[o]=Math.floor(d==="SAME_LOWER"?(y+1)/2:y/2),s[u]=y-s[o],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[o]+s[u]-h)/r+1)}},an=class{static getShapeOfGemmResult(e,t,r,n,i){if(e.length!==2||r.length!==2)throw new Error("shape need to be of size 2");let s,o,u;t?(s=e[1],o=e[0]):(s=e[0],o=e[1]);let d=-1;if(n?(u=r[0],d=1):(u=r[1],d=0),r[d]!==o)throw new Error("dimension mismatch");if(s<=0||u<=0||o<=0)throw new Error("invalid shape specified");if(i&&!$n.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,o]}},Sn=-34028234663852886e22,Ln=34028234663852886e22}),cn,Qr,gr,Br,Ot,br,ni,Qn,Rn,qt,rs,lt,Kt,Es,Cs,oa,yi,fr=L(()=>{rr(),Jt(),cn=64,Qr=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},gr=(e,t=1)=>{let r=Qr(e,t);return typeof r=="string"?r:r[0]},Br=(e,t=1)=>{let r=Qr(e,t);return typeof r=="string"?r:r[1]},Ot=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:Ie.computeStrides(r)})}),t},br=e=>e%4===0?4:e%2===0?2:1,ni=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Qn=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,Rn=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,qt=(e,t,r,n)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?n==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:n==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,rs=(e,t,r,n,i)=>{let s=typeof r=="number",o=s?r:r.length,u=[...new Array(o).keys()],d=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,h=Qr(t,i),y=typeof h=="string"?h:h[1],l=typeof h=="string"?h:h[0],x={indices:d,value:y,storage:l,tensor:t},k=rt=>typeof rt=="string"?rt:`${rt}u`,S={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},C=s?"uniforms.":"",X=`${C}${e}_shape`,H=`${C}${e}_strides`,A="";for(let rt=0;rt<o-1;rt++)A+=`
    let dim${rt} = current / ${qt(H,rt,o)};
    let rest${rt} = current % ${qt(H,rt,o)};
    indices[${rt}] = dim${rt};
    current = rest${rt};
    `;A+=`indices[${o-1}] = current;`;let ee=o<2?"":`
  fn o2i_${e}(offset: u32) -> ${x.indices} {
    var indices: ${x.indices};
    var current = offset;
    ${A}
    return indices;
  }`,le=rt=>(S.offsetToIndices=!0,o<2?rt:`o2i_${e}(${rt})`),me=[];if(o>=2)for(let rt=o-1;rt>=0;rt--)me.push(`${qt(H,rt,o)} * (indices[${rt}])`);let qe=o<2?"":`
  fn i2o_${e}(indices: ${x.indices}) -> u32 {
    return ${me.join("+")};
  }`,Fe=rt=>(S.indicesToOffset=!0,o<2?rt:`i2o_${e}(${rt})`),bt=(...rt)=>o===0?"0u":`${x.indices}(${rt.map(k).join(",")})`,Vt=(rt,St)=>o<2?`${rt}`:`${qt(rt,St,o)}`,jt=(rt,St,mr)=>o<2?`${rt}=${mr};`:`${qt(rt,St,o)}=${mr};`,lr={},Zt=(rt,St)=>{S.broadcastedIndicesToOffset=!0;let mr=`${St.name}broadcastedIndicesTo${e}Offset`;if(mr in lr)return`${mr}(${rt})`;let Wr=[];for(let qr=o-1;qr>=0;qr--){let Wn=St.indicesGet("outputIndices",qr+St.rank-o);Wr.push(`${Vt(H,qr)} * (${Wn} % ${Vt(X,qr)})`)}return lr[mr]=`fn ${mr}(outputIndices: ${St.type.indices}) -> u32 {
             return ${Wr.length>0?Wr.join("+"):"0u"};
           }`,`${mr}(${rt})`},ur=(rt,St)=>(()=>{if(x.storage===x.value)return`${e}[${rt}]=${St};`;if(x.storage==="vec2<u32>"&&x.value==="i32")return`${e}[${rt}]=vec2<u32>(u32(${St}), select(0u, 0xFFFFFFFFu, ${St} < 0));`;if(x.storage==="vec2<u32>"&&x.value==="u32")return`${e}[${rt}]=vec2<u32>(u32(${St}), 0u);`;if(x.storage==="u32"&&x.value==="vec4<bool>")return`${e}[${rt}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${St}));`;throw new Error(`not supported combination of storage type ${x.storage} and value type ${x.value} yet`)})(),Sr=rt=>(()=>{if(x.storage===x.value)return`${e}[${rt}]`;if(x.storage==="vec2<u32>"&&x.value==="i32")return`i32(${e}[${rt}].x)`;if(x.storage==="vec2<u32>"&&x.value==="u32")return`u32(${e}[${rt}].x)`;if(x.storage==="u32"&&x.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${rt}] & 0xFFu), bool(${e}[${rt}] & 0xFF00u), bool(${e}[${rt}] & 0xFF0000u), bool(${e}[${rt}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${x.storage} and value type ${x.value} yet`)})(),or=o<2?"":`
  fn get_${e}ByIndices(indices: ${x.indices}) -> ${y} {
    return ${Sr(`i2o_${e}(indices)`)};
  }`,Qt=o<2?"":(()=>{let rt=u.map(mr=>`d${mr}: u32`).join(", "),St=u.map(mr=>`d${mr}`).join(", ");return`
  fn get_${e}(${rt}) -> ${y} {
    return get_${e}ByIndices(${bt(St)});
  }`})(),Tr=(...rt)=>{if(rt.length!==o)throw new Error(`indices length must be ${o}`);let St=rt.map(k).join(",");return o===0?Sr("0u"):o===1?Sr(St[0]):(S.get=!0,S.getByIndices=!0,S.indicesToOffset=!0,`get_${e}(${St})`)},xr=rt=>o<2?Sr(rt):(S.getByIndices=!0,S.indicesToOffset=!0,`get_${e}ByIndices(${rt})`),Xt=o<2?"":`
  fn set_${e}ByIndices(indices: ${x.indices}, value: ${y}) {
    ${ur(`i2o_${e}(indices)`,"value")}
  }`,yr=o<2?"":(()=>{let rt=u.map(mr=>`d${mr}: u32`).join(", "),St=u.map(mr=>`d${mr}`).join(", ");return`
  fn set_${e}(${rt}, value: ${y}) {
    set_${e}ByIndices(${bt(St)}, value);
  }`})();return{impl:()=>{let rt=[],St=!1;return S.offsetToIndices&&(rt.push(ee),St=!0),S.indicesToOffset&&(rt.push(qe),St=!0),S.broadcastedIndicesToOffset&&(Object.values(lr).forEach(mr=>rt.push(mr)),St=!0),S.set&&(rt.push(yr),St=!0),S.setByIndices&&(rt.push(Xt),St=!0),S.get&&(rt.push(Qt),St=!0),S.getByIndices&&(rt.push(or),St=!0),!s&&St&&rt.unshift(`const ${X} = ${x.indices}(${r.join(",")});`,`const ${H} = ${x.indices}(${Ie.computeStrides(r).join(",")});`),rt.join(`
`)},type:x,offsetToIndices:le,indicesToOffset:Fe,broadcastedIndicesToOffset:Zt,indices:bt,indicesGet:Vt,indicesSet:jt,set:(...rt)=>{if(rt.length!==o+1)throw new Error(`indices length must be ${o}`);let St=rt[o];if(typeof St!="string")throw new Error("value must be string");let mr=rt.slice(0,o).map(k).join(",");return o===0?ur("0u",St):o===1?ur(mr[0],St):(S.set=!0,S.setByIndices=!0,S.indicesToOffset=!0,`set_${e}(${mr}, ${St})`)},setByOffset:ur,setByIndices:(rt,St)=>o<2?ur(rt,St):(S.setByIndices=!0,S.indicesToOffset=!0,`set_${e}ByIndices(${rt}, ${St});`),get:Tr,getByOffset:Sr,getByIndices:xr,usage:n,name:e,strides:H,shape:X,rank:o}},lt=(e,t,r,n=1)=>rs(e,t,r,"input",n),Kt=(e,t,r,n=1)=>rs(e,t,r,"output",n),Es=(e,t,r,n=1)=>rs(e,t,r,"internal",n),Cs=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=cn){let t=typeof e=="number"?e:e[0],r=typeof e=="number"?1:e[1],n=typeof e=="number"?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||n>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*r*n>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=i?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${t*r*n}u + local_idx;`;return`@compute @workgroup_size(${t}, ${r}, ${n})
  fn main(${s}) {
    ${o}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let r=e.usage==="input"?"read":"read_write",n=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${r}> ${e.name}: array<${n}>;`}declareVariables(...e){return e.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(e,t,r=1){return this.uniforms.push({name:e,type:t,length:r}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:t,type:r,length:n}of this.uniforms)if(n&&n>4)r==="f16"?e.push(`@align(16) ${t}:array<mat2x4<${r}>, ${Math.ceil(n/8)}>`):e.push(`${t}:array<vec4<${r}>, ${Math.ceil(n/4)}>`);else{let i=n==null||n===1?r:`vec${n}<${r}>`;e.push(`${t}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},oa=(e,t)=>new Cs(e,t),yi=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;i++){let s=r-1-i,o=e[s]||1;(t[t.length-1-i]||1)>1&&o===1&&n.unshift(s)}return n}}),aa,$s,ii,la,yd,bn,bd,ua,Nn=L(()=>{rr(),Jt(),kr(),fr(),aa=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},$s=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,ii=(e,t)=>Ie.sortBasedOnPerm(e,$s(e.length,t)),la=(e,t,r,n)=>{let i=`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`;for(let s=0;s<t;++s)i+=r.indicesSet("a",e[s],`i[${s}]`);return i+="return a;}"},yd=(e,t)=>{let r=[],n=[];for(let i=0;i<e.length;++i)e[i]!==1&&r.push(e[i]),e[t[i]]!==1&&n.push(t[i]);return{newShape:r,newPerm:n}},bn=(e,t)=>{let r=e.dataType,n=e.dims.length,i=$s(n,t),s=ii(e.dims,i),{newShape:o,newPerm:u}=yd(e.dims,i),d=Ie.areEqual(u,[2,3,1]),h=Ie.areEqual(u,[3,1,2]),y=o.length===2&&u[0]>u[1]||d||h,l=y?o:e.dims,x=s;y&&(l=d?[o[0],o[1]*o[2]]:h?[o[0]*o[1],o[2]]:o,x=[l[1],l[0]]);let k=lt("a",r,l.length),S=Kt("output",r,x.length),C=16,X;return y?X=H=>`
  ${H.registerUniform("output_size","u32").declareVariables(k,S)}
  var<workgroup> tile : array<array<${S.type.value}, ${C+1}>, ${C}>;
  ${H.mainStart([C,C,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${C} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${C}u + local_id.x;
    let input_row = workgroup_id_x * ${C}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${k.getByIndices(`${k.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${C}u + local_id.x;
    let output_row = workgroup_id_y * ${C}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${S.setByIndices(`${S.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`:X=H=>`
  ${H.registerUniform("output_size","u32").declareVariables(k,S)}

  ${la(i,n,k,S)}

  ${H.mainStart()}
    ${H.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${S.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${S.setByOffset("global_idx",k.getByIndices("aIndices"))}
  }`,{name:y?"TransposeShared":"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let H=Ie.size(s);return{outputs:[{dims:s,dataType:e.dataType}],dispatchGroup:y?{x:Math.ceil(x[1]/C),y:Math.ceil(x[0]/C)}:{x:Math.ceil(H/64)},programUniforms:[{type:12,data:H},...Ot(l,x)]}},getShaderSource:X}},bd=(e,t)=>{aa(e.inputs),e.compute(bn(e.inputs[0],t.perm))},ua=e=>hr({perm:e.perm})}),da,ca,pa,ha,fa,Ss,ma,_a,ks,ga,kn,Ps,wa,ya,As,ba,Ma,Is,va,xa,Fs,Md=L(()=>{rr(),Jt(),fr(),Vs(),Nn(),da={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},ca={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},pa={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},ha={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},fa=(e,t)=>{let r=[];for(let n=t-e;n<t;++n)r.push(n);return r},Ss=(e,t)=>{let r=[],n=e.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&r.push(e[s]);let i=t.map(s=>e[s]);return[r,i]},ma=(e,t)=>{let r=e.length+t.length,n=[],i=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?n.push(e[i++]):n.push(1);return n},_a=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},ks=(e,t)=>{let r=[];if(!_a(e,t)){for(let n=0;n<t;++n)e.indexOf(n)===-1&&r.push(n);e.forEach(n=>r.push(n))}return r},ga=(e,t,r,n,i,s,o)=>{let u=r[0].dims,d=Ie.size(s),h=Ie.size(o),y=lt("_A",r[0].dataType,u),l=Kt("output",i,s),x=32,k=`
          var<workgroup> aBestValues : array<f32, ${x}>;
       `;return{name:e,shaderCache:t,getShaderSource:S=>`
        ${S.registerUniform("reduceSize","u32").declareVariables(y,l)}
        ${k}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${S.mainStart(x)}

          let outputIndex = global_idx / ${x};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${pa[n]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${x}) {
           let candidate = f32(${y.getByOffset("offset + k")});
           bestValue = ${da[n]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${x}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${ca[n]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${l.setByOffset("outputIndex",`${n==="mean"?`${l.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${l.type.storage}(${ha[n]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:d},programUniforms:[{type:12,data:h}]})}},kn=(e,t,r,n)=>{let i=e.inputs.length===1?r:Bs(e.inputs,r),s=i.axes;s.length===0&&!i.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((k,S)=>S));let o=Ie.normalizeAxes(s,e.inputs[0].dims.length),u=o,d=e.inputs[0],h=ks(u,e.inputs[0].dims.length);h.length>0&&(d=e.compute(bn(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],u=fa(u.length,d.dims.length));let[y,l]=Ss(d.dims,u),x=y;i.keepDims&&(x=ma(y,o)),e.compute(ga(t,{hint:i.cacheKey,inputDependencies:["type"]},[d],n,e.inputs[0].dataType,x,l),{inputs:[d]})},Ps=(e,t)=>{kn(e,"ReduceMeanShared",t,"mean")},wa=(e,t)=>{kn(e,"ReduceL1Shared",t,"l1")},ya=(e,t)=>{kn(e,"ReduceL2Shared",t,"l2")},As=(e,t)=>{kn(e,"ReduceLogSumExpShared",t,"logSumExp")},ba=(e,t)=>{kn(e,"ReduceMaxShared",t,"max")},Ma=(e,t)=>{kn(e,"ReduceMinShared",t,"min")},Is=(e,t)=>{kn(e,"ReduceProdShared",t,"prod")},va=(e,t)=>{kn(e,"ReduceSumShared",t,"sum")},xa=(e,t)=>{kn(e,"ReduceSumSquareShared",t,"sumSquare")},Fs=(e,t)=>{kn(e,"ReduceLogSumShared",t,"logSum")}}),Pn,Os,ns,Bs,xn,Ta,Ea,zs,Ca,$a,Ds,Sa,ka,Ls,Pa,An,Rs,Aa,Ia,Ns,Fa,Oa,js,Ba,za,Us,Vs=L(()=>{rr(),Jt(),kr(),fr(),Md(),Pn=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Os=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],ns=(e,t,r,n,i,s,o=!1,u=!1)=>{let d=[],h=r[0].dims,y=h.length,l=Ie.normalizeAxes(i,y),x=!u&&l.length===0;h.forEach((C,X)=>{x||l.indexOf(X)>=0?o&&d.push(1):d.push(C)});let k=d.length,S=Ie.size(d);return{name:e,shaderCache:t,getShaderSource:C=>{let X=[],H=lt("_A",r[0].dataType,y),A=Kt("output",s,k),ee=n(H,A,l),le=ee[2];for(let me=0,qe=0;me<y;me++)x||l.indexOf(me)>=0?(o&&qe++,le=`for(var j${me}: u32 = 0; j${me} < ${h[me]}; j${me}++) {
                  ${ee[2].includes("last_index")?`let last_index = j${me};`:""}
                  ${H.indicesSet("input_indices",me,`j${me}`)}
                  ${le}
                }`):(X.push(`${H.indicesSet("input_indices",me,A.indicesGet("output_indices",qe))};`),qe++);return`

        ${C.registerUniform("output_size","u32").declareVariables(H,A)}

        ${C.mainStart()}
          ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${H.type.indices};
          let output_indices = ${A.offsetToIndices("global_idx")};

          ${X.join(`
`)}
          ${ee[0]}       // init ops for reduce max/min
          ${ee[1]}
          ${le}
          ${ee[3]}
          ${ee.length===4?A.setByOffset("global_idx","value"):ee.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:d,dataType:s}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:[{type:12,data:S},...Ot(h,d)]})}},Bs=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),hr({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},xn=(e,t,r,n)=>{let i=e.inputs,s=i.length===1?r:Bs(i,r);e.compute(ns(t,{hint:s.cacheKey,inputDependencies:["rank"]},[i[0]],s.noopWithEmptyAxes&&s.axes.length===0?Os:n,s.axes,i[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},Ta=(e,t)=>{Pn(e.inputs),xn(e,"ReduceLogSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,"value = log(value);"])},Ea=(e,t)=>{Pn(e.inputs),xn(e,"ReduceL1",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${r.getByIndices("input_indices")});`,""])},zs=(e,t)=>{Pn(e.inputs),xn(e,"ReduceL2",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ca=(e,t)=>{Pn(e.inputs),xn(e,"ReduceLogSumExp",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${r.getByIndices("input_indices")});`,"value = log(value);"])},$a=(e,t)=>{Pn(e.inputs),xn(e,"ReduceMax",t,(r,n,i)=>{let s=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&s.push(r.indicesSet("input_indices",o,0));return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = max(value, ${r.getByIndices("input_indices")});`,""]})},Ds=(e,t)=>{Pn(e.inputs),xn(e,"ReduceMean",t,(r,n,i)=>{let s=1;for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&(s*=e.inputs[0].dims[o]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${s});`]})},Sa=(e,t)=>{Pn(e.inputs),xn(e,"ReduceMin",t,(r,n,i)=>{let s=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&s.push(`input_indices[${o}] = 0;`);return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = min(value, ${r.getByIndices("input_indices")});`,""]})},ka=(e,t)=>{Pn(e.inputs),xn(e,"ReduceProd",t,(r,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${r.getByIndices("input_indices")};`,""])},Ls=(e,t)=>{Pn(e.inputs),xn(e,"ReduceSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,""])},Pa=(e,t)=>{Pn(e.inputs),xn(e,"ReduceSumSquare",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += t * t;`,""])},An=(e,t,r)=>{if(t.length===0)return r;let n=1,i=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?n*=e[s]:i*=e[s];return i<32&&n>1024},Rs=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ds(e,t):Ps(e,t)},Aa=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ea(e,t):wa(e,t)},Ia=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?zs(e,t):ya(e,t)},Ns=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ca(e,t):As(e,t)},Fa=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$a(e,t):ba(e,t)},Oa=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sa(e,t):Ma(e,t)},js=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ka(e,t):Is(e,t)},Ba=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ls(e,t):va(e,t)},za=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Pa(e,t):xa(e,t)},Us=(e,t)=>{An(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ta(e,t):Fs(e,t)}}),Ws,Gs,Da,qs,La=L(()=>{rr(),kr(),Vs(),Ws=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Gs=(e,t)=>{Ws(e.inputs);let r=(n,i,s)=>{let o=[];for(let u=0;u<n.rank;u++)(s.indexOf(u)>=0||s.length===0)&&o.push(`input_indices[${u}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(ns("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Da=(e,t)=>{Ws(e.inputs);let r=(n,i,s)=>{let o=[];for(let u=0;u<n.rank;u++)(s.indexOf(u)>=0||s.length===0)&&o.push(`input_indices[${u}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(ns("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},qs=e=>hr(e)}),Ra,is,Hs,Na,ja,bi,Ua,Va,ss=L(()=>{rr(),Jt(),ce(),fr(),Ra=(e,t)=>{let r=e[0],n=e[1],i=e[2],s=e[3],o=e[4],u=e[5];if(o&&u)throw new Error("Attention cannot have both past and attention_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let d=r.dims[0],h=r.dims[1],y=r.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(n.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(n.dims[0]!==y)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==n.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let l=i.dims[0]/3,x=l,k=x;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let ee of t.qkvHiddenSizes)if(ee%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");l=t.qkvHiddenSizes[0],x=t.qkvHiddenSizes[1],k=t.qkvHiddenSizes[2]}let S=h;if(l!==x)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==l+x+k)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let C=0;if(o){if(x!==k)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(o.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(o.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==d)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==x/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(C=o.dims[3])}let X=S+C,H=-1,A=0;if(s)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(u){if(u.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(u.dims[0]!==d||u.dims[1]!==t.numHeads||u.dims[2]!==h||u.dims[3]!==X)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:d,sequenceLength:h,pastSequenceLength:C,kvSequenceLength:S,totalSequenceLength:X,maxSequenceLength:H,inputHiddenSize:y,hiddenSize:l,vHiddenSize:k,headSize:Math.floor(l/t.numHeads),vHeadSize:Math.floor(k/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:A,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},is=(e,t,r)=>t&&e?`
      let total_sequence_length_input = u32(${t.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e?.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${r?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,Hs=(e,t,r,n,i,s,o,u)=>{let d=br(o?1:s),h=64,y=s/d;y<h&&(h=32);let l=Math.ceil(s/d/h),x=[{type:12,data:t},{type:12,data:r},{type:12,data:n},{type:12,data:i},{type:12,data:y},{type:12,data:l}],k=gr(e.dataType,d),S=Br(1,d),C=["type"];o&&C.push("type"),u&&C.push("type");let X=H=>{let A=Kt("x",e.dataType,e.dims,d),ee=[A],le=o?lt("seq_lens",o.dataType,o.dims):void 0;le&&ee.push(le);let me=u?lt("total_sequence_length_input",u.dataType,u.dims):void 0;me&&ee.push(me);let qe=Br(e.dataType),Fe=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${h}>;
  var<workgroup> thread_sum: array<f32, ${h}>;
  ${H.registerUniforms(Fe).declareVariables(...ee)}
  ${H.mainStart([h,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${is(le,me,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${h}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${o?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${S}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${S}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(d){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${d}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${h}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${S}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${S}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(d){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${d}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${h}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${A.type.value}(${qe}(1.0) / ${qe}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${S}(x[offset + i]);
        x[offset + i] = ${A.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${o?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${A.type.value}(${qe}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${h};${k};${d}`,inputDependencies:C},getShaderSource:X,getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(s/h),y:i,z:t*r},programUniforms:x})}},Na=(e,t,r,n,i,s,o,u,d)=>{let h=o+s.kvSequenceLength,y=[s.batchSize,s.numHeads,s.sequenceLength,h],l=e>1&&n,x=s.kvNumHeads?s.kvNumHeads:s.numHeads,k=l?[s.batchSize,x,h,s.headSize]:void 0,S=s.nReps?s.nReps:1,C=s.scale===0?1/Math.sqrt(s.headSize):s.scale,X=br(s.headSize),H=s.headSize/X,A=12,ee={x:Math.ceil(h/A),y:Math.ceil(s.sequenceLength/A),z:s.batchSize*s.numHeads},le=[{type:12,data:s.sequenceLength},{type:12,data:H},{type:12,data:h},{type:12,data:s.numHeads},{type:12,data:s.headSize},{type:1,data:C},{type:12,data:o},{type:12,data:s.kvSequenceLength},{type:12,data:S}],me=l&&n&&Ie.size(n.dims)>0,qe=["type","type"];me&&qe.push("type"),i&&qe.push("type"),u&&qe.push("type"),d&&qe.push("type");let Fe=[{dims:y,dataType:t.dataType,gpuDataType:0}];l&&Fe.push({dims:k,dataType:t.dataType,gpuDataType:0});let bt=Vt=>{let jt=lt("q",t.dataType,t.dims,X),lr=lt("key",r.dataType,r.dims,X),Zt=[jt,lr];if(me){let Xt=lt("past_key",n.dataType,n.dims,X);Zt.push(Xt)}i&&Zt.push(lt("attention_bias",i.dataType,i.dims));let ur=u?lt("seq_lens",u.dataType,u.dims):void 0;ur&&Zt.push(ur);let Sr=d?lt("total_sequence_length_input",d.dataType,d.dims):void 0;Sr&&Zt.push(Sr);let or=Kt("output",t.dataType,y),Qt=[or];l&&Qt.push(Kt("present_key",t.dataType,k,X));let Tr=Br(1,X),xr=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${A}u;

  var<workgroup> tileQ: array<${jt.type.storage}, ${A*A}>;
  var<workgroup> tileK: array<${jt.type.storage}, ${A*A}>;
  ${Vt.registerUniforms(xr).declareVariables(...Zt,...Qt)}
  ${Vt.mainStart([A,A,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${S===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${S===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${is(ur,Sr,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${me&&l?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${l?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${Tr}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${me&&l?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${l?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${Tr}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(X){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${X}`)}})()};
        output[outputIdx] = ${or.type.value} (sum * uniforms.alpha) + ${i?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${X};${i!==void 0};${n!==void 0};${e}`,inputDependencies:qe},getRunData:()=>({outputs:Fe,dispatchGroup:ee,programUniforms:le}),getShaderSource:bt}},ja=(e,t,r,n,i,s,o=void 0,u=void 0)=>{let d=s+i.kvSequenceLength,h=i.nReps?i.nReps:1,y=i.vHiddenSize*h,l=e>1&&n,x=i.kvNumHeads?i.kvNumHeads:i.numHeads,k=l?[i.batchSize,x,d,i.headSize]:void 0,S=[i.batchSize,i.sequenceLength,y],C=12,X={x:Math.ceil(i.vHeadSize/C),y:Math.ceil(i.sequenceLength/C),z:i.batchSize*i.numHeads},H=[{type:12,data:i.sequenceLength},{type:12,data:d},{type:12,data:i.vHeadSize},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:12,data:y},{type:12,data:s},{type:12,data:i.kvSequenceLength},{type:12,data:h}],A=l&&n&&Ie.size(n.dims)>0,ee=["type","type"];A&&ee.push("type"),o&&ee.push("type"),u&&ee.push("type");let le=[{dims:S,dataType:t.dataType,gpuDataType:0}];l&&le.push({dims:k,dataType:t.dataType,gpuDataType:0});let me=qe=>{let Fe=lt("probs",t.dataType,t.dims),bt=lt("v",r.dataType,r.dims),Vt=[Fe,bt];A&&Vt.push(lt("past_value",n.dataType,n.dims));let jt=o?lt("seq_lens",o.dataType,o.dims):void 0;o&&Vt.push(jt);let lr=u?lt("total_sequence_length_input",u.dataType,u.dims):void 0;u&&Vt.push(lr);let Zt=[Kt("output",t.dataType,S)];l&&Zt.push(Kt("present_value",t.dataType,k));let ur=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${C}u;
  var<workgroup> tileQ: array<${Fe.type.value}, ${C*C}>;
  var<workgroup> tileV: array<${Fe.type.value}, ${C*C}>;
  ${qe.registerUniforms(ur).declareVariables(...Vt,...Zt)}
  ${qe.mainStart([C,C,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${h===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${h===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${is(jt,lr,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${A&&l?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${l?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${Fe.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${A&&l?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${l?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${n!==void 0};${e}`,inputDependencies:ee},getRunData:()=>({outputs:le,dispatchGroup:X,programUniforms:H}),getShaderSource:me}},bi=(e,t,r,n,i,s,o,u,d,h,y=void 0,l=void 0)=>{let x=Math.min(e.outputCount,1+(o?1:0)+(u?1:0)),k=x>1?h.pastSequenceLength:0,S=k+h.kvSequenceLength,C=d&&Ie.size(d.dims)>0?d:void 0,X=[t,r];x>1&&o&&Ie.size(o.dims)>0&&X.push(o),C&&X.push(C),y&&X.push(y),l&&X.push(l);let H=e.compute(Na(x,t,r,o,C,h,k,y,l),{inputs:X,outputs:x>1?[-1,1]:[-1]})[0];e.compute(Hs(H,h.batchSize,h.numHeads,k,h.sequenceLength,S,y,l),{inputs:y&&l?[H,y,l]:[H],outputs:[]});let A=[H,n];x>1&&u&&Ie.size(u.dims)>0&&A.push(u),y&&A.push(y),l&&A.push(l),e.compute(ja(x,H,n,u,h,k,y,l),{inputs:A,outputs:x>1?[0,2]:[0]})},Ua=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],n=t.sequenceLength,i=t.inputHiddenSize,s=t.headSize,o=12,u={x:Math.ceil(t.headSize/o),y:Math.ceil(t.sequenceLength/o),z:t.batchSize*t.numHeads},d=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:n},{type:12,data:i},{type:12,data:s},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],y=l=>{let x=Kt("output_q",d[0].dataType,r),k=Kt("output_k",d[0].dataType,r),S=Kt("output_v",d[0].dataType,r),C=lt("input",d[0].dataType,d[0].dims),X=lt("weight",d[1].dataType,d[1].dims),H=lt("bias",d[2].dataType,d[2].dims),A=C.type.storage,ee=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileInput: array<${A}, ${o*o}>;
  var<workgroup> tileWeightQ: array<${A}, ${o*o}>;
  var<workgroup> tileWeightK: array<${A}, ${o*o}>;
  var<workgroup> tileWeightV: array<${A}, ${o*o}>;
  ${l.registerUniforms(ee).declareVariables(C,X,H,x,k,S)}
  ${l.mainStart([o,o,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${A}(0);
    var valueK = ${A}(0);
    var valueV = ${A}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:u,programUniforms:h}),getShaderSource:y},{inputs:d,outputs:[-1,-1,-1]})},Va=(e,t)=>{let r=Ra(e.inputs,t),[n,i,s]=Ua(e,r);return bi(e,n,i,s,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r)}}),Wa,Ga,Ks,qa,vd=L(()=>{c(),rr(),Jt(),kr(),fr(),Wa=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(n,i,s)=>{let o=i.length;if(o!==n.length)throw new Error(`${s}: num dimensions != ${o}`);i.forEach((u,d)=>{if(u!==n[d])throw new Error(`${s}: dim[${d}] do not match`)})};if(e[0].dims.length>1){let n=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,n,"Invalid input scale"),r(e[2].dims,n,"Invalid input B"),r(e[3].dims,n,"Invalid input mean"),r(e[4].dims,n,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Ga=(e,t)=>{let{epsilon:r,spatial:n,format:i}=t,s=e[0].dims,o=n?br(s[s.length-1]):1,u=i==="NHWC"&&s.length>1?o:1,d=Ie.size(s)/o,h=n,y=h?s.length:s,l=lt("x",e[0].dataType,e[0].dims,o),x=lt("scale",e[1].dataType,e[1].dims,u),k=lt("bias",e[2].dataType,e[2].dims,u),S=lt("inputMean",e[3].dataType,e[3].dims,u),C=lt("inputVar",e[4].dataType,e[4].dims,u),X=Kt("y",e[0].dataType,y,o),H=()=>{let ee="";if(n)ee=`let cOffset = ${s.length===1?"0u":i==="NHWC"?`outputIndices[${s.length-1}] / ${o}`:"outputIndices[1]"};`;else if(i==="NCHW")ee=`
            ${X.indicesSet("outputIndices","0","0")}
            let cOffset = ${X.indicesToOffset("outputIndices")};`;else{ee=`var cIndices = ${x.type.indices}(0);
                       cIndices[0] = outputIndices[${s.length-1}];`;for(let le=1;le<x.rank;le++)ee+=`cIndices[${le}] = outputIndices[${le}];`;ee+=`let cOffset = ${x.indicesToOffset("cIndices")};`}return ee},A=ee=>`
  const epsilon = ${r};
  ${ee.registerUniform("outputSize","u32").declareVariables(l,x,k,S,C,X)}
  ${ee.mainStart()}
  ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${X.offsetToIndices(`global_idx * ${o}`)};
    ${H()}
    let scale = ${x.getByOffset("cOffset")};
    let bias = ${k.getByOffset("cOffset")};
    let inputMean = ${S.getByOffset("cOffset")};
    let inputVar = ${C.getByOffset("cOffset")};
    let x = ${l.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${X.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${n}_${o}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:A,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:h?[{type:12,data:d},...Ot(s)]:[{type:12,data:d}]})}},Ks=e=>hr(e),qa=(e,t)=>{let{inputs:r,outputCount:n}=e,i=Ks({...t,outputCount:n});if(P.webgpu.validateInputContent&&Wa(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Ga(r,i))}}),Xs,Ha,Ka,Xa=L(()=>{Jt(),fr(),Xs=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Ha=e=>{let t=e[0].dims,r=e[0].dims[2],n=Ie.size(t)/4,i=e[0].dataType,s=lt("input",i,t,4),o=lt("bias",i,[r],4),u=lt("residual",i,t,4),d=Kt("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:h=>`
  const channels = ${r}u / 4;
  ${h.declareVariables(s,o,u,d)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let value = ${s.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${u.getByOffset("global_idx")};
    ${d.setByOffset("global_idx","value")}
  }`}},Ka=e=>{Xs(e.inputs),e.compute(Ha(e.inputs))}}),Qa,Ir,Qs,Ya,Za,Ja,el,Ys,tl,rl,nl,il,Zs,sl,ol,al,Di,Js,os,ll,eo,ul,dl,to,cl,pl,ro,hl,fl,no,ml,_l,as,gl,wl,ls,io,so,us,yl,bl,Ml,oo,vl,xl,ao=L(()=>{rr(),Jt(),kr(),fr(),Qa=(e,t,r,n,i,s,o)=>{let u=Math.ceil(t/4),d="";typeof i=="string"?d=`${i}(a)`:d=i("a");let h=lt("inputData",r,[u],4),y=Kt("outputData",n,[u],4),l=[{name:"vec_size",type:"u32"}];return o&&l.push(...o),`
      ${e.registerUniforms(l).declareVariables(h,y)}

  ${s??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${h.getByOffset("global_idx")};
    ${y.setByOffset("global_idx",d)}
  }`},Ir=(e,t,r,n,i,s=e.dataType,o,u)=>{let d=[{type:12,data:Math.ceil(Ie.size(e.dims)/4)}];return o&&d.push(...o),{name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:h=>Qa(h,Ie.size(e.dims),e.dataType,s,r,n,u),getRunData:h=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(Ie.size(h[0].dims)/64/4)},programUniforms:d})}},Qs=e=>{e.compute(Ir(e.inputs[0],"Abs","abs"))},Ya=e=>{e.compute(Ir(e.inputs[0],"Acos","acos"))},Za=e=>{e.compute(Ir(e.inputs[0],"Acosh","acosh"))},Ja=e=>{e.compute(Ir(e.inputs[0],"Asin","asin"))},el=e=>{e.compute(Ir(e.inputs[0],"Asinh","asinh"))},Ys=e=>{e.compute(Ir(e.inputs[0],"Atan","atan"))},tl=e=>{e.compute(Ir(e.inputs[0],"Atanh","atanh"))},rl=e=>hr(e),nl=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(Ir(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},il=e=>{let t,r,n=e.length>=2&&e[1].data!==0,i=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:t=n?e[1].getFloat32Array()[0]:-34028234663852886e22,r=i?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=n?e[1].getUint16Array()[0]:64511,r=i?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return hr({min:t,max:r})},Zs=(e,t)=>{let r=t||il(e.inputs),n=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"Clip",i=>`clamp(${i}, vec4<${n}>(uniforms.min), vec4<${n}>(uniforms.max))`,void 0,r.cacheKey,void 0,[{type:e.inputs[0].dataType,data:r.min},{type:e.inputs[0].dataType,data:r.max}],[{name:"min",type:n},{name:"max",type:n}]),{inputs:[0]})},sl=e=>{e.compute(Ir(e.inputs[0],"Ceil","ceil"))},ol=e=>{e.compute(Ir(e.inputs[0],"Cos","cos"))},al=e=>{e.compute(Ir(e.inputs[0],"Cosh","cosh"))},Di=e=>hr(e),Js=(e,t)=>{let r=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},os=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,ll=e=>{let t=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,os(t)))},eo=e=>{e.compute(Ir(e.inputs[0],"Exp","exp"))},ul=e=>{e.compute(Ir(e.inputs[0],"Floor","floor"))},dl=e=>{let t=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,os(t)))},to=(e,t)=>{let r=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},cl=e=>{e.compute(Ir(e.inputs[0],"Not",t=>`!${t}`))},pl=e=>{e.compute(Ir(e.inputs[0],"Neg",t=>`-${t}`))},ro=e=>{e.compute(Ir(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},hl=e=>{let t=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},fl=e=>{e.compute(Ir(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},no=e=>hr(e),ml=(e,t)=>{let r=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"HardSigmoid",n=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${n} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},_l=e=>{e.compute(Ir(e.inputs[0],"Sin","sin"))},as=e=>{e.compute(Ir(e.inputs[0],"Sinh","sinh"))},gl=e=>{e.compute(Ir(e.inputs[0],"Sqrt","sqrt"))},wl=e=>{e.compute(Ir(e.inputs[0],"Tan","tan"))},ls=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,io=e=>{e.compute(Ir(e.inputs[0],"Tanh",ls))},so=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${ls("v")};
}
`,us=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,yl=e=>{let t=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"FastGelu",us,so(t),void 0,e.inputs[0].dataType))},bl=(e,t)=>{let r=Br(e.inputs[0].dataType);return e.compute(Ir(e.inputs[0],"ThresholdedRelu",n=>`select(vec4<${r}>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},Ml=e=>{e.compute(Ir(e.inputs[0],"Log","log"))},oo=(e,t)=>`
const alpha = vec4<${e}>(${t});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,vl=e=>`quick_gelu_impl(${e})`,xl=(e,t)=>{let r=Br(e.inputs[0].dataType);e.compute(Ir(e.inputs[0],"QuickGelu",vl,oo(r,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),lo,Tl,El,Cl=L(()=>{Jt(),fr(),ao(),lo=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Tl=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=lt("input",e[0].dataType,e[0].dims,4),n=lt("bias",e[0].dataType,[e[0].dims[2]],4),i=Kt("output",e[0].dataType,t,4),s=Ie.size(t)/4,o=gr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${u.declareVariables(r,n,i)}

  ${os(o)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},El=e=>{lo(e.inputs),e.compute(Tl(e.inputs))}}),$l,Sl,Tn,kl,Pl,uo,Al,Il,co,Fl,Ol,po,Bl,xd=L(()=>{rr(),Jt(),fr(),$l=(e,t,r,n,i,s,o,u,d,h,y,l)=>{let x,k;typeof u=="string"?x=k=(A,ee)=>`${u}((${A}),(${ee}))`:typeof u=="function"?x=k=u:(x=u.scalar,k=u.vector);let S=Kt("outputData",y,n.length,4),C=lt("aData",d,t.length,4),X=lt("bData",h,r.length,4),H;if(i)if(s){let A=Ie.size(t)===1,ee=Ie.size(r)===1,le=t.length>0&&t[t.length-1]%4===0,me=r.length>0&&r[r.length-1]%4===0;A||ee?H=S.setByOffset("global_idx",k(A?`${C.type.value}(${C.getByOffset("0")}.x)`:C.getByOffset("global_idx"),ee?`${X.type.value}(${X.getByOffset("0")}.x)`:X.getByOffset("global_idx"))):H=`
            let outputIndices = ${S.offsetToIndices("global_idx * 4u")};
            let offsetA = ${C.broadcastedIndicesToOffset("outputIndices",S)};
            let offsetB = ${X.broadcastedIndicesToOffset("outputIndices",S)};
            ${S.setByOffset("global_idx",k(o||le?C.getByOffset("offsetA / 4u"):`${C.type.value}(${C.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||me?X.getByOffset("offsetB / 4u"):`${X.type.value}(${X.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else H=S.setByOffset("global_idx",k(C.getByOffset("global_idx"),X.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let A=(ee,le,me="")=>{let qe=`aData[indexA${le}][componentA${le}]`,Fe=`bData[indexB${le}][componentB${le}]`;return`
            let outputIndices${le} = ${S.offsetToIndices(`global_idx * 4u + ${le}u`)};
            let offsetA${le} = ${C.broadcastedIndicesToOffset(`outputIndices${le}`,S)};
            let offsetB${le} = ${X.broadcastedIndicesToOffset(`outputIndices${le}`,S)};
            let indexA${le} = offsetA${le} / 4u;
            let indexB${le} = offsetB${le} / 4u;
            let componentA${le} = offsetA${le} % 4u;
            let componentB${le} = offsetB${le} % 4u;
            ${ee}[${le}] = ${me}(${x(qe,Fe)});
          `};y===9?H=`
            var data = vec4<u32>(0);
            ${A("data",0,"u32")}
            ${A("data",1,"u32")}
            ${A("data",2,"u32")}
            ${A("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:H=`
            ${A("outputData[global_idx]",0)}
            ${A("outputData[global_idx]",1)}
            ${A("outputData[global_idx]",2)}
            ${A("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(C,X,S)}

        ${l??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${H}
      }`},Sl=(e,t,r,n,i,s,o=r.dataType)=>{let u=!Ie.areEqual(r.dims,n.dims),d=r.dims,h=Ie.size(r.dims),y=!1,l=!1,x=[u];if(u){let k=$n.calcShape(r.dims,n.dims,!1);if(!k)throw new Error("Can't perform binary op on the given tensors");d=k,h=Ie.size(d);let S=Ie.size(r.dims)===1,C=Ie.size(n.dims)===1,X=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,H=n.dims.length>0&&n.dims[n.dims.length-1]%4===0;x.push(S),x.push(C),x.push(X),x.push(H);let A=1;for(let ee=1;ee<d.length;ee++){let le=r.dims[r.dims.length-ee]??1,me=n.dims[n.dims.length-ee]??1;if(le===me)A*=le;else break}A%4===0?(l=!0,y=!0):(S||C||X||H)&&(y=!0)}else y=!0;return x.push(y),{name:e,shaderCache:{hint:t+x.map(k=>k.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:k=>$l(k,r.dims,n.dims,d,y,u,l,i,r.dataType,n.dataType,o,s),getRunData:()=>({outputs:[{dims:d,dataType:o}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(Ie.size(d)/4)},...Ot(r.dims,n.dims,d)]})}},Tn=(e,t,r,n,i,s)=>{e.compute(Sl(t,i??"",e.inputs[0],e.inputs[1],r,n,s))},kl=e=>{Tn(e,"Add",(t,r)=>`${t}+${r}`)},Pl=e=>{Tn(e,"Div",(t,r)=>`${t}/${r}`)},uo=e=>{Tn(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Al=e=>{Tn(e,"Mul",(t,r)=>`${t}*${r}`)},Il=e=>{let t=lt("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Tn(e,"Pow",{scalar:(r,n)=>`pow_custom(${r},${n})`,vector:(r,n)=>`pow_vector_custom(${r},${n})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},co=e=>{Tn(e,"Sub",(t,r)=>`${t}-${r}`)},Fl=e=>{Tn(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Ol=e=>{Tn(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},po=e=>{Tn(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Bl=e=>{Tn(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),zl,Dl,ds,Ll,Rl,Nl,Td=L(()=>{rr(),Jt(),kr(),fr(),zl=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,n=e[r],i=n.dataType,s=n.dims.length;e.forEach((o,u)=>{if(u!==r){if(o.dataType!==i)throw new Error("input tensors should be one type");if(o.dims.length!==s)throw new Error("input tensors should have the same shape");o.dims.forEach((d,h)=>{if(h!==t&&d!==n.dims[h])throw new Error("non concat dimensions must match")})}})},Dl=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,ds=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;++i){let s=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?n.push(s):i===0?n.push(`if (inputIndex == ${i}u) { ${s} }`):i===r-1?n.push(`else { ${s} }`):n.push(`else if (inputIndex == ${i}) { ${s} }`)}return n.join(`
`)},Ll=(e,t,r,n)=>{let i=Ie.size(r),s=new Array(e.length),o=new Array(e.length),u=0,d=[],h=[],y=[{type:12,data:i}];for(let C=0;C<e.length;++C)u+=e[C].dims[t],s[C]=u,h.push(e[C].dims.length),o[C]=lt(`input${C}`,n,h[C]),d.push("rank"),y.push({type:12,data:s[C]});for(let C=0;C<e.length;++C)y.push(...Ot(e[C].dims));y.push(...Ot(r));let l=Kt("output",n,r.length),x=l.indicesGet("indices",t),k=Array.from(Array(s.length).keys()).map(C=>`uniforms.sizeInConcatAxis${C}`).join(","),S=C=>`

  ${(()=>{C.registerUniform("outputSize","u32");for(let X=0;X<e.length;X++)C.registerUniform(`sizeInConcatAxis${X}`,"u32");return C.declareVariables(...o,l)})()}

  ${Dl(s.length,k)}

  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${l.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${x});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${s.length}u>(${k});
      ${x} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${ds(o,l)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:r,dataType:n}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:y}),getShaderSource:S}},Rl=(e,t)=>{let r=e.inputs,n=r[0].dims,i=Ie.normalizeAxis(t.axis,n.length);zl(r,i);let s=n.slice();s[i]=r.reduce((u,d)=>u+(d.dims.length>i?d.dims[i]:0),0);let o=r.filter(u=>Ie.size(u.dims)>0);e.compute(Ll(o,i,s,r[0].dataType),{inputs:o})},Nl=e=>hr({axis:e.axis})}),Yn,jn,Zn,ho,Un=L(()=>{rr(),Jt(),Yn=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},jn=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Zn=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},ho=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,n]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:n}}else if(t==="Clip"){let[r,n]=e?.activation_params||[Sn,Ln];return{activation:t,clipMax:n,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}}),pn,fo,cs=L(()=>{pn=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},fo=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),mo,_o=L(()=>{mo=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),jl,Ul,Li,go,Vl,Ri,Wl,wo,Ni=L(()=>{rr(),Jt(),fr(),Un(),cs(),jl=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,Ul=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Li=(e,t,r="f32",n,i=!1,s=32,o=!1,u=32)=>{let d=t[1]*e[1],h=t[0]*e[0],y=i?d:s,l=i?s:d,x=y/t[0],k=s/t[1];if(!((i&&x===4&&e[1]===4||!i&&(x===3||x===4))&&y%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${x} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${x} must be 3 or 4.
  tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${x}<${r}>, ${y/x}>, ${l}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${s}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${x};
const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${d};

  let num_tiles = ${o?`${Math.ceil(u/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${u}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${k};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${jl(i,n)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${k}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${x===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Ul(i,x)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},go=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,Vl=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Ri=(e,t,r="f32",n,i=!1,s=32,o=!1,u=32,d=!1)=>{let h=e[1]*t[1],y=e[0]*t[0],l=i?h:s,x=i?s:h;if(!(x%t[1]===0&&l%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${x} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let k=x/t[1],S=l/t[0],C=s/t[1],X=d?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${h};
    let globalColStart = i32(workgroupId.x) * ${y};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${x}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {
          ${go(i,n)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${n?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${h};

let tileRowA = i32(localId.y) * ${k};
let tileColA = i32(localId.x) * ${S};
let tileRowB = i32(localId.y) * ${C};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${k}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${S}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${go(i,n)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${C}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${n?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Vl(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${l}>, ${x}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${y}>, ${s}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(u/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${u}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;
    ${X}
  }
`},Wl=(e,t,r,n,i,s=!1)=>{let[o,u,d]=i,[h,y,l,x]=n,k=yi(o,d),S=yi(u,d),C=gr(n[0].type.tensor),X=()=>{let A=y.rank,ee=h.rank,le=`var aIndices: ${y.type.indices};`;for(let me=A-2-1,qe=ee-1;me>=0;me--,qe--)le+=`
aIndices[${me}] = ${ee>1?`batchIndices[${qe}]`:"batchIndices"};`;return k.forEach(me=>{le+=`
aIndices[${me}] = 0;`}),le+=`
aIndices[${A-2}] = u32(row);
                   aIndices[${A-1}] = u32(colIn);`,le},H=()=>{let A=l.rank,ee=h.rank,le=`var bIndices: ${l.type.indices};`;for(let me=A-2-1,qe=ee-1;me>=0;me--,qe--)le+=`
bIndices[${me}] = ${ee>1?`batchIndices[${qe}]`:"batchIndices"};`;return S.forEach(me=>{le+=`
bIndices[${me}] = 0;`}),le+=`
bIndices[${A-2}] = u32(row);
                   bIndices[${A-1}] = u32(colIn);`,le};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${pn(e,C)} {
      var value = ${pn(e,C)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${X()}
        value = ${y.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${pn(e,C)} {
      var value = ${pn(e,C)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${H()}
        value = ${l.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${pn(e,C)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${s?"bias[colIn]":`${pn(e,C)}(bias[row])`};`:""}
        ${r}
        ${x.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},wo=(e,t,r,n,i=!1,s)=>{let o=e[0].dims,u=e[1].dims,d=o.slice(0,-2),h=u.slice(0,-2),y=n?n.slice(0,-2):r.slice(0,-2),l=Ie.size(y),x=o[o.length-2],k=o[o.length-1],S=u[u.length-1],C=k%4===0&&S%4===0,X=x<=8?[4,1,1]:[4,4,1],H=[8,8,1],A=[Math.ceil(S/H[0]/X[0]),Math.ceil(x/H[1]/X[1]),Math.ceil(l/H[2]/X[2])],ee=C?4:1,le=[...d,x,k/ee],me=le.length,qe=[...h,k,S/ee],Fe=qe.length,bt=[l,x,S/ee],Vt=[{type:6,data:x},{type:6,data:S},{type:6,data:k}];jn(t,Vt),Vt.push(...Ot(y,le,qe));let jt=["rank","rank"],lr=e.length>2;lr&&(Vt.push(...Ot(e[2].dims)),jt.push("rank")),Vt.push(...Ot(bt));let Zt=ur=>{let Sr=y.length,or=Es("batchDims",e[0].dataType,Sr,1),Qt=gr(e[0].dataType),Tr=lt("a",e[0].dataType,me,ee),xr=lt("b",e[1].dataType,Fe,ee),Xt=Kt("result",e[0].dataType,bt.length,ee),yr=[Tr,xr];if(lr){let qr=i?ee:1;yr.push(lt("bias",e[2].dataType,e[2].dims.length,qr))}let rt=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Zn(t,rt);let St=gr(Xt.type.tensor),mr=Yn(t,Xt.type.value,St),Wr=Wl(ee,lr,mr,[or,Tr,xr,Xt],[d,h,y],i);return`
  ${ur.registerUniforms(rt).registerInternalVariables(or).declareVariables(...yr,Xt)}
  ${Wr}
  ${C?Li(X,H,Qt,or):Ri(X,H,Qt,or)}
                   `};return{name:"MatMul",shaderCache:{hint:`${X};${t.activation};${C};${i}`,inputDependencies:jt},getRunData:()=>({outputs:[{dims:s?s(r):r,dataType:e[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]},programUniforms:Vt}),getShaderSource:Zt}}}),Gl,ql,Ed=L(()=>{rr(),_(),fr(),Un(),cs(),_o(),Ni(),Gl=(e,t,r,n,i=!1,s,o=4,u=4,d=4,h="f32")=>{let y=Vt=>{switch(Vt){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Vt} is not supported.`)}},l=Vt=>{switch(Vt){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Vt} is not supported.`)}},x=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,k=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,S=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",C=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",X=e?"row":"col",H=e?"col":"row",A=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${X} / outWidth;
    let outCol = ${X} % outWidth;

    let WRow = ${H} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${H} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${H} % inChannels;
    var resData = ${pn(o,h)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${S} && xCol >= 0 && xCol < ${C}) {
      ${x}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${y(o)}
    }
    return resData;`,ee=e?t&&n?`
    let col = colIn * ${o};
    ${A}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${A}
    }
    return ${pn(o,h)}(0.0);`:n&&r?`
    let col = colIn * ${o};
    ${A}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${A}
    }
    return ${pn(o,h)}(0.0);`,le=`${l(u)}`,me=pn(d,h),qe=pn(e?o:u,h),Fe=pn(e?u:o,h),bt=Yn(s,me,h);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${qe} {
      ${e?ee:le}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Fe} {
      ${e?le:ee}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${me}) {
      let col = colIn * ${d};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${k}
      ${fo(i)}
      ${bt}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},ql=(e,t,r,n,i,s,o,u,d)=>{let h=t.format==="NHWC",y=h?e[0].dims[3]:e[0].dims[1],l=r[0],x=h?r[2]:r[3],k=h?r[1]:r[2],S=h?r[3]:r[1],C=h&&(y%4===0||y%3===0)&&S%4===0,X=h?S:x*k,H=h?x*k:S,A=[8,8,1],ee=n<=8?[4,1,1]:[4,4,1],le=[Math.ceil(X/A[0]/ee[0]),Math.ceil(H/A[1]/ee[1]),Math.ceil(l/A[2]/ee[2])];fe("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${le}`);let me=C?h&&y%4!==0?3:4:1,qe=A[1]*ee[1],Fe=A[0]*ee[0],bt=Math.max(A[0]*me,A[1]),Vt=n%qe===0,jt=i%Fe===0,lr=s%bt===0,Zt=C?[me,4,4]:[1,1,1],ur=[{type:6,data:n},{type:6,data:i},{type:6,data:s},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];jn(t,ur),ur.push(...Ot(e[0].dims,e[1].dims));let Sr=["rank","rank"];o&&(ur.push(...Ot(e[2].dims)),Sr.push("rank")),ur.push(...Ot(r));let or=Qt=>{let Tr=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Zn(t,Tr);let xr=C?4:1,Xt=gr(e[0].dataType),yr=`
      fn setOutputAtIndex(flatIndex : i32, value : ${C?`vec4<${Xt}>`:Xt}) {
        result[flatIndex] = ${C?`vec4<${Xt}>`:Xt}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${C?`vec4<${Xt}>`:Xt}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${C?"/ 4":""}, value);
      }`,rt=lt("x",e[0].dataType,e[0].dims.length,me===3?1:me),St=lt("w",e[1].dataType,e[1].dims.length,xr),mr=[rt,St],Wr=Kt("result",e[0].dataType,r.length,xr);if(o){let qr=lt("bias",e[2].dataType,e[2].dims.length,xr);mr.push(qr),yr+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${C?`vec4<${Xt}>`:Xt} {
          return bias[coords.${h?"w":"y"}${C?"/ 4":""}];
        }`}return`
        ${mo("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Qt.registerUniforms(Tr).declareVariables(...mr,Wr)}
        ${yr}
        ${Gl(h,Vt,jt,lr,o,t,Zt[0],Zt[1],Zt[2],Xt)}
        ${C?Li(ee,A,Xt,void 0,!h,bt):Ri(ee,A,Xt,void 0,!h,bt,!1,void 0,u)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${me};${C};${Vt};${jt};${lr};${qe};${Fe};${bt}`,inputDependencies:Sr},getRunData:()=>({outputs:[{dims:d?d(r):r,dataType:e[0].dataType}],dispatchGroup:{x:le[0],y:le[1],z:le[2]},programUniforms:ur}),getShaderSource:or}}}),Hl,yo,ji,bo,Mo,Kl,vo,Xl,Cd=L(()=>{rr(),_(),Jt(),fr(),Un(),cs(),Hl=e=>{let t=1;for(let r=0;r<e.length;r++)t*=e[r];return t},yo=e=>typeof e=="number"?[e,e,e]:e,ji=(e,t)=>t<=1?e:e+(e-1)*(t-1),bo=(e,t,r,n=1)=>{let i=ji(t,n);return Math.floor((e[0]*(r-1)-r+i)/2)},Mo=(e,t,r,n,i)=>{i==null&&(i=bo(e,t[0],n[0]));let s=[0,0,0,r];for(let o=0;o<3;o++)e[o]+2*i>=t[o]&&(s[o]=Math.trunc((e[o]-t[o]+2*i)/n[o]+1));return s},Kl=(e,t,r,n,i,s,o,u,d,h)=>{let y,l,x,k;if(e==="VALID"&&(e=0),typeof e=="number"){y={top:e,bottom:e,left:e,right:e,front:e,back:e};let S=Mo([t,r,n,1],[u,d,h],1,[i,s,o],e);l=S[0],x=S[1],k=S[2]}else if(Array.isArray(e)){if(!e.every((C,X,H)=>C===H[0]))throw Error(`Unsupported padding parameter: ${e}`);y={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let S=Mo([t,r,n,1],[u,d,h],1,[i,s,o],e[0]);l=S[0],x=S[1],k=S[2]}else if(e==="SAME_UPPER"){l=Math.ceil(t/i),x=Math.ceil(r/s),k=Math.ceil(n/o);let S=(l-1)*i+u-t,C=(x-1)*s+d-r,X=(k-1)*o+h-n,H=Math.floor(S/2),A=S-H,ee=Math.floor(C/2),le=C-ee,me=Math.floor(X/2),qe=X-me;y={top:ee,bottom:le,left:me,right:qe,front:H,back:A}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:y,outDepth:l,outHeight:x,outWidth:k}},vo=(e,t,r,n,i,s=!1,o="channelsLast")=>{let u,d,h,y,l;if(o==="channelsLast")[u,d,h,y,l]=e;else if(o==="channelsFirst")[u,l,d,h,y]=e;else throw new Error(`Unknown dataFormat ${o}`);let[x,,k,S,C]=t,[X,H,A]=yo(r),[ee,le,me]=yo(n),qe=ji(k,ee),Fe=ji(S,le),bt=ji(C,me),{padInfo:Vt,outDepth:jt,outHeight:lr,outWidth:Zt}=Kl(i,d,h,y,X,H,A,qe,Fe,bt),ur=s?x*l:x,Sr=[0,0,0,0,0];return o==="channelsFirst"?Sr=[u,ur,jt,lr,Zt]:o==="channelsLast"&&(Sr=[u,jt,lr,Zt,ur]),{batchSize:u,dataFormat:o,inDepth:d,inHeight:h,inWidth:y,inChannels:l,outDepth:jt,outHeight:lr,outWidth:Zt,outChannels:ur,padInfo:Vt,strideDepth:X,strideHeight:H,strideWidth:A,filterDepth:k,filterHeight:S,filterWidth:C,effectiveFilterDepth:qe,effectiveFilterHeight:Fe,effectiveFilterWidth:bt,dilationDepth:ee,dilationHeight:le,dilationWidth:me,inShape:e,outShape:Sr,filterShape:t}},Xl=(e,t,r,n,i,s)=>{let o=s==="channelsLast";o?e[0].dims[3]:e[0].dims[1];let u=[64,1,1],d={x:r.map((X,H)=>H)},h=[Math.ceil(Hl(d.x.map(X=>r[X]))/u[0]),1,1];fe("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${h}`);let y=1,l=Ie.size(r),x=[{type:12,data:l},{type:12,data:n},{type:12,data:i},{type:12,data:t.strides},{type:12,data:t.dilations}];jn(t,x),x.push(...Ot(e[0].dims,e[1].dims));let k=["rank","rank"],S=e.length===3;S&&(x.push(...Ot(e[2].dims)),k.push("rank")),x.push(...Ot(r));let C=X=>{let H=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:n.length},{name:"pads",type:"u32",length:i.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];Zn(t,H);let A=1,ee=gr(e[0].dataType),le=lt("x",e[0].dataType,e[0].dims.length,y),me=lt("W",e[1].dataType,e[1].dims.length,A),qe=[le,me],Fe=Kt("result",e[0].dataType,r.length,A),bt="";if(S){let lr=lt("bias",e[2].dataType,e[2].dims.length,A);qe.push(lr),bt+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${ee} {
          return bias[${o?qt("coords",4,5):qt("coords",1,5)}];
        }`}let Vt=pn(y,ee),jt=Yn(t,Vt,ee);return`
            ${bt}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${le.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${me.getByIndices("aIndices")};
            }
          ${X.registerUniforms(H).declareVariables(...qe,Fe)}
          ${X.mainStart()}
          ${X.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${Fe.offsetToIndices("global_idx")};
              let batch = ${qt("coords",0,le.rank)};
              let d2 = ${o?qt("coords",le.rank-1,le.rank):qt("coords",1,le.rank)};
              let xFRCCorner = vec3<u32>(${o?qt("coords",1,le.rank):qt("coords",2,le.rank)},
              ${o?qt("coords",2,le.rank):qt("coords",3,le.rank)},
              ${o?qt("coords",3,le.rank):qt("coords",4,le.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?qt("uniforms.x_shape",1,le.rank):qt("uniforms.x_shape",2,le.rank)};
              let xShapeZ = ${o?qt("uniforms.x_shape",2,le.rank):qt("uniforms.x_shape",3,le.rank)};
              let xShapeW = ${o?qt("uniforms.x_shape",3,le.rank):qt("uniforms.x_shape",4,le.rank)};
              let xShapeU = ${o?qt("uniforms.x_shape",4,le.rank):qt("uniforms.x_shape",1,le.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${S?"value = value + getBiasByOutputCoords(coords)":""};
              ${jt}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${o};${y};${S}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:h[0],y:h[1],z:h[2]},programUniforms:x}),getShaderSource:C}}}),Jn,Ql,$d=L(()=>{rr(),Jt(),fr(),Un(),Jn=(e,t,r,n)=>{let i=e.length>2,s=i?"value += b[output_channel];":"",o=e[0].dims,u=e[1].dims,d=t.format==="NHWC",h=d?r[3]:r[1],y=h/t.group,l=d&&y>=4?br(h):1,x=Ie.size(r)/l,k=[{type:12,data:x},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:y}];jn(t,k),k.push(...Ot(o,[u[0],u[1],u[2],u[3]/l]));let S=i?["rank","rank","rank"]:["rank","rank"];k.push(...Ot([r[0],r[1],r[2],r[3]/l]));let C=X=>{let H=Kt("output",e[0].dataType,r.length,l),A=gr(H.type.tensor),ee=Yn(t,H.type.value,A),le=lt("x",e[0].dataType,o.length),me=lt("w",e[1].dataType,u.length,l),qe=[le,me];i&&qe.push(lt("b",e[2].dataType,e[2].dims,l));let Fe=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Zn(t,Fe);let bt=d?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${le.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${me.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${le.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${me.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${X.registerUniforms(Fe).declareVariables(...qe,H)}

  ${X.mainStart()}
    ${X.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${H.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${d?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${d?1:2}], outputIndices[${d?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${l} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${d?2:1}];

    var value: ${H.type.value} = ${H.type.value}(0);
    ${bt}
    ${s}
    ${ee}
    ${H.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${l}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(x/64)},programUniforms:k}),getShaderSource:C}},Ql=(e,t,r,n)=>{let i=e.length>2,s=br(r[3]),o=br(r[2]),u=Ie.size(r)/s/o,d=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/s],h=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/s],y=[r[0],r[1],r[2],r[3]/s],l=[{type:12,data:u},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];jn(t,l),l.push(...Ot(d,h,y));let x=(o-1)*t.strides[1]+h[1],k=S=>{let C=Kt("output",e[0].dataType,y.length,s),X=gr(C.type.tensor),H=Yn(t,C.type.value,X),A=lt("x",e[0].dataType,d.length,s),ee=lt("w",e[1].dataType,h.length,s),le=[A,ee];i&&le.push(lt("b",e[2].dataType,e[2].dims,s));let me=i?"value += b[output_channel];":"",qe=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Zn(t,qe),`
  ${S.registerUniforms(qe).declareVariables(...le,C)}
  ${S.mainStart()}
    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${A.type.value}, ${x}>;
    var values: array<${C.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${h[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${x}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${A.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${A.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${h[1]}; w_width++) {
          let w_val = ${ee.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${me}
      ${H}
      ${C.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${s};${o};${x};${h[0]};${h[1]}`,inputDependencies:i?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:k}}}),xo,Yl,To,Zl=L(()=>{rr(),Jt(),Ni(),fr(),Un(),xo=(e,t,r,n,i=!1,s)=>{let o=e[0].dims,u=e[1].dims,d=o[o.length-2],h=u[u.length-1],y=o[o.length-1],l=br(h),x=br(y),k=br(d),S=Ie.size(r)/l/k,C=e.length>2,X=n?n.slice(0,-2):r.slice(0,-2),H=[Ie.size(X),d,h],A=[{type:12,data:S},{type:12,data:d},{type:12,data:h},{type:12,data:y}];jn(t,A),A.push(...Ot(X,o,u)),C&&A.push(...Ot(e[2].dims)),A.push(...Ot(H));let ee=le=>{let me=Es("batch_dims",e[0].dataType,X.length),qe=lt("a",e[0].dataType,o.length,x),Fe=lt("b",e[1].dataType,u.length,l),bt=Kt("output",e[0].dataType,H.length,l),Vt=gr(bt.type.tensor),jt=Yn(t,bt.type.value,Vt),lr=[qe,Fe],Zt="";if(C){let yr=i?l:1;lr.push(lt("bias",e[2].dataType,e[2].dims.length,yr)),Zt=`${i?`value += bias[col / ${yr}];`:`value += ${bt.type.value}(bias[row + i]);`}`}let ur=o.slice(0,-2),Sr=u.slice(0,-2),or=yi(ur,X),Qt=yi(Sr,X),Tr=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Zn(t,Tr);let xr=(yr,rt)=>{let St=yr.rank,mr=yr.name;if(St===2)return`var ${mr}_indices = ${yr.type.indices}(0u, 0u);`;let Wr=me.rank,qr=`var ${mr}_indices: ${yr.type.indices};`;for(let Wn=St-2-1,Bn=Wr-1;Wn>=0;Wn--,Bn--)qr+=`
${mr}_indices[${Wn}] = ${Wr>1?`batch_indices[${Bn}]`:"batch_indices"};`;return rt.forEach(Wn=>{qr+=`
${mr}_indices[${Wn}] = 0;`}),qr+=`${mr}_indices[${St-2}] = 0u;
                     ${mr}_indices[${St-1}] = 0u;`,qr},Xt=()=>{let yr=`var a_data: ${qe.type.value};`;for(let rt=0;rt<x;rt++)yr+=`
              let b_data${rt} = b[(b_offset + (k + ${rt}) * uniforms.N + col) / ${l}];`;for(let rt=0;rt<k;rt++){yr+=`a_data = a[(a_offset + (row + ${rt}) * uniforms.K + k) / ${x}];`;for(let St=0;St<x;St++)yr+=`
            values[${rt}] = fma(${Fe.type.value}(a_data${x===1?"":`[${St}]`}), b_data${St}, values[${rt}]);
`}return yr};return`
  ${le.registerUniforms(Tr).registerInternalVariables(me).declareVariables(...lr,bt)}
  ${le.mainStart()}
    ${le.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${l})) * ${l};
    var index1 = global_idx / (uniforms.N / ${l});
    let stride1 = uniforms.M / ${k};
    let row = (index1 % stride1) * ${k};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${me.offsetToIndices("batch")};`}
    ${xr(qe,or)}
    let a_offset = ${qe.indicesToOffset("a_indices")};
    ${xr(Fe,Qt)}
    let b_offset = ${Fe.indicesToOffset("b_indices")};
    var values: array<${bt.type.value}, ${k}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${x}) {
      ${Xt()}
    }
    for (var i = 0u; i < ${k}u; i++) {
      var value = values[i];
      ${Zt}
      ${jt}
      let cur_indices = ${bt.type.indices}(batch, row + i, col);
      let offset = ${bt.indicesToOffset("cur_indices")};
      ${bt.setByOffset(`offset / ${l}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${l};${x};${k};${i}`,inputDependencies:C?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:A}),getShaderSource:ee}},Yl=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},To=e=>{Yl(e.inputs);let t=$n.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],n=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&n<8?e.compute(xo(e.inputs,{activation:""},t)):e.compute(wo(e.inputs,{activation:""},t))}}),Jl,ps,eu,Mi,Eo,Co,tu,Ui,$o,Sd=L(()=>{Jt(),Ed(),Cd(),Ni(),$d(),Un(),Zl(),Nn(),Jl=(e,t,r,n,i,s)=>{let o=e[0],u=e.slice(s?1:2,s?3:4),d=u.length,h=t[0],y=t.slice(2).map((x,k)=>x+(x-1)*(r[k]-1)),l=u.map((x,k)=>x+n[k]+n[k+d]).map((x,k)=>Math.floor((x-y[k]+i[k])/i[k]));return l.splice(0,0,o),l.splice(s?3:1,0,h),l},ps=[2,3,1,0],eu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[1]*t.group;if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Mi=(e,t)=>{let r=e.kernelShape.slice();r.length<t[1].dims.length-2&&r.push(...Array(t[1].dims.length-2-r.length).fill(0));for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let n=e.pads.slice();Zr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,n,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:n}),i},Eo=e=>{let t=ho(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,s=e.group,o=e.kernel_shape,u=e.pads,d=e.strides,h=e.w_is_const();return{autoPad:n,format:r,dilations:i,group:s,kernelShape:o,pads:u,strides:d,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},Co=(e,t,r,n)=>{let i=r.format==="NHWC",s=Jl(t[0].dims,t[1].dims,r.dilations,r.pads,r.strides,i);if(r.group!==1){let qe=[t[0]];if(i){let Fe=e.kernelCustomData.wT??e.compute(bn(t[1],ps),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Fe),qe.push(Fe)}else qe.push(t[1]);t.length===3&&qe.push(t[2]),!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1?e.compute(Ql(qe,r,s,n),{inputs:qe}):e.compute(Jn(qe,r,s,n),{inputs:qe});return}let o=t.length===3,u=t[0].dims[i?1:2],d=t[0].dims[i?2:3],h=t[0].dims[i?3:1],y=t[1].dims[2],l=t[1].dims[3],x=s[i?1:2],k=s[i?2:3],S=s[i?3:1],C=i&&y===u&&l===d&&r.pads[0]===0&&r.pads[1]===0;if(C||y===1&&l===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let qe=s[0],Fe,bt,Vt,jt=[];if(i){let ur=e.kernelCustomData.wT??e.compute(bn(t[1],ps),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=ur),C){let Sr=u*d*h;Fe=t[0].reshape([1,qe,Sr]),bt=ur.reshape([1,Sr,S]),Vt=[1,qe,S]}else Fe=t[0].reshape([qe,u*d,h]),bt=ur.reshape([1,h,S]),Vt=[qe,x*k,S];jt.push(Fe),jt.push(bt)}else Fe=t[0].reshape([qe,h,u*d]),bt=t[1].reshape([1,S,h]),Vt=[qe,S,x*k],jt.push(bt),jt.push(Fe);o&&jt.push(t[2]);let lr=Vt[2],Zt=jt[0].dims[jt[0].dims.length-1];lr<8&&Zt<8?e.compute(xo(jt,r,s,Vt,i,n),{inputs:jt}):e.compute(wo(jt,r,s,Vt,i,n),{inputs:jt});return}let X=!0,H=e.kernelCustomData.wT??e.compute(bn(t[1],ps),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=H);let A=[t[0],H];o&&A.push(t[2]);let ee=i?x*k:S,le=i?S:x*k,me=y*l*h;e.compute(ql(A,r,s,ee,le,me,o,X,n),{inputs:A})},tu=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),o=[1].concat(t.dilations),u=[1].concat(t.kernelShape),d=Mi({...t,pads:i,strides:s,dilations:o,kernelShape:u},n);Co(e,n,d,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]])},Ui=(e,t,r)=>{let n=r.format==="NHWC"?"channelsLast":"channelsFirst",i=Mi(r,t),s=r.autoPad==="NOTSET"?r.pads:r.autoPad,o=vo(t[0].dims,t[1].dims,r.strides,r.dilations,s,!1,n);e.compute(Xl(t,i,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],n))},$o=(e,t)=>{if(eu(e.inputs,t),e.inputs[0].dims.length===3)tu(e,t);else if(e.inputs[0].dims.length===5)Ui(e,e.inputs,t);else{let r=Mi(t,e.inputs);Co(e,e.inputs,r)}}}),ru,nu,So=L(()=>{rr(),_(),fr(),Un(),cs(),_o(),Ni(),ru=(e,t=!1,r,n,i=4)=>{let s=X=>{switch(X){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${n}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${X} is not supported.`)}},o=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,u=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,d=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",y=e?"row":"col",l=e?"col":"row",x=`
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${y} / outWidth;
      let outCol = ${y} % outWidth;

      let WRow = ${l} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${l} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${d}) || fract(xR) > 0.0) {
        return ${n}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {
        return ${n}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${l} % inChannels;
      ${o}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${i}];`,k=e?`
      let col = colIn * ${i};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${x}
      }
      return ${n}(0.0);`:`
      let col = colIn * ${i};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${x}
      }
      return ${n}(0.0);`,S=`
      let col = colIn * ${i};
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${s(i)}
      }
      return ${n}(0.0);
      `,C=Yn(r,n);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${e?k:S}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${e?S:k}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${n}) {
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${u}
      ${fo(t)}
      ${C}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${i}] = value;
    }
  }`},nu=(e,t,r,n,i,s,o,u)=>{let d=t.format==="NHWC",h=d?e[0].dims[3]:e[0].dims[1],y=r[0],l=d?r[2]:r[3],x=d?r[1]:r[2],k=d?r[3]:r[1],S=d&&h%4===0&&h%3&&k%4===0,C=d?k:l*x,X=d?l*x:k,H=[8,8,1],A=n<=8?[4,1,1]:[4,4,1],ee=[Math.ceil(C/H[0]/A[0]),Math.ceil(X/H[1]/A[1]),Math.ceil(y/H[2]/A[2])];fe("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${ee}`);let le=S?4:1,me=Math.max(H[0]*le,H[1]),qe=S?4:1,Fe=[t.kernelShape[d?1:2],t.kernelShape[d?2:3]],bt=[Fe[0]+(t.dilations[0]<=1?0:(Fe[0]-1)*(t.dilations[0]-1)),Fe[1]+(t.dilations[1]<=1?0:(Fe[1]-1)*(t.dilations[1]-1))],Vt=[bt[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),bt[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],jt=[{type:6,data:n},{type:6,data:i},{type:6,data:s},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:Fe},{type:6,data:Vt}];jn(t,jt),jt.push(...Ot(e[0].dims,e[1].dims));let lr=["rank","rank"];o&&(jt.push(...Ot(e[2].dims)),lr.push("rank")),jt.push(...Ot(r));let Zt=ur=>{let Sr=lt("x",e[0].dataType,e[0].dims.length,qe),or=lt("w",e[1].dataType,e[1].dims.length,1),Qt=Kt("result",e[0].dataType,r.length,qe),Tr=[Sr,or],xr="";if(o){let rt=lt("bias",e[2].dataType,e[2].dims.length,qe);Tr.push(rt),xr+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${rt.type.value} {
            return bias[coords.${d?"w":"y"}${S?"/ 4":""}];
          }`}let Xt=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:Fe.length},{name:"pads",type:"i32",length:Vt.length}];Zn(t,Xt);let yr=gr(e[0].dataType,1);if(yr!=="f16"&&yr!=="f32")throw new Error(`elemType ${yr} is not supported.`);return`
        ${mo("uniforms.result_strides")}
        ${ur.registerUniforms(Xt).declareVariables(...Tr,Qt)};
        ${xr}
        ${ru(d,o,t,Sr.type.value,le)}
        ${S?Li(A,H,yr,void 0,!d,me):Ri(A,H,yr,void 0,!d,me,!1,void 0,u)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${A};${H};${S}`,inputDependencies:lr},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:ee[0],y:ee[1],z:ee[2]},programUniforms:jt}),getShaderSource:Zt}}}),iu,ko,kd=L(()=>{rr(),_(),Jt(),fr(),iu=(e,t,r,n,i,s=!1,o,u,d=!1)=>{let h=d?1:2,y=d?2:3,l=d?3:1,x=s?2:1,k=`
  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${o}>`:o}) {
    result[flatIndex] = ${s?`vec4<${o}>`:o}(value);
  }`;n&&(k+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${o}>`:o} {
      return bias[coords.${d?"w":"y"}${s?"/ 4":""}];
    }`);let S=s?4:1,C=lt("W",t[1].dataType,t[1].dims.length,S),X=lt("Dy",t[0].dataType,t[0].dims.length,S),H=[X,C];n&&H.push(lt("bias",t[2].dataType,[r[l]].length,S));let A=Kt("result",t[0].dataType,r.length,S),ee=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${x};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${o}>, ${x}>;
        for (var i = 0; i < ${x}; i++) {
          dotProd[i] = vec4<${o}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${o}(dyCorner.x) + ${o}(wR)) / ${o}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${o}(dyCorner.y) + ${o}(wC)) / ${o}(uniforms.strides.y);
            let dyC2 = (${o}(dyCorner.y) + 1.0 + ${o}(wC)) / ${o}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${X.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${X.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${o}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${l}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${X.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${X.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${x}; i = i + 1) {
          let value = dotProd[i] + ${n?"bias[c+i]":`vec4<${o}>(0.0)`};
          ${A.set("batch","r","c + i","d1","value")};
        }
      }`,le=`
          let outputIndices = ${A.offsetToIndices("global_idx")};
          let batch = ${A.indicesGet("outputIndices",0)};
          let d1 = ${A.indicesGet("outputIndices",l)};
          let r = ${A.indicesGet("outputIndices",h)};
          let c = ${A.indicesGet("outputIndices",y)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${o}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${o}(dyRCorner) + ${o}(wR)) / ${o}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${o}(dyCCorner) + ${o}(wC)) / ${o}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[${y}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${d?X.get("batch","idyR","idyC","inputChannel"):X.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${C.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${n?"bias[d1]":`${o}(0.0)`};
          ${A.setByOffset("global_idx","value")};
        `;return`
  ${e.registerUniforms(u).declareVariables(...H,A)}
  ${k}

    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${s?ee:le}}`},ko=(e,t,r)=>{let n=e.length>2,i=t.outputShape,s=Ie.size(i),o=[Math.ceil(s/64),1,1];fe("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${o}`);let u=t.format==="NHWC",d=["rank","rank"],h=[t.strides[0],t.strides[1]],y=[t.kernelShape[u?1:2],t.kernelShape[u?2:3]],l=[t.dilations[0],t.dilations[1]],x=[y[0]+(t.dilations[0]<=1?0:(t.kernelShape[u?1:2]-1)*(t.dilations[0]-1)),y[1]+(t.dilations[1]<=1?0:(t.kernelShape[u?2:3]-1)*(t.dilations[1]-1))],k=[x[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),x[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],S=!1,C=t.group,X=e[1].dims,H=X[0]/C,A=X[1],ee=[{type:12,data:s},{type:12,data:h},{type:12,data:y},{type:12,data:l},{type:12,data:x},{type:6,data:k},{type:12,data:H},{type:12,data:A},...Ot(e[0].dims,e[1].dims)];n&&(ee.push(...Ot(e[2].dims)),d.push("rank")),ee.push(...Ot(i));let le=o[1]===1&&o[2]===1,me=qe=>{let Fe=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:y.length},{name:"dilations",type:"u32",length:y.length},{name:"effective_filter_dims",type:"u32",length:x.length},{name:"pads",type:"i32",length:k.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],bt=gr(e[0].dataType);return`${iu(qe,e,i,n,le,S,bt,Fe,u)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:d},getRunData:()=>({dispatchGroup:{x:o[0],y:o[1],z:o[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:ee}),getShaderSource:me}}}),Pd,su,ou,Po,vi,au,lu,uu,du,cu,Ao=L(()=>{So(),kd(),Un(),Nn(),Pd=(e,t,r,n,i,s)=>(e-1)*t+r+(n-1)*i+1-s,su=(e,t,r,n,i)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[n]=s,r[i]=e-s):t==="SAME_LOWER"&&(r[n]=e-s,r[i]=s)},ou=(e,t,r,n,i,s,o,u,d,h)=>{let y=e.length-2,l=h.length===0;d.length<y&&d.push(...Array(y-d.length).fill(0));let x=e[0],k=t[u?3:1]*i;for(let S=0,C=e.length-y-(u?1:0);S<y;++S,++C){let X=e[C],H=l?X*o[S]:h[S],A=Pd(X,o[S],s[S],t[C],r[S],H);su(A,n,s,S,S+y),l&&h.push(o[S]*(X-1)+d[S]+(t[C]-1)*r[S]+1-s[S]-s[S+y])}h.splice(0,0,x),h.splice(u?3:1,0,k)},Po=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((l,x)=>l*x,1)===0){r.length=0;for(let l=2;l<t[1].dims.length;++l)r.push(t[1].dims[l])}let n=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(n?3:1,0,t[1].dims[1]);let i=e.pads.slice(),s=e.outputShape.slice(),o=e.outputPadding.slice(),u=t[0].dims,d=e.dilations.slice();if(d.reduce((l,x)=>l+x,0)===0){let l=t[0].dims.length-2;d=new Array(l).fill(1)}let h=e.strides.slice();if(h.reduce((l,x)=>l+x,0)===0){let l=t[0].dims.length-2;h=new Array(l).fill(1)}ou(u,r,d,e.autoPad,e.group,i,h,n,o,s);let y=Object.assign({},e);return Object.assign(y,{kernelShape:r,pads:i,outputPadding:o,outputShape:s,dilations:d,strides:h}),y},vi=e=>{let t=ho(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,s=e.group,o=e.kernelShape,u=e.pads,d=e.strides,h=e.wIsConst(),y=e.outputPadding,l=e.outputShape;return{autoPad:n,format:r,dilations:i,group:s,kernelShape:o,outputPadding:y,outputShape:l,pads:u,strides:d,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},au=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[0];if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((o,u)=>o+u,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((o,u)=>o+u,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((o,u)=>o+u,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((o,u)=>o+u,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},lu=[2,3,1,0],uu=(e,t,r)=>{let n=Po(r,t),i=r.format==="NHWC",s=n.outputShape,o=s[i?3:1],u=t[0].dims[i?3:1];if(n.group!==1||o===1&&u===1){e.compute(ko(t,n));return}let d=s[i?1:2],h=s[i?2:3],y=t[1].dims[2],l=t[1].dims[3],x=i?d*h:o,k=i?o:d*h,S=y*l*u,C=!0,X=e.kernelCustomData.wT??e.compute(bn(t[1],lu),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=X);let H=[t[0],X],A=t.length===3;A&&(!i&&t[2].dims.length===1?H.push(t[2].reshape([t[2].dims[0],1,1])):H.push(t[2])),e.compute(nu(H,n,s,x,k,S,A,C),{inputs:H})},du=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let o=t.strides;(o.length===0||o[0]===0)&&(o=[1]);let u=t.pads;u.length===0&&(u=[0,0]),u=[0,u[0],0,u[1]],o=[1].concat(o),s=[1].concat(s),i=[1].concat(i);let d=Po({...t,pads:u,strides:o,dilations:s,kernelShape:i},n);e.compute(ko(n,d,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},cu=(e,t)=>{au(e.inputs,t),e.inputs[0].dims.length===3?du(e,t):uu(e,e.inputs,t)}}),Ad,pu,hu,Id=L(()=>{rr(),Jt(),kr(),fr(),Ad=(e,t,r,n)=>{let i=Ie.size(t),s=t.length,o=lt("input",e,s),u=Kt("output",e,s),d=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=Ie.normalizeAxis(d,s),y=l=>{let x=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,k=qt("uniforms.input_shape","uniforms.axis",s),S=n.reverse?x+(n.exclusive?" + 1":""):"0",C=n.reverse?k:x+(n.exclusive?"":" + 1");return`
                ${l.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,u)}
                ${l.mainStart()}
                  ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${u.offsetToIndices("global_idx")};
                  var sum = ${u.type.value}(0);
                  let first : i32 = ${S};
                  let last : i32 = ${C};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${u.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:h},...Ot(t,t)]}),getShaderSource:y}},pu=(e,t)=>{let r=e.inputs[0].dims,n=e.inputs[0].dataType,i=e.inputs[1];e.compute(Ad(n,r,i,t),{inputs:[0]})},hu=e=>{let t=e.exclusive===1,r=e.reverse===1;return hr({exclusive:t,reverse:r})}}),fu,mu,Io,_u,gu,wu=L(()=>{rr(),Jt(),kr(),fr(),fu=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},mu=(e,t,r,n)=>{let i=[];i.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let s=0;s<t;++s)i.push(r.indicesSet("a",e[s],`i[${s}]`));return i.push("return a;}"),i.join(`
`)},Io=(e,t)=>{let r,n,i,s,o,u,d=t.format==="NHWC",h=t.blocksize,y=t.mode==="DCR";d?([r,n,i,s]=e.dims,o=y?[r,n,i,h,h,s/h**2]:[r,n,i,s/h**2,h,h],u=y?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,n,i,s]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],o=y?[r,h,h,s/h**2,n,i]:[r,s/h**2,h,h,n,i],u=y?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let l=e.reshape(o),x=l.dims.length,k=e.dataType,S=lt("a",k,x),C=Kt("output",k,x),X=H=>`
  ${H.registerUniform("output_size","u32").declareVariables(S,C)}

  ${mu(u,x,S,C)}

  ${H.mainStart()}
    ${H.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${C.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${C.setByOffset("global_idx",S.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:H=>{let A=d?[r,n*h,i*h,s/h**2]:[r,s/h**2,n*h,i*h],ee=Ie.size(A),le=l.dims,me=Ie.sortBasedOnPerm(le,u);return{outputs:[{dims:A,dataType:H[0].dataType}],dispatchGroup:{x:Math.ceil(ee/64)},programUniforms:[{type:12,data:ee},...Ot(le,me)]}},getShaderSource:X}},_u=(e,t)=>{fu(e.inputs),e.compute(Io(e.inputs[0],t))},gu=e=>hr({blocksize:e.blocksize,mode:e.mode,format:e.format})}),hs,Vi,fs,yu,bu,ms,Mu,Fo,vu,xu,Oo,Bo=L(()=>{rr(),Jt(),kr(),fr(),hs="[a-zA-Z]|\\.\\.\\.",Vi="("+hs+")+",fs="^"+Vi+"$",yu="("+Vi+",)*"+Vi,bu="^"+yu+"$",ms=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let r=this.symbolToIndices.get(e);r===void 0?r=[t]:r.push(t),this.symbolToIndices.set(e,r)}},Mu=class{constructor(e,t){this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,n]=t.includes("->")?t.split("->",2):[t,""];if(!r.match(RegExp(bu)))throw new Error("Invalid LHS term");if(r.split(",").forEach((i,s)=>{let o=e[s].dims.slice();if(!i.match(RegExp(fs)))throw new Error("Invalid LHS term");let u=this.processTerm(i,!0,o,s);this.lhs.push(u)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([i,s])=>s.count===1||i==="...").map(([i])=>i).join("");else if(!n.match(RegExp(Vi)))throw new Error("Invalid RHS");n.match(RegExp(hs,"g"))?.forEach(i=>{if(i==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let s=this.symbolToInfo.get(i);if(s===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(s.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(e,t,r){let n=this.symbolToInfo.get(e);if(n!==void 0){if(n.dimValue!==t&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(r)}else n={count:1,dimValue:t,inputIndices:[r]};this.symbolToInfo.set(e,n)}processTerm(e,t,r,n=-1){let i=r.length,s=!1,o=[],u=0;if(!e.match(RegExp(fs))&&!t&&e!=="")throw new Error("Invalid LHS term");let d=e.match(RegExp(hs,"g")),h=new ms(n);return d?.forEach((y,l)=>{if(y==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let x=i-d.length+1;if(x<0)throw new Error("Ellipsis out of bounds");if(o=r.slice(u,u+x),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=o;else throw new Error("Ellipsis must be specified in the LHS");for(let k=0;k<o.length;k++){let S=String.fromCharCode(48+k);h.addSymbol(S,l+k),this.addSymbol(S,r[u++],n)}}else h.addSymbol(y,l+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,r[u++],n)}),h}},Fo=e=>e+"_max",vu=(e,t,r,n)=>{let i=e.map(h=>h.length).map((h,y)=>lt(`input${y}`,t,h)),s=Ie.size(n),o=Kt("output",t,n.length),u=[...r.symbolToInfo.keys()].filter(h=>!r.rhs.symbolToIndices.has(h)),d=h=>{let y=[],l="var prod = 1.0;",x="var sum = 0.0;",k="sum += prod;",S=[],C=[],X=[],H=[],A=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((le,me)=>{if(r.rhs.symbolToIndices.has(me)){let qe=r.rhs.symbolToIndices.get(me)?.[0];qe!==void 0&&r.lhs.forEach((Fe,bt)=>{if(le.inputIndices.includes(bt)){let Vt=Fe.symbolToIndices.get(me);if(Vt===void 0)throw new Error("Invalid symbol error");Vt.forEach(jt=>{y.push(`${i[bt].indicesSet(`input${bt}Indices`,jt,o.indicesGet("outputIndices",qe))}`)})}})}else r.lhs.forEach((qe,Fe)=>{if(le.inputIndices.includes(Fe)){let bt=qe.symbolToIndices.get(me);if(bt===void 0)throw new Error("Invalid symbol error");bt.forEach(Vt=>{S.push(`${i[Fe].indicesSet(`input${Fe}Indices`,Vt,`${me}`)}`)}),H.push(`prod *= ${i[Fe].getByIndices(`input${Fe}Indices`)};`)}}),C.push(`for(var ${me}: u32 = 0; ${me} < uniforms.${Fo(me)}; ${me}++) {`),X.push("}")});let ee=A?[...y,`let sum = ${i.map((le,me)=>le.getByIndices(`input${me}Indices`)).join(" * ")};`]:[...y,x,...C,...S,l,...H,k,...X];return`
            ${h.registerUniforms(u.map(le=>({name:`${Fo(le)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,o)}

            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${i.map((le,me)=>`var input${me}Indices: ${i[me].type.indices};`).join(`
`)}
            ${ee.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let h=u.filter(l=>r.symbolToInfo.has(l)).map(l=>({type:12,data:r.symbolToInfo.get(l)?.dimValue||0}));h.push({type:12,data:s});let y=e.map((l,x)=>[...Ot(l)]).reduce((l,x)=>l.concat(x),h);return y.push(...Ot(n)),{outputs:[{dims:n,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:y}},getShaderSource:d}},xu=(e,t)=>{let r=new Mu(e.inputs,t.equation),n=r.outputDims,i=e.inputs.map((s,o)=>s.dims);e.compute(vu(i,e.inputs[0].dataType,r,n))},Oo=e=>{let t=e.equation.replace(/\s+/g,"");return hr({equation:t})}}),Fd,zo,Tu,Do,Eu,Od=L(()=>{rr(),Jt(),fr(),Fd=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;n<r.length&&i<t.length;++n,++i)if(r[n]!==t[i]&&r[n]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},zo=(e,t)=>{let r=e.length-t.length,n=[];for(let i=0;i<r;++i)n.push(e[i]);for(let i=0;i<t.length;++i)n.push(t[i]===1?e[i+r]:t[i]);return n},Tu=(e,t)=>e.length>t.length?zo(e,t):zo(t,e),Do=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=Tu(t,r),i=e[0].dataType,s=i===9?4:1,o=Math.ceil(Ie.size(n)/s),u=h=>{let y=lt("input",i,t.length,s),l=Kt("output",i,n.length,s),x;if(i===9){let k=(S,C,X="")=>`
          let outputIndices${C} = ${l.offsetToIndices(`outputOffset + ${C}u`)};
          let offset${C} = ${y.broadcastedIndicesToOffset(`outputIndices${C}`,l)};
          let index${C} = offset${C} / 4u;
          let component${C} = offset${C} % 4u;
          ${S}[${C}] = ${X}(${y.getByOffset(`index${C}`)}[component${C}]);
        `;x=`
        let outputOffset = global_idx * ${s};
        var data = vec4<u32>(0);
        ${k("data",0,"u32")}
        ${k("data",1,"u32")}
        ${k("data",2,"u32")}
        ${k("data",3,"u32")}
        ${l.setByOffset("global_idx","data")}
      }`}else x=`
        let outputIndices = ${l.offsetToIndices("global_idx")};
        let inputOffset = ${y.broadcastedIndicesToOffset("outputIndices",l)};
        ${l.setByOffset("global_idx",y.getByOffset("inputOffset"))}
      }`;return`
    ${h.registerUniform("vec_size","u32").declareVariables(y,l)}
    ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${x}`},d=[{type:12,data:o},...Ot(t,n)];return{name:"Expand",shaderCache:{hint:`${n.length}`,inputDependencies:["rank"]},getShaderSource:u,getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:d})}},Eu=e=>{Fd(e.inputs),e.compute(Do(e.inputs),{inputs:[0]})}}),Lo,Cu,Bd=L(()=>{rr(),Jt(),fr(),ao(),Lo=e=>{let t=e[0].dataType,r=Ie.size(e[0].dims),n=Ie.size(e[1].dims),i=n%4===0,s=o=>{let u=lt("x",t,[1],4),d=lt("bias",t,[1],4),h=Kt("y",t,[1],4),y=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],l=k=>`
      let bias${k}_offset: u32 = (global_idx * 4 + ${k}) % uniforms.bias_size;
      let bias${k} = ${d.getByOffset(`bias${k}_offset / 4`)}[bias${k}_offset % 4];`,x=i?`
      let bias = ${d.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${l(0)}${l(1)}${l(2)}${l(3)}
      let bias = ${u.type.value}(bias0, bias1, bias2, bias3);`;return`${o.registerUniforms(y).declareVariables(u,d,h)}

    ${so(Br(t))}

    ${o.mainStart(cn)}
      ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${u.getByOffset("global_idx")};
      ${x}
      let x_in = x + bias;
      ${h.setByOffset("global_idx",us("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:s,getRunData:o=>({outputs:[{dims:o[0].dims,dataType:o[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:n}],dispatchGroup:{x:Math.ceil(r/cn/4)}})}},Cu=e=>{e.inputs.length<2||Ie.size(e.inputs[1].dims)===0?yl(e):e.compute(Lo(e.inputs))}}),Ro,zd,Dd,No,$u=L(()=>{rr(),Jt(),kr(),fr(),Ro=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},zd=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,s=Ie.normalizeAxis(t.axis,i),o=r.slice(0);o.splice(s,1,...n);let u=r[s],d=e[0].dataType===9?4:1,h=Math.ceil(Ie.size(o)/d),y=[{type:12,data:h},{type:6,data:u},{type:12,data:s},...Ot(e[0].dims,e[1].dims,o)],l=x=>{let k=lt("data",e[0].dataType,e[0].dims.length,d),S=lt("inputIndices",e[1].dataType,e[1].dims.length),C=Kt("output",e[0].dataType,o.length,d),X=A=>{let ee=n.length,le=`var indicesIndices${A}  = ${S.type.indices}(0);`;for(let me=0;me<ee;me++)le+=`${ee>1?`indicesIndices${A}[${me}]`:`indicesIndices${A}`} = ${o.length>1?`outputIndices${A}[uniforms.axis + ${me}]`:`outputIndices${A}`};`;le+=`
          var idx${A} = ${S.getByIndices(`indicesIndices${A}`)};
          if (idx${A} < 0) {
            idx${A} = idx${A} + uniforms.axisDimLimit;
          }
          var dataIndices${A} : ${k.type.indices};
        `;for(let me=0,qe=0;me<i;me++)me===s?(le+=`${i>1?`dataIndices${A}[${me}]`:`dataIndices${A}`} = u32(idx${A});`,qe+=ee):(le+=`${i>1?`dataIndices${A}[${me}]`:`dataIndices${A}`} = ${o.length>1?`outputIndices${A}[${qe}]`:`outputIndices${A}`};`,qe++);return le},H;if(e[0].dataType===9){let A=(ee,le,me="")=>`
          let outputIndices${le} = ${C.offsetToIndices(`outputOffset + ${le}u`)};
          ${X(le)};
          let offset${le} = ${k.indicesToOffset(`dataIndices${le}`)};
          let index${le} = offset${le} / 4u;
          let component${le} = offset${le} % 4u;
          ${ee}[${le}] = ${me}(${k.getByOffset(`index${le}`)}[component${le}]);
        `;H=`
        let outputOffset = global_idx * ${d};
        var value = vec4<u32>(0);
        ${A("value",0,"u32")}
        ${A("value",1,"u32")}
        ${A("value",2,"u32")}
        ${A("value",3,"u32")}
        ${C.setByOffset("global_idx","value")}
      `}else H=`
      let outputIndices = ${C.offsetToIndices("global_idx")};
      ${X("")};
      let value = ${k.getByIndices("dataIndices")};
      ${C.setByOffset("global_idx","value")};
      `;return`
      ${x.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(k,S,C)}
      ${x.mainStart()}
        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${H}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:y}),getShaderSource:l}},Dd=e=>hr({axis:e.axis}),No=(e,t)=>{let r=e.inputs;Ro(r),e.compute(zd(e.inputs,t))}}),Su,ku,jo,Pu,Ld=L(()=>{rr(),Jt(),kr(),fr(),Su=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let r=Ie.normalizeAxis(t.quantizeAxis,e[0].dims.length),n=t.blockSize,i=e[0],s=e[2],o=e.length===4?e[3]:void 0;if(s.dims.length!==i.dims.length||!i.dims.map((u,d)=>d===r?Math.ceil(u/n)===s.dims[d]:u===s.dims[d]).reduce((u,d)=>u&&d,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==i.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==s.dims.length||!o.dims.map((u,d)=>u===s.dims[d]).reduce((u,d)=>u&&d,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},ku=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,s=Ie.normalizeAxis(t.gatherAxis,i),o=Ie.normalizeAxis(t.quantizeAxis,i),u=r.slice(0);u.splice(s,1,...n);let d=Ie.size(u),h=e[2].dataType,y=e[0].dataType===22,l=[{type:12,data:d},{type:12,data:o},{type:12,data:s},{type:12,data:t.blockSize},...Ot(...e.map((k,S)=>k.dims),u)],x=k=>{let S=lt("data",e[0].dataType,e[0].dims.length),C=lt("inputIndices",e[1].dataType,e[1].dims.length),X=lt("scales",e[2].dataType,e[2].dims.length),H=e.length>3?lt("zeroPoint",e[3].dataType,e[3].dims.length):void 0,A=Kt("output",h,u.length),ee=[S,C,X];H&&ee.push(H);let le=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${k.registerUniforms(le).declareVariables(...ee,A)}
        ${k.mainStart()}
        let output_indices = ${A.offsetToIndices("global_idx")};
        var indices_indices = ${C.type.indices}(0);
        ${n.length>1?`
          for (var i: u32 = 0; i < ${n.length}; i++) {
            let index = ${A.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${C.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${A.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${S.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${A.indicesGet("output_indices","i")};
          ${S.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${C.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${r[s]};
        }
        ${S.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${u.length}; i++) {
          let index = ${A.indicesGet("output_indices",`i + ${n.length} - 1`)};
          ${S.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${S.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${S.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${y?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${X.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${X.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${X.getByIndices("scale_indices")};
        ${H?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${H.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${H.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${y?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Br(h)}(quantized_data - zero_point) * scale;
        ${A.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter((k,S)=>S!==1).map(k=>k.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(k,S)=>"rank")},getRunData:()=>({outputs:[{dims:u,dataType:h}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:l}),getShaderSource:x}},jo=(e,t)=>{let r=e.inputs;Su(r,t),e.compute(ku(e.inputs,t))},Pu=e=>hr({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),Uo,Au,Iu,Vo,Rd=L(()=>{rr(),Jt(),kr(),fr(),Uo=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Au=(e,t)=>{let r=e[0].dims,n=e[0].dataType,i=r.length,s=e[1].dims,o=e[1].dataType,u=Ie.normalizeAxis(t.axis,i),d=r[u],h=s.slice(0),y=Ie.size(h),l=lt("input",n,i),x=lt("indicesInput",o,s.length),k=Kt("output",n,h.length),S=[{type:12,data:y},{type:6,data:d},{type:12,data:u}];return S.push(...Ot(r,s,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:S}),getShaderSource:C=>`
      ${C.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(l,x,k)}
      ${C.mainStart()}
      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${k.offsetToIndices("global_idx")};

      var idx = ${x.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${l.type.indices}(outputIndices);
      ${l.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${l.getByIndices("inputIndices")};

      ${k.setByOffset("global_idx","value")};
  }`}},Iu=e=>hr({axis:e.axis}),Vo=(e,t)=>{let r=e.inputs;Uo(r),e.compute(Au(e.inputs,t))}}),Fu,Ou,Bu,Lr,Oc=L(()=>{rr(),Jt(),fr(),Fu=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Ou=(e,t)=>{let r=e[0].dims.slice(),n=e[1].dims.slice(),[i,s,o]=an.getShapeOfGemmResult(r,t.transA,n,t.transB,e.length===3?e[2].dims:void 0),u=[i,s];if(!u)throw new Error("Can't use gemm on the given tensors");let d=Ie.size(u),h=[{type:12,data:d},{type:12,data:i},{type:12,data:s},{type:12,data:o},{type:1,data:t.alpha},{type:1,data:t.beta}],y=["type","type"];e.length===3&&(h.push(...Ot(e[2].dims)),y.push("rank")),h.push(...Ot(u));let l=x=>{let k="";t.transA&&t.transB?k="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?k="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?k="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(k="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let S=t.alpha===1?"":"value *= uniforms.alpha;",C=lt("a",e[0].dataType,e[0].dims),X=lt("b",e[1].dataType,e[1].dims),H=C.type.value,A=null,ee=[C,X];e.length===3&&(A=lt("c",e[2].dataType,e[2].dims.length),ee.push(A));let le=Kt("output",e[0].dataType,u.length);ee.push(le);let me=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${x.registerUniforms(me).declareVariables(...ee)}

  ${x.mainStart()}
    ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${H}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${k}
    }

    ${S}
    ${A!=null?`let cOffset = ${A.broadcastedIndicesToOffset("vec2(m, n)",le)}; value += ${H}(uniforms.beta) * ${A.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:h}),getShaderSource:l}},Bu=e=>{let t=e.transA,r=e.transB,n=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:n,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Lr=(e,t)=>{Fu(e.inputs),e.compute(Ou(e.inputs,t))}}),wn,Nd,Wo,Go,zu,Wi,Du,qo=L(()=>{rr(),Jt(),kr(),ce(),ss(),fr(),Nn(),wn=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,Nd=(e,t)=>{let r=e[0],n=wn(e,1),i=wn(e,2),s=wn(e,3),o=wn(e,4),u=wn(e,5),d=wn(e,6),h=wn(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let y=r.dims[0],l=r.dims[1],x=r.dims.length===3?r.dims[2]:t.numHeads*r.dims[4],k=l,S=0,C=0,X=Math.floor(x/t.numHeads);if(d&&h&&Ie.size(d.dims)&&Ie.size(h.dims)){if(d.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(d.dims[0]!==y||d.dims[1]!==t.numHeads||d.dims[3]!==X)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(h.dims[0]!==y||h.dims[1]!==t.numHeads||h.dims[3]!==X)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(d.dims[2]!==h.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(h.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');S=d.dims[2],C=d.dims[2]}else if(d&&Ie.size(d.dims)||h&&Ie.size(h.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let H;if(n&&Ie.size(n.dims)>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(n.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');H=2,k=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==X)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');H=5,k=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==X)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');H=0,k=n.dims[2]}}else{if(r.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(r.dims[2]!==t.numHeads||r.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');H=3}if(s&&Ie.size(s.dims)>0){if(s.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(n&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let A=S+k,ee=0;if(o&&Ie.size(o.dims)>0){ee=8;let Fe=o.dims;throw Fe.length===1?Fe[0]===y?ee=1:Fe[0]===3*y+2&&(ee=3):Fe.length===2&&Fe[0]===y&&Fe[1]===A&&(ee=5),ee===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let le=!1,me=x;if(i&&Ie.size(i.dims)>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(k!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');me=i.dims[2]}else{if(k!==i.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');me=i.dims[1]*i.dims[3],le=!0}}let qe=!1;if(o&&Ie.size(o.dims)>0)throw new Error("Key padding mask is not supported");if(u&&Ie.size(u.dims)>0){if(u.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(u.dims[0]!==y||u.dims[1]!==t.numHeads||u.dims[2]!==l||u.dims[3]!==A)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:y,sequenceLength:l,pastSequenceLength:S,kvSequenceLength:k,totalSequenceLength:A,maxSequenceLength:C,inputHiddenSize:0,hiddenSize:x,vHiddenSize:me,headSize:X,vHeadSize:Math.floor(me/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:ee,scale:t.scale,broadcastResPosBias:qe,passPastInKv:le,qkvFormat:H}},Wo=e=>hr({...e}),Go=hr({perm:[0,2,1,3]}),zu=(e,t,r,n,i,s,o)=>{let u=[n,i,s],d=Ie.size(u),h=[{type:12,data:d},{type:12,data:o},{type:12,data:s}],y=l=>{let x=Kt("qkv_with_bias",t.dataType,u),k=lt("qkv",t.dataType,u),S=lt("bias",r.dataType,u),C=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${l.registerUniforms(C).declareVariables(k,S,x)}
  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:h}),getShaderSource:y},{inputs:[t,r],outputs:[-1]})[0]},Wi=(e,t,r,n,i,s,o,u)=>{let d=s;if(o&&Ie.size(o.dims)>0){if(n===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return d=zu(e,s,o,t,n,r*i,u),d=d.reshape([t,n,r,i]),r===1||n===1?d:e.compute(bn(d,Go.perm),{inputs:[d],outputs:[-1]})[0]}else return s.dims.length===3&&(d=s.reshape([t,n,r,i])),r===1||n===1?d:e.compute(bn(d,Go.perm),{inputs:[d],outputs:[-1]})[0]},Du=(e,t)=>{let r=Nd(e.inputs,t),n=e.inputs[0],i=wn(e.inputs,1),s=wn(e.inputs,2),o=wn(e.inputs,3),u=wn(e.inputs,4),d=wn(e.inputs,5),h=wn(e.inputs,6),y=wn(e.inputs,7);if(n.dims.length===5)throw new Error("Packed QKV is not implemented");if(i?.dims.length===5)throw new Error("Packed KV is not implemented");let l=i&&s&&i.dims.length===4&&s.dims.length===4,x=Wi(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,n,o,0);if(l)return bi(e,x,i,s,u,void 0,h,y,d,r);if(!i||!s)throw new Error("key and value must be provided");let k=Wi(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,o,r.hiddenSize),S=Wi(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,s,o,2*r.hiddenSize);bi(e,x,k,S,u,void 0,h,y,d,r)}}),Ho,Lu,Ru,Ko,Nu,jd,ju,Uu=L(()=>{rr(),Jt(),kr(),fr(),Ho=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Lu=(e,t)=>{let r=[],n=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),n=r.length),hr({numOutputs:n,axis:t.axis,splitSizes:r})},Ru=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${qt("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,Ko=e=>{let t=e.length,r=[];for(let n=0;n<t;++n){let i=e[n].setByIndices("indices","input[global_idx]");t===1?r.push(i):n===0?r.push(`if (output_number == ${n}u) { ${i} }`):n===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${n}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},Nu=(e,t)=>{let r=e[0].dims,n=Ie.size(r),i=e[0].dataType,s=Ie.normalizeAxis(t.axis,r.length),o=new Array(t.numOutputs),u=lt("input",i,r.length),d=new Array(t.numOutputs),h=[],y=[],l=0,x=[{type:12,data:n}];for(let S=0;S<t.numOutputs;S++){l+=t.splitSizes[S],d[S]=l;let C=r.slice();C[s]=t.splitSizes[S],y.push(C),o[S]=Kt(`output${S}`,i,C.length),h.push({dims:y[S],dataType:e[0].dataType})}x.push({type:12,data:d},...Ot(r,...y));let k=S=>`
  ${S.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",d.length).declareVariables(u,...o)}
  ${Ru(d.length)}
  ${Ko(o)}

  ${S.mainStart()}
    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${u.offsetToIndices("global_idx")};
    var index = ${u.indicesGet("indices",s)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${qt("uniforms.size_in_split_axis","output_number - 1u",d.length)};
      ${u.indicesSet("indices",s,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:k,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(n/64)},programUniforms:x})}},jd=(e,t)=>{Ho(e.inputs);let r=e.inputs.length===1?t:Lu(e.inputs,t);e.compute(Nu(e.inputs,r),{inputs:[0]})},ju=e=>{let t=e.axis,r=e.splitSizes,n=e.numOutputs<0?r.length:e.numOutputs;if(n!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return hr({axis:t,numOutputs:n,splitSizes:r})}}),Vu,Wu,Xo,Gu,Ud=L(()=>{kr(),ss(),qo(),Uu(),Nn(),Vu=(e,t)=>{if(t.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let r=e[0],n=e[1],i=e[2],s=e[3],o=e[4];if(t.localWindowSize!==-1)throw new Error("Local attention is not supported");if(t.softcap!==0)throw new Error("Softcap is not supported");if(t.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(t.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let u=!1,d=r.dims[0],h=r.dims[1],y=r.dims.length===3?u?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],l=h,x=0,k=!n||n.dims.length===0,S=Math.floor(k?y/(t.numHeads+2*t.kvNumHeads):y/t.numHeads);k&&(y=S*t.numHeads);let C=s&&s.dims.length!==0,X=o&&o.dims.length!==0;if(C&&s.dims.length===4&&s.dims[0]===d&&s.dims[1]!==t.kvNumHeads&&s.dims[2]===t.kvNumHeads&&s.dims[3]===S)throw new Error("BSNH pastKey/pastValue is not supported");if(C&&X){if(s.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(o.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');x=s.dims[2]}else if(C||X)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let H=1;if(n&&n.dims.length>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(r.dims[2]%n.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');l=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==S)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');l=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==S)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');l=n.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');H=3}let A=0,ee=!1,le=t.kvNumHeads?S*t.kvNumHeads:y;if(i&&i.dims.length>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(l!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');le=i.dims[2]}else{if(l!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');le=i.dims[1]*i.dims[3],ee=!0}}let me=e.length>4?e[5]:void 0;if(me&&me.dims.length!==1&&me.dims[0]!==d)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:d,sequenceLength:h,pastSequenceLength:x,kvSequenceLength:l,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:y,vHiddenSize:le,headSize:S,vHeadSize:Math.floor(le/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:A,scale:t.scale,broadcastResPosBias:!1,passPastInKv:ee,qkvFormat:H}},Wu=hr({perm:[0,2,1,3]}),Xo=(e,t,r)=>{let n=t,i=r.kvNumHeads;return t.dims.length===3&&r.kvSequenceLength!==0&&(n=t.reshape([r.batchSize,r.kvSequenceLength,i,r.headSize]),n=e.compute(bn(n,Wu.perm),{inputs:[n],outputs:[-1]})[0]),n},Gu=(e,t)=>{let r=Vu(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let n=e.inputs[0],i=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,s=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,o=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,u=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,d=e.inputs.length>4?e.inputs[5]:void 0,h=e.inputs.length>5?e.inputs[6]:void 0,y=r.kvNumHeads?r.kvNumHeads:r.numHeads,l=hr({axis:2,numOutputs:3,splitSizes:[r.numHeads*r.headSize,y*r.headSize,y*r.headSize]}),[x,k,S]=!i&&!s?e.compute(Nu([n],l),{inputs:[n],outputs:[-1,-1,-1]}):[n,i,s],C=Wi(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,x,void 0,0);bi(e,C,Xo(e,k,r),Xo(e,S,r),void 0,void 0,o,u,void 0,r,d,h)}}),Qo,qu,Hu,Ku,Vd=L(()=>{rr(),Jt(),Nn(),fr(),Qo=(e,t,r,n,i,s,o,u)=>{let d=br(s),h=d===1?"f32":`vec${d}f`,y=d===1?"vec2f":`mat2x${d}f`,l=i*o,x=[i,o,s/d],k=[i,o,2],S=["rank","type","type"],C=[];C.push(...Ot(x,k));let X=H=>{let A=lt("x",t.dataType,3,d),ee=lt("scale",r.dataType,r.dims),le=lt("bias",n.dataType,n.dims),me=Kt("output",1,3,2),qe=[A,ee,le,me],Fe=64;return`
  var<workgroup> workgroup_shared : array<${y}, ${Fe}>;
  const workgroup_size = ${Fe}u;
  ${H.declareVariables(...qe)}
  ${H.mainStart(Fe)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${h}(0);
    var squared_sum = ${h}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${h}(${A.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${y}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Rn("workgroup_shared[0][0]",d)} / f32(hight * ${d});
      let squared_sum_final = ${Rn("workgroup_shared[0][1]",d)} / f32(hight * ${d});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${u}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${d};${u}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:k,dataType:1}],dispatchGroup:{x:l},programUniforms:C}),getShaderSource:X},{inputs:[t,r,n],outputs:[-1]})[0]},qu=(e,t,r)=>{let n=t[0].dims,i=n,s=2,o=n[0],u=n[1],d=Ie.sizeFromDimension(n,s),h=br(d),y=Ie.size(i)/h,l=Qo(e,t[0],t[1],t[2],o,d,u,r.epsilon),x=[o,u,d/h],k=[o,u],S=["type","none"],C=X=>{let H=lt("x",t[0].dataType,x.length,h),A=lt("scale_shift",1,k.length,2),ee=Kt("output",t[0].dataType,x.length,h),le=[H,A,ee];return`
  ${X.registerUniform("output_size","u32").declareVariables(...le)}
  ${X.mainStart()}
  ${X.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${ee.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${A.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${H.getByOffset("global_idx")} * ${ee.type.value}(scale_shift.x) + ${ee.type.value}(scale_shift.y);
      ${ee.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${h}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:[{type:12,data:y},...Ot(x,k,x)]}),getShaderSource:C},{inputs:[t[0],l]})},Hu=(e,t,r)=>{let n=t[0].dims,i=n,s=n[0],o=n[n.length-1],u=Ie.sizeFromDimension(n,1)/o,d=br(o),h=Ie.size(i)/d,y=[{type:12,data:u},{type:12,data:Math.floor(o/d)}],l=["type","type"],x=[0,n.length-1];for(let X=0;X<n.length-2;X++)x.push(X+1);let k=e.compute(bn(e.inputs[0],x),{inputs:[e.inputs[0]],outputs:[-1]})[0],S=Qo(e,k,t[1],t[2],s,u,o,r.epsilon),C=X=>{let H=gr(t[0].dataType),A=d===1?"vec2f":`mat${d}x2f`,ee=qe=>{let Fe=qe===0?"x":"y",bt=d===1?"f32":`vec${d}f`;switch(d){case 1:return`${H}(${bt}(scale.${Fe}))`;case 2:return`vec2<${H}>(${bt}(scale[0].${Fe}, scale[1].${Fe}))`;case 4:return`vec4<${H}>(${bt}(scale[0].${Fe}, scale[1].${Fe}, scale[2].${Fe}, scale[3].${Fe}))`;default:throw new Error(`Not supported compoents ${d}`)}},le=lt("input",t[0].dataType,t[0].dims,d),me=Kt("output",t[0].dataType,i,d);return`
  @group(0) @binding(0) var<storage, read> input : array<${le.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${A}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${me.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${X.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${ee(0)}, ${ee(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${d}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:y}),getShaderSource:C},{inputs:[t[0],S]})},Ku=(e,t)=>{t.format==="NHWC"?Hu(e,e.inputs,t):qu(e,e.inputs,t)}}),Xu,Qu,Yu,Wd=L(()=>{rr(),Jt(),fr(),Xu=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Qu=(e,t,r)=>{let n=t.simplified,i=e[0].dims,s=e[1],o=!n&&e[2],u=i,d=Ie.normalizeAxis(t.axis,i.length),h=Ie.sizeToDimension(i,d),y=Ie.sizeFromDimension(i,d),l=Ie.size(s.dims),x=o?Ie.size(o.dims):0;if(l!==y||o&&x!==y)throw new Error(`Size of X.shape()[axis:] == ${y}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${l} and bias size of ${x}`);let k=[];for(let me=0;me<i.length;++me)me<d?k.push(i[me]):k.push(1);let S=br(y),C=["type","type"],X=[{type:12,data:h},{type:1,data:y},{type:12,data:Math.floor(y/S)},{type:1,data:t.epsilon}];o&&C.push("type");let H=r>1,A=r>2,ee=me=>{let qe=gr(e[0].dataType),Fe=[lt("x",e[0].dataType,e[0].dims,S),lt("scale",s.dataType,s.dims,S)];o&&Fe.push(lt("bias",o.dataType,o.dims,S)),Fe.push(Kt("output",e[0].dataType,u,S)),H&&Fe.push(Kt("mean_data_output",1,k)),A&&Fe.push(Kt("inv_std_output",1,k));let bt=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${me.registerUniforms(bt).declareVariables(...Fe)}
  ${me.mainStart()}
    ${me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${ni("f32",S)};
    var mean_square_vector = ${ni("f32",S)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Qn(qe,S,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Rn("mean_vector",S)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Rn("mean_square_vector",S)} / uniforms.norm_size ${n?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Qn(qe,S,"x[j + offset]")};
      let f32scale = ${Qn(qe,S,"scale[j]")};
      output[j + offset] = ${Fe[0].type.value}((f32input ${n?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${Qn(qe,S,"bias[j]")}`:""}
      );
    }

    ${H?"mean_data_output[global_idx] = mean":""};
    ${A?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},le=[{dims:u,dataType:e[0].dataType}];return H&&le.push({dims:k,dataType:1}),A&&le.push({dims:k,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${S};${r};${n}`,inputDependencies:C},getRunData:()=>({outputs:le,dispatchGroup:{x:Math.ceil(h/64)},programUniforms:X}),getShaderSource:ee}},Yu=(e,t)=>{Xu(e.inputs),e.compute(Qu(e.inputs,t,e.outputCount))}}),Zu,Gd,qd,Hd,Kd,Bc=L(()=>{rr(),Jt(),kr(),fr(),Zu=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],n=r.dims.length;if(r.dims[n-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),s=t.blockSize/8*t.bits,o=e[1];if(!Ie.areEqual(o.dims,[t.n,i,s]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let u=e[2].dims;if(Ie.size(u)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let d=e[3].dims,h=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(Ie.size(d)!==h)throw new Error("zeroPoints input size error.")}},Gd=(e,t)=>{let r=e[0].dims,n=r.length,i=r[n-2],s=t.k,o=t.n,u=r.slice(0,n-2),d=Ie.size(u),h=e[1].dims[2]/4,y=e[0].dataType,l=br(t.k),x=br(h),k=br(o),S=u.concat([i,o]),C=i>1&&o/k%2===0?2:1,X=Ie.size(S)/k/C,H=64,A=[],ee=[d,i,s/l],le=Ie.convertShape(e[1].dims).slice();le.splice(-1,1,h/x),A.push(...Ot(ee)),A.push(...Ot(le)),A.push(...Ot(e[2].dims)),e.length===4&&A.push(...Ot(Ie.convertShape(e[3].dims)));let me=[d,i,o/k];A.push(...Ot(me));let qe=Fe=>{let bt=ee.length,Vt=lt("a",e[0].dataType,bt,l),jt=lt("b",12,le.length,x),lr=lt("scales",e[2].dataType,e[2].dims.length),Zt=[Vt,jt,lr],ur=e.length===4?lt("zero_points",12,e[3].dims.length):void 0;ur&&Zt.push(ur);let Sr=me.length,or=Kt("output",e[0].dataType,Sr,k),Qt=gr(e[0].dataType),Tr=(()=>{switch(l){case 1:return`array<${Qt}, 8>`;case 2:return`mat4x2<${Qt}>`;case 4:return`mat2x4<${Qt}>`;default:throw new Error(`${l}-component is not supported.`)}})(),xr=()=>{let rt=`
          // reuse a data
            var input_offset = ${Vt.indicesToOffset(`${Vt.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Tr};
            for (var j: u32 = 0; j < ${8/l}; j++) {
              a_data[j] = ${Vt.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let St=0;St<k*C;St++)rt+=`
            b_value = ${x===1?`b${St}_data`:`b${St}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Tr}(${Array.from({length:4},(mr,Wr)=>`${Qt}(b_value_lower[${Wr}]), ${Qt}(b_value_upper[${Wr}])`).join(", ")});
            b_dequantized_values = ${l===1?`${Tr}(${Array.from({length:8},(mr,Wr)=>`(b_quantized_values[${Wr}] - ${ur?`zero_point${St}`:"zero_point"}) * scale${St}`).join(", ")});`:`(b_quantized_values - ${Tr}(${Array(8).fill(`${ur?`zero_point${St}`:"zero_point"}`).join(",")})) * scale${St};`};
            workgroup_shared[local_id.x * ${C} + ${Math.floor(St/k)}]${k>1?`[${St%k}]`:""} += ${Array.from({length:8/l},(mr,Wr)=>`${l===1?`a_data[${Wr}] * b_dequantized_values[${Wr}]`:`dot(a_data[${Wr}], b_dequantized_values[${Wr}])`}`).join(" + ")};
          `;return rt},Xt=()=>{let rt=`
            var col_index = col * ${k};
            ${ur?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Qt}(8);`}
            `;for(let St=0;St<k*C;St++)rt+=`
            let scale${St} = ${lr.getByOffset("col_index * nBlocksPerCol + block")};
            ${ur?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${ur.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${St} = ${Qt}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return rt},yr=()=>{let rt=`col_index = col * ${k};`;for(let St=0;St<k*C;St++)rt+=`
            let b${St}_data = ${jt.getByIndices(`${jt.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return rt+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Tr};
            var b_dequantized_values: ${Tr};`,rt};return`
        var<workgroup> workgroup_shared: array<${or.type.value}, ${C*H}>;
        ${Fe.declareVariables(...Zt,or)}
        ${Fe.mainStart([H,1,1])}
          let output_indices = ${or.offsetToIndices(`(global_idx / ${H}) * ${C}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${H}) {
            //process one block
            var word_offset: u32 = block * ${t.blockSize/l};
            ${Xt()}
            for (var word: u32 = 0; word < ${h}; word += ${x}) {
              ${yr()}
              for (var i: u32 = 0; i < ${x}; i++) {
                ${xr()}
                word_offset += ${8/l};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${C}) {
            var output_value: ${or.type.value} = ${or.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${H}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${C};
            }
            ${or.setByIndices(`${or.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${l};${x};${k};${C};${H}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:S,dataType:y}],dispatchGroup:{x:X},programUniforms:A}),getShaderSource:qe}},qd=(e,t)=>{let r=e[0].dims,n=r.length,i=r[n-2],s=t.k,o=t.n,u=r.slice(0,n-2),d=Ie.size(u),h=e[1].dims[2]/4,y=e[0].dataType,l=br(t.k),x=br(h),k=u.concat([i,o]),S=128,C=o%8===0?8:o%4===0?4:1,X=S/C,H=X*x*8,A=H/l,ee=H/t.blockSize,le=Ie.size(k)/C,me=[],qe=[d,i,s/l],Fe=Ie.convertShape(e[1].dims).slice();Fe.splice(-1,1,h/x),me.push(...Ot(qe)),me.push(...Ot(Fe)),me.push(...Ot(e[2].dims)),e.length===4&&me.push(...Ot(Ie.convertShape(e[3].dims)));let bt=[d,i,o];me.push(...Ot(bt));let Vt=jt=>{let lr=qe.length,Zt=lt("a",e[0].dataType,lr,l),ur=lt("b",12,Fe.length,x),Sr=lt("scales",e[2].dataType,e[2].dims.length),or=[Zt,ur,Sr],Qt=e.length===4?lt("zero_points",12,e[3].dims.length):void 0;Qt&&or.push(Qt);let Tr=bt.length,xr=Kt("output",e[0].dataType,Tr),Xt=gr(e[0].dataType),yr=()=>{switch(l){case 1:return`
          let a_data0 = vec4<${Xt}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${Xt}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${Xt}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${Xt}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${l}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${Zt.type.value}, ${A}>;
        var<workgroup> inter_results: array<array<${xr.type.value}, ${X}>, ${C}>;
        ${jt.declareVariables(...or,xr)}
        ${jt.mainStart([X,C,1])}
          let output_indices = ${xr.offsetToIndices(`workgroup_index * ${C}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${ee} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${A};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${A}; a_offset += ${S})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${Zt.getByIndices(`${Zt.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${Zt.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${ee} + local_id.x;
            ${Qt?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${Qt.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${Xt}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Xt}(8);`}
            let scale = ${Sr.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${ur.getByIndices(`${ur.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${t.blockSize/l};
            for (var i: u32 = 0; i < ${x}; i++) {
              ${yr()}
              let b_value = ${x===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${Xt}>(${Array.from({length:4},(rt,St)=>`${Xt}(b_value_lower[${St}]), ${Xt}(b_value_upper[${St}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${Xt}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(rt,St)=>`${`dot(a_data${St}, b_dequantized_values[${St}])`}`).join(" + ")};
              word_offset += ${8/l};
            }
            workgroupBarrier();
          }

          if (local_idx < ${C}) {
            var output_value: ${xr.type.value} = ${xr.type.value}(0);
            for (var b = 0u; b < ${X}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${xr.setByIndices(`${xr.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${l};${x};${X};${C}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:k,dataType:y}],dispatchGroup:{x:le},programUniforms:me}),getShaderSource:Vt}},Hd=(e,t)=>{Zu(e.inputs,t),t.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(qd(e.inputs,t)):e.compute(Gd(e.inputs,t))},Kd=e=>hr(e)}),Xd,Qd,Yd,Zd,Jd,ec,tc,rc,nc,zc=L(()=>{rr(),Jt(),fr(),Xd=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Qd=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
            k = i32(${e.indicesGet("indices",i)}) - ${qt("uniforms.pads",i,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${qt("uniforms.x_shape",i,t)})) {
              break;
            }
            offset += k * i32(${qt("uniforms.x_strides",i,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${n}
            value = x[offset];
          }
      `},Yd=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${qt("uniforms.pads",i,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${qt("uniforms.x_shape",i,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${qt("uniforms.x_shape",i,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${qt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Zd=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${qt("uniforms.pads",i,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${qt("uniforms.x_shape",i,t)})) {
                  k = i32(${qt("uniforms.x_shape",i,t)}) - 1;
                }
                offset += k * i32(${qt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Jd=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${qt("uniforms.pads",i,r)};
                if (k < 0)  {
                  k += i32(${qt("uniforms.x_shape",i,t)}]);
                }
                if (k >= i32(${qt("uniforms.x_shape",i,t)})) {
                  k -= i32(${qt("uniforms.x_shape",i,t)});
                }
                offset += k * i32(${qt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},ec=(e,t,r)=>{switch(r.mode){case 0:return Qd(e,t,r.pads.length);case 1:return Yd(e,t,r.pads.length);case 2:return Zd(e,t,r.pads.length);case 3:return Jd(e,t,r.pads.length);default:throw new Error("Invalid mode")}},tc=(e,t)=>{let r=Ie.padShape(e[0].dims.slice(),t.pads),n=e[0].dims,i=Ie.size(r),s=[{type:12,data:i},{type:6,data:t.pads}],o=e.length>=3&&e[2].data;t.mode===0&&s.push({type:o?e[2].dataType:1,data:t.value}),s.push(...Ot(e[0].dims,r));let u=["rank"],d=h=>{let y=Kt("output",e[0].dataType,r.length),l=lt("x",e[0].dataType,n.length),x=l.type.value,k=ec(y,n.length,t),S=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&S.push({name:"constant_value",type:o?x:"f32"}),`
            ${h.registerUniforms(S).declareVariables(l,y)}
            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${y.offsetToIndices("global_idx")};

            var value = ${x}(0);
            ${k}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}${o}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Ie.size(r)/64)},programUniforms:s}),getShaderSource:d}},rc=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),n=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,i=e[0].dims.length,s=new Int32Array(2*i).fill(0);if(e.length>=4){let u=e[3].getBigInt64Array();for(let d=0;d<u.length;d++)s[Number(u[d])]=Number(r[d]),s[Number(u[d])+i]=Number(r[d+u.length])}else r.forEach((u,d)=>s[Number(d)]=Number(u));let o=[];return s.forEach(u=>o.push(u)),{mode:t.mode,value:n,pads:o}}else return t},nc=(e,t)=>{Xd(e.inputs);let r=rc(e.inputs,t);e.compute(tc(e.inputs,r),{inputs:[0]})}}),_s,Ju,ed,td,rd,ic,sc,nd,id,oc,ac,sd,lc,uc,od,cr,ad,rn,ln,_n=L(()=>{c(),rr(),Jt(),fr(),_s=e=>{if(P.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Ju=(e,t,r)=>{let n=t.format==="NHWC",i=e.dims.slice();n&&i.splice(1,0,i.pop());let s=Object.hasOwnProperty.call(t,"dilations"),o=t.kernelShape.slice(),u=t.strides.slice(),d=s?t.dilations.slice():[],h=t.pads.slice();Zr.adjustPoolAttributes(r,i,o,u,d,h);let y=Zr.computePoolOutputShape(r,i,u,d,o,h,t.autoPad),l=Object.assign({},t);s?Object.assign(l,{kernelShape:o,strides:u,pads:h,dilations:d,cacheKey:t.cacheKey}):Object.assign(l,{kernelShape:o,strides:u,pads:h,cacheKey:t.cacheKey});let x=y.slice();return x.push(x.splice(1,1)[0]),[l,n?x:y]},ed=(e,t)=>{let r=t.format==="NHWC",n=Ie.size(e),i=Ie.size(t.kernelShape),s=[{type:12,data:n},{type:12,data:i}],o=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let u=t.kernelShape[t.kernelShape.length-1],d=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],y=t.pads[t.pads.length-1],l=!!(h+y);s.push({type:12,data:u},{type:12,data:d},{type:12,data:h},{type:12,data:y}),o.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let x=!1;if(t.kernelShape.length===2){let k=t.kernelShape[t.kernelShape.length-2],S=t.strides[t.strides.length-2],C=t.pads[t.pads.length/2-2],X=t.pads[t.pads.length-2];x=!!(C+X),s.push({type:12,data:k},{type:12,data:S},{type:12,data:C},{type:12,data:X}),o.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,o,!0,l,x]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let u=Ie.computeStrides(t.kernelShape);s.push({type:12,data:u},{type:12,data:t.pads},{type:12,data:t.strides}),o.push({name:"kernelStrides",type:"u32",length:u.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let d=t.pads.reduce((h,y)=>h+y);return[s,o,!!d,!1,!1]}},td=(e,t,r,n,i,s,o,u,d,h,y,l)=>{let x=i.format==="NHWC",k=t.type.value,S=Kt("output",t.type.tensor,n);if(i.kernelShape.length<=2){let C="",X="",H="",A=r-(x?2:1);if(y?C=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${A}] = indices[${A}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${A}] < 0 || xIndices[${A}]
                      >= uniforms.x_shape[${A}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`:C=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${A}] = indices[${A}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`,i.kernelShape.length===2){let ee=r-(x?3:2);l?X=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${ee}] = indices[${ee}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${ee}] < 0 || xIndices[${ee}] >= uniforms.x_shape[${ee}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:X=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${ee}] = indices[${ee}] * uniforms.sh - uniforms.phStart + j;
                `,H=`
              }
            `}return`
            ${e.registerUniforms(d).declareVariables(t,S)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${S.offsetToIndices("global_idx")};
              var xIndices = ${S.offsetToIndices("global_idx")};

              var value = ${k}(${u});
              var pad = 0;
              ${X}
              ${C}
              ${H}
              ${o}

              output[global_idx] = value;
            }`}else{if(x)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let C=i.kernelShape.length,X=i.pads.length,H="";return h?H=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${s}
              }`:H=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${s}
            `,`
            ${e.registerUniforms(d).declareVariables(t,S)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${S.offsetToIndices("global_idx")};
              var xIndices = ${S.offsetToIndices("global_idx")};

              var offsets: array<u32, ${C}>;

              var value = ${k}(${u});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${C-1}u; j++) {
                  offsets[j] = offset / ${qt("uniforms.kernelStrides","j",C)};
                  offset -= offsets[j] * ${qt("uniforms.kernelStrides","j",C)};
                }
                offsets[${C-1}] = offset;

                isPad = false;
                for (var j = ${r-C}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${qt("uniforms.strides",`j - ${r-C}u`,C)}
                    + offsets[j - ${r-C}u] - ${qt("uniforms.pads","j - 2u",X)};
                  ${H}
              }
              ${o}

              output[global_idx] = value;
            }`}},rd=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,ic=e=>`${rd(e)};${e.countIncludePad}`,sc=e=>`${rd(e)};${e.storageOrder};${e.dilations}`,nd=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),id=(e,t,r,n)=>{let[i,s]=Ju(t,n,r),o=lt("x",t.dataType,t.dims.length),u=o.type.value,d="value += x_val;",h="";i.countIncludePad?h+=`value /= ${u}(uniforms.kernelSize);`:h+=`value /= ${u}(i32(uniforms.kernelSize) - pad);`;let[y,l,x,k,S]=ed(s,i);y.push(...Ot(t.dims,s));let C=["rank"];return{name:e,shaderCache:{hint:`${n.cacheKey};${x};${k};${S}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Ie.size(s)/64)},programUniforms:y}),getShaderSource:X=>td(X,o,t.dims.length,s.length,i,d,h,0,l,x,k,S)}},oc=e=>{let t=e.count_include_pad!==0,r=nd(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let n={countIncludePad:t,...r,cacheKey:""};return{...n,cacheKey:ic(n)}},ac=(e,t)=>{_s(e.inputs),e.compute(id("AveragePool",e.inputs[0],!1,t))},sd={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},lc=e=>{let t=e.format;return{format:t,...sd,cacheKey:t}},uc=(e,t)=>{_s(e.inputs),e.compute(id("GlobalAveragePool",e.inputs[0],!0,t))},od=(e,t,r,n)=>{let[i,s]=Ju(t,n,r),o=`
      value = max(x_val, value);
    `,u="",d=lt("x",t.dataType,t.dims.length),h=["rank"],[y,l,x,k,S]=ed(s,i);return y.push(...Ot(t.dims,s)),{name:e,shaderCache:{hint:`${n.cacheKey};${x};${k};${S}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Ie.size(s)/64)},programUniforms:y}),getShaderSource:C=>td(C,d,t.dims.length,s.length,i,o,u,t.dataType===10?-65504:-1e5,l,x,k,S)}},cr=(e,t)=>{_s(e.inputs),e.compute(od("MaxPool",e.inputs[0],!1,t))},ad=e=>{let t=e.storage_order,r=e.dilations,n=nd(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...n,cacheKey:""};return{...i,cacheKey:sc(i)}},rn=e=>{let t=e.format;return{format:t,...sd,cacheKey:t}},ln=(e,t)=>{_s(e.inputs),e.compute(od("GlobalMaxPool",e.inputs[0],!0,t))}}),si,dc,ld,ud,g=L(()=>{rr(),Jt(),kr(),fr(),si=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((r,n)=>r===e[2].dims[n]).reduce((r,n)=>r&&n,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((i,s)=>s===t.axis||i===e[0].dims[s]).reduce((i,s)=>i&&s,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let r=e[0].dims[t.axis],n=e[1].dims[t.axis];if(t.blockSize<Math.ceil(r/n)||t.blockSize>Math.ceil(r/(n-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},dc=(e,t)=>{let r=Ie.normalizeAxis(t.axis,e[0].dims.length),n=e[0].dataType,i=n===3,s=e[0].dims,o=e[1].dataType,u=Ie.size(s),d=n===3||n===2,h=d?[Math.ceil(Ie.size(e[0].dims)/4)]:e[0].dims,y=e[1].dims,l=e.length>2?e[2]:void 0,x=l?d?[Math.ceil(Ie.size(l.dims)/4)]:l.dims:void 0,k=y.length===0||y.length===1&&y[0]===1,S=k===!1&&y.length===1,C=br(u),X=k&&(!d||C===4),H=X?C:1,A=X&&!d?C:1,ee=lt("input",d?12:n,h.length,A),le=lt("scale",o,y.length),me=l?lt("zero_point",d?12:n,x.length):void 0,qe=Kt("output",o,s.length,H),Fe=[ee,le];me&&Fe.push(me);let bt=[h,y];l&&bt.push(x);let Vt=[{type:12,data:u/H},{type:12,data:r},{type:12,data:t.blockSize},...Ot(...bt,s)],jt=lr=>{let Zt=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${lr.registerUniforms(Zt).declareVariables(...Fe,qe)}
      ${lr.mainStart()}
          ${lr.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${qe.offsetToIndices("global_idx")};

          // Set input x
          ${d?`
            let input = ${ee.getByOffset("global_idx / 4")};
            let x_vec = ${i?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${H===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${ee.getByOffset("global_idx")};`};

          // Set scale input
          ${k?`let scale_value= ${le.getByOffset("0")}`:S?`
            let scale_index = ${qe.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${le.getByOffset("scale_index")};`:`
            var scale_indices: ${le.type.indices} = output_indices;
            let index = ${le.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${le.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${le.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${me?k?d?`
                let zero_point_input = ${me.getByOffset("0")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${me.getByOffset("0")}`:S?d?`
                let zero_point_index = ${qe.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${me.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${qe.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${me.getByOffset("zero_point_index")};`:d?`
                let zero_point_offset = ${le.indicesToOffset("scale_indices")};
                let zero_point_input = ${me.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${me.getByIndices("scale_indices")};`:`let zero_point_value = ${d?i?"i32":"u32":ee.type.value}(0);`};
      // Compute and write output
      ${qe.setByOffset("global_idx",`${qe.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:me?["rank","rank","rank"]:["rank","rank"]},getShaderSource:jt,getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(u/H/64),y:1,z:1},programUniforms:Vt})}},ld=(e,t)=>{si(e.inputs,t),e.compute(dc(e.inputs,t))},ud=e=>hr({axis:e.axis,blockSize:e.blockSize})}),w,te,Ne,Xe=L(()=>{c(),rr(),fr(),w=(e,t,r)=>{let n=e===t,i=e<t&&r<0,s=e>t&&r>0;if(n||i||s)throw new Error("Range these inputs' contents are invalid.")},te=(e,t,r,n)=>{let i=Math.abs(Math.ceil((t-e)/r)),s=[i],o=i,u=[{type:12,data:o},{type:n,data:e},{type:n,data:r},...Ot(s)],d=h=>{let y=Kt("output",n,s.length),l=y.type.value,x=[{name:"outputSize",type:"u32"},{name:"start",type:l},{name:"delta",type:l}];return`
        ${h.registerUniforms(x).declareVariables(y)}
        ${h.mainStart()}
        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${l}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${n}`},getShaderSource:d,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:u})}},Ne=e=>{let t=0,r=0,n=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],n=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],n=e.inputs[2].getFloat32Array()[0]),P.webgpu.validateInputContent&&w(t,r,n),e.compute(te(t,r,n,e.inputs[0].dataType),{inputs:[]})}}),ut,Bt,It,Yt,wr,Ur,zr,$r,tr,tn,Mr,vr,Vr,un,Gr,nn,hn,Jr,sn,Yo=L(()=>{rr(),Jt(),kr(),fr(),ut=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Bt=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let n=new Array(r).fill(1);return t.forEach((i,s)=>n[i]=e[s]),n},It=(e,t,r,n,i,s)=>{let[o,u,d]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach(y=>s.push(y));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(u>0&&e.length>u&&e[u].dims.length===1&&e[u].dims[0]>0){if(e[u].getFloat32Array().forEach(y=>n.push(y)),n.length!==0&&n.length!==h&&r>=18&&n.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");ut(n,t),t.axes.length>0&&Bt(n,t.axes,h).forEach((y,l)=>n[l]=y)}if(d>0&&e.length>d&&e[d].dims.length===1&&e[d].dims[0]>0&&(e[d].getBigInt64Array().forEach(y=>i.push(Number(y))),i.length!==0&&i.length!==h&&r>=18&&i.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(n.length!==0&&n.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==0&&i.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof n<"u"&&typeof i<"u"&&n.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Yt=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",wr=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Ur=(e,t,r)=>{let n=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?n:e.slice();return t.length>0?(t.forEach((s,o)=>{n[s]=i[o],n[o+r]=i[t.length+o]}),n):i},zr=(e,t,r,n)=>{let i=[];if(r.length>0)if(n.length>0){if(e.forEach(s=>i.push(s)),Math.max(...n)>e.length)throw new Error("axes is out of bound");n.forEach((s,o)=>i[s]=r[o])}else r.forEach(s=>i.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((s,o)=>Math.round(s*t[o]))}return i},$r=(e,t,r)=>{let n=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(s=>t[s]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(s=>t[s]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(s=>t[s]=n),r.axes.forEach(s=>i[s]=Math.round(e[s]*t[s]))):(t.fill(n,0,t.length),i.forEach((s,o)=>i[o]=Math.round(s*t[o]))),i},tr=(e,t,r,n,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${qt("uniforms.scales","i",n)};
        var roi_low = ${qt("uniforms.roi","i",i)};
        var roi_hi = ${qt("uniforms.roi",`i + ${t.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${qt("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${qt("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,tn=(e,t,r,n,i,s,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${qt("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${qt("uniforms.roi","i",s)};
          var roi_hi = ${qt("uniforms.roi",`i + ${r.length}`,s)};
          var input_shape_i = ${qt("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${qt("uniforms.output_shape","i",n.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,Mr=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${qt("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,vr=(e,t,r,n)=>e.rank>n?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",Vr=(e,t,r,n,i)=>{let[s,o,u,d]=r.length===2?[-1,0,1,-1]:[0,2,3,1],h=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${h} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(row, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(col, ${r[u]} - 1))`)};
      ${vr(e,d,s,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${h} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${h} = originalIndices[${o}];
      var col:${h} = originalIndices[${u}];
      ${n?`if (row < 0 || row > (${r[o]} - 1) || col < 0 || col > (${r[u]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${r[o]} - 1));
      col = max(0, min(col, ${r[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${h} = getInputValue(batch, channel, row1, col1);
      var x12: ${h} = getInputValue(batch, channel, row1, col2);
      var x21: ${h} = getInputValue(batch, channel, row2, col1);
      var x22: ${h} = getInputValue(batch, channel, row2, col2);
      var dx1: ${h} = abs(row - ${h}(row1));
      var dx2: ${h} = abs(${h}(row2) - row);
      var dy1: ${h} = abs(col - ${h}(col1));
      var dy2: ${h} = abs(${h}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},un=(e,t,r,n,i,s,o,u,d,h)=>{let y=r.length===2,[l,x]=y?[0,1]:[2,3],k=e.type.value,S=C=>{let X=C===l?"row":"col";return`
      fn ${X}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${k} {
        var output_index = ${t.indicesGet("output_indices",C)};
        var originalIdx: ${k} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[C]},
        ${n[C]}, ${r[C]}, ${s[C]}, ${s[C]} + ${r.length});
        var fractOriginalIdx: ${k} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${u} && (originalIdx < 0 || originalIdx > (${r[C]} - 1))) {
          return ${d};
        }
        var data: array<${k}, 4> = array<${k}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${X}: ${k} = originalIdx + ${k}(i);
          if (${X} < 0 || ${X} >= ${r[C]}) {
            ${h?`coefs[i + 1] = 0.0;
                        continue;`:u?`return ${d};`:`${X} = max(0, min(${X}, ${r[C]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",C,`u32(${X})`)};
          data[i + 1] = ${C===l?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${S(l)};
    ${S(x)};
  fn getCubicInterpolationCoefs(s: ${k}) -> array<${k}, 4> {
    var absS = abs(s);
    var coeffs: array<${k}, 4> = array<${k}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${k} = 1.0 - absS;
    var twoMinusAbsS: ${k} = 2.0 - absS;
    var onePlusAbsS: ${k} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${k}, 4>, coefs: array<${k}, 4>) -> ${k} {
    var coefsSum: ${k} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${k} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Gr=(e,t,r,n,i)=>{let[s,o,u,d,h]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(depth, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(height, ${r[u]} - 1))`)};
      ${e.indicesSet("input_indices",d,`max(0, min(width, ${r[d]} - 1))`)};
      ${vr(e,h,s,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${y} = originalIndices[${o}];
      var height:${y} = originalIndices[${u}];
      var width:${y} = originalIndices[${d}];
      ${n?`if (depth < 0 || depth > (${r[o]} - 1) || height < 0 || height > (${r[u]} - 1) || width < 0 || (width > ${r[d]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${r[o]} - 1));
      height = max(0, min(height, ${r[u]} - 1));
      width = max(0, min(width, ${r[d]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${h}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${y} = abs(depth - ${y}(depth1));
      var dx2: ${y} = abs(${y}(depth2) - depth);
      var dy1: ${y} = abs(height - ${y}(height1));
      var dy2: ${y} = abs(${y}(height2) - height);
      var dz1: ${y} = abs(width - ${y}(width1));
      var dz2: ${y} = abs(${y}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},nn=(e,t,r,n,i,s)=>{let o=e.dims,u=Ur(s,t.axes,o.length),d=zr(o,n,i,t.axes),h=n.slice();n.length===0&&(h=o.map((A,ee)=>A===0?1:d[ee]/A),t.keepAspectRatioPolicy!=="stretch"&&(d=$r(o,h,t)));let y=Kt("output",e.dataType,d.length),l=lt("input",e.dataType,o.length),x=Ie.size(d),k=o.length===d.length&&o.every((A,ee)=>A===d[ee]),S=t.coordinateTransformMode==="tf_crop_and_resize",C=t.extrapolationValue,X=l.type.value,H=A=>`
      ${k?"":`
      ${Yt(t.coordinateTransformMode,X)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${Mr(l,o)};
              ${wr(t.nearestMode,r,X)};
              ${tn(l,y,o,d,h.length,u.length,S)};
              `;case"linear":return`
              ${tr(y,o,d,h.length,u.length)};
              ${(()=>{if(o.length===2||o.length===4)return`${Vr(l,y,o,S,C)}`;if(o.length===3||o.length===5)return`${Gr(l,y,o,S,C)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(o.length===2||o.length===4)return`${un(l,y,o,d,h,u,t.cubicCoeffA,S,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${A.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",u.length).declareVariables(l,y)}
      ${A.mainStart()}
        ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${k?"output[global_idx] = input[global_idx];":`
        let output_indices = ${y.offsetToIndices("global_idx")};
        var input_indices: ${l.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${l.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${o.length===2||o.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${u.length>0?u:""}|${k}|${o}`,inputDependencies:["rank"]},getShaderSource:H,getRunData:()=>({outputs:[{dims:d,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(x/64)},programUniforms:[{type:12,data:x},{type:1,data:h},{type:1,data:u},...Ot(o,d)]})}},hn=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Jr=(e,t)=>{let r=[],n=[],i=[],s=hn(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");It(e.inputs,t,s,r,n,i),e.compute(nn(e.inputs[0],t,s,r,n,i),{inputs:[0]})},sn=e=>{let t=e.antialias,r=e.axes,n=e.coordinateTransformMode,i=e.cubicCoeffA,s=e.excludeOutside!==0,o=e.extrapolationValue,u=e.keepAspectRatioPolicy,d=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return hr({antialias:t,axes:r,coordinateTransformMode:n,cubicCoeffA:i,excludeOutside:s,extrapolationValue:o,keepAspectRatioPolicy:u,mode:d,nearestMode:h})}}),Gi,Dc,On,qi=L(()=>{rr(),Jt(),kr(),fr(),Gi=(e,t)=>{let[r,n,i,s]=e,{numHeads:o,rotaryEmbeddingDim:u}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!Ie.areEqual(n.dims,[])&&!Ie.areEqual(n.dims,[1])&&n.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${n.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(s.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(!Ie.areEqual(i.dims,s.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(u>0&&o===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let d=r.dims[0],h=r.dims[r.dims.length-2],y=i.dims[0],l=Ie.sizeFromDimension(r.dims,1)/h,x=u===0?i.dims[1]*2:l/o;if(u>x)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(n.dims.length===2){if(d!==n.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${n.dims[0]}`);if(h!==n.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${n.dims[1]}`)}if(x/2!==i.dims[1]&&u/2!==i.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(h>y)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Dc=(e,t)=>{let{interleaved:r,numHeads:n,rotaryEmbeddingDim:i,scale:s}=t,o=e[0].dims[0],u=Ie.sizeFromDimension(e[0].dims,1),d=e[0].dims[e[0].dims.length-2],h=u/d,y=e[2].dims[1],l=i===0?y*2:h/n,x=new Array(o,d,h/l,l-y),k=Ie.computeStrides(x),S=[{type:1,data:s},{type:12,data:x},{type:12,data:k},...e[0].dims.length===3?new Array({type:12,data:[u,h,l,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[u,l,d*l,1]}):[],...Ot(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],C=X=>{let H=lt("input",e[0].dataType,e[0].dims.length),A=lt("position_ids",e[1].dataType,e[1].dims.length),ee=lt("cos_cache",e[2].dataType,e[2].dims.length),le=lt("sin_cache",e[3].dataType,e[3].dims.length),me=Kt("output",e[0].dataType,e[0].dims.length);return X.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:x.length},{name:"global_strides",type:"u32",length:k.length},{name:"input_output_strides",type:"u32",length:k.length}]),`
        ${X.declareVariables(H,A,ee,le,me)}

        ${X.mainStart(cn)}
          let half_rotary_emb_dim = uniforms.${ee.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${X.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${A.broadcastedIndicesToOffset("bsnh.xy",Kt("",A.type.tensor,2))};
            let position_id =
                u32(${A.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});
            let j = i + select(half_rotary_emb_dim, 1, ${r});
            let re = ${H.getByOffset("i")} * ${ee.get("position_id","bsnh[3]")} -
                ${H.getByOffset("j")} * ${le.get("position_id","bsnh[3]")};
            ${me.setByOffset("i","re")}
            let im = ${H.getByOffset("i")} * ${le.get("position_id","bsnh[3]")} +
                ${H.getByOffset("j")} * ${ee.get("position_id","bsnh[3]")};
            ${me.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${me.setByOffset("k",H.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:hr({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:C,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Ie.size(x)/cn)},programUniforms:S})}},On=(e,t)=>{Gi(e.inputs,t),e.compute(Dc(e.inputs,t))}}),cc,pc,hc,fc=L(()=>{rr(),Jt(),fr(),cc=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],n=e[2];if(t.dataType!==r.dataType||t.dataType!==n.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(n.dims.length!==1)throw new Error("Gamma must be 1D");if(n.dims[n.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let o=e[3];if(o.dims.length!==1)throw new Error("Beta must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let o=e[4];if(o.dims.length!==1)throw new Error("Bias must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},pc=(e,t,r,n)=>{let i=t.simplified,s=e[0].dims,o=Ie.size(s),u=s,d=o,h=s.slice(-1)[0],y=n?s.slice(0,-1).concat(1):[],l=!i&&e.length>3,x=e.length>4,k=n&&r>1,S=n&&r>2,C=r>3,X=64,H=br(h),A=[{type:12,data:d},{type:12,data:H},{type:12,data:h},{type:1,data:t.epsilon}],ee=me=>{let qe=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],Fe=[lt("x",e[0].dataType,e[0].dims,H),lt("skip",e[1].dataType,e[1].dims,H),lt("gamma",e[2].dataType,e[2].dims,H)];l&&Fe.push(lt("beta",e[3].dataType,e[3].dims,H)),x&&Fe.push(lt("bias",e[4].dataType,e[4].dims,H)),Fe.push(Kt("output",e[0].dataType,u,H)),k&&Fe.push(Kt("mean_output",1,y)),S&&Fe.push(Kt("inv_std_output",1,y)),C&&Fe.push(Kt("input_skip_bias_sum",e[0].dataType,u,H));let bt=gr(e[0].dataType),Vt=gr(1,H);return`

      ${me.registerUniforms(qe).declareVariables(...Fe)}
      var<workgroup> sum_shared : array<${Vt}, ${X}>;
      var<workgroup> sum_squared_shared : array<${Vt}, ${X}>;

      ${me.mainStart([X,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${X};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${X};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${X-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${x?"bias[offset1d + i]":bt+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${C?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Qn(bt,H,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${X};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Rn("sum",H)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Rn("square_sum",H)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);
        ${k?"mean_output[global_idx] = mean;":""}
        ${S?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${i?"":`- ${bt}(mean)`}) *
            ${bt}(inv_std_dev) * gamma[offset1d + i]
            ${l?"+ beta[offset1d + i]":""};
        }
      }`},le=[{dims:u,dataType:e[0].dataType}];return r>1&&le.push({dims:y,dataType:1}),r>2&&le.push({dims:y,dataType:1}),r>3&&le.push({dims:s,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${H};${k};${S};${C}`,inputDependencies:e.map((me,qe)=>"type")},getShaderSource:ee,getRunData:()=>({outputs:le,dispatchGroup:{x:Math.ceil(d/h)},programUniforms:A})}},hc=(e,t)=>{cc(e.inputs);let r=[0];e.outputCount>1&&r.push(-3),e.outputCount>2&&r.push(-3),e.outputCount>3&&r.push(3),e.compute(pc(e.inputs,t,e.outputCount,!1),{outputs:r})}}),Ip,dd,Fp,Lc,Op,Bp,zp,Dp,rm=L(()=>{rr(),Jt(),kr(),fr(),Ip=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,n)=>{if(e[n+1].dataType!==6&&e[n+1].dataType!==7)throw new Error(`Input ${n} must be an array of int32 or int64`)})},dd=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(n=>r.push(Number(n)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(n=>r.push(Number(n)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Fp=(e,t)=>{if(e.length>1){let r=dd(e,1),n=dd(e,2),i=dd(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),hr({starts:r,ends:n,axes:i})}else return t},Lc=(e,t,r,n,i)=>{let s=e;return e<0&&(s+=r[n[t]]),i[t]<0?Math.max(0,Math.min(s,r[n[t]]-1)):Math.max(0,Math.min(s,r[n[t]]))},Op=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${qt("uniforms.input_shape","i",r.length)};
            let steps_i = ${qt("uniforms.steps","i",r.length)};
            let signs_i = ${qt("uniforms.signs","i",r.length)};
            let starts_i = ${qt("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,Bp=(e,t)=>{let r=e[0].dims,n=Ie.size(r),i=t.axes.length>0?Ie.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=dd(e,4);s.forEach(H=>H!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(i.length).fill(1));let o=t.starts.map((H,A)=>Lc(H,A,r,i,s)),u=t.ends.map((H,A)=>Lc(H,A,r,i,s));if(i.length!==o.length||i.length!==u.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let H=0;H<r.length;++H)i.includes(H)||(o.splice(H,0,0),u.splice(H,0,r[H]),s.splice(H,0,1));let d=s.map(H=>Math.sign(H));s.forEach((H,A,ee)=>{if(H<0){let le=(u[A]-o[A])/H,me=o[A],qe=me+le*s[A];o[A]=qe,u[A]=me,ee[A]=-H}});let h=r.slice(0);i.forEach((H,A)=>{h[H]=Math.ceil((u[H]-o[H])/s[H])});let y={dims:h,dataType:e[0].dataType},l=Kt("output",e[0].dataType,h.length),x=lt("input",e[0].dataType,e[0].dims.length),k=Ie.size(h),S=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:d.length},{name:"steps",type:"u32",length:s.length}],C=[{type:12,data:k},{type:12,data:o},{type:6,data:d},{type:12,data:s},...Ot(e[0].dims,h)],X=H=>`
      ${H.registerUniforms(S).declareVariables(x,l)}
        ${Op(x,l,r)}
        ${H.mainStart()}
          ${H.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${l.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${l.setByOffset("global_idx",x.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${d.length}_${o.length}_${s.length}`,inputDependencies:["rank"]},getShaderSource:X,getRunData:()=>({outputs:[y],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:C})}},zp=(e,t)=>{Ip(e.inputs,t);let r=Fp(e.inputs,t);e.compute(Bp(e.inputs,r),{inputs:[0]})},Dp=e=>{let t=e.starts,r=e.ends,n=e.axes;return hr({starts:t,ends:r,axes:n})}}),Lp,Rp,Np,jp,nm=L(()=>{rr(),Jt(),kr(),Nn(),fr(),Lp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Rp=(e,t)=>{let r=e.inputs[0],n=r.dims,i=Ie.size(n),s=64,o=n.length,u=Ie.normalizeAxis(t.axis,o),d=u<n.length-1,h,y=[];d?(y=Array.from({length:o},(Fe,bt)=>bt),y[u]=o-1,y[o-1]=u,h=e.compute(bn(r,y),{inputs:[r],outputs:[-1]})[0]):h=r;let l=h.dims,x=l[o-1],k=i/x,S=br(x),C=x/S,X=(Fe,bt)=>bt===4?`max(max(${Fe}.x, ${Fe}.y), max(${Fe}.z, ${Fe}.w))`:bt===2?`max(${Fe}.x, ${Fe}.y)`:bt===3?`max(max(${Fe}.x, ${Fe}.y), ${Fe}.z)`:Fe,H=lt("x",h.dataType,h.dims,S),A=Kt("result",h.dataType,h.dims,S),ee=H.type.value,le=gr(h.dataType)==="f32"?`var threadMax = ${ee}(-3.402823e+38f);`:`var threadMax = ${ee}(-65504.0h);`,me=Fe=>`
      var<workgroup> rowMaxShared : ${ee};
      var<workgroup> rowSumShared : ${ee};
      var<workgroup> threadShared : array<${ee}, ${s}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${ee} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${ee}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${Fe.registerUniform("packedCols","i32").declareVariables(H,A)}
      ${Fe.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${s};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${le}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${ee}(${X("threadShared[0]",S)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${ee}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${ee}(${Rn("threadShared[0]",S)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,qe=e.compute({name:"Softmax",shaderCache:{hint:`${S}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:l,dataType:h.dataType}],dispatchGroup:{x:k},programUniforms:[{type:6,data:C}]}),getShaderSource:me},{inputs:[h],outputs:[d?-1:0]})[0];d&&e.compute(bn(qe,y),{inputs:[qe]})},Np=(e,t)=>{Lp(e.inputs),Rp(e,t)},jp=e=>hr({axis:e.axis})}),Rc,Up,Vp,Wp,Gp,im=L(()=>{rr(),Jt(),fr(),Rc=e=>Array.from(e.getBigInt64Array(),Number),Up=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Rc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Vp=(e,t)=>{let r=[];for(let n=0;n<e.length;++n)r.push(e[n]*t[n]);return r},Wp=(e,t)=>{let r=e[0].dims,n=t??Rc(e[1]),i=Vp(r,n),s=Ie.size(i),o=e[0].dataType,u=lt("input",o,r.length),d=Kt("output",o,i.length),h=y=>`
      const inputShape = ${u.indices(...r)};
      ${y.registerUniform("output_size","u32").declareVariables(u,d)}
      ${y.mainStart()}
      ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${d.offsetToIndices("global_idx")};
      var input_indices: ${u.type.indices};
      for (var i = 0; i < ${r.length}; i++) {
        let input_dim_i = ${u.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${d.indicesGet("output_indices","i")}  % input_dim_i;

        ${u.indicesSet("input_indices","i","input_dim_value")}
      }
      ${d.setByOffset("global_idx",u.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},...Ot(e[0].dims,i)]}),getShaderSource:h}},Gp=e=>{Up(e.inputs),e.compute(Wp(e.inputs),{inputs:[0]})}}),qp,Hp,Kp,sm=L(()=>{rr(),Jt(),fr(),qp=(e,t,r,n,i)=>{let s=Kt("output_data",i,r.length,4),o=lt("a_data",t[1].dataType,t[1].dims.length,4),u=lt("b_data",t[2].dataType,t[2].dims.length,4),d=lt("c_data",t[0].dataType,t[0].dims.length,4),h,y=(l,x,k)=>`select(${x}, ${l}, ${k})`;if(!n)h=s.setByOffset("global_idx",y(o.getByOffset("global_idx"),u.getByOffset("global_idx"),d.getByOffset("global_idx")));else{let l=(x,k,S="")=>{let C=`a_data[index_a${k}][component_a${k}]`,X=`b_data[index_b${k}][component_b${k}]`,H=`bool(c_data[index_c${k}] & (0xffu << (component_c${k} * 8)))`;return`
            let output_indices${k} = ${s.offsetToIndices(`global_idx * 4u + ${k}u`)};
            let offset_a${k} = ${o.broadcastedIndicesToOffset(`output_indices${k}`,s)};
            let offset_b${k} = ${u.broadcastedIndicesToOffset(`output_indices${k}`,s)};
            let offset_c${k} = ${d.broadcastedIndicesToOffset(`output_indices${k}`,s)};
            let index_a${k} = offset_a${k} / 4u;
            let index_b${k} = offset_b${k} / 4u;
            let index_c${k} = offset_c${k} / 4u;
            let component_a${k} = offset_a${k} % 4u;
            let component_b${k} = offset_b${k} % 4u;
            let component_c${k} = offset_c${k} % 4u;
            ${x}[${k}] = ${S}(${y(C,X,H)});
          `};i===9?h=`
            var data = vec4<u32>(0);
            ${l("data",0,"u32")}
            ${l("data",1,"u32")}
            ${l("data",2,"u32")}
            ${l("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`
            ${l("output_data[global_idx]",0)}
            ${l("output_data[global_idx]",1)}
            ${l("output_data[global_idx]",2)}
            ${l("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(d,o,u,s)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${h}
      }`},Hp=e=>{let t=e[1].dims,r=e[2].dims,n=e[0].dims,i=e[1].dataType,s=!(Ie.areEqual(t,r)&&Ie.areEqual(r,n)),o=t,u=Ie.size(t);if(s){let h=$n.calcShape($n.calcShape(t,r,!1),n,!1);if(!h)throw new Error("Can't perform where op on the given tensors");o=h,u=Ie.size(o)}let d=Math.ceil(u/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>qp(h,e,o,s,i),getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:d},...Ot(n,t,r,o)]})}},Kp=e=>{e.compute(Hp(e.inputs))}}),Xp,om=L(()=>{La(),ss(),vd(),Xa(),Cl(),xd(),Td(),Sd(),Ao(),Id(),wu(),Bo(),Od(),Bd(),$u(),Ld(),Rd(),Oc(),Ud(),Vd(),Wd(),Zl(),Bc(),qo(),zc(),_n(),g(),Xe(),Vs(),Yo(),qi(),fc(),rm(),nm(),Uu(),im(),Nn(),ao(),sm(),Xp=new Map([["Abs",[Qs]],["Acos",[Ya]],["Acosh",[Za]],["Add",[kl]],["ArgMax",[Da,qs]],["ArgMin",[Gs,qs]],["Asin",[Ja]],["Asinh",[el]],["Atan",[Ys]],["Atanh",[tl]],["Attention",[Va]],["AveragePool",[ac,oc]],["BatchNormalization",[qa]],["BiasAdd",[Ka]],["BiasSplitGelu",[El]],["Cast",[nl,rl]],["Ceil",[sl]],["Clip",[Zs]],["Concat",[Rl,Nl]],["Conv",[$o,Eo]],["ConvTranspose",[cu,vi]],["Cos",[ol]],["Cosh",[al]],["CumSum",[pu,hu]],["DepthToSpace",[_u,gu]],["DequantizeLinear",[ld,ud]],["Div",[Pl]],["Einsum",[xu,Oo]],["Elu",[Js,Di]],["Equal",[uo]],["Erf",[ll]],["Exp",[eo]],["Expand",[Eu]],["FastGelu",[Cu]],["Floor",[ul]],["FusedConv",[$o,Eo]],["Gather",[No,Dd]],["GatherElements",[Vo,Iu]],["GatherBlockQuantized",[jo,Pu]],["Gelu",[dl]],["Gemm",[Lr,Bu]],["GlobalAveragePool",[uc,lc]],["GlobalMaxPool",[ln,rn]],["Greater",[Fl]],["GreaterOrEqual",[po]],["GroupQueryAttention",[Gu]],["HardSigmoid",[ml,no]],["InstanceNormalization",[Ku]],["LayerNormalization",[Yu]],["LeakyRelu",[to,Di]],["Less",[Ol]],["LessOrEqual",[Bl]],["Log",[Ml]],["MatMul",[To]],["MatMulNBits",[Hd,Kd]],["MaxPool",[cr,ad]],["Mul",[Al]],["MultiHeadAttention",[Du,Wo]],["Neg",[pl]],["Not",[cl]],["Pad",[nc]],["Pow",[Il]],["QuickGelu",[xl,Di]],["Range",[Ne]],["Reciprocal",[ro]],["ReduceMin",[Oa]],["ReduceMean",[Rs]],["ReduceMax",[Fa]],["ReduceSum",[Ba]],["ReduceProd",[js]],["ReduceL1",[Aa]],["ReduceL2",[Ia]],["ReduceLogSum",[Us]],["ReduceLogSumExp",[Ns]],["ReduceSumSquare",[za]],["Relu",[hl]],["Resize",[Jr,sn]],["RotaryEmbedding",[On]],["Sigmoid",[fl]],["Sin",[_l]],["Sinh",[as]],["Slice",[zp,Dp]],["SkipLayerNormalization",[hc]],["Split",[jd,ju]],["Sqrt",[gl]],["Softmax",[Np,jp]],["Sub",[co]],["Tan",[wl]],["Tanh",[io]],["ThresholdedRelu",[bl,Di]],["Tile",[Gp]],["Transpose",[bd,ua]],["Where",[Kp]]])}),Qp,am=L(()=>{c(),_(),fr(),Qp=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,r,n,i){Ze(e.programInfo.name);let s=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let u=[];for(let h of t)u.push({binding:u.length,resource:{buffer:h.buffer}});for(let h of r)u.push({binding:u.length,resource:{buffer:h.buffer}});i&&u.push({binding:u.length,resource:i});let d=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let h={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:d,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(h)}o.setPipeline(e.computePipeline),o.setBindGroup(0,d),o.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),He(e.programInfo.name)}dispose(){}build(e,t){Ze(e.name);let r=this.backend.device,n=[];r.features.has("shader-f16")&&n.push("enable f16;");let i=oa(t,this.backend.device.limits),s=e.getShaderSource(i),o=`${n.join(`
`)}
${i.additionalImplementations}
${s}`,u=r.createShaderModule({code:o,label:e.name});fe("verbose",()=>`[WebGPU] ${e.name} shader code: ${o}`);let d=r.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return He(e.name),{programInfo:e,computePipeline:d,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let t=typeof e=="number"?e:e.x,r=typeof e=="number"?1:e.y||1,n=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=i&&r<=i&&n<=i)return[t,r,n];let s=t*r*n,o=Math.ceil(Math.sqrt(s));if(o>i){if(o=Math.ceil(Math.cbrt(s)),o>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}else return[o,o,1]}}}),Yp,Zp,Jp,eh,lm=L(()=>{c(),rr(),_(),ne(),Xr(),om(),am(),Yp=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let n=0;n<e.length;++n){let i=e[n].dataType;switch(t[n]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let s=e[n].dims.length;r.push(`${i};${s}`);break}case"dims":{let s=e[n].dims.join(",");r.push(`${i};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[n]}`)}}return r.join("|")},Zp=(e,t,r)=>{let n=e.name;return e.shaderCache?.hint&&(n+="["+e.shaderCache.hint+"]"),n+=":"+r+`:${Yp(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,n},Jp=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},eh=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let r=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r};t.features.has("chromium-experimental-timestamp-query-inside-passes")?r.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&r.push("timestamp-query"),t.features.has("shader-f16")&&r.push("shader-f16"),this.device=await t.requestDevice(n),this.adapterInfo=new Jp(t.info||await t.requestAdapterInfo()),this.gpuDataManager=Cr(this),this.programManager=new Qp(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ri(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Ze(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let t=new BigUint64Array(e.getMappedRange()),r=this.pendingQueries.get(e);for(let n=0;n<t.length/2;n++){let i=r[n],s=i.kernelId,o=this.kernels.get(s),u=o.kernelType,d=o.kernelName,h=i.programName,y=i.inputTensorViews,l=i.outputTensorViews,x=t[n*2],k=t[n*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=x);let S=Number(x-this.queryTimeBase),C=Number(k-this.queryTimeBase);if(!Number.isSafeInteger(S)||!Number.isSafeInteger(C))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(X=>({dims:X.dims,dataType:Cn(X.dataType)})),outputsMetadata:l.map(X=>({dims:X.dims,dataType:Cn(X.dataType)})),kernelId:s,kernelType:u,kernelName:d,programName:h,startTime:S,endTime:C});else{let X="";y.forEach((A,ee)=>{X+=`input[${ee}]: [${A.dims}] | ${Cn(A.dataType)}, `});let H="";l.forEach((A,ee)=>{H+=`output[${ee}]: [${A.dims}] | ${Cn(A.dataType)}, `}),console.log(`[profiling] kernel "${s}|${u}|${d}|${h}" ${X}${H}execution time: ${C-S} ns`)}nt("GPU",`${h}::${x}::${k}`)}e.unmap(),this.pendingQueries.delete(e)}),He()}run(e,t,r,n,i,s){Ze(e.name);let o=[];for(let A=0;A<t.length;++A){let ee=t[A].data;if(ee===0)continue;let le=this.gpuDataManager.get(ee);if(!le)throw new Error(`no GPU data for input: ${ee}`);o.push(le)}let{outputs:u,dispatchGroup:d,programUniforms:h}=e.getRunData(t),y=r.length===0?u.map((A,ee)=>ee):r;if(y.length!==u.length)throw new Error(`Output size ${y.length} must be equal to ${u.length}.`);let l=[],x=[];for(let A=0;A<u.length;++A){if(!Number.isInteger(y[A])||y[A]<-3||y[A]>=s)throw new Error(`Invalid output index: ${y[A]}`);if(y[A]===-3)continue;let ee=y[A]===-1,le=y[A]===-2,me=ee||le?i(u[A].dataType,u[A].dims):n(y[A],u[A].dataType,u[A].dims);if(l.push(me),me.data===0)continue;let qe=this.gpuDataManager.get(me.data);if(!qe)throw new Error(`no GPU data for output: ${me.data}`);if(ee&&this.temporaryData.push(qe),le){let Fe=this.kernelPersistentData.get(this.currentKernelId);Fe||(Fe=[],this.kernelPersistentData.set(this.currentKernelId,Fe)),Fe.push(qe)}x.push(qe)}if(o.length!==t.length||x.length!==l.length){if(x.length===0)return He(e.name),l;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let k;if(h){let A=0,ee=[];h.forEach(Fe=>{let bt=typeof Fe.data=="number"?[Fe.data]:Fe.data;if(bt.length===0)return;let Vt=Fe.type===10?2:4,jt,lr;Fe.type===10?(lr=bt.length>4?16:bt.length>2?8:bt.length*Vt,jt=bt.length>4?16:Vt*bt.length):(lr=bt.length<=2?bt.length*Vt:16,jt=16),A=Math.ceil(A/lr)*lr,ee.push(A);let Zt=Fe.type===10?8:4;A+=bt.length>4?Math.ceil(bt.length/Zt)*jt:bt.length*Vt});let le=16;A=Math.ceil(A/le)*le;let me=new ArrayBuffer(A);h.forEach((Fe,bt)=>{let Vt=ee[bt],jt=typeof Fe.data=="number"?[Fe.data]:Fe.data;if(Fe.type===6)new Int32Array(me,Vt,jt.length).set(jt);else if(Fe.type===12)new Uint32Array(me,Vt,jt.length).set(jt);else if(Fe.type===10)new Uint16Array(me,Vt,jt.length).set(jt);else if(Fe.type===1)new Float32Array(me,Vt,jt.length).set(jt);else throw new Error(`Unsupported uniform type: ${Cn(Fe.type)}`)});let qe=this.gpuDataManager.create(A,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(qe.buffer,0,me,0,A),this.gpuDataManager.release(qe.id),k={offset:0,size:A,buffer:qe.buffer}}let S=this.programManager.normalizeDispatchGroupSize(d),C=S[1]===1&&S[2]===1,X=Zp(e,t,C),H=this.programManager.getArtifact(X);if(H||(H=this.programManager.build(e,S),this.programManager.setArtifact(X,H),fe("info",()=>`[artifact] key: ${X}, programName: ${e.name}`)),h&&H.uniformVariablesInfo){if(h.length!==H.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${H.uniformVariablesInfo.length}, got ${h.length} in program "${H.programInfo.name}".`);for(let A=0;A<h.length;A++){let ee=h[A],le=ee.type,me=typeof ee.data=="number"?1:ee.data.length,[qe,Fe]=H.uniformVariablesInfo[A];if(le!==qe||me!==Fe)throw new Error(`Uniform variable ${A} mismatch: expect type ${qe} with size ${Fe}, got type ${le} with size ${me} in program "${H.programInfo.name}".`)}}if(fe("info",()=>`[ProgramManager] run "${e.name}" (key=${X}) with ${S[0]}x${S[1]}x${S[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let A={kernelId:this.currentKernelId,programName:H.programInfo.name,inputTensorViews:t,outputTensorViews:l};this.pendingKernels.push(A),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(A)}return this.programManager.run(H,o,x,S,k),He(e.name),l}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,r,n){let i=Xp.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let s={kernelType:e,kernelName:n,kernelEntry:i[0],attributes:[i[1],r]};this.kernels.set(t,s)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let r of t)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,r){let n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);let i=n.kernelType,s=n.kernelName,o=n.kernelEntry,u=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${s}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),fe("info",()=>`[WebGPU] Start to run kernel "[${i}] ${s}"...`);let d=this.env.debug;this.temporaryData=[];try{return d&&this.device.pushErrorScope("validation"),o(t,u[1]),0}catch(h){return r.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${s}" failed. ${h}`)),1}finally{d&&r.push(this.device.popErrorScope().then(h=>h?`GPU validation error for kernel "[${i}] ${s}": ${h.message}`:null));for(let h of this.temporaryData)this.gpuDataManager.release(h.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,r,n){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let s=i.get(t),o=this.gpuDataManager.registerExternalBuffer(r,n,s);return i.set(t,[o,r]),o}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,r){return async()=>{let n=await _r(this,e,t);return V(n.buffer,r)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){fe("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){fe("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){fe("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),r=e.length;this.pendingKernels=[];for(let n=0;n<r;n++){let i=this.getComputePassEncoder(),s=e[n];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(s.computePipeline),i.setBindGroup(0,s.bindGroup),i.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),th,Nc,jc,Uc,rh,nh,um=L(()=>{_(),th=1,Nc=()=>th++,jc=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}destroy(){fe("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}sameTypeAndShape(e,t){return this.dataType===e&&this.tensorShape.every((r,n)=>r===t[n])}},Uc=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&this.tensorManager.releaseTensor(this.tensorWrapper)}async ensureTensor(e,t,r){if(this.wrapper){if(this.wrapper.sameTypeAndShape(e,t))return this.wrapper.tensor;r&&(this.activeUpload=new Uint8Array(await this.wrapper.read())),this.tensorManager.releaseTensor(this.wrapper)}let n=MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,t,n,!0,!0),r&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){if(this.wrapper){this.wrapper.write(e);return}this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(e):this.wrapper.read()}},rh=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let e=Nc();return this.tensorTrackersById.set(e,new Uc(this)),e}releaseTensorId(e){let t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,r,n){fe("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${r}, copyOld: ${n}}`);let i=this.tensorTrackersById.get(e);if(!i)throw new Error("Tensor not found.");return i.ensureTensor(t,r,n)}upload(e,t){let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");r.upload(t)}async download(e,t){fe("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t?.byteLength}}`);let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");return r.download(t)}releaseTensorsForSession(e){for(let t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter(t=>t.sessionId!==e)}registerTensor(e,t,r,n){let i=Nc(),s=new jc({sessionId:this.backend.currentSessionId,context:e,tensor:t,dataType:r,shape:n});return this.tensorTrackersById.set(i,new Uc(this,s)),this.externalTensors.add(s),i}async getCachedTensor(e,t,r,n,i){let s=this.backend.currentSessionId;for(let[d,h]of this.freeTensors.entries())if(h.sameTypeAndShape(e,t)){let y=this.freeTensors.splice(d,1)[0];return y.sessionId=s,y}let o=this.backend.currentContext;fe("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`);let u=await o.createTensor({dataType:e,shape:t,dimensions:t,usage:r,writable:n,readable:i});return new jc({sessionId:s,context:o,tensor:u,dataType:e,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},nh=(...e)=>new rh(...e)}),Vc,ih,dm=L(()=>{rr(),Dr(),ne(),um(),_(),Vc=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),ih=class{constructor(e){this.tensorManager=nh(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,ri(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let r=this.sessionIdsByMLContext.get(t);r||(r=new Set,this.sessionIdsByMLContext.set(t,r)),r.add(e)}onReleaseSession(e){let t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let r=this.sessionIdsByMLContext.get(t);r.delete(e),r.size===0&&this.sessionIdsByMLContext.delete(t)}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){fe("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,r,n){let i=Vc.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,i,r,n)}uploadTensor(e,t){if(!Er().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");fe("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let r=await this.tensorManager.download(e);return V(r,t)}}registerMLTensor(e,t,r){let n=Vc.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);let i=this.tensorManager.registerTensor(this.currentContext,e,n,r);return fe("verbose",()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${n}, dimensions: ${r}} -> {tensorId: ${i}}`),i}registerMLConstant(e,t,r,n,i,s){if(!s)throw new Error("External mounted files are not available.");let o=e;e.startsWith("./")&&(o=e.substring(2));let u=s.get(o);if(!u)throw new Error(`File with name ${o} not found in preloaded files.`);if(t+r>u.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let d=u.slice(t,t+r).buffer,h;switch(i.dataType){case"float32":h=new Float32Array(d);break;case"float16":h=new Uint16Array(d);break;case"int32":h=new Int32Array(d);break;case"uint32":h=new Uint32Array(d);break;case"int64":h=new BigInt64Array(d);break;case"uint64":h=new BigUint64Array(d);break;case"int8":h=new Int8Array(d);break;case"uint8":h=new Uint8Array(d);break;default:throw new Error(`Unsupported data type: ${i.dataType} in creating WebNN Constant from external data.`)}return fe("verbose",()=>`[WebNN] registerMLConstant {dataType: ${i.dataType}, shape: ${i.shape}}}`),n.constant(i,h)}flush(){}}}),sh={};O(sh,{init:()=>ah});var mc,oh,ah,cm=L(()=>{rr(),lm(),_(),Jt(),dm(),mc=class em{constructor(t,r,n,i){this.module=t,this.dataType=r,this.data=n,this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=Ie.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=Ie.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=Ie.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let t=Ie.size(this.dims);return t===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(Ie.size(t)!==Ie.size(this.dims))throw new Error("Invalid new shape");return new em(this.module,this.dataType,this.data,t)}},oh=class{constructor(e,t,r){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let n=e.HEAPU32,i=r>>>2;this.opKernelContext=n[i++];let s=n[i++];this.outputCount=n[i++],this.customDataOffset=n[i++],this.customDataSize=n[i++];let o=[];for(let u=0;u<s;u++){let d=n[i++],h=n[i++],y=n[i++],l=[];for(let x=0;x<y;x++)l.push(n[i++]);o.push(new mc(e,d,h,l))}this.inputs=o}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,t){let r=t?.inputs?.map(o=>typeof o=="number"?this.inputs[o]:o)??this.inputs,n=t?.outputs??[],i=(o,u,d)=>new mc(this.module,u,this.output(o,d),d),s=(o,u)=>{let d=Dn(o,u);if(!d)throw new Error(`Unsupported data type: ${o}`);let h=d>0?this.backend.gpuDataManager.create(d).id:0;return new mc(this.module,o,h,u)};return this.backend.run(e,r,n,i,s,this.outputCount)}output(e,t){let r=this.module.stackSave();try{let n=this.module.stackAlloc((1+t.length)*4),i=n>>2;this.module.HEAPU32[i++]=t.length;for(let s=0;s<t.length;s++)this.module.HEAPU32[i++]=t[s];return this.module._JsepOutput(this.opKernelContext,e,n)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(r)}}},ah=async(e,t,r,n)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let s=new eh;await s.initialize(r,n),i("webgpu",[s,o=>s.alloc(o),o=>s.free(o),(o,u,d,h=!1)=>{if(h)fe("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${o}, dst=${u}, size=${d}`),s.memcpy(o,u);else{fe("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${o}, gpuDataId=${u}, size=${d}`);let y=t.HEAPU8.subarray(o>>>0,(o>>>0)+d);s.upload(u,y)}},async(o,u,d)=>{fe("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${u}, size=${d}`),await s.download(o,()=>t.HEAPU8.subarray(u>>>0,(u>>>0)+d))},(o,u,d)=>s.createKernel(o,u,d,t.UTF8ToString(t._JsepGetNodeName(u))),o=>s.releaseKernel(o),(o,u,d,h)=>{fe("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${d}, kernel=${o}, contextDataOffset=${u}`);let y=new oh(t,s,u);return s.computeKernel(o,y,h)},()=>s.captureBegin(),()=>s.captureEnd(),()=>s.replay()])}else{let s=new ih(r);i("webnn",[s,()=>s.reserveTensorId(),o=>s.releaseTensorId(o),async(o,u,d,h)=>s.ensureTensor(o,u,d,h),(o,u)=>{s.uploadTensor(o,u)},async(o,u)=>s.downloadTensor(o,u)])}}}),lh,Wc,Gc,Hi,uh,_c,qc,Hc,Kc,Xc,Qc,Yc,dh=L(()=>{Kn(),ei(),rr(),Dr(),hi(),Fi(),lh=(e,t)=>{Er()._OrtInit(e,t)!==0&&Nr("Can't initialize onnxruntime.")},Wc=async e=>{lh(e.wasm.numThreads,Fn(e.logLevel))},Gc=async(e,t)=>{{let r=(cm(),j(sh)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=e.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let s=e.webgpu.forceFallbackAdapter;if(s!==void 0&&typeof s!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${s}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:s}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await r("webgpu",Er(),e,n)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Er(),e)}}},Hi=new Map,uh=e=>{let t=Er(),r=t.stackSave();try{let n=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,n,n+4)!==0&&Nr("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(r)}},_c=e=>{let t=Er(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},qc=async(e,t)=>{let r,n,i=Er();Array.isArray(e)?[r,n]=e:e.buffer===i.HEAPU8.buffer?[r,n]=[e.byteOffset,e.byteLength]:[r,n]=_c(e);let s=0,o=0,u=0,d=[],h=[],y=[];try{if([o,d]=Ii(t),t?.externalData&&i.mountExternalData){let A=[];for(let ee of t.externalData){let le=typeof ee=="string"?ee:ee.path;A.push(ti(typeof ee=="string"?ee:ee.data).then(me=>{i.mountExternalData(le,me)}))}await Promise.all(A)}for(let A of t?.executionProviders??[])if((typeof A=="string"?A:A.name)==="webnn"){if(i.shouldTransferToMLTensor=!1,i.currentContext)throw new Error("WebNN execution provider is already set.");if(typeof A!="string"){let ee=A,le=ee?.context,me=ee?.gpuDevice,qe=ee?.deviceType,Fe=ee?.powerPreference;le?i.currentContext=le:me?i.currentContext=await navigator.ml.createContext(me):i.currentContext=await navigator.ml.createContext({deviceType:qe,powerPreference:Fe})}else i.currentContext=await navigator.ml.createContext();break}s=await i._OrtCreateSession(r,n,o),s===0&&Nr("Can't create a session."),i.jsepOnCreateSession?.(),i.currentContext&&(i.jsepRegisterMLContext(s,i.currentContext),i.currentContext=void 0,i.shouldTransferToMLTensor=!0);let[l,x]=uh(s),k=!!t?.enableGraphCapture,S=[],C=[],X=[];for(let A=0;A<l;A++){let ee=i._OrtGetInputName(s,A);ee===0&&Nr("Can't get an input name."),h.push(ee),S.push(i.UTF8ToString(ee))}for(let A=0;A<x;A++){let ee=i._OrtGetOutputName(s,A);ee===0&&Nr("Can't get an output name."),y.push(ee);let le=i.UTF8ToString(ee);C.push(le);{if(k&&t?.preferredOutputLocation===void 0){X.push("gpu-buffer");continue}let me=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[le]??"cpu";if(me!=="cpu"&&me!=="cpu-pinned"&&me!=="gpu-buffer"&&me!=="ml-tensor")throw new Error(`Not supported preferred output location: ${me}.`);if(k&&me!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${me}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);X.push(me)}}let H=null;return X.some(A=>A==="gpu-buffer"||A==="ml-tensor")&&(u=i._OrtCreateBinding(s),u===0&&Nr("Can't create IO binding."),H={handle:u,outputPreferredLocations:X,outputPreferredLocationsEncoded:X.map(A=>gi(A))}),Hi.set(s,[s,h,y,H,k,!1]),[s,S,C]}catch(l){throw h.forEach(x=>i._OrtFree(x)),y.forEach(x=>i._OrtFree(x)),u!==0&&i._OrtReleaseBinding(u),s!==0&&i._OrtReleaseSession(s),l}finally{i._free(r),o!==0&&i._OrtReleaseSessionOptions(o),d.forEach(l=>i._free(l)),i.unmountExternalData?.()}},Hc=e=>{let t=Er(),r=Hi.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[n,i,s,o,u]=r;o&&(u&&t._OrtClearBoundOutputs(o.handle),t._OrtReleaseBinding(o.handle)),t.jsepOnReleaseSession?.(e),i.forEach(d=>t._OrtFree(d)),s.forEach(d=>t._OrtFree(d)),t._OrtReleaseSession(n),Hi.delete(e)},Kc=(e,t,r,n,i,s=!1)=>{if(!e){t.push(0);return}let o=Er(),u=e[0],d=e[1],h=e[3],y,l;if(u==="string"&&(h==="gpu-buffer"||h==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(s&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let S=e[2].gpuBuffer;l=Dn(Xn(u),d);let C=o.jsepRegisterBuffer;if(!C)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');y=C(n,i,S,l)}else if(h==="ml-tensor"){let S=e[2].mlTensor;l=Dn(Xn(u),d);let C=o.jsepRegisterMLTensor;if(!C)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');y=C(S,Xn(u),d)}else{let S=e[2];if(Array.isArray(S)){l=4*S.length,y=o._malloc(l),r.push(y);let C=y/4;for(let X=0;X<S.length;X++){if(typeof S[X]!="string")throw new TypeError(`tensor data at index ${X} is not a string`);o.HEAPU32[C++]=Ar(S[X],r)}}else l=S.byteLength,y=o._malloc(l),r.push(y),o.HEAPU8.set(new Uint8Array(S.buffer,S.byteOffset,l),y)}let x=o.stackSave(),k=o.stackAlloc(4*d.length);try{let S=k/4;d.forEach(X=>o.HEAP32[S++]=X);let C=o._OrtCreateTensor(Xn(u),y,l,k,d.length,gi(h));C===0&&Nr(`Can't create tensor for input/output. session=${n}, index=${i}.`),t.push(C)}finally{o.stackRestore(x)}},Xc=async(e,t,r,n,i,s)=>{let o=Er(),u=Hi.get(e);if(!u)throw new Error(`cannot run inference. invalid session id: ${e}`);let d=u[0],h=u[1],y=u[2],l=u[3],x=u[4],k=u[5],S=t.length,C=n.length,X=0,H=[],A=[],ee=[],le=[],me=o.stackSave(),qe=o.stackAlloc(S*4),Fe=o.stackAlloc(S*4),bt=o.stackAlloc(C*4),Vt=o.stackAlloc(C*4);try{o.jsepOnRunStart?.(d),[X,H]=$i(s);for(let Qt=0;Qt<S;Qt++)Kc(r[Qt],A,le,e,t[Qt],x);for(let Qt=0;Qt<C;Qt++)Kc(i[Qt],ee,le,e,S+n[Qt],x);let jt=qe/4,lr=Fe/4,Zt=bt/4,ur=Vt/4;for(let Qt=0;Qt<S;Qt++)o.HEAPU32[jt++]=A[Qt],o.HEAPU32[lr++]=h[t[Qt]];for(let Qt=0;Qt<C;Qt++)o.HEAPU32[Zt++]=ee[Qt],o.HEAPU32[ur++]=y[n[Qt]];if(l&&!k){let{handle:Qt,outputPreferredLocations:Tr,outputPreferredLocationsEncoded:xr}=l;if(h.length!==S)throw new Error(`input count from feeds (${S}) is expected to be always equal to model's input count (${h.length}).`);for(let Xt=0;Xt<S;Xt++){let yr=t[Xt];await o._OrtBindInput(Qt,h[yr],A[Xt])!==0&&Nr(`Can't bind input[${Xt}] for session=${e}.`)}for(let Xt=0;Xt<C;Xt++){let yr=n[Xt];i[Xt]?.[3]?o._OrtBindOutput(Qt,y[yr],ee[Xt],0)!==0&&Nr(`Can't bind pre-allocated output[${Xt}] for session=${e}.`):o._OrtBindOutput(Qt,y[yr],0,xr[yr])!==0&&Nr(`Can't bind output[${Xt}] to ${Tr[Xt]} for session=${e}.`)}Hi.set(e,[d,h,y,l,x,!0])}let Sr;l?Sr=await o._OrtRunWithBinding(d,l.handle,C,bt,X):Sr=await o._OrtRun(d,Fe,qe,S,Vt,C,bt,X),Sr!==0&&Nr("failed to call OrtRun().");let or=[];for(let Qt=0;Qt<C;Qt++){let Tr=o.HEAPU32[bt/4+Qt];if(Tr===ee[Qt]){or.push(i[Qt]);continue}let xr=o.stackSave(),Xt=o.stackAlloc(4*4),yr=!1,rt,St=0;try{o._OrtGetTensorData(Tr,Xt,Xt+4,Xt+8,Xt+12)!==0&&Nr(`Can't access output tensor data on index ${Qt}.`);let mr=Xt/4,Wr=o.HEAPU32[mr++];St=o.HEAPU32[mr++];let qr=o.HEAPU32[mr++],Wn=o.HEAPU32[mr++],Bn=[];for(let fn=0;fn<Wn;fn++)Bn.push(o.HEAPU32[qr/4+fn]);o._OrtFree(qr);let En=Bn.reduce((fn,mn)=>fn*mn,1);rt=Cn(Wr);let Mn=l?.outputPreferredLocations[n[Qt]];if(rt==="string"){if(Mn==="gpu-buffer"||Mn==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let fn=[],mn=St/4;for(let Xi=0;Xi<En;Xi++){let Qi=o.HEAPU32[mn++],ys=Xi===En-1?void 0:o.HEAPU32[mn]-Qi;fn.push(o.UTF8ToString(Qi,ys))}or.push([rt,Bn,fn,"cpu"])}else if(Mn==="gpu-buffer"&&En>0){let fn=o.jsepGetBuffer;if(!fn)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let mn=fn(St),Xi=Dn(Wr,En);if(Xi===void 0||!mi(rt))throw new Error(`Unsupported data type: ${rt}`);yr=!0,or.push([rt,Bn,{gpuBuffer:mn,download:o.jsepCreateDownloader(mn,Xi,rt),dispose:()=>{o._OrtReleaseTensor(Tr)}},"gpu-buffer"])}else if(Mn==="ml-tensor"&&En>0){let fn=o.jsepEnsureTensor;if(!fn)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(Dn(Wr,En)===void 0||!_i(rt))throw new Error(`Unsupported data type: ${rt}`);let mn=await fn(St,Wr,Bn,!1);yr=!0,or.push([rt,Bn,{mlTensor:mn,download:o.jsepCreateMLTensorDownloader(St,rt),dispose:()=>{o.jsepReleaseTensorId(St),o._OrtReleaseTensor(Tr)}},"ml-tensor"])}else{let fn=fi(rt),mn=new fn(En);new Uint8Array(mn.buffer,mn.byteOffset,mn.byteLength).set(o.HEAPU8.subarray(St,St+mn.byteLength)),or.push([rt,Bn,mn,"cpu"])}}finally{o.stackRestore(xr),rt==="string"&&St&&o._free(St),yr||o._OrtReleaseTensor(Tr)}}return l&&!x&&(o._OrtClearBoundOutputs(l.handle),Hi.set(e,[d,h,y,l,x,!1])),or}finally{o.stackRestore(me),A.forEach(jt=>o._OrtReleaseTensor(jt)),ee.forEach(jt=>o._OrtReleaseTensor(jt)),le.forEach(jt=>o._free(jt)),X!==0&&o._OrtReleaseRunOptions(X),H.forEach(jt=>o._free(jt))}},Qc=e=>{let t=Er(),r=Hi.get(e);if(!r)throw new Error("invalid session id");let n=r[0],i=t._OrtEndProfiling(n);i===0&&Nr("Can't get an profile file name."),t._OrtFree(i)},Yc=e=>{let t=[];for(let r of e){let n=r[2];!Array.isArray(n)&&"buffer"in n&&t.push(n.buffer)}return t}}),Ki,Vn,Zo,cd,pd,gc,Zc,wc,gs,ws,ch,ph,hh,fh,mh,_h,gh,wh,yh=L(()=>{c(),dh(),Dr(),Nt(),Ki=()=>!!P.wasm.proxy&&typeof document<"u",Zo=!1,cd=!1,pd=!1,wc=new Map,gs=(e,t)=>{let r=wc.get(e);r?r.push(t):wc.set(e,[t])},ws=()=>{if(Zo||!cd||pd||!Vn)throw new Error("worker not ready")},ch=e=>{switch(e.data.type){case"init-wasm":Zo=!1,e.data.err?(pd=!0,Zc[1](e.data.err)):(cd=!0,Zc[0]()),gc&&(URL.revokeObjectURL(gc),gc=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=wc.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},ph=async()=>{if(!cd){if(Zo)throw new Error("multiple calls to 'initWasm()' detected.");if(pd)throw new Error("previous call to 'initWasm()' failed.");if(Zo=!0,Ki())return new Promise((e,t)=>{Vn?.terminate(),xt().then(([r,n])=>{try{Vn=n,Vn.onerror=s=>t(s),Vn.onmessage=ch,Zc=[e,t];let i={type:"init-wasm",in:P};Vn.postMessage(i),gc=r}catch(i){t(i)}},t)});try{await jr(P.wasm),await Wc(P),cd=!0}catch(e){throw pd=!0,e}finally{Zo=!1}}},hh=async e=>{if(Ki())return ws(),new Promise((t,r)=>{gs("init-ep",[t,r]);let n={type:"init-ep",in:{epName:e,env:P}};Vn.postMessage(n)});await Gc(P,e)},fh=async e=>Ki()?(ws(),new Promise((t,r)=>{gs("copy-from",[t,r]);let n={type:"copy-from",in:{buffer:e}};Vn.postMessage(n,[e.buffer])})):_c(e),mh=async(e,t)=>{if(Ki()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return ws(),new Promise((r,n)=>{gs("create",[r,n]);let i={type:"create",in:{model:e,options:{...t}}},s=[];e instanceof Uint8Array&&s.push(e.buffer),Vn.postMessage(i,s)})}else return qc(e,t)},_h=async e=>{if(Ki())return ws(),new Promise((t,r)=>{gs("release",[t,r]);let n={type:"release",in:e};Vn.postMessage(n)});Hc(e)},gh=async(e,t,r,n,i,s)=>{if(Ki()){if(r.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return ws(),new Promise((o,u)=>{gs("run",[o,u]);let d=r,h={type:"run",in:{sessionId:e,inputIndices:t,inputs:d,outputIndices:n,options:s}};Vn.postMessage(h,Yc(d))})}else return Xc(e,t,r,n,i,s)},wh=async e=>{if(Ki())return ws(),new Promise((t,r)=>{gs("end-profiling",[t,r]);let n={type:"end-profiling",in:e};Vn.postMessage(n)});Qc(e)}}),Jc,bh,Mh,pm=L(()=>{c(),yh(),rr(),m(),Fi(),Jc=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},bh=e=>{switch(e[3]){case"cpu":return new Q(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!mi(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:n,dispose:i}=e[2];return Q.fromGpuBuffer(r,{dataType:t,dims:e[1],download:n,dispose:i})}case"ml-tensor":{let t=e[0];if(!_i(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:r,download:n,dispose:i}=e[2];return Q.fromMLTensor(r,{dataType:t,dims:e[1],download:n,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},Mh=class{async fetchModelAndCopyToWasmMemory(e){return fh(await ti(e))}async loadModel(e,t){Ze();let r;typeof e=="string"?r=await this.fetchModelAndCopyToWasmMemory(e):r=e,[this.sessionId,this.inputNames,this.outputNames]=await mh(r,t),He()}async dispose(){return _h(this.sessionId)}async run(e,t,r){Ze();let n=[],i=[];Object.entries(e).forEach(l=>{let x=l[0],k=l[1],S=this.inputNames.indexOf(x);if(S===-1)throw new Error(`invalid input '${x}'`);n.push(k),i.push(S)});let s=[],o=[];Object.entries(t).forEach(l=>{let x=l[0],k=l[1],S=this.outputNames.indexOf(x);if(S===-1)throw new Error(`invalid output '${x}'`);s.push(k),o.push(S)});let u=n.map((l,x)=>Jc(l,()=>`input "${this.inputNames[i[x]]}"`)),d=s.map((l,x)=>l?Jc(l,()=>`output "${this.outputNames[o[x]]}"`):null),h=await gh(this.sessionId,i,u,o,d,r),y={};for(let l=0;l<h.length;l++)y[this.outputNames[o[l]]]=s[l]??bh(h[l]);return He(),y}startProfiling(){}endProfiling(){wh(this.sessionId)}}}),vh={};O(vh,{OnnxruntimeWebAssemblyBackend:()=>tp,initializeFlags:()=>ep,wasmBackend:()=>xh});var ep,tp,xh,hm=L(()=>{c(),yh(),pm(),Nt(),ep=()=>{if((typeof P.wasm.initTimeout!="number"||P.wasm.initTimeout<0)&&(P.wasm.initTimeout=0),P.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof P.wasm.proxy!="boolean"&&(P.wasm.proxy=!1),typeof P.wasm.trace!="boolean"&&(P.wasm.trace=!1),typeof P.wasm.numThreads!="number"||!Number.isInteger(P.wasm.numThreads)||P.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)P.wasm.numThreads=1;else{let e=typeof navigator>"u"?Ee("node:os").cpus().length:navigator.hardwareConcurrency;P.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},tp=class{async init(e){ep(),await ph(),await hh(e)}async createInferenceSessionHandler(e,t){let r=new Mh;return await r.loadModel(e,t),Promise.resolve(r)}},xh=new tp});c(),c(),c();var fm="1.21.0-dev.20241024-d9ca84ef96",mm=T;{let e=(hm(),j(vh)).wasmBackend;Te("webgpu",e,5),Te("webnn",e,5),Te("cpu",e,10),Te("wasm",e,10)}Object.defineProperty(P.versions,"web",{value:fm,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"./src/backends/onnx.js":(Ae,ie,I)=>{var F;I.r(ie),I.d(ie,{Tensor:()=>Ee.Tensor,createInferenceSession:()=>N,deviceToExecutionProviders:()=>Te,isONNXProxy:()=>J,isONNXTensor:()=>re});var ue=I("./src/env.js"),oe=I("?2ce3"),ge=I("./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs"),Ee=I("./node_modules/onnxruntime-common/dist/esm/index.js");const L=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),O=[];let M,j;const K=Symbol.for("onnxruntime");if(K in globalThis)j=globalThis[K];else if(ue.apis.IS_NODE_ENV){switch(j=oe??(F||(F=I.t(oe,2))),xs.platform){case"win32":O.push("dml");break;case"linux":xs.arch==="x64"&&O.push("cuda");break}O.push("cpu"),M=["cpu"]}else j=ge,ue.apis.IS_WEBNN_AVAILABLE&&O.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),ue.apis.IS_WEBGPU_AVAILABLE&&O.push("webgpu"),O.push("wasm"),M=["wasm"];const se=j.InferenceSession;function Te(Z=null){if(!Z)return M;switch(Z){case"auto":return O;case"gpu":return O.filter(W=>["webgpu","cuda","dml","webnn-gpu"].includes(W))}if(O.includes(Z))return[L[Z]??Z];throw new Error(`Unsupported device: "${Z}". Should be one of: ${O.join(", ")}.`)}let Me=null;async function N(Z,W,B){Me&&await Me;const G=se.create(Z,W);Me??=G;const P=await G;return P.config=B,P}function re(Z){return Z instanceof j.Tensor}const ve=j?.env;ve?.wasm&&(ve.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${ue.env.version}/dist/`,ve.wasm.proxy=!1,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(ve.wasm.numThreads=1)),ve?.webgpu&&(ve.webgpu.powerPreference="high-performance");function J(){return ve?.wasm?.proxy}ue.env.backends.onnx=ve},"./src/configs.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{AutoConfig:()=>O,PretrainedConfig:()=>L,getKeyValueShapes:()=>Ee});var F=I("./src/utils/core.js"),ue=I("./src/utils/hub.js");async function oe(M,j){return await(0,ue.getModelJSON)(M,"config.json",!0,j)}function ge(M){const j={};let K={};switch(M.model_type){case"llava":case"paligemma":case"florence2":K=ge(M.text_config);break;case"moondream1":K=ge(M.phi_config);break;case"musicgen":K=ge(M.decoder);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":j.num_heads="n_head",j.num_layers="n_layer",j.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":j.num_heads="num_attention_heads",j.num_layers="num_hidden_layers",j.hidden_size="hidden_size";break;case"llama":case"olmo":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":j.num_heads="num_key_value_heads",j.num_layers="num_hidden_layers",j.hidden_size="hidden_size",j.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":j.num_heads="num_key_value_heads",j.num_layers="num_hidden_layers",j.dim_kv="head_dim";break;case"openelm":j.num_heads="num_kv_heads",j.num_layers="num_transformer_layers",j.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":j.num_heads="num_heads",j.num_layers="num_layers",j.hidden_size="hidden_size";break;case"bloom":j.num_heads="n_head",j.num_layers="n_layer",j.hidden_size="hidden_size";break;case"mpt":j.num_heads="n_heads",j.num_layers="n_layers",j.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":j.num_decoder_layers="num_decoder_layers",j.num_decoder_heads="num_heads",j.decoder_dim_kv="d_kv",j.num_encoder_layers="num_layers",j.num_encoder_heads="num_heads",j.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":j.num_decoder_layers="decoder_layers",j.num_decoder_heads="decoder_attention_heads",j.decoder_hidden_size="d_model",j.num_encoder_layers="encoder_layers",j.num_encoder_heads="encoder_attention_heads",j.encoder_hidden_size="d_model";break;case"speecht5":j.num_decoder_layers="decoder_layers",j.num_decoder_heads="decoder_attention_heads",j.decoder_hidden_size="hidden_size",j.num_encoder_layers="encoder_layers",j.num_encoder_heads="encoder_attention_heads",j.encoder_hidden_size="hidden_size";break;case"trocr":j.num_encoder_layers=j.num_decoder_layers="decoder_layers",j.num_encoder_heads=j.num_decoder_heads="decoder_attention_heads",j.encoder_hidden_size=j.decoder_hidden_size="d_model";break;case"musicgen_decoder":j.num_encoder_layers=j.num_decoder_layers="num_hidden_layers",j.num_encoder_heads=j.num_decoder_heads="num_attention_heads",j.encoder_hidden_size=j.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const Te=ge(M.decoder),Me="num_decoder_layers"in Te,N=(0,F.pick)(M,["model_type","is_encoder_decoder"]);return Me?(N.num_decoder_layers=Te.num_decoder_layers,N.num_decoder_heads=Te.num_decoder_heads,N.decoder_hidden_size=Te.decoder_hidden_size,N.num_encoder_layers=Te.num_encoder_layers,N.num_encoder_heads=Te.num_encoder_heads,N.encoder_hidden_size=Te.encoder_hidden_size):(N.num_layers=Te.num_layers,N.num_heads=Te.num_heads,N.hidden_size=Te.hidden_size),N}const se={...K,...(0,F.pick)(M,["model_type","multi_query","is_encoder_decoder"])};for(const Te in j)se[Te]=M[j[Te]];return se}function Ee(M,{prefix:j="past_key_values"}={}){const K={},se=M.normalized_config,Te=1;if(se.is_encoder_decoder&&"num_encoder_heads"in se&&"num_decoder_heads"in se){const Me=se.encoder_dim_kv??se.encoder_hidden_size/se.num_encoder_heads,N=se.decoder_dim_kv??se.decoder_hidden_size/se.num_decoder_heads,re=[Te,se.num_encoder_heads,0,Me],ve=[Te,se.num_decoder_heads,0,N];for(let J=0;J<se.num_decoder_layers;++J)K[`${j}.${J}.encoder.key`]=re,K[`${j}.${J}.encoder.value`]=re,K[`${j}.${J}.decoder.key`]=ve,K[`${j}.${J}.decoder.value`]=ve}else{const Me=se.num_heads,N=se.num_layers,re=se.dim_kv??se.hidden_size/(se.num_attention_heads??Me);if(se.model_type==="falcon"){const ve=[Te*Me,0,re];for(let J=0;J<N;++J)K[`${j}.${J}.key`]=ve,K[`${j}.${J}.value`]=ve}else if(se.multi_query){const ve=[Te*Me,0,2*re];for(let J=0;J<N;++J)K[`${j}.${J}.key_value`]=ve}else if(se.model_type==="bloom"){const ve=[Te*Me,re,0],J=[Te*Me,0,re];for(let Z=0;Z<N;++Z)K[`${j}.${Z}.key`]=ve,K[`${j}.${Z}.value`]=J}else if(se.model_type==="openelm")for(let ve=0;ve<N;++ve){const J=[Te,Me[ve],0,re];K[`${j}.${ve}.key`]=J,K[`${j}.${ve}.value`]=J}else{const ve=[Te,Me,0,re];for(let J=0;J<N;++J)K[`${j}.${J}.key`]=ve,K[`${j}.${J}.value`]=ve}}return K}class L{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(j){Object.assign(this,j),this.normalized_config=ge(this)}static async from_pretrained(j,{progress_callback:K=null,config:se=null,cache_dir:Te=null,local_files_only:Me=!1,revision:N="main"}={}){se&&!(se instanceof L)&&(se=new L(se));const re=se??await oe(j,{progress_callback:K,config:se,cache_dir:Te,local_files_only:Me,revision:N});return new this(re)}}class O{static async from_pretrained(...j){return L.from_pretrained(...j)}}},"./src/env.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{apis:()=>N,env:()=>B});var F=I("?569f"),ue=I("?3f59"),oe=I("?154a");const ge="3.0.2",Ee=typeof self<"u",L=Ee&&self.constructor.name==="DedicatedWorkerGlobalScope",O=Ee&&"caches"in self,M=typeof navigator<"u"&&"gpu"in navigator,j=typeof navigator<"u"&&"ml"in navigator,K=typeof xs<"u",se=K&&xs?.release?.name==="node",Te=!G(F),Me=!G(ue),N=Object.freeze({IS_BROWSER_ENV:Ee,IS_WEBWORKER_ENV:L,IS_WEB_CACHE_AVAILABLE:O,IS_WEBGPU_AVAILABLE:M,IS_WEBNN_AVAILABLE:j,IS_PROCESS_AVAILABLE:K,IS_NODE_ENV:se,IS_FS_AVAILABLE:Te,IS_PATH_AVAILABLE:Me}),re=Te&&Me;let ve="./";if(re){const P=Object(import.meta).url;P?ve=ue.dirname(ue.dirname(oe.fileURLToPath(P))):typeof __dirname<"u"&&(ve=ue.dirname(__dirname))}const J=re?ue.join(ve,"/.cache/"):null,Z="/models/",W=re?ue.join(ve,Z):Z,B={version:ge,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!Ee,localModelPath:W,useFS:Te,useBrowserCache:O,useFSCache:Te,cacheDir:J,useCustomCache:!1,customCache:null};function G(P){return Object.keys(P).length===0}},"./src/generation/configuration_utils.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{GenerationConfig:()=>ue});var F=I("./src/utils/core.js");class ue{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(ge){Object.assign(this,(0,F.pick)(ge,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{ClassifierFreeGuidanceLogitsProcessor:()=>re,ForcedBOSTokenLogitsProcessor:()=>L,ForcedEOSTokenLogitsProcessor:()=>O,LogitsProcessor:()=>oe,LogitsProcessorList:()=>Ee,LogitsWarper:()=>ge,MinLengthLogitsProcessor:()=>Te,MinNewTokensLengthLogitsProcessor:()=>Me,NoBadWordsLogitsProcessor:()=>N,NoRepeatNGramLogitsProcessor:()=>K,RepetitionPenaltyLogitsProcessor:()=>se,SuppressTokensAtBeginLogitsProcessor:()=>M,TemperatureLogitsWarper:()=>ve,TopKLogitsWarper:()=>Z,TopPLogitsWarper:()=>J,WhisperTimeStampLogitsProcessor:()=>j});var F=I("./src/utils/generic.js");I("./src/utils/tensor.js");var ue=I("./src/utils/maths.js");class oe extends F.Callable{_call(B,G){throw Error("`_call` should be implemented in a subclass")}}class ge extends F.Callable{_call(B,G){throw Error("`_call` should be implemented in a subclass")}}class Ee extends F.Callable{constructor(){super(),this.processors=[]}push(B){this.processors.push(B)}extend(B){this.processors.push(...B)}_call(B,G){let P=G;for(const ye of this.processors)P=ye(B,P);return P}[Symbol.iterator](){return this.processors.values()}}class L extends oe{constructor(B){super(),this.bos_token_id=B}_call(B,G){for(let P=0;P<B.length;++P)if(B[P].length===1){const ye=G[P].data;ye.fill(-1/0),ye[this.bos_token_id]=0}return G}}class O extends oe{constructor(B,G){super(),this.max_length=B,this.eos_token_id=Array.isArray(G)?G:[G]}_call(B,G){for(let P=0;P<B.length;++P)if(B[P].length===this.max_length-1){const ye=G[P].data;ye.fill(-1/0);for(const Ce of this.eos_token_id)ye[Ce]=0}return G}}class M extends oe{constructor(B,G){super(),this.begin_suppress_tokens=B,this.begin_index=G}_call(B,G){for(let P=0;P<B.length;++P)if(B[P].length===this.begin_index){const ye=G[P].data;for(const Ce of this.begin_suppress_tokens)ye[Ce]=-1/0}return G}}class j extends oe{constructor(B,G){super(),this.eos_token_id=Array.isArray(B.eos_token_id)?B.eos_token_id[0]:B.eos_token_id,this.no_timestamps_token_id=B.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=G.length,G.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=B.max_initial_timestamp_index}_call(B,G){for(let P=0;P<B.length;++P){const ye=G[P].data;if(ye[this.no_timestamps_token_id]=-1/0,B[P].length===this.begin_index-1){ye.fill(-1/0),ye[this.timestamp_begin]=0;continue}const Ce=B[P].slice(this.begin_index),Pe=Ce.length>=1&&Ce[Ce.length-1]>=this.timestamp_begin,je=Ce.length<2||Ce[Ce.length-2]>=this.timestamp_begin;if(Pe&&(je?ye.subarray(this.timestamp_begin).fill(-1/0):ye.subarray(0,this.eos_token_id).fill(-1/0)),B[P].length===this.begin_index&&this.max_initial_timestamp_index!==null){const gt=this.timestamp_begin+this.max_initial_timestamp_index;ye.subarray(gt+1).fill(-1/0)}const De=(0,ue.log_softmax)(ye),ft=Math.log(De.subarray(this.timestamp_begin).map(Math.exp).reduce((gt,xe)=>gt+xe)),dt=(0,ue.max)(De.subarray(0,this.timestamp_begin))[0];ft>dt&&ye.subarray(0,this.timestamp_begin).fill(-1/0)}return G}}class K extends oe{constructor(B){super(),this.no_repeat_ngram_size=B}getNgrams(B){const G=B.length,P=[];for(let Ce=0;Ce<G+1-this.no_repeat_ngram_size;++Ce){const Pe=[];for(let je=0;je<this.no_repeat_ngram_size;++je)Pe.push(B[Ce+je]);P.push(Pe.map(Number))}const ye=new Map;for(const Ce of P){const Pe=Ce.slice(0,Ce.length-1),je=JSON.stringify(Pe),De=ye.get(je)??[];De.push(Ce[Ce.length-1]),ye.set(je,De)}return ye}getGeneratedNgrams(B,G){const P=G.slice(G.length+1-this.no_repeat_ngram_size,G.length);return B.get(JSON.stringify(P.map(Number)))??[]}calcBannedNgramTokens(B){const G=[];if(B.length+1<this.no_repeat_ngram_size)return G;{const P=this.getNgrams(B);return this.getGeneratedNgrams(P,B)}}_call(B,G){for(let P=0;P<B.length;++P){const ye=G[P].data,Ce=this.calcBannedNgramTokens(B[P]);for(const Pe of Ce)ye[Pe]=-1/0}return G}}class se extends oe{constructor(B){super(),this.penalty=B}_call(B,G){for(let P=0;P<B.length;++P){const ye=G[P].data;for(const Ce of B[P]){const Pe=Number(Ce);ye[Pe]<0?ye[Pe]*=this.penalty:ye[Pe]/=this.penalty}}return G}}class Te extends oe{constructor(B,G){super(),this.min_length=B,this.eos_token_id=Array.isArray(G)?G:[G]}_call(B,G){for(let P=0;P<B.length;++P)if(B[P].length<this.min_length){const ye=G[P].data;for(const Ce of this.eos_token_id)ye[Ce]=-1/0}return G}}class Me extends oe{constructor(B,G,P){super(),this.prompt_length_to_skip=B,this.min_new_tokens=G,this.eos_token_id=Array.isArray(P)?P:[P]}_call(B,G){for(let P=0;P<B.length;++P)if(B[P].length-this.prompt_length_to_skip<this.min_new_tokens){const Ce=G[P].data;for(const Pe of this.eos_token_id)Ce[Pe]=-1/0}return G}}class N extends oe{constructor(B,G){super(),this.bad_words_ids=B,this.eos_token_id=Array.isArray(G)?G:[G]}_call(B,G){for(let P=0;P<B.length;++P){const ye=G[P].data,Ce=B[P];for(const Pe of this.bad_words_ids){let je=!0;for(let De=1;De<=Pe.length-1&&Pe.length<Ce.length;++De)if(Pe.at(-De-1)!=Ce.at(-De)){je=!1;break}je&&(ye[Pe.at(-1)]=-1/0)}}return G}}class re extends oe{constructor(B){if(super(),B<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${B}.`);this.guidance_scale=B}_call(B,G){if(G.dims[0]!==2*B.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${G.dims[0]} for the logits and ${B.length} for the input ids.`);const P=B.length,ye=G.slice([0,P],null),Ce=G.slice([P,G.dims[0]],null);for(let Pe=0;Pe<Ce.data.length;++Pe)Ce.data[Pe]+=(ye.data[Pe]-Ce.data[Pe])*this.guidance_scale;return Ce}}class ve extends ge{constructor(B){super(),this.temperature=B}_call(B,G){const P=G.data;for(let ye=0;ye<P.length;++ye)P[ye]/=this.temperature;return G}}class J extends ge{constructor(B,{filter_value:G=-1/0,min_tokens_to_keep:P=1}={}){if(super(),B<0||B>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${B}`);if(!Number.isInteger(P)||P<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${P}`);this.top_p=B,this.filter_value=G,this.min_tokens_to_keep=P}}class Z extends ge{constructor(B,{filter_value:G=-1/0,min_tokens_to_keep:P=1}={}){if(super(),!Number.isInteger(B)||B<0)throw new Error(`\`top_k\` must be a positive integer, but is ${B}`);this.top_k=Math.max(B,P),this.filter_value=G}}},"./src/generation/logits_sampler.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{LogitsSampler:()=>ge});var F=I("./src/utils/generic.js"),ue=I("./src/utils/tensor.js"),oe=I("./src/utils/maths.js");I("./src/generation/configuration_utils.js");class ge extends F.Callable{constructor(j){super(),this.generation_config=j}async _call(j){return this.sample(j)}async sample(j){throw Error("sample should be implemented in subclasses.")}getLogits(j,K){let se=j.dims.at(-1),Te=j.data;if(K===-1)Te=Te.slice(-se);else{let Me=K*se;Te=Te.slice(Me,Me+se)}return Te}randomSelect(j){let K=0;for(let Te=0;Te<j.length;++Te)K+=j[Te];let se=Math.random()*K;for(let Te=0;Te<j.length;++Te)if(se-=j[Te],se<=0)return Te;return 0}static getSampler(j){if(j.do_sample)return new L(j);if(j.num_beams>1)return new O(j);if(j.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${j.num_return_sequences}.`);return new Ee(j)}}class Ee extends ge{async sample(j){const K=(0,oe.max)(j.data)[1];return[[BigInt(K),0]]}}class L extends ge{async sample(j){let K=j.dims.at(-1);this.generation_config.top_k>0&&(K=Math.min(this.generation_config.top_k,K));const[se,Te]=await(0,ue.topk)(j,K),Me=(0,oe.softmax)(se.data);return Array.from({length:this.generation_config.num_beams},()=>{const N=this.randomSelect(Me);return[Te.data[N],Math.log(Me[N])]})}}class O extends ge{async sample(j){let K=j.dims.at(-1);this.generation_config.top_k>0&&(K=Math.min(this.generation_config.top_k,K));const[se,Te]=await(0,ue.topk)(j,K),Me=(0,oe.softmax)(se.data);return Array.from({length:this.generation_config.num_beams},(N,re)=>[Te.data[re],Math.log(Me[re])])}}},"./src/generation/stopping_criteria.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{EosTokenCriteria:()=>Ee,InterruptableStoppingCriteria:()=>L,MaxLengthCriteria:()=>ge,StoppingCriteria:()=>ue,StoppingCriteriaList:()=>oe});var F=I("./src/utils/generic.js");class ue extends F.Callable{_call(M,j){throw Error("StoppingCriteria needs to be subclassed")}}class oe extends F.Callable{constructor(){super(),this.criteria=[]}push(M){this.criteria.push(M)}extend(M){M instanceof oe?M=M.criteria:M instanceof ue&&(M=[M]),this.criteria.push(...M)}_call(M,j){const K=new Array(M.length).fill(!1);for(const se of this.criteria){const Te=se(M,j);for(let Me=0;Me<K.length;++Me)K[Me]||=Te[Me]}return K}[Symbol.iterator](){return this.criteria.values()}}class ge extends ue{constructor(M,j=null){super(),this.max_length=M,this.max_position_embeddings=j}_call(M){return M.map(j=>j.length>=this.max_length)}}class Ee extends ue{constructor(M){super(),Array.isArray(M)||(M=[M]),this.eos_token_id=M}_call(M,j){return M.map(K=>{const se=K.at(-1);return this.eos_token_id.some(Te=>se==Te)})}}class L extends ue{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(M,j){return new Array(M.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{BaseStreamer:()=>ge,TextStreamer:()=>L,WhisperTextStreamer:()=>O});var F=I("./src/utils/core.js"),ue=I("./src/tokenizers.js"),oe=I("./src/env.js");class ge{put(j){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const Ee=oe.apis.IS_PROCESS_AVAILABLE?M=>xs.stdout.write(M):M=>console.log(M);class L extends ge{constructor(j,{skip_prompt:K=!1,callback_function:se=null,token_callback_function:Te=null,decode_kwargs:Me={},...N}={}){super(),this.tokenizer=j,this.skip_prompt=K,this.callback_function=se??Ee,this.token_callback_function=Te,this.decode_kwargs={...Me,...N},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(j){if(j.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}const K=j[0];this.token_callback_function?.(K),this.token_cache=(0,F.mergeArrays)(this.token_cache,K);const se=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let Te;se.endsWith(`
`)?(Te=se.slice(this.print_len),this.token_cache=[],this.print_len=0):se.length>0&&(0,ue.is_chinese_char)(se.charCodeAt(se.length-1))?(Te=se.slice(this.print_len),this.print_len+=Te.length):(Te=se.slice(this.print_len,se.lastIndexOf(" ")+1),this.print_len+=Te.length),this.on_finalized_text(Te,!1)}end(){let j;this.token_cache.length>0?(j=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):j="",this.next_tokens_are_prompt=!0,this.on_finalized_text(j,!0)}on_finalized_text(j,K){j.length>0&&this.callback_function?.(j),K&&this.callback_function===Ee&&oe.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.(`
`)}}class O extends L{constructor(j,{skip_prompt:K=!1,callback_function:se=null,token_callback_function:Te=null,on_chunk_start:Me=null,on_chunk_end:N=null,on_finalize:re=null,time_precision:ve=.02,skip_special_tokens:J=!0,decode_kwargs:Z={}}={}){super(j,{skip_prompt:K,callback_function:se,token_callback_function:Te,decode_kwargs:{skip_special_tokens:J,...Z}}),this.timestamp_begin=j.timestamp_begin,this.on_chunk_start=Me,this.on_chunk_end=N,this.on_finalize=re,this.time_precision=ve,this.waiting_for_timestamp=!1}put(j){if(j.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const K=j[0];if(K.length===1){const se=Number(K[0])-this.timestamp_begin;if(se>=0){const Te=se*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(Te):this.on_chunk_start?.(Te),this.waiting_for_timestamp=!this.waiting_for_timestamp,j=[[]]}}return super.put(j)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{ASTForAudioClassification:()=>rs,ASTModel:()=>qt,ASTPreTrainedModel:()=>Rn,AlbertForMaskedLM:()=>rr,AlbertForQuestionAnswering:()=>gi,AlbertForSequenceClassification:()=>_i,AlbertModel:()=>mi,AlbertPreTrainedModel:()=>Fn,AutoModel:()=>qd,AutoModelForAudioClassification:()=>ic,AutoModelForAudioFrameClassification:()=>nd,AutoModelForCTC:()=>rd,AutoModelForCausalLM:()=>Zd,AutoModelForDepthEstimation:()=>sd,AutoModelForDocumentQuestionAnswering:()=>id,AutoModelForImageClassification:()=>rc,AutoModelForImageFeatureExtraction:()=>uc,AutoModelForImageMatting:()=>oc,AutoModelForImageSegmentation:()=>nc,AutoModelForImageToImage:()=>ac,AutoModelForMaskGeneration:()=>td,AutoModelForMaskedLM:()=>Jd,AutoModelForNormalEstimation:()=>lc,AutoModelForObjectDetection:()=>Ju,AutoModelForQuestionAnswering:()=>ec,AutoModelForSemanticSegmentation:()=>zc,AutoModelForSeq2SeqLM:()=>Bc,AutoModelForSequenceClassification:()=>Hd,AutoModelForSpeechSeq2Seq:()=>Xd,AutoModelForTextToSpectrogram:()=>Qd,AutoModelForTextToWaveform:()=>Yd,AutoModelForTokenClassification:()=>Kd,AutoModelForUniversalSegmentation:()=>_s,AutoModelForVision2Seq:()=>tc,AutoModelForXVector:()=>sc,AutoModelForZeroShotObjectDetection:()=>ed,BartForConditionalGeneration:()=>ne,BartForSequenceClassification:()=>ce,BartModel:()=>V,BartPretrainedModel:()=>_,BaseModelOutput:()=>ct,BeitForImageClassification:()=>_l,BeitModel:()=>ml,BeitPreTrainedModel:()=>no,BertForMaskedLM:()=>Et,BertForQuestionAnswering:()=>ze,BertForSequenceClassification:()=>tt,BertForTokenClassification:()=>Q,BertModel:()=>Mt,BertPreTrainedModel:()=>Ve,BlenderbotForConditionalGeneration:()=>pr,BlenderbotModel:()=>_r,BlenderbotPreTrainedModel:()=>$t,BlenderbotSmallForConditionalGeneration:()=>yn,BlenderbotSmallModel:()=>Xr,BlenderbotSmallPreTrainedModel:()=>Cr,BloomForCausalLM:()=>Ga,BloomModel:()=>Wa,BloomPreTrainedModel:()=>ss,CLIPModel:()=>la,CLIPPreTrainedModel:()=>ii,CLIPSegForImageSegmentation:()=>_a,CLIPSegModel:()=>ma,CLIPSegPreTrainedModel:()=>Ss,CLIPTextModel:()=>yd,CLIPTextModelWithProjection:()=>bn,CLIPVisionModel:()=>bd,CLIPVisionModelWithProjection:()=>ua,CamembertForMaskedLM:()=>he,CamembertForQuestionAnswering:()=>sr,CamembertForSequenceClassification:()=>Se,CamembertForTokenClassification:()=>Ge,CamembertModel:()=>U,CamembertPreTrainedModel:()=>m,CausalLMOutput:()=>si,CausalLMOutputWithPast:()=>dc,ChineseCLIPModel:()=>fa,ChineseCLIPPreTrainedModel:()=>ha,ClapAudioModelWithProjection:()=>vu,ClapModel:()=>Mu,ClapPreTrainedModel:()=>ms,ClapTextModelWithProjection:()=>Fo,CodeGenForCausalLM:()=>Ea,CodeGenModel:()=>Ta,CodeGenPreTrainedModel:()=>xn,CohereForCausalLM:()=>Oa,CohereModel:()=>Fa,CoherePreTrainedModel:()=>Ns,ConvBertForMaskedLM:()=>z,ConvBertForQuestionAnswering:()=>it,ConvBertForSequenceClassification:()=>ae,ConvBertForTokenClassification:()=>be,ConvBertModel:()=>Y,ConvBertPreTrainedModel:()=>E,ConvNextForImageClassification:()=>Ul,ConvNextModel:()=>jl,ConvNextPreTrainedModel:()=>_o,ConvNextV2ForImageClassification:()=>Vl,ConvNextV2Model:()=>go,ConvNextV2PreTrainedModel:()=>Li,DPTForDepthEstimation:()=>xd,DPTModel:()=>Bl,DPTPreTrainedModel:()=>po,DebertaForMaskedLM:()=>we,DebertaForQuestionAnswering:()=>Ke,DebertaForSequenceClassification:()=>$e,DebertaForTokenClassification:()=>Be,DebertaModel:()=>R,DebertaPreTrainedModel:()=>Je,DebertaV2ForMaskedLM:()=>Tt,DebertaV2ForQuestionAnswering:()=>Ut,DebertaV2ForSequenceClassification:()=>Ft,DebertaV2ForTokenClassification:()=>xt,DebertaV2Model:()=>Ct,DebertaV2PreTrainedModel:()=>pt,DecisionTransformerModel:()=>Bu,DecisionTransformerPreTrainedModel:()=>Ou,DeiTForImageClassification:()=>El,DeiTModel:()=>Tl,DeiTPreTrainedModel:()=>lo,DepthAnythingForDepthEstimation:()=>Dl,DepthAnythingPreTrainedModel:()=>zl,DepthProForDepthEstimation:()=>Yn,DepthProPreTrainedModel:()=>Td,DetrForObjectDetection:()=>wl,DetrForSegmentation:()=>ls,DetrModel:()=>gl,DetrObjectDetectionOutput:()=>io,DetrPreTrainedModel:()=>as,DetrSegmentationOutput:()=>so,Dinov2ForImageClassification:()=>wo,Dinov2Model:()=>Wl,Dinov2PreTrainedModel:()=>Ri,DistilBertForMaskedLM:()=>Ht,DistilBertForQuestionAnswering:()=>vt,DistilBertForSequenceClassification:()=>Le,DistilBertForTokenClassification:()=>Re,DistilBertModel:()=>Nt,DistilBertPreTrainedModel:()=>Wt,DonutSwinModel:()=>mo,DonutSwinPreTrainedModel:()=>cs,EfficientNetForImageClassification:()=>Bd,EfficientNetModel:()=>Cu,EfficientNetPreTrainedModel:()=>Lo,ElectraForMaskedLM:()=>ot,ElectraForQuestionAnswering:()=>c,ElectraForSequenceClassification:()=>yt,ElectraForTokenClassification:()=>T,ElectraModel:()=>At,ElectraPreTrainedModel:()=>et,EsmForMaskedLM:()=>jr,EsmForSequenceClassification:()=>Er,EsmForTokenClassification:()=>Dr,EsmModel:()=>Or,EsmPreTrainedModel:()=>ar,FalconForCausalLM:()=>bu,FalconModel:()=>yu,FalconPreTrainedModel:()=>fs,FastViTForImageClassification:()=>ol,FastViTModel:()=>sl,FastViTPreTrainedModel:()=>Zs,Florence2ForConditionalGeneration:()=>$s,Florence2PreTrainedModel:()=>aa,GLPNForDepthEstimation:()=>fo,GLPNModel:()=>pn,GLPNPreTrainedModel:()=>Un,GPT2LMHeadModel:()=>kn,GPT2Model:()=>ga,GPT2PreTrainedModel:()=>ks,GPTBigCodeForCausalLM:()=>Bs,GPTBigCodeModel:()=>ns,GPTBigCodePreTrainedModel:()=>Os,GPTJForCausalLM:()=>Pn,GPTJModel:()=>Md,GPTJPreTrainedModel:()=>Fs,GPTNeoForCausalLM:()=>Ma,GPTNeoModel:()=>ba,GPTNeoPreTrainedModel:()=>As,GPTNeoXForCausalLM:()=>xa,GPTNeoXModel:()=>va,GPTNeoXPreTrainedModel:()=>Is,Gemma2ForCausalLM:()=>Ws,Gemma2Model:()=>Vs,Gemma2PreTrainedModel:()=>Us,GemmaForCausalLM:()=>za,GemmaModel:()=>Ba,GemmaPreTrainedModel:()=>js,GraniteForCausalLM:()=>Ia,GraniteModel:()=>Aa,GranitePreTrainedModel:()=>Rs,GroupViTModel:()=>il,GroupViTPreTrainedModel:()=>nl,HieraForImageClassification:()=>Sl,HieraModel:()=>$l,HieraPreTrainedModel:()=>Cl,HubertForCTC:()=>ou,HubertForSequenceClassification:()=>Po,HubertModel:()=>su,HubertPreTrainedModel:()=>Pd,ImageMattingOutput:()=>ld,JAISLMHeadModel:()=>ya,JAISModel:()=>wa,JAISPreTrainedModel:()=>Ps,LlamaForCausalLM:()=>$a,LlamaModel:()=>Ca,LlamaPreTrainedModel:()=>zs,LlavaForConditionalGeneration:()=>yi,LlavaPreTrainedModel:()=>oa,LongT5ForConditionalGeneration:()=>zi,LongT5Model:()=>Bi,LongT5PreTrainedModel:()=>wi,M2M100ForConditionalGeneration:()=>Cd,M2M100Model:()=>Xl,M2M100PreTrainedModel:()=>vo,MBartForCausalLM:()=>Dt,MBartForConditionalGeneration:()=>Pt,MBartForSequenceClassification:()=>zt,MBartModel:()=>st,MBartPreTrainedModel:()=>Oe,MPNetForMaskedLM:()=>ki,MPNetForQuestionAnswering:()=>Ii,MPNetForSequenceClassification:()=>Pi,MPNetForTokenClassification:()=>Ai,MPNetModel:()=>Si,MPNetPreTrainedModel:()=>Kn,MT5ForConditionalGeneration:()=>fe,MT5Model:()=>ts,MT5PreTrainedModel:()=>ri,MarianMTModel:()=>Kl,MarianModel:()=>Mo,MarianPreTrainedModel:()=>bo,MaskFormerForInstanceSegmentation:()=>ho,MaskFormerModel:()=>Zn,MaskFormerPreTrainedModel:()=>jn,MaskedLMOutput:()=>ln,MistralForCausalLM:()=>gu,MistralModel:()=>_u,MistralPreTrainedModel:()=>Io,MobileBertForMaskedLM:()=>Nr,MobileBertForQuestionAnswering:()=>$i,MobileBertForSequenceClassification:()=>hi,MobileBertModel:()=>zn,MobileBertPreTrainedModel:()=>Ar,MobileLLMForCausalLM:()=>ka,MobileLLMModel:()=>Sa,MobileLLMPreTrainedModel:()=>Ds,MobileNetV1ForImageClassification:()=>ku,MobileNetV1Model:()=>Su,MobileNetV1PreTrainedModel:()=>$u,MobileNetV2ForImageClassification:()=>Ld,MobileNetV2Model:()=>Pu,MobileNetV2PreTrainedModel:()=>jo,MobileNetV3ForImageClassification:()=>Iu,MobileNetV3Model:()=>Au,MobileNetV3PreTrainedModel:()=>Uo,MobileNetV4ForImageClassification:()=>Fu,MobileNetV4Model:()=>Rd,MobileNetV4PreTrainedModel:()=>Vo,MobileViTForImageClassification:()=>ll,MobileViTModel:()=>os,MobileViTPreTrainedModel:()=>Js,MobileViTV2ForImageClassification:()=>dl,MobileViTV2Model:()=>ul,MobileViTV2PreTrainedModel:()=>eo,ModelOutput:()=>Ue,Moondream1ForConditionalGeneration:()=>fr,MptForCausalLM:()=>vd,MptModel:()=>qa,MptPreTrainedModel:()=>Ks,MusicgenForCausalLM:()=>Dd,MusicgenForConditionalGeneration:()=>No,MusicgenModel:()=>zd,MusicgenPreTrainedModel:()=>Ro,NomicBertModel:()=>at,NomicBertPreTrainedModel:()=>nt,OPTForCausalLM:()=>Ka,OPTModel:()=>Ha,OPTPreTrainedModel:()=>Xs,OlmoForCausalLM:()=>An,OlmoModel:()=>Pa,OlmoPreTrainedModel:()=>Ls,OpenELMForCausalLM:()=>qs,OpenELMModel:()=>Da,OpenELMPreTrainedModel:()=>Gs,OwlViTForObjectDetection:()=>pl,OwlViTModel:()=>cl,OwlViTPreTrainedModel:()=>to,Owlv2ForObjectDetection:()=>fl,Owlv2Model:()=>hl,Owlv2PreTrainedModel:()=>ro,Phi3ForCausalLM:()=>Va,Phi3Model:()=>Ua,Phi3PreTrainedModel:()=>bi,PhiForCausalLM:()=>ja,PhiModel:()=>Na,PhiPreTrainedModel:()=>Hs,PreTrainedModel:()=>de,PretrainedMixin:()=>Lr,PvtForImageClassification:()=>Za,PvtModel:()=>Ya,PvtPreTrainedModel:()=>Qs,PyAnnoteForAudioFrameClassification:()=>Jl,PyAnnoteModel:()=>Zl,PyAnnotePreTrainedModel:()=>To,QuestionAnsweringModelOutput:()=>_n,Qwen2ForCausalLM:()=>is,Qwen2Model:()=>Ra,Qwen2PreTrainedModel:()=>La,RTDetrForObjectDetection:()=>bl,RTDetrModel:()=>yl,RTDetrObjectDetectionOutput:()=>Ml,RTDetrPreTrainedModel:()=>us,ResNetForImageClassification:()=>Pl,ResNetModel:()=>kl,ResNetPreTrainedModel:()=>Tn,RoFormerForMaskedLM:()=>mt,RoFormerForQuestionAnswering:()=>kt,RoFormerForSequenceClassification:()=>wt,RoFormerForTokenClassification:()=>Lt,RoFormerModel:()=>He,RoFormerPreTrainedModel:()=>Ze,RobertaForMaskedLM:()=>vn,RobertaForQuestionAnswering:()=>Zr,RobertaForSequenceClassification:()=>$n,RobertaForTokenClassification:()=>Ie,RobertaModel:()=>kr,RobertaPreTrainedModel:()=>hr,SamImageSegmentationOutput:()=>ji,SamModel:()=>yo,SamPreTrainedModel:()=>Hl,SapiensForDepthEstimation:()=>Rl,SapiensForNormalEstimation:()=>Nl,SapiensForSemanticSegmentation:()=>Ll,SapiensPreTrainedModel:()=>ds,SegformerForImageClassification:()=>zo,SegformerForSemanticSegmentation:()=>Tu,SegformerModel:()=>Fd,SegformerPreTrainedModel:()=>Bo,Seq2SeqLMOutput:()=>od,SequenceClassifierOutput:()=>cr,SiglipModel:()=>da,SiglipPreTrainedModel:()=>Nn,SiglipTextModel:()=>ca,SiglipVisionModel:()=>pa,SpeechT5ForSpeechToText:()=>pu,SpeechT5ForTextToSpeech:()=>hu,SpeechT5HifiGan:()=>Id,SpeechT5Model:()=>Ad,SpeechT5PreTrainedModel:()=>Ao,SqueezeBertForMaskedLM:()=>Cn,SqueezeBertForQuestionAnswering:()=>fi,SqueezeBertForSequenceClassification:()=>Dn,SqueezeBertModel:()=>Xn,SqueezeBertPreTrainedModel:()=>ei,StableLmForCausalLM:()=>Od,StableLmModel:()=>Eu,StableLmPreTrainedModel:()=>Do,Starcoder2ForCausalLM:()=>Vi,Starcoder2Model:()=>hs,Starcoder2PreTrainedModel:()=>wu,Swin2SRForImageSuperResolution:()=>Ol,Swin2SRModel:()=>Fl,Swin2SRPreTrainedModel:()=>co,SwinForImageClassification:()=>Il,SwinModel:()=>Al,SwinPreTrainedModel:()=>uo,T5ForConditionalGeneration:()=>Oi,T5Model:()=>Fi,T5PreTrainedModel:()=>ti,TableTransformerForObjectDetection:()=>xl,TableTransformerModel:()=>vl,TableTransformerObjectDetectionOutput:()=>ao,TableTransformerPreTrainedModel:()=>oo,TokenClassifierOutput:()=>rn,TrOCRForCausalLM:()=>mu,TrOCRPreTrainedModel:()=>fu,UniSpeechForCTC:()=>Co,UniSpeechForSequenceClassification:()=>tu,UniSpeechModel:()=>Eo,UniSpeechPreTrainedModel:()=>Mi,UniSpeechSatForAudioFrameClassification:()=>nu,UniSpeechSatForCTC:()=>Sd,UniSpeechSatForSequenceClassification:()=>ru,UniSpeechSatModel:()=>$o,UniSpeechSatPreTrainedModel:()=>Ui,ViTForImageClassification:()=>Ir,ViTMAEModel:()=>el,ViTMAEPreTrainedModel:()=>Ja,ViTMSNForImageClassification:()=>rl,ViTMSNModel:()=>tl,ViTMSNPreTrainedModel:()=>Ys,ViTModel:()=>Qa,ViTPreTrainedModel:()=>Xa,VisionEncoderDecoderModel:()=>Cs,VitMatteForImageMatting:()=>Di,VitMattePreTrainedModel:()=>al,VitsModel:()=>Oo,VitsModelOutput:()=>ud,VitsPreTrainedModel:()=>xu,Wav2Vec2BertForCTC:()=>ko,Wav2Vec2BertForSequenceClassification:()=>kd,Wav2Vec2BertModel:()=>iu,Wav2Vec2BertPreTrainedModel:()=>So,Wav2Vec2ForAudioFrameClassification:()=>Yl,Wav2Vec2ForCTC:()=>$d,Wav2Vec2ForSequenceClassification:()=>xo,Wav2Vec2Model:()=>Ql,Wav2Vec2PreTrainedModel:()=>Jn,WavLMForAudioFrameClassification:()=>cu,WavLMForCTC:()=>lu,WavLMForSequenceClassification:()=>uu,WavLMForXVector:()=>du,WavLMModel:()=>au,WavLMPreTrainedModel:()=>vi,WeSpeakerResNetModel:()=>eu,WeSpeakerResNetPreTrainedModel:()=>ps,WhisperForConditionalGeneration:()=>Es,WhisperModel:()=>Kt,WhisperPreTrainedModel:()=>lt,XLMForQuestionAnswering:()=>Qr,XLMForSequenceClassification:()=>Jt,XLMForTokenClassification:()=>cn,XLMModel:()=>Sn,XLMPreTrainedModel:()=>an,XLMRobertaForMaskedLM:()=>Ot,XLMRobertaForQuestionAnswering:()=>Qn,XLMRobertaForSequenceClassification:()=>br,XLMRobertaForTokenClassification:()=>ni,XLMRobertaModel:()=>Br,XLMRobertaPreTrainedModel:()=>gr,XLMWithLMHeadModel:()=>Ln,XVectorOutput:()=>ad,YolosForObjectDetection:()=>ql,YolosModel:()=>Gl,YolosObjectDetectionOutput:()=>Ed,YolosPreTrainedModel:()=>Ni});var F=I("./src/configs.js"),ue=I("./src/backends/onnx.js"),oe=I("./src/utils/dtypes.js"),ge=I("./src/utils/generic.js"),Ee=I("./src/utils/core.js"),L=I("./src/utils/hub.js"),O=I("./src/utils/constants.js"),M=I("./src/generation/logits_process.js"),j=I("./src/generation/configuration_utils.js"),K=I("./src/utils/tensor.js"),se=I("./src/utils/maths.js"),Te=I("./src/generation/stopping_criteria.js"),Me=I("./src/generation/logits_sampler.js"),N=I("./src/env.js"),re=I("./src/models/whisper/generation_whisper.js"),ve=I("./src/models/whisper/common_whisper.js");const J={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7},Z=new Map,W=new Map,B=new Map;async function G(g,w,te){const Ne=te.config?.["transformers.js_config"]??{};let Xe=te.device??Ne.device;Xe&&typeof Xe!="string"&&(Xe.hasOwnProperty(w)?Xe=Xe[w]:(console.warn(`device not specified for "${w}". Using the default device.`),Xe=null));const ut=Xe??(N.apis.IS_NODE_ENV?"cpu":"wasm"),Bt=(0,ue.deviceToExecutionProviders)(ut);let It=te.dtype??Ne.dtype;typeof It!="string"&&(It&&It.hasOwnProperty(w)?It=It[w]:(It=oe.DEFAULT_DEVICE_DTYPE_MAPPING[ut]??oe.DATA_TYPES.fp32,console.warn(`dtype not specified for "${w}". Using the default dtype (${It}) for this device (${ut}).`)));const Yt=It;if(oe.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Yt)){if(Yt===oe.DATA_TYPES.fp16&&ut==="webgpu"&&!await(0,oe.isWebGpuFp16Supported)())throw new Error(`The device (${ut}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Yt}. Should be one of: ${Object.keys(oe.DATA_TYPES).join(", ")}`);const wr=Ne.kv_cache_dtype?typeof Ne.kv_cache_dtype=="string"?Ne.kv_cache_dtype:Ne.kv_cache_dtype[Yt]??"float32":void 0;if(wr&&!["float32","float16"].includes(wr))throw new Error(`Invalid kv_cache_dtype: ${wr}. Should be one of: float32, float16`);const Ur={dtype:Yt,kv_cache_dtype:wr},zr=oe.DEFAULT_DTYPE_SUFFIX_MAPPING[Yt],$r=`${te.subfolder??""}/${w}${zr}.onnx`,tr={...te.session_options};tr.executionProviders??=Bt;const tn=Ne.free_dimension_overrides;tn?tr.freeDimensionOverrides??=tn:ut.startsWith("webnn")&&!tr.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const Mr=(0,L.getModelFile)(g,$r,!0,te),vr=te.use_external_data_format??Ne.use_external_data_format;let Vr=[];if(vr&&(vr===!0||typeof vr=="object"&&vr.hasOwnProperty(w)&&vr[w]===!0)){if(N.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const Gr=`${w}${zr}.onnx_data`,nn=`${te.subfolder??""}/${Gr}`;Vr.push(new Promise(async(hn,Jr)=>{const sn=await(0,L.getModelFile)(g,nn,!0,te);hn({path:Gr,data:sn})}))}else tr.externalData!==void 0&&(Vr=tr.externalData.map(async Gr=>{if(typeof Gr.data=="string"){const nn=await(0,L.getModelFile)(g,Gr.data,!0,te);return{...Gr,data:nn}}return Gr}));if(Vr.length>0&&(tr.externalData=await Promise.all(Vr)),ut==="webgpu"){const Gr=(0,F.getKeyValueShapes)(te.config,{prefix:"present"});if(Object.keys(Gr).length>0&&!(0,ue.isONNXProxy)()){const nn={};for(const hn in Gr)nn[hn]="gpu-buffer";tr.preferredOutputLocation=nn}}return{buffer:await Mr,session_options:tr,session_config:Ur}}async function P(g,w,te){return Object.fromEntries(await Promise.all(Object.keys(w).map(async Ne=>{const{buffer:Xe,session_options:ut,session_config:Bt}=await G(g,w[Ne],te),It=await(0,ue.createInferenceSession)(Xe,ut,Bt);return[Ne,It]})))}async function ye(g,w,te){return Object.fromEntries(await Promise.all(Object.keys(w).map(async Ne=>{const Xe=await(0,L.getModelJSON)(g,w[Ne],!1,te);return[Ne,Xe]})))}function Ce(g,w){const te=Object.create(null),Ne=[];for(const Bt of g.inputNames){const It=w[Bt];if(!(It instanceof K.Tensor)){Ne.push(Bt);continue}te[Bt]=(0,ue.isONNXProxy)()?It.clone():It}if(Ne.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${Ne.join(", ")}.`);const Xe=Object.keys(w).length,ut=g.inputNames.length;if(Xe>ut){let Bt=Object.keys(w).filter(It=>!g.inputNames.includes(It));console.warn(`WARNING: Too many inputs were provided (${Xe} > ${ut}). The following inputs will be ignored: "${Bt.join(", ")}".`)}return te}async function Pe(g,w){const te=Ce(g,w);try{const Ne=Object.fromEntries(Object.entries(te).map(([ut,Bt])=>[ut,Bt.ort_tensor]));let Xe=await g.run(Ne);return Xe=je(Xe),Xe}catch(Ne){throw console.error(`An error occurred during model execution: "${Ne}".`),console.error("Inputs given to model:",te),Ne}}function je(g){for(let w in g)(0,ue.isONNXTensor)(g[w])?g[w]=new K.Tensor(g[w]):typeof g[w]=="object"&&je(g[w]);return g}function De(g){if(g instanceof K.Tensor)return g;if(g.length===0)throw Error("items must be non-empty");if(Array.isArray(g[0])){if(g.some(w=>w.length!==g[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new K.Tensor("int64",BigInt64Array.from(g.flat().map(w=>BigInt(w))),[g.length,g[0].length])}else return new K.Tensor("int64",BigInt64Array.from(g.map(w=>BigInt(w))),[1,g.length])}function ft(g){return new K.Tensor("bool",[g],[1])}async function dt(g,w){let{encoder_outputs:te,input_ids:Ne,decoder_input_ids:Xe,...ut}=w;if(!te){const It=(0,Ee.pick)(w,g.sessions.model.inputNames);te=(await gt(g,It)).last_hidden_state}return ut.input_ids=Xe,ut.encoder_hidden_states=te,g.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(ut.encoder_attention_mask=w.attention_mask),await xe(g,ut,!0)}async function gt(g,w){const te=g.sessions.model,Ne=(0,Ee.pick)(w,te.inputNames);if(te.inputNames.includes("inputs_embeds")&&!Ne.inputs_embeds){if(!w.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");Ne.inputs_embeds=await g.encode_text({input_ids:w.input_ids})}return te.inputNames.includes("token_type_ids")&&!Ne.token_type_ids&&(Ne.token_type_ids=new K.Tensor("int64",new BigInt64Array(Ne.input_ids.data.length),Ne.input_ids.dims)),await Pe(te,Ne)}async function xe(g,w,te=!1){const Ne=g.sessions[te?"decoder_model_merged":"model"],{past_key_values:Xe,...ut}=w;Ne.inputNames.includes("use_cache_branch")&&(ut.use_cache_branch=ft(!!Xe)),Ne.inputNames.includes("position_ids")&&ut.attention_mask&&!ut.position_ids&&(ut.position_ids=_e(ut,Xe)),g.addPastKeyValues(ut,Xe);const Bt=(0,Ee.pick)(ut,Ne.inputNames);return await Pe(Ne,Bt)}async function q(g,{input_ids:w=null,attention_mask:te=null,pixel_values:Ne=null,position_ids:Xe=null,inputs_embeds:ut=null,past_key_values:Bt=null,generation_config:It=null,logits_processor:Yt=null,...wr}){if(!ut){if(ut=await g.encode_text({input_ids:w}),Ne&&w.dims[1]!==1){const zr=await g.encode_image({pixel_values:Ne});({inputs_embeds:ut,attention_mask:te}=g._merge_input_ids_with_image_features({image_features:zr,inputs_embeds:ut,input_ids:w,attention_mask:te}))}else if(Bt&&Ne&&w.dims[1]===1){const zr=w.dims[1],$r=Object.values(Bt)[0].dims.at(-2);te=(0,K.cat)([(0,K.ones)([w.dims[0],$r]),te.slice(null,[te.dims[1]-zr,te.dims[1]])],1)}}return await xe(g,{inputs_embeds:ut,past_key_values:Bt,attention_mask:te,position_ids:Xe,generation_config:It,logits_processor:Yt},!0)}function _e(g,w=null){const{input_ids:te,inputs_embeds:Ne,attention_mask:Xe}=g,[ut,Bt]=Xe.dims,It=new BigInt64Array(Xe.data.length);for(let wr=0;wr<ut;++wr){const Ur=wr*Bt;let zr=BigInt(0);for(let $r=0;$r<Bt;++$r){const tr=Ur+$r;Xe.data[tr]===0n?It[tr]=BigInt(1):(It[tr]=zr,zr+=Xe.data[tr])}}let Yt=new K.Tensor("int64",It,Xe.dims);if(w){const wr=-(te??Ne).dims.at(1);Yt=Yt.slice(null,[wr,null])}return Yt}function ke(g,w,te,Ne){if(te.past_key_values){const Xe=Object.values(te.past_key_values)[0].dims.at(-2),{input_ids:ut,attention_mask:Bt}=te;if(!(Bt&&Bt.dims[1]>ut.dims[1])){if(Xe<ut.dims[1])te.input_ids=ut.slice(null,[Xe,null]);else if(g.config.image_token_index!=null&&ut.data.some(It=>It==g.config.image_token_index)){const It=g.config.num_image_tokens;if(!It)throw new Error("`num_image_tokens` is missing in the model configuration.");const Yt=ut.dims[1]-(Xe-It);te.input_ids=ut.slice(null,[-Yt,null]),te.attention_mask=(0,K.ones)([1,Xe+Yt])}}}return te}function Qe(g,w,te,Ne){return te.past_key_values&&(w=w.map(Xe=>[Xe.at(-1)])),{...te,decoder_input_ids:De(w)}}function _t(g,...w){return g.config.is_encoder_decoder?Qe(g,...w):ke(g,...w)}class de extends ge.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(w,te,Ne){super(),this.config=w,this.sessions=te,this.configs=Ne;const Xe=B.get(this.constructor),ut=Z.get(Xe);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,ut){case J.DecoderOnly:this.can_generate=!0,this._forward=xe,this._prepare_inputs_for_generation=ke;break;case J.Seq2Seq:case J.Vision2Seq:case J.Musicgen:this.can_generate=!0,this._forward=dt,this._prepare_inputs_for_generation=Qe;break;case J.EncoderDecoder:this._forward=dt;break;case J.ImageTextToText:this.can_generate=!0,this._forward=q,this._prepare_inputs_for_generation=_t;break;default:this._forward=gt;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const w=[];for(const te of Object.values(this.sessions))te?.handler?.dispose&&w.push(te.handler.dispose());return await Promise.all(w)}static async from_pretrained(w,{progress_callback:te=null,config:Ne=null,cache_dir:Xe=null,local_files_only:ut=!1,revision:Bt="main",model_file_name:It=null,subfolder:Yt="onnx",device:wr=null,dtype:Ur=null,use_external_data_format:zr=null,session_options:$r={}}={}){let tr={progress_callback:te,config:Ne,cache_dir:Xe,local_files_only:ut,revision:Bt,model_file_name:It,subfolder:Yt,device:wr,dtype:Ur,use_external_data_format:zr,session_options:$r};const tn=B.get(this),Mr=Z.get(tn);Ne=tr.config=await F.AutoConfig.from_pretrained(w,tr);let vr;if(Mr===J.DecoderOnly)vr=await Promise.all([P(w,{model:tr.model_file_name??"model"},tr),ye(w,{generation_config:"generation_config.json"},tr)]);else if(Mr===J.Seq2Seq||Mr===J.Vision2Seq)vr=await Promise.all([P(w,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},tr),ye(w,{generation_config:"generation_config.json"},tr)]);else if(Mr===J.MaskGeneration)vr=await Promise.all([P(w,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},tr)]);else if(Mr===J.EncoderDecoder)vr=await Promise.all([P(w,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},tr)]);else if(Mr===J.ImageTextToText){const Vr={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Ne.is_encoder_decoder&&(Vr.model="encoder_model"),vr=await Promise.all([P(w,Vr,tr),ye(w,{generation_config:"generation_config.json"},tr)])}else Mr===J.Musicgen?vr=await Promise.all([P(w,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},tr),ye(w,{generation_config:"generation_config.json"},tr)]):(Mr!==J.EncoderOnly&&console.warn(`Model type for '${tn??Ne?.model_type}' not found, assuming encoder-only architecture. Please report this at ${O.GITHUB_ISSUE_URL}.`),vr=await Promise.all([P(w,{model:tr.model_file_name??"model"},tr)]));return new this(Ne,...vr)}async _call(w){return await this.forward(w)}async forward(w){return await this._forward(this,w)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(w){const te=new M.LogitsProcessorList;return w.temperature!==null&&w.temperature!==1&&te.push(new M.TemperatureLogitsWarper(w.temperature)),w.top_k!==null&&w.top_k!==0&&te.push(new M.TopKLogitsWarper(w.top_k)),w.top_p!==null&&w.top_p<1&&te.push(new M.TopPLogitsWarper(w.top_p)),te}_get_logits_processor(w,te,Ne=null){const Xe=new M.LogitsProcessorList;if(w.repetition_penalty!==null&&w.repetition_penalty!==1&&Xe.push(new M.RepetitionPenaltyLogitsProcessor(w.repetition_penalty)),w.no_repeat_ngram_size!==null&&w.no_repeat_ngram_size>0&&Xe.push(new M.NoRepeatNGramLogitsProcessor(w.no_repeat_ngram_size)),w.bad_words_ids!==null&&Xe.push(new M.NoBadWordsLogitsProcessor(w.bad_words_ids,w.eos_token_id)),w.min_length!==null&&w.eos_token_id!==null&&w.min_length>0&&Xe.push(new M.MinLengthLogitsProcessor(w.min_length,w.eos_token_id)),w.min_new_tokens!==null&&w.eos_token_id!==null&&w.min_new_tokens>0&&Xe.push(new M.MinNewTokensLengthLogitsProcessor(te,w.min_new_tokens,w.eos_token_id)),w.forced_bos_token_id!==null&&Xe.push(new M.ForcedBOSTokenLogitsProcessor(w.forced_bos_token_id)),w.forced_eos_token_id!==null&&Xe.push(new M.ForcedEOSTokenLogitsProcessor(w.max_length,w.forced_eos_token_id)),w.begin_suppress_tokens!==null){const ut=te>1||w.forced_bos_token_id===null?te:te+1;Xe.push(new M.SuppressTokensAtBeginLogitsProcessor(w.begin_suppress_tokens,ut))}return w.guidance_scale!==null&&w.guidance_scale>1&&Xe.push(new M.ClassifierFreeGuidanceLogitsProcessor(w.guidance_scale)),Ne!==null&&Xe.extend(Ne),Xe}_prepare_generation_config(w,te,Ne=j.GenerationConfig){const Xe={...this.config};for(const Bt of["decoder","generator","text_config"])Bt in Xe&&Object.assign(Xe,Xe[Bt]);const ut=new Ne(Xe);return Object.assign(ut,this.generation_config??{}),w&&Object.assign(ut,w),te&&Object.assign(ut,(0,Ee.pick)(te,Object.getOwnPropertyNames(ut))),ut}_get_stopping_criteria(w,te=null){const Ne=new Te.StoppingCriteriaList;return w.max_length!==null&&Ne.push(new Te.MaxLengthCriteria(w.max_length,this.config.max_position_embeddings??null)),w.eos_token_id!==null&&Ne.push(new Te.EosTokenCriteria(w.eos_token_id)),te&&Ne.extend(te),Ne}_validate_model_class(){if(!this.can_generate){const w=[Ho,Ko,qo,Wo],te=B.get(this.constructor),Ne=new Set,Xe=this.config.model_type;for(const Bt of w){const It=Bt.get(Xe);It&&Ne.add(It[0])}let ut=`The current model class (${te}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw Ne.size>0&&(ut+=` Please use the following class instead: ${[...Ne].join(", ")}`),Error(ut)}}prepare_inputs_for_generation(...w){return this._prepare_inputs_for_generation(this,...w)}_update_model_kwargs_for_generation({generated_input_ids:w,outputs:te,model_inputs:Ne,is_encoder_decoder:Xe}){return Ne.past_key_values=this.getPastKeyValues(te,Ne.past_key_values),Ne.input_ids=new K.Tensor("int64",w.flat(),[w.length,1]),Xe||(Ne.attention_mask=(0,K.cat)([Ne.attention_mask,(0,K.ones)([Ne.attention_mask.dims[0],1])],1)),Ne.position_ids=null,Ne}_prepare_model_inputs({inputs:w,bos_token_id:te,model_kwargs:Ne}){const Xe=(0,Ee.pick)(Ne,this.forward_params),ut=this.main_input_name;if(ut in Xe){if(w)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else Xe[ut]=w;return{inputs_tensor:Xe[ut],model_inputs:Xe,model_input_name:ut}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:w,model_inputs:te,model_input_name:Ne,generation_config:Xe}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!te.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:Bt,pixel_values:It,attention_mask:Yt,...wr}=te,Ur=await this._prepare_inputs_embeds(te);te={...wr,...(0,Ee.pick)(Ur,["inputs_embeds","attention_mask"])}}let{last_hidden_state:ut}=await gt(this,te);if(Xe.guidance_scale!==null&&Xe.guidance_scale>1)ut=(0,K.cat)([ut,(0,K.full_like)(ut,0)],0),"attention_mask"in te&&(te.attention_mask=(0,K.cat)([te.attention_mask,(0,K.zeros_like)(te.attention_mask)],0));else if(te.decoder_input_ids){const Bt=De(te.decoder_input_ids).dims[0];if(Bt!==ut.dims[0]){if(ut.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${ut.dims[0]}) than the decoder inputs (${Bt}).`);ut=(0,K.cat)(Array.from({length:Bt},()=>ut),0)}}return te.encoder_outputs=ut,te}_prepare_decoder_input_ids_for_generation({batch_size:w,model_input_name:te,model_kwargs:Ne,decoder_start_token_id:Xe,bos_token_id:ut,generation_config:Bt}){let{decoder_input_ids:It,...Yt}=Ne;if(!(It instanceof K.Tensor)){if(It)Array.isArray(It[0])||(It=Array.from({length:w},()=>It));else if(Xe??=ut,this.config.model_type==="musicgen")It=Array.from({length:w*this.config.decoder.num_codebooks},()=>[Xe]);else if(Array.isArray(Xe)){if(Xe.length!==w)throw new Error(`\`decoder_start_token_id\` expcted to have length ${w} but got ${Xe.length}`);It=Xe}else It=Array.from({length:w},()=>[Xe]);It=De(It)}return Ne.decoder_attention_mask=(0,K.ones_like)(It),{input_ids:It,model_inputs:Yt}}async generate({inputs:w=null,generation_config:te=null,logits_processor:Ne=null,stopping_criteria:Xe=null,streamer:ut=null,...Bt}){this._validate_model_class(),te=this._prepare_generation_config(te,Bt);let{inputs_tensor:It,model_inputs:Yt,model_input_name:wr}=this._prepare_model_inputs({inputs:w,model_kwargs:Bt});const Ur=this.config.is_encoder_decoder;Ur&&("encoder_outputs"in Yt||(Yt=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:It,model_inputs:Yt,model_input_name:wr,generation_config:te})));let zr;Ur?{input_ids:zr,model_inputs:Yt}=this._prepare_decoder_input_ids_for_generation({batch_size:Yt[wr].dims.at(0),model_input_name:wr,model_kwargs:Yt,decoder_start_token_id:te.decoder_start_token_id,bos_token_id:te.bos_token_id,generation_config:te}):zr=Yt[wr];let $r=zr.dims.at(-1);te.max_new_tokens!==null&&(te.max_length=$r+te.max_new_tokens);const tr=this._get_logits_processor(te,$r,Ne),tn=this._get_stopping_criteria(te,Xe),Mr=Yt[wr].dims.at(0),vr=Me.LogitsSampler.getSampler(te),Vr=new Array(Mr).fill(0),un=zr.tolist();ut&&ut.put(un);let Gr,nn={};for(;;){if(Yt=this.prepare_inputs_for_generation(un,Yt,te),Gr=await this.forward(Yt),te.output_attentions&&te.return_dict_in_generate){const On=this.getAttentions(Gr);for(const qi in On)qi in nn||(nn[qi]=[]),nn[qi].push(On[qi])}const sn=Gr.logits.slice(null,-1,null),Yo=tr(un,sn),Gi=[];for(let On=0;On<Yo.dims.at(0);++On){const qi=Yo[On],cc=await vr(qi);for(const[pc,hc]of cc){const fc=BigInt(pc);Vr[On]+=hc,un[On].push(fc),Gi.push([fc]);break}}if(ut&&ut.put(Gi),tn(un).every(On=>On))break;Yt=this._update_model_kwargs_for_generation({generated_input_ids:Gi,outputs:Gr,model_inputs:Yt,is_encoder_decoder:Ur})}ut&&ut.end();const hn=this.getPastKeyValues(Gr,Yt.past_key_values,!0),Jr=new K.Tensor("int64",un.flat(),[un.length,un[0].length]);if(te.return_dict_in_generate)return{sequences:Jr,past_key_values:hn,...nn};for(const sn of Object.values(Gr))sn.location==="gpu-buffer"&&sn.dispose();return Jr}getPastKeyValues(w,te,Ne=!1){const Xe=Object.create(null);for(const ut in w)if(ut.startsWith("present")){const Bt=ut.replace("present","past_key_values"),It=ut.includes("encoder");if(It&&te?Xe[Bt]=te[Bt]:Xe[Bt]=w[ut],te&&(!It||Ne)){const Yt=te[Bt];Yt.location==="gpu-buffer"&&Yt.dispose()}}return Xe}getAttentions(w){const te={};for(const Ne of["cross_attentions","encoder_attentions","decoder_attentions"])for(const Xe in w)Xe.startsWith(Ne)&&(Ne in te||(te[Ne]=[]),te[Ne].push(w[Xe]));return te}addPastKeyValues(w,te){if(te)Object.assign(w,te);else{const Xe=(this.sessions.decoder_model_merged??this.sessions.model)?.config?.kv_cache_dtype??"float32",ut=Xe==="float16"?new Uint16Array:[],Bt=(0,F.getKeyValueShapes)(this.config);for(const It in Bt)w[It]=new K.Tensor(Xe,ut,Bt[It])}}async encode_image({pixel_values:w}){const te=(await Pe(this.sessions.vision_encoder,{pixel_values:w})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${te.dims[1]}).`),this.config.num_image_tokens=te.dims[1]),te}async encode_text({input_ids:w}){return(await Pe(this.sessions.embed_tokens,{input_ids:w})).inputs_embeds}}class Ue{}class ct extends Ue{constructor({last_hidden_state:w,hidden_states:te=null,attentions:Ne=null}){super(),this.last_hidden_state=w,this.hidden_states=te,this.attentions=Ne}}class Ve extends de{}class Mt extends Ve{}class Et extends Ve{async _call(w){return new ln(await super._call(w))}}class tt extends Ve{async _call(w){return new cr(await super._call(w))}}class Q extends Ve{async _call(w){return new rn(await super._call(w))}}class ze extends Ve{async _call(w){return new _n(await super._call(w))}}class nt extends de{}class at extends nt{}class Ze extends de{}class He extends Ze{}class mt extends Ze{async _call(w){return new ln(await super._call(w))}}class wt extends Ze{async _call(w){return new cr(await super._call(w))}}class Lt extends Ze{async _call(w){return new rn(await super._call(w))}}class kt extends Ze{async _call(w){return new _n(await super._call(w))}}class E extends de{}class Y extends E{}class z extends E{async _call(w){return new ln(await super._call(w))}}class ae extends E{async _call(w){return new cr(await super._call(w))}}class be extends E{async _call(w){return new rn(await super._call(w))}}class it extends E{async _call(w){return new _n(await super._call(w))}}class et extends de{}class At extends et{}class ot extends et{async _call(w){return new ln(await super._call(w))}}class yt extends et{async _call(w){return new cr(await super._call(w))}}class T extends et{async _call(w){return new rn(await super._call(w))}}class c extends et{async _call(w){return new _n(await super._call(w))}}class m extends de{}class U extends m{}class he extends m{async _call(w){return new ln(await super._call(w))}}class Se extends m{async _call(w){return new cr(await super._call(w))}}class Ge extends m{async _call(w){return new rn(await super._call(w))}}class sr extends m{async _call(w){return new _n(await super._call(w))}}class Je extends de{}class R extends Je{}class we extends Je{async _call(w){return new ln(await super._call(w))}}class $e extends Je{async _call(w){return new cr(await super._call(w))}}class Be extends Je{async _call(w){return new rn(await super._call(w))}}class Ke extends Je{async _call(w){return new _n(await super._call(w))}}class pt extends de{}class Ct extends pt{}class Tt extends pt{async _call(w){return new ln(await super._call(w))}}class Ft extends pt{async _call(w){return new cr(await super._call(w))}}class xt extends pt{async _call(w){return new rn(await super._call(w))}}class Ut extends pt{async _call(w){return new _n(await super._call(w))}}class Wt extends de{}class Nt extends Wt{}class Le extends Wt{async _call(w){return new cr(await super._call(w))}}class Re extends Wt{async _call(w){return new rn(await super._call(w))}}class vt extends Wt{async _call(w){return new _n(await super._call(w))}}class Ht extends Wt{async _call(w){return new ln(await super._call(w))}}class ar extends de{}class Or extends ar{}class jr extends ar{async _call(w){return new ln(await super._call(w))}}class Er extends ar{async _call(w){return new cr(await super._call(w))}}class Dr extends ar{async _call(w){return new rn(await super._call(w))}}class Ar extends de{}class zn extends Ar{}class Nr extends Ar{async _call(w){return new ln(await super._call(w))}}class hi extends Ar{async _call(w){return new cr(await super._call(w))}}class $i extends Ar{async _call(w){return new _n(await super._call(w))}}class Kn extends de{}class Si extends Kn{}class ki extends Kn{async _call(w){return new ln(await super._call(w))}}class Pi extends Kn{async _call(w){return new cr(await super._call(w))}}class Ai extends Kn{async _call(w){return new rn(await super._call(w))}}class Ii extends Kn{async _call(w){return new _n(await super._call(w))}}class ei extends de{}class Xn extends ei{}class Cn extends ei{async _call(w){return new ln(await super._call(w))}}class Dn extends ei{async _call(w){return new cr(await super._call(w))}}class fi extends ei{async _call(w){return new _n(await super._call(w))}}class Fn extends de{}class mi extends Fn{}class _i extends Fn{async _call(w){return new cr(await super._call(w))}}class gi extends Fn{async _call(w){return new _n(await super._call(w))}}class rr extends Fn{async _call(w){return new ln(await super._call(w))}}class ti extends de{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Fi extends ti{}class Oi extends ti{}class wi extends de{}class Bi extends wi{}class zi extends wi{}class ri extends de{}class ts extends ri{}class fe extends ri{}class _ extends de{}class V extends _{}class ne extends _{}class ce extends _{async _call(w){return new cr(await super._call(w))}}class Oe extends de{}class st extends Oe{}class Pt extends Oe{}class zt extends Oe{async _call(w){return new cr(await super._call(w))}}class Dt extends Oe{}class $t extends de{}class _r extends $t{}class pr extends $t{}class Cr extends de{}class Xr extends Cr{}class yn extends Cr{}class hr extends de{}class kr extends hr{}class vn extends hr{async _call(w){return new ln(await super._call(w))}}class $n extends hr{async _call(w){return new cr(await super._call(w))}}class Ie extends hr{async _call(w){return new rn(await super._call(w))}}class Zr extends hr{async _call(w){return new _n(await super._call(w))}}class an extends de{}class Sn extends an{}class Ln extends an{async _call(w){return new ln(await super._call(w))}}class Jt extends an{async _call(w){return new cr(await super._call(w))}}class cn extends an{async _call(w){return new rn(await super._call(w))}}class Qr extends an{async _call(w){return new _n(await super._call(w))}}class gr extends de{}class Br extends gr{}class Ot extends gr{async _call(w){return new ln(await super._call(w))}}class br extends gr{async _call(w){return new cr(await super._call(w))}}class ni extends gr{async _call(w){return new rn(await super._call(w))}}class Qn extends gr{async _call(w){return new _n(await super._call(w))}}class Rn extends de{}class qt extends Rn{}class rs extends Rn{}class lt extends de{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Kt extends lt{}class Es extends lt{_prepare_generation_config(w,te){return super._prepare_generation_config(w,te,re.WhisperGenerationConfig)}_retrieve_init_tokens(w){const te=[w.decoder_start_token_id];let Ne=w.language;const Xe=w.task;if(w.is_multilingual){Ne||(console.warn("No language specified - defaulting to English (en)."),Ne="en");const Bt=`<|${(0,ve.whisper_language_to_code)(Ne)}|>`;te.push(w.lang_to_id[Bt]),te.push(w.task_to_id[Xe??"transcribe"])}else if(Ne||Xe)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!w.return_timestamps&&w.no_timestamps_token_id&&te.at(-1)!==w.no_timestamps_token_id?te.push(w.no_timestamps_token_id):w.return_timestamps&&te.at(-1)===w.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),te.pop()),te.filter(ut=>ut!=null)}async generate({inputs:w=null,generation_config:te=null,logits_processor:Ne=null,stopping_criteria:Xe=null,...ut}){te=this._prepare_generation_config(te,ut);const Bt=ut.decoder_input_ids??this._retrieve_init_tokens(te);if(te.return_timestamps&&(Ne??=new M.LogitsProcessorList,Ne.push(new M.WhisperTimeStampLogitsProcessor(te,Bt))),te.begin_suppress_tokens&&(Ne??=new M.LogitsProcessorList,Ne.push(new M.SuppressTokensAtBeginLogitsProcessor(te.begin_suppress_tokens,Bt.length))),te.return_token_timestamps){if(!te.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");te.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),te.output_attentions=!0,te.return_dict_in_generate=!0}const It=await super.generate({inputs:w,generation_config:te,logits_processor:Ne,decoder_input_ids:Bt,...ut});return te.return_token_timestamps&&(It.token_timestamps=this._extract_token_timestamps(It,te.alignment_heads,te.num_frames)),It}_extract_token_timestamps(w,te,Ne=null,Xe=.02){if(!w.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");Ne==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let ut=this.config.median_filter_width;ut===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),ut=7);const Bt=w.cross_attentions,It=Array.from({length:this.config.decoder_layers},(Mr,vr)=>(0,K.cat)(Bt.map(Vr=>Vr[vr]),2)),Yt=(0,K.stack)(te.map(([Mr,vr])=>{if(Mr>=It.length)throw new Error(`Layer index ${Mr} is out of bounds for cross attentions (length ${It.length}).`);return Ne?It[Mr].slice(null,vr,null,[0,Ne]):It[Mr].slice(null,vr)})).transpose(1,0,2,3),[wr,Ur]=(0,K.std_mean)(Yt,-2,0,!0),zr=Yt.clone();for(let Mr=0;Mr<zr.dims[0];++Mr){const vr=zr[Mr];for(let Vr=0;Vr<vr.dims[0];++Vr){const un=vr[Vr],Gr=wr[Mr][Vr][0].data,nn=Ur[Mr][Vr][0].data;for(let hn=0;hn<un.dims[0];++hn){let Jr=un[hn].data;for(let sn=0;sn<Jr.length;++sn)Jr[sn]=(Jr[sn]-nn[sn])/Gr[sn];Jr.set((0,se.medianFilter)(Jr,ut))}}}const $r=[(0,K.mean)(zr,1)],tr=w.sequences.dims,tn=new K.Tensor("float32",new Float32Array(tr[0]*tr[1]),tr);for(let Mr=0;Mr<tr[0];++Mr){const vr=$r[Mr].neg().squeeze_(0),[Vr,un]=(0,se.dynamic_time_warping)(vr.tolist()),Gr=Array.from({length:Vr.length-1},(Jr,sn)=>Vr[sn+1]-Vr[sn]),nn=(0,Ee.mergeArrays)([1],Gr).map(Jr=>!!Jr),hn=[];for(let Jr=0;Jr<nn.length;++Jr)nn[Jr]&&hn.push(un[Jr]*Xe);tn[Mr].data.set(hn,1)}return tn}}class Cs extends de{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class oa extends de{forward_params=["input_ids","pixel_values","attention_mask","position_ids","past_key_values"]}class yi extends oa{_merge_input_ids_with_image_features({inputs_embeds:w,image_features:te,input_ids:Ne,attention_mask:Xe}){const ut=this.config.image_token_index,It=Ne.tolist().map($r=>$r.findIndex(tr=>tr==ut)),Yt=It.every($r=>$r===-1),wr=It.every($r=>$r!==-1);if(!Yt&&!wr)throw new Error("Every input should contain either 0 or 1 image token.");if(Yt)return{inputs_embeds:w,attention_mask:Xe};const Ur=[],zr=[];for(let $r=0;$r<It.length;++$r){const tr=It[$r],tn=w[$r],Mr=te[$r],vr=Xe[$r];Ur.push((0,K.cat)([tn.slice([0,tr]),Mr,tn.slice([tr+1,tn.dims[0]])],0)),zr.push((0,K.cat)([vr.slice([0,tr]),(0,K.ones)([Mr.dims[0]]),vr.slice([tr+1,vr.dims[0]])],0))}return{inputs_embeds:(0,K.stack)(Ur,0),attention_mask:(0,K.stack)(zr,0)}}}class fr extends yi{}class aa extends de{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class $s extends aa{_merge_input_ids_with_image_features({inputs_embeds:w,image_features:te,input_ids:Ne,attention_mask:Xe}){return{inputs_embeds:(0,K.cat)([te,w],1),attention_mask:(0,K.cat)([(0,K.ones)(te.dims.slice(0,2)),Xe],1)}}async _prepare_inputs_embeds({input_ids:w,pixel_values:te,inputs_embeds:Ne,attention_mask:Xe}){if(!w&&!te)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let ut,Bt;return w&&(ut=await this.encode_text({input_ids:w})),te&&(Bt=await this.encode_image({pixel_values:te})),ut&&Bt?{inputs_embeds:Ne,attention_mask:Xe}=this._merge_input_ids_with_image_features({inputs_embeds:ut,image_features:Bt,input_ids:w,attention_mask:Xe}):Ne=ut||Bt,{inputs_embeds:Ne,attention_mask:Xe}}async forward({input_ids:w,pixel_values:te,attention_mask:Ne,decoder_input_ids:Xe,decoder_attention_mask:ut,encoder_outputs:Bt,past_key_values:It,inputs_embeds:Yt,decoder_inputs_embeds:wr}){if(Yt||({inputs_embeds:Yt,attention_mask:Ne}=await this._prepare_inputs_embeds({input_ids:w,pixel_values:te,inputs_embeds:Yt,attention_mask:Ne})),!Bt){let{last_hidden_state:$r}=await gt(this,{inputs_embeds:Yt,attention_mask:Ne});Bt=$r}if(!wr){if(!Xe)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");wr=await this.encode_text({input_ids:Xe})}return await xe(this,{inputs_embeds:wr,attention_mask:ut,encoder_attention_mask:Ne,encoder_hidden_states:Bt,past_key_values:It},!0)}}class ii extends de{}class la extends ii{}class yd extends ii{static async from_pretrained(w,te={}){return te.model_file_name??="text_model",super.from_pretrained(w,te)}}class bn extends ii{static async from_pretrained(w,te={}){return te.model_file_name??="text_model",super.from_pretrained(w,te)}}class bd extends ii{static async from_pretrained(w,te={}){return te.model_file_name??="vision_model",super.from_pretrained(w,te)}}class ua extends ii{static async from_pretrained(w,te={}){return te.model_file_name??="vision_model",super.from_pretrained(w,te)}}class Nn extends de{}class da extends Nn{}class ca extends Nn{static async from_pretrained(w,te={}){return te.model_file_name??="text_model",super.from_pretrained(w,te)}}class pa extends ii{static async from_pretrained(w,te={}){return te.model_file_name??="vision_model",super.from_pretrained(w,te)}}class ha extends de{}class fa extends ha{}class Ss extends de{}class ma extends Ss{}class _a extends Ss{}class ks extends de{}class ga extends ks{}class kn extends ks{}class Ps extends de{}class wa extends Ps{}class ya extends Ps{}class As extends de{}class ba extends As{}class Ma extends As{}class Is extends de{}class va extends Is{}class xa extends Is{}class Fs extends de{}class Md extends Fs{}class Pn extends Fs{}class Os extends de{}class ns extends Os{}class Bs extends Os{}class xn extends de{}class Ta extends xn{}class Ea extends xn{}class zs extends de{}class Ca extends zs{}class $a extends zs{}class Ds extends de{}class Sa extends Ds{}class ka extends Ds{}class Ls extends de{}class Pa extends Ls{}class An extends Ls{}class Rs extends de{}class Aa extends Rs{}class Ia extends Rs{}class Ns extends de{}class Fa extends Ns{}class Oa extends Ns{}class js extends de{}class Ba extends js{}class za extends js{}class Us extends de{}class Vs extends Us{}class Ws extends Us{}class Gs extends de{}class Da extends Gs{}class qs extends Gs{}class La extends de{}class Ra extends La{}class is extends La{}class Hs extends de{}class Na extends Hs{}class ja extends Hs{}class bi extends de{}class Ua extends bi{}class Va extends bi{}class ss extends de{}class Wa extends ss{}class Ga extends ss{}class Ks extends de{}class qa extends Ks{}class vd extends Ks{}class Xs extends de{}class Ha extends Xs{}class Ka extends Xs{}class Xa extends de{}class Qa extends Xa{}class Ir extends Xa{async _call(w){return new cr(await super._call(w))}}class Qs extends de{}class Ya extends Qs{}class Za extends Qs{async _call(w){return new cr(await super._call(w))}}class Ja extends de{}class el extends Ja{}class Ys extends de{}class tl extends Ys{}class rl extends Ys{async _call(w){return new cr(await super._call(w))}}class nl extends de{}class il extends nl{}class Zs extends de{}class sl extends Zs{}class ol extends Zs{async _call(w){return new cr(await super._call(w))}}class al extends de{}class Di extends al{async _call(w){return new ld(await super._call(w))}}class Js extends de{}class os extends Js{}class ll extends Js{async _call(w){return new cr(await super._call(w))}}class eo extends de{}class ul extends eo{}class dl extends eo{async _call(w){return new cr(await super._call(w))}}class to extends de{}class cl extends to{}class pl extends to{}class ro extends de{}class hl extends ro{}class fl extends ro{}class no extends de{}class ml extends no{}class _l extends no{async _call(w){return new cr(await super._call(w))}}class as extends de{}class gl extends as{}class wl extends as{async _call(w){return new io(await super._call(w))}}class ls extends as{async _call(w){return new so(await super._call(w))}}class io extends Ue{constructor({logits:w,pred_boxes:te}){super(),this.logits=w,this.pred_boxes=te}}class so extends Ue{constructor({logits:w,pred_boxes:te,pred_masks:Ne}){super(),this.logits=w,this.pred_boxes=te,this.pred_masks=Ne}}class us extends de{}class yl extends us{}class bl extends us{async _call(w){return new Ml(await super._call(w))}}class Ml extends Ue{constructor({logits:w,pred_boxes:te}){super(),this.logits=w,this.pred_boxes=te}}class oo extends de{}class vl extends oo{}class xl extends oo{async _call(w){return new ao(await super._call(w))}}class ao extends io{}class lo extends de{}class Tl extends lo{}class El extends lo{async _call(w){return new cr(await super._call(w))}}class Cl extends de{}class $l extends Cl{}class Sl extends Cl{async _call(w){return new cr(await super._call(w))}}class Tn extends de{}class kl extends Tn{}class Pl extends Tn{async _call(w){return new cr(await super._call(w))}}class uo extends de{}class Al extends uo{}class Il extends uo{async _call(w){return new cr(await super._call(w))}}class co extends de{}class Fl extends co{}class Ol extends co{}class po extends de{}class Bl extends po{}class xd extends po{}class zl extends de{}class Dl extends zl{}class ds extends de{}class Ll extends ds{}class Rl extends ds{}class Nl extends ds{}class Td extends de{}class Yn extends Td{}class jn extends de{}class Zn extends jn{}class ho extends jn{}class Un extends de{}class pn extends Un{}class fo extends Un{}class cs extends de{}class mo extends cs{}class _o extends de{}class jl extends _o{}class Ul extends _o{async _call(w){return new cr(await super._call(w))}}class Li extends de{}class go extends Li{}class Vl extends Li{async _call(w){return new cr(await super._call(w))}}class Ri extends de{}class Wl extends Ri{}class wo extends Ri{async _call(w){return new cr(await super._call(w))}}class Ni extends de{}class Gl extends Ni{}class ql extends Ni{async _call(w){return new Ed(await super._call(w))}}class Ed extends Ue{constructor({logits:w,pred_boxes:te}){super(),this.logits=w,this.pred_boxes=te}}class Hl extends de{}class yo extends Hl{async get_image_embeddings({pixel_values:w}){return await gt(this,{pixel_values:w})}async forward(w){if((!w.image_embeddings||!w.image_positional_embeddings)&&(w={...w,...await this.get_image_embeddings(w)}),!w.input_labels&&w.input_points){const Ne=w.input_points.dims.slice(0,-1),Xe=Ne.reduce((ut,Bt)=>ut*Bt,1);w.input_labels=new K.Tensor("int64",new BigInt64Array(Xe).fill(1n),Ne)}const te={image_embeddings:w.image_embeddings,image_positional_embeddings:w.image_positional_embeddings};return w.input_points&&(te.input_points=w.input_points),w.input_labels&&(te.input_labels=w.input_labels),w.input_boxes&&(te.input_boxes=w.input_boxes),await Pe(this.sessions.prompt_encoder_mask_decoder,te)}async _call(w){return new ji(await super._call(w))}}class ji extends Ue{constructor({iou_scores:w,pred_masks:te}){super(),this.iou_scores=w,this.pred_masks=te}}class bo extends de{}class Mo extends bo{}class Kl extends bo{}class vo extends de{}class Xl extends vo{}class Cd extends vo{}class Jn extends de{}class Ql extends Jn{}class $d extends Jn{async _call(w){return new si(await super._call(w))}}class xo extends Jn{async _call(w){return new cr(await super._call(w))}}class Yl extends Jn{async _call(w){return new rn(await super._call(w))}}class To extends de{}class Zl extends To{}class Jl extends To{async _call(w){return new rn(await super._call(w))}}class ps extends de{}class eu extends ps{}class Mi extends de{}class Eo extends Mi{}class Co extends Mi{async _call(w){return new si(await super._call(w))}}class tu extends Mi{async _call(w){return new cr(await super._call(w))}}class Ui extends de{}class $o extends Ui{}class Sd extends Ui{async _call(w){return new si(await super._call(w))}}class ru extends Ui{async _call(w){return new cr(await super._call(w))}}class nu extends Ui{async _call(w){return new rn(await super._call(w))}}class So extends de{}class iu extends So{}class ko extends So{async _call(w){return new si(await super._call(w))}}class kd extends So{async _call(w){return new cr(await super._call(w))}}class Pd extends de{}class su extends Jn{}class ou extends Jn{async _call(w){return new si(await super._call(w))}}class Po extends Jn{async _call(w){return new cr(await super._call(w))}}class vi extends de{}class au extends vi{}class lu extends vi{async _call(w){return new si(await super._call(w))}}class uu extends vi{async _call(w){return new cr(await super._call(w))}}class du extends vi{async _call(w){return new ad(await super._call(w))}}class cu extends vi{async _call(w){return new rn(await super._call(w))}}class Ao extends de{}class Ad extends Ao{}class pu extends Ao{}class hu extends Ao{async generate_speech(w,te,{threshold:Ne=.5,minlenratio:Xe=0,maxlenratio:ut=20,vocoder:Bt=null}={}){const It={input_ids:w},{encoder_outputs:Yt,encoder_attention_mask:wr}=await gt(this,It),Ur=Yt.dims[1]/this.config.reduction_factor,zr=Math.floor(Ur*ut),$r=Math.floor(Ur*Xe),tr=this.config.num_mel_bins;let tn=[],Mr=null,vr=null,Vr=0;for(;;){++Vr;const nn=ft(!!vr);let hn;vr?hn=vr.output_sequence_out:hn=new K.Tensor("float32",new Float32Array(tr),[1,1,tr]);let Jr={use_cache_branch:nn,output_sequence:hn,encoder_attention_mask:wr,speaker_embeddings:te,encoder_hidden_states:Yt};this.addPastKeyValues(Jr,Mr),vr=await Pe(this.sessions.decoder_model_merged,Jr),Mr=this.getPastKeyValues(vr,Mr);const{prob:sn,spectrum:Yo}=vr;if(tn.push(Yo),Vr>=$r&&(Array.from(sn.data).filter(Gi=>Gi>=Ne).length>0||Vr>=zr))break}const un=(0,K.cat)(tn),{waveform:Gr}=await Pe(Bt.sessions.model,{spectrogram:un});return{spectrogram:un,waveform:Gr}}}class Id extends de{main_input_name="spectrogram"}class fu extends de{}class mu extends fu{}class Io extends de{}class _u extends Io{}class gu extends Io{}class wu extends de{}class hs extends wu{}class Vi extends wu{}class fs extends de{}class yu extends fs{}class bu extends fs{}class ms extends de{}class Mu extends ms{}class Fo extends ms{static async from_pretrained(w,te={}){return te.model_file_name??="text_model",super.from_pretrained(w,te)}}class vu extends ms{static async from_pretrained(w,te={}){return te.model_file_name??="audio_model",super.from_pretrained(w,te)}}class xu extends de{}class Oo extends xu{async _call(w){return new ud(await super._call(w))}}class Bo extends de{}class Fd extends Bo{}class zo extends Bo{}class Tu extends Bo{}class Do extends de{}class Eu extends Do{}class Od extends Do{}class Lo extends de{}class Cu extends Lo{}class Bd extends Lo{async _call(w){return new cr(await super._call(w))}}class Ro extends de{}class zd extends Ro{}class Dd extends Ro{}class No extends de{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(w){const[te,Ne]=w.dims,Xe=this.config.decoder.num_codebooks,ut=Ne-Xe;let Bt=0;for(let wr=0;wr<w.size;++wr){if(w.data[wr]===this.config.decoder.pad_token_id)continue;const Ur=wr%Ne,zr=Math.floor(wr/Ne)%Xe,$r=Ur-zr;$r>0&&$r<=ut&&(w.data[Bt++]=w.data[wr])}const It=Math.floor(te/Xe),Yt=Bt/(It*Xe);return new K.Tensor(w.type,w.data.slice(0,Bt),[It,Xe,Yt])}prepare_inputs_for_generation(w,te,Ne){let Xe=structuredClone(w);for(let Bt=0;Bt<Xe.length;++Bt)for(let It=0;It<Xe[Bt].length;++It)Bt%this.config.decoder.num_codebooks>=It&&(Xe[Bt][It]=BigInt(this.config.decoder.pad_token_id));return Ne.guidance_scale!==null&&Ne.guidance_scale>1&&(Xe=Xe.concat(Xe)),super.prepare_inputs_for_generation(Xe,te,Ne)}async generate(w){const te=await super.generate(w),Ne=this._apply_and_filter_by_delay_pattern_mask(te).unsqueeze_(0),{audio_values:Xe}=await Pe(this.sessions.encodec_decode,{audio_codes:Ne});return Xe}}class $u extends de{}class Su extends $u{}class ku extends $u{async _call(w){return new cr(await super._call(w))}}class jo extends de{}class Pu extends jo{}class Ld extends jo{async _call(w){return new cr(await super._call(w))}}class Uo extends de{}class Au extends Uo{}class Iu extends Uo{async _call(w){return new cr(await super._call(w))}}class Vo extends de{}class Rd extends Vo{}class Fu extends Vo{async _call(w){return new cr(await super._call(w))}}class Ou extends de{}class Bu extends Ou{}class Lr{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(w,{progress_callback:te=null,config:Ne=null,cache_dir:Xe=null,local_files_only:ut=!1,revision:Bt="main",model_file_name:It=null,subfolder:Yt="onnx",device:wr=null,dtype:Ur=null,use_external_data_format:zr=null,session_options:$r={}}={}){const tr={progress_callback:te,config:Ne,cache_dir:Xe,local_files_only:ut,revision:Bt,model_file_name:It,subfolder:Yt,device:wr,dtype:Ur,use_external_data_format:zr,session_options:$r};if(tr.config=await F.AutoConfig.from_pretrained(w,tr),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const tn of this.MODEL_CLASS_MAPPINGS){const Mr=tn.get(tr.config.model_type);if(Mr)return await Mr[1].from_pretrained(w,tr)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${tr.config.model_type}", attempting to construct from base class.`),await de.from_pretrained(w,tr);throw Error(`Unsupported model type: ${tr.config.model_type}`)}}const Oc=new Map([["bert",["BertModel",Mt]],["nomic_bert",["NomicBertModel",at]],["roformer",["RoFormerModel",He]],["electra",["ElectraModel",At]],["esm",["EsmModel",Or]],["convbert",["ConvBertModel",Y]],["camembert",["CamembertModel",U]],["deberta",["DebertaModel",R]],["deberta-v2",["DebertaV2Model",Ct]],["mpnet",["MPNetModel",Si]],["albert",["AlbertModel",mi]],["distilbert",["DistilBertModel",Nt]],["roberta",["RobertaModel",kr]],["xlm",["XLMModel",Sn]],["xlm-roberta",["XLMRobertaModel",Br]],["clap",["ClapModel",Mu]],["clip",["CLIPModel",la]],["clipseg",["CLIPSegModel",ma]],["chinese_clip",["ChineseCLIPModel",fa]],["siglip",["SiglipModel",da]],["mobilebert",["MobileBertModel",zn]],["squeezebert",["SqueezeBertModel",Xn]],["wav2vec2",["Wav2Vec2Model",Ql]],["wav2vec2-bert",["Wav2Vec2BertModel",iu]],["unispeech",["UniSpeechModel",Eo]],["unispeech-sat",["UniSpeechSatModel",$o]],["hubert",["HubertModel",su]],["wavlm",["WavLMModel",au]],["audio-spectrogram-transformer",["ASTModel",qt]],["vits",["VitsModel",Oo]],["pyannote",["PyAnnoteModel",Zl]],["wespeaker-resnet",["WeSpeakerResNetModel",eu]],["detr",["DetrModel",gl]],["rt_detr",["RTDetrModel",yl]],["table-transformer",["TableTransformerModel",vl]],["vit",["ViTModel",Qa]],["pvt",["PvtModel",Ya]],["vit_msn",["ViTMSNModel",tl]],["vit_mae",["ViTMAEModel",el]],["groupvit",["GroupViTModel",il]],["fastvit",["FastViTModel",sl]],["mobilevit",["MobileViTModel",os]],["mobilevitv2",["MobileViTV2Model",ul]],["owlvit",["OwlViTModel",cl]],["owlv2",["Owlv2Model",hl]],["beit",["BeitModel",ml]],["deit",["DeiTModel",Tl]],["hiera",["HieraModel",$l]],["convnext",["ConvNextModel",jl]],["convnextv2",["ConvNextV2Model",go]],["dinov2",["Dinov2Model",Wl]],["resnet",["ResNetModel",kl]],["swin",["SwinModel",Al]],["swin2sr",["Swin2SRModel",Fl]],["donut-swin",["DonutSwinModel",mo]],["yolos",["YolosModel",Gl]],["dpt",["DPTModel",Bl]],["glpn",["GLPNModel",pn]],["hifigan",["SpeechT5HifiGan",Id]],["efficientnet",["EfficientNetModel",Cu]],["decision_transformer",["DecisionTransformerModel",Bu]],["mobilenet_v1",["MobileNetV1Model",Su]],["mobilenet_v2",["MobileNetV2Model",Pu]],["mobilenet_v3",["MobileNetV3Model",Au]],["mobilenet_v4",["MobileNetV4Model",Rd]],["maskformer",["MaskFormerModel",Zn]]]),wn=new Map([["t5",["T5Model",Fi]],["longt5",["LongT5Model",Bi]],["mt5",["MT5Model",ts]],["bart",["BartModel",V]],["mbart",["MBartModel",st]],["marian",["MarianModel",Mo]],["whisper",["WhisperModel",Kt]],["m2m_100",["M2M100Model",Xl]],["blenderbot",["BlenderbotModel",_r]],["blenderbot-small",["BlenderbotSmallModel",Xr]]]),Nd=new Map([["bloom",["BloomModel",Wa]],["jais",["JAISModel",wa]],["gpt2",["GPT2Model",ga]],["gptj",["GPTJModel",Md]],["gpt_bigcode",["GPTBigCodeModel",ns]],["gpt_neo",["GPTNeoModel",ba]],["gpt_neox",["GPTNeoXModel",va]],["codegen",["CodeGenModel",Ta]],["llama",["LlamaModel",Ca]],["olmo",["OlmoModel",Pa]],["mobilellm",["MobileLLMModel",Sa]],["granite",["GraniteModel",Aa]],["cohere",["CohereModel",Fa]],["gemma",["GemmaModel",Ba]],["gemma2",["Gemma2Model",Vs]],["openelm",["OpenELMModel",Da]],["qwen2",["Qwen2Model",Ra]],["phi",["PhiModel",Na]],["phi3",["Phi3Model",Ua]],["mpt",["MptModel",qa]],["opt",["OPTModel",Ha]],["mistral",["MistralModel",_u]],["starcoder2",["Starcoder2Model",hs]],["falcon",["FalconModel",yu]],["stablelm",["StableLmModel",Eu]]]),Wo=new Map([["speecht5",["SpeechT5ForSpeechToText",pu]],["whisper",["WhisperForConditionalGeneration",Es]]]),Go=new Map([["speecht5",["SpeechT5ForTextToSpeech",hu]]]),zu=new Map([["vits",["VitsModel",Oo]],["musicgen",["MusicgenForConditionalGeneration",No]]]),Wi=new Map([["bert",["BertForSequenceClassification",tt]],["roformer",["RoFormerForSequenceClassification",wt]],["electra",["ElectraForSequenceClassification",yt]],["esm",["EsmForSequenceClassification",Er]],["convbert",["ConvBertForSequenceClassification",ae]],["camembert",["CamembertForSequenceClassification",Se]],["deberta",["DebertaForSequenceClassification",$e]],["deberta-v2",["DebertaV2ForSequenceClassification",Ft]],["mpnet",["MPNetForSequenceClassification",Pi]],["albert",["AlbertForSequenceClassification",_i]],["distilbert",["DistilBertForSequenceClassification",Le]],["roberta",["RobertaForSequenceClassification",$n]],["xlm",["XLMForSequenceClassification",Jt]],["xlm-roberta",["XLMRobertaForSequenceClassification",br]],["bart",["BartForSequenceClassification",ce]],["mbart",["MBartForSequenceClassification",zt]],["mobilebert",["MobileBertForSequenceClassification",hi]],["squeezebert",["SqueezeBertForSequenceClassification",Dn]]]),Du=new Map([["bert",["BertForTokenClassification",Q]],["roformer",["RoFormerForTokenClassification",Lt]],["electra",["ElectraForTokenClassification",T]],["esm",["EsmForTokenClassification",Dr]],["convbert",["ConvBertForTokenClassification",be]],["camembert",["CamembertForTokenClassification",Ge]],["deberta",["DebertaForTokenClassification",Be]],["deberta-v2",["DebertaV2ForTokenClassification",xt]],["mpnet",["MPNetForTokenClassification",Ai]],["distilbert",["DistilBertForTokenClassification",Re]],["roberta",["RobertaForTokenClassification",Ie]],["xlm",["XLMForTokenClassification",cn]],["xlm-roberta",["XLMRobertaForTokenClassification",ni]]]),qo=new Map([["t5",["T5ForConditionalGeneration",Oi]],["longt5",["LongT5ForConditionalGeneration",zi]],["mt5",["MT5ForConditionalGeneration",fe]],["bart",["BartForConditionalGeneration",ne]],["mbart",["MBartForConditionalGeneration",Pt]],["marian",["MarianMTModel",Kl]],["m2m_100",["M2M100ForConditionalGeneration",Cd]],["blenderbot",["BlenderbotForConditionalGeneration",pr]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",yn]]]),Ho=new Map([["bloom",["BloomForCausalLM",Ga]],["gpt2",["GPT2LMHeadModel",kn]],["jais",["JAISLMHeadModel",ya]],["gptj",["GPTJForCausalLM",Pn]],["gpt_bigcode",["GPTBigCodeForCausalLM",Bs]],["gpt_neo",["GPTNeoForCausalLM",Ma]],["gpt_neox",["GPTNeoXForCausalLM",xa]],["codegen",["CodeGenForCausalLM",Ea]],["llama",["LlamaForCausalLM",$a]],["olmo",["OlmoForCausalLM",An]],["mobilellm",["MobileLLMForCausalLM",ka]],["granite",["GraniteForCausalLM",Ia]],["cohere",["CohereForCausalLM",Oa]],["gemma",["GemmaForCausalLM",za]],["gemma2",["Gemma2ForCausalLM",Ws]],["openelm",["OpenELMForCausalLM",qs]],["qwen2",["Qwen2ForCausalLM",is]],["phi",["PhiForCausalLM",ja]],["phi3",["Phi3ForCausalLM",Va]],["mpt",["MptForCausalLM",vd]],["opt",["OPTForCausalLM",Ka]],["mbart",["MBartForCausalLM",Dt]],["mistral",["MistralForCausalLM",gu]],["starcoder2",["Starcoder2ForCausalLM",Vi]],["falcon",["FalconForCausalLM",bu]],["trocr",["TrOCRForCausalLM",mu]],["stablelm",["StableLmForCausalLM",Od]]]),Lu=new Map([["bert",["BertForMaskedLM",Et]],["roformer",["RoFormerForMaskedLM",mt]],["electra",["ElectraForMaskedLM",ot]],["esm",["EsmForMaskedLM",jr]],["convbert",["ConvBertForMaskedLM",z]],["camembert",["CamembertForMaskedLM",he]],["deberta",["DebertaForMaskedLM",we]],["deberta-v2",["DebertaV2ForMaskedLM",Tt]],["mpnet",["MPNetForMaskedLM",ki]],["albert",["AlbertForMaskedLM",rr]],["distilbert",["DistilBertForMaskedLM",Ht]],["roberta",["RobertaForMaskedLM",vn]],["xlm",["XLMWithLMHeadModel",Ln]],["xlm-roberta",["XLMRobertaForMaskedLM",Ot]],["mobilebert",["MobileBertForMaskedLM",Nr]],["squeezebert",["SqueezeBertForMaskedLM",Cn]]]),Ru=new Map([["bert",["BertForQuestionAnswering",ze]],["roformer",["RoFormerForQuestionAnswering",kt]],["electra",["ElectraForQuestionAnswering",c]],["convbert",["ConvBertForQuestionAnswering",it]],["camembert",["CamembertForQuestionAnswering",sr]],["deberta",["DebertaForQuestionAnswering",Ke]],["deberta-v2",["DebertaV2ForQuestionAnswering",Ut]],["mpnet",["MPNetForQuestionAnswering",Ii]],["albert",["AlbertForQuestionAnswering",gi]],["distilbert",["DistilBertForQuestionAnswering",vt]],["roberta",["RobertaForQuestionAnswering",Zr]],["xlm",["XLMForQuestionAnswering",Qr]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Qn]],["mobilebert",["MobileBertForQuestionAnswering",$i]],["squeezebert",["SqueezeBertForQuestionAnswering",fi]]]),Ko=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Cs]]]),Nu=new Map([["llava",["LlavaForConditionalGeneration",yi]],["moondream1",["Moondream1ForConditionalGeneration",fr]],["florence2",["Florence2ForConditionalGeneration",$s]]]),jd=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Cs]]]),ju=new Map([["vit",["ViTForImageClassification",Ir]],["pvt",["PvtForImageClassification",Za]],["vit_msn",["ViTMSNForImageClassification",rl]],["fastvit",["FastViTForImageClassification",ol]],["mobilevit",["MobileViTForImageClassification",ll]],["mobilevitv2",["MobileViTV2ForImageClassification",dl]],["beit",["BeitForImageClassification",_l]],["deit",["DeiTForImageClassification",El]],["hiera",["HieraForImageClassification",Sl]],["convnext",["ConvNextForImageClassification",Ul]],["convnextv2",["ConvNextV2ForImageClassification",Vl]],["dinov2",["Dinov2ForImageClassification",wo]],["resnet",["ResNetForImageClassification",Pl]],["swin",["SwinForImageClassification",Il]],["segformer",["SegformerForImageClassification",zo]],["efficientnet",["EfficientNetForImageClassification",Bd]],["mobilenet_v1",["MobileNetV1ForImageClassification",ku]],["mobilenet_v2",["MobileNetV2ForImageClassification",Ld]],["mobilenet_v3",["MobileNetV3ForImageClassification",Iu]],["mobilenet_v4",["MobileNetV4ForImageClassification",Fu]]]),Uu=new Map([["detr",["DetrForObjectDetection",wl]],["rt_detr",["RTDetrForObjectDetection",bl]],["table-transformer",["TableTransformerForObjectDetection",xl]],["yolos",["YolosForObjectDetection",ql]]]),Vu=new Map([["owlvit",["OwlViTForObjectDetection",pl]],["owlv2",["Owlv2ForObjectDetection",fl]]]),Wu=new Map([["detr",["DetrForSegmentation",ls]],["clipseg",["CLIPSegForImageSegmentation",_a]]]),Xo=new Map([["segformer",["SegformerForSemanticSegmentation",Tu]],["sapiens",["SapiensForSemanticSegmentation",Ll]]]),Gu=new Map([["detr",["DetrForSegmentation",ls]],["maskformer",["MaskFormerForInstanceSegmentation",ho]]]),Ud=new Map([["sam",["SamModel",yo]]]),Qo=new Map([["wav2vec2",["Wav2Vec2ForCTC",$d]],["wav2vec2-bert",["Wav2Vec2BertForCTC",ko]],["unispeech",["UniSpeechForCTC",Co]],["unispeech-sat",["UniSpeechSatForCTC",Sd]],["wavlm",["WavLMForCTC",lu]],["hubert",["HubertForCTC",ou]]]),qu=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",xo]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",kd]],["unispeech",["UniSpeechForSequenceClassification",tu]],["unispeech-sat",["UniSpeechSatForSequenceClassification",ru]],["wavlm",["WavLMForSequenceClassification",uu]],["hubert",["HubertForSequenceClassification",Po]],["audio-spectrogram-transformer",["ASTForAudioClassification",rs]]]),Hu=new Map([["wavlm",["WavLMForXVector",du]]]),Ku=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",nu]],["wavlm",["WavLMForAudioFrameClassification",cu]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Yl]],["pyannote",["PyAnnoteForAudioFrameClassification",Jl]]]),Vd=new Map([["vitmatte",["VitMatteForImageMatting",Di]]]),Xu=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Ol]]]),Qu=new Map([["dpt",["DPTForDepthEstimation",xd]],["depth_anything",["DepthAnythingForDepthEstimation",Dl]],["glpn",["GLPNForDepthEstimation",fo]],["sapiens",["SapiensForDepthEstimation",Rl]],["depth_pro",["DepthProForDepthEstimation",Yn]]]),Yu=new Map([["sapiens",["SapiensForNormalEstimation",Nl]]]),Wd=new Map([["clip",["CLIPVisionModelWithProjection",ua]],["siglip",["SiglipVisionModel",pa]]]),Zu=[[Oc,J.EncoderOnly],[wn,J.EncoderDecoder],[Nd,J.DecoderOnly],[Wi,J.EncoderOnly],[Du,J.EncoderOnly],[qo,J.Seq2Seq],[Wo,J.Seq2Seq],[Ho,J.DecoderOnly],[Lu,J.EncoderOnly],[Ru,J.EncoderOnly],[Ko,J.Vision2Seq],[Nu,J.ImageTextToText],[ju,J.EncoderOnly],[Wu,J.EncoderOnly],[Gu,J.EncoderOnly],[Xo,J.EncoderOnly],[Vd,J.EncoderOnly],[Xu,J.EncoderOnly],[Qu,J.EncoderOnly],[Yu,J.EncoderOnly],[Uu,J.EncoderOnly],[Vu,J.EncoderOnly],[Ud,J.MaskGeneration],[Qo,J.EncoderOnly],[qu,J.EncoderOnly],[Go,J.Seq2Seq],[zu,J.EncoderOnly],[Hu,J.EncoderOnly],[Ku,J.EncoderOnly],[Wd,J.EncoderOnly]];for(const[g,w]of Zu)for(const[te,Ne]of g.values())Z.set(te,w),B.set(Ne,te),W.set(te,Ne);const Gd=[["MusicgenForConditionalGeneration",No,J.Musicgen],["CLIPTextModelWithProjection",bn,J.EncoderOnly],["SiglipTextModel",ca,J.EncoderOnly],["ClapTextModelWithProjection",Fo,J.EncoderOnly],["ClapAudioModelWithProjection",vu,J.EncoderOnly]];for(const[g,w,te]of Gd)Z.set(g,te),B.set(w,g),W.set(g,w);class qd extends Lr{static MODEL_CLASS_MAPPINGS=Zu.map(w=>w[0]);static BASE_IF_FAIL=!0}class Hd extends Lr{static MODEL_CLASS_MAPPINGS=[Wi]}class Kd extends Lr{static MODEL_CLASS_MAPPINGS=[Du]}class Bc extends Lr{static MODEL_CLASS_MAPPINGS=[qo]}class Xd extends Lr{static MODEL_CLASS_MAPPINGS=[Wo]}class Qd extends Lr{static MODEL_CLASS_MAPPINGS=[Go]}class Yd extends Lr{static MODEL_CLASS_MAPPINGS=[zu]}class Zd extends Lr{static MODEL_CLASS_MAPPINGS=[Ho]}class Jd extends Lr{static MODEL_CLASS_MAPPINGS=[Lu]}class ec extends Lr{static MODEL_CLASS_MAPPINGS=[Ru]}class tc extends Lr{static MODEL_CLASS_MAPPINGS=[Ko]}class rc extends Lr{static MODEL_CLASS_MAPPINGS=[ju]}class nc extends Lr{static MODEL_CLASS_MAPPINGS=[Wu]}class zc extends Lr{static MODEL_CLASS_MAPPINGS=[Xo]}class _s extends Lr{static MODEL_CLASS_MAPPINGS=[Gu]}class Ju extends Lr{static MODEL_CLASS_MAPPINGS=[Uu]}class ed extends Lr{static MODEL_CLASS_MAPPINGS=[Vu]}class td extends Lr{static MODEL_CLASS_MAPPINGS=[Ud]}class rd extends Lr{static MODEL_CLASS_MAPPINGS=[Qo]}class ic extends Lr{static MODEL_CLASS_MAPPINGS=[qu]}class sc extends Lr{static MODEL_CLASS_MAPPINGS=[Hu]}class nd extends Lr{static MODEL_CLASS_MAPPINGS=[Ku]}class id extends Lr{static MODEL_CLASS_MAPPINGS=[jd]}class oc extends Lr{static MODEL_CLASS_MAPPINGS=[Vd]}class ac extends Lr{static MODEL_CLASS_MAPPINGS=[Xu]}class sd extends Lr{static MODEL_CLASS_MAPPINGS=[Qu]}class lc extends Lr{static MODEL_CLASS_MAPPINGS=[Yu]}class uc extends Lr{static MODEL_CLASS_MAPPINGS=[Wd]}class od extends Ue{constructor({logits:w,past_key_values:te,encoder_outputs:Ne,decoder_attentions:Xe=null,cross_attentions:ut=null}){super(),this.logits=w,this.past_key_values=te,this.encoder_outputs=Ne,this.decoder_attentions=Xe,this.cross_attentions=ut}}class cr extends Ue{constructor({logits:w}){super(),this.logits=w}}class ad extends Ue{constructor({logits:w,embeddings:te}){super(),this.logits=w,this.embeddings=te}}class rn extends Ue{constructor({logits:w}){super(),this.logits=w}}class ln extends Ue{constructor({logits:w}){super(),this.logits=w}}class _n extends Ue{constructor({start_logits:w,end_logits:te}){super(),this.start_logits=w,this.end_logits=te}}class si extends Ue{constructor({logits:w}){super(),this.logits=w}}class dc extends Ue{constructor({logits:w,past_key_values:te}){super(),this.logits=w,this.past_key_values=te}}class ld extends Ue{constructor({alphas:w}){super(),this.alphas=w}}class ud extends Ue{constructor({waveform:w,spectrogram:te}){super(),this.waveform=w,this.spectrogram=te}}},"./src/models/whisper/common_whisper.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{WHISPER_LANGUAGE_MAPPING:()=>ue,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>oe,whisper_language_to_code:()=>ge});const F=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],ue=new Map(F),oe=new Map([...F.map(([Ee,L])=>[L,Ee]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function ge(Ee){Ee=Ee.toLowerCase();let L=oe.get(Ee);if(L===void 0)if(ue.has(Ee))L=Ee;else{const M=Ee.length===2?ue.keys():ue.values();throw new Error(`Language "${Ee}" is not supported. Must be one of: ${JSON.stringify(M)}`)}return L}},"./src/models/whisper/generation_whisper.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{WhisperGenerationConfig:()=>ue});var F=I("./src/generation/configuration_utils.js");class ue extends F.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/ops/registry.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{TensorOpRegistry:()=>ge});var F=I("./src/backends/onnx.js"),ue=I("./src/utils/tensor.js");const oe=async(Ee,L,O)=>{const M=await(0,F.createInferenceSession)(new Uint8Array(Ee),L);return async j=>{const K=Object.fromEntries(Object.entries(j).map(([Te,Me])=>[Te,Me.ort_tensor])),se=await M.run(K);return Array.isArray(O)?O.map(Te=>new ue.Tensor(se[Te])):new ue.Tensor(se[O])}};class ge{static session_options={};static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=oe([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=oe([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=oe([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=oe([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=oe([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=oe([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}},"./src/pipelines.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{AudioClassificationPipeline:()=>je,AutomaticSpeechRecognitionPipeline:()=>ft,DepthEstimationPipeline:()=>Ue,DocumentQuestionAnsweringPipeline:()=>Qe,FeatureExtractionPipeline:()=>Ce,FillMaskPipeline:()=>J,ImageClassificationPipeline:()=>gt,ImageFeatureExtractionPipeline:()=>Pe,ImageSegmentationPipeline:()=>xe,ImageToImagePipeline:()=>de,ImageToTextPipeline:()=>dt,ObjectDetectionPipeline:()=>_e,Pipeline:()=>Me,QuestionAnsweringPipeline:()=>ve,SummarizationPipeline:()=>W,Text2TextGenerationPipeline:()=>Z,TextClassificationPipeline:()=>N,TextGenerationPipeline:()=>P,TextToAudioPipeline:()=>_t,TokenClassificationPipeline:()=>re,TranslationPipeline:()=>B,ZeroShotAudioClassificationPipeline:()=>De,ZeroShotClassificationPipeline:()=>ye,ZeroShotImageClassificationPipeline:()=>q,ZeroShotObjectDetectionPipeline:()=>ke,pipeline:()=>Mt});var F=I("./src/tokenizers.js"),ue=I("./src/models.js"),oe=I("./src/processors.js"),ge=I("./src/utils/generic.js"),Ee=I("./src/utils/core.js"),L=I("./src/utils/maths.js"),O=I("./src/utils/audio.js"),M=I("./src/utils/tensor.js"),j=I("./src/utils/image.js");async function K(tt){return Array.isArray(tt)||(tt=[tt]),await Promise.all(tt.map(Q=>j.RawImage.read(Q)))}async function se(tt,Q){return Array.isArray(tt)||(tt=[tt]),await Promise.all(tt.map(ze=>typeof ze=="string"||ze instanceof URL?(0,O.read_audio)(ze,Q):ze instanceof Float64Array?new Float32Array(ze):ze))}function Te(tt,Q){Q&&(tt=tt.map(He=>He|0));const[ze,nt,at,Ze]=tt;return{xmin:ze,ymin:nt,xmax:at,ymax:Ze}}class Me extends ge.Callable{constructor({task:Q,model:ze,tokenizer:nt=null,processor:at=null}){super(),this.task=Q,this.model=ze,this.tokenizer=nt,this.processor=at}async dispose(){await this.model.dispose()}}class N extends Me{constructor(Q){super(Q)}async _call(Q,{top_k:ze=1}={}){const nt=this.tokenizer(Q,{padding:!0,truncation:!0}),at=await this.model(nt),Ze=this.model.config.problem_type==="multi_label_classification"?wt=>wt.sigmoid():wt=>new M.Tensor("float32",(0,L.softmax)(wt.data),wt.dims),He=this.model.config.id2label,mt=[];for(const wt of at.logits){const Lt=Ze(wt),kt=await(0,M.topk)(Lt,ze),E=kt[0].tolist(),z=kt[1].tolist().map((ae,be)=>({label:He?He[ae]:`LABEL_${ae}`,score:E[be]}));ze===1?mt.push(...z):mt.push(z)}return Array.isArray(Q)||ze===1?mt:mt[0]}}class re extends Me{constructor(Q){super(Q)}async _call(Q,{ignore_labels:ze=["O"]}={}){const nt=Array.isArray(Q),at=this.tokenizer(nt?Q:[Q],{padding:!0,truncation:!0}),He=(await this.model(at)).logits,mt=this.model.config.id2label,wt=[];for(let Lt=0;Lt<He.dims[0];++Lt){const kt=at.input_ids[Lt],E=He[Lt],Y=[];for(let z=0;z<E.dims[0];++z){const ae=E[z],be=(0,L.max)(ae.data)[1],it=mt?mt[be]:`LABEL_${be}`;if(ze.includes(it))continue;const et=this.tokenizer.decode([kt[z].item()],{skip_special_tokens:!0});if(et==="")continue;const At=(0,L.softmax)(ae.data);Y.push({entity:it,score:At[be],index:z,word:et})}wt.push(Y)}return nt?wt:wt[0]}}class ve extends Me{constructor(Q){super(Q)}async _call(Q,ze,{top_k:nt=1}={}){const at=this.tokenizer(Q,{text_pair:ze,padding:!0,truncation:!0}),{start_logits:Ze,end_logits:He}=await this.model(at),mt=at.input_ids.tolist(),wt=at.attention_mask.tolist(),Lt=this.tokenizer.all_special_ids,kt=[];for(let E=0;E<Ze.dims[0];++E){const Y=mt[E],z=Y.findIndex(ot=>ot==this.tokenizer.sep_token_id);wt[E].map((ot,yt)=>ot==1&&(yt===0||yt>z&&Lt.findIndex(T=>T==Y[yt])===-1));const ae=Ze[E].tolist(),be=He[E].tolist();for(let ot=1;ot<ae.length;++ot)(wt[E]==0||ot<=z||Lt.findIndex(yt=>yt==Y[ot])!==-1)&&(ae[ot]=-1/0,be[ot]=-1/0);const it=(0,L.softmax)(ae).map((ot,yt)=>[ot,yt]),et=(0,L.softmax)(be).map((ot,yt)=>[ot,yt]);it[0][0]=0,et[0][0]=0;const At=(0,Ee.product)(it,et).filter(ot=>ot[0][1]<=ot[1][1]).map(ot=>[ot[0][1],ot[1][1],ot[0][0]*ot[1][0]]).sort((ot,yt)=>yt[2]-ot[2]);for(let ot=0;ot<Math.min(At.length,nt);++ot){const[yt,T,c]=At[ot],m=Y.slice(yt,T+1),U=this.tokenizer.decode(m,{skip_special_tokens:!0});kt.push({answer:U,score:c})}}return nt===1?kt[0]:kt}}class J extends Me{constructor(Q){super(Q)}async _call(Q,{top_k:ze=5}={}){const nt=this.tokenizer(Q,{padding:!0,truncation:!0}),{logits:at}=await this.model(nt),Ze=[],He=nt.input_ids.tolist();for(let mt=0;mt<He.length;++mt){const wt=He[mt],Lt=wt.findIndex(ae=>ae==this.tokenizer.mask_token_id);if(Lt===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const kt=at[mt][Lt],E=await(0,M.topk)(new M.Tensor("float32",(0,L.softmax)(kt.data),kt.dims),ze),Y=E[0].tolist(),z=E[1].tolist();Ze.push(z.map((ae,be)=>{const it=wt.slice();return it[Lt]=ae,{score:Y[be],token:Number(ae),token_str:this.tokenizer.model.vocab[ae],sequence:this.tokenizer.decode(it,{skip_special_tokens:!0})}}))}return Array.isArray(Q)?Ze:Ze[0]}}class Z extends Me{_key="generated_text";constructor(Q){super(Q)}async _call(Q,ze={}){Array.isArray(Q)||(Q=[Q]),this.model.config.prefix&&(Q=Q.map(wt=>this.model.config.prefix+wt));const nt=this.model.config.task_specific_params;nt&&nt[this.task]&&nt[this.task].prefix&&(Q=Q.map(wt=>nt[this.task].prefix+wt));const at=this.tokenizer,Ze={padding:!0,truncation:!0};let He;this instanceof B&&"_build_translation_inputs"in at?He=at._build_translation_inputs(Q,Ze,ze):He=at(Q,Ze);const mt=await this.model.generate({...He,...ze});return at.batch_decode(mt,{skip_special_tokens:!0}).map(wt=>({[this._key]:wt}))}}class W extends Z{_key="summary_text";constructor(Q){super(Q)}}class B extends Z{_key="translation_text";constructor(Q){super(Q)}}function G(tt){return Array.isArray(tt)&&tt.every(Q=>"role"in Q&&"content"in Q)}class P extends Me{constructor(Q){super(Q)}async _call(Q,ze={}){let nt=!1,at=!1,Ze;if(typeof Q=="string")Ze=Q=[Q];else if(Array.isArray(Q)&&Q.every(z=>typeof z=="string"))nt=!0,Ze=Q;else{if(G(Q))Q=[Q];else if(Array.isArray(Q)&&Q.every(G))nt=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");at=!0,Ze=Q.map(z=>this.tokenizer.apply_chat_template(z,{tokenize:!1,add_generation_prompt:!0}))}const He=ze.add_special_tokens??!1,mt=at?!1:ze.return_full_text??!0;this.tokenizer.padding_side="left";const wt=this.tokenizer(Ze,{add_special_tokens:He,padding:!0,truncation:!0}),Lt=await this.model.generate({...wt,...ze}),kt=this.tokenizer.batch_decode(Lt,{skip_special_tokens:!0});let E;!mt&&wt.input_ids.dims.at(-1)>0&&(E=this.tokenizer.batch_decode(wt.input_ids,{skip_special_tokens:!0}).map(z=>z.length));const Y=Array.from({length:Q.length},z=>[]);for(let z=0;z<kt.length;++z){const ae=Math.floor(z/Lt.dims[0]*Q.length);E&&(kt[z]=kt[z].slice(E[ae])),Y[ae].push({generated_text:at?[...Q[ae],{role:"assistant",content:kt[z]}]:kt[z]})}return!nt&&Y.length===1?Y[0]:Y}}class ye extends Me{constructor(Q){super(Q),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([ze,nt])=>[ze.toLowerCase(),nt])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(Q,ze,{hypothesis_template:nt="This example is {}.",multi_label:at=!1}={}){const Ze=Array.isArray(Q);Ze||(Q=[Q]),Array.isArray(ze)||(ze=[ze]);const He=ze.map(Lt=>nt.replace("{}",Lt)),mt=at||ze.length===1,wt=[];for(const Lt of Q){const kt=[];for(const z of He){const ae=this.tokenizer(Lt,{text_pair:z,padding:!0,truncation:!0}),be=await this.model(ae);mt?kt.push([be.logits.data[this.contradiction_id],be.logits.data[this.entailment_id]]):kt.push(be.logits.data[this.entailment_id])}const Y=(mt?kt.map(z=>(0,L.softmax)(z)[1]):(0,L.softmax)(kt)).map((z,ae)=>[z,ae]).sort((z,ae)=>ae[0]-z[0]);wt.push({sequence:Lt,labels:Y.map(z=>ze[z[1]]),scores:Y.map(z=>z[0])})}return Ze?wt:wt[0]}}class Ce extends Me{constructor(Q){super(Q)}async _call(Q,{pooling:ze="none",normalize:nt=!1,quantize:at=!1,precision:Ze="binary"}={}){const He=this.tokenizer(Q,{padding:!0,truncation:!0}),mt=await this.model(He);let wt=mt.last_hidden_state??mt.logits??mt.token_embeddings;if(ze!=="none")if(ze==="mean")wt=(0,M.mean_pooling)(wt,He.attention_mask);else if(ze==="cls")wt=wt.slice(null,0);else throw Error(`Pooling method '${ze}' not supported.`);return nt&&(wt=wt.normalize(2,-1)),at&&(wt=(0,M.quantize_embeddings)(wt,Ze)),wt}}class Pe extends Me{constructor(Q){super(Q)}async _call(Q,{pool:ze=null}={}){const nt=await K(Q),{pixel_values:at}=await this.processor(nt),Ze=await this.model({pixel_values:at});let He;if(ze){if(!("pooler_output"in Ze))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");He=Ze.pooler_output}else He=Ze.last_hidden_state??Ze.logits??Ze.image_embeds;return He}}class je extends Me{constructor(Q){super(Q)}async _call(Q,{top_k:ze=5}={}){const nt=this.processor.feature_extractor.config.sampling_rate,at=await se(Q,nt),Ze=this.model.config.id2label,He=[];for(const mt of at){const wt=await this.processor(mt),kt=(await this.model(wt)).logits[0],E=await(0,M.topk)(new M.Tensor("float32",(0,L.softmax)(kt.data),kt.dims),ze),Y=E[0].tolist(),ae=E[1].tolist().map((be,it)=>({label:Ze?Ze[be]:`LABEL_${be}`,score:Y[it]}));He.push(ae)}return Array.isArray(Q)?He:He[0]}}class De extends Me{constructor(Q){super(Q)}async _call(Q,ze,{hypothesis_template:nt="This is a sound of {}."}={}){const at=!Array.isArray(Q);at&&(Q=[Q]);const Ze=ze.map(kt=>nt.replace("{}",kt)),He=this.tokenizer(Ze,{padding:!0,truncation:!0}),mt=this.processor.feature_extractor.config.sampling_rate,wt=await se(Q,mt),Lt=[];for(const kt of wt){const E=await this.processor(kt),Y=await this.model({...He,...E}),z=(0,L.softmax)(Y.logits_per_audio.data);Lt.push([...z].map((ae,be)=>({score:ae,label:ze[be]})))}return at?Lt[0]:Lt}}class ft extends Me{constructor(Q){super(Q)}async _call(Q,ze={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(Q,ze);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(Q,ze);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(Q,ze){ze.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),ze.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const nt=!Array.isArray(Q);nt&&(Q=[Q]);const at=this.processor.feature_extractor.config.sampling_rate,Ze=await se(Q,at),He=[];for(const mt of Ze){const wt=await this.processor(mt),kt=(await this.model(wt)).logits[0],E=[];for(const z of kt)E.push((0,L.max)(z.data)[1]);const Y=this.tokenizer.decode(E);He.push({text:Y})}return nt?He[0]:He}async _call_whisper(Q,ze){const nt=ze.return_timestamps??!1,at=ze.chunk_length_s??0,Ze=ze.force_full_sequences??!1;let He=ze.stride_length_s??null;const mt={...ze};nt==="word"&&(mt.return_token_timestamps=!0,mt.return_timestamps=!1);const wt=!Array.isArray(Q);wt&&(Q=[Q]);const Lt=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,kt=this.processor.feature_extractor.config.hop_length,E=this.processor.feature_extractor.config.sampling_rate,Y=await se(Q,E),z=[];for(const ae of Y){let be=[];if(at>0){if(He===null)He=at/6;else if(at<=He)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const At=E*at,ot=E*He,yt=At-2*ot;let T=0;for(;;){const c=T+At,m=ae.subarray(T,c),U=await this.processor(m),he=T===0,Se=c>=ae.length;if(be.push({stride:[m.length,he?0:ot,Se?0:ot],input_features:U.input_features,is_last:Se}),Se)break;T+=yt}}else be=[{stride:[ae.length,0,0],input_features:(await this.processor(ae)).input_features,is_last:!0}];for(const At of be){mt.num_frames=Math.floor(At.stride[0]/kt);const ot=await this.model.generate({inputs:At.input_features,...mt});nt==="word"?(At.tokens=ot.sequences.tolist()[0],At.token_timestamps=ot.token_timestamps.tolist()[0].map(yt=>(0,L.round)(yt,2))):At.tokens=ot[0].tolist(),At.stride=At.stride.map(yt=>yt/E)}const[it,et]=this.tokenizer._decode_asr(be,{time_precision:Lt,return_timestamps:nt,force_full_sequences:Ze});z.push({text:it,...et})}return wt?z[0]:z}}class dt extends Me{constructor(Q){super(Q)}async _call(Q,ze={}){const nt=Array.isArray(Q),at=await K(Q),{pixel_values:Ze}=await this.processor(at),He=[];for(const mt of Ze){mt.dims=[1,...mt.dims];const wt=await this.model.generate({inputs:mt,...ze}),Lt=this.tokenizer.batch_decode(wt,{skip_special_tokens:!0}).map(kt=>({generated_text:kt.trim()}));He.push(Lt)}return nt?He:He[0]}}class gt extends Me{constructor(Q){super(Q)}async _call(Q,{top_k:ze=5}={}){const nt=await K(Q),{pixel_values:at}=await this.processor(nt),Ze=await this.model({pixel_values:at}),He=this.model.config.id2label,mt=[];for(const wt of Ze.logits){const Lt=await(0,M.topk)(new M.Tensor("float32",(0,L.softmax)(wt.data),wt.dims),ze),kt=Lt[0].tolist(),Y=Lt[1].tolist().map((z,ae)=>({label:He?He[z]:`LABEL_${z}`,score:kt[ae]}));mt.push(Y)}return Array.isArray(Q)?mt:mt[0]}}class xe extends Me{constructor(Q){super(Q),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(Q,{threshold:ze=.5,mask_threshold:nt=.5,overlap_mask_area_threshold:at=.8,label_ids_to_fuse:Ze=null,target_sizes:He=null,subtask:mt=null}={}){if(Array.isArray(Q)&&Q.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const Lt=await K(Q),kt=Lt.map(et=>[et.height,et.width]),{pixel_values:E,pixel_mask:Y}=await this.processor(Lt),z=await this.model({pixel_values:E,pixel_mask:Y});let ae=null;if(mt!==null)ae=this.subtasks_mapping[mt];else for(let[et,At]of Object.entries(this.subtasks_mapping))if(At in this.processor.feature_extractor){ae=this.processor.feature_extractor[At].bind(this.processor.feature_extractor),mt=et;break}const be=this.model.config.id2label,it=[];if(mt==="panoptic"||mt==="instance"){const et=ae(z,ze,nt,at,Ze,He??kt)[0],At=et.segmentation;for(const ot of et.segments_info){const yt=new Uint8ClampedArray(At.data.length);for(let c=0;c<At.data.length;++c)At.data[c]===ot.id&&(yt[c]=255);const T=new j.RawImage(yt,At.dims[1],At.dims[0],1);it.push({score:ot.score,label:be[ot.label_id],mask:T})}}else if(mt==="semantic"){const{segmentation:et,labels:At}=ae(z,He??kt)[0];for(const ot of At){const yt=new Uint8ClampedArray(et.data.length);for(let c=0;c<et.data.length;++c)et.data[c]===ot&&(yt[c]=255);const T=new j.RawImage(yt,et.dims[1],et.dims[0],1);it.push({score:null,label:be[ot],mask:T})}}else throw Error(`Subtask ${mt} not supported.`);return it}}class q extends Me{constructor(Q){super(Q)}async _call(Q,ze,{hypothesis_template:nt="This is a photo of {}"}={}){const at=Array.isArray(Q),Ze=await K(Q),He=ze.map(Y=>nt.replace("{}",Y)),mt=this.tokenizer(He,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:wt}=await this.processor(Ze),Lt=await this.model({...mt,pixel_values:wt}),kt=this.model.config.model_type==="siglip"?Y=>Y.sigmoid().data:Y=>(0,L.softmax)(Y.data),E=[];for(const Y of Lt.logits_per_image){const ae=[...kt(Y)].map((be,it)=>({score:be,label:ze[it]}));ae.sort((be,it)=>it.score-be.score),E.push(ae)}return at?E:E[0]}}class _e extends Me{constructor(Q){super(Q)}async _call(Q,{threshold:ze=.9,percentage:nt=!1}={}){const at=Array.isArray(Q);if(at&&Q.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Ze=await K(Q),He=nt?null:Ze.map(z=>[z.height,z.width]),{pixel_values:mt,pixel_mask:wt}=await this.processor(Ze),Lt=await this.model({pixel_values:mt,pixel_mask:wt}),kt=this.processor.feature_extractor.post_process_object_detection(Lt,ze,He),E=this.model.config.id2label,Y=kt.map(z=>z.boxes.map((ae,be)=>({score:z.scores[be],label:E[z.classes[be]],box:Te(ae,!nt)})));return at?Y:Y[0]}}class ke extends Me{constructor(Q){super(Q)}async _call(Q,ze,{threshold:nt=.1,top_k:at=null,percentage:Ze=!1}={}){const He=Array.isArray(Q),mt=await K(Q),wt=this.tokenizer(ze,{padding:!0,truncation:!0}),Lt=await this.processor(mt),kt=[];for(let E=0;E<mt.length;++E){const Y=mt[E],z=Ze?null:[[Y.height,Y.width]],ae=Lt.pixel_values[E].unsqueeze_(0),be=await this.model({...wt,pixel_values:ae}),it=this.processor.feature_extractor.post_process_object_detection(be,nt,z,!0)[0];let et=it.boxes.map((At,ot)=>({score:it.scores[ot],label:ze[it.classes[ot]],box:Te(At,!Ze)})).sort((At,ot)=>ot.score-At.score);at!==null&&(et=et.slice(0,at)),kt.push(et)}return He?kt:kt[0]}}class Qe extends Me{constructor(Q){super(Q)}async _call(Q,ze,nt={}){const at=(await K(Q))[0],{pixel_values:Ze}=await this.processor(at),He=`<s_docvqa><s_question>${ze}</s_question><s_answer>`,mt=this.tokenizer(He,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,wt=await this.model.generate({inputs:Ze,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:mt,...nt}),kt=this.tokenizer.batch_decode(wt)[0].match(/<s_answer>(.*?)<\/s_answer>/);let E=null;return kt&&kt.length>=2&&(E=kt[1].trim()),[{answer:E}]}}class _t extends Me{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(Q){super(Q),this.vocoder=Q.vocoder??null}async _call(Q,{speaker_embeddings:ze=null}={}){return this.processor?this._call_text_to_spectrogram(Q,{speaker_embeddings:ze}):this._call_text_to_waveform(Q)}async _call_text_to_waveform(Q){const ze=this.tokenizer(Q,{padding:!0,truncation:!0}),{waveform:nt}=await this.model(ze),at=this.model.config.sampling_rate;return{audio:nt.data,sampling_rate:at}}async _call_text_to_spectrogram(Q,{speaker_embeddings:ze}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await ue.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof ze=="string"||ze instanceof URL)&&(ze=new Float32Array(await(await fetch(ze)).arrayBuffer())),ze instanceof Float32Array)ze=new M.Tensor("float32",ze,[1,ze.length]);else if(!(ze instanceof M.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:nt}=this.tokenizer(Q,{padding:!0,truncation:!0}),{waveform:at}=await this.model.generate_speech(nt,ze,{vocoder:this.vocoder}),Ze=this.processor.feature_extractor.config.sampling_rate;return{audio:at.data,sampling_rate:Ze}}}class de extends Me{constructor(Q){super(Q)}async _call(Q){const ze=await K(Q),nt=await this.processor(ze),at=await this.model(nt),Ze=[];for(const He of at.reconstruction){const mt=He.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Ze.push(j.RawImage.fromTensor(mt))}return Ze.length>1?Ze:Ze[0]}}class Ue extends Me{constructor(Q){super(Q)}async _call(Q){const ze=await K(Q),nt=await this.processor(ze),{predicted_depth:at}=await this.model(nt),Ze=[];for(let He=0;He<ze.length;++He){const mt=(0,M.interpolate)(at[He],ze[He].size.reverse(),"bilinear",!1),wt=mt.mul_(255/(0,L.max)(mt.data)[0]).to("uint8");Ze.push({predicted_depth:at[He],depth:j.RawImage.fromTensor(wt)})}return Ze.length>1?Ze:Ze[0]}}const ct=Object.freeze({"text-classification":{tokenizer:F.AutoTokenizer,pipeline:N,model:ue.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:F.AutoTokenizer,pipeline:re,model:ue.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:F.AutoTokenizer,pipeline:ve,model:ue.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:F.AutoTokenizer,pipeline:J,model:ue.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:F.AutoTokenizer,pipeline:W,model:ue.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:F.AutoTokenizer,pipeline:B,model:ue.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:F.AutoTokenizer,pipeline:Z,model:ue.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:F.AutoTokenizer,pipeline:P,model:ue.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:F.AutoTokenizer,pipeline:ye,model:ue.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:je,model:ue.AutoModelForAudioClassification,processor:oe.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:F.AutoTokenizer,pipeline:De,model:ue.AutoModel,processor:oe.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:F.AutoTokenizer,pipeline:ft,model:[ue.AutoModelForSpeechSeq2Seq,ue.AutoModelForCTC],processor:oe.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:F.AutoTokenizer,pipeline:_t,model:[ue.AutoModelForTextToWaveform,ue.AutoModelForTextToSpectrogram],processor:[oe.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:F.AutoTokenizer,pipeline:dt,model:ue.AutoModelForVision2Seq,processor:oe.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:gt,model:ue.AutoModelForImageClassification,processor:oe.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:xe,model:[ue.AutoModelForImageSegmentation,ue.AutoModelForSemanticSegmentation,ue.AutoModelForUniversalSegmentation],processor:oe.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:F.AutoTokenizer,pipeline:q,model:ue.AutoModel,processor:oe.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:_e,model:ue.AutoModelForObjectDetection,processor:oe.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:F.AutoTokenizer,pipeline:ke,model:ue.AutoModelForZeroShotObjectDetection,processor:oe.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:F.AutoTokenizer,pipeline:Qe,model:ue.AutoModelForDocumentQuestionAnswering,processor:oe.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:de,model:ue.AutoModelForImageToImage,processor:oe.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:Ue,model:ue.AutoModelForDepthEstimation,processor:oe.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:F.AutoTokenizer,pipeline:Ce,model:ue.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:oe.AutoProcessor,pipeline:Pe,model:[ue.AutoModelForImageFeatureExtraction,ue.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Ve=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function Mt(tt,Q=null,{progress_callback:ze=null,config:nt=null,cache_dir:at=null,local_files_only:Ze=!1,revision:He="main",device:mt=null,dtype:wt=null,model_file_name:Lt=null,session_options:kt={}}={}){tt=Ve[tt]??tt;const E=ct[tt.split("_",1)[0]];if(!E)throw Error(`Unsupported pipeline: ${tt}. Must be one of [${Object.keys(ct)}]`);Q||(Q=E.default.model,console.log(`No model specified. Using default model: "${Q}".`));const Y={progress_callback:ze,config:nt,cache_dir:at,local_files_only:Ze,revision:He,device:mt,dtype:wt,model_file_name:Lt,session_options:kt},z=new Map([["tokenizer",E.tokenizer],["model",E.model],["processor",E.processor]]),ae=await Et(z,Q,Y);ae.task=tt,(0,Ee.dispatchCallback)(ze,{status:"ready",task:tt,model:Q});const be=E.pipeline;return new be(ae)}async function Et(tt,Q,ze){const nt=Object.create(null),at=[];for(const[Ze,He]of tt.entries()){if(!He)continue;let mt;Array.isArray(He)?mt=new Promise(async(wt,Lt)=>{let kt;for(const E of He){if(E===null){wt(null);return}try{wt(await E.from_pretrained(Q,ze));return}catch(Y){if(Y.message?.includes("Unsupported model type"))kt=Y;else if(Y.message?.includes("Could not locate file"))kt=Y;else{Lt(Y);return}}}Lt(kt)}):mt=He.from_pretrained(Q,ze),nt[Ze]=mt,at.push(mt)}await Promise.all(at);for(const[Ze,He]of Object.entries(nt))nt[Ze]=await He;return nt}},"./src/processors.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{ASTFeatureExtractor:()=>be,AutoProcessor:()=>sr,BeitFeatureExtractor:()=>ze,BitImageProcessor:()=>Ce,CLIPFeatureExtractor:()=>je,CLIPImageProcessor:()=>De,ChineseCLIPFeatureExtractor:()=>ft,ClapFeatureExtractor:()=>it,ConvNextFeatureExtractor:()=>gt,ConvNextImageProcessor:()=>xe,DPTFeatureExtractor:()=>P,DPTImageProcessor:()=>ye,DeiTFeatureExtractor:()=>Q,DetrFeatureExtractor:()=>He,DonutFeatureExtractor:()=>nt,DonutImageProcessor:()=>at,EfficientNetImageProcessor:()=>ke,FeatureExtractor:()=>J,Florence2Processor:()=>Ge,GLPNFeatureExtractor:()=>Pe,ImageFeatureExtractor:()=>Z,MaskFormerFeatureExtractor:()=>mt,MobileNetV1FeatureExtractor:()=>Qe,MobileNetV2FeatureExtractor:()=>_t,MobileNetV3FeatureExtractor:()=>de,MobileNetV4FeatureExtractor:()=>Ue,MobileViTFeatureExtractor:()=>ct,MobileViTImageProcessor:()=>Ve,NougatImageProcessor:()=>Ze,OwlViTFeatureExtractor:()=>Mt,OwlViTProcessor:()=>Se,Owlv2ImageProcessor:()=>Et,Processor:()=>yt,PvtImageProcessor:()=>G,PyAnnoteFeatureExtractor:()=>et,PyAnnoteProcessor:()=>U,RTDetrImageProcessor:()=>tt,SamImageProcessor:()=>Lt,SamProcessor:()=>T,SapiensFeatureExtractor:()=>W,SeamlessM4TFeatureExtractor:()=>ae,SegformerFeatureExtractor:()=>B,SiglipImageProcessor:()=>dt,SpeechT5FeatureExtractor:()=>ot,SpeechT5Processor:()=>he,Swin2SRImageProcessor:()=>kt,ViTFeatureExtractor:()=>q,ViTImageProcessor:()=>_e,VitMatteImageProcessor:()=>E,Wav2Vec2FeatureExtractor:()=>z,Wav2Vec2ProcessorWithLM:()=>m,WeSpeakerFeatureExtractor:()=>At,WhisperFeatureExtractor:()=>Y,WhisperProcessor:()=>c,YolosFeatureExtractor:()=>wt});var F=I("./src/utils/generic.js"),ue=I("./src/utils/core.js"),oe=I("./src/utils/hub.js"),ge=I("./src/utils/maths.js"),Ee=I("./src/utils/tensor.js");I("./src/utils/image.js");var L=I("./src/utils/audio.js");function O([Je,R,we,$e]){return[Je-we/2,R-$e/2,Je+we/2,R+$e/2]}function M(Je,R=.5,we=null,$e=!1){const Be=Je.logits,Ke=Je.pred_boxes,[pt,Ct,Tt]=Be.dims;if(we!==null&&we.length!==pt)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Ft=[];for(let xt=0;xt<pt;++xt){let Ut=we!==null?we[xt]:null,Wt={boxes:[],classes:[],scores:[]},Nt=Be[xt],Le=Ke[xt];for(let Re=0;Re<Ct;++Re){let vt=Nt[Re],Ht=[],ar;if($e){ar=vt.sigmoid().data;for(let Or=0;Or<ar.length;++Or)ar[Or]>R&&Ht.push(Or)}else{let Or=(0,ge.max)(vt.data)[1];if(Or===Tt-1||(ar=(0,ge.softmax)(vt.data),ar[Or]<R))continue;Ht.push(Or)}for(const Or of Ht){let jr=Le[Re].data;jr=O(jr),Ut!==null&&(jr=jr.map((Er,Dr)=>Er*Ut[(Dr+1)%2])),Wt.boxes.push(jr),Wt.classes.push(Or),Wt.scores.push(ar[Or])}}Ft.push(Wt)}return Ft}function j(Je,R=null){const we=Je.logits,$e=we.dims[0];if(R!==null&&R.length!==$e)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const Be=[];for(let Ke=0;Ke<$e;++Ke){const pt=R!==null?R[Ke]:null;let Ct=we[Ke];pt!==null&&(Ct=(0,Ee.interpolate)(Ct,pt,"bilinear",!1));const[Tt,Ft]=pt??Ct.dims.slice(-2),xt=new Ee.Tensor("int32",new Int32Array(Tt*Ft),[Tt,Ft]),Ut=Ct[0].data,Wt=xt.data;for(let Re=1;Re<Ct.dims[0];++Re){const vt=Ct[Re].data;for(let Ht=0;Ht<vt.length;++Ht)vt[Ht]>Ut[Ht]&&(Ut[Ht]=vt[Ht],Wt[Ht]=Re)}const Nt=new Array(Ct.dims[0]);for(let Re=0;Re<Wt.length;++Re){const vt=Wt[Re];Nt[vt]=vt}const Le=Nt.filter(Re=>Re!==void 0);Be.push({segmentation:xt,labels:Le})}return Be}function K(Je,R,we,$e){const Be=[],Ke=[],pt=[];for(let Ct=0;Ct<Je.dims[0];++Ct){const Tt=Je[Ct],Ft=R[Ct],xt=(0,ge.max)(Tt.data)[1];if(xt===$e)continue;const Wt=(0,ge.softmax)(Tt.data)[xt];Wt>we&&(Be.push(Ft),Ke.push(Wt),pt.push(xt))}return[Be,Ke,pt]}function se(Je,R,we,$e=.5,Be=.8){const Ke=[];let pt=0,Ct=0;const Tt=R[we].data;for(let xt=0;xt<Je.length;++xt)Je[xt]===we&&(Ke.push(xt),++pt),Tt[xt]>=$e&&++Ct;let Ft=pt>0&&Ct>0;return Ft&&(Ft=pt/Ct>Be),[Ft,Ke]}function Te(Je,R,we,$e,Be,Ke=null,pt=null){const[Ct,Tt]=pt??Je[0].dims,Ft=new Ee.Tensor("int32",new Int32Array(Ct*Tt),[Ct,Tt]),xt=[];if(pt!==null)for(let Re=0;Re<Je.length;++Re)Je[Re]=(0,Ee.interpolate)(Je[Re],pt,"bilinear",!1);const Ut=new Int32Array(Je[0].data.length),Wt=new Float32Array(Je[0].data.length);for(let Re=0;Re<Je.length;++Re){let vt=R[Re];const Ht=Je[Re].data;for(let ar=0;ar<Ht.length;++ar)Ht[ar]*=vt,Ht[ar]>Wt[ar]&&(Ut[ar]=Re,Wt[ar]=Ht[ar])}let Nt=0;const Le=Ft.data;for(let Re=0;Re<we.length;++Re){const vt=we[Re],[Ht,ar]=se(Ut,Je,Re,$e,Be);if(Ht){++Nt;for(const Or of ar)Le[Or]=Nt;xt.push({id:Nt,label_id:vt,score:R[Re]})}}return[Ft,xt]}function Me(Je,R=.5,we=.5,$e=.8,Be=null,Ke=null){Be===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),Be=new Set);const pt=Je.class_queries_logits??Je.logits,Tt=(Je.masks_queries_logits??Je.pred_masks).sigmoid();let[Ft,xt,Ut]=pt.dims;if(Ut-=1,Ke!==null&&Ke.length!==Ft)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Wt=[];for(let Nt=0;Nt<Ft;++Nt){let Le=Ke!==null?Ke[Nt]:null,Re=pt[Nt],vt=Tt[Nt],[Ht,ar,Or]=K(Re,vt,R,Ut);if(Or.length===0){let[Dr,Ar]=Le??vt.dims.slice(-2),zn=new Ee.Tensor("int32",new Int32Array(Dr*Ar).fill(-1),[Dr,Ar]);Wt.push({segmentation:zn,segments_info:[]});continue}let[jr,Er]=Te(Ht,ar,Or,we,$e,Be,Le);Wt.push({segmentation:jr,segments_info:Er})}return Wt}function N(Je,R){if(!(Je instanceof Float32Array||Je instanceof Float64Array))throw new Error(`${R} expects input to be a Float32Array or a Float64Array, but got ${Je?.constructor?.name??typeof Je} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}function re(Je,R,we=0,$e=null){const Be=Je/R;let Ke=(0,ge.bankers_round)(Be)*R;return $e!==null&&Ke>$e&&(Ke=Math.floor(Be)*R),Ke<we&&(Ke=Math.ceil(Be)*R),Ke}function ve([Je,R],we){return[Math.max(Math.floor(Je/we),1)*we,Math.max(Math.floor(R/we),1)*we]}class J extends F.Callable{constructor(R){super(),this.config=R}}class Z extends J{constructor(R){super(R),this.image_mean=this.config.image_mean??this.config.mean,this.image_std=this.config.image_std??this.config.std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.do_thumbnail=this.config.do_thumbnail,this.size=this.config.size,this.size_divisibility=this.config.size_divisibility??this.config.size_divisor,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.do_crop_margin=this.config.do_crop_margin,this.pad_size=this.config.pad_size,this.do_pad=this.config.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=this.config.do_flip_channel_order??!1}async thumbnail(R,we,$e=2){const Be=R.height,Ke=R.width,pt=we.height,Ct=we.width;let Tt=Math.min(Be,pt),Ft=Math.min(Ke,Ct);return Tt===Be&&Ft===Ke?R:(Be>Ke?Ft=Math.floor(Ke*Tt/Be):Ke>Be&&(Tt=Math.floor(Be*Ft/Ke)),await R.resize(Ft,Tt,{resample:$e}))}async crop_margin(R,we=200){const $e=R.clone().grayscale(),Be=(0,ge.min)($e.data)[0],pt=(0,ge.max)($e.data)[0]-Be;if(pt===0)return R;const Ct=we/255;let Tt=$e.width,Ft=$e.height,xt=0,Ut=0;const Wt=$e.data;for(let Nt=0;Nt<$e.height;++Nt){const Le=Nt*$e.width;for(let Re=0;Re<$e.width;++Re)(Wt[Le+Re]-Be)/pt<Ct&&(Tt=Math.min(Tt,Re),Ft=Math.min(Ft,Nt),xt=Math.max(xt,Re),Ut=Math.max(Ut,Nt))}return R=await R.crop([Tt,Ft,xt,Ut]),R}pad_image(R,we,$e,{mode:Be="constant",center:Ke=!1,constant_values:pt=0}={}){const[Ct,Tt,Ft]=we;let xt,Ut;if(typeof $e=="number"?(xt=$e,Ut=$e):(xt=$e.width,Ut=$e.height),xt!==Tt||Ut!==Ct){const Wt=new Float32Array(xt*Ut*Ft);if(Array.isArray(pt))for(let Re=0;Re<Wt.length;++Re)Wt[Re]=pt[Re%Ft];else pt!==0&&Wt.fill(pt);const[Nt,Le]=Ke?[Math.floor((xt-Tt)/2),Math.floor((Ut-Ct)/2)]:[0,0];for(let Re=0;Re<Ct;++Re){const vt=(Re+Le)*xt,Ht=Re*Tt;for(let ar=0;ar<Tt;++ar){const Or=(vt+ar+Nt)*Ft,jr=(Ht+ar)*Ft;for(let Er=0;Er<Ft;++Er)Wt[Or+Er]=R[jr+Er]}}if(Be==="symmetric"){if(Ke)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const Re=Ct-1,vt=Tt-1;for(let Ht=0;Ht<Ut;++Ht){const ar=Ht*xt,Or=(0,ue.calculateReflectOffset)(Ht,Re)*Tt;for(let jr=0;jr<xt;++jr){if(Ht<Ct&&jr<Tt)continue;const Er=(ar+jr)*Ft,Dr=(Or+(0,ue.calculateReflectOffset)(jr,vt))*Ft;for(let Ar=0;Ar<Ft;++Ar)Wt[Er+Ar]=R[Dr+Ar]}}}R=Wt,we=[Ut,xt,Ft]}return[R,we]}rescale(R){for(let we=0;we<R.length;++we)R[we]=this.rescale_factor*R[we]}get_resize_output_image_size(R,we){const[$e,Be]=R.size;let Ke,pt;if(this.do_thumbnail){const{height:Ct,width:Tt}=we;Ke=Math.min(Ct,Tt)}else Number.isInteger(we)?(Ke=we,pt=this.config.max_size??Ke):we!==void 0&&(Ke=we.shortest_edge,pt=we.longest_edge);if(Ke!==void 0||pt!==void 0){const Ct=Ke===void 0?1:Math.max(Ke/$e,Ke/Be),Tt=$e*Ct,Ft=Be*Ct,xt=pt===void 0?1:Math.min(pt/Tt,pt/Ft);let Ut=Math.floor(Number((Tt*xt).toFixed(2))),Wt=Math.floor(Number((Ft*xt).toFixed(2)));return this.size_divisibility!==void 0&&([Ut,Wt]=ve([Ut,Wt],this.size_divisibility)),[Ut,Wt]}else if(we!==void 0&&we.width!==void 0&&we.height!==void 0){let Ct=we.width,Tt=we.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Ft=Tt/Be,xt=Ct/$e;Math.abs(1-xt)<Math.abs(1-Ft)?Ft=xt:xt=Ft,Tt=re(Ft*Be,this.config.ensure_multiple_of),Ct=re(xt*$e,this.config.ensure_multiple_of)}return[Ct,Tt]}else{if(this.size_divisibility!==void 0)return ve([$e,Be],this.size_divisibility);throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(we)}`)}}async resize(R){const[we,$e]=this.get_resize_output_image_size(R,this.size);return await R.resize(we,$e,{resample:this.resample})}async preprocess(R,{do_normalize:we=null,do_pad:$e=null,do_convert_rgb:Be=null,do_convert_grayscale:Ke=null,do_flip_channel_order:pt=null}={}){this.do_crop_margin&&(R=await this.crop_margin(R));const[Ct,Tt]=R.size;if(Be??this.do_convert_rgb?R=R.rgb():Ke&&(R=R.grayscale()),this.do_resize&&(R=await this.resize(R)),this.do_thumbnail&&(R=await this.thumbnail(R,this.size,this.resample)),this.do_center_crop){let Nt,Le;Number.isInteger(this.crop_size)?(Nt=this.crop_size,Le=this.crop_size):(Nt=this.crop_size.width,Le=this.crop_size.height),R=await R.center_crop(Nt,Le)}const Ft=[R.height,R.width];let xt=Float32Array.from(R.data),Ut=[R.height,R.width,R.channels];if(this.do_rescale&&this.rescale(xt),we??this.do_normalize){let Nt=this.image_mean;Array.isArray(this.image_mean)||(Nt=new Array(R.channels).fill(Nt));let Le=this.image_std;if(Array.isArray(this.image_std)||(Le=new Array(R.channels).fill(Nt)),Nt.length!==R.channels||Le.length!==R.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${Nt.length}) and \`image_std\` (${Le.length}) must match the number of channels in the image (${R.channels}).`);for(let Re=0;Re<xt.length;Re+=R.channels)for(let vt=0;vt<R.channels;++vt)xt[Re+vt]=(xt[Re+vt]-Nt[vt])/Le[vt]}if($e??this.do_pad){if(this.pad_size)[xt,Ut]=this.pad_image(xt,[R.height,R.width,R.channels],this.pad_size);else if(this.size_divisibility){const[Nt,Le]=ve([Ut[1],Ut[0]],this.size_divisibility);[xt,Ut]=this.pad_image(xt,Ut,{width:Nt,height:Le})}}if(pt??this.do_flip_channel_order){if(Ut[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let Nt=0;Nt<xt.length;Nt+=3){const Le=xt[Nt];xt[Nt]=xt[Nt+2],xt[Nt+2]=Le}}const Wt=new Ee.Tensor("float32",xt,Ut).permute(2,0,1);return{original_size:[Tt,Ct],reshaped_input_size:Ft,pixel_values:Wt}}async _call(R,...we){Array.isArray(R)||(R=[R]);const $e=await Promise.all(R.map(Ke=>this.preprocess(Ke)));return{pixel_values:(0,Ee.stack)($e.map(Ke=>Ke.pixel_values),0),original_sizes:$e.map(Ke=>Ke.original_size),reshaped_input_sizes:$e.map(Ke=>Ke.reshaped_input_size)}}}class W extends Z{post_process_semantic_segmentation(...R){return j(...R)}}class B extends Z{post_process_semantic_segmentation(...R){return j(...R)}}class G extends Z{}class P extends Z{}class ye extends P{}class Ce extends Z{}class Pe extends Z{}class je extends Z{}class De extends je{}class ft extends Z{}class dt extends Z{}class gt extends Z{constructor(R){super(R),this.crop_pct=this.config.crop_pct??224/256}async resize(R){const we=this.size?.shortest_edge;if(we===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(we<384){const $e=Math.floor(we/this.crop_pct),[Be,Ke]=this.get_resize_output_image_size(R,{shortest_edge:$e});R=await R.resize(Be,Ke,{resample:this.resample}),R=await R.center_crop(we,we)}else R=await R.resize(we,we,{resample:this.resample});return R}}class xe extends gt{}class q extends Z{}class _e extends Z{}class ke extends Z{constructor(R){super(R),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(we=>we*we))}}class Qe extends Z{}class _t extends Z{}class de extends Z{}class Ue extends Z{}class ct extends Z{}class Ve extends ct{}class Mt extends Z{post_process_object_detection(...R){return M(...R)}}class Et extends Mt{}class tt extends Z{post_process_object_detection(...R){return M(...R)}}class Q extends Z{}class ze extends Z{}class nt extends Z{pad_image(R,we,$e,Be={}){const[Ke,pt,Ct]=we;let Tt=this.image_mean;Array.isArray(this.image_mean)||(Tt=new Array(Ct).fill(Tt));let Ft=this.image_std;Array.isArray(Ft)||(Ft=new Array(Ct).fill(Tt));const xt=Tt.map((Ut,Wt)=>-Ut/Ft[Wt]);return super.pad_image(R,we,$e,{center:!0,constant_values:xt,...Be})}}class at extends nt{}class Ze extends nt{}class He extends Z{async _call(R){const we=await super._call(R),$e=[we.pixel_values.dims[0],64,64],Be=(0,Ee.full)($e,1n);return{...we,pixel_mask:Be}}post_process_object_detection(...R){return M(...R)}post_process_panoptic_segmentation(...R){return Me(...R)}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class mt extends Z{post_process_panoptic_segmentation(...R){return Me(...R)}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class wt extends Z{post_process_object_detection(...R){return M(...R)}}class Lt extends Z{reshape_input_points(R,we,$e,Be=!1){R=structuredClone(R);let Ke=(0,ue.calculateDimensions)(R);if(Ke.length===3)Be||(Ke=[1,...Ke]),R=[R];else if(Ke.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let pt=0;pt<R.length;++pt){let Ct=we[pt],Tt=$e[pt],Ft=[Tt[0]/Ct[0],Tt[1]/Ct[1]];for(let xt=0;xt<R[pt].length;++xt)for(let Ut=0;Ut<R[pt][xt].length;++Ut)for(let Wt=0;Wt<R[pt][xt][Ut].length;++Wt)R[pt][xt][Ut][Wt]*=Ft[Wt%2]}return new Ee.Tensor("float32",Float32Array.from(R.flat(1/0)),Ke)}add_input_labels(R,we){let $e=(0,ue.calculateDimensions)(R);if($e.length===2)$e=[1,...$e],R=[R];else if($e.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if($e.some((Be,Ke)=>Be!==we.dims[Ke]))throw Error(`The first ${$e.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new Ee.Tensor("int64",R.flat(1/0).map(BigInt),$e)}async _call(R,{input_points:we=null,input_labels:$e=null,input_boxes:Be=null}={}){const Ke=await super._call(R);if(we&&(Ke.input_points=this.reshape_input_points(we,Ke.original_sizes,Ke.reshaped_input_sizes)),$e){if(!Ke.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");Ke.input_labels=this.add_input_labels($e,Ke.input_points)}return Be&&(Ke.input_boxes=this.reshape_input_points(Be,Ke.original_sizes,Ke.reshaped_input_sizes,!0)),Ke}async post_process_masks(R,we,$e,{mask_threshold:Be=0,binarize:Ke=!0,pad_size:pt=null}={}){const Ct=[];pt=pt??this.pad_size;const Tt=[pt.height,pt.width];for(let Ft=0;Ft<we.length;++Ft){const xt=we[Ft],Ut=$e[Ft];let Wt=await(0,Ee.interpolate_4d)(R[Ft],{mode:"bilinear",size:Tt});if(Wt=Wt.slice(null,null,[0,Ut[0]],[0,Ut[1]]),Wt=await(0,Ee.interpolate_4d)(Wt,{mode:"bilinear",size:xt}),Ke){const Nt=Wt.data,Le=new Uint8Array(Nt.length);for(let Re=0;Re<Nt.length;++Re)Nt[Re]>Be&&(Le[Re]=1);Wt=new Ee.Tensor("bool",Le,Wt.dims)}Ct.push(Wt)}return Ct}generate_crop_boxes(R,we,{crop_n_layers:$e=0,overlap_ratio:Be=512/1500,points_per_crop:Ke=32,crop_n_points_downscale_factor:pt=1}={}){}}class kt extends Z{pad_image(R,we,$e,Be={}){const[Ke,pt,Ct]=we;return super.pad_image(R,we,{width:pt+($e-pt%$e)%$e,height:Ke+($e-Ke%$e)%$e},{mode:"symmetric",center:!1,constant_values:-1,...Be})}}class E extends Z{async _call(R,we){Array.isArray(R)||(R=[R]),Array.isArray(we)||(we=[we]);const $e=await Promise.all(R.map(pt=>this.preprocess(pt))),Be=await Promise.all(we.map(pt=>this.preprocess(pt,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,Ee.stack)($e.map((pt,Ct)=>(0,Ee.cat)([pt.pixel_values,Be[Ct].pixel_values],0)),0),original_sizes:$e.map(pt=>pt.original_size),reshaped_input_sizes:$e.map(pt=>pt.reshaped_input_size)}}}class Y extends J{constructor(R){super(R),this.config.mel_filters??=(0,L.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,L.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(R){const we=await(0,L.spectrogram)(R,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),$e=we.data,Be=(0,ge.max)($e)[0];for(let Ke=0;Ke<$e.length;++Ke)$e[Ke]=(Math.max($e[Ke],Be-8)+4)/4;return we}async _call(R){N(R,"WhisperFeatureExtractor");let we;return R.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),we=R.slice(0,this.config.n_samples)):(we=new Float32Array(this.config.n_samples),we.set(R)),{input_features:(await this._extract_fbank_features(we)).unsqueeze_(0)}}}class z extends J{_zero_mean_unit_var_norm(R){const $e=R.reduce((Ke,pt)=>Ke+pt,0)/R.length,Be=R.reduce((Ke,pt)=>Ke+(pt-$e)**2,0)/R.length;return R.map(Ke=>(Ke-$e)/Math.sqrt(Be+1e-7))}async _call(R){N(R,"Wav2Vec2FeatureExtractor"),R instanceof Float64Array&&(R=new Float32Array(R));let we=R;this.config.do_normalize&&(we=this._zero_mean_unit_var_norm(we));const $e=[1,we.length];return{input_values:new Ee.Tensor("float32",we,$e),attention_mask:new Ee.Tensor("int64",new BigInt64Array(we.length).fill(1n),$e)}}}class ae extends J{constructor(R){super(R);const we=this.config.sampling_rate,$e=(0,L.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(we/2),we,null,"kaldi",!0);for(let Be=0;Be<$e.length;++Be)$e[Be].push(0);this.mel_filters=$e,this.window=(0,L.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(R,we){return R=R.map($e=>$e*32768),(0,L.spectrogram)(R,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:we,transpose:!0})}async _call(R,{padding:we=!0,pad_to_multiple_of:$e=2,do_normalize_per_mel_bins:Be=!0,return_attention_mask:Ke=!0}={}){N(R,"SeamlessM4TFeatureExtractor");let pt=await this._extract_fbank_features(R,this.config.max_length);if(Be){const[Le,Re]=pt.dims,vt=pt.data;for(let Ht=0;Ht<Re;++Ht){let ar=0;for(let Dr=0;Dr<Le;++Dr)ar+=vt[Dr*Re+Ht];const Or=ar/Le;let jr=0;for(let Dr=0;Dr<Le;++Dr)jr+=(vt[Dr*Re+Ht]-Or)**2;jr/=Le-1;const Er=Math.sqrt(jr+1e-7);for(let Dr=0;Dr<Le;++Dr){const Ar=Dr*Re+Ht;vt[Ar]=(vt[Ar]-Or)/Er}}}let Ct;if(we){const[Le,Re]=pt.dims,vt=pt.data,Ht=Le%$e;if(Ht>0){const ar=new Float32Array(Re*(Le+Ht));ar.set(vt),ar.fill(this.config.padding_value,vt.length);const Or=Le+Ht;pt=new Ee.Tensor(pt.type,ar,[Or,Re]),Ke&&(Ct=new Ee.Tensor("int64",new BigInt64Array(Or),[1,Or]),Ct.data.fill(1n,0,Le))}}const[Tt,Ft]=pt.dims,xt=this.config.stride;if(Tt%xt!==0)throw new Error(`The number of frames (${Tt}) must be a multiple of the stride (${xt}).`);const Wt=pt.view(1,Math.floor(Tt/xt),Ft*xt),Nt={input_features:Wt};if(Ke){const Le=Wt.dims[1],Re=new BigInt64Array(Le);if(Ct){const vt=Ct.data;for(let Ht=1,ar=0;Ht<Tt;Ht+=xt,++ar)Re[ar]=vt[Ht]}else Re.fill(1n);Nt.attention_mask=new Ee.Tensor("int64",Re,[1,Le])}return Nt}}class be extends J{constructor(R){super(R);const we=this.config.sampling_rate,$e=(0,L.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(we/2),we,null,"kaldi",!0);for(let Be=0;Be<$e.length;++Be)$e[Be].push(0);this.mel_filters=$e,this.window=(0,L.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(R,we){return(0,L.spectrogram)(R,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:we,transpose:!0})}async _call(R){N(R,"ASTFeatureExtractor");const we=await this._extract_fbank_features(R,this.config.max_length);if(this.config.do_normalize){const $e=this.std*2,Be=we.data;for(let Ke=0;Ke<Be.length;++Ke)Be[Ke]=(Be[Ke]-this.mean)/$e}return{input_values:we.unsqueeze_(0)}}}class it extends J{constructor(R){super(R),this.mel_filters=(0,L.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,L.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,L.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(R,we,$e,Be){let Ke;const pt=R.length-we;if(pt>0)if($e==="rand_trunc"){const Ct=Math.floor(Math.random()*(pt+1));R=R.subarray(Ct,Ct+we),Ke=await this._extract_fbank_features(R,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${$e}" not implemented`);else{if(pt<0){let Ct=new Float64Array(we);if(Ct.set(R),Be==="repeat")for(let Tt=R.length;Tt<we;Tt+=R.length)Ct.set(R.subarray(0,Math.min(R.length,we-Tt)),Tt);else if(Be==="repeatpad")for(let Tt=R.length;Tt<-pt;Tt+=R.length)Ct.set(R,Tt);R=Ct}if($e==="fusion")throw new Error(`Truncation strategy "${$e}" not implemented`);Ke=await this._extract_fbank_features(R,this.mel_filters_slaney,this.config.nb_max_samples)}return Ke.unsqueeze_(0)}async _extract_fbank_features(R,we,$e=null){return(0,L.spectrogram)(R,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:we,log_mel:"dB",max_num_frames:$e,do_pad:!1,transpose:!0})}async _call(R,{max_length:we=null}={}){return N(R,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(R,we??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}class et extends J{async _call(R){N(R,"PyAnnoteFeatureExtractor"),R instanceof Float64Array&&(R=new Float32Array(R));const we=[1,1,R.length];return{input_values:new Ee.Tensor("float32",R,we)}}samples_to_frames(R){return(R-this.config.offset)/this.config.step}post_process_speaker_diarization(R,we){const $e=we/this.samples_to_frames(we)/this.config.sampling_rate,Be=[];for(const Ke of R.tolist()){const pt=[];let Ct=-1;for(let Tt=0;Tt<Ke.length;++Tt){const Ft=(0,ge.softmax)(Ke[Tt]),[xt,Ut]=(0,ge.max)(Ft),[Wt,Nt]=[Tt,Tt+1];Ut!==Ct?(Ct=Ut,pt.push({id:Ut,start:Wt,end:Nt,score:xt})):(pt.at(-1).end=Nt,pt.at(-1).score+=xt)}Be.push(pt.map(({id:Tt,start:Ft,end:xt,score:Ut})=>({id:Tt,start:Ft*$e,end:xt*$e,confidence:Ut/(xt-Ft)})))}return Be}}class At extends J{constructor(R){super(R);const we=this.config.sampling_rate,$e=(0,L.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(we/2),we,null,"kaldi",!0);for(let Be=0;Be<$e.length;++Be)$e[Be].push(0);this.mel_filters=$e,this.window=(0,L.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(R){return R=R.map(we=>we*32768),(0,L.spectrogram)(R,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(R){N(R,"WeSpeakerFeatureExtractor");const we=(await this._extract_fbank_features(R)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const $e=we.mean(1).data,Be=we.data,[Ke,pt,Ct]=we.dims;for(let Tt=0;Tt<Ke;++Tt){const Ft=Tt*pt*Ct,xt=Tt*Ct;for(let Ut=0;Ut<pt;++Ut){const Wt=Ft+Ut*Ct;for(let Nt=0;Nt<Ct;++Nt)Be[Wt+Nt]-=$e[xt+Nt]}}}return{input_features:we}}}class ot extends J{}class yt extends F.Callable{constructor(R){super(),this.feature_extractor=R}async _call(R,...we){return await this.feature_extractor(R,...we)}}class T extends yt{async _call(...R){return await this.feature_extractor(...R)}post_process_masks(...R){return this.feature_extractor.post_process_masks(...R)}reshape_input_points(...R){return this.feature_extractor.reshape_input_points(...R)}}class c extends yt{async _call(R){return await this.feature_extractor(R)}}class m extends yt{async _call(R){return await this.feature_extractor(R)}}class U extends yt{async _call(R){return await this.feature_extractor(R)}post_process_speaker_diarization(...R){return this.feature_extractor.post_process_speaker_diarization(...R)}}class he extends yt{async _call(R){return await this.feature_extractor(R)}}class Se extends yt{}class Ge extends yt{constructor(R){super(R);const{tasks_answer_post_processing_type:we,task_prompts_without_inputs:$e,task_prompts_with_input:Be}=R.config;this.tasks_answer_post_processing_type=new Map(Object.entries(we??{})),this.task_prompts_without_inputs=new Map(Object.entries($e??{})),this.task_prompts_with_input=new Map(Object.entries(Be??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(R){typeof R=="string"&&(R=[R]);const we=[];for(const $e of R)if(this.task_prompts_without_inputs.has($e))we.push(this.task_prompts_without_inputs.get($e));else{for(const[Be,Ke]of this.task_prompts_with_input)if($e.includes(Be)){we.push(Ke.replaceAll("{input}",$e).replaceAll(Be,""));break}we.length!==R.length&&we.push($e)}return we}post_process_generation(R,we,$e){const Be=this.tasks_answer_post_processing_type.get(we)??"pure_text";R=R.replaceAll("<s>","").replaceAll("</s>","");let Ke;switch(Be){case"pure_text":Ke=R;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const pt=Be==="ocr"?"quad_boxes":"bboxes",Ct=R.matchAll(this.regexes[pt]),Tt=[],Ft=[];for(const[xt,Ut,...Wt]of Ct)Tt.push(Ut?Ut.trim():Tt.at(-1)??""),Ft.push(Wt.map((Nt,Le)=>(Number(Nt)+.5)/this.size_per_bin*$e[Le%2]));Ke={labels:Tt,[pt]:Ft};break;default:throw new Error(`Task "${we}" (of type "${Be}") not yet implemented.`)}return{[we]:Ke}}}class sr{static FEATURE_EXTRACTOR_CLASS_MAPPING={ImageFeatureExtractor:Z,WhisperFeatureExtractor:Y,ViTFeatureExtractor:q,MobileViTFeatureExtractor:ct,MobileViTImageProcessor:Ve,MobileNetV1FeatureExtractor:Qe,MobileNetV2FeatureExtractor:_t,MobileNetV3FeatureExtractor:de,MobileNetV4FeatureExtractor:Ue,OwlViTFeatureExtractor:Mt,Owlv2ImageProcessor:Et,CLIPFeatureExtractor:je,CLIPImageProcessor:De,Florence2Processor:Ge,ChineseCLIPFeatureExtractor:ft,SiglipImageProcessor:dt,ConvNextFeatureExtractor:gt,ConvNextImageProcessor:xe,SegformerFeatureExtractor:B,SapiensFeatureExtractor:W,BitImageProcessor:Ce,DPTImageProcessor:ye,DPTFeatureExtractor:P,PvtImageProcessor:G,GLPNFeatureExtractor:Pe,BeitFeatureExtractor:ze,DeiTFeatureExtractor:Q,DetrFeatureExtractor:He,RTDetrImageProcessor:tt,MaskFormerFeatureExtractor:mt,YolosFeatureExtractor:wt,DonutFeatureExtractor:nt,DonutImageProcessor:at,NougatImageProcessor:Ze,EfficientNetImageProcessor:ke,ViTImageProcessor:_e,VitMatteImageProcessor:E,SamImageProcessor:Lt,Swin2SRImageProcessor:kt,Wav2Vec2FeatureExtractor:z,SeamlessM4TFeatureExtractor:ae,SpeechT5FeatureExtractor:ot,ASTFeatureExtractor:be,ClapFeatureExtractor:it,PyAnnoteFeatureExtractor:et,WeSpeakerFeatureExtractor:At};static PROCESSOR_CLASS_MAPPING={WhisperProcessor:c,Wav2Vec2ProcessorWithLM:m,PyAnnoteProcessor:U,SamProcessor:T,SpeechT5Processor:he,OwlViTProcessor:Se,Florence2Processor:Ge};static async from_pretrained(R,{progress_callback:we=null,config:$e=null,cache_dir:Be=null,local_files_only:Ke=!1,revision:pt="main"}={}){let Ct=$e??await(0,oe.getModelJSON)(R,"preprocessor_config.json",!0,{progress_callback:we,config:$e,cache_dir:Be,local_files_only:Ke,revision:pt}),Tt=Ct.feature_extractor_type??Ct.image_processor_type,Ft=this.FEATURE_EXTRACTOR_CLASS_MAPPING[Tt];if(!Ft)if(Ct.size!==void 0)console.warn(`Feature extractor type "${Tt}" not found, assuming ImageFeatureExtractor due to size parameter in config.`),Ft=Z;else throw new Error(`Unknown Feature Extractor type: ${Tt}`);let xt=this.PROCESSOR_CLASS_MAPPING[Ct.processor_class]??yt,Ut=new Ft(Ct);return new xt(Ut)}}},"./src/tokenizers.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{AlbertTokenizer:()=>pt,AutoTokenizer:()=>ts,BartTokenizer:()=>jr,BertTokenizer:()=>Ke,BlenderbotSmallTokenizer:()=>Oi,BlenderbotTokenizer:()=>Fi,BloomTokenizer:()=>zn,CLIPTokenizer:()=>_i,CamembertTokenizer:()=>Re,CodeGenTokenizer:()=>mi,CodeLlamaTokenizer:()=>$i,CohereTokenizer:()=>ri,ConvBertTokenizer:()=>Wt,DebertaTokenizer:()=>Ft,DebertaV2Tokenizer:()=>xt,DistilBertTokenizer:()=>Le,ElectraTokenizer:()=>Ht,EsmTokenizer:()=>Ai,FalconTokenizer:()=>ki,GPT2Tokenizer:()=>Or,GPTNeoXTokenizer:()=>Pi,GemmaTokenizer:()=>ei,Grok1Tokenizer:()=>Xn,HerbertTokenizer:()=>Ut,LlamaTokenizer:()=>hi,M2M100Tokenizer:()=>fi,MBart50Tokenizer:()=>Dr,MBartTokenizer:()=>Er,MPNetTokenizer:()=>Si,MarianTokenizer:()=>rr,MobileBertTokenizer:()=>Ct,NllbTokenizer:()=>Dn,NougatTokenizer:()=>Bi,PreTrainedTokenizer:()=>Be,Qwen2Tokenizer:()=>Ii,RoFormerTokenizer:()=>Nt,RobertaTokenizer:()=>Ar,SiglipTokenizer:()=>gi,SpeechT5Tokenizer:()=>wi,SqueezeBertTokenizer:()=>Tt,T5Tokenizer:()=>ar,TokenizerModel:()=>Pe,VitsTokenizer:()=>zi,Wav2Vec2CTCTokenizer:()=>ti,WhisperTokenizer:()=>Fn,XLMRobertaTokenizer:()=>Kn,XLMTokenizer:()=>vt,is_chinese_char:()=>J});var F=I("./src/utils/generic.js"),ue=I("./src/utils/core.js"),oe=I("./src/utils/hub.js"),ge=I("./src/utils/maths.js"),Ee=I("./src/utils/tensor.js"),L=I("./src/utils/data-structures.js"),O=I("./node_modules/@huggingface/jinja/dist/index.js"),M=I("./src/models/whisper/common_whisper.js");I("./src/utils/constants.js");async function j(fe,_){const V=await Promise.all([(0,oe.getModelJSON)(fe,"tokenizer.json",!0,_),(0,oe.getModelJSON)(fe,"tokenizer_config.json",!0,_)]);return _.legacy!==null&&(V[1].legacy=_.legacy),V}function K(fe,_){const V=[];let ne=0;for(const ce of fe.matchAll(_)){const Oe=ce[0];ne<ce.index&&V.push(fe.slice(ne,ce.index)),Oe.length>0&&V.push(Oe),ne=ce.index+Oe.length}return ne<fe.length&&V.push(fe.slice(ne)),V}function se(fe,_=!0){if(fe.Regex!==void 0){let V=fe.Regex.replace(/\\([#&~])/g,"$1");for(const[ne,ce]of ye)V=V.replaceAll(ne,ce);return new RegExp(V,"gu")}else if(fe.String!==void 0){const V=(0,ue.escapeRegExp)(fe.String);return new RegExp(_?V:`(${V})`,"gu")}else return console.warn("Unknown pattern type:",fe),null}function Te(fe){return new Map(Object.entries(fe))}function Me(fe){const _=fe.dims;switch(_.length){case 1:return fe.tolist();case 2:if(_[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return fe.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${_.length}.`)}}function N(fe){return fe.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function re(fe){return fe.replace(/\p{M}/gu,"")}function ve(fe){return re(fe.toLowerCase())}function J(fe){return fe>=19968&&fe<=40959||fe>=13312&&fe<=19903||fe>=131072&&fe<=173791||fe>=173824&&fe<=177983||fe>=177984&&fe<=178207||fe>=178208&&fe<=183983||fe>=63744&&fe<=64255||fe>=194560&&fe<=195103}function Z(fe,_,V){const ne=[];let ce=0;for(;ce<fe.length;){if(ne.push(fe[ce]),(_.get(fe[ce])??V)!==V){++ce;continue}for(;++ce<fe.length&&(_.get(fe[ce])??V)===V;)_.get(ne.at(-1))!==V&&(ne[ne.length-1]+=fe[ce])}return ne}function W(fe){return fe.match(/\S+/g)||[]}const B="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",G=new RegExp(`^[${B}]+$`,"gu"),P=".,!?…。，、।۔،",ye=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${P}])]+`,` ?[^\\s${P}]+`]]);class Ce{constructor(_){this.content=_.content,this.id=_.id,this.single_word=_.single_word??!1,this.lstrip=_.lstrip??!1,this.rstrip=_.rstrip??!1,this.special=_.special??!1,this.normalized=_.normalized??null}}class Pe extends F.Callable{constructor(_){super(),this.config=_,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(_,...V){switch(_.type){case"WordPiece":return new je(_);case"Unigram":return new De(_,...V);case"BPE":return new gt(_);default:if(_.vocab)return Array.isArray(_.vocab)?new De(_,...V):new xe(_,...V);throw new Error(`Unknown TokenizerModel type: ${_.type}`)}}_call(_){return _=this.encode(_),this.fuse_unk&&(_=Z(_,this.tokens_to_ids,this.unk_token_id)),_}encode(_){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(_){return _.map(V=>this.tokens_to_ids.get(V)??this.unk_token_id)}convert_ids_to_tokens(_){return _.map(V=>this.vocab[V]??this.unk_token)}}class je extends Pe{constructor(_){super(_),this.tokens_to_ids=Te(_.vocab),this.unk_token_id=this.tokens_to_ids.get(_.unk_token),this.unk_token=_.unk_token,this.max_input_chars_per_word=_.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[V,ne]of this.tokens_to_ids)this.vocab[ne]=V}encode(_){const V=[];for(const ne of _){const ce=[...ne];if(ce.length>this.max_input_chars_per_word){V.push(this.unk_token);continue}let Oe=!1,st=0;const Pt=[];for(;st<ce.length;){let zt=ce.length,Dt=null;for(;st<zt;){let $t=ce.slice(st,zt).join("");if(st>0&&($t=this.config.continuing_subword_prefix+$t),this.tokens_to_ids.has($t)){Dt=$t;break}--zt}if(Dt===null){Oe=!0;break}Pt.push(Dt),st=zt}Oe?V.push(this.unk_token):V.push(...Pt)}return V}}class De extends Pe{constructor(_,V){super(_);const ne=_.vocab.length;this.vocab=new Array(ne),this.scores=new Array(ne);for(let ce=0;ce<ne;++ce){const Oe=_.vocab[ce];this.vocab[ce]=Oe[0],this.scores[ce]=Oe[1]}this.unk_token_id=_.unk_id,this.unk_token=this.vocab[_.unk_id],this.tokens_to_ids=new Map(this.vocab.map((ce,Oe)=>[ce,Oe])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=V.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,ge.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new L.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(_){const V=_.chars,ne=1;let ce=0;for(;ce<V.length;){let Oe=!1;const st=V.slice(ce).join(""),Pt=this.trie.commonPrefixSearch(st);for(const zt of Pt){const Dt=this.tokens_to_ids.get(zt),$t=this.scores[Dt],_r=(0,ue.len)(zt);_.insert(ce,_r,$t,Dt),!Oe&&_r===ne&&(Oe=!0)}Oe||_.insert(ce,ne,this.unk_score,this.unk_token_id),ce+=ne}}tokenize(_){const V=new L.TokenLattice(_,this.bos_token_id,this.eos_token_id);return this.populateNodes(V),V.tokens()}encode(_){const V=[];for(const ne of _){const ce=this.tokenize(ne);V.push(...ce)}return V}}const ft=(()=>{const fe=[...Array.from({length:94},(ce,Oe)=>Oe+33),...Array.from({length:12},(ce,Oe)=>Oe+161),...Array.from({length:82},(ce,Oe)=>Oe+174)],_=fe.slice();let V=0;for(let ce=0;ce<256;++ce)fe.includes(ce)||(fe.push(ce),_.push(256+V),V+=1);const ne=_.map(ce=>String.fromCharCode(ce));return Object.fromEntries(fe.map((ce,Oe)=>[ce,ne[Oe]]))})(),dt=(0,ue.reverseDictionary)(ft);class gt extends Pe{constructor(_){super(_),this.tokens_to_ids=Te(_.vocab),this.unk_token_id=this.tokens_to_ids.get(_.unk_token),this.unk_token=_.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[ne,ce]of this.tokens_to_ids)this.vocab[ce]=ne;const V=Array.isArray(_.merges[0]);this.merges=V?_.merges:_.merges.map(ne=>ne.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((ne,ce)=>[JSON.stringify(ne),ce])),this.end_of_word_suffix=_.end_of_word_suffix,this.continuing_subword_suffix=_.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(_){if(_.length===0)return[];const V=this.cache.get(_);if(V!==void 0)return V;const ne=Array.from(_);this.end_of_word_suffix&&(ne[ne.length-1]+=this.end_of_word_suffix);let ce=[];if(ne.length>1){const Oe=new L.PriorityQueue((zt,Dt)=>zt.score<Dt.score);let st={token:ne[0],bias:0,prev:null,next:null},Pt=st;for(let zt=1;zt<ne.length;++zt){const Dt={bias:zt/ne.length,token:ne[zt],prev:Pt,next:null};Pt.next=Dt,this._add_node(Oe,Pt),Pt=Dt}for(;!Oe.isEmpty();){const zt=Oe.pop();if(zt.deleted||!zt.next||zt.next.deleted)continue;if(zt.deleted=!0,zt.next.deleted=!0,zt.prev){const $t={...zt.prev};zt.prev.deleted=!0,zt.prev=$t,$t.prev?$t.prev.next=$t:st=$t}const Dt={token:zt.token+zt.next.token,bias:zt.bias,prev:zt.prev,next:zt.next.next};Dt.prev?(Dt.prev.next=Dt,this._add_node(Oe,Dt.prev)):st=Dt,Dt.next&&(Dt.next.prev=Dt,this._add_node(Oe,Dt))}for(let zt=st;zt!==null;zt=zt.next)ce.push(zt.token)}else ce=ne;if(this.continuing_subword_suffix)for(let Oe=0;Oe<ce.length-1;++Oe)ce[Oe]+=this.continuing_subword_suffix;return this.cache.set(_,ce),ce}_add_node(_,V){const ne=this.bpe_ranks.get(JSON.stringify([V.token,V.next.token]));ne!==void 0&&(V.score=ne+V.bias,_.push(V))}encode(_){const V=[];for(const ne of _){if(this.ignore_merges&&this.tokens_to_ids.has(ne)){V.push(ne);continue}const ce=this.bpe(ne);for(const Oe of ce)if(this.tokens_to_ids.has(Oe))V.push(Oe);else if(this.byte_fallback){const st=Array.from(this.text_encoder.encode(Oe)).map(Pt=>`<0x${Pt.toString(16).toUpperCase().padStart(2,"0")}>`);st.every(Pt=>this.tokens_to_ids.has(Pt))?V.push(...st):V.push(this.unk_token)}else V.push(this.unk_token)}return V}}class xe extends Pe{constructor(_,V){super(_),this.tokens_to_ids=Te(V.target_lang?_.vocab[V.target_lang]:_.vocab),this.bos_token=V.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=V.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=V.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=V.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[ne,ce]of this.tokens_to_ids)this.vocab[ce]=ne}encode(_){return _}}class q extends F.Callable{constructor(_){super(),this.config=_}static fromConfig(_){if(_===null)return null;switch(_.type){case"BertNormalizer":return new Et(_);case"Precompiled":return new he(_);case"Sequence":return new Mt(_);case"Replace":return new _e(_);case"NFC":return new ke(_);case"NFKC":return new Qe(_);case"NFKD":return new _t(_);case"Strip":return new de(_);case"StripAccents":return new Ue(_);case"Lowercase":return new ct(_);case"Prepend":return new Ve(_);default:throw new Error(`Unknown Normalizer type: ${_.type}`)}}normalize(_){throw Error("normalize should be implemented in subclass.")}_call(_){return this.normalize(_)}}class _e extends q{normalize(_){const V=se(this.config.pattern);return V===null?_:_.replaceAll(V,this.config.content)}}class ke extends q{normalize(_){return _=_.normalize("NFC"),_}}class Qe extends q{normalize(_){return _=_.normalize("NFKC"),_}}class _t extends q{normalize(_){return _=_.normalize("NFKD"),_}}class de extends q{normalize(_){return this.config.strip_left&&this.config.strip_right?_=_.trim():(this.config.strip_left&&(_=_.trimStart()),this.config.strip_right&&(_=_.trimEnd())),_}}class Ue extends q{normalize(_){return _=re(_),_}}class ct extends q{normalize(_){return _=_.toLowerCase(),_}}class Ve extends q{normalize(_){return _=this.config.prepend+_,_}}class Mt extends q{constructor(_){super(_),this.normalizers=_.normalizers.map(V=>q.fromConfig(V))}normalize(_){return this.normalizers.reduce((V,ne)=>ne.normalize(V),_)}}class Et extends q{_tokenize_chinese_chars(_){const V=[];for(let ne=0;ne<_.length;++ne){const ce=_[ne],Oe=ce.charCodeAt(0);J(Oe)?(V.push(" "),V.push(ce),V.push(" ")):V.push(ce)}return V.join("")}stripAccents(_){return _.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(_){switch(_){case"	":case`
`:case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(_)}}_clean_text(_){const V=[];for(const ne of _){const ce=ne.charCodeAt(0);ce===0||ce===65533||this._is_control(ne)||(/^\s$/.test(ne)?V.push(" "):V.push(ne))}return V.join("")}normalize(_){return this.config.clean_text&&(_=this._clean_text(_)),this.config.handle_chinese_chars&&(_=this._tokenize_chinese_chars(_)),this.config.lowercase?(_=_.toLowerCase(),this.config.strip_accents!==!1&&(_=this.stripAccents(_))):this.config.strip_accents&&(_=this.stripAccents(_)),_}}class tt extends F.Callable{static fromConfig(_){if(_===null)return null;switch(_.type){case"BertPreTokenizer":return new Q(_);case"Sequence":return new Se(_);case"Whitespace":return new Ge(_);case"WhitespaceSplit":return new sr(_);case"Metaspace":return new m(_);case"ByteLevel":return new ze(_);case"Split":return new nt(_);case"Punctuation":return new at(_);case"Digits":return new Ze(_);case"Replace":return new Je(_);default:throw new Error(`Unknown PreTokenizer type: ${_.type}`)}}pre_tokenize_text(_,V){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(_,V){return(Array.isArray(_)?_.map(ne=>this.pre_tokenize_text(ne,V)):this.pre_tokenize_text(_,V)).flat()}_call(_,V){return this.pre_tokenize(_,V)}}class Q extends tt{constructor(_){super(),this.pattern=new RegExp(`[^\\s${B}]+|[${B}]`,"gu")}pre_tokenize_text(_,V){return _.trim().match(this.pattern)||[]}}class ze extends tt{constructor(_){super(),this.config=_,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=ft,this.text_encoder=new TextEncoder}pre_tokenize_text(_,V){return this.add_prefix_space&&!_.startsWith(" ")&&(_=" "+_),(this.use_regex?_.match(this.pattern)||[]:[_]).map(ce=>Array.from(this.text_encoder.encode(ce),Oe=>this.byte_encoder[Oe]).join(""))}}class nt extends tt{constructor(_){super(),this.config=_,this.pattern=se(this.config.pattern,this.config.invert)}pre_tokenize_text(_,V){return this.pattern===null?[]:this.config.invert?_.match(this.pattern)||[]:K(_,this.pattern)}}class at extends tt{constructor(_){super(),this.config=_,this.pattern=new RegExp(`[^${B}]+|[${B}]+`,"gu")}pre_tokenize_text(_,V){return _.match(this.pattern)||[]}}class Ze extends tt{constructor(_){super(),this.config=_;const V=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(V,"gu")}pre_tokenize_text(_,V){return _.match(this.pattern)||[]}}class He extends F.Callable{constructor(_){super(),this.config=_}static fromConfig(_){if(_===null)return null;switch(_.type){case"TemplateProcessing":return new Lt(_);case"ByteLevel":return new kt(_);case"RobertaProcessing":return new wt(_);case"BertProcessing":return new mt(_);case"Sequence":return new E(_);default:throw new Error(`Unknown PostProcessor type: ${_.type}`)}}post_process(_,...V){throw Error("post_process should be implemented in subclass.")}_call(_,...V){return this.post_process(_,...V)}}class mt extends He{constructor(_){super(_),this.cls=_.cls[0],this.sep=_.sep[0]}post_process(_,V=null,{add_special_tokens:ne=!0}={}){ne&&(_=(0,ue.mergeArrays)([this.cls],_,[this.sep]));let ce=new Array(_.length).fill(0);if(V!==null){const Oe=ne&&this instanceof wt?[this.sep]:[],st=ne?[this.sep]:[];_=(0,ue.mergeArrays)(_,Oe,V,st),ce=(0,ue.mergeArrays)(ce,new Array(V.length+Oe.length+st.length).fill(1))}return{tokens:_,token_type_ids:ce}}}class wt extends mt{}class Lt extends He{constructor(_){super(_),this.single=_.single,this.pair=_.pair}post_process(_,V=null,{add_special_tokens:ne=!0}={}){const ce=V===null?this.single:this.pair;let Oe=[],st=[];for(const Pt of ce)"SpecialToken"in Pt?ne&&(Oe.push(Pt.SpecialToken.id),st.push(Pt.SpecialToken.type_id)):"Sequence"in Pt&&(Pt.Sequence.id==="A"?(Oe=(0,ue.mergeArrays)(Oe,_),st=(0,ue.mergeArrays)(st,new Array(_.length).fill(Pt.Sequence.type_id))):Pt.Sequence.id==="B"&&(Oe=(0,ue.mergeArrays)(Oe,V),st=(0,ue.mergeArrays)(st,new Array(V.length).fill(Pt.Sequence.type_id))));return{tokens:Oe,token_type_ids:st}}}class kt extends He{post_process(_,V=null){return V&&(_=(0,ue.mergeArrays)(_,V)),{tokens:_}}}class E extends He{constructor(_){super(_),this.processors=_.processors.map(V=>He.fromConfig(V))}post_process(_,V=null,ne={}){let ce;for(const Oe of this.processors)if(Oe instanceof kt)_=Oe.post_process(_).tokens,V&&(V=Oe.post_process(V).tokens);else{const st=Oe.post_process(_,V,ne);_=st.tokens,ce=st.token_type_ids}return{tokens:_,token_type_ids:ce}}}class Y extends F.Callable{constructor(_){super(),this.config=_,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=_.trim_offsets}static fromConfig(_){if(_===null)return null;switch(_.type){case"WordPiece":return new et(_);case"Metaspace":return new U(_);case"ByteLevel":return new At(_);case"Replace":return new z(_);case"ByteFallback":return new ae(_);case"Fuse":return new be(_);case"Strip":return new it(_);case"Sequence":return new yt(_);case"CTC":return new ot(_);case"BPEDecoder":return new T(_);default:throw new Error(`Unknown Decoder type: ${_.type}`)}}_call(_){return this.decode(_)}decode(_){return this.decode_chain(_).join("")}decode_chain(_){throw Error("`decode_chain` should be implemented in subclass.")}}class z extends Y{decode_chain(_){const V=se(this.config.pattern);return V===null?_:_.map(ne=>ne.replaceAll(V,this.config.content))}}class ae extends Y{constructor(_){super(_),this.text_decoder=new TextDecoder}decode_chain(_){const V=[];let ne=[];for(const ce of _){let Oe=null;if(ce.length===6&&ce.startsWith("<0x")&&ce.endsWith(">")){const st=parseInt(ce.slice(3,5),16);isNaN(st)||(Oe=st)}if(Oe!==null)ne.push(Oe);else{if(ne.length>0){const st=this.text_decoder.decode(Uint8Array.from(ne));V.push(st),ne=[]}V.push(ce)}}if(ne.length>0){const ce=this.text_decoder.decode(Uint8Array.from(ne));V.push(ce),ne=[]}return V}}class be extends Y{decode_chain(_){return[_.join("")]}}class it extends Y{constructor(_){super(_),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(_){return _.map(V=>{let ne=0;for(let Oe=0;Oe<this.start&&V[Oe]===this.content;++Oe){ne=Oe+1;continue}let ce=V.length;for(let Oe=0;Oe<this.stop;++Oe){const st=V.length-Oe-1;if(V[st]===this.content){ce=st;continue}else break}return V.slice(ne,ce)})}}class et extends Y{constructor(_){super(_),this.cleanup=_.cleanup}decode_chain(_){return _.map((V,ne)=>(ne!==0&&(V.startsWith(this.config.prefix)?V=V.replace(this.config.prefix,""):V=" "+V),this.cleanup&&(V=N(V)),V))}}class At extends Y{constructor(_){super(_),this.byte_decoder=dt,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(_){const V=_.join(""),ne=new Uint8Array([...V].map(Oe=>this.byte_decoder[Oe]));return this.text_decoder.decode(ne)}decode_chain(_){const V=[];let ne=[];for(const ce of _)this.added_tokens.find(Oe=>Oe.content===ce)!==void 0?(ne.length>0&&(V.push(this.convert_tokens_to_string(ne)),ne=[]),V.push(ce)):ne.push(ce);return ne.length>0&&V.push(this.convert_tokens_to_string(ne)),V}}class ot extends Y{constructor(_){super(_),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(_){if(_.length===0)return"";const V=[_[0]];for(let Oe=1;Oe<_.length;++Oe)_[Oe]!==V.at(-1)&&V.push(_[Oe]);let ce=V.filter(Oe=>Oe!==this.pad_token).join("");return this.cleanup&&(ce=N(ce).replaceAll(this.word_delimiter_token," ").trim()),ce}decode_chain(_){return[this.convert_tokens_to_string(_)]}}class yt extends Y{constructor(_){super(_),this.decoders=_.decoders.map(V=>Y.fromConfig(V))}decode_chain(_){return this.decoders.reduce((V,ne)=>ne.decode_chain(V),_)}}class T extends Y{constructor(_){super(_),this.suffix=this.config.suffix}decode_chain(_){return _.map((V,ne)=>V.replaceAll(this.suffix,ne===_.length-1?"":" "))}}class c extends Y{decode_chain(_){let V="";for(let ne=1;ne<_.length;ne+=2)V+=_[ne];return[V]}}class m extends tt{constructor(_){super(),this.addPrefixSpace=_.add_prefix_space,this.replacement=_.replacement,this.strRep=_.str_rep||this.replacement,this.prepend_scheme=_.prepend_scheme??"always"}pre_tokenize_text(_,{section_index:V=void 0}={}){let ne=_.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!ne.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&V===0)&&(ne=this.strRep+ne),[ne]}}class U extends Y{constructor(_){super(_),this.addPrefixSpace=_.add_prefix_space,this.replacement=_.replacement}decode_chain(_){const V=[];for(let ne=0;ne<_.length;++ne){let ce=_[ne].replaceAll(this.replacement," ");this.addPrefixSpace&&ne==0&&ce.startsWith(" ")&&(ce=ce.substring(1)),V.push(ce)}return V}}class he extends q{constructor(_){super(_),this.charsmap=_.precompiled_charsmap}normalize(_){return _=_.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),_=_.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),_.includes("～")?_=_.split("～").map(ne=>ne.normalize("NFKC")).join("～"):_=_.normalize("NFKC"),_}}class Se extends tt{constructor(_){super(),this.tokenizers=_.pretokenizers.map(V=>tt.fromConfig(V))}pre_tokenize_text(_,V){return this.tokenizers.reduce((ne,ce)=>ce.pre_tokenize(ne,V),[_])}}class Ge extends tt{constructor(_){super()}pre_tokenize_text(_,V){return _.match(/\w+|[^\w\s]+/g)||[]}}class sr extends tt{constructor(_){super()}pre_tokenize_text(_,V){return W(_)}}class Je extends tt{constructor(_){super(),this.config=_,this.pattern=se(this.config.pattern),this.content=this.config.content}pre_tokenize_text(_,V){return this.pattern===null?[_]:[_.replaceAll(this.pattern,this.config.content)]}}const R=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function we(fe,_,V,ne){for(const ce of Object.keys(fe)){const Oe=_-fe[ce].length,st=V(ce),Pt=new Array(Oe).fill(st);fe[ce]=ne==="right"?(0,ue.mergeArrays)(fe[ce],Pt):(0,ue.mergeArrays)(Pt,fe[ce])}}function $e(fe,_){for(const V of Object.keys(fe))fe[V].length=_}class Be extends F.Callable{return_token_type_ids=!1;padding_side="right";constructor(_,V){super(),this._tokenizer_config=V,this.normalizer=q.fromConfig(_.normalizer),this.pre_tokenizer=tt.fromConfig(_.pre_tokenizer),this.model=Pe.fromConfig(_.model,V),this.post_processor=He.fromConfig(_.post_processor),this.decoder=Y.fromConfig(_.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const ne of _.added_tokens){const ce=new Ce(ne);this.added_tokens.push(ce),this.model.tokens_to_ids.set(ce.content,ce.id),this.model.vocab[ce.id]=ce.content,ce.special&&(this.special_tokens.push(ce.content),this.all_special_ids.push(ce.id))}if(this.additional_special_tokens=V.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((ne,ce)=>ce.content.length-ne.content.length).map(ne=>`${ne.lstrip?"\\s*":""}(${(0,ue.escapeRegExp)(ne.content)})${ne.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=V.model_max_length,this.remove_space=V.remove_space,this.clean_up_tokenization_spaces=V.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=V.do_lowercase_and_remove_accent??!1,V.padding_side&&(this.padding_side=V.padding_side),this.legacy=!1,this.chat_template=V.chat_template??null,Array.isArray(this.chat_template)){const ne=Object.create(null);for(const{name:ce,template:Oe}of this.chat_template){if(typeof ce!="string"||typeof Oe!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');ne[ce]=Oe}this.chat_template=ne}this._compiled_template_cache=new Map}getToken(..._){for(const V of _){const ne=this._tokenizer_config[V];if(ne)if(typeof ne=="object"){if(ne.__type==="AddedToken")return ne.content;throw Error(`Unknown token: ${ne}`)}else return ne}return null}static async from_pretrained(_,{progress_callback:V=null,config:ne=null,cache_dir:ce=null,local_files_only:Oe=!1,revision:st="main",legacy:Pt=null}={}){const zt=await j(_,{progress_callback:V,config:ne,cache_dir:ce,local_files_only:Oe,revision:st,legacy:Pt});return new this(...zt)}_call(_,{text_pair:V=null,add_special_tokens:ne=!0,padding:ce=!1,truncation:Oe=null,max_length:st=null,return_tensor:Pt=!0,return_token_type_ids:zt=null}={}){const Dt=Array.isArray(_);let $t;if(Dt){if(_.length===0)throw Error("text array must be non-empty");if(V!==null){if(Array.isArray(V)){if(_.length!==V.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");$t=_.map((pr,Cr)=>this._encode_plus(pr,{text_pair:V[Cr],add_special_tokens:ne,return_token_type_ids:zt}))}else $t=_.map(pr=>this._encode_plus(pr,{add_special_tokens:ne,return_token_type_ids:zt}))}else{if(_==null)throw Error("text may not be null or undefined");if(Array.isArray(V))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");$t=[this._encode_plus(_,{text_pair:V,add_special_tokens:ne,return_token_type_ids:zt})]}if(st===null?ce==="max_length"?st=this.model_max_length:st=(0,ge.max)($t.map(pr=>pr.input_ids.length))[0]:Oe||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),st=Math.min(st,this.model_max_length??1/0),ce||Oe)for(let pr=0;pr<$t.length;++pr)$t[pr].input_ids.length!==st&&($t[pr].input_ids.length>st?Oe&&$e($t[pr],st):ce&&we($t[pr],st,Cr=>Cr==="input_ids"?this.pad_token_id:0,this.padding_side));const _r={};if(Pt){if(!(ce&&Oe)&&$t.some(Cr=>{for(const Xr of Object.keys(Cr))if(Cr[Xr].length!==$t[0][Xr]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const pr=[$t.length,$t[0].input_ids.length];for(const Cr of Object.keys($t[0]))_r[Cr]=new Ee.Tensor("int64",BigInt64Array.from($t.flatMap(Xr=>Xr[Cr]).map(BigInt)),pr)}else{for(const pr of Object.keys($t[0]))_r[pr]=$t.map(Cr=>Cr[pr]);if(!Dt)for(const pr of Object.keys(_r))_r[pr]=_r[pr][0]}return _r}_encode_text(_){return _===null?null:(this.added_tokens_regex?_.split(this.added_tokens_regex).filter(ce=>ce):[_]).map((ce,Oe)=>{if(this.added_tokens.find(Pt=>Pt.content===ce)!==void 0)return ce;{if(this.remove_space===!0&&(ce=ce.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(ce=ve(ce)),this.normalizer!==null&&(ce=this.normalizer(ce)),ce.length===0)return[];const Pt=this.pre_tokenizer!==null?this.pre_tokenizer(ce,{section_index:Oe}):[ce];return this.model(Pt)}}).flat()}_encode_plus(_,{text_pair:V=null,add_special_tokens:ne=!0,return_token_type_ids:ce=null}={}){const{tokens:Oe,token_type_ids:st}=this._tokenize_helper(_,{pair:V,add_special_tokens:ne}),Pt=this.model.convert_tokens_to_ids(Oe),zt={input_ids:Pt,attention_mask:new Array(Pt.length).fill(1)};return(ce??this.return_token_type_ids)&&st&&(zt.token_type_ids=st),zt}_tokenize_helper(_,{pair:V=null,add_special_tokens:ne=!1}={}){const ce=this._encode_text(_),Oe=this._encode_text(V);return this.post_processor?this.post_processor(ce,Oe,{add_special_tokens:ne}):{tokens:(0,ue.mergeArrays)(ce??[],Oe??[])}}tokenize(_,{pair:V=null,add_special_tokens:ne=!1}={}){return this._tokenize_helper(_,{pair:V,add_special_tokens:ne}).tokens}encode(_,{text_pair:V=null,add_special_tokens:ne=!0,return_token_type_ids:ce=null}={}){return this._encode_plus(_,{text_pair:V,add_special_tokens:ne,return_token_type_ids:ce}).input_ids}batch_decode(_,V={}){return _ instanceof Ee.Tensor&&(_=_.tolist()),_.map(ne=>this.decode(ne,V))}decode(_,V={}){if(_ instanceof Ee.Tensor&&(_=Me(_)),!Array.isArray(_)||_.length===0||!(0,ue.isIntegralNumber)(_[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(_,V)}decode_single(_,{skip_special_tokens:V=!1,clean_up_tokenization_spaces:ne=null}){let ce=this.model.convert_ids_to_tokens(_);V&&(ce=ce.filter(st=>!this.special_tokens.includes(st)));let Oe=this.decoder?this.decoder(ce):ce.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Oe=Oe.replaceAll(this.decoder.end_of_word_suffix," "),V&&(Oe=Oe.trim())),(ne??this.clean_up_tokenization_spaces)&&(Oe=N(Oe)),Oe}get_chat_template({chat_template:_=null,tools:V=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const ne=this.chat_template;if(_!==null&&Object.hasOwn(ne,_))_=ne[_];else if(_===null)if(V!==null&&"tool_use"in ne)_=ne.tool_use;else if("default"in ne)_=ne.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(ne).sort()}.`)}else if(_===null)if(this.chat_template)_=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return _}apply_chat_template(_,{tools:V=null,documents:ne=null,chat_template:ce=null,add_generation_prompt:Oe=!1,tokenize:st=!0,padding:Pt=!1,truncation:zt=!1,max_length:Dt=null,return_tensor:$t=!0,return_dict:_r=!1,tokenizer_kwargs:pr={},...Cr}={}){if(ce=this.get_chat_template({chat_template:ce,tools:V}),typeof ce!="string")throw Error(`chat_template must be a string, but got ${typeof ce}`);let Xr=this._compiled_template_cache.get(ce);Xr===void 0&&(Xr=new O.Template(ce),this._compiled_template_cache.set(ce,Xr));const yn=Object.create(null);for(const kr of R){const vn=this.getToken(kr);vn&&(yn[kr]=vn)}const hr=Xr.render({messages:_,add_generation_prompt:Oe,tools:V,documents:ne,...yn,...Cr});if(st){const kr=this._call(hr,{add_special_tokens:!1,padding:Pt,truncation:zt,max_length:Dt,return_tensor:$t,...pr});return _r?kr:kr.input_ids}return hr}}class Ke extends Be{return_token_type_ids=!0}class pt extends Be{return_token_type_ids=!0}class Ct extends Be{return_token_type_ids=!0}class Tt extends Be{return_token_type_ids=!0}class Ft extends Be{return_token_type_ids=!0}class xt extends Be{return_token_type_ids=!0}class Ut extends Be{return_token_type_ids=!0}class Wt extends Be{return_token_type_ids=!0}class Nt extends Be{return_token_type_ids=!0}class Le extends Be{}class Re extends Be{}class vt extends Be{return_token_type_ids=!0;constructor(_,V){super(_,V),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Ht extends Be{return_token_type_ids=!0}class ar extends Be{}class Or extends Be{}class jr extends Be{}class Er extends Be{constructor(_,V){super(_,V),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(ne=>this.languageRegex.test(ne)),this.lang_to_token=ne=>ne}_build_translation_inputs(_,V,ne){return Cn(this,_,V,ne)}}class Dr extends Er{}class Ar extends Be{}class zn extends Be{}const Nr="▁";class hi extends Be{padding_side="left";constructor(_,V){super(_,V),this.legacy=V.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new m({replacement:Nr,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(_){if(_===null)return null;if(this.legacy||_.length===0)return super._encode_text(_);let V=super._encode_text(Nr+_.replaceAll(Nr," "));return V.length>1&&V[0]===Nr&&this.special_tokens.includes(V[1])&&(V=V.slice(1)),V}}class $i extends Be{}class Kn extends Be{}class Si extends Be{}class ki extends Be{}class Pi extends Be{}class Ai extends Be{}class Ii extends Be{}class ei extends Be{}class Xn extends Be{}function Cn(fe,_,V,ne){if(!("language_codes"in fe)||!Array.isArray(fe.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in fe)||!(fe.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in fe)||typeof fe.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const ce=ne.src_lang,Oe=ne.tgt_lang;if(!fe.language_codes.includes(Oe))throw new Error(`Target language code "${Oe}" is not valid. Must be one of: {${fe.language_codes.join(", ")}}`);if(ce!==void 0){if(!fe.language_codes.includes(ce))throw new Error(`Source language code "${ce}" is not valid. Must be one of: {${fe.language_codes.join(", ")}}`);for(const st of fe.post_processor.config.single)if("SpecialToken"in st&&fe.languageRegex.test(st.SpecialToken.id)){st.SpecialToken.id=fe.lang_to_token(ce);break}}return ne.forced_bos_token_id=fe.model.convert_tokens_to_ids([fe.lang_to_token(Oe)])[0],fe._call(_,V)}class Dn extends Be{constructor(_,V){super(_,V),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(ne=>this.languageRegex.test(ne)),this.lang_to_token=ne=>ne}_build_translation_inputs(_,V,ne){return Cn(this,_,V,ne)}}class fi extends Be{constructor(_,V){super(_,V),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(ne=>this.languageRegex.test(ne)).map(ne=>ne.slice(2,-2)),this.lang_to_token=ne=>`__${ne}__`}_build_translation_inputs(_,V,ne){return Cn(this,_,V,ne)}}class Fn extends Be{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(_,{return_timestamps:V=!1,return_language:ne=!1,time_precision:ce=null,force_full_sequences:Oe=!0}={}){if(ce===null)throw Error("Must specify time_precision");let st=null;const Pt=V==="word";function zt(){return{language:st,timestamp:[null,null],text:""}}const Dt=[];let $t=zt(),_r=0;const pr=this.timestamp_begin;let Cr=[],Xr=[],yn=!1,hr=null;const kr=new Set(this.all_special_ids);for(const Ie of _){const Zr=Ie.tokens,an=Pt?Ie.token_timestamps:null;let Sn=null,Ln=pr;if("stride"in Ie){const[Qr,gr,Br]=Ie.stride;if(_r-=gr,hr=Qr-Br,gr&&(Ln=gr/ce+pr),Br)for(let Ot=Zr.length-1;Ot>=0;--Ot){const br=Number(Zr[Ot]);if(br>=pr){if(Sn!==null&&(br-pr)*ce<hr)break;Sn=br}}}let Jt=[],cn=[];for(let Qr=0;Qr<Zr.length;++Qr){const gr=Number(Zr[Qr]);if(kr.has(gr)){const Br=this.decode([gr]),Ot=M.WHISPER_LANGUAGE_MAPPING.get(Br.slice(2,-2));if(Ot!==void 0){if(st!==null&&Ot!==st&&!V){Cr.push(Jt);const br=this.findLongestCommonSequence(Cr)[0],ni=this.decode(br);$t.text=ni,Dt.push($t),Cr=[],Jt=[],$t=zt()}st=$t.language=Ot}}else if(gr>=pr){const Br=(gr-pr)*ce+_r,Ot=(0,ge.round)(Br,2);if(Sn!==null&&gr>=Sn)yn=!0;else if(yn||Cr.length>0&&gr<Ln)yn=!1;else if($t.timestamp[0]===null)$t.timestamp[0]=Ot;else if(Ot!==$t.timestamp[0]){$t.timestamp[1]=Ot,Cr.push(Jt),Pt&&Xr.push(cn);const[br,ni]=this.findLongestCommonSequence(Cr,Xr),Qn=this.decode(br);$t.text=Qn,Pt&&($t.words=this.collateWordTimestamps(br,ni,st)),Dt.push($t),Cr=[],Jt=[],Xr=[],cn=[],$t=zt()}}else if(Jt.push(gr),Pt){let Br=(0,ge.round)(an[Qr]+_r,2),Ot;if(Qr+1<an.length){Ot=(0,ge.round)(an[Qr+1]+_r,2);const br=this.decode([gr]);G.test(br)&&(Ot=(0,ge.round)(Math.min(Br+ce,Ot),2))}else Ot=null;cn.push([Br,Ot])}}if("stride"in Ie){const[Qr,gr,Br]=Ie.stride;_r+=Qr-Br}Jt.length>0?(Cr.push(Jt),Pt&&Xr.push(cn)):Cr.every(Qr=>Qr.length===0)&&($t=zt(),Cr=[],Jt=[],Xr=[],cn=[])}if(Cr.length>0){if(Oe&&V)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Ie,Zr]=this.findLongestCommonSequence(Cr,Xr),an=this.decode(Ie);$t.text=an,Pt&&($t.words=this.collateWordTimestamps(Ie,Zr,st)),Dt.push($t)}let vn=Object.create(null);const $n=Dt.map(Ie=>Ie.text).join("");if(V||ne){for(let Ie=0;Ie<Dt.length;++Ie){const Zr=Dt[Ie];V||delete Zr.timestamp,ne||delete Zr.language}if(Pt){const Ie=[];for(const Zr of Dt)for(const an of Zr.words)Ie.push(an);vn={chunks:Ie}}else vn={chunks:Dt}}return[$n,vn]}findLongestCommonSequence(_,V=null){let ne=_[0],ce=ne.length,Oe=[];const st=Array.isArray(V)&&V.length>0;let Pt=st?[]:null,zt=st?V[0]:null;for(let Dt=1;Dt<_.length;++Dt){const $t=_[Dt];let _r=0,pr=[ce,ce,0,0];const Cr=$t.length;for(let Ie=1;Ie<ce+Cr;++Ie){const Zr=Math.max(0,ce-Ie),an=Math.min(ce,ce+Cr-Ie),Sn=ne.slice(Zr,an),Ln=Math.max(0,Ie-ce),Jt=Math.min(Cr,Ie),cn=$t.slice(Ln,Jt);if(Sn.length!==cn.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Qr;st?Qr=Sn.filter((Ot,br)=>Ot===cn[br]&&zt[Zr+br]<=V[Dt][Ln+br]).length:Qr=Sn.filter((Ot,br)=>Ot===cn[br]).length;const gr=Ie/1e4,Br=Qr/Ie+gr;Qr>1&&Br>_r&&(_r=Br,pr=[Zr,an,Ln,Jt])}const[Xr,yn,hr,kr]=pr,vn=Math.floor((yn+Xr)/2),$n=Math.floor((kr+hr)/2);Oe.push(...ne.slice(0,vn)),ne=$t.slice($n),ce=ne.length,st&&(Pt.push(...zt.slice(0,vn)),zt=V[Dt].slice($n))}return Oe.push(...ne),st?(Pt.push(...zt),[Oe,Pt]):[Oe,[]]}collateWordTimestamps(_,V,ne){const[ce,Oe,st]=this.combineTokensIntoWords(_,ne),Pt=[];for(let zt=0;zt<ce.length;++zt){const Dt=st[zt];Pt.push({text:ce[zt],timestamp:[V[Dt.at(0)][0],V[Dt.at(-1)][1]]})}return Pt}combineTokensIntoWords(_,V,ne=`"'“¡¿([{-`,ce=`"'.。,，!！?？:：”)]}、`){V=V??"english";let Oe,st,Pt;return["chinese","japanese","thai","lao","myanmar"].includes(V)?[Oe,st,Pt]=this.splitTokensOnUnicode(_):[Oe,st,Pt]=this.splitTokensOnSpaces(_),this.mergePunctuations(Oe,st,Pt,ne,ce)}decode(_,V){let ne;return V?.decode_with_timestamps?(_ instanceof Ee.Tensor&&(_=Me(_)),ne=this.decodeWithTimestamps(_,V)):ne=super.decode(_,V),ne}decodeWithTimestamps(_,V){const ne=V?.time_precision??.02,ce=Array.from(this.all_special_ids).at(-1)+1;let Oe=[[]];for(let st of _)if(st=Number(st),st>=ce){const Pt=((st-ce)*ne).toFixed(2);Oe.push(`<|${Pt}|>`),Oe.push([])}else Oe[Oe.length-1].push(st);return Oe=Oe.map(st=>typeof st=="string"?st:super.decode(st,V)),Oe.join("")}splitTokensOnUnicode(_){const V=this.decode(_,{decode_with_timestamps:!0}),ne="�",ce=[],Oe=[],st=[];let Pt=[],zt=[],Dt=0;for(let $t=0;$t<_.length;++$t){const _r=_[$t];Pt.push(_r),zt.push($t);const pr=this.decode(Pt,{decode_with_timestamps:!0});(!pr.includes(ne)||V[Dt+pr.indexOf(ne)]===ne)&&(ce.push(pr),Oe.push(Pt),st.push(zt),Pt=[],zt=[],Dt+=pr.length)}return[ce,Oe,st]}splitTokensOnSpaces(_){const[V,ne,ce]=this.splitTokensOnUnicode(_),Oe=[],st=[],Pt=[],zt=new RegExp(`^[${B}]$`,"gu");for(let Dt=0;Dt<V.length;++Dt){const $t=V[Dt],_r=ne[Dt],pr=ce[Dt],Cr=_r[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Xr=$t.startsWith(" "),yn=$t.trim(),hr=zt.test(yn);if(Cr||Xr||hr||Oe.length===0)Oe.push($t),st.push(_r),Pt.push(pr);else{const kr=Oe.length-1;Oe[kr]+=$t,st[kr].push(..._r),Pt[kr].push(...pr)}}return[Oe,st,Pt]}mergePunctuations(_,V,ne,ce,Oe){const st=structuredClone(_),Pt=structuredClone(V),zt=structuredClone(ne);let Dt=st.length-2,$t=st.length-1;for(;Dt>=0;)st[Dt].startsWith(" ")&&ce.includes(st[Dt].trim())?(st[$t]=st[Dt]+st[$t],Pt[$t]=(0,ue.mergeArrays)(Pt[Dt],Pt[$t]),zt[$t]=(0,ue.mergeArrays)(zt[Dt],zt[$t]),st[Dt]="",Pt[Dt]=[],zt[Dt]=[]):$t=Dt,--Dt;for(Dt=0,$t=1;$t<st.length;)!st[Dt].endsWith(" ")&&Oe.includes(st[$t])?(st[Dt]+=st[$t],Pt[Dt]=(0,ue.mergeArrays)(Pt[Dt],Pt[$t]),zt[Dt]=(0,ue.mergeArrays)(zt[Dt],zt[$t]),st[$t]="",Pt[$t]=[],zt[$t]=[]):Dt=$t,++$t;return[st.filter(_r=>_r),Pt.filter(_r=>_r.length>0),zt.filter(_r=>_r.length>0)]}}class mi extends Be{}class _i extends Be{}class gi extends Be{}class rr extends Be{constructor(_,V){super(_,V),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(ne=>this.languageRegex.test(ne)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(_){if(_===null)return null;const[V,...ne]=_.trim().split(this.languageRegex);if(ne.length===0)return super._encode_text(V);if(ne.length===2){const[ce,Oe]=ne;return this.supported_language_codes.includes(ce)||console.warn(`Unsupported language code "${ce}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,ue.mergeArrays)([ce],super._encode_text(Oe))}}}class ti extends Be{}class Fi extends Be{}class Oi extends Be{}class wi extends Be{}class Bi extends Be{}class zi extends Be{constructor(_,V){super(_,V),this.decoder=new c({})}}class ri extends Be{}class ts{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:ar,DistilBertTokenizer:Le,CamembertTokenizer:Re,DebertaTokenizer:Ft,DebertaV2Tokenizer:xt,BertTokenizer:Ke,HerbertTokenizer:Ut,ConvBertTokenizer:Wt,RoFormerTokenizer:Nt,XLMTokenizer:vt,ElectraTokenizer:Ht,MobileBertTokenizer:Ct,SqueezeBertTokenizer:Tt,AlbertTokenizer:pt,GPT2Tokenizer:Or,BartTokenizer:jr,MBartTokenizer:Er,MBart50Tokenizer:Dr,RobertaTokenizer:Ar,WhisperTokenizer:Fn,CodeGenTokenizer:mi,CLIPTokenizer:_i,SiglipTokenizer:gi,MarianTokenizer:rr,BloomTokenizer:zn,NllbTokenizer:Dn,M2M100Tokenizer:fi,LlamaTokenizer:hi,CodeLlamaTokenizer:$i,XLMRobertaTokenizer:Kn,MPNetTokenizer:Si,FalconTokenizer:ki,GPTNeoXTokenizer:Pi,EsmTokenizer:Ai,Wav2Vec2CTCTokenizer:ti,BlenderbotTokenizer:Fi,BlenderbotSmallTokenizer:Oi,SpeechT5Tokenizer:wi,NougatTokenizer:Bi,VitsTokenizer:zi,Qwen2Tokenizer:Ii,GemmaTokenizer:ei,Grok1Tokenizer:Xn,CohereTokenizer:ri,PreTrainedTokenizer:Be};static async from_pretrained(_,{progress_callback:V=null,config:ne=null,cache_dir:ce=null,local_files_only:Oe=!1,revision:st="main",legacy:Pt=null}={}){const[zt,Dt]=await j(_,{progress_callback:V,config:ne,cache_dir:ce,local_files_only:Oe,revision:st,legacy:Pt}),$t=Dt.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let _r=this.TOKENIZER_CLASS_MAPPING[$t];return _r||(console.warn(`Unknown tokenizer class "${$t}", attempting to construct from base class.`),_r=Be),new _r(zt,Dt)}}},"./src/utils/audio.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{hamming:()=>M,hanning:()=>O,mel_filter_bank:()=>re,read_audio:()=>Ee,spectrogram:()=>B,window_function:()=>G});var F=I("./src/utils/hub.js"),ue=I("./src/utils/maths.js"),oe=I("./src/utils/core.js"),ge=I("./src/utils/tensor.js");async function Ee(P,ye){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const Ce=await(await(0,F.getFile)(P)).arrayBuffer(),Pe=new AudioContext({sampleRate:ye});typeof ye>"u"&&console.warn(`No sampling rate provided, using default of ${Pe.sampleRate}Hz.`);const je=await Pe.decodeAudioData(Ce);let De;if(je.numberOfChannels===2){const ft=Math.sqrt(2),dt=je.getChannelData(0),gt=je.getChannelData(1);De=new Float32Array(dt.length);for(let xe=0;xe<je.length;++xe)De[xe]=ft*(dt[xe]+gt[xe])/2}else De=je.getChannelData(0);return De}function L(P,ye){if(P<1)return new Float64Array;if(P===1)return new Float64Array([1]);const Ce=1-ye,Pe=2*Math.PI/(P-1),je=new Float64Array(P);for(let De=0;De<P;++De)je[De]=ye-Ce*Math.cos(De*Pe);return je}function O(P){return L(P,.5)}function M(P){return L(P,.54)}const j={htk:P=>2595*Math.log10(1+P/700),kaldi:P=>1127*Math.log(1+P/700),slaney:(P,ye=1e3,Ce=15,Pe=27/Math.log(6.4))=>P>=ye?Ce+Math.log(P/ye)*Pe:3*P/200};function K(P,ye="htk"){const Ce=j[ye];if(!Ce)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof P=="number"?Ce(P):P.map(Pe=>Ce(Pe))}const se={htk:P=>700*(10**(P/2595)-1),kaldi:P=>700*(Math.exp(P/1127)-1),slaney:(P,ye=1e3,Ce=15,Pe=Math.log(6.4)/27)=>P>=Ce?ye*Math.exp(Pe*(P-Ce)):200*P/3};function Te(P,ye="htk"){const Ce=se[ye];if(!Ce)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof P=="number"?Ce(P):P.map(Pe=>Ce(Pe))}function Me(P,ye){const Ce=Float64Array.from({length:ye.length-1},(ft,dt)=>ye[dt+1]-ye[dt]),Pe=Array.from({length:P.length},()=>new Array(ye.length));for(let ft=0;ft<P.length;++ft){const dt=Pe[ft];for(let gt=0;gt<ye.length;++gt)dt[gt]=ye[gt]-P[ft]}const je=ye.length-2,De=Array.from({length:je},()=>new Array(P.length));for(let ft=0;ft<P.length;++ft){const dt=Pe[ft];for(let gt=0;gt<je;++gt){const xe=-dt[gt]/Ce[gt],q=dt[gt+2]/Ce[gt+1];De[gt][ft]=Math.max(0,Math.min(xe,q))}}return De}function N(P,ye,Ce){const Pe=(ye-P)/(Ce-1);return Float64Array.from({length:Ce},(je,De)=>P+Pe*De)}function re(P,ye,Ce,Pe,je,De=null,ft="htk",dt=!1){if(De!==null&&De!=="slaney")throw new Error('norm must be one of null or "slaney"');const gt=K(Ce,ft),xe=K(Pe,ft),q=N(gt,xe,ye+2);let _e=Te(q,ft),ke;if(dt){const _t=je/(P*2);ke=K(Float64Array.from({length:P},(de,Ue)=>Ue*_t),ft),_e=q}else ke=N(0,Math.floor(je/2),P);const Qe=Me(ke,_e);if(De!==null&&De==="slaney")for(let _t=0;_t<ye;++_t){const de=Qe[_t],Ue=2/(_e[_t+2]-_e[_t]);for(let ct=0;ct<P;++ct)de[ct]*=Ue}return Qe}function ve(P,ye,Ce){const Pe=new P.constructor(P.length+ye+Ce),je=P.length-1;for(let De=0;De<P.length;++De)Pe[ye+De]=P[De];for(let De=1;De<=ye;++De)Pe[ye-De]=P[(0,oe.calculateReflectOffset)(De,je)];for(let De=1;De<=Ce;++De)Pe[je+ye+De]=P[(0,oe.calculateReflectOffset)(je-De,je)];return Pe}function J(P,ye,Ce,Pe,je){if(Ce<=0)throw new Error("reference must be greater than zero");if(Pe<=0)throw new Error("min_value must be greater than zero");Ce=Math.max(Pe,Ce);const De=Math.log10(Ce);for(let ft=0;ft<P.length;++ft)P[ft]=ye*Math.log10(Math.max(Pe,P[ft])-De);if(je!==null){if(je<=0)throw new Error("db_range must be greater than zero");const ft=(0,ue.max)(P)[0]-je;for(let dt=0;dt<P.length;++dt)P[dt]=Math.max(P[dt],ft)}return P}function Z(P,ye=1,Ce=1e-5,Pe=null){return J(P,20,ye,Ce,Pe)}function W(P,ye=1,Ce=1e-10,Pe=null){return J(P,10,ye,Ce,Pe)}async function B(P,ye,Ce,Pe,{fft_length:je=null,power:De=1,center:ft=!0,pad_mode:dt="reflect",onesided:gt=!0,preemphasis:xe=null,mel_filters:q=null,mel_floor:_e=1e-10,log_mel:ke=null,reference:Qe=1,min_value:_t=1e-10,db_range:de=null,remove_dc_offset:Ue=null,min_num_frames:ct=null,max_num_frames:Ve=null,do_pad:Mt=!0,transpose:Et=!1}={}){const tt=ye.length;if(je===null&&(je=Ce),Ce>je)throw Error(`frame_length (${Ce}) may not be larger than fft_length (${je})`);if(tt!==Ce)throw new Error(`Length of the window (${tt}) must equal frame_length (${Ce})`);if(Pe<=0)throw new Error("hop_length must be greater than zero");if(De===null&&q!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(ft){if(dt!=="reflect")throw new Error(`pad_mode="${dt}" not implemented yet.`);const Y=Math.floor((je-1)/2)+1;P=ve(P,Y,Y)}let Q=Math.floor(1+Math.floor((P.length-Ce)/Pe));ct!==null&&Q<ct&&(Q=ct);const ze=gt?Math.floor(je/2)+1:je;let nt=Q,at=Q;Ve!==null&&(Ve>Q?Mt&&(at=Ve):at=nt=Ve);const Ze=new ue.FFT(je),He=new Float64Array(je),mt=new Float64Array(Ze.outputBufferSize),wt=new Float32Array(ze*at);for(let Y=0;Y<nt;++Y){const z=Y*Pe,ae=Math.min(P.length-z,Ce);ae!==Ce&&He.fill(0,0,Ce);for(let be=0;be<ae;++be)He[be]=P[z+be];if(Ue){let be=0;for(let et=0;et<ae;++et)be+=He[et];const it=be/ae;for(let et=0;et<ae;++et)He[et]-=it}if(xe!==null){for(let be=ae-1;be>=1;--be)He[be]-=xe*He[be-1];He[0]*=1-xe}for(let be=0;be<ye.length;++be)He[be]*=ye[be];Ze.realTransform(mt,He);for(let be=0;be<ze;++be){const it=be<<1;wt[be*at+Y]=mt[it]**2+mt[it+1]**2}}if(De!==null&&De!==2){const Y=2/De;for(let z=0;z<wt.length;++z)wt[z]**=Y}const Lt=q.length;let kt=await(0,ge.matmul)(new ge.Tensor("float32",q.flat(),[Lt,ze]),new ge.Tensor("float32",wt,[ze,at]));Et&&(kt=kt.transpose(1,0));const E=kt.data;for(let Y=0;Y<E.length;++Y)E[Y]=Math.max(_e,E[Y]);if(De!==null&&ke!==null){const Y=Math.min(E.length,nt*Lt);switch(ke){case"log":for(let z=0;z<Y;++z)E[z]=Math.log(E[z]);break;case"log10":for(let z=0;z<Y;++z)E[z]=Math.log10(E[z]);break;case"dB":if(De===1)Z(E,Qe,_t,de);else if(De===2)W(E,Qe,_t,de);else throw new Error(`Cannot use log_mel option '${ke}' with power ${De}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${ke}'`)}}return kt}function G(P,ye,{periodic:Ce=!0,frame_length:Pe=null,center:je=!0}={}){const De=Ce?P+1:P;let ft;switch(ye){case"boxcar":ft=new Float64Array(De).fill(1);break;case"hann":case"hann_window":ft=O(De);break;case"hamming":ft=M(De);break;case"povey":ft=O(De).map(dt=>Math.pow(dt,.85));break;default:throw new Error(`Unknown window type ${ye}.`)}if(Ce&&(ft=ft.subarray(0,P)),Pe===null)return ft;if(P>Pe)throw new Error(`Length of the window (${P}) may not be larger than frame_length (${Pe})`);return ft}},"./src/utils/constants.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{GITHUB_ISSUE_URL:()=>F});const F="https://github.com/huggingface/transformers.js/issues/new/choose"},"./src/utils/core.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{calculateDimensions:()=>L,calculateReflectOffset:()=>K,dispatchCallback:()=>F,escapeRegExp:()=>oe,isIntegralNumber:()=>Ee,isTypedArray:()=>ge,len:()=>Te,mergeArrays:()=>M,pick:()=>se,pop:()=>O,product:()=>j,reverseDictionary:()=>ue});function F(Me,N){Me&&Me(N)}function ue(Me){return Object.fromEntries(Object.entries(Me).map(([N,re])=>[re,N]))}function oe(Me){return Me.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function ge(Me){return Me?.prototype?.__proto__?.constructor?.name==="TypedArray"}function Ee(Me){return Number.isInteger(Me)||typeof Me=="bigint"}function L(Me){const N=[];let re=Me;for(;Array.isArray(re);)N.push(re.length),re=re[0];return N}function O(Me,N,re=void 0){const ve=Me[N];if(ve!==void 0)return delete Me[N],ve;if(re===void 0)throw Error(`Key ${N} does not exist in object.`);return re}function M(...Me){return Array.prototype.concat.apply([],Me)}function j(...Me){return Me.reduce((N,re)=>N.flatMap(ve=>re.map(J=>[ve,J])))}function K(Me,N){return Math.abs((Me+N)%(2*N)-N)}function se(Me,N){return Object.assign({},...N.map(re=>{if(Me[re]!==void 0)return{[re]:Me[re]}}))}function Te(Me){let N=0;for(const re of Me)++N;return N}},"./src/utils/data-structures.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{CharTrie:()=>ue,PriorityQueue:()=>F,TokenLattice:()=>ge});class F{constructor(O=(j,K)=>j>K,M=1/0){this._heap=[],this._comparator=O,this._maxSize=M}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...O){return this.extend(O)}extend(O){for(const M of O)if(this.size<this._maxSize)this._heap.push(M),this._siftUp();else{const j=this._smallest();this._comparator(M,this._heap[j])&&(this._heap[j]=M,this._siftUpFrom(j))}return this.size}pop(){const O=this.peek(),M=this.size-1;return M>0&&this._swap(0,M),this._heap.pop(),this._siftDown(),O}replace(O){const M=this.peek();return this._heap[0]=O,this._siftDown(),M}_parent(O){return(O+1>>>1)-1}_left(O){return(O<<1)+1}_right(O){return O+1<<1}_greater(O,M){return this._comparator(this._heap[O],this._heap[M])}_swap(O,M){const j=this._heap[O];this._heap[O]=this._heap[M],this._heap[M]=j}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(O){for(;O>0&&this._greater(O,this._parent(O));)this._swap(O,this._parent(O)),O=this._parent(O)}_siftDown(){let O=0;for(;this._left(O)<this.size&&this._greater(this._left(O),O)||this._right(O)<this.size&&this._greater(this._right(O),O);){const M=this._right(O)<this.size&&this._greater(this._right(O),this._left(O))?this._right(O):this._left(O);this._swap(O,M),O=M}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class ue{constructor(){this.root=oe.default()}extend(O){for(const M of O)this.push(M)}push(O){let M=this.root;for(const j of O){let K=M.children.get(j);K===void 0&&(K=oe.default(),M.children.set(j,K)),M=K}M.isLeaf=!0}*commonPrefixSearch(O){let M=this.root;if(M===void 0)return;let j="";for(const K of O){if(j+=K,M=M.children.get(K),M===void 0)return;M.isLeaf&&(yield j)}}}class oe{constructor(O,M){this.isLeaf=O,this.children=M}static default(){return new oe(!1,new Map)}}class ge{constructor(O,M,j){this.chars=Array.from(O),this.len=this.chars.length,this.bosTokenId=M,this.eosTokenId=j,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const K=new Ee(this.bosTokenId,0,0,0,0),se=new Ee(this.eosTokenId,1,this.len,0,0);this.nodes.push(K.clone()),this.nodes.push(se.clone()),this.beginNodes[this.len].push(se),this.endNodes[0].push(K)}insert(O,M,j,K){const se=this.nodes.length,Te=new Ee(K,se,O,M,j);this.beginNodes[O].push(Te),this.endNodes[O+M].push(Te),this.nodes.push(Te)}viterbi(){const O=this.len;let M=0;for(;M<=O;){if(this.beginNodes[M].length==0)return[];for(let Me of this.beginNodes[M]){Me.prev=null;let N=0,re=null;for(let ve of this.endNodes[M]){const J=ve.backtraceScore+Me.score;(re===null||J>N)&&(re=ve.clone(),N=J)}if(re!==null)Me.prev=re,Me.backtraceScore=N;else return[]}++M}const j=[],se=this.beginNodes[O][0].prev;if(se===null)return[];let Te=se.clone();for(;Te.prev!==null;)j.push(Te.clone()),Te=Te.clone().prev.clone();return j.reverse(),j}piece(O){return this.chars.slice(O.pos,O.pos+O.length).join("")}tokens(){return this.viterbi().map(M=>this.piece(M))}tokenIds(){return this.viterbi().map(M=>M.tokenId)}}class Ee{constructor(O,M,j,K,se){this.tokenId=O,this.nodeId=M,this.pos=j,this.length=K,this.score=se,this.prev=null,this.backtraceScore=0}clone(){const O=new Ee(this.tokenId,this.nodeId,this.pos,this.length,this.score);return O.prev=this.prev,O.backtraceScore=this.backtraceScore,O}}},"./src/utils/devices.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{DEVICE_TYPES:()=>F});const F=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{DATA_TYPES:()=>ge,DEFAULT_DEVICE_DTYPE_MAPPING:()=>Ee,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>L,isWebGpuFp16Supported:()=>oe});var F=I("./src/env.js"),ue=I("./src/utils/devices.js");const oe=function(){let O;return async function(){if(O===void 0)if(!F.apis.IS_WEBGPU_AVAILABLE)O=!1;else try{O=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{O=!1}return O}}(),ge=Object.freeze({fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),Ee=Object.freeze({[ue.DEVICE_TYPES.wasm]:ge.q8}),L=Object.freeze({[ge.fp32]:"",[ge.fp16]:"_fp16",[ge.int8]:"_int8",[ge.uint8]:"_uint8",[ge.q8]:"_quantized",[ge.q4]:"_q4",[ge.q4f16]:"_q4f16",[ge.bnb4]:"_bnb4"})},"./src/utils/generic.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{Callable:()=>F});const F=class{constructor(){let ue=function(...oe){return ue._call(...oe)};return Object.setPrototypeOf(ue,new.target.prototype)}_call(...ue){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{getFile:()=>M,getModelFile:()=>Me,getModelJSON:()=>N});var F=I("?7a2c"),ue=I("?a42a"),oe=I("./src/env.js"),ge=I("./src/utils/core.js");const Ee={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class L{constructor(Z){if(this.filePath=Z,this.headers=new Headers,this.exists=F.existsSync(Z),this.exists){this.status=200,this.statusText="OK";let W=F.statSync(Z);this.headers.set("content-length",W.size.toString()),this.updateContentType();let B=this;this.body=new ReadableStream({start(G){B.arrayBuffer().then(P=>{G.enqueue(new Uint8Array(P)),G.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const Z=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",Ee[Z]??"application/octet-stream")}clone(){let Z=new L(this.filePath);return Z.exists=this.exists,Z.status=this.status,Z.statusText=this.statusText,Z.headers=new Headers(this.headers),Z}async arrayBuffer(){return(await F.promises.readFile(this.filePath)).buffer}async blob(){const Z=await F.promises.readFile(this.filePath);return new Blob([Z],{type:this.headers.get("content-type")})}async text(){return await F.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function O(J,Z=null,W=null){let B;try{B=new URL(J)}catch{return!1}return!(Z&&!Z.includes(B.protocol)||W&&!W.includes(B.hostname))}async function M(J){if(oe.env.useFS&&!O(J,["http:","https:","blob:"]))return new L(J);if(typeof xs<"u"&&xs?.release?.name==="node"){const Z=!!Cp?.TESTING_REMOTELY,W=oe.env.version,B=new Headers;if(B.set("User-Agent",`transformers.js/${W}; is_ci/${Z};`),O(J,["http:","https:"],["huggingface.co","hf.co"])){const P=Cp?.HF_TOKEN??Cp?.HF_ACCESS_TOKEN;P&&B.set("Authorization",`Bearer ${P}`)}return fetch(J,{headers:B})}else return fetch(J)}const j={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function K(J,Z,W){if(!W)return null;const B=j[J]??`Error (${J}) occurred while trying to load file`;throw Error(`${B}: "${Z}".`)}class se{constructor(Z){this.path=Z}async match(Z){let W=ue.join(this.path,Z),B=new L(W);if(B.exists)return B}async put(Z,W){const B=G_.from(await W.arrayBuffer());let G=ue.join(this.path,Z);try{await F.promises.mkdir(ue.dirname(G),{recursive:!0}),await F.promises.writeFile(G,B)}catch(P){console.warn("An error occurred while writing the file to cache:",P)}}}async function Te(J,...Z){for(let W of Z)try{let B=await J.match(W);if(B)return B}catch{continue}}async function Me(J,Z,W=!0,B={}){if(!oe.env.allowLocalModels){if(B.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!oe.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,ge.dispatchCallback)(B.progress_callback,{status:"initiate",name:J,file:Z});let G;if(!G&&oe.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{G=await caches.open("transformers-cache")}catch(ke){console.warn("An error occurred while opening the browser cache:",ke)}}if(!G&&oe.env.useFSCache&&(G=new se(B.cache_dir??oe.env.cacheDir)),!G&&oe.env.useCustomCache){if(!oe.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!oe.env.customCache.match||!oe.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");G=oe.env.customCache}const P=B.revision??"main";let ye=ve(J,Z),Ce=ve(oe.env.localModelPath,ye),Pe=ve(oe.env.remoteHost,oe.env.remotePathTemplate.replaceAll("{model}",J).replaceAll("{revision}",encodeURIComponent(P)),Z),je=P==="main"?ye:ve(J,P,Z),De,ft=G instanceof se?je:Pe,dt=!1,gt;G&&(gt=await Te(G,Ce,ft));const xe=gt!==void 0;if(gt===void 0){if(oe.env.allowLocalModels)if(O(ye,["http:","https:"])){if(B.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${ye}.`);if(!oe.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${ye}.`)}else try{gt=await M(Ce),De=Ce}catch(Qe){console.warn(`Unable to load from local path "${Ce}": "${Qe}"`)}if(gt===void 0||gt.status===404){if(B.local_files_only||!oe.env.allowRemoteModels){if(W)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${Ce}".`);return null}if(gt=await M(Pe),gt.status!==200)return K(gt.status,Pe,W);De=ft}dt=G&&typeof Response<"u"&&gt instanceof Response&&gt.status===200}(0,ge.dispatchCallback)(B.progress_callback,{status:"download",name:J,file:Z});const q={status:"progress",name:J,file:Z};let _e;return B.progress_callback?xe&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(_e=new Uint8Array(await gt.arrayBuffer()),(0,ge.dispatchCallback)(B.progress_callback,{...q,progress:100,loaded:_e.length,total:_e.length})):_e=await re(gt,ke=>{(0,ge.dispatchCallback)(B.progress_callback,{...q,...ke})}):_e=new Uint8Array(await gt.arrayBuffer()),dt&&De&&await G.match(De)===void 0&&await G.put(De,new Response(_e,{headers:gt.headers})).catch(ke=>{console.warn(`Unable to add response to browser cache: ${ke}.`)}),(0,ge.dispatchCallback)(B.progress_callback,{status:"done",name:J,file:Z}),_e}async function N(J,Z,W=!0,B={}){let G=await Me(J,Z,W,B);if(G===null)return{};let ye=new TextDecoder("utf-8").decode(G);return JSON.parse(ye)}async function re(J,Z){const W=J.headers.get("Content-Length");W===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let B=parseInt(W??"0"),G=new Uint8Array(B),P=0;const ye=J.body.getReader();async function Ce(){const{done:Pe,value:je}=await ye.read();if(Pe)return;let De=P+je.length;if(De>B){B=De;let dt=new Uint8Array(B);dt.set(G),G=dt}G.set(je,P),P=De;const ft=P/B*100;return Z({progress:ft,loaded:P,total:B}),Ce()}return await Ce(),G}function ve(...J){return J=J.map((Z,W)=>(W&&(Z=Z.replace(new RegExp("^/"),"")),W!==J.length-1&&(Z=Z.replace(new RegExp("/$"),"")),Z)),J.join("/")}},"./src/utils/image.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{RawImage:()=>Te});var F=I("./src/utils/hub.js"),ue=I("./src/env.js"),oe=I("./src/utils/tensor.js"),ge=I("?2b25");const Ee=typeof self<"u",L=Ee&&self.constructor.name==="DedicatedWorkerGlobalScope";let O,M,j;if(Ee)O=(Me,N)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(Me,N)},j=self.createImageBitmap,M=self.ImageData;else if(ge)j=async Me=>{const re=(await Me.metadata()).channels,{data:ve,info:J}=await Me.rotate().raw().toBuffer({resolveWithObject:!0}),Z=new Te(new Uint8ClampedArray(ve),J.width,J.height,J.channels);return re!==void 0&&re!==J.channels&&Z.convert(re),Z};else throw new Error("Unable to load image processing library.");const K={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},se=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class Te{constructor(N,re,ve,J){this.data=N,this.width=re,this.height=ve,this.channels=J}get size(){return[this.width,this.height]}static async read(N){if(N instanceof Te)return N;if(typeof N=="string"||N instanceof URL)return await this.fromURL(N);throw new Error(`Unsupported input type: ${typeof N}`)}static fromCanvas(N){if(!Ee)throw new Error("fromCanvas() is only supported in browser environments.");const ve=N.getContext("2d").getImageData(0,0,N.width,N.height).data;return new Te(ve,N.width,N.height,4)}static async fromURL(N){const re=await(0,F.getFile)(N);if(re.status!==200)throw new Error(`Unable to read image from "${N}" (${re.status} ${re.statusText})`);const ve=await re.blob();return this.fromBlob(ve)}static async fromBlob(N){if(Ee){const re=await j(N),ve=O(re.width,re.height).getContext("2d");return ve.drawImage(re,0,0),new this(ve.getImageData(0,0,re.width,re.height).data,re.width,re.height,4)}else{const re=ge(await N.arrayBuffer());return await j(re)}}static fromTensor(N,re="CHW"){if(N.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${N.dims.length} dimensions.`);if(re==="CHW")N=N.transpose(1,2,0);else if(re!=="HWC")throw new Error(`Unsupported channel format: ${re}`);if(!(N.data instanceof Uint8ClampedArray||N.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${N.type}`);switch(N.dims[2]){case 1:case 2:case 3:case 4:return new Te(N.data,N.dims[1],N.dims[0],N.dims[2]);default:throw new Error(`Unsupported number of channels: ${N.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const N=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let re=0,ve=0;re<this.data.length;re+=this.channels){const J=this.data[re],Z=this.data[re+1],W=this.data[re+2];N[ve++]=Math.round(.2989*J+.587*Z+.114*W)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(N,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const N=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let re=0,ve=0;re<this.data.length;++re)N[ve++]=this.data[re],N[ve++]=this.data[re],N[ve++]=this.data[re];break;case 4:for(let re=0,ve=0;re<this.data.length;re+=4)N[ve++]=this.data[re],N[ve++]=this.data[re+1],N[ve++]=this.data[re+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(N,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const N=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let re=0,ve=0;re<this.data.length;++re)N[ve++]=this.data[re],N[ve++]=this.data[re],N[ve++]=this.data[re],N[ve++]=255;break;case 3:for(let re=0,ve=0;re<this.data.length;re+=3)N[ve++]=this.data[re],N[ve++]=this.data[re+1],N[ve++]=this.data[re+2],N[ve++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(N,this.width,this.height,4)}async resize(N,re,{resample:ve=2}={}){let J=K[ve]??ve;if(Ee){const Z=this.channels,W=this.toCanvas(),B=O(N,re).getContext("2d");return B.drawImage(W,0,0,N,re),new Te(B.getImageData(0,0,N,re).data,N,re,4).convert(Z)}else{let Z=this.toSharp();switch(J){case"box":case"hamming":(J==="box"||J==="hamming")&&(console.warn(`Resampling method ${J} is not yet supported. Using bilinear instead.`),J="bilinear");case"nearest":case"bilinear":case"bicubic":Z=Z.affine([N/this.width,0,0,re/this.height],{interpolator:J});break;case"lanczos":Z=Z.resize({width:N,height:re,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${J} is not supported.`)}return await j(Z)}}async pad([N,re,ve,J]){if(N=Math.max(N,0),re=Math.max(re,0),ve=Math.max(ve,0),J=Math.max(J,0),N===0&&re===0&&ve===0&&J===0)return this;if(Ee){const Z=this.channels,W=this.toCanvas(),B=this.width+N+re,G=this.height+ve+J,P=O(B,G).getContext("2d");return P.drawImage(W,0,0,this.width,this.height,N,ve,B,G),new Te(P.getImageData(0,0,B,G).data,B,G,4).convert(Z)}else{const Z=this.toSharp().extend({left:N,right:re,top:ve,bottom:J});return await j(Z)}}async crop([N,re,ve,J]){if(N=Math.max(N,0),re=Math.max(re,0),ve=Math.min(ve,this.width-1),J=Math.min(J,this.height-1),N===0&&re===0&&ve===this.width-1&&J===this.height-1)return this;const Z=ve-N+1,W=J-re+1;if(Ee){const B=this.channels,G=this.toCanvas(),P=O(Z,W).getContext("2d");return P.drawImage(G,N,re,Z,W,0,0,Z,W),new Te(P.getImageData(0,0,Z,W).data,Z,W,4).convert(B)}else{const B=this.toSharp().extract({left:N,top:re,width:Z,height:W});return await j(B)}}async center_crop(N,re){if(this.width===N&&this.height===re)return this;const ve=(this.width-N)/2,J=(this.height-re)/2;if(Ee){const Z=this.channels,W=this.toCanvas(),B=O(N,re).getContext("2d");let G=0,P=0,ye=0,Ce=0;return ve>=0?G=ve:ye=-ve,J>=0?P=J:Ce=-J,B.drawImage(W,G,P,N,re,ye,Ce,N,re),new Te(B.getImageData(0,0,N,re).data,N,re,4).convert(Z)}else{let Z=this.toSharp();if(ve>=0&&J>=0)Z=Z.extract({left:Math.floor(ve),top:Math.floor(J),width:N,height:re});else if(ve<=0&&J<=0){const W=Math.floor(-J),B=Math.floor(-ve);Z=Z.extend({top:W,left:B,right:N-this.width-B,bottom:re-this.height-W})}else{let W=[0,0],B=0;J<0?(W[0]=Math.floor(-J),W[1]=re-this.height-W[0]):B=Math.floor(J);let G=[0,0],P=0;ve<0?(G[0]=Math.floor(-ve),G[1]=N-this.width-G[0]):P=Math.floor(ve),Z=Z.extend({top:W[0],bottom:W[1],left:G[0],right:G[1]}).extract({left:P,top:B,width:N,height:re})}return await j(Z)}}async toBlob(N="image/png",re=1){if(!Ee)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:N,quality:re})}toTensor(N="CHW"){let re=new oe.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(N!=="HWC")if(N==="CHW")re=re.permute(2,0,1);else throw new Error(`Unsupported channel format: ${N}`);return re}toCanvas(){if(!Ee)throw new Error("toCanvas() is only supported in browser environments.");const N=this.clone().rgba(),re=O(N.width,N.height),ve=new M(N.data,N.width,N.height);return re.getContext("2d").putImageData(ve,0,0),re}_update(N,re,ve,J=null){return this.data=N,this.width=re,this.height=ve,J!==null&&(this.channels=J),this}clone(){return new Te(this.data.slice(),this.width,this.height,this.channels)}convert(N){if(this.channels===N)return this;switch(N){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(N){if(Ee){if(L)throw new Error("Unable to save an image from a Web Worker.");const re=N.split(".").pop().toLowerCase(),ve=se.get(re)??"image/png",J=await this.toBlob(ve),Z=URL.createObjectURL(J),W=document.createElement("a");W.href=Z,W.download=N,W.click(),W.remove()}else{if(ue.env.useFS)return await this.toSharp().toFile(N);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(Ee)throw new Error("toSharp() is only supported in server-side environments.");return ge(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}},"./src/utils/maths.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{FFT:()=>Me,bankers_round:()=>ve,cos_sim:()=>L,dot:()=>Ee,dynamic_time_warping:()=>J,interpolate_data:()=>F,log_softmax:()=>ge,magnitude:()=>O,max:()=>j,medianFilter:()=>N,min:()=>M,permute_data:()=>ue,round:()=>re,softmax:()=>oe});function F(Z,[W,B,G],[P,ye],Ce="bilinear",Pe=!1){const je=ye/G,De=P/B,ft=new Z.constructor(P*ye*W),dt=B*G,gt=P*ye;for(let xe=0;xe<P;++xe)for(let q=0;q<ye;++q){const _e=xe*ye+q,ke=(q+.5)/je-.5,Qe=(xe+.5)/De-.5;let _t=Math.floor(ke),de=Math.floor(Qe);const Ue=Math.min(_t+1,G-1),ct=Math.min(de+1,B-1);_t=Math.max(_t,0),de=Math.max(de,0);const Ve=ke-_t,Mt=Qe-de,Et=(1-Ve)*(1-Mt),tt=Ve*(1-Mt),Q=(1-Ve)*Mt,ze=Ve*Mt,nt=de*G,at=ct*G,Ze=nt+_t,He=nt+Ue,mt=at+_t,wt=at+Ue;for(let Lt=0;Lt<W;++Lt){const kt=Lt*dt;ft[Lt*gt+_e]=Et*Z[kt+Ze]+tt*Z[kt+He]+Q*Z[kt+mt]+ze*Z[kt+wt]}}return ft}function ue(Z,W,B){const G=new Array(B.length),P=new Array(B.length);for(let Pe=B.length-1,je=1;Pe>=0;--Pe)P[Pe]=je,G[Pe]=W[B[Pe]],je*=G[Pe];const ye=B.map((Pe,je)=>P[B.indexOf(je)]),Ce=new Z.constructor(Z.length);for(let Pe=0;Pe<Z.length;++Pe){let je=0;for(let De=W.length-1,ft=Pe;De>=0;--De)je+=ft%W[De]*ye[De],ft=Math.floor(ft/W[De]);Ce[je]=Z[Pe]}return[Ce,G]}function oe(Z){const W=j(Z)[0],B=Z.map(ye=>Math.exp(ye-W)),G=B.reduce((ye,Ce)=>ye+Ce,0);return B.map(ye=>ye/G)}function ge(Z){const W=j(Z)[0];let B=0;for(let ye=0;ye<Z.length;++ye)B+=Math.exp(Z[ye]-W);const G=Math.log(B);return Z.map(ye=>ye-W-G)}function Ee(Z,W){let B=0;for(let G=0;G<Z.length;++G)B+=Z[G]*W[G];return B}function L(Z,W){const B=Ee(Z,W),G=O(Z),P=O(W);return B/(G*P)}function O(Z){return Math.sqrt(Z.reduce((W,B)=>W+B*B,0))}function M(Z){if(Z.length===0)throw Error("Array must not be empty");let W=Z[0],B=0;for(let G=1;G<Z.length;++G)Z[G]<W&&(W=Z[G],B=G);return[W,B]}function j(Z){if(Z.length===0)throw Error("Array must not be empty");let W=Z[0],B=0;for(let G=1;G<Z.length;++G)Z[G]>W&&(W=Z[G],B=G);return[Number(W),B]}function K(Z){return Z>0&&(Z&Z-1)===0}class se{constructor(W){if(this.size=W|0,this.size<=1||!K(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=W<<1,this.table=new Float64Array(this.size*2);for(let G=0;G<this.table.length;G+=2){const P=Math.PI*G/this.size;this.table[G]=Math.cos(P),this.table[G+1]=-Math.sin(P)}let B=0;for(let G=1;this.size>G;G<<=1)++B;this._width=B%2===0?B-1:B,this._bitrev=new Int32Array(1<<this._width);for(let G=0;G<this._bitrev.length;++G){this._bitrev[G]=0;for(let P=0;P<this._width;P+=2){const ye=this._width-P-2;this._bitrev[G]|=(G>>>P&3)<<ye}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(W,B){const G=B||new Array(W.length>>>1);for(let P=0;P<W.length;P+=2)G[P>>>1]=W[P];return G}toComplexArray(W,B){const G=B||this.createComplexArray();for(let P=0;P<G.length;P+=2)G[P]=W[P>>>1],G[P+1]=0;return G}transform(W,B){if(W===B)throw new Error("Input and output buffers must be different");this._transform4(W,B,1)}realTransform(W,B){if(W===B)throw new Error("Input and output buffers must be different");this._realTransform4(W,B,1)}inverseTransform(W,B){if(W===B)throw new Error("Input and output buffers must be different");this._transform4(W,B,-1);for(let G=0;G<W.length;++G)W[G]/=this.size}_transform4(W,B,G){const P=this._csize;let Ce=1<<this._width,Pe=P/Ce<<1,je,De;const ft=this._bitrev;if(Pe===4)for(je=0,De=0;je<P;je+=Pe,++De){const gt=ft[De];this._singleTransform2(B,W,je,gt,Ce)}else for(je=0,De=0;je<P;je+=Pe,++De){const gt=ft[De];this._singleTransform4(B,W,je,gt,Ce,G)}const dt=this.table;for(Ce>>=2;Ce>=2;Ce>>=2){Pe=P/Ce<<1;const gt=Pe>>>2;for(je=0;je<P;je+=Pe){const xe=je+gt-1;for(let q=je,_e=0;q<xe;q+=2,_e+=Ce){const ke=q,Qe=ke+gt,_t=Qe+gt,de=_t+gt,Ue=W[ke],ct=W[ke+1],Ve=W[Qe],Mt=W[Qe+1],Et=W[_t],tt=W[_t+1],Q=W[de],ze=W[de+1],nt=dt[_e],at=G*dt[_e+1],Ze=Ve*nt-Mt*at,He=Ve*at+Mt*nt,mt=dt[2*_e],wt=G*dt[2*_e+1],Lt=Et*mt-tt*wt,kt=Et*wt+tt*mt,E=dt[3*_e],Y=G*dt[3*_e+1],z=Q*E-ze*Y,ae=Q*Y+ze*E,be=Ue+Lt,it=ct+kt,et=Ue-Lt,At=ct-kt,ot=Ze+z,yt=He+ae,T=G*(Ze-z),c=G*(He-ae);W[ke]=be+ot,W[ke+1]=it+yt,W[Qe]=et+c,W[Qe+1]=At-T,W[_t]=be-ot,W[_t+1]=it-yt,W[de]=et-c,W[de+1]=At+T}}}}_singleTransform2(W,B,G,P,ye){const Ce=W[P],Pe=W[P+1],je=W[P+ye],De=W[P+ye+1];B[G]=Ce+je,B[G+1]=Pe+De,B[G+2]=Ce-je,B[G+3]=Pe-De}_singleTransform4(W,B,G,P,ye,Ce){const Pe=ye*2,je=ye*3,De=W[P],ft=W[P+1],dt=W[P+ye],gt=W[P+ye+1],xe=W[P+Pe],q=W[P+Pe+1],_e=W[P+je],ke=W[P+je+1],Qe=De+xe,_t=ft+q,de=De-xe,Ue=ft-q,ct=dt+_e,Ve=gt+ke,Mt=Ce*(dt-_e),Et=Ce*(gt-ke);B[G]=Qe+ct,B[G+1]=_t+Ve,B[G+2]=de+Et,B[G+3]=Ue-Mt,B[G+4]=Qe-ct,B[G+5]=_t-Ve,B[G+6]=de-Et,B[G+7]=Ue+Mt}_realTransform4(W,B,G){const P=this._csize;let Ce=1<<this._width,Pe=P/Ce<<1,je,De;const ft=this._bitrev;if(Pe===4)for(je=0,De=0;je<P;je+=Pe,++De){const xe=ft[De];this._singleRealTransform2(B,W,je,xe>>>1,Ce>>>1)}else for(je=0,De=0;je<P;je+=Pe,++De){const xe=ft[De];this._singleRealTransform4(B,W,je,xe>>>1,Ce>>>1,G)}const dt=this.table;for(Ce>>=2;Ce>=2;Ce>>=2){Pe=P/Ce<<1;const xe=Pe>>>1,q=xe>>>1,_e=q>>>1;for(je=0;je<P;je+=Pe)for(let ke=0,Qe=0;ke<=_e;ke+=2,Qe+=Ce){const _t=je+ke,de=_t+q,Ue=de+q,ct=Ue+q,Ve=W[_t],Mt=W[_t+1],Et=W[de],tt=W[de+1],Q=W[Ue],ze=W[Ue+1],nt=W[ct],at=W[ct+1],Ze=Ve,He=Mt,mt=dt[Qe],wt=G*dt[Qe+1],Lt=Et*mt-tt*wt,kt=Et*wt+tt*mt,E=dt[2*Qe],Y=G*dt[2*Qe+1],z=Q*E-ze*Y,ae=Q*Y+ze*E,be=dt[3*Qe],it=G*dt[3*Qe+1],et=nt*be-at*it,At=nt*it+at*be,ot=Ze+z,yt=He+ae,T=Ze-z,c=He-ae,m=Lt+et,U=kt+At,he=G*(Lt-et),Se=G*(kt-At);if(W[_t]=ot+m,W[_t+1]=yt+U,W[de]=T+Se,W[de+1]=c-he,ke===0){W[Ue]=ot-m,W[Ue+1]=yt-U;continue}if(ke===_e)continue;const Ge=je+q-ke,sr=je+xe-ke;W[Ge]=T-G*Se,W[Ge+1]=-c-G*he,W[sr]=ot-G*m,W[sr+1]=-yt+G*U}}const gt=P>>>1;for(let xe=2;xe<gt;xe+=2)W[P-xe]=W[xe],W[P-xe+1]=-W[xe+1]}_singleRealTransform2(W,B,G,P,ye){const Ce=W[P],Pe=W[P+ye];B[G]=Ce+Pe,B[G+1]=0,B[G+2]=Ce-Pe,B[G+3]=0}_singleRealTransform4(W,B,G,P,ye,Ce){const Pe=ye*2,je=ye*3,De=W[P],ft=W[P+ye],dt=W[P+Pe],gt=W[P+je],xe=De+dt,q=De-dt,_e=ft+gt,ke=Ce*(ft-gt);B[G]=xe+_e,B[G+1]=0,B[G+2]=q,B[G+3]=-ke,B[G+4]=xe-_e,B[G+5]=0,B[G+6]=q,B[G+7]=ke}}class Te{constructor(W){const B=2*(W-1),G=2*(2*W-1),P=2**Math.ceil(Math.log2(G));this.bufferSize=P,this._a=B;const ye=new Float64Array(G),Ce=new Float64Array(P);this._chirpBuffer=new Float64Array(P),this._buffer1=new Float64Array(P),this._buffer2=new Float64Array(P),this._outBuffer1=new Float64Array(P),this._outBuffer2=new Float64Array(P);const Pe=-2*Math.PI/W,je=Math.cos(Pe),De=Math.sin(Pe);for(let ft=0;ft<G>>1;++ft){const dt=(ft+1-W)**2/2,gt=Math.sqrt(je**2+De**2)**dt,xe=dt*Math.atan2(De,je),q=2*ft;ye[q]=gt*Math.cos(xe),ye[q+1]=gt*Math.sin(xe),Ce[q]=ye[q],Ce[q+1]=-ye[q+1]}this._slicedChirpBuffer=ye.subarray(B,G),this._f=new se(P>>1),this._f.transform(this._chirpBuffer,Ce)}_transform(W,B,G){const P=this._buffer1,ye=this._buffer2,Ce=this._outBuffer1,Pe=this._outBuffer2,je=this._chirpBuffer,De=this._slicedChirpBuffer,ft=this._a;if(G)for(let dt=0;dt<De.length;dt+=2){const gt=dt+1,xe=dt>>1,q=B[xe];P[dt]=q*De[dt],P[gt]=q*De[gt]}else for(let dt=0;dt<De.length;dt+=2){const gt=dt+1;P[dt]=B[dt]*De[dt]-B[gt]*De[gt],P[gt]=B[dt]*De[gt]+B[gt]*De[dt]}this._f.transform(Ce,P);for(let dt=0;dt<je.length;dt+=2){const gt=dt+1;ye[dt]=Ce[dt]*je[dt]-Ce[gt]*je[gt],ye[gt]=Ce[dt]*je[gt]+Ce[gt]*je[dt]}this._f.inverseTransform(Pe,ye);for(let dt=0;dt<Pe.length;dt+=2){const gt=Pe[dt+ft],xe=Pe[dt+ft+1],q=De[dt],_e=De[dt+1];W[dt]=gt*q-xe*_e,W[dt+1]=gt*_e+xe*q}}transform(W,B){this._transform(W,B,!1)}realTransform(W,B){this._transform(W,B,!0)}}class Me{constructor(W){this.fft_length=W,this.isPowerOfTwo=K(W),this.isPowerOfTwo?(this.fft=new se(W),this.outputBufferSize=2*W):(this.fft=new Te(W),this.outputBufferSize=this.fft.bufferSize)}realTransform(W,B){this.fft.realTransform(W,B)}transform(W,B){this.fft.transform(W,B)}}function N(Z,W){if(W%2===0||W<=0)throw new Error("Window size must be a positive odd number");const B=new Z.constructor(Z.length),G=new Z.constructor(W),P=Math.floor(W/2);for(let ye=0;ye<Z.length;++ye){let Ce=0;for(let Pe=-P;Pe<=P;++Pe){let je=ye+Pe;je<0?je=Math.abs(je):je>=Z.length&&(je=2*(Z.length-1)-je),G[Ce++]=Z[je]}G.sort(),B[ye]=G[P]}return B}function re(Z,W){const B=Math.pow(10,W);return Math.round(Z*B)/B}function ve(Z){const W=Math.round(Z);return Math.abs(Z)%1===.5?W%2===0?W:W-1:W}function J(Z){const W=Z.length,B=Z[0].length,G=[W+1,B+1],P=Array.from({length:G[0]},()=>Array(G[1]).fill(1/0));P[0][0]=0;const ye=Array.from({length:G[0]},()=>Array(G[1]).fill(-1));for(let ft=1;ft<G[1];++ft)for(let dt=1;dt<G[0];++dt){const gt=P[dt-1][ft-1],xe=P[dt-1][ft],q=P[dt][ft-1];let _e,ke;gt<xe&&gt<q?(_e=gt,ke=0):xe<gt&&xe<q?(_e=xe,ke=1):(_e=q,ke=2),P[dt][ft]=Z[dt-1][ft-1]+_e,ye[dt][ft]=ke}for(let ft=0;ft<G[1];++ft)ye[0][ft]=2;for(let ft=0;ft<G[0];++ft)ye[ft][0]=1;let Ce=W,Pe=B,je=[],De=[];for(;Ce>0||Pe>0;)switch(je.push(Ce-1),De.push(Pe-1),ye[Ce][Pe]){case 0:--Ce,--Pe;break;case 1:--Ce;break;case 2:--Pe;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${Ce}, ${Pe}]. Please file a bug report.`)}return je.reverse(),De.reverse(),[je,De]}},"./src/utils/tensor.js":(Ae,ie,I)=>{I.r(ie),I.d(ie,{Tensor:()=>Ee,cat:()=>Z,full:()=>Ce,full_like:()=>Pe,interpolate:()=>M,interpolate_4d:()=>j,layer_norm:()=>N,matmul:()=>K,mean:()=>G,mean_pooling:()=>Me,ones:()=>je,ones_like:()=>De,permute:()=>O,quantize_embeddings:()=>gt,rfft:()=>se,stack:()=>W,std_mean:()=>B,topk:()=>Te,zeros:()=>ft,zeros_like:()=>dt});var F=I("./src/utils/maths.js"),ue=I("./src/backends/onnx.js"),oe=I("./src/ops/registry.js");const ge=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array});class Ee{get dims(){return this.ort_tensor.dims}set dims(q){this.ort_tensor.dims=q}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...q){return(0,ue.isONNXTensor)(q[0])?this.ort_tensor=q[0]:this.ort_tensor=new ue.Tensor(q[0],q[1],q[2]),new Proxy(this,{get:(_e,ke)=>{if(typeof ke=="string"){let Qe=Number(ke);if(Number.isInteger(Qe))return _e._getitem(Qe)}return _e[ke]},set:(_e,ke,Qe)=>_e[ke]=Qe})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[q,..._e]=this.dims;if(_e.length>0){const ke=_e.reduce((Qe,_t)=>Qe*_t);for(let Qe=0;Qe<q;++Qe)yield this._subarray(Qe,ke,_e)}else yield*this.data}_getitem(q){const[_e,...ke]=this.dims;if(q=J(q,_e),ke.length>0){const Qe=ke.reduce((_t,de)=>_t*de);return this._subarray(q,Qe,ke)}else return new Ee(this.type,[this.data[q]],ke)}indexOf(q){const _e=this.data;for(let ke=0;ke<_e.length;++ke)if(_e[ke]==q)return ke;return-1}_subarray(q,_e,ke){const Qe=q*_e,_t=(q+1)*_e,de="subarray"in this.data?this.data.subarray(Qe,_t):this.data.slice(Qe,_t);return new Ee(this.type,de,ke)}item(){const q=this.data;if(q.length!==1)throw new Error(`a Tensor with ${q.length} elements cannot be converted to Scalar`);return q[0]}tolist(){return L(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const q=this.data;for(let _e=0;_e<q.length;++_e)q[_e]=1/(1+Math.exp(-q[_e]));return this}map(q){return this.clone().map_(q)}map_(q){const _e=this.data;for(let ke=0;ke<_e.length;++ke)_e[ke]=q(_e[ke],ke,_e);return this}mul(q){return this.clone().mul_(q)}mul_(q){const _e=this.data;for(let ke=0;ke<_e.length;++ke)_e[ke]*=q;return this}div(q){return this.clone().div_(q)}div_(q){const _e=this.data;for(let ke=0;ke<_e.length;++ke)_e[ke]/=q;return this}add(q){return this.clone().add_(q)}add_(q){const _e=this.data;for(let ke=0;ke<_e.length;++ke)_e[ke]+=q;return this}sub(q){return this.clone().sub_(q)}sub_(q){const _e=this.data;for(let ke=0;ke<_e.length;++ke)_e[ke]-=q;return this}clone(){return new Ee(this.type,this.data.slice(),this.dims.slice())}slice(...q){const _e=[],ke=[];for(let Ve=0;Ve<this.dims.length;++Ve){let Mt=q[Ve];if(Mt==null)ke.push([0,this.dims[Ve]]),_e.push(this.dims[Ve]);else if(typeof Mt=="number")Mt=J(Mt,this.dims[Ve],Ve),ke.push([Mt,Mt+1]);else if(Array.isArray(Mt)&&Mt.length===2){let[Et,tt]=Mt;if(Et=Et===null?0:J(Et,this.dims[Ve],Ve,!1),tt=tt===null?this.dims[Ve]:J(tt,this.dims[Ve],Ve,!1),Et>tt)throw new Error(`Invalid slice: ${Mt}`);const Q=[Math.max(Et,0),Math.min(tt,this.dims[Ve])];ke.push(Q),_e.push(Q[1]-Q[0])}else throw new Error(`Invalid slice: ${Mt}`)}const Qe=ke.map(([Ve,Mt])=>Mt-Ve),_t=Qe.reduce((Ve,Mt)=>Ve*Mt),de=this.data,Ue=new de.constructor(_t),ct=this.stride();for(let Ve=0;Ve<_t;++Ve){let Mt=0;for(let Et=Qe.length-1,tt=Ve;Et>=0;--Et){const Q=Qe[Et];Mt+=(tt%Q+ke[Et][0])*ct[Et],tt=Math.floor(tt/Q)}Ue[Ve]=de[Mt]}return new Ee(this.type,Ue,_e)}permute(...q){return O(this,q)}transpose(...q){return this.permute(...q)}sum(q=null,_e=!1){return this.norm(1,q,_e)}norm(q="fro",_e=null,ke=!1){if(q==="fro")q=2;else if(typeof q=="string")throw Error(`Unsupported norm: ${q}`);const Qe=this.data;if(_e===null){let Ue=Qe.reduce((ct,Ve)=>ct+Ve**q,0)**(1/q);return new Ee(this.type,[Ue],[])}_e=J(_e,this.dims.length);const _t=this.dims.slice();_t[_e]=1;const de=new Qe.constructor(Qe.length/this.dims[_e]);for(let Ue=0;Ue<Qe.length;++Ue){let ct=0;for(let Ve=this.dims.length-1,Mt=Ue,Et=1;Ve>=0;--Ve){const tt=this.dims[Ve];if(Ve!==_e){const Q=Mt%tt;ct+=Q*Et,Et*=_t[Ve]}Mt=Math.floor(Mt/tt)}de[ct]+=Qe[Ue]**q}if(q!==1)for(let Ue=0;Ue<de.length;++Ue)de[Ue]=de[Ue]**(1/q);return ke||_t.splice(_e,1),new Ee(this.type,de,_t)}normalize_(q=2,_e=1){_e=J(_e,this.dims.length);const ke=this.norm(q,_e,!0),Qe=this.data,_t=ke.data;for(let de=0;de<Qe.length;++de){let Ue=0;for(let ct=this.dims.length-1,Ve=de,Mt=1;ct>=0;--ct){const Et=this.dims[ct];if(ct!==_e){const tt=Ve%Et;Ue+=tt*Mt,Mt*=this.dims[ct]}Ve=Math.floor(Ve/Et)}Qe[de]/=_t[Ue]}return this}normalize(q=2,_e=1){return this.clone().normalize_(q,_e)}stride(){return P(this.dims)}squeeze(q=null){return new Ee(this.type,this.data,re(this.dims,q))}squeeze_(q=null){return this.dims=re(this.dims,q),this}unsqueeze(q=null){return new Ee(this.type,this.data,ve(this.dims,q))}unsqueeze_(q=null){return this.dims=ve(this.dims,q),this}flatten_(q=0,_e=-1){_e=(_e+this.dims.length)%this.dims.length;let ke=this.dims.slice(0,q),Qe=this.dims.slice(q,_e+1),_t=this.dims.slice(_e+1);return this.dims=[...ke,Qe.reduce((de,Ue)=>de*Ue,1),..._t],this}flatten(q=0,_e=-1){return this.clone().flatten_(q,_e)}view(...q){let _e=-1;for(let Qe=0;Qe<q.length;++Qe)if(q[Qe]===-1){if(_e!==-1)throw new Error("Only one dimension can be inferred");_e=Qe}const ke=this.data;if(_e!==-1){const Qe=q.reduce((_t,de,Ue)=>Ue!==_e?_t*de:_t,1);q[_e]=ke.length/Qe}return new Ee(this.type,ke,q)}neg_(){const q=this.data;for(let _e=0;_e<q.length;++_e)q[_e]=-q[_e];return this}neg(){return this.clone().neg_()}clamp_(q,_e){const ke=this.data;for(let Qe=0;Qe<ke.length;++Qe)ke[Qe]=Math.min(Math.max(ke[Qe],q),_e);return this}clamp(q,_e){return this.clone().clamp_(q,_e)}round_(){const q=this.data;for(let _e=0;_e<q.length;++_e)q[_e]=Math.round(q[_e]);return this}round(){return this.clone().round_()}mean(q=null,_e=!1){return G(this,q,_e)}to(q){if(this.type===q)return this;if(!ge.hasOwnProperty(q))throw new Error(`Unsupported type: ${q}`);return new Ee(q,ge[q].from(this.data),this.dims)}}function L(xe,q){const _e=xe.length,ke=q.reduce((_t,de)=>_t*de);if(_e!==ke)throw Error(`cannot reshape array of size ${_e} into shape (${q})`);let Qe=xe;for(let _t=q.length-1;_t>=0;_t--)Qe=Qe.reduce((de,Ue)=>{let ct=de[de.length-1];return ct.length<q[_t]?ct.push(Ue):de.push([Ue]),de},[[]]);return Qe[0]}function O(xe,q){const[_e,ke]=(0,F.permute_data)(xe.data,xe.dims,q);return new Ee(xe.type,_e,ke)}function M(xe,[q,_e],ke="bilinear",Qe=!1){const _t=xe.dims.at(-3)??1,de=xe.dims.at(-2),Ue=xe.dims.at(-1);let ct=(0,F.interpolate_data)(xe.data,[_t,de,Ue],[q,_e],ke,Qe);return new Ee(xe.type,ct,[_t,q,_e])}async function j(xe,{size:q=null,mode:_e="bilinear"}={}){if(xe.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!q)throw new Error("`interpolate_4d` requires a `size` argument.");let ke;if(q.length===2)ke=[...xe.dims.slice(0,2),...q];else if(q.length===3)ke=[xe.dims[0],...q];else if(q.length===4)ke=q;else throw new Error("`size` must be of length 2, 3, or 4.");let Qe;if(_e==="bilinear")Qe=await oe.TensorOpRegistry.bilinear_interpolate_4d;else if(_e==="bicubic")Qe=await oe.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${_e}`);const _t=new Ee("int64",new BigInt64Array(ke.map(BigInt)),[ke.length]);return await Qe({x:xe,s:_t})}async function K(xe,q){return await(await oe.TensorOpRegistry.matmul)({a:xe,b:q})}async function se(xe,q){return await(await oe.TensorOpRegistry.rfft)({x:xe,a:q})}async function Te(xe,q){const _e=await oe.TensorOpRegistry.top_k;return q===null?q=xe.dims.at(-1):q=Math.min(q,xe.dims.at(-1)),await _e({x:xe,k:new Ee("int64",[BigInt(q)],[1])})}function Me(xe,q){const _e=xe.data,ke=q.data,Qe=[xe.dims[0],xe.dims[2]],_t=new _e.constructor(Qe[0]*Qe[1]),[de,Ue,ct]=xe.dims;let Ve=0;for(let Mt=0;Mt<de;++Mt){const Et=Mt*ct*Ue;for(let tt=0;tt<ct;++tt){let Q=0,ze=0;const nt=Mt*Ue,at=Et+tt;for(let He=0;He<Ue;++He){const mt=Number(ke[nt+He]);ze+=mt,Q+=_e[at+He*ct]*mt}const Ze=Q/ze;_t[Ve++]=Ze}}return new Ee(xe.type,_t,Qe)}function N(xe,q,{eps:_e=1e-5}={}){if(xe.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[ke,Qe]=xe.dims;if(q.length!==1&&q[0]!==Qe)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[_t,de]=B(xe,1,0,!0),Ue=_t.data,ct=de.data,Ve=xe.data,Mt=new Ve.constructor(Ve.length);for(let Et=0;Et<ke;++Et){const tt=Et*Qe;for(let Q=0;Q<Qe;++Q){const ze=tt+Q;Mt[ze]=(Ve[ze]-ct[Et])/(Ue[Et]+_e)}}return new Ee(xe.type,Mt,xe.dims)}function re(xe,q){return xe=xe.slice(),q===null?xe=xe.filter(_e=>_e!==1):typeof q=="number"?xe[q]===1&&xe.splice(q,1):Array.isArray(q)&&(xe=xe.filter((_e,ke)=>_e!==1||!q.includes(ke))),xe}function ve(xe,q){return q=J(q,xe.length+1),xe=xe.slice(),xe.splice(q,0,1),xe}function J(xe,q,_e=null,ke=!0){if(ke&&(xe<-q||xe>=q))throw new Error(`IndexError: index ${xe} is out of bounds for dimension${_e===null?"":" "+_e} with size ${q}`);return xe<0&&(xe=(xe%q+q)%q),xe}function Z(xe,q=0){q=J(q,xe[0].dims.length);const _e=xe[0].dims.slice();_e[q]=xe.reduce((de,Ue)=>de+Ue.dims[q],0);const ke=_e.reduce((de,Ue)=>de*Ue,1),Qe=new xe[0].data.constructor(ke),_t=xe[0].type;if(q===0){let de=0;for(const Ue of xe){const ct=Ue.data;Qe.set(ct,de),de+=ct.length}}else{let de=0;for(let Ue=0;Ue<xe.length;++Ue){const{data:ct,dims:Ve}=xe[Ue];for(let Mt=0;Mt<ct.length;++Mt){let Et=0;for(let tt=Ve.length-1,Q=Mt,ze=1;tt>=0;--tt){const nt=Ve[tt];let at=Q%nt;tt===q&&(at+=de),Et+=at*ze,ze*=_e[tt],Q=Math.floor(Q/nt)}Qe[Et]=ct[Mt]}de+=Ve[q]}}return new Ee(_t,Qe,_e)}function W(xe,q=0){return Z(xe.map(_e=>_e.unsqueeze(q)),q)}function B(xe,q=null,_e=1,ke=!1){const Qe=xe.data,_t=xe.dims;if(q===null){const tt=Qe.reduce((at,Ze)=>at+Ze,0)/Qe.length,Q=Math.sqrt(Qe.reduce((at,Ze)=>at+(Ze-tt)**2,0)/(Qe.length-_e)),ze=new Ee(xe.type,[tt],[]);return[new Ee(xe.type,[Q],[]),ze]}q=J(q,_t.length);const de=G(xe,q,ke),Ue=de.data,ct=_t.slice();ct[q]=1;const Ve=new Qe.constructor(Qe.length/_t[q]);for(let Et=0;Et<Qe.length;++Et){let tt=0;for(let Q=_t.length-1,ze=Et,nt=1;Q>=0;--Q){const at=_t[Q];if(Q!==q){const Ze=ze%at;tt+=Ze*nt,nt*=ct[Q]}ze=Math.floor(ze/at)}Ve[tt]+=(Qe[Et]-Ue[tt])**2}for(let Et=0;Et<Ve.length;++Et)Ve[Et]=Math.sqrt(Ve[Et]/(_t[q]-_e));return ke||ct.splice(q,1),[new Ee(xe.type,Ve,ct),de]}function G(xe,q=null,_e=!1){const ke=xe.data;if(q===null){const Ue=ke.reduce((ct,Ve)=>ct+Ve,0);return new Ee(xe.type,[Ue/ke.length],[])}const Qe=xe.dims;q=J(q,Qe.length);const _t=Qe.slice();_t[q]=1;const de=new ke.constructor(ke.length/Qe[q]);for(let Ue=0;Ue<ke.length;++Ue){let ct=0;for(let Ve=Qe.length-1,Mt=Ue,Et=1;Ve>=0;--Ve){const tt=Qe[Ve];if(Ve!==q){const Q=Mt%tt;ct+=Q*Et,Et*=_t[Ve]}Mt=Math.floor(Mt/tt)}de[ct]+=ke[Ue]}if(Qe[q]!==1)for(let Ue=0;Ue<de.length;++Ue)de[Ue]=de[Ue]/Qe[q];return _e||_t.splice(q,1),new Ee(xe.type,de,_t)}function P(xe){const q=new Array(xe.length);for(let _e=xe.length-1,ke=1;_e>=0;--_e)q[_e]=ke,ke*=xe[_e];return q}function ye(xe,q,_e,ke){const Qe=xe.reduce((_t,de)=>_t*de,1);return new Ee(_e,new ke(Qe).fill(q),xe)}function Ce(xe,q){let _e,ke;if(typeof q=="number")_e="float32",ke=Float32Array;else if(typeof q=="bigint")_e="int64",ke=BigInt64Array;else throw new Error(`Unsupported data type: ${typeof q}`);return ye(xe,q,_e,ke)}function Pe(xe,q){return Ce(xe.dims,q)}function je(xe){return ye(xe,1n,"int64",BigInt64Array)}function De(xe){return je(xe.dims)}function ft(xe){return ye(xe,0n,"int64",BigInt64Array)}function dt(xe){return ft(xe.dims)}function gt(xe,q){if(xe.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(xe.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(q))throw new Error("The precision must be either 'binary' or 'ubinary'");const _e=q==="binary",ke=_e?"int8":"uint8",Qe=_e?Int8Array:Uint8Array,_t=xe.data,de=new Qe(_t.length/8);for(let Ue=0;Ue<_t.length;++Ue){const ct=_t[Ue]>0?1:0,Ve=Math.floor(Ue/8),Mt=Ue%8;de[Ve]|=ct<<7-Mt,_e&&Mt===0&&(de[Ve]-=128)}return new Ee(ke,de,[xe.dims[0],xe.dims[1]/8])}}},Wf={};function Kr(Ae){var ie=Wf[Ae];if(ie!==void 0)return ie.exports;var I=Wf[Ae]={exports:{}};return Yf[Ae](I,I.exports,Kr),I.exports}Kr.m=Yf;(()=>{var Ae=Object.getPrototypeOf?I=>Object.getPrototypeOf(I):I=>I.__proto__,ie;Kr.t=function(I,F){if(F&1&&(I=this(I)),F&8||typeof I=="object"&&I&&(F&4&&I.__esModule||F&16&&typeof I.then=="function"))return I;var ue=Object.create(null);Kr.r(ue);var oe={};ie=ie||[null,Ae({}),Ae([]),Ae(Ae)];for(var ge=F&2&&I;typeof ge=="object"&&!~ie.indexOf(ge);ge=Ae(ge))Object.getOwnPropertyNames(ge).forEach(Ee=>oe[Ee]=()=>I[Ee]);return oe.default=()=>I,Kr.d(ue,oe),ue}})();Kr.d=(Ae,ie)=>{for(var I in ie)Kr.o(ie,I)&&!Kr.o(Ae,I)&&Object.defineProperty(Ae,I,{enumerable:!0,get:ie[I]})};Kr.o=(Ae,ie)=>Object.prototype.hasOwnProperty.call(Ae,ie);Kr.r=Ae=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(Ae,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Ae,"__esModule",{value:!0})};(()=>{var Ae;if(typeof import.meta.url=="string"&&(Ae=import.meta.url),!Ae)throw new Error("Automatic publicPath is not supported in this browser");Ae=Ae.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),Kr.p=Ae})();Kr.b=new URL("./",import.meta.url);var p={};/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Kr.r(p);Kr.d(p,{ASTFeatureExtractor:()=>ir.ASTFeatureExtractor,ASTForAudioClassification:()=>v.ASTForAudioClassification,ASTModel:()=>v.ASTModel,ASTPreTrainedModel:()=>v.ASTPreTrainedModel,AlbertForMaskedLM:()=>v.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>v.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>v.AlbertForSequenceClassification,AlbertModel:()=>v.AlbertModel,AlbertPreTrainedModel:()=>v.AlbertPreTrainedModel,AlbertTokenizer:()=>dr.AlbertTokenizer,AudioClassificationPipeline:()=>Hr.AudioClassificationPipeline,AutoConfig:()=>$p.AutoConfig,AutoModel:()=>v.AutoModel,AutoModelForAudioClassification:()=>v.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>v.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>v.AutoModelForCTC,AutoModelForCausalLM:()=>v.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>v.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>v.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>v.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>v.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>v.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>v.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>v.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>v.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>v.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>v.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>v.AutoModelForObjectDetection,AutoModelForQuestionAnswering:()=>v.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>v.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>v.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>v.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>v.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>v.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>v.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>v.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>v.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>v.AutoModelForVision2Seq,AutoModelForXVector:()=>v.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>v.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>ir.AutoProcessor,AutoTokenizer:()=>dr.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>Hr.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>v.BartForConditionalGeneration,BartForSequenceClassification:()=>v.BartForSequenceClassification,BartModel:()=>v.BartModel,BartPretrainedModel:()=>v.BartPretrainedModel,BartTokenizer:()=>dr.BartTokenizer,BaseModelOutput:()=>v.BaseModelOutput,BaseStreamer:()=>Sp.BaseStreamer,BeitFeatureExtractor:()=>ir.BeitFeatureExtractor,BeitForImageClassification:()=>v.BeitForImageClassification,BeitModel:()=>v.BeitModel,BeitPreTrainedModel:()=>v.BeitPreTrainedModel,BertForMaskedLM:()=>v.BertForMaskedLM,BertForQuestionAnswering:()=>v.BertForQuestionAnswering,BertForSequenceClassification:()=>v.BertForSequenceClassification,BertForTokenClassification:()=>v.BertForTokenClassification,BertModel:()=>v.BertModel,BertPreTrainedModel:()=>v.BertPreTrainedModel,BertTokenizer:()=>dr.BertTokenizer,BitImageProcessor:()=>ir.BitImageProcessor,BlenderbotForConditionalGeneration:()=>v.BlenderbotForConditionalGeneration,BlenderbotModel:()=>v.BlenderbotModel,BlenderbotPreTrainedModel:()=>v.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>v.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>v.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>v.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>dr.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>dr.BlenderbotTokenizer,BloomForCausalLM:()=>v.BloomForCausalLM,BloomModel:()=>v.BloomModel,BloomPreTrainedModel:()=>v.BloomPreTrainedModel,BloomTokenizer:()=>dr.BloomTokenizer,CLIPFeatureExtractor:()=>ir.CLIPFeatureExtractor,CLIPImageProcessor:()=>ir.CLIPImageProcessor,CLIPModel:()=>v.CLIPModel,CLIPPreTrainedModel:()=>v.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>v.CLIPSegForImageSegmentation,CLIPSegModel:()=>v.CLIPSegModel,CLIPSegPreTrainedModel:()=>v.CLIPSegPreTrainedModel,CLIPTextModel:()=>v.CLIPTextModel,CLIPTextModelWithProjection:()=>v.CLIPTextModelWithProjection,CLIPTokenizer:()=>dr.CLIPTokenizer,CLIPVisionModel:()=>v.CLIPVisionModel,CLIPVisionModelWithProjection:()=>v.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>v.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>v.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>v.CamembertForSequenceClassification,CamembertForTokenClassification:()=>v.CamembertForTokenClassification,CamembertModel:()=>v.CamembertModel,CamembertPreTrainedModel:()=>v.CamembertPreTrainedModel,CamembertTokenizer:()=>dr.CamembertTokenizer,CausalLMOutput:()=>v.CausalLMOutput,CausalLMOutputWithPast:()=>v.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>ir.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>v.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>v.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>v.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>ir.ClapFeatureExtractor,ClapModel:()=>v.ClapModel,ClapPreTrainedModel:()=>v.ClapPreTrainedModel,ClapTextModelWithProjection:()=>v.ClapTextModelWithProjection,CodeGenForCausalLM:()=>v.CodeGenForCausalLM,CodeGenModel:()=>v.CodeGenModel,CodeGenPreTrainedModel:()=>v.CodeGenPreTrainedModel,CodeGenTokenizer:()=>dr.CodeGenTokenizer,CodeLlamaTokenizer:()=>dr.CodeLlamaTokenizer,CohereForCausalLM:()=>v.CohereForCausalLM,CohereModel:()=>v.CohereModel,CoherePreTrainedModel:()=>v.CoherePreTrainedModel,CohereTokenizer:()=>dr.CohereTokenizer,ConvBertForMaskedLM:()=>v.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>v.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>v.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>v.ConvBertForTokenClassification,ConvBertModel:()=>v.ConvBertModel,ConvBertPreTrainedModel:()=>v.ConvBertPreTrainedModel,ConvBertTokenizer:()=>dr.ConvBertTokenizer,ConvNextFeatureExtractor:()=>ir.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>v.ConvNextForImageClassification,ConvNextImageProcessor:()=>ir.ConvNextImageProcessor,ConvNextModel:()=>v.ConvNextModel,ConvNextPreTrainedModel:()=>v.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>v.ConvNextV2ForImageClassification,ConvNextV2Model:()=>v.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>v.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>ir.DPTFeatureExtractor,DPTForDepthEstimation:()=>v.DPTForDepthEstimation,DPTImageProcessor:()=>ir.DPTImageProcessor,DPTModel:()=>v.DPTModel,DPTPreTrainedModel:()=>v.DPTPreTrainedModel,DebertaForMaskedLM:()=>v.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>v.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>v.DebertaForSequenceClassification,DebertaForTokenClassification:()=>v.DebertaForTokenClassification,DebertaModel:()=>v.DebertaModel,DebertaPreTrainedModel:()=>v.DebertaPreTrainedModel,DebertaTokenizer:()=>dr.DebertaTokenizer,DebertaV2ForMaskedLM:()=>v.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>v.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>v.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>v.DebertaV2ForTokenClassification,DebertaV2Model:()=>v.DebertaV2Model,DebertaV2PreTrainedModel:()=>v.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>dr.DebertaV2Tokenizer,DecisionTransformerModel:()=>v.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>v.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>ir.DeiTFeatureExtractor,DeiTForImageClassification:()=>v.DeiTForImageClassification,DeiTModel:()=>v.DeiTModel,DeiTPreTrainedModel:()=>v.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>v.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>v.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>Hr.DepthEstimationPipeline,DepthProForDepthEstimation:()=>v.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>v.DepthProPreTrainedModel,DetrFeatureExtractor:()=>ir.DetrFeatureExtractor,DetrForObjectDetection:()=>v.DetrForObjectDetection,DetrForSegmentation:()=>v.DetrForSegmentation,DetrModel:()=>v.DetrModel,DetrObjectDetectionOutput:()=>v.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>v.DetrPreTrainedModel,DetrSegmentationOutput:()=>v.DetrSegmentationOutput,Dinov2ForImageClassification:()=>v.Dinov2ForImageClassification,Dinov2Model:()=>v.Dinov2Model,Dinov2PreTrainedModel:()=>v.Dinov2PreTrainedModel,DistilBertForMaskedLM:()=>v.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>v.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>v.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>v.DistilBertForTokenClassification,DistilBertModel:()=>v.DistilBertModel,DistilBertPreTrainedModel:()=>v.DistilBertPreTrainedModel,DistilBertTokenizer:()=>dr.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>Hr.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>ir.DonutFeatureExtractor,DonutImageProcessor:()=>ir.DonutImageProcessor,DonutSwinModel:()=>v.DonutSwinModel,DonutSwinPreTrainedModel:()=>v.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>v.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>ir.EfficientNetImageProcessor,EfficientNetModel:()=>v.EfficientNetModel,EfficientNetPreTrainedModel:()=>v.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>v.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>v.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>v.ElectraForSequenceClassification,ElectraForTokenClassification:()=>v.ElectraForTokenClassification,ElectraModel:()=>v.ElectraModel,ElectraPreTrainedModel:()=>v.ElectraPreTrainedModel,ElectraTokenizer:()=>dr.ElectraTokenizer,EosTokenCriteria:()=>fd.EosTokenCriteria,EsmForMaskedLM:()=>v.EsmForMaskedLM,EsmForSequenceClassification:()=>v.EsmForSequenceClassification,EsmForTokenClassification:()=>v.EsmForTokenClassification,EsmModel:()=>v.EsmModel,EsmPreTrainedModel:()=>v.EsmPreTrainedModel,EsmTokenizer:()=>dr.EsmTokenizer,FFT:()=>In.FFT,FalconForCausalLM:()=>v.FalconForCausalLM,FalconModel:()=>v.FalconModel,FalconPreTrainedModel:()=>v.FalconPreTrainedModel,FalconTokenizer:()=>dr.FalconTokenizer,FastViTForImageClassification:()=>v.FastViTForImageClassification,FastViTModel:()=>v.FastViTModel,FastViTPreTrainedModel:()=>v.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>Hr.FeatureExtractionPipeline,FeatureExtractor:()=>ir.FeatureExtractor,FillMaskPipeline:()=>Hr.FillMaskPipeline,Florence2ForConditionalGeneration:()=>v.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>v.Florence2PreTrainedModel,Florence2Processor:()=>ir.Florence2Processor,GLPNFeatureExtractor:()=>ir.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>v.GLPNForDepthEstimation,GLPNModel:()=>v.GLPNModel,GLPNPreTrainedModel:()=>v.GLPNPreTrainedModel,GPT2LMHeadModel:()=>v.GPT2LMHeadModel,GPT2Model:()=>v.GPT2Model,GPT2PreTrainedModel:()=>v.GPT2PreTrainedModel,GPT2Tokenizer:()=>dr.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>v.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>v.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>v.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>v.GPTJForCausalLM,GPTJModel:()=>v.GPTJModel,GPTJPreTrainedModel:()=>v.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>v.GPTNeoForCausalLM,GPTNeoModel:()=>v.GPTNeoModel,GPTNeoPreTrainedModel:()=>v.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>v.GPTNeoXForCausalLM,GPTNeoXModel:()=>v.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>v.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>dr.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>v.Gemma2ForCausalLM,Gemma2Model:()=>v.Gemma2Model,Gemma2PreTrainedModel:()=>v.Gemma2PreTrainedModel,GemmaForCausalLM:()=>v.GemmaForCausalLM,GemmaModel:()=>v.GemmaModel,GemmaPreTrainedModel:()=>v.GemmaPreTrainedModel,GemmaTokenizer:()=>dr.GemmaTokenizer,GraniteForCausalLM:()=>v.GraniteForCausalLM,GraniteModel:()=>v.GraniteModel,GranitePreTrainedModel:()=>v.GranitePreTrainedModel,Grok1Tokenizer:()=>dr.Grok1Tokenizer,GroupViTModel:()=>v.GroupViTModel,GroupViTPreTrainedModel:()=>v.GroupViTPreTrainedModel,HerbertTokenizer:()=>dr.HerbertTokenizer,HieraForImageClassification:()=>v.HieraForImageClassification,HieraModel:()=>v.HieraModel,HieraPreTrainedModel:()=>v.HieraPreTrainedModel,HubertForCTC:()=>v.HubertForCTC,HubertForSequenceClassification:()=>v.HubertForSequenceClassification,HubertModel:()=>v.HubertModel,HubertPreTrainedModel:()=>v.HubertPreTrainedModel,ImageClassificationPipeline:()=>Hr.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>Hr.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>ir.ImageFeatureExtractor,ImageMattingOutput:()=>v.ImageMattingOutput,ImageSegmentationPipeline:()=>Hr.ImageSegmentationPipeline,ImageToImagePipeline:()=>Hr.ImageToImagePipeline,ImageToTextPipeline:()=>Hr.ImageToTextPipeline,InterruptableStoppingCriteria:()=>fd.InterruptableStoppingCriteria,JAISLMHeadModel:()=>v.JAISLMHeadModel,JAISModel:()=>v.JAISModel,JAISPreTrainedModel:()=>v.JAISPreTrainedModel,LlamaForCausalLM:()=>v.LlamaForCausalLM,LlamaModel:()=>v.LlamaModel,LlamaPreTrainedModel:()=>v.LlamaPreTrainedModel,LlamaTokenizer:()=>dr.LlamaTokenizer,LlavaForConditionalGeneration:()=>v.LlavaForConditionalGeneration,LlavaPreTrainedModel:()=>v.LlavaPreTrainedModel,LongT5ForConditionalGeneration:()=>v.LongT5ForConditionalGeneration,LongT5Model:()=>v.LongT5Model,LongT5PreTrainedModel:()=>v.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>v.M2M100ForConditionalGeneration,M2M100Model:()=>v.M2M100Model,M2M100PreTrainedModel:()=>v.M2M100PreTrainedModel,M2M100Tokenizer:()=>dr.M2M100Tokenizer,MBart50Tokenizer:()=>dr.MBart50Tokenizer,MBartForCausalLM:()=>v.MBartForCausalLM,MBartForConditionalGeneration:()=>v.MBartForConditionalGeneration,MBartForSequenceClassification:()=>v.MBartForSequenceClassification,MBartModel:()=>v.MBartModel,MBartPreTrainedModel:()=>v.MBartPreTrainedModel,MBartTokenizer:()=>dr.MBartTokenizer,MPNetForMaskedLM:()=>v.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>v.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>v.MPNetForSequenceClassification,MPNetForTokenClassification:()=>v.MPNetForTokenClassification,MPNetModel:()=>v.MPNetModel,MPNetPreTrainedModel:()=>v.MPNetPreTrainedModel,MPNetTokenizer:()=>dr.MPNetTokenizer,MT5ForConditionalGeneration:()=>v.MT5ForConditionalGeneration,MT5Model:()=>v.MT5Model,MT5PreTrainedModel:()=>v.MT5PreTrainedModel,MarianMTModel:()=>v.MarianMTModel,MarianModel:()=>v.MarianModel,MarianPreTrainedModel:()=>v.MarianPreTrainedModel,MarianTokenizer:()=>dr.MarianTokenizer,MaskFormerFeatureExtractor:()=>ir.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>v.MaskFormerForInstanceSegmentation,MaskFormerModel:()=>v.MaskFormerModel,MaskFormerPreTrainedModel:()=>v.MaskFormerPreTrainedModel,MaskedLMOutput:()=>v.MaskedLMOutput,MaxLengthCriteria:()=>fd.MaxLengthCriteria,MistralForCausalLM:()=>v.MistralForCausalLM,MistralModel:()=>v.MistralModel,MistralPreTrainedModel:()=>v.MistralPreTrainedModel,MobileBertForMaskedLM:()=>v.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>v.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>v.MobileBertForSequenceClassification,MobileBertModel:()=>v.MobileBertModel,MobileBertPreTrainedModel:()=>v.MobileBertPreTrainedModel,MobileBertTokenizer:()=>dr.MobileBertTokenizer,MobileLLMForCausalLM:()=>v.MobileLLMForCausalLM,MobileLLMModel:()=>v.MobileLLMModel,MobileLLMPreTrainedModel:()=>v.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>ir.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>v.MobileNetV1ForImageClassification,MobileNetV1Model:()=>v.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>v.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>ir.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>v.MobileNetV2ForImageClassification,MobileNetV2Model:()=>v.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>v.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>ir.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>v.MobileNetV3ForImageClassification,MobileNetV3Model:()=>v.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>v.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>ir.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>v.MobileNetV4ForImageClassification,MobileNetV4Model:()=>v.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>v.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>ir.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>v.MobileViTForImageClassification,MobileViTImageProcessor:()=>ir.MobileViTImageProcessor,MobileViTModel:()=>v.MobileViTModel,MobileViTPreTrainedModel:()=>v.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>v.MobileViTV2ForImageClassification,MobileViTV2Model:()=>v.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>v.MobileViTV2PreTrainedModel,ModelOutput:()=>v.ModelOutput,Moondream1ForConditionalGeneration:()=>v.Moondream1ForConditionalGeneration,MptForCausalLM:()=>v.MptForCausalLM,MptModel:()=>v.MptModel,MptPreTrainedModel:()=>v.MptPreTrainedModel,MusicgenForCausalLM:()=>v.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>v.MusicgenForConditionalGeneration,MusicgenModel:()=>v.MusicgenModel,MusicgenPreTrainedModel:()=>v.MusicgenPreTrainedModel,NllbTokenizer:()=>dr.NllbTokenizer,NomicBertModel:()=>v.NomicBertModel,NomicBertPreTrainedModel:()=>v.NomicBertPreTrainedModel,NougatImageProcessor:()=>ir.NougatImageProcessor,NougatTokenizer:()=>dr.NougatTokenizer,OPTForCausalLM:()=>v.OPTForCausalLM,OPTModel:()=>v.OPTModel,OPTPreTrainedModel:()=>v.OPTPreTrainedModel,ObjectDetectionPipeline:()=>Hr.ObjectDetectionPipeline,OlmoForCausalLM:()=>v.OlmoForCausalLM,OlmoModel:()=>v.OlmoModel,OlmoPreTrainedModel:()=>v.OlmoPreTrainedModel,OpenELMForCausalLM:()=>v.OpenELMForCausalLM,OpenELMModel:()=>v.OpenELMModel,OpenELMPreTrainedModel:()=>v.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>ir.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>v.OwlViTForObjectDetection,OwlViTModel:()=>v.OwlViTModel,OwlViTPreTrainedModel:()=>v.OwlViTPreTrainedModel,OwlViTProcessor:()=>ir.OwlViTProcessor,Owlv2ForObjectDetection:()=>v.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>ir.Owlv2ImageProcessor,Owlv2Model:()=>v.Owlv2Model,Owlv2PreTrainedModel:()=>v.Owlv2PreTrainedModel,Phi3ForCausalLM:()=>v.Phi3ForCausalLM,Phi3Model:()=>v.Phi3Model,Phi3PreTrainedModel:()=>v.Phi3PreTrainedModel,PhiForCausalLM:()=>v.PhiForCausalLM,PhiModel:()=>v.PhiModel,PhiPreTrainedModel:()=>v.PhiPreTrainedModel,Pipeline:()=>Hr.Pipeline,PreTrainedModel:()=>v.PreTrainedModel,PreTrainedTokenizer:()=>dr.PreTrainedTokenizer,PretrainedConfig:()=>$p.PretrainedConfig,PretrainedMixin:()=>v.PretrainedMixin,Processor:()=>ir.Processor,PvtForImageClassification:()=>v.PvtForImageClassification,PvtImageProcessor:()=>ir.PvtImageProcessor,PvtModel:()=>v.PvtModel,PvtPreTrainedModel:()=>v.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>ir.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>v.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>v.PyAnnoteModel,PyAnnotePreTrainedModel:()=>v.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>ir.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>v.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>Hr.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>v.Qwen2ForCausalLM,Qwen2Model:()=>v.Qwen2Model,Qwen2PreTrainedModel:()=>v.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>dr.Qwen2Tokenizer,RTDetrForObjectDetection:()=>v.RTDetrForObjectDetection,RTDetrImageProcessor:()=>ir.RTDetrImageProcessor,RTDetrModel:()=>v.RTDetrModel,RTDetrObjectDetectionOutput:()=>v.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>v.RTDetrPreTrainedModel,RawImage:()=>H_.RawImage,ResNetForImageClassification:()=>v.ResNetForImageClassification,ResNetModel:()=>v.ResNetModel,ResNetPreTrainedModel:()=>v.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>v.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>v.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>v.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>v.RoFormerForTokenClassification,RoFormerModel:()=>v.RoFormerModel,RoFormerPreTrainedModel:()=>v.RoFormerPreTrainedModel,RoFormerTokenizer:()=>dr.RoFormerTokenizer,RobertaForMaskedLM:()=>v.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>v.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>v.RobertaForSequenceClassification,RobertaForTokenClassification:()=>v.RobertaForTokenClassification,RobertaModel:()=>v.RobertaModel,RobertaPreTrainedModel:()=>v.RobertaPreTrainedModel,RobertaTokenizer:()=>dr.RobertaTokenizer,SamImageProcessor:()=>ir.SamImageProcessor,SamImageSegmentationOutput:()=>v.SamImageSegmentationOutput,SamModel:()=>v.SamModel,SamPreTrainedModel:()=>v.SamPreTrainedModel,SamProcessor:()=>ir.SamProcessor,SapiensFeatureExtractor:()=>ir.SapiensFeatureExtractor,SapiensForDepthEstimation:()=>v.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>v.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>v.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>v.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>ir.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>ir.SegformerFeatureExtractor,SegformerForImageClassification:()=>v.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>v.SegformerForSemanticSegmentation,SegformerModel:()=>v.SegformerModel,SegformerPreTrainedModel:()=>v.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>v.Seq2SeqLMOutput,SequenceClassifierOutput:()=>v.SequenceClassifierOutput,SiglipImageProcessor:()=>ir.SiglipImageProcessor,SiglipModel:()=>v.SiglipModel,SiglipPreTrainedModel:()=>v.SiglipPreTrainedModel,SiglipTextModel:()=>v.SiglipTextModel,SiglipTokenizer:()=>dr.SiglipTokenizer,SiglipVisionModel:()=>v.SiglipVisionModel,SpeechT5FeatureExtractor:()=>ir.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>v.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>v.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>v.SpeechT5HifiGan,SpeechT5Model:()=>v.SpeechT5Model,SpeechT5PreTrainedModel:()=>v.SpeechT5PreTrainedModel,SpeechT5Processor:()=>ir.SpeechT5Processor,SpeechT5Tokenizer:()=>dr.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>v.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>v.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>v.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>v.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>v.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>dr.SqueezeBertTokenizer,StableLmForCausalLM:()=>v.StableLmForCausalLM,StableLmModel:()=>v.StableLmModel,StableLmPreTrainedModel:()=>v.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>v.Starcoder2ForCausalLM,Starcoder2Model:()=>v.Starcoder2Model,Starcoder2PreTrainedModel:()=>v.Starcoder2PreTrainedModel,StoppingCriteria:()=>fd.StoppingCriteria,StoppingCriteriaList:()=>fd.StoppingCriteriaList,SummarizationPipeline:()=>Hr.SummarizationPipeline,Swin2SRForImageSuperResolution:()=>v.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>ir.Swin2SRImageProcessor,Swin2SRModel:()=>v.Swin2SRModel,Swin2SRPreTrainedModel:()=>v.Swin2SRPreTrainedModel,SwinForImageClassification:()=>v.SwinForImageClassification,SwinModel:()=>v.SwinModel,SwinPreTrainedModel:()=>v.SwinPreTrainedModel,T5ForConditionalGeneration:()=>v.T5ForConditionalGeneration,T5Model:()=>v.T5Model,T5PreTrainedModel:()=>v.T5PreTrainedModel,T5Tokenizer:()=>dr.T5Tokenizer,TableTransformerForObjectDetection:()=>v.TableTransformerForObjectDetection,TableTransformerModel:()=>v.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>v.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>v.TableTransformerPreTrainedModel,Tensor:()=>dn.Tensor,Text2TextGenerationPipeline:()=>Hr.Text2TextGenerationPipeline,TextClassificationPipeline:()=>Hr.TextClassificationPipeline,TextGenerationPipeline:()=>Hr.TextGenerationPipeline,TextStreamer:()=>Sp.TextStreamer,TextToAudioPipeline:()=>Hr.TextToAudioPipeline,TokenClassificationPipeline:()=>Hr.TokenClassificationPipeline,TokenClassifierOutput:()=>v.TokenClassifierOutput,TokenizerModel:()=>dr.TokenizerModel,TrOCRForCausalLM:()=>v.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>v.TrOCRPreTrainedModel,TranslationPipeline:()=>Hr.TranslationPipeline,UniSpeechForCTC:()=>v.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>v.UniSpeechForSequenceClassification,UniSpeechModel:()=>v.UniSpeechModel,UniSpeechPreTrainedModel:()=>v.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>v.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>v.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>v.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>v.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>v.UniSpeechSatPreTrainedModel,ViTFeatureExtractor:()=>ir.ViTFeatureExtractor,ViTForImageClassification:()=>v.ViTForImageClassification,ViTImageProcessor:()=>ir.ViTImageProcessor,ViTMAEModel:()=>v.ViTMAEModel,ViTMAEPreTrainedModel:()=>v.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>v.ViTMSNForImageClassification,ViTMSNModel:()=>v.ViTMSNModel,ViTMSNPreTrainedModel:()=>v.ViTMSNPreTrainedModel,ViTModel:()=>v.ViTModel,ViTPreTrainedModel:()=>v.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>v.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>v.VitMatteForImageMatting,VitMatteImageProcessor:()=>ir.VitMatteImageProcessor,VitMattePreTrainedModel:()=>v.VitMattePreTrainedModel,VitsModel:()=>v.VitsModel,VitsModelOutput:()=>v.VitsModelOutput,VitsPreTrainedModel:()=>v.VitsPreTrainedModel,VitsTokenizer:()=>dr.VitsTokenizer,Wav2Vec2BertForCTC:()=>v.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>v.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>v.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>v.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>dr.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>ir.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>v.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>v.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>v.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>v.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>v.Wav2Vec2PreTrainedModel,Wav2Vec2ProcessorWithLM:()=>ir.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>v.WavLMForAudioFrameClassification,WavLMForCTC:()=>v.WavLMForCTC,WavLMForSequenceClassification:()=>v.WavLMForSequenceClassification,WavLMForXVector:()=>v.WavLMForXVector,WavLMModel:()=>v.WavLMModel,WavLMPreTrainedModel:()=>v.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>ir.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>v.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>v.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>ir.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>v.WhisperForConditionalGeneration,WhisperModel:()=>v.WhisperModel,WhisperPreTrainedModel:()=>v.WhisperPreTrainedModel,WhisperProcessor:()=>ir.WhisperProcessor,WhisperTextStreamer:()=>Sp.WhisperTextStreamer,WhisperTokenizer:()=>dr.WhisperTokenizer,XLMForQuestionAnswering:()=>v.XLMForQuestionAnswering,XLMForSequenceClassification:()=>v.XLMForSequenceClassification,XLMForTokenClassification:()=>v.XLMForTokenClassification,XLMModel:()=>v.XLMModel,XLMPreTrainedModel:()=>v.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>v.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>v.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>v.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>v.XLMRobertaForTokenClassification,XLMRobertaModel:()=>v.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>v.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>dr.XLMRobertaTokenizer,XLMTokenizer:()=>dr.XLMTokenizer,XLMWithLMHeadModel:()=>v.XLMWithLMHeadModel,XVectorOutput:()=>v.XVectorOutput,YolosFeatureExtractor:()=>ir.YolosFeatureExtractor,YolosForObjectDetection:()=>v.YolosForObjectDetection,YolosModel:()=>v.YolosModel,YolosObjectDetectionOutput:()=>v.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>v.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>Hr.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>Hr.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>Hr.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>Hr.ZeroShotObjectDetectionPipeline,bankers_round:()=>In.bankers_round,cat:()=>dn.cat,cos_sim:()=>In.cos_sim,dot:()=>In.dot,dynamic_time_warping:()=>In.dynamic_time_warping,env:()=>q_.env,full:()=>dn.full,full_like:()=>dn.full_like,getKeyValueShapes:()=>$p.getKeyValueShapes,hamming:()=>ia.hamming,hanning:()=>ia.hanning,interpolate:()=>dn.interpolate,interpolate_4d:()=>dn.interpolate_4d,interpolate_data:()=>In.interpolate_data,is_chinese_char:()=>dr.is_chinese_char,layer_norm:()=>dn.layer_norm,log_softmax:()=>In.log_softmax,magnitude:()=>In.magnitude,matmul:()=>dn.matmul,max:()=>In.max,mean:()=>dn.mean,mean_pooling:()=>dn.mean_pooling,medianFilter:()=>In.medianFilter,mel_filter_bank:()=>ia.mel_filter_bank,min:()=>In.min,ones:()=>dn.ones,ones_like:()=>dn.ones_like,permute:()=>dn.permute,permute_data:()=>In.permute_data,pipeline:()=>Hr.pipeline,quantize_embeddings:()=>dn.quantize_embeddings,read_audio:()=>ia.read_audio,rfft:()=>dn.rfft,round:()=>In.round,softmax:()=>In.softmax,spectrogram:()=>ia.spectrogram,stack:()=>dn.stack,std_mean:()=>dn.std_mean,topk:()=>dn.topk,window_function:()=>ia.window_function,zeros:()=>dn.zeros,zeros_like:()=>dn.zeros_like});var q_=Kr("./src/env.js"),Hr=Kr("./src/pipelines.js"),v=Kr("./src/models.js"),dr=Kr("./src/tokenizers.js"),ir=Kr("./src/processors.js"),$p=Kr("./src/configs.js"),ia=Kr("./src/utils/audio.js"),H_=Kr("./src/utils/image.js"),dn=Kr("./src/utils/tensor.js"),In=Kr("./src/utils/maths.js"),Sp=Kr("./src/generation/streamers.js"),fd=Kr("./src/generation/stopping_criteria.js");p.ASTFeatureExtractor;p.ASTForAudioClassification;p.ASTModel;p.ASTPreTrainedModel;p.AlbertForMaskedLM;p.AlbertForQuestionAnswering;p.AlbertForSequenceClassification;p.AlbertModel;p.AlbertPreTrainedModel;p.AlbertTokenizer;p.AudioClassificationPipeline;p.AutoConfig;p.AutoModel;p.AutoModelForAudioClassification;p.AutoModelForAudioFrameClassification;p.AutoModelForCTC;p.AutoModelForCausalLM;p.AutoModelForDepthEstimation;p.AutoModelForDocumentQuestionAnswering;p.AutoModelForImageClassification;p.AutoModelForImageFeatureExtraction;p.AutoModelForImageMatting;p.AutoModelForImageSegmentation;p.AutoModelForImageToImage;p.AutoModelForMaskGeneration;p.AutoModelForMaskedLM;p.AutoModelForNormalEstimation;p.AutoModelForObjectDetection;p.AutoModelForQuestionAnswering;p.AutoModelForSemanticSegmentation;p.AutoModelForSeq2SeqLM;p.AutoModelForSequenceClassification;p.AutoModelForSpeechSeq2Seq;p.AutoModelForTextToSpectrogram;p.AutoModelForTextToWaveform;p.AutoModelForTokenClassification;p.AutoModelForUniversalSegmentation;p.AutoModelForVision2Seq;p.AutoModelForXVector;p.AutoModelForZeroShotObjectDetection;p.AutoProcessor;p.AutoTokenizer;p.AutomaticSpeechRecognitionPipeline;p.BartForConditionalGeneration;p.BartForSequenceClassification;p.BartModel;p.BartPretrainedModel;p.BartTokenizer;p.BaseModelOutput;p.BaseStreamer;p.BeitFeatureExtractor;p.BeitForImageClassification;p.BeitModel;p.BeitPreTrainedModel;p.BertForMaskedLM;p.BertForQuestionAnswering;p.BertForSequenceClassification;p.BertForTokenClassification;p.BertModel;p.BertPreTrainedModel;p.BertTokenizer;p.BitImageProcessor;p.BlenderbotForConditionalGeneration;p.BlenderbotModel;p.BlenderbotPreTrainedModel;p.BlenderbotSmallForConditionalGeneration;p.BlenderbotSmallModel;p.BlenderbotSmallPreTrainedModel;p.BlenderbotSmallTokenizer;p.BlenderbotTokenizer;p.BloomForCausalLM;p.BloomModel;p.BloomPreTrainedModel;p.BloomTokenizer;p.CLIPFeatureExtractor;p.CLIPImageProcessor;p.CLIPModel;p.CLIPPreTrainedModel;p.CLIPSegForImageSegmentation;p.CLIPSegModel;p.CLIPSegPreTrainedModel;p.CLIPTextModel;p.CLIPTextModelWithProjection;p.CLIPTokenizer;p.CLIPVisionModel;p.CLIPVisionModelWithProjection;p.CamembertForMaskedLM;p.CamembertForQuestionAnswering;p.CamembertForSequenceClassification;p.CamembertForTokenClassification;p.CamembertModel;p.CamembertPreTrainedModel;p.CamembertTokenizer;p.CausalLMOutput;p.CausalLMOutputWithPast;p.ChineseCLIPFeatureExtractor;p.ChineseCLIPModel;p.ChineseCLIPPreTrainedModel;p.ClapAudioModelWithProjection;p.ClapFeatureExtractor;p.ClapModel;p.ClapPreTrainedModel;p.ClapTextModelWithProjection;p.CodeGenForCausalLM;p.CodeGenModel;p.CodeGenPreTrainedModel;p.CodeGenTokenizer;p.CodeLlamaTokenizer;p.CohereForCausalLM;p.CohereModel;p.CoherePreTrainedModel;p.CohereTokenizer;p.ConvBertForMaskedLM;p.ConvBertForQuestionAnswering;p.ConvBertForSequenceClassification;p.ConvBertForTokenClassification;p.ConvBertModel;p.ConvBertPreTrainedModel;p.ConvBertTokenizer;p.ConvNextFeatureExtractor;p.ConvNextForImageClassification;p.ConvNextImageProcessor;p.ConvNextModel;p.ConvNextPreTrainedModel;p.ConvNextV2ForImageClassification;p.ConvNextV2Model;p.ConvNextV2PreTrainedModel;p.DPTFeatureExtractor;p.DPTForDepthEstimation;p.DPTImageProcessor;p.DPTModel;p.DPTPreTrainedModel;p.DebertaForMaskedLM;p.DebertaForQuestionAnswering;p.DebertaForSequenceClassification;p.DebertaForTokenClassification;p.DebertaModel;p.DebertaPreTrainedModel;p.DebertaTokenizer;p.DebertaV2ForMaskedLM;p.DebertaV2ForQuestionAnswering;p.DebertaV2ForSequenceClassification;p.DebertaV2ForTokenClassification;p.DebertaV2Model;p.DebertaV2PreTrainedModel;p.DebertaV2Tokenizer;p.DecisionTransformerModel;p.DecisionTransformerPreTrainedModel;p.DeiTFeatureExtractor;p.DeiTForImageClassification;p.DeiTModel;p.DeiTPreTrainedModel;p.DepthAnythingForDepthEstimation;p.DepthAnythingPreTrainedModel;p.DepthEstimationPipeline;p.DepthProForDepthEstimation;p.DepthProPreTrainedModel;p.DetrFeatureExtractor;p.DetrForObjectDetection;p.DetrForSegmentation;p.DetrModel;p.DetrObjectDetectionOutput;p.DetrPreTrainedModel;p.DetrSegmentationOutput;p.Dinov2ForImageClassification;p.Dinov2Model;p.Dinov2PreTrainedModel;p.DistilBertForMaskedLM;p.DistilBertForQuestionAnswering;p.DistilBertForSequenceClassification;p.DistilBertForTokenClassification;p.DistilBertModel;p.DistilBertPreTrainedModel;p.DistilBertTokenizer;p.DocumentQuestionAnsweringPipeline;p.DonutFeatureExtractor;p.DonutImageProcessor;p.DonutSwinModel;p.DonutSwinPreTrainedModel;p.EfficientNetForImageClassification;p.EfficientNetImageProcessor;p.EfficientNetModel;p.EfficientNetPreTrainedModel;p.ElectraForMaskedLM;p.ElectraForQuestionAnswering;p.ElectraForSequenceClassification;p.ElectraForTokenClassification;p.ElectraModel;p.ElectraPreTrainedModel;p.ElectraTokenizer;p.EosTokenCriteria;p.EsmForMaskedLM;p.EsmForSequenceClassification;p.EsmForTokenClassification;p.EsmModel;p.EsmPreTrainedModel;p.EsmTokenizer;p.FFT;p.FalconForCausalLM;p.FalconModel;p.FalconPreTrainedModel;p.FalconTokenizer;p.FastViTForImageClassification;p.FastViTModel;p.FastViTPreTrainedModel;p.FeatureExtractionPipeline;p.FeatureExtractor;p.FillMaskPipeline;p.Florence2ForConditionalGeneration;p.Florence2PreTrainedModel;p.Florence2Processor;p.GLPNFeatureExtractor;p.GLPNForDepthEstimation;p.GLPNModel;p.GLPNPreTrainedModel;p.GPT2LMHeadModel;p.GPT2Model;p.GPT2PreTrainedModel;p.GPT2Tokenizer;p.GPTBigCodeForCausalLM;p.GPTBigCodeModel;p.GPTBigCodePreTrainedModel;p.GPTJForCausalLM;p.GPTJModel;p.GPTJPreTrainedModel;p.GPTNeoForCausalLM;p.GPTNeoModel;p.GPTNeoPreTrainedModel;p.GPTNeoXForCausalLM;p.GPTNeoXModel;p.GPTNeoXPreTrainedModel;p.GPTNeoXTokenizer;p.Gemma2ForCausalLM;p.Gemma2Model;p.Gemma2PreTrainedModel;p.GemmaForCausalLM;p.GemmaModel;p.GemmaPreTrainedModel;p.GemmaTokenizer;p.GraniteForCausalLM;p.GraniteModel;p.GranitePreTrainedModel;p.Grok1Tokenizer;p.GroupViTModel;p.GroupViTPreTrainedModel;p.HerbertTokenizer;p.HieraForImageClassification;p.HieraModel;p.HieraPreTrainedModel;p.HubertForCTC;p.HubertForSequenceClassification;p.HubertModel;p.HubertPreTrainedModel;p.ImageClassificationPipeline;p.ImageFeatureExtractionPipeline;p.ImageFeatureExtractor;p.ImageMattingOutput;p.ImageSegmentationPipeline;p.ImageToImagePipeline;p.ImageToTextPipeline;p.InterruptableStoppingCriteria;p.JAISLMHeadModel;p.JAISModel;p.JAISPreTrainedModel;p.LlamaForCausalLM;p.LlamaModel;p.LlamaPreTrainedModel;p.LlamaTokenizer;p.LlavaForConditionalGeneration;p.LlavaPreTrainedModel;p.LongT5ForConditionalGeneration;p.LongT5Model;p.LongT5PreTrainedModel;p.M2M100ForConditionalGeneration;p.M2M100Model;p.M2M100PreTrainedModel;p.M2M100Tokenizer;p.MBart50Tokenizer;p.MBartForCausalLM;p.MBartForConditionalGeneration;p.MBartForSequenceClassification;p.MBartModel;p.MBartPreTrainedModel;p.MBartTokenizer;p.MPNetForMaskedLM;p.MPNetForQuestionAnswering;p.MPNetForSequenceClassification;p.MPNetForTokenClassification;p.MPNetModel;p.MPNetPreTrainedModel;p.MPNetTokenizer;p.MT5ForConditionalGeneration;p.MT5Model;p.MT5PreTrainedModel;p.MarianMTModel;p.MarianModel;p.MarianPreTrainedModel;p.MarianTokenizer;p.MaskFormerFeatureExtractor;p.MaskFormerForInstanceSegmentation;p.MaskFormerModel;p.MaskFormerPreTrainedModel;p.MaskedLMOutput;p.MaxLengthCriteria;p.MistralForCausalLM;p.MistralModel;p.MistralPreTrainedModel;p.MobileBertForMaskedLM;p.MobileBertForQuestionAnswering;p.MobileBertForSequenceClassification;p.MobileBertModel;p.MobileBertPreTrainedModel;p.MobileBertTokenizer;p.MobileLLMForCausalLM;p.MobileLLMModel;p.MobileLLMPreTrainedModel;p.MobileNetV1FeatureExtractor;p.MobileNetV1ForImageClassification;p.MobileNetV1Model;p.MobileNetV1PreTrainedModel;p.MobileNetV2FeatureExtractor;p.MobileNetV2ForImageClassification;p.MobileNetV2Model;p.MobileNetV2PreTrainedModel;p.MobileNetV3FeatureExtractor;p.MobileNetV3ForImageClassification;p.MobileNetV3Model;p.MobileNetV3PreTrainedModel;p.MobileNetV4FeatureExtractor;p.MobileNetV4ForImageClassification;p.MobileNetV4Model;p.MobileNetV4PreTrainedModel;p.MobileViTFeatureExtractor;p.MobileViTForImageClassification;p.MobileViTImageProcessor;p.MobileViTModel;p.MobileViTPreTrainedModel;p.MobileViTV2ForImageClassification;p.MobileViTV2Model;p.MobileViTV2PreTrainedModel;p.ModelOutput;p.Moondream1ForConditionalGeneration;p.MptForCausalLM;p.MptModel;p.MptPreTrainedModel;p.MusicgenForCausalLM;p.MusicgenForConditionalGeneration;p.MusicgenModel;p.MusicgenPreTrainedModel;p.NllbTokenizer;p.NomicBertModel;p.NomicBertPreTrainedModel;p.NougatImageProcessor;p.NougatTokenizer;p.OPTForCausalLM;p.OPTModel;p.OPTPreTrainedModel;p.ObjectDetectionPipeline;p.OlmoForCausalLM;p.OlmoModel;p.OlmoPreTrainedModel;p.OpenELMForCausalLM;p.OpenELMModel;p.OpenELMPreTrainedModel;p.OwlViTFeatureExtractor;p.OwlViTForObjectDetection;p.OwlViTModel;p.OwlViTPreTrainedModel;p.OwlViTProcessor;p.Owlv2ForObjectDetection;p.Owlv2ImageProcessor;p.Owlv2Model;p.Owlv2PreTrainedModel;p.Phi3ForCausalLM;p.Phi3Model;p.Phi3PreTrainedModel;p.PhiForCausalLM;p.PhiModel;p.PhiPreTrainedModel;p.Pipeline;p.PreTrainedModel;p.PreTrainedTokenizer;p.PretrainedConfig;p.PretrainedMixin;p.Processor;p.PvtForImageClassification;p.PvtImageProcessor;p.PvtModel;p.PvtPreTrainedModel;p.PyAnnoteFeatureExtractor;p.PyAnnoteForAudioFrameClassification;p.PyAnnoteModel;p.PyAnnotePreTrainedModel;p.PyAnnoteProcessor;p.QuestionAnsweringModelOutput;p.QuestionAnsweringPipeline;p.Qwen2ForCausalLM;p.Qwen2Model;p.Qwen2PreTrainedModel;p.Qwen2Tokenizer;p.RTDetrForObjectDetection;p.RTDetrImageProcessor;p.RTDetrModel;p.RTDetrObjectDetectionOutput;p.RTDetrPreTrainedModel;p.RawImage;p.ResNetForImageClassification;p.ResNetModel;p.ResNetPreTrainedModel;p.RoFormerForMaskedLM;p.RoFormerForQuestionAnswering;p.RoFormerForSequenceClassification;p.RoFormerForTokenClassification;p.RoFormerModel;p.RoFormerPreTrainedModel;p.RoFormerTokenizer;p.RobertaForMaskedLM;p.RobertaForQuestionAnswering;p.RobertaForSequenceClassification;p.RobertaForTokenClassification;p.RobertaModel;p.RobertaPreTrainedModel;p.RobertaTokenizer;p.SamImageProcessor;p.SamImageSegmentationOutput;p.SamModel;p.SamPreTrainedModel;p.SamProcessor;p.SapiensFeatureExtractor;p.SapiensForDepthEstimation;p.SapiensForNormalEstimation;p.SapiensForSemanticSegmentation;p.SapiensPreTrainedModel;p.SeamlessM4TFeatureExtractor;p.SegformerFeatureExtractor;p.SegformerForImageClassification;p.SegformerForSemanticSegmentation;p.SegformerModel;p.SegformerPreTrainedModel;p.Seq2SeqLMOutput;p.SequenceClassifierOutput;p.SiglipImageProcessor;p.SiglipModel;p.SiglipPreTrainedModel;p.SiglipTextModel;p.SiglipTokenizer;p.SiglipVisionModel;p.SpeechT5FeatureExtractor;p.SpeechT5ForSpeechToText;p.SpeechT5ForTextToSpeech;p.SpeechT5HifiGan;p.SpeechT5Model;p.SpeechT5PreTrainedModel;p.SpeechT5Processor;p.SpeechT5Tokenizer;p.SqueezeBertForMaskedLM;p.SqueezeBertForQuestionAnswering;p.SqueezeBertForSequenceClassification;p.SqueezeBertModel;p.SqueezeBertPreTrainedModel;p.SqueezeBertTokenizer;p.StableLmForCausalLM;p.StableLmModel;p.StableLmPreTrainedModel;p.Starcoder2ForCausalLM;p.Starcoder2Model;p.Starcoder2PreTrainedModel;p.StoppingCriteria;p.StoppingCriteriaList;p.SummarizationPipeline;p.Swin2SRForImageSuperResolution;p.Swin2SRImageProcessor;p.Swin2SRModel;p.Swin2SRPreTrainedModel;p.SwinForImageClassification;p.SwinModel;p.SwinPreTrainedModel;p.T5ForConditionalGeneration;p.T5Model;p.T5PreTrainedModel;p.T5Tokenizer;p.TableTransformerForObjectDetection;p.TableTransformerModel;p.TableTransformerObjectDetectionOutput;p.TableTransformerPreTrainedModel;p.Tensor;p.Text2TextGenerationPipeline;p.TextClassificationPipeline;p.TextGenerationPipeline;p.TextStreamer;p.TextToAudioPipeline;p.TokenClassificationPipeline;p.TokenClassifierOutput;p.TokenizerModel;p.TrOCRForCausalLM;p.TrOCRPreTrainedModel;p.TranslationPipeline;p.UniSpeechForCTC;p.UniSpeechForSequenceClassification;p.UniSpeechModel;p.UniSpeechPreTrainedModel;p.UniSpeechSatForAudioFrameClassification;p.UniSpeechSatForCTC;p.UniSpeechSatForSequenceClassification;p.UniSpeechSatModel;p.UniSpeechSatPreTrainedModel;p.ViTFeatureExtractor;p.ViTForImageClassification;p.ViTImageProcessor;p.ViTMAEModel;p.ViTMAEPreTrainedModel;p.ViTMSNForImageClassification;p.ViTMSNModel;p.ViTMSNPreTrainedModel;p.ViTModel;p.ViTPreTrainedModel;p.VisionEncoderDecoderModel;p.VitMatteForImageMatting;p.VitMatteImageProcessor;p.VitMattePreTrainedModel;p.VitsModel;p.VitsModelOutput;p.VitsPreTrainedModel;p.VitsTokenizer;p.Wav2Vec2BertForCTC;p.Wav2Vec2BertForSequenceClassification;p.Wav2Vec2BertModel;p.Wav2Vec2BertPreTrainedModel;p.Wav2Vec2CTCTokenizer;p.Wav2Vec2FeatureExtractor;p.Wav2Vec2ForAudioFrameClassification;p.Wav2Vec2ForCTC;p.Wav2Vec2ForSequenceClassification;p.Wav2Vec2Model;p.Wav2Vec2PreTrainedModel;p.Wav2Vec2ProcessorWithLM;p.WavLMForAudioFrameClassification;p.WavLMForCTC;p.WavLMForSequenceClassification;p.WavLMForXVector;p.WavLMModel;p.WavLMPreTrainedModel;p.WeSpeakerFeatureExtractor;p.WeSpeakerResNetModel;p.WeSpeakerResNetPreTrainedModel;p.WhisperFeatureExtractor;p.WhisperForConditionalGeneration;p.WhisperModel;p.WhisperPreTrainedModel;p.WhisperProcessor;p.WhisperTextStreamer;p.WhisperTokenizer;p.XLMForQuestionAnswering;p.XLMForSequenceClassification;p.XLMForTokenClassification;p.XLMModel;p.XLMPreTrainedModel;p.XLMRobertaForMaskedLM;p.XLMRobertaForQuestionAnswering;p.XLMRobertaForSequenceClassification;p.XLMRobertaForTokenClassification;p.XLMRobertaModel;p.XLMRobertaPreTrainedModel;p.XLMRobertaTokenizer;p.XLMTokenizer;p.XLMWithLMHeadModel;p.XVectorOutput;p.YolosFeatureExtractor;p.YolosForObjectDetection;p.YolosModel;p.YolosObjectDetectionOutput;p.YolosPreTrainedModel;p.ZeroShotAudioClassificationPipeline;p.ZeroShotClassificationPipeline;p.ZeroShotImageClassificationPipeline;p.ZeroShotObjectDetectionPipeline;p.bankers_round;p.cat;p.cos_sim;p.dot;p.dynamic_time_warping;p.env;p.full;p.full_like;p.getKeyValueShapes;p.hamming;p.hanning;p.interpolate;p.interpolate_4d;p.interpolate_data;p.is_chinese_char;p.layer_norm;p.log_softmax;p.magnitude;p.matmul;p.max;p.mean;p.mean_pooling;p.medianFilter;p.mel_filter_bank;p.min;p.ones;p.ones_like;p.permute;p.permute_data;var K_=p.pipeline;p.quantize_embeddings;p.read_audio;p.rfft;p.round;p.softmax;p.spectrogram;p.stack;p.std_mean;p.topk;p.window_function;p.zeros;p.zeros_like;const X_=(...Ae)=>{},gd=new Map,tm="_WORKER_INIT_";function wd(Ae,ie,I){!gd.get(Ae)&&Ae!==tm||self.postMessage({messageId:Ae,type:ie,payload:I})}function Q_(Ae){return async ie=>{try{const I=await Ae(ie);wd(ie.messageId,"complete",I)}catch(I){wd(ie.messageId,"error",{error:I instanceof Error?I.message:"An error occurred",error_code:"UNKNOWN_ERROR"})}finally{gd.delete(ie.messageId)}}}function Y_(Ae,ie){self.addEventListener("message",async I=>{gd.set(I.data.messageId,Promise.race([Q_(Ae)(I.data),new Promise(F=>setTimeout(()=>F(!0),12e4)).then(()=>{gd.has(I.data.messageId)&&(wd(I.data.messageId,"error",{error:"Operation timed out",error_code:"TIMEOUT_ERROR"}),gd.delete(I.data.messageId))})])),wd(I.data.messageId,"started","Started processing")})}async function Z_(Ae){wd(tm,"complete","Worker initialized")}let md;async function J_(Ae){switch(Ae.type){case"load":{const[ie,I]=Ae.payload;return(!md||md.model.name!==ie)&&(md=await K_("feature-extraction",ie,I)),!0}case"embedding":{if(!md)throw new Error("Pipe is not ready yet.");X_("Embedding:",Ae.payload);const[ie,I]=Ae.payload;return(await md(ie,I)).tolist()}default:throw new Error("Invalid operation")}}Y_(J_);Z_();
