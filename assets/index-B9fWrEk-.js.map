{"version":3,"file":"index-B9fWrEk-.js","sources":["../../node_modules/path2d/dist/index.js"],"sourcesContent":["// src/parse-path.ts\nvar ARG_LENGTH = {\n  a: 7,\n  c: 6,\n  h: 1,\n  l: 2,\n  m: 2,\n  q: 4,\n  s: 4,\n  t: 2,\n  v: 1,\n  z: 0\n};\nvar SEGMENT_PATTERN = /([astvzqmhlc])([^astvzqmhlc]*)/gi;\nvar NUMBER = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/gi;\nfunction parseValues(args) {\n  const numbers = args.match(NUMBER);\n  return numbers ? numbers.map(Number) : [];\n}\nfunction parsePath(path) {\n  const data = [];\n  const p = String(path).trim();\n  if (p[0] !== \"M\" && p[0] !== \"m\") {\n    return data;\n  }\n  p.replace(SEGMENT_PATTERN, (_, command, args) => {\n    const theArgs = parseValues(args);\n    let type = command.toLowerCase();\n    let theCommand = command;\n    if (type === \"m\" && theArgs.length > 2) {\n      data.push([theCommand, ...theArgs.splice(0, 2)]);\n      type = \"l\";\n      theCommand = theCommand === \"m\" ? \"l\" : \"L\";\n    }\n    if (theArgs.length < ARG_LENGTH[type]) {\n      return \"\";\n    }\n    data.push([theCommand, ...theArgs.splice(0, ARG_LENGTH[type])]);\n    while (theArgs.length >= ARG_LENGTH[type] && theArgs.length && ARG_LENGTH[type]) {\n      data.push([theCommand, ...theArgs.splice(0, ARG_LENGTH[type])]);\n    }\n    return \"\";\n  });\n  return data;\n}\n\n// src/path2d.ts\nfunction rotatePoint(point, angle) {\n  const nx = point.x * Math.cos(angle) - point.y * Math.sin(angle);\n  const ny = point.y * Math.cos(angle) + point.x * Math.sin(angle);\n  point.x = nx;\n  point.y = ny;\n}\nfunction translatePoint(point, dx, dy) {\n  point.x += dx;\n  point.y += dy;\n}\nfunction scalePoint(point, s) {\n  point.x *= s;\n  point.y *= s;\n}\nvar Path2D = class _Path2D {\n  constructor(path) {\n    this.commands = [];\n    if (path && path instanceof _Path2D) {\n      this.commands.push(...path.commands);\n    } else if (path) {\n      this.commands = parsePath(path);\n    }\n  }\n  addPath(path) {\n    if (path && path instanceof _Path2D) {\n      this.commands.push(...path.commands);\n    }\n  }\n  moveTo(x, y) {\n    this.commands.push([\"M\", x, y]);\n  }\n  lineTo(x, y) {\n    this.commands.push([\"L\", x, y]);\n  }\n  arc(x, y, r, start, end, ccw) {\n    this.commands.push([\"AC\", x, y, r, start, end, !!ccw]);\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    this.commands.push([\"AT\", x1, y1, x2, y2, r]);\n  }\n  ellipse(x, y, rx, ry, angle, start, end, ccw) {\n    this.commands.push([\"E\", x, y, rx, ry, angle, start, end, !!ccw]);\n  }\n  closePath() {\n    this.commands.push([\"Z\"]);\n  }\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n    this.commands.push([\"C\", cp1x, cp1y, cp2x, cp2y, x, y]);\n  }\n  quadraticCurveTo(cpx, cpy, x, y) {\n    this.commands.push([\"Q\", cpx, cpy, x, y]);\n  }\n  rect(x, y, width, height) {\n    this.commands.push([\"R\", x, y, width, height]);\n  }\n  roundRect(x, y, width, height, radii) {\n    if (typeof radii === \"undefined\") {\n      this.commands.push([\"RR\", x, y, width, height, 0]);\n    } else {\n      this.commands.push([\"RR\", x, y, width, height, radii]);\n    }\n  }\n};\nfunction buildPath(ctx, commands) {\n  let x = 0;\n  let y = 0;\n  let endAngle;\n  let startAngle;\n  let largeArcFlag;\n  let sweepFlag;\n  let endPoint;\n  let midPoint;\n  let angle;\n  let lambda;\n  let t1;\n  let t2;\n  let x1;\n  let y1;\n  let r;\n  let rx;\n  let ry;\n  let w;\n  let h;\n  let pathType;\n  let centerPoint;\n  let ccw;\n  let radii;\n  let cpx = null;\n  let cpy = null;\n  let qcpx = null;\n  let qcpy = null;\n  let startPoint = null;\n  let currentPoint = null;\n  ctx.beginPath();\n  for (let i = 0; i < commands.length; ++i) {\n    pathType = commands[i][0];\n    if (pathType !== \"S\" && pathType !== \"s\" && pathType !== \"C\" && pathType !== \"c\") {\n      cpx = null;\n      cpy = null;\n    }\n    if (pathType !== \"T\" && pathType !== \"t\" && pathType !== \"Q\" && pathType !== \"q\") {\n      qcpx = null;\n      qcpy = null;\n    }\n    let c;\n    switch (pathType) {\n      case \"m\":\n      case \"M\":\n        c = commands[i];\n        if (pathType === \"m\") {\n          x += c[1];\n          y += c[2];\n        } else {\n          x = c[1];\n          y = c[2];\n        }\n        if (pathType === \"M\" || !startPoint) {\n          startPoint = { x, y };\n        }\n        ctx.moveTo(x, y);\n        break;\n      case \"l\":\n        c = commands[i];\n        x += c[1];\n        y += c[2];\n        ctx.lineTo(x, y);\n        break;\n      case \"L\":\n        c = commands[i];\n        x = c[1];\n        y = c[2];\n        ctx.lineTo(x, y);\n        break;\n      case \"H\":\n        c = commands[i];\n        x = c[1];\n        ctx.lineTo(x, y);\n        break;\n      case \"h\":\n        c = commands[i];\n        x += c[1];\n        ctx.lineTo(x, y);\n        break;\n      case \"V\":\n        c = commands[i];\n        y = c[1];\n        ctx.lineTo(x, y);\n        break;\n      case \"v\":\n        c = commands[i];\n        y += c[1];\n        ctx.lineTo(x, y);\n        break;\n      case \"a\":\n      case \"A\":\n        c = commands[i];\n        if (currentPoint === null) {\n          throw new Error(\"This should never happen\");\n        }\n        if (pathType === \"a\") {\n          x += c[6];\n          y += c[7];\n        } else {\n          x = c[6];\n          y = c[7];\n        }\n        rx = c[1];\n        ry = c[2];\n        angle = c[3] * Math.PI / 180;\n        largeArcFlag = !!c[4];\n        sweepFlag = !!c[5];\n        endPoint = { x, y };\n        midPoint = {\n          x: (currentPoint.x - endPoint.x) / 2,\n          y: (currentPoint.y - endPoint.y) / 2\n        };\n        rotatePoint(midPoint, -angle);\n        lambda = midPoint.x * midPoint.x / (rx * rx) + midPoint.y * midPoint.y / (ry * ry);\n        if (lambda > 1) {\n          lambda = Math.sqrt(lambda);\n          rx *= lambda;\n          ry *= lambda;\n        }\n        centerPoint = {\n          x: rx * midPoint.y / ry,\n          y: -(ry * midPoint.x) / rx\n        };\n        t1 = rx * rx * ry * ry;\n        t2 = rx * rx * midPoint.y * midPoint.y + ry * ry * midPoint.x * midPoint.x;\n        if (sweepFlag !== largeArcFlag) {\n          scalePoint(centerPoint, Math.sqrt((t1 - t2) / t2) || 0);\n        } else {\n          scalePoint(centerPoint, -Math.sqrt((t1 - t2) / t2) || 0);\n        }\n        startAngle = Math.atan2((midPoint.y - centerPoint.y) / ry, (midPoint.x - centerPoint.x) / rx);\n        endAngle = Math.atan2(-(midPoint.y + centerPoint.y) / ry, -(midPoint.x + centerPoint.x) / rx);\n        rotatePoint(centerPoint, angle);\n        translatePoint(centerPoint, (endPoint.x + currentPoint.x) / 2, (endPoint.y + currentPoint.y) / 2);\n        ctx.save();\n        ctx.translate(centerPoint.x, centerPoint.y);\n        ctx.rotate(angle);\n        ctx.scale(rx, ry);\n        ctx.arc(0, 0, 1, startAngle, endAngle, !sweepFlag);\n        ctx.restore();\n        break;\n      case \"C\":\n        c = commands[i];\n        cpx = c[3];\n        cpy = c[4];\n        x = c[5];\n        y = c[6];\n        ctx.bezierCurveTo(c[1], c[2], cpx, cpy, x, y);\n        break;\n      case \"c\":\n        c = commands[i];\n        ctx.bezierCurveTo(c[1] + x, c[2] + y, c[3] + x, c[4] + y, c[5] + x, c[6] + y);\n        cpx = c[3] + x;\n        cpy = c[4] + y;\n        x += c[5];\n        y += c[6];\n        break;\n      case \"S\":\n        c = commands[i];\n        if (cpx === null || cpy === null) {\n          cpx = x;\n          cpy = y;\n        }\n        ctx.bezierCurveTo(2 * x - cpx, 2 * y - cpy, c[1], c[2], c[3], c[4]);\n        cpx = c[1];\n        cpy = c[2];\n        x = c[3];\n        y = c[4];\n        break;\n      case \"s\":\n        c = commands[i];\n        if (cpx === null || cpy === null) {\n          cpx = x;\n          cpy = y;\n        }\n        ctx.bezierCurveTo(2 * x - cpx, 2 * y - cpy, c[1] + x, c[2] + y, c[3] + x, c[4] + y);\n        cpx = c[1] + x;\n        cpy = c[2] + y;\n        x += c[3];\n        y += c[4];\n        break;\n      case \"Q\":\n        c = commands[i];\n        qcpx = c[1];\n        qcpy = c[2];\n        x = c[3];\n        y = c[4];\n        ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n        break;\n      case \"q\":\n        c = commands[i];\n        qcpx = c[1] + x;\n        qcpy = c[2] + y;\n        x += c[3];\n        y += c[4];\n        ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n        break;\n      case \"T\":\n        c = commands[i];\n        if (qcpx === null || qcpy === null) {\n          qcpx = x;\n          qcpy = y;\n        }\n        qcpx = 2 * x - qcpx;\n        qcpy = 2 * y - qcpy;\n        x = c[1];\n        y = c[2];\n        ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n        break;\n      case \"t\":\n        c = commands[i];\n        if (qcpx === null || qcpy === null) {\n          qcpx = x;\n          qcpy = y;\n        }\n        qcpx = 2 * x - qcpx;\n        qcpy = 2 * y - qcpy;\n        x += c[1];\n        y += c[2];\n        ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n        break;\n      case \"z\":\n      case \"Z\":\n        if (startPoint) {\n          x = startPoint.x;\n          y = startPoint.y;\n        }\n        startPoint = null;\n        ctx.closePath();\n        break;\n      case \"AC\":\n        c = commands[i];\n        x = c[1];\n        y = c[2];\n        r = c[3];\n        startAngle = c[4];\n        endAngle = c[5];\n        ccw = c[6];\n        ctx.arc(x, y, r, startAngle, endAngle, ccw);\n        break;\n      case \"AT\":\n        c = commands[i];\n        x1 = c[1];\n        y1 = c[2];\n        x = c[3];\n        y = c[4];\n        r = c[5];\n        ctx.arcTo(x1, y1, x, y, r);\n        break;\n      case \"E\":\n        c = commands[i];\n        x = c[1];\n        y = c[2];\n        rx = c[3];\n        ry = c[4];\n        angle = c[5];\n        startAngle = c[6];\n        endAngle = c[7];\n        ccw = c[8];\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(angle);\n        ctx.scale(rx, ry);\n        ctx.arc(0, 0, 1, startAngle, endAngle, ccw);\n        ctx.restore();\n        break;\n      case \"R\":\n        c = commands[i];\n        x = c[1];\n        y = c[2];\n        w = c[3];\n        h = c[4];\n        startPoint = { x, y };\n        ctx.rect(x, y, w, h);\n        break;\n      case \"RR\":\n        c = commands[i];\n        x = c[1];\n        y = c[2];\n        w = c[3];\n        h = c[4];\n        radii = c[5];\n        startPoint = { x, y };\n        ctx.roundRect(x, y, w, h, radii);\n        break;\n      default:\n        throw new Error(`Invalid path command: ${pathType}`);\n    }\n    if (!currentPoint) {\n      currentPoint = { x, y };\n    } else {\n      currentPoint.x = x;\n      currentPoint.y = y;\n    }\n  }\n}\n\n// src/round-rect.ts\nfunction roundRect(x, y, width, height, radii = 0) {\n  if (typeof radii === \"number\") {\n    radii = [radii];\n  }\n  if (Array.isArray(radii)) {\n    if (radii.length === 0 || radii.length > 4) {\n      throw new RangeError(\n        `Failed to execute 'roundRect' on '${this.constructor.name}': ${radii.length} radii provided. Between one and four radii are necessary.`\n      );\n    }\n    radii.forEach((v) => {\n      if (v < 0) {\n        throw new RangeError(\n          `Failed to execute 'roundRect' on '${this.constructor.name}': Radius value ${v} is negative.`\n        );\n      }\n    });\n  } else {\n    return;\n  }\n  if (radii.length === 1 && radii[0] === 0) {\n    this.rect(x, y, width, height);\n    return;\n  }\n  const minRadius = Math.min(width, height) / 2;\n  const tl = Math.min(minRadius, radii[0]);\n  let tr = tl;\n  let br = tl;\n  let bl = tl;\n  if (radii.length === 2) {\n    tr = Math.min(minRadius, radii[1]);\n    bl = tr;\n  }\n  if (radii.length === 3) {\n    tr = Math.min(minRadius, radii[1]);\n    bl = tr;\n    br = Math.min(minRadius, radii[2]);\n  }\n  if (radii.length === 4) {\n    tr = Math.min(minRadius, radii[1]);\n    br = Math.min(minRadius, radii[2]);\n    bl = Math.min(minRadius, radii[3]);\n  }\n  this.moveTo(x, y + height - bl);\n  this.arcTo(x, y, x + tl, y, tl);\n  this.arcTo(x + width, y, x + width, y + tr, tr);\n  this.arcTo(x + width, y + height, x + width - br, y + height, br);\n  this.arcTo(x, y + height, x, y + height - bl, bl);\n  this.closePath();\n}\n\n// src/apply.ts\nfunction applyPath2DToCanvasRenderingContext(CanvasRenderingContext2D) {\n  if (!CanvasRenderingContext2D) return;\n  const cClip = CanvasRenderingContext2D.prototype.clip;\n  const cFill = CanvasRenderingContext2D.prototype.fill;\n  const cStroke = CanvasRenderingContext2D.prototype.stroke;\n  const cIsPointInPath = CanvasRenderingContext2D.prototype.isPointInPath;\n  CanvasRenderingContext2D.prototype.clip = function clip(...args) {\n    if (args[0] instanceof Path2D) {\n      const path = args[0];\n      const fillRule2 = args[1] || \"nonzero\";\n      buildPath(this, path.commands);\n      return cClip.apply(this, [fillRule2]);\n    }\n    const fillRule = args[0] || \"nonzero\";\n    return cClip.apply(this, [fillRule]);\n  };\n  CanvasRenderingContext2D.prototype.fill = function fill(...args) {\n    if (args[0] instanceof Path2D) {\n      const path = args[0];\n      const fillRule2 = args[1] || \"nonzero\";\n      buildPath(this, path.commands);\n      return cFill.apply(this, [fillRule2]);\n    }\n    const fillRule = args[0] || \"nonzero\";\n    return cFill.apply(this, [fillRule]);\n  };\n  CanvasRenderingContext2D.prototype.stroke = function stroke(path) {\n    if (path) {\n      buildPath(this, path.commands);\n    }\n    cStroke.apply(this);\n  };\n  CanvasRenderingContext2D.prototype.isPointInPath = function isPointInPath(...args) {\n    if (args[0] instanceof Path2D) {\n      const path = args[0];\n      const x = args[1];\n      const y = args[2];\n      const fillRule = args[3] || \"nonzero\";\n      buildPath(this, path.commands);\n      return cIsPointInPath.apply(this, [x, y, fillRule]);\n    }\n    return cIsPointInPath.apply(this, args);\n  };\n}\nfunction applyRoundRectToCanvasRenderingContext2D(CanvasRenderingContext2D) {\n  if (CanvasRenderingContext2D && !CanvasRenderingContext2D.prototype.roundRect) {\n    CanvasRenderingContext2D.prototype.roundRect = roundRect;\n  }\n}\nfunction applyRoundRectToPath2D(P2D) {\n  if (P2D && !P2D.prototype.roundRect) {\n    P2D.prototype.roundRect = roundRect;\n  }\n}\nexport {\n  Path2D,\n  applyPath2DToCanvasRenderingContext,\n  applyRoundRectToCanvasRenderingContext2D,\n  applyRoundRectToPath2D,\n  buildPath,\n  parsePath,\n  roundRect\n};\n"],"names":["ARG_LENGTH","SEGMENT_PATTERN","NUMBER","parseValues","args","numbers","parsePath","path","data","p","_","command","theArgs","type","theCommand","rotatePoint","point","angle","nx","ny","translatePoint","dx","dy","scalePoint","s","Path2D","_Path2D","x","y","r","start","end","ccw","x1","y1","x2","y2","rx","ry","cp1x","cp1y","cp2x","cp2y","cpx","cpy","width","height","radii","buildPath","ctx","commands","endAngle","startAngle","largeArcFlag","sweepFlag","endPoint","midPoint","lambda","t1","t2","h","pathType","centerPoint","qcpx","qcpy","startPoint","currentPoint","i","c","roundRect","v","minRadius","tl","tr","br","bl","applyPath2DToCanvasRenderingContext","CanvasRenderingContext2D","cClip","cFill","cStroke","cIsPointInPath","fillRule2","fillRule","applyRoundRectToCanvasRenderingContext2D","applyRoundRectToPath2D","P2D"],"mappings":"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","x_google_ignoreList":[0]}