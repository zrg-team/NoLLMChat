{"version":3,"file":"index-BqcCmRFK.js","sources":["../../node_modules/@webcontainer/api/dist/internal/constants.js","../../node_modules/@webcontainer/api/dist/internal/tokens.js","../../node_modules/@webcontainer/api/dist/internal/iframe-url.js","../../node_modules/@webcontainer/api/dist/internal/reset-promise.js","../../node_modules/@webcontainer/api/dist/internal/auth-state.js","../../node_modules/@webcontainer/api/dist/preview-message-types.js","../../node_modules/@webcontainer/api/dist/vendor/index.js","../../node_modules/@webcontainer/api/dist/utils/is-preview-message.js","../../node_modules/@webcontainer/api/dist/utils/null-prototype.js","../../node_modules/@webcontainer/api/dist/utils/file-system.js","../../node_modules/@webcontainer/api/dist/index.js","../../src/services/web-container/state/actions.ts","../../src/services/web-container/state/state.ts","../../src/services/web-container/state/index.ts"],"sourcesContent":["export const DEFAULT_EDITOR_ORIGIN = 'https://stackblitz.com';\nexport const SEARCH_PARAM_AUTH_CODE = 'code';\nexport const SEARCH_PARAM_ERROR = 'error';\nexport const SEARCH_PARAM_ERROR_DESCRIPTION = 'error_description';\nexport const BROADCAST_CHANNEL_NAME = '__wc_api_bc__';\nexport const STORAGE_TOKENS_NAME = '__wc_api_tokens__';\nexport const STORAGE_CODE_VERIFIER_NAME = '__wc_api_verifier__';\nexport const STORAGE_POPUP_NAME = '__wc_api_popup__';\n","import { STORAGE_TOKENS_NAME } from './constants.js';\nimport { TypedEventTarget } from './TypedEventTarget.js';\nconst IGNORED_ERROR = new Error();\nIGNORED_ERROR.stack = '';\nconst accessTokenChangedListeners = new TypedEventTarget();\n/**\n * @internal\n */\nexport class Tokens {\n    origin;\n    refresh;\n    access;\n    expires;\n    _revoked = new AbortController();\n    constructor(\n    // editor origin that those tokens are bound to, mostly used for development\n    origin, \n    // token to use to get a new access token\n    refresh, \n    // token to provide to webcontainer\n    access, \n    // time in UTC when the token expires\n    expires) {\n        this.origin = origin;\n        this.refresh = refresh;\n        this.access = access;\n        this.expires = expires;\n    }\n    async activate(autoRefresh, onFailedRefresh) {\n        if (this._revoked.signal.aborted) {\n            throw new Error('Token revoked');\n        }\n        // if the access token expired we fetch a new one\n        if (autoRefresh && this.expires < Date.now()) {\n            if (!(await this._fetchNewAccessToken())) {\n                return false;\n            }\n        }\n        this._sync();\n        if (autoRefresh) {\n            this._startRefreshTokensLoop(onFailedRefresh);\n        }\n        return true;\n    }\n    async revoke(clientId, ignoreRevokeError) {\n        this._revoked.abort();\n        try {\n            const response = await fetch(`${this.origin}/oauth/revoke`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: new URLSearchParams({ token: this.refresh, token_type_hint: 'refresh_token', client_id: clientId }),\n                mode: 'cors',\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to logout`);\n            }\n        }\n        catch (error) {\n            if (!ignoreRevokeError) {\n                throw error;\n            }\n        }\n        clearTokensInStorage();\n    }\n    // #region internal\n    /**\n     * @unstableInternal\n     */\n    forget() {\n        clearTokensInStorage();\n    }\n    // #endregion\n    static fromStorage() {\n        const savedTokens = readTokensFromStorage();\n        if (!savedTokens) {\n            return null;\n        }\n        return new Tokens(savedTokens.origin, savedTokens.refresh, savedTokens.access, savedTokens.expires);\n    }\n    static async fromAuthCode({ editorOrigin, clientId, codeVerifier, authCode, redirectUri, }) {\n        const response = await fetch(`${editorOrigin}/oauth/token`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: new URLSearchParams({\n                client_id: clientId,\n                code: authCode,\n                code_verifier: codeVerifier,\n                grant_type: 'authorization_code',\n                redirect_uri: redirectUri,\n            }),\n            mode: 'cors',\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to fetch token: ${response.status}`);\n        }\n        const tokenResponse = await response.json();\n        assertTokenResponse(tokenResponse);\n        const { access_token: access, refresh_token: refresh } = tokenResponse;\n        const expires = getExpiresFromTokenResponse(tokenResponse);\n        return new Tokens(editorOrigin, refresh, access, expires);\n    }\n    async _fetchNewAccessToken() {\n        try {\n            const response = await fetch(`${this.origin}/oauth/token`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: new URLSearchParams({\n                    grant_type: 'refresh_token',\n                    refresh_token: this.refresh,\n                }),\n                mode: 'cors',\n                signal: this._revoked.signal,\n            });\n            if (!response.ok) {\n                throw IGNORED_ERROR;\n            }\n            const tokenResponse = await response.json();\n            assertTokenResponse(tokenResponse);\n            const { access_token: access, refresh_token: refresh } = tokenResponse;\n            const expires = getExpiresFromTokenResponse(tokenResponse);\n            this.access = access;\n            this.expires = expires;\n            this.refresh = refresh;\n            return true;\n        }\n        catch {\n            clearTokensInStorage();\n            return false;\n        }\n    }\n    _sync() {\n        persistTokensInStorage(this);\n        fireAccessTokenChanged(this.access);\n    }\n    async _startRefreshTokensLoop(onFailedRefresh) {\n        while (true) {\n            const expiresIn = this.expires - Date.now() - 1000;\n            await wait(Math.max(expiresIn, 1000));\n            if (this._revoked.signal.aborted) {\n                return;\n            }\n            if (!this._fetchNewAccessToken()) {\n                onFailedRefresh();\n                return;\n            }\n            this._sync();\n        }\n    }\n}\n/**\n * @internal\n */\nexport function clearTokensInStorage() {\n    localStorage.removeItem(STORAGE_TOKENS_NAME);\n}\n/**\n * @internal\n */\nexport function addAccessTokenChangedListener(listener) {\n    return accessTokenChangedListeners.listen(listener);\n}\nfunction readTokensFromStorage() {\n    const serializedTokens = localStorage.getItem(STORAGE_TOKENS_NAME);\n    if (!serializedTokens) {\n        return null;\n    }\n    try {\n        return JSON.parse(serializedTokens);\n    }\n    catch {\n        return null;\n    }\n}\nfunction persistTokensInStorage(tokens) {\n    localStorage.setItem(STORAGE_TOKENS_NAME, JSON.stringify(tokens));\n}\nfunction getExpiresFromTokenResponse({ created_at, expires_in }) {\n    return (created_at + expires_in) * 1000;\n}\nfunction assertTokenResponse(token) {\n    if (typeof token !== 'object' || !token) {\n        throw new Error('Invalid Token Response');\n    }\n    if (typeof token.access_token !== 'string' ||\n        typeof token.refresh_token !== 'string' ||\n        typeof token.created_at !== 'number' ||\n        typeof token.expires_in !== 'number') {\n        throw new Error('Invalid Token Response');\n    }\n}\nfunction wait(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\nfunction fireAccessTokenChanged(accessToken) {\n    accessTokenChangedListeners.fireEvent(accessToken);\n}\n","import { DEFAULT_EDITOR_ORIGIN } from './constants.js';\nconst params = {};\nlet editorOrigin = null;\nexport const iframeSettings = {\n    get editorOrigin() {\n        if (editorOrigin == null) {\n            editorOrigin = new URL(globalThis.WEBCONTAINER_API_IFRAME_URL ?? DEFAULT_EDITOR_ORIGIN).origin;\n        }\n        return editorOrigin;\n    },\n    set editorOrigin(newOrigin) {\n        editorOrigin = new URL(newOrigin).origin;\n    },\n    setQueryParam(key, value) {\n        params[key] = value;\n    },\n    get url() {\n        const url = new URL(this.editorOrigin);\n        url.pathname = '/headless';\n        for (const param in params) {\n            url.searchParams.set(param, params[param]);\n        }\n        url.searchParams.set('version', \"1.5.1-internal.1\");\n        return url;\n    },\n};\n","/**\n * @internal\n */\nexport function resettablePromise() {\n    let resolve;\n    let promise;\n    function reset() {\n        promise = new Promise((_resolve) => (resolve = _resolve));\n    }\n    reset();\n    return {\n        get promise() {\n            return promise;\n        },\n        resolve(value) {\n            return resolve(value);\n        },\n        reset,\n    };\n}\n","import { Tokens, clearTokensInStorage } from './tokens.js';\nimport { SEARCH_PARAM_AUTH_CODE, SEARCH_PARAM_ERROR, STORAGE_CODE_VERIFIER_NAME, BROADCAST_CHANNEL_NAME, STORAGE_POPUP_NAME, SEARCH_PARAM_ERROR_DESCRIPTION, } from './constants.js';\nimport { iframeSettings } from './iframe-url.js';\nimport { S256, newCodeVerifier } from './code.js';\nimport { resettablePromise } from './reset-promise.js';\nimport { TypedEventTarget } from './TypedEventTarget.js';\n/**\n * @internal\n */\nexport const authState = {\n    initialized: false,\n    bootCalled: false,\n    forwardAuth: true,\n    redirectUri: '',\n    authComplete: resettablePromise(),\n    clientId: '',\n    oauthScope: '',\n    broadcastChannel: null,\n    get editorOrigin() {\n        return iframeSettings.editorOrigin;\n    },\n    tokens: null,\n    cleanup: [],\n};\nconst authFailedListeners = new TypedEventTarget();\nconst loggedOutListeners = new TypedEventTarget();\nfunction broadcastMessage(message) {\n    if (!authState.broadcastChannel) {\n        return;\n    }\n    authState.broadcastChannel.postMessage(message);\n    // check if we are in a popup mode\n    if (localStorage.getItem(STORAGE_POPUP_NAME) === 'true' && message.type !== 'auth-logout') {\n        localStorage.removeItem(STORAGE_POPUP_NAME);\n        // wait a tick to make sure the posted message has been sent\n        setTimeout(() => {\n            window.close();\n        });\n    }\n}\nexport const auth = {\n    init({ editorOrigin, clientId, scope, forwardAuth, redirectUri }) {\n        if (authState.initialized) {\n            throw new Error('Init should only be called once');\n        }\n        if (authState.bootCalled) {\n            throw new Error('`auth.init` should always be called before `WebContainer.boot`');\n        }\n        authState.initialized = true;\n        authState.forwardAuth = forwardAuth ?? true;\n        authState.redirectUri = redirectUri ?? defaultRedirectUri();\n        let autoRefresh = true;\n        // #region internal\n        autoRefresh = authState.forwardAuth;\n        // #endregion\n        authState.tokens = Tokens.fromStorage();\n        authState.clientId = clientId;\n        authState.oauthScope = scope;\n        authState.broadcastChannel = new BroadcastChannel(BROADCAST_CHANNEL_NAME);\n        // configure iframe url\n        iframeSettings.setQueryParam('client_id', clientId);\n        if (editorOrigin) {\n            iframeSettings.editorOrigin = new URL(editorOrigin).origin;\n        }\n        loggedOutListeners.listen(() => authState.authComplete.reset());\n        // if authentication or logout are done in another page, we want to reflect the state on this page as well\n        authState.broadcastChannel.addEventListener('message', onChannelMessage);\n        async function onChannelMessage(event) {\n            const typedEvent = event.data;\n            if (typedEvent.type === 'auth-complete') {\n                authState.tokens = Tokens.fromStorage();\n                if (!authState.tokens && !autoRefresh) {\n                    console.error('@webcontainer/api: Bug found: tokens were no longer present in storage!');\n                    return;\n                }\n                // we ignore the possible error here because they can't have expired just yet\n                await authState.tokens.activate(autoRefresh, onFailedTokenRefresh);\n                authState.authComplete.resolve();\n                return;\n            }\n            if (typedEvent.type === 'auth-failed') {\n                authFailedListeners.fireEvent(typedEvent);\n                return;\n            }\n            if (typedEvent.type === 'auth-logout') {\n                loggedOutListeners.fireEvent();\n                return;\n            }\n        }\n        // #region internal\n        authState.cleanup.push(() => authState.broadcastChannel?.removeEventListener('message', onChannelMessage));\n        // #endregion\n        if (authState.tokens) {\n            const tokens = authState.tokens;\n            if (tokens.origin === authState.editorOrigin) {\n                /**\n                 * Here we assume that the refresh token never expires which\n                 * might not be correct. If that is the case though, we will\n                 * emit a 'logged-out' event to signal that the user has been\n                 * logged out, which could also happen at a later time anyway.\n                 *\n                 * Because this flow is done entirely locally, we do not broadcast\n                 * anything to the other tabs. They should be performing a similar\n                 * check.\n                 */\n                (async () => {\n                    const success = await tokens.activate(autoRefresh, onFailedTokenRefresh);\n                    if (!success) {\n                        // if we got new token in the meantime we discard this error\n                        if (authState.tokens !== tokens) {\n                            return;\n                        }\n                        loggedOutListeners.fireEvent();\n                        return;\n                    }\n                    authState.authComplete.resolve();\n                })();\n                return { status: 'authorized' };\n            }\n            clearTokensInStorage();\n            authState.tokens = null;\n        }\n        const locationURL = new URL(window.location.href);\n        const { searchParams } = locationURL;\n        const updateURL = () => window.history.replaceState({}, document.title, locationURL);\n        // check for errors first, aka the user declined the authorisation or stackblitz did\n        if (searchParams.has(SEARCH_PARAM_ERROR)) {\n            const error = searchParams.get(SEARCH_PARAM_ERROR);\n            const description = searchParams.get(SEARCH_PARAM_ERROR_DESCRIPTION);\n            searchParams.delete(SEARCH_PARAM_ERROR);\n            searchParams.delete(SEARCH_PARAM_ERROR_DESCRIPTION);\n            updateURL();\n            broadcastMessage({ type: 'auth-failed', error, description });\n            return { status: 'auth-failed', error, description };\n        }\n        // if there's an auth code\n        if (searchParams.has(SEARCH_PARAM_AUTH_CODE)) {\n            const authCode = searchParams.get(SEARCH_PARAM_AUTH_CODE);\n            const editorOrigin = authState.editorOrigin;\n            searchParams.delete(SEARCH_PARAM_AUTH_CODE);\n            updateURL();\n            const codeVerifier = localStorage.getItem(STORAGE_CODE_VERIFIER_NAME);\n            if (!codeVerifier) {\n                return { status: 'need-auth' };\n            }\n            localStorage.removeItem(STORAGE_CODE_VERIFIER_NAME);\n            let redirectUri = defaultRedirectUri();\n            // #region internal\n            redirectUri = authState.redirectUri;\n            // #endregion\n            Tokens.fromAuthCode({\n                editorOrigin,\n                clientId: authState.clientId,\n                authCode,\n                codeVerifier,\n                redirectUri,\n            })\n                .then(async (tokens) => {\n                authState.tokens = tokens;\n                assertAuthTokens(authState.tokens);\n                const success = await authState.tokens.activate(autoRefresh, onFailedTokenRefresh);\n                // if authentication failed we throw, and we'll mark auth as failed\n                if (!success) {\n                    throw new Error();\n                }\n                authState.authComplete.resolve();\n                broadcastMessage({ type: 'auth-complete' });\n            })\n                .catch((error) => {\n                // this should never happen unless the rails app is now down for some reason?\n                console.error(error);\n                // treat it as a logged out event so that the user can retry to login\n                loggedOutListeners.fireEvent();\n                broadcastMessage({ type: 'auth-logout' });\n            });\n            return { status: 'authorized' };\n        }\n        return { status: 'need-auth' };\n    },\n    async startAuthFlow({ popup } = {}) {\n        if (!authState.initialized) {\n            throw new Error('auth.init must be called first');\n        }\n        if (popup) {\n            localStorage.setItem(STORAGE_POPUP_NAME, 'true');\n            const height = 500;\n            const width = 620;\n            const left = window.screenLeft + (window.outerWidth - width) / 2;\n            const top = window.screenTop + (window.outerHeight - height) / 2;\n            window.open(await generateOAuthRequest(), '_blank', `popup,width=${width},height=${height},left=${left},top=${top}`);\n        }\n        else {\n            window.location.href = await generateOAuthRequest();\n        }\n    },\n    async logout({ ignoreRevokeError } = {}) {\n        await authState.tokens?.revoke(authState.clientId, ignoreRevokeError ?? false);\n        loggedOutListeners.fireEvent();\n        broadcastMessage({ type: 'auth-logout' });\n    },\n    loggedIn() {\n        return authState.authComplete.promise;\n    },\n    on(event, listener) {\n        switch (event) {\n            case 'auth-failed': {\n                return authFailedListeners.listen(listener);\n            }\n            case 'logged-out': {\n                return loggedOutListeners.listen(listener);\n            }\n            default: {\n                throw new Error(`Unsupported event type '${event}'.`);\n            }\n        }\n    },\n    // #region internal\n    tokens() {\n        return authState.tokens;\n    },\n    forget() {\n        authState.tokens?.forget();\n        for (const dispose of authState.cleanup) {\n            dispose();\n        }\n    },\n    // #endregion\n};\nfunction onFailedTokenRefresh() {\n    loggedOutListeners.fireEvent();\n    broadcastMessage({ type: 'auth-logout' });\n}\nfunction defaultRedirectUri() {\n    return window.location.href;\n}\nasync function generateOAuthRequest() {\n    const codeVerifier = newCodeVerifier();\n    localStorage.setItem(STORAGE_CODE_VERIFIER_NAME, codeVerifier);\n    const codeChallenge = await S256(codeVerifier);\n    const url = new URL('/oauth/authorize', authState.editorOrigin);\n    const { searchParams } = url;\n    let redirectUri = defaultRedirectUri();\n    // #region internal\n    redirectUri = authState.redirectUri;\n    // #endregion\n    searchParams.append('response_type', 'code');\n    searchParams.append('client_id', authState.clientId);\n    searchParams.append('redirect_uri', redirectUri);\n    searchParams.append('scope', authState.oauthScope);\n    searchParams.append('code_challenge', codeChallenge);\n    searchParams.append('code_challenge_method', 'S256');\n    return url.toString();\n}\n/**\n * @internal\n */\nexport function assertAuthTokens(tokens) {\n    if (!tokens) {\n        throw new Error('Oops! Tokens is not defined when it always should be.');\n    }\n}\n","/**\n * This type is in a separate module so that localservice can import it\n * without bundling all the other webcontainer specific stuff.\n */\nexport var PreviewMessageType;\n(function (PreviewMessageType) {\n    PreviewMessageType[\"UncaughtException\"] = \"PREVIEW_UNCAUGHT_EXCEPTION\";\n    PreviewMessageType[\"UnhandledRejection\"] = \"PREVIEW_UNHANDLED_REJECTION\";\n    PreviewMessageType[\"ConsoleError\"] = \"PREVIEW_CONSOLE_ERROR\";\n})(PreviewMessageType || (PreviewMessageType = {}));\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// dist/vendor/comlink.js\nvar comlink_exports = {};\n__export(comlink_exports, {\n  createEndpoint: () => createEndpoint,\n  expose: () => expose,\n  proxy: () => proxy,\n  proxyMarker: () => proxyMarker,\n  releaseProxy: () => releaseProxy,\n  transfer: () => transfer,\n  transferHandlers: () => transferHandlers,\n  windowEndpoint: () => windowEndpoint,\n  wrap: () => wrap\n});\n\n// ../../node_modules/comlink/dist/esm/comlink.mjs\nvar proxyMarker = Symbol(\"Comlink.proxy\");\nvar createEndpoint = Symbol(\"Comlink.endpoint\");\nvar releaseProxy = Symbol(\"Comlink.releaseProxy\");\nvar throwMarker = Symbol(\"Comlink.thrown\");\nvar isObject = (val) => typeof val === \"object\" && val !== null || typeof val === \"function\";\nvar proxyTransferHandler = {\n  canHandle: (val) => isObject(val) && val[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  }\n};\nvar throwTransferHandler = {\n  canHandle: (value) => isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack\n        }\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(new Error(serialized.value.message), serialized.value);\n    }\n    throw serialized.value;\n  }\n};\nvar transferHandlers = /* @__PURE__ */ new Map([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler]\n]);\nfunction expose(obj, ep = self) {\n  ep.addEventListener(\"message\", function callback(ev) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = Object.assign({ path: [] }, ev.data);\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj2, prop) => obj2[prop], obj);\n      const rawValue = path.reduce((obj2, prop) => obj2[prop], obj);\n      switch (type) {\n        case 0:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case 1:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case 2:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case 3:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case 4:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case 5:\n          {\n            returnValue = void 0;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue).catch((value) => {\n      return { value, [throwMarker]: 0 };\n    }).then((returnValue2) => {\n      const [wireValue, transferables] = toWireValue(returnValue2);\n      ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n      if (type === 5) {\n        ep.removeEventListener(\"message\", callback);\n        closeEndPoint(ep);\n      }\n    });\n  });\n  if (ep.start) {\n    ep.start();\n  }\n}\nfunction isMessagePort(endpoint) {\n  return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n  if (isMessagePort(endpoint))\n    endpoint.close();\n}\nfunction wrap(ep, target) {\n  return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\nfunction createProxy(ep, path = [], target = function() {\n}) {\n  let isProxyReleased = false;\n  const proxy2 = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: 5,\n            path: path.map((p) => p.toString())\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy2 };\n        }\n        const r = requestResponseMessage(ep, {\n          type: 0,\n          path: path.map((p) => p.toString())\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(ep, {\n        type: 1,\n        path: [...path, prop].map((p) => p.toString()),\n        value\n      }, transferables).then(fromWireValue);\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if (last === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: 4\n        }).then(fromWireValue);\n      }\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: 2,\n        path: path.map((p) => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: 3,\n        path: path.map((p) => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    }\n  });\n  return proxy2;\n}\nfunction myFlat(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nvar transferCache = /* @__PURE__ */ new WeakMap();\nfunction transfer(obj, transfers) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\nfunction proxy(obj) {\n  return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\n  return {\n    postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context)\n  };\n}\nfunction toWireValue(value) {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: 3,\n          name,\n          value: serializedValue\n        },\n        transferables\n      ];\n    }\n  }\n  return [\n    {\n      type: 0,\n      value\n    },\n    transferCache.get(value) || []\n  ];\n}\nfunction fromWireValue(value) {\n  switch (value.type) {\n    case 3:\n      return transferHandlers.get(value.name).deserialize(value.value);\n    case 0:\n      return value.value;\n  }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l);\n      resolve(ev.data);\n    });\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage(Object.assign({ id }, msg), transfers);\n  });\n}\nfunction generateUUID() {\n  return new Array(4).fill(0).map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16)).join(\"-\");\n}\nexport {\n  comlink_exports as Comlink\n};\n","import { PreviewMessageType } from '../preview-message-types.js';\nconst PREVIEW_MESSAGE_TYPES = [\n    PreviewMessageType.ConsoleError,\n    PreviewMessageType.UncaughtException,\n    PreviewMessageType.UnhandledRejection,\n];\nexport function isPreviewMessage(data) {\n    if (data == null || typeof data !== 'object') {\n        return false;\n    }\n    if (!('type' in data) || !PREVIEW_MESSAGE_TYPES.includes(data.type)) {\n        return false;\n    }\n    return true;\n}\n","export function nullPrototype(source) {\n    const prototype = Object.create(null);\n    if (!source) {\n        return prototype;\n    }\n    return Object.assign(prototype, source);\n}\n","import { nullPrototype } from './null-prototype.js';\n/**\n * @internal\n */\nexport function toInternalFileSystemTree(tree) {\n    const newTree = { d: {} };\n    for (const name of Object.keys(tree)) {\n        const entry = tree[name];\n        if ('file' in entry) {\n            if ('symlink' in entry.file) {\n                newTree.d[name] = { f: { l: entry.file.symlink } };\n                continue;\n            }\n            const contents = entry.file.contents;\n            const stringContents = typeof contents === 'string' ? contents : binaryString(contents);\n            const binary = typeof contents === 'string' ? {} : { b: true };\n            newTree.d[name] = { f: { c: stringContents, ...binary } };\n            continue;\n        }\n        const newEntry = toInternalFileSystemTree(entry.directory);\n        newTree.d[name] = newEntry;\n    }\n    return newTree;\n}\n/**\n * @internal\n */\nexport function toExternalFileSystemTree(tree) {\n    const newTree = nullPrototype();\n    if ('f' in tree) {\n        throw new Error('It is not possible to export a single file in the JSON format.');\n    }\n    if ('d' in tree) {\n        for (const name of Object.keys(tree.d)) {\n            const entry = tree.d[name];\n            if ('d' in entry) {\n                newTree[name] = nullPrototype({\n                    directory: toExternalFileSystemTree(entry),\n                });\n            }\n            else if ('f' in entry) {\n                if ('c' in entry.f) {\n                    newTree[name] = nullPrototype({\n                        file: nullPrototype({\n                            contents: entry.f.c,\n                        }),\n                    });\n                }\n                else if ('l' in entry.f) {\n                    newTree[name] = nullPrototype({\n                        file: nullPrototype({\n                            symlink: entry.f.l,\n                        }),\n                    });\n                }\n            }\n        }\n    }\n    return newTree;\n}\nfunction binaryString(bytes) {\n    let result = '';\n    for (const byte of bytes) {\n        result += String.fromCharCode(byte);\n    }\n    return result;\n}\n","/**\n * The WebContainer Public API allows you build custom applications on top of an in-browser Node.js runtime.\n *\n * Its main entrypoint is the {@link WebContainer} class.\n *\n * @packageDocumentation\n */\nimport { authState, assertAuthTokens } from './internal/auth-state.js';\nimport { PreviewMessageType } from './preview-message-types.js';\nimport { Comlink } from './vendor/index.js';\nimport { auth as authImpl } from './internal/auth-state.js';\nimport { addAccessTokenChangedListener } from './internal/tokens.js';\nimport { iframeSettings } from './internal/iframe-url.js';\nimport { isPreviewMessage, toInternalFileSystemTree, toExternalFileSystemTree } from './utils.js';\nexport const auth = authImpl;\nexport { PreviewMessageType };\nexport * from './utils.js';\nlet bootPromise = null;\nlet cachedServerPromise = null;\nlet cachedBootOptions = {};\nconst decoder = new TextDecoder();\nconst encoder = new TextEncoder();\n/**\n * The main export of this library. An instance of `WebContainer` represents a runtime\n * ready to be used.\n */\nexport class WebContainer {\n    _instance;\n    _runtimeInfo;\n    /**\n     * Gives access to the underlying file system.\n     */\n    fs;\n    // #region internal\n    internal;\n    // #endregion\n    static _instance = null;\n    _tornDown = false;\n    _unsubscribeFromTokenChangedListener = () => { };\n    /** @internal */\n    constructor(\n    /** @internal */\n    _instance, fs, \n    /** @internal */\n    _runtimeInfo) {\n        this._instance = _instance;\n        this._runtimeInfo = _runtimeInfo;\n        this.fs = new FileSystemAPIClient(fs);\n        // #region internal\n        this.internal = new WebContainerInternal(_instance);\n        // #endregion\n        let forwardAuth = true;\n        // #region internal\n        forwardAuth = authState.forwardAuth;\n        // #endregion\n        // forward the credentials to webcontainer if needed\n        if (authState.initialized && forwardAuth) {\n            this._unsubscribeFromTokenChangedListener = addAccessTokenChangedListener((accessToken) => {\n                this._instance.setCredentials({ accessToken, editorOrigin: authState.editorOrigin });\n            });\n            (async () => {\n                await authState.authComplete.promise;\n                if (this._tornDown) {\n                    return;\n                }\n                assertAuthTokens(authState.tokens);\n                await this._instance.setCredentials({\n                    accessToken: authState.tokens.access,\n                    editorOrigin: authState.editorOrigin,\n                });\n            })().catch((error) => {\n                // print the error as this is likely a bug in webcontainer\n                console.error(error);\n            });\n        }\n    }\n    async spawn(command, optionsOrArgs, options) {\n        let args = [];\n        if (Array.isArray(optionsOrArgs)) {\n            args = optionsOrArgs;\n        }\n        else {\n            options = optionsOrArgs;\n        }\n        let output = undefined;\n        let outputStream = new ReadableStream();\n        if (options?.output !== false) {\n            const result = streamWithPush();\n            output = result.push;\n            outputStream = result.stream;\n        }\n        let stdout = undefined;\n        let stdoutStream;\n        let stderr = undefined;\n        let stderrStream;\n        // #region internal\n        stdoutStream = new ReadableStream();\n        stderrStream = new ReadableStream();\n        if (options?.stdout) {\n            const result = streamWithPush();\n            stdout = result.push;\n            stdoutStream = result.stream;\n        }\n        if (options?.stderr) {\n            const result = streamWithPush();\n            stderr = result.push;\n            stderrStream = result.stream;\n        }\n        // #endregion\n        const wrappedOutput = proxyListener(binaryListener(output));\n        const wrappedStdout = proxyListener(binaryListener(stdout));\n        const wrappedStderr = proxyListener(binaryListener(stderr));\n        const process = await this._instance.run({\n            command,\n            args,\n            cwd: options?.cwd,\n            env: options?.env,\n            terminal: options?.terminal,\n        }, wrappedStdout, wrappedStderr, wrappedOutput);\n        return new WebContainerProcessImpl(process, outputStream, stdoutStream, stderrStream);\n    }\n    async export(path, options) {\n        const serializeOptions = {\n            format: options?.format ?? 'json',\n            includes: options?.includes,\n            excludes: options?.excludes,\n            external: true,\n        };\n        const result = await this._instance.serialize(path, serializeOptions);\n        if (serializeOptions.format === 'json') {\n            const data = JSON.parse(decoder.decode(result));\n            return toExternalFileSystemTree(data);\n        }\n        return result;\n    }\n    on(event, listener) {\n        if (event === 'preview-message') {\n            const originalListener = listener;\n            listener = ((message) => {\n                if (isPreviewMessage(message)) {\n                    originalListener(message);\n                }\n            });\n        }\n        const { listener: wrapped, subscribe } = syncSubscription(listener);\n        return subscribe(this._instance.on(event, Comlink.proxy(wrapped)));\n    }\n    /**\n     * Mounts a tree of files into the filesystem. This can be specified as a tree object ({@link FileSystemTree})\n     * or as a binary snapshot generated by [`@webcontainer/snapshot`](https://www.npmjs.com/package/@webcontainer/snapshot).\n     *\n     * @param snapshotOrTree - A tree of files, or a binary snapshot. Note that binary payloads will be transferred.\n     * @param options.mountPoint - Specifies a nested path where the tree should be mounted.\n     */\n    mount(snapshotOrTree, options) {\n        const payload = snapshotOrTree instanceof Uint8Array\n            ? snapshotOrTree\n            : snapshotOrTree instanceof ArrayBuffer\n                ? new Uint8Array(snapshotOrTree)\n                : encoder.encode(JSON.stringify(toInternalFileSystemTree(snapshotOrTree)));\n        return this._instance.loadFiles(Comlink.transfer(payload, [payload.buffer]), {\n            mountPoints: options?.mountPoint,\n        });\n    }\n    /**\n     * Set a custom script to be injected into all previews. When this function is called, every\n     * future page reload will contain the provided script tag on all HTML responses.\n     *\n     * Note:\n     *\n     * When this function resolves, every preview reloaded _after_ will have the new script.\n     * Existing preview have to be explicitely reloaded.\n     *\n     * To reload a preview you can use `reloadPreview`.\n     *\n     * @param scriptSrc Source for the script tag.\n     * @param options Options to define which type of script this is.\n     */\n    setPreviewScript(scriptSrc, options) {\n        return this._instance.setPreviewScript(scriptSrc, options);\n    }\n    /**\n     * The default value of the `PATH` environment variable for processes started through {@link spawn}.\n     */\n    get path() {\n        return this._runtimeInfo.path;\n    }\n    /**\n     * The full path to the working directory (see {@link FileSystemAPI}).\n     */\n    get workdir() {\n        return this._runtimeInfo.cwd;\n    }\n    /**\n     * Destroys the WebContainer instance, turning it unusable, and releases its resources. After this,\n     * a new WebContainer instance can be obtained by calling {@link WebContainer.boot | `boot`}.\n     *\n     * All entities derived from this instance (e.g. processes, the file system, etc.) also become unusable\n     * after calling this method.\n     */\n    teardown() {\n        if (this._tornDown) {\n            throw new Error('WebContainer already torn down');\n        }\n        this._tornDown = true;\n        this._unsubscribeFromTokenChangedListener();\n        this.fs._teardown();\n        this._instance.teardown();\n        this._instance[Comlink.releaseProxy]();\n        if (WebContainer._instance === this) {\n            WebContainer._instance = null;\n        }\n    }\n    /**\n     * Boots a WebContainer. Only a single instance of WebContainer can be booted concurrently\n     * (see {@link WebContainer.teardown | `teardown`}).\n     *\n     * Booting WebContainer is an expensive operation.\n     */\n    static async boot(options = {}) {\n        const { workdirName } = options;\n        if (window.crossOriginIsolated && options.coep === 'none') {\n            console.warn(`A Cross-Origin-Embedder-Policy header is required in cross origin isolated environments.\\nSet the 'coep' option to 'require-corp'.`);\n        }\n        if (workdirName?.includes('/') || workdirName === '..' || workdirName === '.') {\n            throw new Error('workdirName should be a valid folder name');\n        }\n        // signal that boot was called to auth module as calling auth.init after boot is likely incorrect\n        authState.bootCalled = true;\n        // try to \"acquire the lock\", i.e. wait for any ongoing boot request to finish\n        while (bootPromise) {\n            await bootPromise;\n        }\n        if (WebContainer._instance) {\n            throw new Error('Only a single WebContainer instance can be booted');\n        }\n        const instancePromise = unsynchronizedBoot(options);\n        // the \"lock\" is a promise for the ongoing boot that never fails\n        bootPromise = instancePromise.catch(() => { });\n        try {\n            const instance = await instancePromise;\n            WebContainer._instance = instance;\n            return instance;\n        }\n        finally {\n            // release the \"lock\"\n            bootPromise = null;\n        }\n    }\n}\n/**\n * Configure an API key to be used for this instance of WebContainer.\n *\n * @param key WebContainer API key.\n */\nexport function configureAPIKey(key) {\n    if (authState.bootCalled) {\n        throw new Error('`configureAPIKey` should always be called before `WebContainer.boot`');\n    }\n    iframeSettings.setQueryParam('client_id', key);\n}\n// #region internal\nexport class WebContainerInternal {\n    _instance;\n    constructor(\n    /** @internal */\n    _instance) {\n        this._instance = _instance;\n    }\n    watchPaths(options, cb) {\n        const { listener, subscribe } = syncSubscription(cb);\n        return subscribe(this._instance.watchPaths(options, Comlink.proxy(listener)));\n    }\n    getProcesses() {\n        return this._instance.getProcesses();\n    }\n    onProcessesRemove(cb) {\n        const { listener, subscribe } = syncSubscription(cb);\n        return subscribe(this._instance.onProcessesRemove(Comlink.proxy(listener)));\n    }\n    serialize(path, options) {\n        return this._instance.serialize(path, options);\n    }\n}\nconst DIR_ENTRY_TYPE_FILE = 1;\nconst DIR_ENTRY_TYPE_DIR = 2;\n/**\n * @internal\n */\nclass DirEntImpl {\n    name;\n    _type;\n    constructor(name, _type) {\n        this.name = name;\n        this._type = _type;\n    }\n    isFile() {\n        return this._type === DIR_ENTRY_TYPE_FILE;\n    }\n    isDirectory() {\n        return this._type === DIR_ENTRY_TYPE_DIR;\n    }\n}\nclass FSWatcher {\n    _apiClient;\n    _path;\n    _options;\n    _listener;\n    _wrappedListener;\n    _watcher;\n    _closed = false;\n    constructor(_apiClient, _path, _options, _listener) {\n        this._apiClient = _apiClient;\n        this._path = _path;\n        this._options = _options;\n        this._listener = _listener;\n        this._apiClient._watchers.add(this);\n        this._wrappedListener = (event, filename) => {\n            if (this._listener && !this._closed) {\n                this._listener(event, filename);\n            }\n        };\n        this._apiClient._fs\n            .watch(this._path, this._options, proxyListener(this._wrappedListener))\n            .then((_watcher) => {\n            this._watcher = _watcher;\n            if (this._closed) {\n                this._teardown();\n            }\n        })\n            .catch(console.error);\n    }\n    close() {\n        if (!this._closed) {\n            this._closed = true;\n            this._apiClient._watchers.delete(this);\n            this._teardown();\n        }\n    }\n    /**\n     * @internal\n     */\n    _teardown() {\n        this._watcher?.close().finally(() => {\n            this._watcher?.[Comlink.releaseProxy]();\n        });\n    }\n}\n/**\n * @internal\n */\nclass WebContainerProcessImpl {\n    output;\n    input;\n    exit;\n    _process;\n    stdout;\n    stderr;\n    constructor(process, output, stdout, stderr) {\n        this.output = output;\n        this._process = process;\n        this.input = new WritableStream({\n            write: (data) => {\n                // this promise is not supposed to fail anyway\n                this._getProcess()\n                    ?.write(data)\n                    .catch(() => { });\n            },\n        });\n        this.exit = this._onExit();\n        // #region internal\n        // this cast is only needed to make stable builds happy, where those fields are unexposed\n        // #endregion\n        this.stdout = stdout;\n        this.stderr = stderr;\n    }\n    kill() {\n        this._getProcess()?.kill();\n    }\n    resize(dimensions) {\n        this._getProcess()?.resize(dimensions);\n    }\n    async _onExit() {\n        try {\n            return await this._process.onExit;\n        }\n        finally {\n            this._process?.[Comlink.releaseProxy]();\n            this._process = null;\n        }\n    }\n    _getProcess() {\n        if (this._process == null) {\n            console.warn('This process already exited');\n        }\n        return this._process;\n    }\n}\n/**\n * @internal\n */\nclass FileSystemAPIClient {\n    _fs;\n    _watchers = new Set([]);\n    constructor(fs) {\n        this._fs = fs;\n    }\n    rm(...args) {\n        return this._fs.rm(...args);\n    }\n    async readFile(path, encoding) {\n        return await this._fs.readFile(path, encoding);\n    }\n    async rename(oldPath, newPath) {\n        return await this._fs.rename(oldPath, newPath);\n    }\n    async writeFile(path, data, options) {\n        if (data instanceof Uint8Array) {\n            const buffer = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n            data = Comlink.transfer(new Uint8Array(buffer), [buffer]);\n        }\n        await this._fs.writeFile(path, data, options);\n    }\n    async readdir(path, options) {\n        const result = await this._fs.readdir(path, options);\n        if (isStringArray(result)) {\n            return result;\n        }\n        if (isTypedArrayCollection(result)) {\n            return result;\n        }\n        const entries = result.map((entry) => new DirEntImpl(entry.name, entry['Symbol(type)']));\n        return entries;\n    }\n    async mkdir(path, options) {\n        return await this._fs.mkdir(path, options);\n    }\n    watch(path, options, listener) {\n        if (typeof options === 'function') {\n            listener = options;\n            options = null;\n        }\n        return new FSWatcher(this, path, options, listener);\n    }\n    /**\n     * @internal\n     */\n    _teardown() {\n        this._fs[Comlink.releaseProxy]();\n        for (const watcherWrapper of this._watchers) {\n            watcherWrapper.close();\n        }\n    }\n}\nasync function unsynchronizedBoot(options) {\n    const { serverPromise } = serverFactory(options);\n    const server = await serverPromise;\n    const instance = await server.build({\n        host: window.location.host,\n        version: \"1.5.1-internal.1\",\n        workdirName: options.workdirName,\n        forwardPreviewErrors: options.forwardPreviewErrors,\n    });\n    const fs = await instance.fs();\n    const runtimeInfo = await instance.runtimeInfo();\n    return new WebContainer(instance, fs, runtimeInfo);\n}\nfunction binaryListener(listener) {\n    if (listener == null) {\n        return undefined;\n    }\n    return (data) => {\n        if (data instanceof Uint8Array) {\n            listener(decoder.decode(data));\n        }\n        else if (data == null) {\n            listener(null);\n        }\n    };\n}\nfunction proxyListener(listener) {\n    if (listener == null) {\n        return undefined;\n    }\n    return Comlink.proxy(listener);\n}\nfunction serverFactory(options) {\n    if (cachedServerPromise != null) {\n        if (options.coep !== cachedBootOptions.coep) {\n            console.warn(`Attempting to boot WebContainer with 'coep: ${options.coep}'`);\n            console.warn(`First boot had 'coep: ${cachedBootOptions.coep}', new settings will not take effect!`);\n        }\n        return { serverPromise: cachedServerPromise };\n    }\n    const iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n    iframe.setAttribute('allow', 'cross-origin-isolated');\n    const url = iframeSettings.url;\n    if (options.coep) {\n        url.searchParams.set('coep', options.coep);\n    }\n    iframe.src = url.toString();\n    const { origin } = url;\n    cachedBootOptions = { ...options };\n    cachedServerPromise = new Promise((resolve) => {\n        const onMessage = (event) => {\n            if (event.origin !== origin) {\n                return;\n            }\n            const { data } = event;\n            if (data.type === 'init') {\n                resolve(Comlink.wrap(event.ports[0]));\n                return;\n            }\n            if (data.type === 'warning') {\n                console[data.level].call(console, data.message);\n                return;\n            }\n        };\n        window.addEventListener('message', onMessage);\n    });\n    document.body.insertBefore(iframe, null);\n    return { serverPromise: cachedServerPromise };\n}\nfunction isStringArray(list) {\n    return typeof list[0] === 'string';\n}\nfunction isTypedArrayCollection(list) {\n    return list[0] instanceof Uint8Array;\n}\nfunction streamWithPush() {\n    let controller = null;\n    const stream = new ReadableStream({\n        start(controller_) {\n            controller = controller_;\n        },\n    });\n    const push = (item) => {\n        if (item != null) {\n            controller?.enqueue(item);\n        }\n        else {\n            controller?.close();\n            controller = null;\n        }\n    };\n    return { stream, push };\n}\nfunction syncSubscription(listener) {\n    let stopped = false;\n    let unsubscribe = () => { };\n    const wrapped = ((...args) => {\n        if (stopped) {\n            return;\n        }\n        listener(...args);\n    });\n    return {\n        subscribe(promise) {\n            promise.then((unsubscribe_) => {\n                unsubscribe = unsubscribe_;\n                if (stopped) {\n                    unsubscribe();\n                }\n            });\n            return () => {\n                stopped = true;\n                unsubscribe();\n            };\n        },\n        listener: wrapped,\n    };\n}\n","import { WebContainer, FileSystemTree } from '@webcontainer/api'\nimport { SetState, GetState } from 'src/utils/zustand'\nimport { logWarn } from 'src/utils/logger'\n\nimport { WebContainerState } from './state'\n\nexport interface WebContainerStateActions {\n  init: (func: () => void) => Promise<WebContainer | undefined>\n  mounts: (files: FileSystemTree) => Promise<void>\n  teardown: () => Promise<void>\n}\n\nexport const getWebContainerStateActions = (\n  set: SetState<WebContainerState>,\n  get: GetState<WebContainerState>,\n): WebContainerStateActions => {\n  return {\n    init: async (onWebContainerTeardown) => {\n      try {\n        let currentWebcontainerInstance = get().webcontainerInstance\n        if (currentWebcontainerInstance) {\n          const currentOnWebContainerTeardown = get().onWebContainerTeardown\n          currentWebcontainerInstance.teardown()\n          currentOnWebContainerTeardown?.()\n          currentWebcontainerInstance = undefined\n          await new Promise((resolve) => setTimeout(resolve, 250))\n        }\n        const webcontainerInstance = await WebContainer.boot({ coep: 'credentialless' })\n        set({ webcontainerInstance, onWebContainerTeardown })\n        return webcontainerInstance\n      } catch (error) {\n        logWarn('Init Web Container', error)\n      } finally {\n        set({ ready: true })\n      }\n    },\n    teardown: async () => {\n      const webcontainerInstance = get().webcontainerInstance\n      if (webcontainerInstance) {\n        webcontainerInstance.teardown()\n      }\n      set({ webcontainerInstance: undefined })\n    },\n    mounts: async (files) => {\n      try {\n        const webcontainerInstance = get().webcontainerInstance\n        if (!webcontainerInstance) {\n          throw new Error('WebContainer instance is not ready')\n        }\n        await webcontainerInstance.mount(files)\n      } catch (error) {\n        logWarn('Mount Web Container:', error)\n      }\n    },\n  }\n}\n","import { WebContainer } from '@webcontainer/api'\n\nexport interface WebContainerState {\n  ready?: boolean\n  webcontainerInstance?: WebContainer\n  onWebContainerTeardown?: () => void\n}\n\nexport const defaultWebContainerState: WebContainerState = {}\n","import { create } from 'zustand'\nimport { devtools } from 'zustand/middleware'\nimport { WebContainerStateActions, getWebContainerStateActions } from './actions'\nimport { defaultWebContainerState, WebContainerState } from './state'\n\nexport const useWebContainerState = create<WebContainerState & WebContainerStateActions>()(\n  devtools((set, get) => ({\n    ...defaultWebContainerState,\n    ...getWebContainerStateActions(set, get),\n  })),\n)\n"],"names":["DEFAULT_EDITOR_ORIGIN","IGNORED_ERROR","params","editorOrigin","iframeSettings","newOrigin","key","value","url","param","resettablePromise","resolve","promise","reset","_resolve","PreviewMessageType","__defProp","__export","target","all","name","comlink_exports","createEndpoint","expose","proxy","proxyMarker","releaseProxy","transfer","transferHandlers","windowEndpoint","wrap","throwMarker","isObject","val","proxyTransferHandler","obj","port1","port2","port","throwTransferHandler","serialized","ep","callback","ev","id","type","path","argumentList","fromWireValue","returnValue","parent","obj2","prop","rawValue","returnValue2","wireValue","transferables","toWireValue","closeEndPoint","isMessagePort","endpoint","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","proxy2","_target","requestResponseMessage","p","r","_thisArg","rawArgumentList","last","processArguments","myFlat","arr","processed","v","transferCache","transfers","w","context","targetOrigin","msg","handler","serializedValue","generateUUID","l","PREVIEW_MESSAGE_TYPES","isPreviewMessage","data","nullPrototype","source","prototype","toInternalFileSystemTree","tree","newTree","entry","contents","stringContents","binaryString","binary","newEntry","toExternalFileSystemTree","bytes","result","byte","bootPromise","cachedServerPromise","cachedBootOptions","decoder","encoder","WebContainer","_instance","fs","_runtimeInfo","FileSystemAPIClient","WebContainerInternal","command","optionsOrArgs","options","args","output","outputStream","streamWithPush","stdout","stdoutStream","stderr","stderrStream","wrappedOutput","proxyListener","binaryListener","wrappedStdout","wrappedStderr","process","WebContainerProcessImpl","serializeOptions","event","listener","originalListener","message","wrapped","subscribe","syncSubscription","Comlink","snapshotOrTree","payload","scriptSrc","workdirName","instancePromise","unsynchronizedBoot","instance","cb","DIR_ENTRY_TYPE_FILE","DIR_ENTRY_TYPE_DIR","DirEntImpl","_type","FSWatcher","_apiClient","_path","_options","_listener","filename","_watcher","dimensions","encoding","oldPath","newPath","buffer","isStringArray","isTypedArrayCollection","watcherWrapper","serverPromise","serverFactory","runtimeInfo","iframe","origin","onMessage","list","controller","controller_","item","stopped","unsubscribe","unsubscribe_","getWebContainerStateActions","set","get","onWebContainerTeardown","currentWebcontainerInstance","currentOnWebContainerTeardown","webcontainerInstance","error","logWarn","files","defaultWebContainerState","useWebContainerState","create","devtools"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}