{"version":3,"file":"popover-CNDhZaXq.js","sources":["../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../src/lib/shadcn/ui/textarea.tsx","../../src/lib/kokonutui/use-auto-resize-textarea.ts","../../src/lib/kokonutui/ai-input.tsx","../../src/lib/shadcn/ui/popover.tsx"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from 'motion-utils';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import * as React from 'react'\n\nimport { cn } from 'src/lib/utils'\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.TextareaHTMLAttributes<HTMLTextAreaElement>\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        'flex min-h-[100px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-0 disabled:cursor-not-allowed disabled:opacity-50',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = 'Textarea'\n\nexport { Textarea }\n","import { useEffect, useRef, useCallback } from 'react'\n\ninterface UseAutoResizeTextareaProps {\n  minHeight: number\n  maxHeight?: number\n}\n\nexport function useAutoResizeTextarea({ minHeight, maxHeight }: UseAutoResizeTextareaProps) {\n  const textareaRef = useRef<HTMLTextAreaElement>(null)\n\n  const adjustHeight = useCallback(\n    (reset?: boolean) => {\n      const textarea = textareaRef.current\n      if (!textarea) return\n\n      if (reset) {\n        textarea.style.height = `${minHeight}px`\n        return\n      }\n\n      // Temporarily shrink to get the right scrollHeight\n      textarea.style.height = `${minHeight}px`\n\n      // Calculate new height\n      const newHeight = Math.max(\n        minHeight,\n        Math.min(textarea.scrollHeight, maxHeight ?? Number.POSITIVE_INFINITY),\n      )\n\n      textarea.style.height = `${newHeight}px`\n    },\n    [minHeight, maxHeight],\n  )\n\n  useEffect(() => {\n    // Set initial height\n    const textarea = textareaRef.current\n    if (textarea) {\n      textarea.style.height = `${minHeight}px`\n    }\n  }, [minHeight])\n\n  // Adjust height on window resize\n  useEffect(() => {\n    const handleResize = () => adjustHeight()\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [adjustHeight])\n\n  return { textareaRef, adjustHeight }\n}\n","'use client'\n\nimport { ChangeEvent, KeyboardEvent, useState, MouseEvent, useMemo, useCallback } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { cn } from 'src/lib/utils'\nimport { Textarea } from 'src/lib/shadcn/ui/textarea'\nimport LazyIcon from 'src/components/atoms/LazyIcon'\n\nimport { useAutoResizeTextarea } from './use-auto-resize-textarea'\n\nconst MIN_HEIGHT = 48\nconst MAX_HEIGHT = 164\n\nexport default function AIInput({\n  onSubmit,\n  disabled,\n  enableTool,\n  enableFile,\n  placeholder,\n  minHeight,\n  maxHeight,\n  className,\n  height,\n  onChange,\n  value,\n}: {\n  className?: string\n  value?: string\n  disabled?: boolean\n  placeholder?: string\n  enableTool?: boolean\n  enableFile?: boolean\n  minHeight?: number\n  maxHeight?: number\n  height?: number\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void\n  onSubmit: (\n    input: string,\n    e: KeyboardEvent<HTMLTextAreaElement> | MouseEvent<HTMLButtonElement>,\n    selectedItem?: string[],\n  ) => Promise<boolean>\n}) {\n  const [loading, setLoading] = useState(false)\n  const [innerValue, setInnerValue] = useState('')\n  const { textareaRef, adjustHeight } = useAutoResizeTextarea({\n    minHeight: minHeight || MIN_HEIGHT,\n    maxHeight: maxHeight || MAX_HEIGHT,\n  })\n  const [showSearch, setShowSearch] = useState(true)\n\n  const handleSubmit = useCallback(\n    async (e: KeyboardEvent<HTMLTextAreaElement> | MouseEvent<HTMLButtonElement>) => {\n      try {\n        setLoading(true)\n        const result = await onSubmit(innerValue, e)\n        if (result) {\n          setInnerValue('')\n        }\n      } finally {\n        setLoading(false)\n      }\n    },\n    [innerValue, onSubmit],\n  )\n\n  const inputStyles = useMemo(() => {\n    return {\n      ...(maxHeight ? { maxHeight: `${maxHeight}px` } : {}),\n      ...(height ? { height: `${height}px` } : {}),\n    }\n  }, [maxHeight, height])\n\n  return (\n    <div className={cn('w-full py-4 max-w-xl', className)}>\n      <div className=\"relative w-full mx-auto\">\n        <div className=\"relative flex flex-col\">\n          <div className=\"overflow-y-auto\" style={inputStyles}>\n            <Textarea\n              id=\"ai-input-04\"\n              value={(onChange ? value : innerValue) || ''}\n              disabled={disabled || loading}\n              placeholder={placeholder}\n              className=\"w-full rounded-xl rounded-b-none px-4 py-3 bg-black/5 dark:bg-white/5 border-none dark:text-white placeholder:text-black/70 dark:placeholder:text-white/70 resize-none focus-visible:ring-0 leading-[1.2]\"\n              ref={textareaRef}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault()\n                  handleSubmit(e)\n                }\n              }}\n              onChange={(e) => {\n                if (!onChange) {\n                  setInnerValue(e.target.value)\n                }\n                adjustHeight()\n                onChange?.(e)\n              }}\n            />\n          </div>\n\n          <div className=\"h-12 bg-black/5 dark:bg-white/5 rounded-b-xl\">\n            <div className=\"absolute left-3 bottom-3 flex items-center gap-2\">\n              {enableFile ? (\n                <label className=\"cursor-pointer rounded-lg p-2 bg-black/5 dark:bg-white/5\">\n                  <input type=\"file\" className=\"hidden\" />\n                  <LazyIcon\n                    name=\"paperclip\"\n                    className=\"w-4 h-4 text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white transition-colors\"\n                  />\n                </label>\n              ) : undefined}\n              {enableTool ? (\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowSearch(!showSearch)\n                  }}\n                  className={cn(\n                    'rounded-full transition-all flex items-center gap-2 px-1.5 py-1 border h-8',\n                    showSearch\n                      ? 'bg-sky-500/15 border-sky-400 text-sky-500'\n                      : 'bg-black/5 dark:bg-white/5 border-transparent text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white',\n                  )}\n                >\n                  <div className=\"w-4 h-4 flex items-center justify-center flex-shrink-0\">\n                    <motion.div\n                      animate={{\n                        rotate: showSearch ? 180 : 0,\n                        scale: showSearch ? 1.1 : 1,\n                      }}\n                      whileHover={{\n                        rotate: showSearch ? 180 : 15,\n                        scale: 1.1,\n                        transition: {\n                          type: 'spring',\n                          stiffness: 300,\n                          damping: 10,\n                        },\n                      }}\n                      transition={{\n                        type: 'spring',\n                        stiffness: 260,\n                        damping: 25,\n                      }}\n                    >\n                      <LazyIcon\n                        name=\"globe\"\n                        className={cn('w-4 h-4', showSearch ? 'text-sky-500' : 'text-inherit')}\n                      />\n                    </motion.div>\n                  </div>\n                  <AnimatePresence>\n                    {showSearch && (\n                      <motion.span\n                        initial={{ width: 0, opacity: 0 }}\n                        animate={{\n                          width: 'auto',\n                          opacity: 1,\n                        }}\n                        exit={{ width: 0, opacity: 0 }}\n                        transition={{ duration: 0.2 }}\n                        className=\"text-sm overflow-hidden whitespace-nowrap text-sky-500 flex-shrink-0\"\n                      >\n                        Search\n                      </motion.span>\n                    )}\n                  </AnimatePresence>\n                </button>\n              ) : undefined}\n            </div>\n\n            <div className=\"absolute right-3 bottom-3\">\n              <button\n                type=\"button\"\n                disabled={disabled || loading}\n                onClick={(e) => {\n                  handleSubmit(e)\n                }}\n                className={cn(\n                  'rounded-lg p-2',\n                  (onChange && value) || innerValue\n                    ? 'bg-sky-500/15 text-sky-500'\n                    : 'bg-black/5 dark:bg-white/5 text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white',\n                )}\n              >\n                <LazyIcon name=\"send\" className=\"w-4 h-4\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport * as PopoverPrimitive from '@radix-ui/react-popover'\n\nimport { cn } from 'src/lib/utils'\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = 'center', sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        'z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        className,\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":["PopChildMeasure","React.Component","prevProps","element","size","PopChild","children","isPresent","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","width","height","top","left","style","jsx","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","useCallback","childId","isComplete","context","useMemo","_","key","React.useEffect","PresenceContext","getChildKey","child","onlyElements","filtered","Children","isValidElement","AnimatePresence","exitBeforeEnter","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","exitingChildren","nextChildren","forceRender","LayoutGroupContext","Fragment","onExit","isEveryExitComplete","isExitComplete","Textarea","React.forwardRef","className","props","cn","useAutoResizeTextarea","minHeight","maxHeight","textareaRef","adjustHeight","reset","textarea","newHeight","useEffect","handleResize","MIN_HEIGHT","MAX_HEIGHT","AIInput","onSubmit","disabled","enableTool","enableFile","placeholder","onChange","value","loading","setLoading","innerValue","setInnerValue","showSearch","setShowSearch","handleSubmit","e","inputStyles","jsxs","LazyIcon","motion","Popover","PopoverPrimitive.Root","PopoverTrigger","PopoverPrimitive.Trigger","PopoverContent","align","sideOffset","PopoverPrimitive.Portal","PopoverPrimitive.Content"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}